[
    {
        "content": "<p>The current version of Lean used on Codewars is 3.7.2 which is about a month or two behind the newest 3.11.0. I've noticed that some newcomers have <a href=\"https://www.codewars.com/kata/5e9900b311efe00001996e26/discuss#5eaf3e629c7ebe0015d57600\">encountered issues with conflicting Lean versions between their local installation and the one used on Codewars</a>.</p>\n<p>In general, how much of an issue is it for Codewars as a training platform for Lean to use an outdated version of Lean + mathlib like v3.7.2? If a noticeable fraction of the Lean community is turned away from Codewars primarily due to the outdated setup then we could request support for the newest version (3.11.0 at the time of writing) and perhaps update our setup every month or two.</p>\n<p>When that happens, we would temporarily have support for two different versions of Lean, e.g. v3.7.2 and v3.110 (+ mathlib), though ideally we would migrate all existing content to v3.11.0 and then remove support for v3.7.2 once that is done.</p>\n<p>What do you think? Is it worth the trouble? Vote <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> if you would like to see Lean v3.11.0 supported on Codewars (+ monthly / bi-monthly version updates) and <span aria-label=\"-1\" class=\"emoji emoji-1f44e\" role=\"img\" title=\"-1\">:-1:</span> otherwise.</p>",
        "id": 197372135,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1589350235
    },
    {
        "content": "<p>I would love to see regular updates to the Lean version. In fact, I have written a kata which I cannot put on Codewars at the moment because the statement requires definitions that were added to mathlib after 3.7.2.</p>",
        "id": 197372270,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1589350440
    },
    {
        "content": "<p><a href=\"https://github.com/codewars/codewars-runner-cli/issues/815\">Codewars/codewars-runner-cli#815</a></p>",
        "id": 197383182,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1589359616
    },
    {
        "content": "<p>what mathlib version is CW currently using?</p>",
        "id": 197414292,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589377476
    },
    {
        "content": "<p>found it: ecdb13831d4671eb304c41e78adb5b280c2fc365</p>",
        "id": 197414409,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589377534
    },
    {
        "content": "<p>Here is <a href=\"https://github.com/codewars/codewars.com/wiki/List-of-Lean-Kata-to-Update\">a list of Lean kata that are currently incompatible with 3.11.0 with mathlib (51e2b4c)</a>, feel free to update any kata you have authored in the list to make them compatible with 3.11.0 with mathlib (51e2b4c).</p>\n<p>See also: <a href=\"https://github.com/codewars/codewars-runner-cli/issues/815#issuecomment-628224563\">Codewars/codewars-runner-cli#815 (comment)</a></p>",
        "id": 197505199,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1589430454
    },
    {
        "content": "<p>Am I misunderstanding this page, or is it asking to make the same solution compatible with both 3.7.2 and 3.11.0 at the same time?</p>",
        "id": 197505583,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1589431080
    },
    {
        "content": "<p>Just making it compatible with 3.11.0 would suffice since 3.7.2 support will be removed once all content is updated</p>",
        "id": 197505819,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1589431521
    },
    {
        "content": "<p>So guess I have to wait until 3.11 becomes available in the version dropdown? For some of my kata there is no way to make them compatible with 3.11 but still compile on 3.7.2</p>",
        "id": 197506421,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1589432469
    },
    {
        "content": "<p>I think keeping a local copy of the 3.11.0-compatible version of each kata would be a good idea until 3.11.0 is released on Codewars.</p>\n<p>Don't worry about making your updates backwards-compatible, you don't need to do that</p>",
        "id": 197508661,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1589436044
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"264734\">Donald Sebastian Leung</span> <a href=\"#narrow/stream/238266-Codewars/topic/Updating.20Lean.20support.20to.20v3.2E11.2E0.3F/near/197505199\">said</a>:</p>\n<blockquote>\n<p>Here is <a href=\"https://github.com/codewars/codewars.com/wiki/List-of-Lean-Kata-to-Update\">a list of Lean kata that are currently incompatible with 3.11.0 with mathlib (51e2b4c)</a>, feel free to update any kata you have authored in the list to make them compatible with 3.11.0 with mathlib (51e2b4c).</p>\n<p>See also: <a href=\"https://github.com/codewars/codewars-runner-cli/issues/815#issuecomment-628224563\">Codewars/codewars-runner-cli#815 (comment)</a></p>\n</blockquote>\n<p>By the way, once you have upgraded each kata to use 3.11.0 and successfully published the changes on Codewars then please don't forget to remove the updated kata from the aforementioned list for bookkeeping purposes (the community wiki should be editable by all).</p>",
        "id": 197508748,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1589436216
    },
    {
        "content": "<p>why does javascript get to have 5 versions?</p>",
        "id": 197510623,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589438205
    },
    {
        "content": "<p>I don't exactly understand what I'm supposed to do</p>",
        "id": 197512152,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589439525
    },
    {
        "content": "<p>are you saying that we need to clear the list before we can have 3.11?</p>",
        "id": 197512189,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589439582
    },
    {
        "content": "<p>or that we need to clear the list right after we have 3.11 so that in the future we can have newer versions?</p>",
        "id": 197512248,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589439605
    },
    {
        "content": "<blockquote>\n<p>are you saying that we need to clear the list before we can have 3.11?</p>\n<p>or that we need to clear the list right after we have 3.11 so that in the future we can have newer versions?</p>\n</blockquote>\n<p>I think kazk means the latter. Basically, once we have 3.11 support, we should try to update as much of our existing content to 3.11 ASAP so we can drop 3.7.</p>\n<blockquote>\n<p>why does javascript get to have 5 versions?</p>\n</blockquote>\n<p>Codewars was a <a href=\"https://en.wikipedia.org/wiki/Big_ball_of_mud\">big ball of mud</a> until the past 1.5 years or so (when kazk took over the codebase) so it naturally accumulated tons of legacy content in JS and is no longer feasible to update them all, though there have been plans recently to at least try to update some of them and retire others. In contrast, Lean has just been recently supported and we don't have nearly as much content compared to JS / Python / Java or even Haskell so we can afford to update our content regularly and drop support for older versions.</p>",
        "id": 197521338,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1589443629
    },
    {
        "content": "<p>3.11.0 51e2b4c is now available!</p>",
        "id": 197780998,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589612026
    },
    {
        "content": "<p><a href=\"https://github.com/codewars/codewars.com/wiki/List-of-Lean-Kata-to-Update\">7 Kata left to update</a>, thanks to all of you who have taken the time to update your kata to make them compatible with 3.11.0.</p>\n<p>Once we clear this list, <a href=\"https://github.com/codewars/codewars-runner-cli/issues/815#issuecomment-629029307\">Lean support will leave the Beta phase</a></p>",
        "id": 197802539,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1589645271
    },
    {
        "content": "<p>I've just finished a bunch of marking; I'll do mine now if I can figure out what to do</p>",
        "id": 197803065,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589646041
    },
    {
        "content": "<p><span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> <code>zmodp</code> seems to have disappeared :-/ (not sad to see it go, but it means there's work to do)</p>",
        "id": 197804875,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589648704
    },
    {
        "content": "<p>Both of mine should be done!</p>",
        "id": 197805067,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1589648944
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/238266-Codewars/topic/Updating.20Lean.20support.20to.20v3.2E11.2E0.3F/near/197804875\">said</a>:</p>\n<blockquote>\n<p><span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> <code>zmodp</code> seems to have disappeared :-/ (not sad to see it go, but it means there's work to do)</p>\n</blockquote>\n<p>Just remove the <code>p</code> and add <code>[fact p.prime]</code> to your hypotheses.</p>",
        "id": 197807113,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589651825
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">eq_iff_modeq_int</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">â„•</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">â„¤</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">zmod</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">â†”</span> <span class=\"n\">a</span> <span class=\"bp\">â‰¡</span> <span class=\"n\">b</span> <span class=\"o\">[</span><span class=\"n\">ZMOD</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">â„•</span><span class=\"o\">)]</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">eq_zero_iff_dvd_int</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">â„•</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">â„¤</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">zmod</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">â†”</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">â„¤</span><span class=\"o\">)</span> <span class=\"err\">âˆ£</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n</code></pre></div>",
        "id": 197807638,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589652505
    },
    {
        "content": "<p>These both seem to have disappeared</p>",
        "id": 197807642,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589652520
    },
    {
        "content": "<p>I don't know how to get <code>domain (zmod p)</code> in the sense that I no longer know how to include the hypothesis that p is prime. There is this <code>fact</code> and the typeclass and I don't really know what I'm doing.</p>",
        "id": 197807784,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589652795
    },
    {
        "content": "<p>I need to go and do other things. I'm sorry, this kata is far harder to fix than I expected</p>",
        "id": 197807841,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589652856
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I understand that you need to do other things, but with</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">fact</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">prime</span><span class=\"o\">]</span>\n</code></pre></div>\n\n\n<p>you will automatically get a <code>field</code> instance on <code>zmod p</code>.</p>",
        "id": 197808080,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589653224
    },
    {
        "content": "<p>So this is the canonical way to make p a prime now?</p>",
        "id": 197808196,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589653440
    },
    {
        "content": "<p>Most of the time, yes</p>",
        "id": 197808428,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589653794
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 197809223,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589655083
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 197810530,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589656769
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264734\">@Donald Sebastian Leung</span> Every group of order 4 is commutative <span aria-label=\"check mark\" class=\"emoji emoji-2714\" role=\"img\" title=\"check mark\">:check_mark:</span></p>",
        "id": 197837511,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589703972
    },
    {
        "content": "<p>So now five to go?</p>",
        "id": 197837524,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589704016
    },
    {
        "content": "<p>Sum of Multiples of 3 or 5 Below A Given Number <span aria-label=\"check mark\" class=\"emoji emoji-2714\" role=\"img\" title=\"check mark\">:check_mark:</span></p>",
        "id": 197837887,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589704636
    },
    {
        "content": "<p>Order-preserving bijection from rationals to non-zero rationals <span aria-label=\"check mark\" class=\"emoji emoji-2714\" role=\"img\" title=\"check mark\">:check_mark:</span></p>",
        "id": 197838127,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589705092
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/238266-Codewars/topic/Updating.20Lean.20support.20to.20v3.2E11.2E0.3F/near/197837524\">said</a>:</p>\n<blockquote>\n<p>So now five to go?</p>\n</blockquote>\n<p>1 left <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> \"Real Chebyshev\" fails to be updated due to timeouts <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 197845455,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1589716679
    }
]