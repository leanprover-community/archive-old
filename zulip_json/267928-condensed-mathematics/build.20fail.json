[
    {
        "content": "<p>I have errors in <code>for_mathlib/sheafification_mono.lean</code>. Is someone wotking on that file?</p>",
        "id": 284590961,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1654078413
    },
    {
        "content": "<p>Not me. I also have errors</p>",
        "id": 284594279,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654080714
    },
    {
        "content": "<p>I'll bisect. The build seems to have been broken for quite a few commits</p>",
        "id": 284595117,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654081170
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">fb0f7fe681ccbe340e6133de1503ab88af9b9d3e</span> <span class=\"n\">is</span> <span class=\"n\">the</span> <span class=\"n\">first</span> <span class=\"n\">bad</span> <span class=\"n\">commit</span>\n<span class=\"n\">commit</span> <span class=\"n\">fb0f7fe681ccbe340e6133de1503ab88af9b9d3e</span>\n<span class=\"n\">Author</span><span class=\"o\">:</span> <span class=\"n\">Adam</span> <span class=\"n\">Topaz</span> <span class=\"bp\">&lt;</span><span class=\"n\">github</span><span class=\"bp\">@</span><span class=\"n\">adamtopaz.com</span><span class=\"bp\">&gt;</span>\n<span class=\"n\">Date</span><span class=\"o\">:</span>   <span class=\"n\">Tue</span> <span class=\"n\">May</span> <span class=\"mi\">31</span> <span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">04</span><span class=\"o\">:</span><span class=\"mi\">11</span> <span class=\"mi\">2022</span> <span class=\"bp\">-</span><span class=\"mi\">0400</span>\n\n    <span class=\"n\">wip</span>\n\n <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">condensed</span><span class=\"bp\">/</span><span class=\"n\">acyclic.lean</span>                         <span class=\"bp\">|</span> <span class=\"mi\">50</span> <span class=\"bp\">+++++++++++++++++</span><span class=\"c1\">-----</span>\n <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">condensed</span><span class=\"bp\">/</span><span class=\"n\">adjunctions.lean</span>                     <span class=\"bp\">|</span>  <span class=\"mi\">4</span> <span class=\"bp\">++</span>\n <span class=\"bp\">.../</span><span class=\"n\">abelian_sheaves</span><span class=\"bp\">/</span><span class=\"n\">functor_category.lean</span>          <span class=\"bp\">|</span>  <span class=\"mi\">2</span> <span class=\"bp\">+-</span>\n <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">for_mathlib</span><span class=\"bp\">/</span><span class=\"n\">chain_complex_exact.lean</span>           <span class=\"bp\">|</span>  <span class=\"mi\">5</span> <span class=\"bp\">+++</span>\n <span class=\"mi\">4</span> <span class=\"n\">files</span> <span class=\"n\">changed</span><span class=\"o\">,</span> <span class=\"mi\">49</span> <span class=\"n\">insertions</span><span class=\"o\">(</span><span class=\"bp\">+</span><span class=\"o\">),</span> <span class=\"mi\">12</span> <span class=\"n\">deletions</span><span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 284596655,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654082159
    },
    {
        "content": "<p>I've fixed one error -- let's see how things go.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code> <span class=\"kd\">noncomputable</span> <span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">abelian</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"bp\">ᵒᵖ</span> <span class=\"bp\">⥤</span> <span class=\"n\">Ab.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">})</span> <span class=\"o\">:=</span>\n<span class=\"bp\">-</span><span class=\"n\">functor.abelian.</span><span class=\"o\">{(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">u</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)}</span>\n<span class=\"bp\">+</span><span class=\"n\">category_theory.functor_category_is_abelian.</span><span class=\"o\">{(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">u</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)}</span>\n</code></pre></div>",
        "id": 284597124,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654082448
    },
    {
        "content": "<p>Might be related to this diff in Adam's commit:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">+</span><span class=\"c1\">-- ANNOYING!</span>\n<span class=\"bp\">+</span><span class=\"kd\">instance</span> <span class=\"n\">presheaf_abelian</span> <span class=\"o\">:</span> <span class=\"n\">abelian</span> <span class=\"o\">(</span><span class=\"n\">Profinite.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span><span class=\"bp\">ᵒᵖ</span> <span class=\"bp\">⥤</span> <span class=\"n\">Ab.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">})</span> <span class=\"o\">:=</span>\n<span class=\"bp\">+</span><span class=\"n\">category_theory.functor_category_is_abelian.</span><span class=\"o\">{(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">u</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)}</span>\n</code></pre></div>",
        "id": 284597398,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654082643
    },
    {
        "content": "<p>Hmm, seems like you made some progress. But I'm on a train, and my laptop isn't able to do speedy builds. I still get</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">liquid</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">condensed</span><span class=\"bp\">/</span><span class=\"n\">projective_resolution_module.lean</span><span class=\"o\">:</span> <span class=\"n\">parsing</span> <span class=\"n\">at</span> <span class=\"n\">line</span> <span class=\"mi\">133</span><span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"n\">exited</span> <span class=\"k\">with</span> <span class=\"n\">status</span> <span class=\"mi\">137</span>\n</code></pre></div>",
        "id": 284603822,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1654086593
    },
    {
        "content": "<p>That's just some out of memory error, right? That file is compiling for me on master. I think I've fixed the build. Edit: yeah, master now compiles for me.</p>",
        "id": 284607639,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654088543
    },
    {
        "content": "<p>Ok, so my laptop is officially ultra-crappy</p>",
        "id": 284607937,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1654088669
    },
    {
        "content": "<p>Sorry :( I renamed an iinstance and forgot to fix it elsewhhere...</p>",
        "id": 284607939,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654088669
    },
    {
        "content": "<p>Thanks for fiixing the build Kevin</p>",
        "id": 284607963,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654088682
    },
    {
        "content": "<p>If I build and get a 137, I just build again, it often starts at the place it got stuck and just continues. I see this a lot on one of my computers.</p>",
        "id": 284608073,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654088754
    },
    {
        "content": "<p>these fancy universe hacks are really messing with typeclass resolution. Is there something that can be done about that?</p>",
        "id": 284608308,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654088867
    }
]