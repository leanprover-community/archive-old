[
    {
        "content": "<p>With the new approach to complexes, we can have complexes indexed by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">\\N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">N</span></span></span></span></span>. This is closer to the PDF, and it saves us a boatload of cruft about dealing with objects in negative degrees that are morally all the zero object.</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code> src/normed_snake.lean                            | 110 +++++++++++-----------\n src/normed_spectral.lean                         | 108 +++++++++-------------\n src/pseudo_normed_group/system_of_complexes.lean | 110 ++++++++++------------\n src/system_of_complexes/basic.lean               |  89 +++++++++---------\n src/system_of_complexes/completion.lean          |  70 +++++++-------\n src/system_of_complexes/double.lean              |  66 +++++++------\n src/system_of_complexes/soft_truncation.lean     | 447 ----------------------------------------------------------------------------------------\n src/system_of_complexes/truncate.lean            | 238 +++++++++++++++++++++++++++++++++++++++++++++++\n 8 files changed, 503 insertions(+), 735 deletions(-)\n</code></pre></div>",
        "id": 230021355,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552461
    },
    {
        "content": "<p>I refactored everything on the branch <code>refactor-Z-to-N</code></p>",
        "id": 230021377,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552484
    },
    {
        "content": "<p>As you can see, we can throw away 200 lines of code</p>",
        "id": 230021395,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552500
    },
    {
        "content": "<p>And I expect more savings in the future</p>",
        "id": 230021414,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552508
    },
    {
        "content": "<p>The refactor was pretty straightforward.</p>",
        "id": 230021433,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552519
    },
    {
        "content": "<p>Why isn't it in master then?</p>",
        "id": 230021485,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1615552549
    },
    {
        "content": "<p>Because I just finished (-;</p>",
        "id": 230021493,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552557
    },
    {
        "content": "<p>I am about to merge it into master</p>",
        "id": 230021540,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552565
    },
    {
        "content": "<p>done</p>",
        "id": 230021582,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552582
    },
    {
        "content": "<p>In particular, in the definition of the system of complexes attached to <code>Mbar r' S</code>, we no longer have ugly <code>int.extend_from_nat</code> etc...</p>",
        "id": 230021625,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552616
    },
    {
        "content": "<p>I'm about to close my email client and switch off my phone, and try to have a Lean afternoon. Do you have a target for me?</p>",
        "id": 230021661,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1615552632
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> certainly!</p>",
        "id": 230021679,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552647
    },
    {
        "content": "<p>Should I  work on </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">completion</span> <span class=\"o\">(</span><span class=\"n\">hC</span> <span class=\"o\">:</span> <span class=\"n\">C.is_weak_bounded_exact</span> <span class=\"n\">k</span> <span class=\"n\">K</span> <span class=\"n\">m</span> <span class=\"n\">c₀</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">C.completion.is_weak_bounded_exact</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">K</span> <span class=\"n\">m</span> <span class=\"n\">c₀</span>\n</code></pre></div>",
        "id": 230021705,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1615552670
    },
    {
        "content": "<p>There are two sorry's in <code>system_of_complexes/truncate.lean</code></p>",
        "id": 230021707,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552671
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> if you want to, you can work on that completion thing, but I don't think it is very urgent.</p>",
        "id": 230021787,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552695
    },
    {
        "content": "<p>You proved the <code>strong_of_complete</code> lemma, which is the important bit. I don't think we actually need those other lemmas</p>",
        "id": 230021912,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552774
    },
    {
        "content": "<p>Because in our final use case, everything is already complete. So we never have to make a completion step.</p>",
        "id": 230021941,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615552799
    },
    {
        "content": "<p>Why did we discuss this lemma then?</p>",
        "id": 230022233,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1615552927
    },
    {
        "content": "<p>I guess it's more of a sanity check, in case we want to apply this to noncomplete systems in a theoretical other application. But we don't need it for <code>first_target</code> I think</p>",
        "id": 230022612,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615553108
    },
    {
        "content": "<p>If I remember correctly Peter sketched these arguments as a possible solution to a small problem in the normed snake lemma and I put them in the blueprint. I didn't now (and I still don't) the big picture, so it's very possible that in our case everything is already complete</p>",
        "id": 230022831,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1615553202
    },
    {
        "content": "<p>There was also something about optimizing the constants</p>",
        "id": 230022886,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1615553230
    },
    {
        "content": "<p>I'll work on <code>is_weak_bounded_exact_of_truncate</code> instead.</p>",
        "id": 230026050,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1615554752
    }
]