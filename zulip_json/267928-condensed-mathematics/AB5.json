[
    {
        "content": "<p>Any takers for</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Axiom AB5 for `AddCommGroup`</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">exact_colim_map_iff_of_is_filtered</span>\n  <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"n\">G</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"bp\">⥤</span> <span class=\"n\">AddCommGroup.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">})</span> <span class=\"o\">(</span><span class=\"n\">η</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"bp\">⟶</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">⟶</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">limits.colim_map</span> <span class=\"n\">η</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">limits.colim_map</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">η.app</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">γ.app</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>??? If so, take a look at <code>for_mathlib/exact_filtered_colimits</code></p>",
        "id": 285447529,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654719450
    },
    {
        "content": "<p>(<code>condensed/ab5</code> has a proof of ab5 for condensed ab using that theorem)</p>",
        "id": 285450863,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654721122
    },
    {
        "content": "<p>iff not if?</p>",
        "id": 285459982,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1654726341
    },
    {
        "content": "<p>Oops</p>",
        "id": 285460549,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654726734
    },
    {
        "content": "<p>fixed</p>",
        "id": 285461123,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654727111
    },
    {
        "content": "<p>From <code>for_mathlib/exact_filtered_colimits</code></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Axiom AB5 for `AddCommGroup`</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">exact_colim_of_exact_of_is_filtered</span>\n  <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"n\">G</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"bp\">⥤</span> <span class=\"n\">AddCommGroup.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">})</span> <span class=\"o\">(</span><span class=\"n\">η</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"bp\">⟶</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">⟶</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">η.app</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">γ.app</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"bp\">→</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">limits.colim_map</span> <span class=\"n\">η</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">limits.colim_map</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 285461270,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654727211
    },
    {
        "content": "<p>The condensed proof is fixed as well.</p>",
        "id": 285461280,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654727221
    },
    {
        "content": "<p>Alright I was embarrassed enough that I had to prove <code>exact_colim_of_exact_of_is_filtered</code>...</p>",
        "id": 285467684,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654732009
    }
]