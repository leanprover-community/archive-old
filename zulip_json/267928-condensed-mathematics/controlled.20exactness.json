[
    {
        "content": "<p>In case anyone else is tempted to work on this: tonight I started working on <a href=\"https://leanprover-community.github.io/liquid/index.html#prop:completeexact\">https://leanprover-community.github.io/liquid/index.html#prop:completeexact</a>. There is no issue, I simply need to find a bit more time to finish it.</p>",
        "id": 230270390,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1615758454
    },
    {
        "content": "<p>I'm returning to this today. I have a question about code that should be somewhere. I start with <code>f : normed_group_hom G H</code>. Where is <code>f.completion : normed_group_hom (completion G) (completion H)</code>? It has to be somewhere, right?</p>",
        "id": 230903748,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616087781
    },
    {
        "content": "<p>Let me ping <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>, although it's probably dinner time on his planet.</p>",
        "id": 230903813,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616087813
    },
    {
        "content": "<p>Dinner is just over (-;</p>",
        "id": 230906432,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616088737
    },
    {
        "content": "<p>I have to disappoint you: <code>locally_constant/Vhat.lean</code></p>",
        "id": 230906652,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616088817
    },
    {
        "content": "<p>It's done directly in the functor</p>",
        "id": 230906680,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616088826
    },
    {
        "content": "<p>But it would be good to factor that out of the definition of <code>Completion</code></p>",
        "id": 230906719,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616088839
    },
    {
        "content": "<p>This is what I feared.</p>",
        "id": 230907043,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616088933
    },
    {
        "content": "<p>What about the intended use of this exactness lemma? Will you want this for homs in this category or <code>normed_group_hom G H</code>?</p>",
        "id": 230907248,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616088998
    },
    {
        "content": "<p>My expectation is that we will be firmly in the category world by then. We're talking about 8.17, right?</p>",
        "id": 230907745,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616089191
    },
    {
        "content": "<p>We are talking about <a href=\"https://leanprover-community.github.io/liquid/sect0005.html#prop:completeexact\">https://leanprover-community.github.io/liquid/sect0005.html#prop:completeexact</a></p>",
        "id": 230907928,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616089252
    },
    {
        "content": "<p>Actually even if the application are in category world, the proof still discusses elements of normed groups (can you believe that?).</p>",
        "id": 230908060,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616089310
    },
    {
        "content": "<p>I certainly can believe that (-;</p>",
        "id": 230908441,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616089456
    },
    {
        "content": "<p>Note that even if you use the category lib, it's still quite convenient to work with elements</p>",
        "id": 230908516,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616089494
    },
    {
        "content": "<p>But feel free to work unbundled. I guess it makes sense to do that</p>",
        "id": 230908546,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616089509
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> while you're unbundling, it might be worthwhile to unbundle <code>Completion.lift</code> and the associated lemmas as well.</p>",
        "id": 230910183,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1616090096
    },
    {
        "content": "<p>I actually need something I don't know how to prove on paper. Given a morphism of normed groups <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>G</mi><mo>→</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">f : G \\to H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span>, consider its completion <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>f</mi><mo>^</mo></mover><mo>:</mo><mover accent=\"true\"><mi>G</mi><mo>^</mo></mover><mo>→</mo><mover accent=\"true\"><mi>H</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat f : \\hat G \\to \\hat H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1523199999999998em;vertical-align:-0.19444em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9578799999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span><span style=\"top:-3.26344em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.08332999999999999em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9467699999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">G</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9467699999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span></span></span>. Is it always true that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ker</mi><mo>⁡</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">\\ker f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mop\">ker</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is dense in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ker</mi><mo>⁡</mo><mover accent=\"true\"><mi>f</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\ker \\hat f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1523199999999998em;vertical-align:-0.19444em;\"></span><span class=\"mop\">ker</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9578799999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span><span style=\"top:-3.26344em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.08332999999999999em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span></span></span></span>?</p>",
        "id": 230939012,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616102144
    },
    {
        "content": "<p>Universal property of completion?</p>",
        "id": 230939178,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1616102221
    },
    {
        "content": "<p>The only thing that looks formal to me is the inclusion <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mrow><mi>ker</mi><mo>⁡</mo><mi>f</mi></mrow><mo stretchy=\"true\">‾</mo></mover><mo>⊂</mo><mi>ker</mi><mo>⁡</mo><mover accent=\"true\"><mi>f</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\overline{\\ker f} \\subset \\ker \\hat f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.08888em;vertical-align:-0.19444em;\"></span><span class=\"mord overline\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.89444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\">ker</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span><span style=\"top:-3.81444em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1523199999999998em;vertical-align:-0.19444em;\"></span><span class=\"mop\">ker</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9578799999999998em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span><span style=\"top:-3.26344em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.08332999999999999em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span></span></span></span></p>",
        "id": 230939335,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616102299
    },
    {
        "content": "<p>Are these normed groups or one of these new pseudonormed groups?</p>",
        "id": 230939694,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1616102481
    },
    {
        "content": "<p>Let's say normed groups for now.</p>",
        "id": 230939741,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616102508
    },
    {
        "content": "<p>Hmm... yeah it's tricky even in this case. I guess we can reduce to the case where <code>f</code> is injective, and then the goal is to show that the completion is injective as well (maybe it's not true?)</p>",
        "id": 230939906,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1616102584
    },
    {
        "content": "<p>If it's not true then I don't know how to prove the lemma from this thread.</p>",
        "id": 230940447,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616102856
    },
    {
        "content": "<p>I don't think it can be true. Take <code>H</code> an infinite-dimensional Hilbert space, <code>G</code> a dense subspace, <code>x</code> a vector not in <code>G</code>, and <code>f</code> the orthogonal projection on the orthogonal of <code>x</code>. Then <code>f</code> is injective on <code>G</code>, but it is not injective on its completion <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>G</mi><mo>^</mo></mover><mo>=</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">\\hat G = H</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9467699999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">G</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span>.</p>",
        "id": 230941490,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1616103347
    },
    {
        "content": "<p>I was thinking of the map</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munderover><mo>⨁</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant=\"normal\">∞</mi></munderover><mi mathvariant=\"double-struck\">R</mi><mo>→</mo><munderover><mo>⨁</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant=\"normal\">∞</mi></munderover><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\bigoplus_{i = 1}^\\infty \\mathbb{R} \\to \\bigoplus_{i = 1}^\\infty \\mathbb{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">⨁</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">⨁</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span></span></span></span></span></p>\n<p>which on the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>-th component acts by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>↦</mo><mi>x</mi><mi mathvariant=\"normal\">/</mi><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">x \\mapsto x/2^i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.522em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0746639999999998em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 230941639,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1616103424
    },
    {
        "content": "<p>Just to be sure: when you say morphism of normed groups, should it preserve the norm (then my counterexample is not a counterexample), or just bounded?</p>",
        "id": 230941662,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1616103441
    },
    {
        "content": "<p>I was also getting worried.</p>",
        "id": 230941671,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616103454
    },
    {
        "content": "<p>I meant bounded.</p>",
        "id": 230941675,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616103460
    },
    {
        "content": "<p>I was probably too optimistic when interpreting what Peter wrote. I'll need to reconsider my interpretation.</p>",
        "id": 230941831,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616103550
    },
    {
        "content": "<p>I'm back :-). Actually, I don't think I claimed that?</p>",
        "id": 230943818,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1616104659
    },
    {
        "content": "<p>Or did I? ...</p>",
        "id": 230943886,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1616104688
    },
    {
        "content": "<p>This is why I wrote \"interpreting\".</p>",
        "id": 230943889,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616104689
    },
    {
        "content": "<p>Let me check :-)</p>",
        "id": 230943910,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1616104698
    },
    {
        "content": "<p>I'm looking at Proposition 8.17 of Analytic.pdf</p>",
        "id": 230943927,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616104709
    },
    {
        "content": "<p>OK, I think that argument is nonsense, you are right... <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span></p>",
        "id": 230944025,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1616104764
    },
    {
        "content": "<p>You start with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>∈</mo><mover accent=\"true\"><mi>M</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">m \\in \\hat M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9467699999999999em;vertical-align:0em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.16666em;\"><span class=\"mord\">^</span></span></span></span></span></span></span></span></span></span>, presumably in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ker</mi><mo>⁡</mo><mover accent=\"true\"><mi>g</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\ker \\hat g</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mop\">ker</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span></span></span></span>, and write it as an infinite sum of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">m_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. I thought the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">m_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> were meant to be in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ker</mi><mo>⁡</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">\\ker g</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mop\">ker</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>.</p>",
        "id": 230944051,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616104776
    },
    {
        "content": "<p>This seems like the only reasonable interpretation</p>",
        "id": 230944080,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1616104795
    },
    {
        "content": "<p>That's what I thought until I tried to formalize it...</p>",
        "id": 230944163,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616104814
    },
    {
        "content": "<p>OK, I'll fix this. If one has a long exact sequence with such bounds, the claim is definitely correct</p>",
        "id": 230944249,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1616104854
    },
    {
        "content": "<p>I tried to write a better \"local\" version, but it seems I screwed this up</p>",
        "id": 230944298,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1616104871
    },
    {
        "content": "<p>Ok, I'll wait for the fix then. This is good timing actually, I should go to bed.</p>",
        "id": 230944597,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616105007
    },
    {
        "content": "<p>(I don't mean I'm expecting you to fix while I sleep, I have many other things to do tomorrow <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> )</p>",
        "id": 230944775,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616105088
    },
    {
        "content": "<p>No worries, I will sleep better when it's fixed :-)</p>",
        "id": 230945040,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1616105214
    },
    {
        "content": "<p>Good night!</p>",
        "id": 230945061,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1616105228
    },
    {
        "content": "<p>Good night!</p>",
        "id": 230945428,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616105406
    },
    {
        "content": "<p>OK, the corrected version is on my webpage</p>",
        "id": 230948822,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1616107594
    },
    {
        "content": "<p>Sorry! And thanks of course for catching the mistake :-)</p>",
        "id": 230948841,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1616107611
    },
    {
        "content": "<p>This fix is now <a href=\"https://github.com/leanprover-community/lean-liquid/blob/controlled_ext_wip/src/for_mathlib/sequences.lean#L528-L533\">lean approved</a>.</p>",
        "id": 231171445,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616274212
    },
    {
        "content": "<p>The statement doesn't use a four terms exact sequence, I'm simply stating the extra assumption as something about the range of the relevant map, not the kernel of the next one.</p>",
        "id": 231171513,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616274276
    },
    {
        "content": "<p>No new surprise in the proof, only the usual stuff when formalizing. For instance the proof that is written doesn't work when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\hat y = 0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.19444em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>, because you want a sequence of <em>positive</em> numbers <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ε</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\varepsilon_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> in the sentence </p>\n<blockquote>\n<p>Taking the sequence of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ϵ</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\epsilon_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>'s sufficiently small so that  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∑</mo><mrow><mi>i</mi><mo>&gt;</mo><mn>0</mn></mrow></msub><msub><mi>ϵ</mi><mi>i</mi></msub><mo>≤</mo><mfrac><mrow><mtext>‖</mtext><mover accent=\"true\"><mi>y</mi><mo stretchy=\"true\">^</mo></mover><mtext>‖</mtext></mrow><mrow><mn>2</mn><mi>C</mi></mrow></mfrac><mi>ϵ</mi></mrow><annotation encoding=\"application/x-tex\">\\sum_{i&gt;0} \\epsilon_i\\leq \\tfrac {‖\\widehat{y}‖}{2C} \\epsilon</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.07708em;vertical-align:-0.32708000000000004em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16195399999999993em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">&gt;</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32708000000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2605em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9155em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.446108em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">‖</span><span class=\"mord accent mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.67056em;\"><span style=\"top:-2.7em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span></span></span><span class=\"svg-align\" style=\"width:calc(100% - 0.11112em);margin-left:0.11112em;top:-3.13056em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mtight\" style=\"height:0.24em;\"><svg height=\"0.24em\" preserveAspectRatio=\"none\" viewBox=\"0 0 1062 239\" width=\"100%\"><path d=\"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22 c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\"></path></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span><span class=\"mord mtight\">‖</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">ϵ</span></span></span></span></p>\n</blockquote>",
        "id": 231171822,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616274617
    },
    {
        "content": "<p>Great! Thanks for doing this.</p>",
        "id": 231172021,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616274864
    },
    {
        "content": "<p>I'll now split this into different files in preparation for mathlib PRs and merge to master. The whole thing is currently 600 lines long but a lot of preparation should go to mathlib.</p>",
        "id": 231172147,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616275028
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Once you are done: please tick off your issue on <a href=\"https://github.com/leanprover-community/lean-liquid/projects/1\">https://github.com/leanprover-community/lean-liquid/projects/1</a></p>",
        "id": 231172967,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616276038
    },
    {
        "content": "<p>I now have a working definition of right and left Kan extensions in the following file:<br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/AT_kan_ext/src/category_theory/limits/kan_extension.lean\">https://github.com/leanprover-community/mathlib/blob/AT_kan_ext/src/category_theory/limits/kan_extension.lean</a></p>\n<p>I'm a little annoyed that I couldn't just write out the term on line 278. Looks like <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> had a similar issue in his code (which this builds on).</p>",
        "id": 231315822,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1616422175
    },
    {
        "content": "<p>NIce! Is this good enough to get the restriction you wanted for finite limits?</p>",
        "id": 231339658,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1616429939
    },
    {
        "content": "<p>I ticked it off. Now I have 10 mathlib PRs to write, but at least I mostly decided where I was going to put stuff.</p>",
        "id": 231393202,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1616451342
    }
]