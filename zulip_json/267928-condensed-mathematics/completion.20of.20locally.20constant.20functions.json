[
    {
        "content": "<p>At some point we will need to know that continuous functions <code>S → V</code> for profinite <code>S</code> and a complete normed group <code>V</code> is isomorphic to the completion of <code>locally_constant S V</code> (wrt the sup norm).</p>",
        "id": 278306733,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1649425869
    },
    {
        "content": "<p>This seems to me like a self-contained gadget that doesn't need any category theory or homological algebra.<br>\nSo if you've been wanting to contribute, but don't like categories, this might be for you.</p>",
        "id": 278306899,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1649425924
    },
    {
        "content": "<p>A precise statement is now located at: <a href=\"https://github.com/leanprover-community/lean-liquid/blob/master/src/free_pfpng/acyclic.lean#L39L41\">https://github.com/leanprover-community/lean-liquid/blob/master/src/free_pfpng/acyclic.lean#L39L41</a></p>",
        "id": 278836967,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1649860534
    },
    {
        "content": "<p>It's wrapped in a thin layer of category theory. If that's a problem, I can help strip it away.</p>",
        "id": 278837022,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1649860562
    },
    {
        "content": "<p>I moved the statement to a new file <code>src/normed_to_cond</code>.</p>",
        "id": 278842445,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1649862919
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250372\">@Ashvni Narayanan</span> do you have something like this already?</p>",
        "id": 278850625,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649866280
    },
    {
        "content": "<p><code>src/normed_to_cond</code> now contains a skeleton that is basically category_theory-free</p>",
        "id": 278872060,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1649875528
    },
    {
        "content": "<p>The only thing left in this file is the following goal:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">S</span><span class=\"o\">:</span> <span class=\"n\">Profinite.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span>\n<span class=\"n\">V'</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n<span class=\"n\">_inst_3</span><span class=\"o\">:</span> <span class=\"n\">normed_group.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"n\">V'</span>\n<span class=\"n\">_inst_4</span><span class=\"o\">:</span> <span class=\"n\">complete_space.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"n\">V'</span>\n<span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">(</span><span class=\"bp\">↥</span><span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">V'</span><span class=\"o\">)</span>\n<span class=\"n\">ε</span><span class=\"o\">:</span> <span class=\"n\">ℝ</span>\n<span class=\"n\">hε</span><span class=\"o\">:</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span>\n<span class=\"bp\">⊢</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">locally_constant.</span><span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"bp\">↥</span><span class=\"n\">S</span> <span class=\"n\">V'</span><span class=\"o\">),</span> <span class=\"n\">dist.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"n\">f</span> <span class=\"n\">y.to_continuous_map</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span>\n</code></pre></div>",
        "id": 279154423,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1650095259
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"250372\">@Ashvni Narayanan</span> did this over at <a href=\"https://github.com/leanprover-community/mathlib/blob/f2fd1fb4507431cf2f2a873db4b97d360633fb69/src/number_theory/L_functions.lean#L453\">https://github.com/leanprover-community/mathlib/blob/f2fd1fb4507431cf2f2a873db4b97d360633fb69/src/number_theory/L_functions.lean#L453</a> !</p>",
        "id": 279265093,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1650266556
    },
    {
        "content": "<p>I copied the file with Ashvni's permission, and made a few little tweaks. This sorry is now gone as well.</p>",
        "id": 279379051,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1650357448
    }
]