[
    {
        "content": "<p>Breaking change: all occurences of <code>Mbar</code> in filenames and Lean code have been changed to <code>Lbar</code>.</p>",
        "id": 271400636,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644482264
    },
    {
        "content": "<p>The reason: <span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> introduced the notation <code>ℒ r S</code> for <code>laurent_measures r S</code>. This is denoted <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">M</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">Z</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo><msub><mo stretchy=\"false\">)</mo><mi>r</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">ℳ(S, ℤ((T))_r)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathscr\" style=\"margin-right:0.15981em;\">M</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord amsrm\">Z</span><span class=\"mopen\">((</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> in Analytic.pdf. But I like the short <code>ℒ</code> notation a lot. And <code>Lbar</code> is a quotient of this space. It also emphasises that it is two steps away from <code>real_measures p S</code> which is denoted <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"script\">M</mi><mi>p</mi></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">ℳ_p(S)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathscr\" style=\"margin-right:0.15981em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1598em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span></span></span></span> in Analytic.pdf.</p>",
        "id": 271400838,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644482393
    },
    {
        "content": "<p>I will push the same change to the blueprint once CI finishes compiling LTE</p>",
        "id": 271402000,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644483134
    },
    {
        "content": "<p>Nice!</p>\n<p>By the way, isn't one practical reason to not overdo abbreviations that search-and-replace is much safer on longer names?</p>",
        "id": 271406208,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644485694
    },
    {
        "content": "<p>I guess that's true.</p>",
        "id": 271406251,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644485727
    },
    {
        "content": "<p>Yes, it seems a good point.</p>",
        "id": 271406259,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1644485735
    },
    {
        "content": "<p>In Lean 4 it will be possible to say \"take this Lean name <code>foo</code>, and rename it to <code>bar</code> in the entire project\"</p>",
        "id": 271406299,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644485760
    },
    {
        "content": "<p>Wow</p>",
        "id": 271406353,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1644485769
    },
    {
        "content": "<p>Note this is a completely standard thing to expect in any modern programming language, but Lean 3 never reached that level of polish because it was very much a research project, not a finished thing.</p>",
        "id": 271406495,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644485862
    }
]