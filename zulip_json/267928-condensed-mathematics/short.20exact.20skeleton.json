[
    {
        "content": "<p>• I've developed an API for constructing short exact sequences of condensed abelian groups. This API is mostly sorry-free (modulo trivialities). It's in <code>condensed/condensify.lean</code>.<br>\n• In <code>for_mathlib/derived/les_facts.lean</code> I've put two lemmas about Ext groups being zero if other maps are isomorphisms, etc... These are <code>sorry</code>s, which will need the LES to prove them.<br>\n• I've used the API to build a skeleton for the short exact sequences that feature in the main proof. There are now dozens of rather elementary sorries that need to be filled in. About maps between profinitely filtered pseudo-normed groups, etc...</p>\n<p>Sorry count:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">3</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">condensed</span><span class=\"bp\">/</span><span class=\"n\">rescale.lean</span>\n<span class=\"mi\">1</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">condensed</span><span class=\"bp\">/</span><span class=\"n\">exact.lean</span>\n<span class=\"mi\">5</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">condensed</span><span class=\"bp\">/</span><span class=\"n\">condensify.lean</span>\n<span class=\"mi\">1</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">Lbar</span><span class=\"bp\">/</span><span class=\"n\">ext.lean</span>\n<span class=\"mi\">7</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">Lbar</span><span class=\"bp\">/</span><span class=\"n\">ses.lean</span>\n<span class=\"mi\">1</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">breen_deligne</span><span class=\"bp\">/</span><span class=\"n\">main.lean</span>\n<span class=\"mi\">5</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">breen_deligne</span><span class=\"bp\">/</span><span class=\"n\">eval.lean</span>\n<span class=\"mi\">1</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">free_pfpng</span><span class=\"bp\">/</span><span class=\"n\">main.lean</span>\n<span class=\"mi\">1</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">invpoly</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n<span class=\"mi\">2</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">laurent_measures</span><span class=\"bp\">/</span><span class=\"n\">thm69.lean</span>\n<span class=\"mi\">3</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">laurent_measures</span><span class=\"bp\">/</span><span class=\"n\">ext.lean</span>\n<span class=\"mi\">2</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">laurent_measures</span><span class=\"bp\">/</span><span class=\"n\">ses2.lean</span>\n<span class=\"mi\">5</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">laurent_measures</span><span class=\"bp\">/</span><span class=\"n\">ses.lean</span>\n<span class=\"mi\">5</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">for_mathlib</span><span class=\"bp\">/</span><span class=\"n\">complex_extend.lean</span>\n<span class=\"mi\">32</span>      <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">for_mathlib</span><span class=\"bp\">/</span><span class=\"n\">derived</span><span class=\"bp\">/</span><span class=\"n\">derived_cat.lean</span>\n<span class=\"mi\">2</span>       <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">for_mathlib</span><span class=\"bp\">/</span><span class=\"n\">derived</span><span class=\"bp\">/</span><span class=\"n\">les_facts.lean</span>\n<span class=\"n\">Total</span><span class=\"o\">:</span>  <span class=\"mi\">76</span>\n</code></pre></div>",
        "id": 276742424,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1648323994
    },
    {
        "content": "<p><code>4  src/condensed/condensify.lean</code> do I just push to master? It wasn't too hard :-)</p>",
        "id": 276749685,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648334215
    },
    {
        "content": "<p>The whole framework for short exact sequences of condensed abelian groups is done and applied.<br>\nPlenty of sorries left though:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">1</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">free_pfpng</span><span class=\"bp\">/</span><span class=\"n\">main.lean</span>\n<span class=\"mi\">1</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">free_pfpng</span><span class=\"bp\">/</span><span class=\"n\">acyclic.lean</span>\n<span class=\"mi\">6</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">invpoly</span><span class=\"bp\">/</span><span class=\"n\">ses.lean</span>\n<span class=\"mi\">3</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">invpoly</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span>\n<span class=\"mi\">5</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">laurent_measures</span><span class=\"bp\">/</span><span class=\"n\">ses.lean</span>\n<span class=\"mi\">2</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">laurent_measures</span><span class=\"bp\">/</span><span class=\"n\">ext.lean</span>\n<span class=\"mi\">3</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">laurent_measures</span><span class=\"bp\">/</span><span class=\"n\">ses2.lean</span>\n<span class=\"mi\">2</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">Lbar</span><span class=\"bp\">/</span><span class=\"n\">ext.lean</span>\n<span class=\"mi\">5</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">for_mathlib</span><span class=\"bp\">/</span><span class=\"n\">complex_extend.lean</span>\n<span class=\"mi\">8</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">Lbar</span><span class=\"bp\">/</span><span class=\"n\">ses.lean</span>\n<span class=\"mi\">2</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">laurent_measures</span><span class=\"bp\">/</span><span class=\"n\">thm69.lean</span>\n<span class=\"mi\">32</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">for_mathlib</span><span class=\"bp\">/</span><span class=\"n\">derived</span><span class=\"bp\">/</span><span class=\"n\">derived_cat.lean</span>\n<span class=\"mi\">2</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">for_mathlib</span><span class=\"bp\">/</span><span class=\"n\">derived</span><span class=\"bp\">/</span><span class=\"n\">les_facts.lean</span>\n<span class=\"mi\">1</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">breen_deligne</span><span class=\"bp\">/</span><span class=\"n\">main.lean</span>\n<span class=\"mi\">5</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">breen_deligne</span><span class=\"bp\">/</span><span class=\"n\">eval.lean</span>\n<span class=\"mi\">1</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">condensed</span><span class=\"bp\">/</span><span class=\"n\">exact.lean</span>\n<span class=\"mi\">3</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">condensed</span><span class=\"bp\">/</span><span class=\"n\">rescale.lean</span>\n<span class=\"mi\">4</span> <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">condensed</span><span class=\"bp\">/</span><span class=\"n\">condensify.lean</span>\n<span class=\"mi\">86</span> <span class=\"n\">total</span>\n</code></pre></div>",
        "id": 276847196,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1648459590
    },
    {
        "content": "<p>I just removed a sorry from <a href=\"http://Lbar.ses\">Lbar.ses</a>, and pushed it.</p>",
        "id": 276868532,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1648472171
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 276870166,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1648472851
    }
]