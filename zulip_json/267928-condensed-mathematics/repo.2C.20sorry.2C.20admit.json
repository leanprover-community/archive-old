[
    {
        "content": "<p>I've made a couple of changes to the repo with the following effect:</p>\n<p>If you now compile <code>src/liquid.lean</code> you should get only 2 warnings about <code>sorry</code>: one for <code>thm95</code> and one for <code>first_target</code>.<br>\nThe second sorry should be easy to fill in, by reducing it to <code>thm95</code>.</p>\n<p>To make this possible, I have moved code that was <code>sorry</code>d to new files that are not in the dependency chain of <code>src/liquid.lean</code>. Of course they should end up in the dependency chain at some point, once they are sorry-free, and used in the proof of <code>thm95</code>.</p>\n<p>I have also replace every occurence of <code>sorry</code> in commented code by the word <code>admit</code>, which is functionally equivalent (in tactic mode).<br>\nThis means that we can now run </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>rg sorry <span class=\"p\">|</span> wc -l\n<span class=\"m\">12</span>\n</code></pre></div>\n<p>to find that we have 12 lines containing uncommented <code>sorry</code>s (of which 2 are in the README).</p>",
        "id": 225806582,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612946157
    },
    {
        "content": "<p>Since you are in a cleaning up mood, could you get us rid of the undefined references in the blueprint? They are also generating a lot of noise.</p>",
        "id": 225809459,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1612947996
    },
    {
        "content": "<p>I need to prepare a talk on type theory first...</p>",
        "id": 225810904,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612948866
    },
    {
        "content": "<p>But I think I'll stay in cleaning up mood for a couple of days, now that <code>thm95</code> is in place.</p>",
        "id": 225810931,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612948891
    },
    {
        "content": "<p>We need to clean up the mess before we sprint onto the battlefield</p>",
        "id": 225810952,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612948907
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code> 4 files changed, 787 deletions(-)\n delete mode 100644 src/Mbar/Mbar_pow.lean\n delete mode 100644 src/Mbar/breen_deligne.lean\n delete mode 100644 src/Mbar/complex.lean\n delete mode 100644 src/for_mathlib/continuous_map.lean\n</code></pre></div>\n<p>These files contain code that has been generalised in order to state thm 9.5. Repo just shrunk with about 10% (-;</p>",
        "id": 225827119,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612959368
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/267928-condensed-mathematics/topic/repo.2C.20sorry.2C.20admit/near/225809459\">said</a>:</p>\n<blockquote>\n<p>Since you are in a cleaning up mood, could you get us rid of the undefined references in the blueprint? They are also generating a lot of noise.</p>\n</blockquote>\n<p>I fixed those. But with a \"hack\". I just put things in a sort of appendix, and we should move them to a better place in the next refactor of the blueprint</p>",
        "id": 225829342,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612960717
    }
]