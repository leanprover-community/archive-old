[
    {
        "content": "<p>I pushed the statement of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mtext>Ext</mtext><mi>i</mi></msup><mo stretchy=\"false\">(</mo><msub><mover accent=\"true\"><mi mathvariant=\"script\">M</mi><mo>ˉ</mo></mover><msup><mi>r</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>V</mi><mo stretchy=\"false\">)</mo><mo>≅</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\text{Ext}^i(\\bar{ℳ}_{r&#x27;}(S), V) ≅ 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1479em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Ext</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8979em;\"><span style=\"top:-3.1362em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8368em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathscr\" style=\"margin-right:0.15981em;\">M</span></span><span style=\"top:-3.269em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328em;\"><span style=\"top:-2.55em;margin-left:-0.1598em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> to <code>src/Mbar/ext.lean</code>. There is a universe mismatch with the version of Thm 9.4 that we proved in <code>liquid.lean</code>.</p>\n<p>Explanation: Thm 9.4 is proven by apply Thm 9.5 to the polyhedral lattice <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Λ</mi><mo>=</mo><mi mathvariant=\"normal\">Z</mi></mrow><annotation encoding=\"application/x-tex\">Λ = ℤ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Λ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord amsrm\">Z</span></span></span></span> which lives in <code>Type</code>. This forces <code>S</code> and <code>V</code> to also live in <code>Type</code>. But for universe reasons, we need Thm 9.4 for <code>S</code> and <code>V</code> in <code>Type 1</code>. So we should actually use <code>Λ = ulift ℤ</code> and do a bit more work to show that this is a polyhedral lattice satisfying <code>Hom(ulift ℤ, M) ≅ M</code>.</p>",
        "id": 270844337,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644088966
    },
    {
        "content": "<p>I'm reading this and it's saying to me \"for universe reasons S and V must be more general objects than sets\" and the ZFC person in me is going \"huh?\" This is all because we didn't do the kappa truncation stuff?</p>",
        "id": 270844438,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644089070
    },
    {
        "content": "<p>Yes, with <code>κ</code>-truncation we wouldn't have had <em>this</em> problem.</p>",
        "id": 270844465,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644089118
    },
    {
        "content": "<p>Anyway, I regard this statement is some sort of watershed.</p>\n<ul>\n<li>To deduce it from (a <code>Type 1</code>-version of) Thm 9.4, we need to prove and use the Breen--Deligne lemma. And then a bit of a diagram chase, taking the limit of the system of complexes in 9.4.</li>\n<li>To go from this statement to the final goal, we need to construct some short exact sequences of condensed abelian groups, and use the resulting long exact sequences for Ext.</li>\n</ul>",
        "id": 270844550,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644089213
    },
    {
        "content": "<p>Oooh, and there is a slight catch. What we really need is the <code>ℤ[T⁻¹]</code>-linear version of the statement that I pushed. Instead of the <code>Ab</code>-version.</p>",
        "id": 270844624,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644089304
    },
    {
        "content": "<p>I pushed that as a todo comment.</p>",
        "id": 270844632,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644089321
    },
    {
        "content": "<p>Hmmm... We can probably leave <code>S : Profinite.{0}</code>, since we want to use <code>Condensed.{0} (Module.{1} ...)</code>, right?</p>",
        "id": 270848415,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644094051
    },
    {
        "content": "<p>It also depends on how we build our functor from <code>ProFilt...withTinv.{0}</code> to condensed objects.</p>",
        "id": 270848478,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644094124
    },
    {
        "content": "<p>I was thinking the functor from <code>ProFilt...{0}</code> would have to land in <code>Condensed.{0} (Module.{1} ...)</code> anyway, since the profinite spaces in the filtration are all in <code>Profinite.{0}</code>.</p>",
        "id": 270848562,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644094252
    },
    {
        "content": "<p>Do I understand correctly that the functor <code>condensed</code> in this file <code>Mbar/ext.lean</code> goes from <code>Profinite.{u+1}</code> to <code>Condensed.{u} ??</code>. I don't think this is what we want... It looks like this <code>to_Condensed</code> functor (the last step in the composition defining <code>condensed</code>) might have to be modified? I'm building now so that I can take a closer look at the universes in this file.</p>\n<p>The natural functor sends <code>X : ProFilt....{0}</code> to the condensed object which (as a condensed set) is the colimit of <code>X_c.to_Condensed : Condensd.{0} (Type 1)</code> where <code>X_c : Profinite.{0}</code> is the <code>c</code>-th term in the profinite filtration of <code>X</code>, while the well-behaved condensed category in this case would be <code>Condensed.{0} (Module.{1} ??)</code>.</p>",
        "id": 270849729,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644095793
    },
    {
        "content": "<p>Right, I finished building, and just to confirm, in the line</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">condensed</span> <span class=\"o\">:</span> <span class=\"n\">Profinite</span> <span class=\"bp\">⥤</span> <span class=\"n\">Condensed</span> <span class=\"n\">Ab.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"n\">Mbar.functor.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span> <span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"n\">r'</span> <span class=\"bp\">⋙</span> <span class=\"n\">to_PFPNG₁.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"n\">_</span> <span class=\"bp\">⋙</span> <span class=\"n\">to_CHFPNG₁.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"bp\">⋙</span> <span class=\"n\">to_Condensed.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>this is a functor from <code>Profinite.{u+1}</code> to <code>Condensed.{u} Ab.{u+1}</code>. In particular, the last step, <code>to_Condensed.{u}</code> is a functor from <code>CompHausFiltPseuNormGrp₁.{u+1}</code> to <code>Condensed.{u} Ab.{u+1}</code>.</p>",
        "id": 270850324,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644096713
    },
    {
        "content": "<p>I think we may have to change this <code>to_Condensed</code> so that it ends up being a functor from <code>CompHausFiltPseuNormGrp₁.{u}</code> to <code>Condensed.{u} Ab.{u+1}</code> (or <code>Condensed.{u} (Module.{u+1} (polynomial (ulift.{u+1} \\Z)))</code>)</p>",
        "id": 270850376,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644096779
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/267928-condensed-mathematics/topic/Ext.5Ei.28Mbar.28S.29.2C.20V.29.20.3D.200/near/270844337\">said</a>:</p>\n<blockquote>\n<p>I pushed the statement of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mtext>Ext</mtext><mi>i</mi></msup><mo stretchy=\"false\">(</mo><msub><mover accent=\"true\"><mi mathvariant=\"script\">M</mi><mo>ˉ</mo></mover><msup><mi>r</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>V</mi><mo stretchy=\"false\">)</mo><mo>≅</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\text{Ext}^i(\\bar{ℳ}_{r&#x27;}(S), V) ≅ 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1479em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Ext</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8979em;\"><span style=\"top:-3.1362em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8368em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathscr\" style=\"margin-right:0.15981em;\">M</span></span><span style=\"top:-3.269em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1667em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328em;\"><span style=\"top:-2.55em;margin-left:-0.1598em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> to <code>src/Mbar/ext.lean</code>. There is a universe mismatch with the version of Thm 9.4 that we proved in <code>liquid.lean</code>.</p>\n<p>Explanation: Thm 9.4 is proven by apply Thm 9.5 to the polyhedral lattice <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Λ</mi><mo>=</mo><mi mathvariant=\"normal\">Z</mi></mrow><annotation encoding=\"application/x-tex\">Λ = ℤ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">Λ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord amsrm\">Z</span></span></span></span> which lives in <code>Type</code>. This forces <code>S</code> and <code>V</code> to also live in <code>Type</code>. But for universe reasons, we need Thm 9.4 for <code>S</code> and <code>V</code> in <code>Type 1</code>. So we should actually use <code>Λ = ulift ℤ</code> and do a bit more work to show that this is a polyhedral lattice satisfying <code>Hom(ulift ℤ, M) ≅ M</code>.</p>\n</blockquote>\n<p>Just checking that, in the context of Kevin's\"ZFC person\" comment, the finished part of the proof that made Peter confident (the nasty technical stuff), is 100% free of any of this pyknotic vs condensed issue. I would guess so, and I guess it illustrates how the overarching formalism is really \"merely framework\", and the real effort is down-to-earth mathematics independent of universes etc.</p>",
        "id": 270861256,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1644112154
    },
    {
        "content": "<p>I pushed what I'm fairly sure is a fix to the universes into the branch <code>universe-fix</code>. Here is the diff from master<br>\n<a href=\"https://github.com/leanprover-community/lean-liquid/compare/universe-fix\">https://github.com/leanprover-community/lean-liquid/compare/universe-fix</a></p>",
        "id": 270870208,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644124553
    },
    {
        "content": "<p>The <code>Ext</code> statement in this branch is now </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">Ext_iso_zero</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">Profinite.</span><span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">})</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">SemiNormedGroup.</span><span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">})</span> <span class=\"o\">[</span><span class=\"n\">normed_with_aut</span> <span class=\"n\">r</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">((</span><span class=\"n\">Ext</span> <span class=\"n\">ℤ</span> <span class=\"o\">(</span><span class=\"n\">Condensed.</span><span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"n\">Ab.</span><span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">})</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">obj</span>\n    <span class=\"o\">(</span><span class=\"n\">op</span> <span class=\"bp\">$</span> <span class=\"o\">(</span><span class=\"n\">condensed.</span><span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"n\">r'</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">obj</span> <span class=\"n\">S</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">obj</span>\n      <span class=\"o\">(</span><span class=\"n\">Condensed.of_top_ab</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"bp\">≅</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 270870270,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644124586
    },
    {
        "content": "<p>Congratulations on all the progress!</p>\n<p>OK, so what's the status now? I was also imagining that Proposition 2.1 of [Analytic] would need to be taken care of? Is anyone (Adam?) working on that?</p>\n<p>(This is required for the exact sequence</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><msup><mi>T</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>S</mi><mo stretchy=\"false\">]</mo><mo>→</mo><mi mathvariant=\"script\">M</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mo separator=\"true\">,</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo><msub><mo stretchy=\"false\">)</mo><mi>r</mi></msub><mo stretchy=\"false\">)</mo><mo>→</mo><msub><mover accent=\"true\"><mi mathvariant=\"script\">M</mi><mo stretchy=\"true\">‾</mo></mover><mi>r</mi></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0\\to \\mathbb Z[T^{-1}][S]\\to \\mathcal M(S,\\mathbb Z((T))_r)\\to \\overline{\\mathcal M}_r(S)\\to 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\">M</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">((</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1333em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8833em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathcal\">M</span></span></span><span style=\"top:-3.8033em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>.)</p>",
        "id": 271037276,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644265615
    },
    {
        "content": "<p>It's on our radar, but nobody is working on it yet.</p>",
        "id": 271038393,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644266187
    },
    {
        "content": "<p>Looking at the proof again, I might have underestimated this... In the MO answer I said that the BD-lemmas was the only big hurdle left. But I guess this is another one.</p>",
        "id": 271038673,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644266345
    },
    {
        "content": "<p>Obviously you made really good progress, but actually your post sounded a bit too optimistic to me :-)</p>",
        "id": 271038959,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644266506
    },
    {
        "content": "<p>I think there will be at least some struggles coming up...</p>",
        "id": 271039060,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644266555
    },
    {
        "content": "<p>For example, you need that the Ext-groups of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><mi>S</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb Z[S]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span></span></span></span> against a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>-Banach <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>, for profinite set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>, vanish. This should follow from 8.19 that is already formalized, but I think the deduction may need some nonsense on hypercovers that may be a little pain</p>",
        "id": 271039155,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644266624
    },
    {
        "content": "<p>Somehow I think while many of the basic definitions are in place, you haven't yet started to do <em>any</em> computation in condensed abelian groups, and I think a few have to be done before you can attack the main one</p>",
        "id": 271039264,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644266686
    },
    {
        "content": "<p>Maybe now might be a good time to create some roadmap about what's left to do? I'd be happy to take part in it.</p>",
        "id": 271039333,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644266730
    },
    {
        "content": "<p>Does one need hypercovers, or can we get away with a chech nerve associated to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><mi>T</mi><mo stretchy=\"false\">]</mo><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><mi>S</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}[T] \\to \\mathbb{Z}[S]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span></span></span></span> coming from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo>→</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">T \\to S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> a cover with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> extr. disc ?</p>",
        "id": 271039576,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644266876
    },
    {
        "content": "<p>I think the latter should work too, by some inductive argument.</p>",
        "id": 271039645,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644266895
    },
    {
        "content": "<p>(You still need that the complex <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>…</mo><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><mi>T</mi><msub><mo>×</mo><mi>S</mi></msub><mi>T</mi><mo stretchy=\"false\">]</mo><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><mi>T</mi><mo stretchy=\"false\">]</mo><mo>→</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><mi>S</mi><mo stretchy=\"false\">]</mo><mo>→</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\ldots\\to \\mathbb Z[T\\times_S T]\\to \\mathbb Z[T]\\to \\mathbb Z[S]\\to 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\"><span class=\"mbin\">×</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> is exact, but this is something true in any topos, and in particular before sheafification, where it reduces to the case of sets, and you can write down a contracting homotopy.)</p>",
        "id": 271039788,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644266991
    },
    {
        "content": "<p>Or well hmm. I guess I'm certainly using some spectral sequence argument somewhere, implicitly. Not sure what the low effort formalization is.</p>",
        "id": 271039902,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644267050
    },
    {
        "content": "<p>I think writing a roadmap is a good suggestion, especially if you offer to help!</p>",
        "id": 271040042,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644267129
    },
    {
        "content": "<p>Last time I tried, I ended up writing more lean code instead of a roadmap... <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span></p>",
        "id": 271040109,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644267159
    },
    {
        "content": "<p>There should probably be a lemma that if you have a presheaf of abelian groups <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">F</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span></span></span> on some site with finite limits and disjoint coproducts that are preserved by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">F</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span></span></span>, and for any cover <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mo>→</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">T\\to S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> the corresponding complex <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>→</mo><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">(</mo><mi>T</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">(</mo><mi>T</mi><msub><mo>×</mo><mi>S</mi></msub><mi>T</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mo>…</mo></mrow><annotation encoding=\"application/x-tex\">0\\to \\mathcal F(S)\\to \\mathcal F(T)\\to \\mathcal F(T\\times_S T)\\to \\ldots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\"><span class=\"mbin\">×</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05764em;\">S</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.123em;\"></span><span class=\"minner\">…</span></span></span></span> is exact, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">F</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span></span></span></span> is a sheaf with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>H</mi><mi>i</mi></msup><mo stretchy=\"false\">(</mo><mi>S</mi><mo separator=\"true\">,</mo><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">H^i(S,\\mathcal F)=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">i&gt;0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6986em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> and all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>.</p>",
        "id": 271040161,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644267186
    },
    {
        "content": "<p>Also, we need <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>H</mi><mi>i</mi></msup><mo stretchy=\"false\">(</mo><mi>S</mi><mo separator=\"true\">,</mo><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mrow><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">x</mi><mi mathvariant=\"normal\">t</mi></mrow><mi>i</mi></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><mi>S</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H^i(S,\\mathcal F)=\\mathrm{Ext}^i(\\mathbb Z[S],\\mathcal F)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1479em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">Ext</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8979em;\"><span style=\"top:-3.1362em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"mclose\">)</span></span></span></span>. Maybe this requires the above observation on the complex for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><mi>S</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb Z[S]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span></span></span></span>'s?</p>",
        "id": 271040238,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644267233
    },
    {
        "content": "<p>Wait, do we need sheaf cohomology in a version that is not by definition <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mtext>Ext</mtext><mi>i</mi></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">Z</mi><mo stretchy=\"false\">[</mo><mi>S</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Ext}^i(ℤ[S], ℱ)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1479em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Ext</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8979em;\"><span style=\"top:-3.1362em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord amsrm\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathscr\" style=\"margin-right:0.13634em;\">F</span><span class=\"mclose\">)</span></span></span></span>?</p>",
        "id": 271040375,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644267308
    },
    {
        "content": "<p>Hmm OK you might just take that as your definition, but then you need that thing about <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><mi>S</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb Z[S]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span></span></span></span>'s above.</p>",
        "id": 271040444,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644267350
    },
    {
        "content": "<p>Or can one deduce the equality directly from the construction as derived functors? You see, I'm a bit lost about the shortest proofs of various \"obvious\" facts ;-).</p>",
        "id": 271040595,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644267410
    },
    {
        "content": "<p>So, if we assumed that <code>S</code> is extr. disc. in the main challenge, then somehow all of this would simplify, right?</p>",
        "id": 271040688,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644267466
    },
    {
        "content": "<p>We would still need 2.1, but apart from that, it's only homological algebra, I think</p>",
        "id": 271040753,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644267483
    },
    {
        "content": "<p>No this doesn't help, as the relevant <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>'s here are different</p>",
        "id": 271040761,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644267489
    },
    {
        "content": "<p>They are some filtration steps in your ProFinFiltBlah's</p>",
        "id": 271040783,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644267506
    },
    {
        "content": "<p>Hmm, now I'm confused. If you know that <code>ℤ[S]</code> is projective, then those short exact sequence are enough to deduce the vanishing of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mtext>Ext</mtext><mi>i</mi></msup><mo stretchy=\"false\">(</mo><msub><mi mathvariant=\"script\">M</mi><msup><mi>p</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></msub><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>V</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Ext}^i(ℳ_{p&#x27;}(S), V)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.184em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">Ext</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8979em;\"><span style=\"top:-3.1362em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathscr\" style=\"margin-right:0.15981em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.328em;\"><span style=\"top:-2.55em;margin-left:-0.1598em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6828em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mclose\">)</span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">i &gt; 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6986em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>. Or am I missing something?</p>",
        "id": 271040950,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644267600
    },
    {
        "content": "<p>You are looking at the easy application of 8.19, there's a more involved application, implicit in this BD stuff</p>",
        "id": 271041195,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644267695
    },
    {
        "content": "<p>Aha! Of course. Because we \"resolve\" by a complex consisting of things like <code>ℤ[ℳ_{≤ c}]</code>, and we don't know that those objects are projective!</p>",
        "id": 271041361,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644267766
    },
    {
        "content": "<p>I had completely overlooked this issue <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span></p>",
        "id": 271041567,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644267865
    },
    {
        "content": "<p>Yesterday, I wrote up some quick summary of what's left to do, indicating also how to do some of the diagram chases with Ext-groups etc.; I sent the draft to Johan, who'll probably make it available in some form soon.</p>\n<p>I think you're really getting close! I think there's very little foundational stuff that's missing. In particular, one can avoid talking about Ext groups of condensed <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><msup><mi>T</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb Z[T^{-1}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>-modules, it can all be said in terms of Ext-groups of condensed abelian groups. About Ext-groups, one only needs to define Ext-groups of complexes of condensed abelian groups (in nonnegative homological degrees) against condensed abelian groups, satisfying a long exact sequence, and sending direct sums to direct products. There was also a question whether one needs tensor products of condensed abelian groups (or even <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><msup><mi>T</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb Z[T^{-1}]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>-modules): I think not, the only thing one needs are tensor products of condensed abelian groups with (abstract) abelian groups, which are extremely simple to define.</p>",
        "id": 271247922,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644397944
    },
    {
        "content": "<p>Here's the document: <a href=\"https://math.commelin.net/files/LTE.pdf\">https://math.commelin.net/files/LTE.pdf</a> . I'll start working on integrating this into the existing blueprint asap.</p>",
        "id": 271283957,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644416273
    },
    {
        "content": "<p>One quick comment: Prop 3.3 has also been completely formalized.</p>",
        "id": 271286786,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644417384
    },
    {
        "content": "<p>This is great! So as I said above, Adam, I don't think you'll need much more about condensed abelian groups, only the tensor products with abstract abelian groups (and that a tensor product with a free abelian group is the same thing as a (possibly infinite) direct sum of copies of the object).</p>",
        "id": 271294518,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644420451
    },
    {
        "content": "<p>What sort of universal property do we need about such an object (the tensor product of a condensed ab with an abstract ab)?</p>",
        "id": 271295753,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644420937
    },
    {
        "content": "<p>None, only its construction, and the above property. Well, maybe also that if the condensed abelian group is torsion-free, then this operation is exact in the abelian group.</p>",
        "id": 271296036,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644421033
    },
    {
        "content": "<p>Right, I just noticed where it appears in the pdf (middle of page 14)</p>",
        "id": 271296123,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644421072
    },
    {
        "content": "<p>In any case, I imagine this should be very straightforward, as you can literally do everything on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>-valued points, there's no sheafification necessary.</p>",
        "id": 271296329,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644421142
    },
    {
        "content": "<p>We'll also need to decide what to do about Ext groups of complexes. Should we just go ahead and define the derived category?</p>",
        "id": 271297749,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644421670
    },
    {
        "content": "<p>Hmm, I think you should be able to just barely manage to get through without anything fancy.</p>",
        "id": 271297993,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644421758
    },
    {
        "content": "<p>I think what we need most is a projective replacement for bounded-above complexes.</p>",
        "id": 271298062,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644421791
    },
    {
        "content": "<p>There's basically only one complex for which you need it, and the relevant triangles arise by truncation. I would imagine that in those cases, the long exact sequence might be formalized directly</p>",
        "id": 271298080,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644421800
    },
    {
        "content": "<p>I think we'll also need functoriality of the LES coming from a SES of objects.</p>",
        "id": 271298388,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644421906
    },
    {
        "content": "<p>But the specific cases required seem small enough that I don't think it's yet worth the effort to go all the way to derived categories</p>",
        "id": 271299144,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644422174
    },
    {
        "content": "<p>Right, but a pretriangulated homotopy category might be helpful.</p>",
        "id": 271299484,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644422289
    },
    {
        "content": "<p>To enable the language of triangles, and some abstraction in getting the LES</p>",
        "id": 271299542,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644422310
    },
    {
        "content": "<p>I'm not sure it's worth the effort, necessarily... you only need the LES for complexes in a really specific case, for canonical truncations. I would imagine that you can build projective resolutions in such a way that this case becomes very transparent</p>",
        "id": 271300296,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644422561
    },
    {
        "content": "<p>Ok, I'll add it to my todo list as one of the things that should be figured out. But we have the pretriangulated unbounded homotopy category already.</p>",
        "id": 271300770,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644422729
    },
    {
        "content": "<p>Adding the bounded-above variant shouldn't be too much work, I hope.</p>",
        "id": 271300814,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644422745
    },
    {
        "content": "<p>OK, I have no idea on how much work you can already build. It would certainly be more elegant!</p>",
        "id": 271300893,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644422763
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/267928-condensed-mathematics/topic/Ext.5Ei.28Mbar.28S.29.2C.20V.29.20.3D.200/near/271295753\">said</a>:</p>\n<blockquote>\n<p>What sort of universal property do we need about such an object (the tensor product of a condensed ab with an abstract ab)?</p>\n</blockquote>\n<p>Maybe you don't <em>need</em> it for now, but perhaps it's a copower?</p>",
        "id": 271364248,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1644449864
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  did you want to add a link to the document in your <a href=\"https://mathoverflow.net/a/415540/4177\">MO answer</a>?</p>",
        "id": 271364520,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1644450036
    },
    {
        "content": "<p>Good idea! Done</p>",
        "id": 271387864,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644470910
    },
    {
        "content": "<p>I was reading the document, but I don't understand one thing: in the proof of Prop 2.10 to deduce <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mrow><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">x</mi><mi mathvariant=\"normal\">t</mi></mrow><mi>i</mi></msup><mo stretchy=\"false\">(</mo><msub><mi>K</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi>M</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msup><mrow><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">x</mi><mi mathvariant=\"normal\">t</mi></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><msub><mi>K</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi>M</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>⋯</mo><mo>=</mo><msup><mrow><mi mathvariant=\"normal\">E</mi><mi mathvariant=\"normal\">x</mi><mi mathvariant=\"normal\">t</mi></mrow><mn>1</mn></msup><mo stretchy=\"false\">(</mo><msub><mi>K</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><mi>M</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Ext}^i(K_1,M)=\\mathrm{Ext}^{i-1}(K_2,M)=\\dots=\\mathrm{Ext}^1(K_i,M)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1479em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">Ext</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8979em;\"><span style=\"top:-3.1362em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1479em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">Ext</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8979em;\"><span style=\"top:-3.1362em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1373em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">Ext</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8873em;\"><span style=\"top:-3.1362em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mclose\">)</span></span></span></span> are you using that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>T</mi><mrow><mi>s</mi><mi mathvariant=\"normal\">/</mi><mi>n</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">T^{s/n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mtight\">/</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span> is extremally disconnected? Is this true?</p>",
        "id": 271422049,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1644494923
    },
    {
        "content": "<p>Ah no, it is just the induction step! Sorry.</p>",
        "id": 271422213,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1644495009
    },
    {
        "content": "<p>(No, these things aren't extremally disconnected, as I try to explicitly warn at some point. The fragile nature of extremally disconnecteds occupied me for several of the last few months.)</p>",
        "id": 271427362,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1644498192
    },
    {
        "content": "<p>OK, thanks!</p>",
        "id": 271547270,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1644570286
    }
]