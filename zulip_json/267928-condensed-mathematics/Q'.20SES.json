[
    {
        "content": "<p>I have a working skeleton for the Q' SES. But there was a missing assumption in <code>pseudo_normed_group/QprimeFP.lean</code>, so some things may break once I push. Please bear with me for a little while as I add this necessary assumption in other places!</p>",
        "id": 289225463,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1657561238
    },
    {
        "content": "<p>What was the missing assumption?</p>",
        "id": 289229157,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1657563022
    },
    {
        "content": "<p>For all naturals <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> and all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>∈</mo><msub><mi mathvariant=\"double-struck\">R</mi><mrow><mo>≥</mo><mn>0</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">r \\in \\mathbb{R}_{\\geq 0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9341em;vertical-align:-0.2452em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">≥</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2452em;\"><span></span></span></span></span></span></span></span></span></span> there exists some natural <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>≤</mo><mi>κ</mi><mtext> </mtext><mo stretchy=\"false\">(</mo><mi>ι</mi><mi>n</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">r \\le \\kappa \\ (\\iota n) \\  m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">κ</span><span class=\"mspace\"> </span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">ι</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mord mathnormal\">m</span></span></span></span></p>",
        "id": 289229760,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1657563337
    },
    {
        "content": "<p>Aha! Good catch (-;</p>",
        "id": 289229956,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1657563431
    },
    {
        "content": "<p>Okay, only props are left now in <code>QprimeFP</code></p>",
        "id": 289236020,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1657566506
    },
    {
        "content": "<p>I got annoyed and just sorried the missing hypotheses inside a proof, so that will have to be fixed at some point</p>",
        "id": 289236062,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1657566536
    },
    {
        "content": "<p>I'm a bit busy with ICERM right now, but I hope to take a look later today.</p>",
        "id": 289241283,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1657568898
    },
    {
        "content": "<p>Is <code>challenge</code> the only file that depends on <code>Lbar/ext</code>?</p>",
        "id": 289241408,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1657568990
    },
    {
        "content": "<p>BTW it took some crazy gymnastics with various isomorphisms in <code>QprimeFP</code> to reduce the SES to the stuff from <code>bd_ses.lean</code>, so some of the sorries there might be challenging</p>",
        "id": 289241635,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1657569115
    }
]