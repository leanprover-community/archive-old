[
    {
        "content": "<p>In case anyone is bored and wants to tackle some pointset topology, there are three sorry's in the file <code>for_mathlib/Profinite/disjoint_union.lean</code> that are very doable (with no category theory <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> ):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">topological_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">a</span><span class=\"o\">)]</span>\n  <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">compact_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">a</span><span class=\"o\">)]</span> <span class=\"o\">:</span> <span class=\"n\">compact_space</span> <span class=\"o\">(</span><span class=\"bp\">Σ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">X</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">topological_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">a</span><span class=\"o\">)]</span>\n  <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">totally_disconnected_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">a</span><span class=\"o\">)]</span> <span class=\"o\">:</span> <span class=\"n\">totally_disconnected_space</span> <span class=\"o\">(</span><span class=\"bp\">Σ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">X</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">totally_disconnected_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">totally_disconnected_space</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">totally_disconnected_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">⊕</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 258105399,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1634593394
    },
    {
        "content": "<p>That might be a good way to exercise my current Analysis &amp; Topology lectures!</p>",
        "id": 258105564,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634593476
    },
    {
        "content": "<p>(The fintype assumption can be removed for the second sorry)</p>",
        "id": 258106345,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1634593872
    },
    {
        "content": "<p>The first one is basically <a href=\"https://leanprover-community.github.io/mathlib_docs/find/compact_Union\">docs#compact_Union</a></p>",
        "id": 258107460,
        "sender_full_name": "Reid Barton",
        "timestamp": 1634594413
    },
    {
        "content": "<p>May I get write access?</p>",
        "id": 258677551,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634890102
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> <a href=\"https://github.com/leanprover-community/lean-liquid/invitations\">https://github.com/leanprover-community/lean-liquid/invitations</a></p>",
        "id": 258678510,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634890789
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 258678572,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634890807
    },
    {
        "content": "<p>Should I push to master or to a branch?</p>",
        "id": 258685093,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634894594
    },
    {
        "content": "<p>Feel free to push to master directly</p>",
        "id": 258686734,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634895480
    },
    {
        "content": "<p>PRed in <a href=\"https://github.com/leanprover-community/mathlib/issues/10511\">#10511</a></p>",
        "id": 262842649,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1637970094
    },
    {
        "content": "<p>merci!</p>",
        "id": 262858690,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1637996516
    }
]