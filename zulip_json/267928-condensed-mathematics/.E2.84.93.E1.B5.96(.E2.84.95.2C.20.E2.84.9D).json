[
    {
        "content": "<p>Peter raised the fair point that we never show <code>pBanach</code> is non-trivial. We could have made the definition in such a way that every pBanach is the zero space, and <code>examples/pBanach</code> would still work.</p>\n<p>My impression is that with current technology in mathlib it shouldn't be too hard to build <code>ℓᵖ(ℕ, ℝ)</code> as example (also suggested by Peter). Anyone want to work on that? <span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> <span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span> if you can give hints or push sketches, that's appreciated. I've never looked at <code>ℓᵖ</code> in mathlib before.</p>",
        "id": 290063920,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658216508
    },
    {
        "content": "<p>I wrote <code>ℓᵖ</code>, so in principle I ought to be able to :). For this week I think I will only be available to answer questions, but if no one has done it by next week I can try.</p>",
        "id": 290064045,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658216606
    },
    {
        "content": "<p>I am happy to give it a try, although I am at a conference this week and do not have much time. If I can push something, I will report here.</p>",
        "id": 290077173,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658225067
    },
    {
        "content": "<p>I'll try to have a look sometime this week, but there are lots of other things pressing for my time. If it's still on the plate in two weeks I'll be able to sit down and have a look.</p>",
        "id": 290092682,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658234596
    },
    {
        "content": "<p>I have started working on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">ℓ</mi><mi>p</mi></msup><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">N</mi><mo separator=\"true\">,</mo><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{\\ell}^p(\\mathbb{N},\\mathbb{R})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">ℓ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">N</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mclose\">)</span></span></span></span> and <code>push</code>ed something to Examples.lean (with plenty of sorries, for the time being). I have one problem and two questions, and I start with the problem:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.normed_space.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.normed.group.basic</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ℝ</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">normed_group_En</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">normed_group</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"kd\">by</span> <span class=\"o\">{</span><span class=\"n\">intro</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">unfold</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"n\">apply_instance</span><span class=\"o\">}</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">normed_space_En</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">normed_space</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"c1\">-- simplify tactic, failed to simplify</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>The first instance is very easy to prove, but in the second (which I assumed to be basically identical to the first) the <code>unfold</code> does not work. I even tried with <code>have : E n = ℝ, refl</code>, which works, and then the <code>rw this</code> gives a problem because it finds a variable in what I am replacing (which is probably the field). Any idea on what makes a big difference between <code>normed_group</code> and <code>normed_space</code>?</p>",
        "id": 290231671,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658322422
    },
    {
        "content": "<p>(And no, actually I have not pushed to <code>master</code>, rather to the branch <code>lp_example</code>).</p>",
        "id": 290231890,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658322532
    },
    {
        "content": "<p>You can register the instances in a section with a local reducible attribute on <code>E</code>, just using <code>apply_instance</code>.</p>",
        "id": 290232046,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1658322614
    },
    {
        "content": "<p><del>Can you detail a bit more?</del> Got it! Thanks</p>",
        "id": 290232120,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658322660
    },
    {
        "content": "<p>Now it works, but can you explain me what was going on with the difference between <code>normed_group</code> and <code>normed_space</code>?</p>",
        "id": 290232320,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658322775
    },
    {
        "content": "<p>It's a well known issue with Pi types, together with the fact that your proofs probably introduced some <code>id</code> somewhere.</p>",
        "id": 290233478,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1658323349
    },
    {
        "content": "<p>Ah, I see. Is it documented somewhere?</p>",
        "id": 290233548,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658323384
    },
    {
        "content": "<p>I am not sure. It's the kind of things you learn by practice and by Zulip :-)</p>",
        "id": 290233700,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1658323469
    },
    {
        "content": "<p>The main questions I have for <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span>: two things that are needed are<br>\n1) <code>has_cont_smul ℝ (lp E p)</code> and<br>\n2) <code>separated_space (lp E p)</code>.<br>\nBoth are true independently of <code>p</code> being less or larger than <code>1</code>, but in the actual implementation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"normal\">ℓ</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\ell^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\">ℓ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span>-spaces they are deduced from the fact that an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"normal\">ℓ</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\ell^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\">ℓ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span>-space is a normed space when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">1\\leq p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> (via <code>normed_space-&gt;has_bounded_smul-&gt;has_cont_smul</code> and via <code>normed_space-&gt;normed_group-&gt;metric_space-&gt;separated_space</code>) respectively. Personally, I think that at a certain point it would be interesting to introduce quasi-normed spaces (where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∥</mi><mi>x</mi><mo>+</mo><mi>y</mi><mi mathvariant=\"normal\">∥</mi><mo>≤</mo><mi>K</mi><mo>⋅</mo><mo stretchy=\"false\">(</mo><mi mathvariant=\"normal\">∥</mi><mi>x</mi><mi mathvariant=\"normal\">∥</mi><mo>+</mo><mi mathvariant=\"normal\">∥</mi><mi>y</mi><mi mathvariant=\"normal\">∥</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Vert x + y\\Vert \\leq K \\cdot (\\Vert x\\Vert + \\Vert y\\Vert)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∥</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">∥</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∥</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∥</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord\">∥</span><span class=\"mclose\">)</span></span></span></span> for some universal constant <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>), and all this would follow. But it wil take time, and so I wonder if <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> would not prefer direct proofs, to be eventually and possibly superseeded by a general approach to quasi-Banach or quasi-normed spaces.</p>",
        "id": 290234147,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658323720
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> Either way (introducing quasi-normed spaces or giving direct proofs) seems fine to me.  Was there something in particular you were hoping I would comment on?</p>",
        "id": 290238861,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658325739
    },
    {
        "content": "<p><span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span> indeed, I had no final question. I simply meant to ask for your opinion on the general approach, and to see if you have suggestions on which way looks better.</p>",
        "id": 290239264,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658325906
    },
    {
        "content": "<p>I don't have a strong opinion either. It would be nice to have this example working before the end of September (say). But there is no hurry to get it done in 3 days.</p>",
        "id": 290242074,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658327097
    },
    {
        "content": "<p>Ah ok, it reassures me. I though you needed it much before. I do not think it will take long (given all the work Heather did on the usual <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"normal\">ℓ</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\ell^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\">ℓ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span>), but holidays are coming soon. I will continue working on it and as soon as I see what path seems most suited I will be in touch.</p>",
        "id": 290242344,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658327216
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/267928-condensed-mathematics/topic/.E2.84.93.E1.B5.96.28.E2.84.95.2C.20.E2.84.9D.29/near/290238861\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> Either way (introducing quasi-normed spaces or giving direct proofs) seems fine to me.  Was there something in particular you were hoping I would comment on?</p>\n</blockquote>\n<p>Well, actually during night two questions came to my mind:<br>\n1) Don't you think that the instance <code>metric_space</code> (which would exist for every <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"normal\">ℓ</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\ell^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\">ℓ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span> and that I would implement directly) will conflict with the one inherited from <code>normed_space</code> when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">1 \\leq p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>?<br>\n2) Is there a way to extract all the instances (may be in graphic form) that are created on a <code>lp E p</code> under the assumption <code>fact : (1 ≤ p]</code>  so that I can check all issues like the one in 1) also for other classes?</p>",
        "id": 290357386,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658398584
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> Do you really get a metric when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">p&lt;1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>, or is it only a topological or unform space structure?</p>",
        "id": 290372249,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658408498
    },
    {
        "content": "<p>You get a <code>normed_group</code>, and hence a metric, right?</p>",
        "id": 290373432,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658409204
    },
    {
        "content": "<p>It's not a norm, but there is a metric<br>\n<a href=\"https://en.wikipedia.org/wiki/Lp_space#When_0_%3C_p_%3C_1\">https://en.wikipedia.org/wiki/Lp_space#When_0_%3C_p_%3C_1</a></p>",
        "id": 290373653,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1658409338
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 290373826,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1658409449
    },
    {
        "content": "<p>But I don't think mathlib knows this...</p>",
        "id": 290374445,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1658409785
    },
    {
        "content": "<p>Well, I guess it depends on what we mean by \"getting\". My claim is that even if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">p&lt;1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>, the space is metrizable (more precisely, you can deduce out of the quasi-norm <span class=\"tex-error\">$$\\Vert\\codt\\Vert_{p}$$</span> a true norm <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∥</mi><mo>⋅</mo><msup><mi mathvariant=\"normal\">∥</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\Vert\\cdot\\Vert&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∥</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">∥</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> such that the topology induced by the metric associated to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∥</mi><mo>⋅</mo><msup><mi mathvariant=\"normal\">∥</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">\\Vert\\cdot\\Vert&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∥</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">∥</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> is the topology on $$\\ell^p$ you started with. But I agree this changes the pseudo-normed structure, so probably <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"normal\">ℓ</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\ell^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord\">ℓ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span> is not metric in the right sense.</p>",
        "id": 290376493,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658410803
    },
    {
        "content": "<p>It should be ok if it changes the pseudo-normed structure, so long as the underlying metric space structure is still the same.  You're saying that's the case, right?</p>",
        "id": 290376673,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658410916
    },
    {
        "content": "<p>FWIW I am following Kalton-Peck-Robert's <em>An F-space sampler</em></p>",
        "id": 290376722,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658410924
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/267928-condensed-mathematics/topic/.E2.84.93.E1.B5.96.28.E2.84.95.2C.20.E2.84.9D.29/near/290376673\">said</a>:</p>\n<blockquote>\n<p>It should be ok if it changes the pseudo-normed structure, so long as the underlying metric space structure is still the same.  You're saying that's the case, right?</p>\n</blockquote>\n<p>Yes that's right.</p>",
        "id": 290376760,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658410942
    },
    {
        "content": "<p>You would then, during the construction of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/lp.normed_group\">docs#lp.normed_group</a>, not use <code>normed_group.of_core</code> but instead use the standard constructor which allows you to resolve a diamond with an existing metric space structure.</p>",
        "id": 290376811,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658410976
    },
    {
        "content": "<p>Related: <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span>'s construction of finite-indexed Lp:<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/analysis/normed_space/pi_Lp.html\">https://leanprover-community.github.io/mathlib_docs/analysis/normed_space/pi_Lp.html</a></p>",
        "id": 290376876,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658411027
    },
    {
        "content": "<p>OH! Lovely, thank you.</p>",
        "id": 290376942,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658411048
    },
    {
        "content": "<p>For different <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> we have different type synonyms, but all have the same underlying uniform structure.</p>",
        "id": 290376979,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658411078
    },
    {
        "content": "<p>I will certainly ask back in the process of refactoring things a bit, but it looks clear.</p>",
        "id": 290376981,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658411079
    },
    {
        "content": "<p>And do you know a way to build a diagram to list all instances on <code>lp E p</code> under the assumption that <code>1 ≤ p</code>?</p>",
        "id": 290378451,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658411766
    },
    {
        "content": "<p>The only non-Hilbert-space dependencies of the <code>lp_space</code> file are<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/topology/metric_space/kuratowski.html\">https://leanprover-community.github.io/mathlib_docs/topology/metric_space/kuratowski.html</a><br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/topology/metric_space/gromov_hausdorff.html\">https://leanprover-community.github.io/mathlib_docs/topology/metric_space/gromov_hausdorff.html</a></p>",
        "id": 290381330,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658413160
    },
    {
        "content": "<p>And they don't contain any such instances.  So it's just what's in<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/analysis/normed_space/lp_space.html\">https://leanprover-community.github.io/mathlib_docs/analysis/normed_space/lp_space.html</a></p>",
        "id": 290381465,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658413210
    },
    {
        "content": "<p>Normed group, normed space, complete space.</p>",
        "id": 290381618,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658413297
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 290389699,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658416780
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> How's this going? If you like, we could do some pair programming on this this week over Zoom.</p>",
        "id": 290693866,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658687976
    },
    {
        "content": "<p>Thanks Heather, with pleasure! I have not been working on this yesterday and today (got covid in between and was finishing some H-spaces business) but I'd be happy to do some pair programming. What are your preferences?</p>",
        "id": 290694022,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658688201
    },
    {
        "content": "<p>OK, great!  I'll message you.  Sorry to hear about the covid! :(</p>",
        "id": 290694035,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658688231
    },
    {
        "content": "<p>Take care! I hope you feel better soon, and that the symptoms won't be too bad.</p>",
        "id": 290717781,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658722415
    },
    {
        "content": "<p>Thanks! I am pretty ok, and forced at home. After all, not so bad <code>lean</code>-wise <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 290732960,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658738722
    }
]