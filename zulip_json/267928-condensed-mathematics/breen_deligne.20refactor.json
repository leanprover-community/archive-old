[
    {
        "content": "<p>I'm refactoring a bunch of stuff in <code>breen_deligne/*</code> to make it easier to prove things about the homotopy.<br>\nGoing to bed now. Pushed my wip to <code>bd_refactor</code>.<br>\nThere were some sorries in those files (on <code>master</code>) but it probably doesn't make sense to work on those, until the refactor is done.</p>",
        "id": 233882740,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617998632
    },
    {
        "content": "<p>This refactor is now done, and merged into master.</p>",
        "id": 234343072,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1618326308
    },
    {
        "content": "<p>At some point we'll need some constants <code>c_ c' : nat -&gt; nnreal</code> that play well with <code>breen_deligne.eg</code>.<br>\nHere <code>eg</code> is the explicit example of <code>breen_deligne.package</code>, see <code>breen_deligne/eg.lean</code>.</p>\n<p>What we need is that for variable <code>r r' : nnreal</code> (satisfying <code>[fact (0 &lt; r)] [fact (0 &lt; r')] [fact (r &lt; r')] [fact (r' â‰¤ 1)]</code>) we have</p>\n<ul>\n<li><code>eg.very_suitable r r' c_</code> (so <code>c_</code> shall depend on <code>r</code> and <code>r'</code>)</li>\n<li><code>eg.adept c_ c'</code> (so <code>c'</code> shall be constructed in terms of a <code>c_</code>, here <code>r</code> and <code>r'</code> don't play a role)</li>\n</ul>",
        "id": 234344159,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1618326543
    },
    {
        "content": "<p>So, if you like playing with division/inverses of non-negative reals, then feel free to add constructions of such sequences to <code>eg.lean</code>.</p>",
        "id": 234344541,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1618326619
    }
]