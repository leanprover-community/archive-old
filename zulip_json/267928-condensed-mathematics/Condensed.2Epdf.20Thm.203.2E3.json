[
    {
        "content": "<p>Someone on MO is wondering about the first line of the proof , which says</p>\n<blockquote>\n<p>Assume first that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> and all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">S_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> are finite. Then the hypercover splits, ...</p>\n</blockquote>\n<p><a href=\"https://mathoverflow.net/questions/430481/hypercovers-consisting-of-finite-sets\">https://mathoverflow.net/questions/430481/hypercovers-consisting-of-finite-sets</a></p>\n<p>In particular the user seems to have a counterexample under the assumption that \"splits\" here means it's a split hypercover as usually stated. But was there another meaning of 'split' it could be? The notes don't help. Has this been formalised in LTE?</p>",
        "id": 298955339,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1663243917
    },
    {
        "content": "<p>Thanks for flagging this David!</p>",
        "id": 298966724,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1663247985
    },
    {
        "content": "<p>In LTE, we only had to do this for the Cech nerve of a map <code>f</code>, in which case the splitting boils down to splitting <code>f</code>.</p>",
        "id": 298970106,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1663249120
    },
    {
        "content": "<p>Re the OPs counter example:<br>\n<a href=\"https://stacks.math.columbia.edu/tag/017R\">https://stacks.math.columbia.edu/tag/017R</a></p>",
        "id": 298972833,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1663249924
    },
    {
        "content": "<p>split simplicial objects are now in mathlib (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/simplicial_object.splitting\">docs#simplicial_object.splitting</a>). I shall use this for the Dold-Kan correspondence, and I am also working on the skeletal filtration of split simplicial objects (e.g. simplicial sets).</p>",
        "id": 298987939,
        "sender_full_name": "Joël Riou",
        "timestamp": 1663253848
    },
    {
        "content": "<p>In any case, I think what <code>Z. M</code> says in the comments is correct.</p>",
        "id": 298994392,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1663255709
    },
    {
        "content": "<p>Indeed, the \"splitting of hypercovers\" in Scholze's notes might be related to the notion of extra degeneracy on augmented simplicial objects (see PR <a href=\"https://github.com/leanprover-community/mathlib/pull/16411\">#16411</a>)</p>",
        "id": 299021906,
        "sender_full_name": "Joël Riou",
        "timestamp": 1663264415
    },
    {
        "content": "<p>My assumption was that 'splitting' here meant in the sense that there was a suitable family of sections, just from the vibe of the thing, so it's good to know my intuition was correct. If this is, additionally, only being applied to a Cech nerve rather than a general hypercover, then I guess this would be good to point out explicitly.</p>",
        "id": 299104047,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1663312622
    },
    {
        "content": "<p>In my world, the normal terminologies are \"free degeneracies\" or \"split degeneracies\", and \"extra degeneracies\".</p>",
        "id": 299104893,
        "sender_full_name": "Reid Barton",
        "timestamp": 1663313059
    },
    {
        "content": "<p>It's a great opportunity for someone to answer explicitly referencing what we do in LTE. There will be plenty of people who are still unaware that all this stuff has been typed into a proof checker and posting links to lean code is a good way of promoting the project</p>",
        "id": 299108735,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1663314852
    },
    {
        "content": "<p>Except that the corresponding Lean code is probably very hard to parse.</p>",
        "id": 299108940,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663314942
    },
    {
        "content": "<p>So in the answer you explain it</p>",
        "id": 299109778,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1663315262
    },
    {
        "content": "<p>People searching for condensed mathematics are going to run into this question</p>",
        "id": 299109986,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1663315329
    },
    {
        "content": "<p>Unfortunately I'm organising a conference next week and another conference the week after so I'm a bit snowed under at the minute, but an answer of the form \"don't worry, this line of computer code checks that the paper is ok, I know it's written in code, here's a brief human-readable summary of what it means\" is the kind of answer which makes people go \"wow what the heck is going on in the lean community, what they're doing looks pretty amazing\" and will also be highly ranked in search engines</p>",
        "id": 299110471,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1663315551
    },
    {
        "content": "<p>\"Don't worry, there is definitely nothing wrong here\" is <em>exactly</em> what we are offering to the mathematical community right now. The question deserves a Lean answer. It's just unfortunate that I'm not in a position to give it right now</p>",
        "id": 299110728,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1663315666
    },
    {
        "content": "<p>Okokok, you convinced me <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 299111454,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663315986
    },
    {
        "content": "<p>What we did for this (again, only with the Cech nerve) is mostly in <code>src\\prop819.lean</code> (there is some general Cech-stuff in the for_mathlib folder as well).</p>",
        "id": 299127288,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1663322245
    },
    {
        "content": "<p>The file <code>for_mathlib/Cech/{split,homotopy}</code> is where the exactness of the associated complex is done, assuming a splitting.</p>",
        "id": 299127681,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1663322392
    },
    {
        "content": "<p>Johan, are you planning to post an answer on MO? If not, then I could (but it's 4am here, so that won't happen for a little while).</p>",
        "id": 299128383,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1663322657
    },
    {
        "content": "<p>The blueprint proof is actually fairly detailed in this case:<br>\n<a href=\"https://leanprover-community.github.io/liquid/sect0004.html#cechcover-exact\">https://leanprover-community.github.io/liquid/sect0004.html#cechcover-exact</a></p>",
        "id": 299129446,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1663323041
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> Please go ahead! You wrote the Lean code, so I think it makes sense that you answer.</p>",
        "id": 299131387,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663323835
    },
    {
        "content": "<p>I hope I didn't say anything stupid :)</p>",
        "id": 299246743,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1663365223
    },
    {
        "content": "<p><a href=\"https://mathoverflow.net/a/430595/490721\">https://mathoverflow.net/a/430595/490721</a></p>",
        "id": 299246748,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1663365225
    },
    {
        "content": "<p>Thanks so much Adam!</p>",
        "id": 299252244,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1663368581
    }
]