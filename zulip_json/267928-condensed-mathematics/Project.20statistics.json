[
    {
        "content": "<p>I thought it might be interesting to keep track of how the LTE is going as far as length of code produced. I appreciate it may not be easy with material going into mathlib, so maybe even just tracking the main self-contained parts is reasonable. Is there any automatic way to do this? Or are the parts all moving too fast at present?</p>",
        "id": 230301850,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1615791117
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130272\">@David Michael Roberts</span> Does <a href=\"https://github.com/leanprover-community/lean-liquid/pulse\">https://github.com/leanprover-community/lean-liquid/pulse</a> give you some of the stats you want?</p>",
        "id": 230303154,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615792375
    },
    {
        "content": "<p>You can also run <code>git ls-files | xargs wc</code> to get very rough line-count statistics</p>",
        "id": 230303175,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615792401
    },
    {
        "content": "<p>I'd checked that, but it only goes back so far. I found this online tool that seems to a reasonable job, giving a current snapshot only: <a href=\"https://codetabs.com/count-loc/count-loc-online.html\">https://codetabs.com/count-loc/count-loc-online.html</a> (so no historical added/removed)</p>",
        "id": 230311009,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1615797987
    },
    {
        "content": "<p>I'm giving a talk about LTE later today, so I decided to gather a bit more statistics.</p>\n<ul>\n<li>Scholze's proof: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≈</mo><mn>12</mn><mi>p</mi><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mo>+</mo><mn>3</mn><mi>p</mi><mspace width=\"1em\"/><mtext>BD resolutions</mtext><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\approx 12p \\quad (+ 3p \\quad\\text{BD resolutions})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.48312em;vertical-align:0em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">12</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">+</span><span class=\"mord\">3</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord text\"><span class=\"mord\">BD resolutions</span></span><span class=\"mclose\">)</span></span></span></span></li>\n<li>Blueprint: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≈</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mtext> </mtext><mn>000</mn><mi>l</mi><mo separator=\"true\">,</mo><mn>12</mn><mtext> </mtext><mn>000</mn><mi>w</mi><mo separator=\"true\">,</mo><mn>87</mn><mtext> </mtext><mn>000</mn><mi>c</mi><mo stretchy=\"false\">)</mo><mo>≈</mo><mn>21</mn><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">\\approx (2\\,000l, 12\\,000w, 87\\,000c) \\approx 21p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.48312em;vertical-align:0em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">000</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">12</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">000</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">87</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">000</span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">21</span><span class=\"mord mathnormal\">p</span></span></span></span></li>\n<li>Lean code: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≈</mo><mo stretchy=\"false\">(</mo><mn>20</mn><mtext> </mtext><mn>000</mn><mi>l</mi><mo separator=\"true\">,</mo><mn>120</mn><mtext> </mtext><mn>000</mn><mi>w</mi><mo separator=\"true\">,</mo><mn>1</mn><mtext> </mtext><mn>060</mn><mtext> </mtext><mn>000</mn><mi>c</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\approx (20\\,000l, 120\\,000w, 1\\,060\\,000c)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.48312em;vertical-align:0em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">20</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">000</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">120</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">000</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">060</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">000</span><span class=\"mord mathnormal\">c</span><span class=\"mclose\">)</span></span></span></span></li>\n<li><code>strip-lean.tar.gz</code> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>=</mo><mn>512</mn><mtext> </mtext><mn>798</mn><mi>b</mi><mspace width=\"1em\"/></mrow><annotation encoding=\"application/x-tex\">= 512\\,798b \\quad</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">512</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">798</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:1em;\"></span></span></span></span> (no<code>for_mathlib/</code>)</li>\n<li><code>strip-blue.tar.gz</code> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>=</mo><mn>23</mn><mtext> </mtext><mn>846</mn><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">= 23\\,846b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">23</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">846</span><span class=\"mord mathnormal\">b</span></span></span></span></li>\n<li>De Bruijn factor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>=</mo><mfrac><mrow><mn>512</mn><mtext> </mtext><mn>898</mn><mi>b</mi></mrow><mrow><mn>23</mn><mtext> </mtext><mn>846</mn><mi>b</mi></mrow></mfrac><mo>≈</mo><mn>21.5</mn></mrow><annotation encoding=\"application/x-tex\">= \\frac{512\\,898b}{23\\,846b} \\approx 21.5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251079999999999em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">23</span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mord mtight\">846</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">512</span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mord mtight\">898</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">21.5</span></span></span></span></li>\n</ul>",
        "id": 240287703,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1622014033
    },
    {
        "content": "<p>Which you interpret to mean ...? :-)</p>",
        "id": 240287889,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1622014190
    },
    {
        "content": "<p>I don't really interpret. That's the job of my audience...</p>",
        "id": 240288028,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1622014278
    },
    {
        "content": "<p>It seems that the blueprint compresses better than the lean code. So I guess there's more redundancy in the blueprint? <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 240288120,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1622014355
    },
    {
        "content": "<p>(Edit: I forgot to count 8.17 and 8.19, so the proof in Analytic.pdf is more like 12p.)</p>",
        "id": 240288273,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1622014496
    },
    {
        "content": "<p>Is the talk public?</p>",
        "id": 240288617,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1622014739
    },
    {
        "content": "<p><a href=\"http://individual.utoronto.ca/groechenig/K.html\">http://individual.utoronto.ca/groechenig/K.html</a></p>",
        "id": 240288634,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1622014761
    },
    {
        "content": "<p>Johan is on at <time datetime=\"2021-05-26T16:00:00Z\">2021-05-27T02:00:00+10:00</time> . Too late for me. :-)</p>",
        "id": 240289217,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1622015188
    },
    {
        "content": "<p>Sorry <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> I'm also not sure it's recorded. But ey, you guys won't here anything new anyways.</p>",
        "id": 240289287,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1622015249
    },
    {
        "content": "<p>How come the Lean text only compresses by a factor of two? It's just text, right, with a lot of words coming back, so it should be much better. Or has it something to do with unicode? I guess a more efficient compression engine would give different results.</p>",
        "id": 240289730,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1622015564
    },
    {
        "content": "<p>I'm not a compression expert...</p>",
        "id": 240290724,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1622016224
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>-rw-rw-r-- 1 jmc jmc  21764 May 26 08:08 strip-blue.tar.xz\n-rw-rw-r-- 1 jmc jmc 468512 May 26 08:08 strip-lean.tar.xz\n</code></pre></div>",
        "id": 240291228,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1622016573
    },
    {
        "content": "<p><code>lz4</code> only makes things worse</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>-rw-rw-r-- 1 jmc jmc  37870 May 26 08:12 strip-blue.tar.lz4\n-rw-rw-r-- 1 jmc jmc 619758 May 26 08:12 strip-lean.tar.lz4\n</code></pre></div>",
        "id": 240291554,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1622016796
    }
]