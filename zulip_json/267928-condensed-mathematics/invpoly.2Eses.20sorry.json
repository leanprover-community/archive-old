[
    {
        "content": "<p>I have been working on a plan to remove the <code>sorry</code> in <code>invpoly.ses</code>; however my plan involves using results in <code>laurent_measures.ses2</code>. I've added <code>import laurent_measures.ses2</code> to <code>invpoly.ses</code> and it worked, which was a good start. However the running assumptions in <code>invpoly.ses</code> are <code>0&lt;p&lt;=1</code> so the results in <code>laurent_measures.ses2</code> do not apply, as they need <code>p&lt;1</code> (or equivalently 1/2&lt;r). <code>master</code> compiles right now. But I changed line 20 in <code>invpoly.ses</code> to <code>... [fact (p&lt;1)]</code>  and this breaks the build; I get errors in <code>laurent_measures.ext</code> (which Adam is in the process of editing right now). I tried changing <code>p&lt;=1</code> to <code>p&lt;1</code> in that file too (but I'm unclear about whether the p there is my p or p') and got a bunch of errors which look fixable but I need to go and cook dinner right now so this issue is currently unresolved; I'll come back to it in a couple of hours if nobody fixed it before then. I'm hoping this issue isn't serious!</p>",
        "id": 282696361,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652816563
    },
    {
        "content": "<p>I need a (finite) bound for a function in the proof of <code>short_exact</code> in <code>invpoly/ses.lean</code> and the bound I worked out on paper involves <code>(2 - r⁻¹)⁻¹</code> which isn't much of a bound if p=1 and thus r=1/2.</p>",
        "id": 282696854,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652816783
    },
    {
        "content": "<p>I am assuming that the answer is \"oh we just need to change a bunch of &lt;= to &lt; and everything will be fine\", this feels mathematically like it's what's going to happen, and this is just some random noise because we didn't ever need p&lt;1 until this point in the argument so people just went with p&lt;=1.</p>",
        "id": 282697063,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652816890
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean-liquid/blob/786e35176a114db02d442dc5cdf7925edd78baff/src/invpoly/ses.lean#L141-L144\">https://github.com/leanprover-community/lean-liquid/blob/786e35176a114db02d442dc5cdf7925edd78baff/src/invpoly/ses.lean#L141-L144</a></p>",
        "id": 282697287,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652817004
    },
    {
        "content": "<p>OK I've fixed it, problem solved. At least I hope it is -- master compiles with the change. In <code>laurent_measures.ext</code> I now see that the thing which is needed is <code>p' &lt; 1</code> and we have this because the assumptions are <code>p' &lt; p</code> and <code>p &lt;= 1</code>, so in particular we can leave p&lt;=1 in that file. Sorry for the noise! I just didn't have time to think about it earlier and was slightly worried that this would cause problems.</p>",
        "id": 282717600,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652827991
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean-liquid/commit/b657ef418c12acd738dbacf82b0d294961a1a90e\">here</a> are the changes. I think the <code>sorry</code> in <code>invpoly/ses.lean</code> is not fillable unless <code>p &lt; 1</code> (which it now is) but in the application in <code>laurent_measures/ext.lean</code> we apply it to <code>p'</code> not <code>p</code>, and <code>p' &lt; 1</code> is deducible from the running hypotheses in that file so no more hypotheses need to be changed.</p>",
        "id": 282717827,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652828141
    },
    {
        "content": "<p>Yeah, I think we got <code>p</code> and <code>p'</code> confused again. Sorry for that. And thanks for fixing this.</p>",
        "id": 282736609,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1652847611
    }
]