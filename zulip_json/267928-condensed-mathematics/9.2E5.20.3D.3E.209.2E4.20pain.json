[
    {
        "content": "<p>The sorry in <code>liquid.lean</code> is currently not provable, I think <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> <br>\nIn the definition of the system of complexes associated with <code>Mbar r' S</code> (or any <code>M</code>), we take equalizers in a final step. These equalizers are taken in the category <code>NormedGroup</code> with bounded homomorphisms.</p>\n<p>Key point: I don't think that we can prove that the inclusion from the equalizer of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mspace></mspace><mspace width=\"0.1111111111111111em\"></mspace><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333333333333333em\"></mspace><mi>V</mi><mo>→</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">f \\colon V \\to W</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111111111111111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333333333333333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> is an isometry. The only tool we have is the universal property of equalizers.</p>\n<p>For the proof 9.5 =&gt; 9.4 we want to use that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mrow><mi mathvariant=\"normal\">H</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">m</mi></mrow><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">Z</mi><mo separator=\"true\">,</mo><mi>M</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathrm{Hom}(\\Z, M)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">H</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">m</span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mclose\">)</span></span></span></span> is isomorpic to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>, and hence they have isomorphic complexes. But the isomorphism between those complexes does not have to be by isometries. I thought we could easily prove that it would be isometries, but you can now see why we are stuck.</p>",
        "id": 229639292,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615374830
    },
    {
        "content": "<p>So, either we refactor everything, or we get weird constants in 9.4 that are not the same as the constants in 9.5.</p>",
        "id": 229639385,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615374860
    },
    {
        "content": "<p>If you want to keep track of precise norms then you could use morphisms which are norm-nonincreasing rather than bounded</p>",
        "id": 229639700,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1615375050
    },
    {
        "content": "<p>Yes, but we need some morphisms that increase the norm. So we need to do something slightly smarter.</p>",
        "id": 229644664,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615377680
    },
    {
        "content": "<p>I think that the easiest way out is to just use an explicit construction of the equalizer, instead of the <code>category_theory</code> machine.</p>",
        "id": 229644716,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615377715
    },
    {
        "content": "<p>Hmm, I need to think carefully about my claim that we need morphisms that increase the norm. That might be based on an old idea of using <code>NormedGroup</code> for stuff that is now all dealt with by <code>profinitely_filtered_pseudo_normed_group</code>.</p>",
        "id": 229647248,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615378888
    },
    {
        "content": "<p>Otoh, with norm-nonincreasing maps, we no longer have a preadditive category</p>",
        "id": 229647422,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615378980
    },
    {
        "content": "<p>Which might be annoying for some of the homological algebra that we want to do later</p>",
        "id": 229647500,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615379020
    },
    {
        "content": "<p>I confirmed that there are quite a number of morphisms that are potentially norm-increasing.</p>",
        "id": 229655391,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615382243
    },
    {
        "content": "<p>In particular, we haven't yet implemented the step just above 9.6, which explains how to make <code>BD.system (Mbar r' S)</code> into an admissible system. Our current definition is not admissible.</p>",
        "id": 229655593,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615382314
    },
    {
        "content": "<p>And I think we want to maintain the flexibility to talk about norm-increasing homs during the construction.</p>",
        "id": 229655646,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615382340
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/267928-condensed-mathematics/topic/9.2E5.20.3D.3E.209.2E4.20pain/near/229655593\">said</a>:</p>\n<blockquote>\n<p>In particular, we haven't yet implemented the step just above 9.6, which explains how to make <code>BD.system (Mbar r' S)</code> into an admissible system. Our current definition is not admissible.</p>\n</blockquote>\n<p>Note that this is not a mathematical issue, we can reduce to the admissible case. I claim that <code>thm95</code> is provable as stated.<br>\nThere is a reduction to the admissible case. But we need to implement that reduction step.</p>",
        "id": 229656835,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615382728
    },
    {
        "content": "<hr>\n<p>The pain has been fixed. I've made the equalizers explicit, and show that a whole bunch of maps are norm-noninc</p>",
        "id": 229678808,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615389596
    },
    {
        "content": "<p>So the file <code>liquid.lean</code> no longer contains a sorry.</p>",
        "id": 229678878,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615389610
    },
    {
        "content": "<p>Congratulations on the progress! Were there norm-increasing maps in the end? I would have expected that the two complexes should really be the same, with the same norms.</p>",
        "id": 229736382,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1615407654
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"369530\">@Peter Scholze</span> I needed to make an actual change, but there was no math content</p>",
        "id": 229736897,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615407801
    },
    {
        "content": "<p>If you take an equalizer <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mo>⊂</mo><mi>V</mi><mo><mover><mo><mo>→</mo></mo><mo lspace=\"0em\" rspace=\"0em\">→</mo></mover></mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">E \\subset V \\stackrel{\\to}{\\to} W</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9236789999999999em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mop op-limits\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9236789999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">→</span></span></span><span style=\"top:-3.5668699999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">→</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span></span></span></span> in <code>NormedGroup</code> then there is no reason why the inclusion <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mo>⊂</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">E \\subset V</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> is norm-preserving.</p>",
        "id": 229737107,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615407867
    },
    {
        "content": "<p>Ok, I should qualify that: if you take an <code>equalizer</code> in the sense of abstract category theory.</p>",
        "id": 229737220,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615407906
    },
    {
        "content": "<p>So I ended up defining <code>NormedGroup.equalizer</code> which does the obvious thing, and fixes this problem.</p>",
        "id": 229737311,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615407938
    }
]