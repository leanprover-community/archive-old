[
    {
        "content": "<p>I pushed some sorrys to <code>breen_deligne.suitable</code>. Anyone interested in fooling around with Breen--Deligne data and explicit (block) matrices should feel free to kill them (-;</p>",
        "id": 233567176,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617831298
    },
    {
        "content": "<p>Do we still only have 2x2 block matrices?</p>",
        "id": 233568688,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1617832179
    },
    {
        "content": "<p>Doesn't 2×2 suffice for the BD stuff? These are used in the BD homotopy from addition, right?</p>",
        "id": 233569159,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1617832407
    },
    {
        "content": "<p>Yes I should think so, I just noticed it when I was documenting the files :-)</p>",
        "id": 233569509,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1617832584
    },
    {
        "content": "<p>I've added</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">very_suitable</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">universal_map</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"n\">r'</span> <span class=\"o\">:</span> <span class=\"n\">out_param</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c₁</span> <span class=\"n\">c₂</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c'</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"n\">f.bound_by</span> <span class=\"n\">N</span> <span class=\"bp\">∧</span> <span class=\"n\">f.suitable</span> <span class=\"n\">c₁</span> <span class=\"n\">c'</span> <span class=\"bp\">∧</span> <span class=\"n\">r</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">c'</span> <span class=\"bp\">≤</span> <span class=\"n\">r'</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">c₂</span>\n</code></pre></div>\n<p>and</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">very_suitable</span> <span class=\"o\">(</span><span class=\"n\">BD</span> <span class=\"o\">:</span> <span class=\"n\">data</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"n\">r'</span> <span class=\"o\">:</span> <span class=\"n\">out_param</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c_</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"bp\">≥</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">universal_very_suitable</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">BD.d</span> <span class=\"n\">i</span> <span class=\"n\">j</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">very_suitable</span> <span class=\"n\">r</span> <span class=\"n\">r'</span> <span class=\"o\">(</span><span class=\"n\">c_</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c_</span> <span class=\"n\">j</span><span class=\"o\">))</span>\n</code></pre></div>",
        "id": 233775850,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617951259
    },
    {
        "content": "<p>Under the assumption <code>BD.very_suitable r r' c_</code>, Lean now agrees that the double complex used in the proof of thm9.5 is admissible</p>",
        "id": 233775874,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617951290
    },
    {
        "content": "<p>Does <code>out_param</code> do anything in a <code>def</code>?</p>",
        "id": 238998682,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1621191343
    }
]