[
    {
        "content": "<p>I just hit the following goal: we need to show that <code>δ</code> is functorial. That hasn't been done yet, has it?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"bp\">⋙</span> <span class=\"n\">homology_functor</span> <span class=\"n\">Ab</span> <span class=\"o\">(</span><span class=\"n\">complex_shape.up</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"n\">h</span> <span class=\"bp\">≫</span> <span class=\"n\">homological_complex.δ</span> <span class=\"o\">(</span><span class=\"n\">f.app</span> <span class=\"n\">c₂</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g.app</span> <span class=\"n\">c₂</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">rfl</span> <span class=\"bp\">=</span> <span class=\"n\">homological_complex.δ</span> <span class=\"o\">(</span><span class=\"n\">f.app</span> <span class=\"n\">c₁</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g.app</span> <span class=\"n\">c₁</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">rfl</span> <span class=\"bp\">≫</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">⋙</span> <span class=\"n\">homology_functor</span> <span class=\"n\">Ab</span> <span class=\"o\">(</span><span class=\"n\">complex_shape.up</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 282604994,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1652774678
    },
    {
        "content": "<p>This is really ugly. There is no cheap way to get functoriality of the connecting map in the snake lemma, right?</p>",
        "id": 282652029,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1652799148
    },
    {
        "content": "<p>So maybe we do need the salamander lemma (including functoriality). And then reprove the snake lemma using that.</p>",
        "id": 282652093,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1652799175
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260921\">@Markus Himmel</span> Did you think about something like this during your BSc thesis?</p>",
        "id": 282652153,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1652799200
    },
    {
        "content": "<p>Why would proving naturality for the salamander lemma be easier than for snake?</p>",
        "id": 282652260,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652799239
    },
    {
        "content": "<p>It's a smaller diagram?</p>",
        "id": 282652338,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1652799257
    },
    {
        "content": "<p>But the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>δ</mi></mrow><annotation encoding=\"application/x-tex\">\\delta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span></span></span></span> is essentially the same construction, no?</p>",
        "id": 282652398,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652799285
    },
    {
        "content": "<p>You chain together several salamander maps to get the snake map.</p>",
        "id": 282652455,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1652799312
    },
    {
        "content": "<p>Sure, but I think our snake <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>δ</mi></mrow><annotation encoding=\"application/x-tex\">\\delta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03785em;\">δ</span></span></span></span> is already defined as such a composition.</p>",
        "id": 282652503,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652799329
    },
    {
        "content": "<p>Anyway, I'm still  stuck trying to prove that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0 = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>, so ignore me.</p>",
        "id": 282652570,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652799352
    },
    {
        "content": "<p>Okay, I finally figured out how to prove that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0 = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>.</p>",
        "id": 282655081,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652800230
    },
    {
        "content": "<p>I guess the proof was <code>r0fl</code>?</p>",
        "id": 282655170,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1652800271
    },
    {
        "content": "<p>I have still not quite understood why the snake lemma delta seems to be \"unambiguously well-defined\" in the sense that one choice of sign is better (simpler) than the others, but in the cocycle model of group cohomology the boundary map seems to involve a random choice of sign (do you consider gb-b or b-gb ?)</p>",
        "id": 282664901,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652803796
    },
    {
        "content": "<p>Finally, in the derived functor model of group cohomology, the boundary map and the fact that it's functorial are actually part of the data because it's a universal delta functor, so the question doesn't arise</p>",
        "id": 282665192,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652803908
    },
    {
        "content": "<p>In the setup of the snake lemma, I'm convinced that there is a canonical choice. I haven't thought about whether the ambiguities you mention cancel due to ambiguities in comparison isomorphisms, or something like that.</p>",
        "id": 282670073,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1652805817
    },
    {
        "content": "<p>Yes, the \"follow your nose\" choice is better than the \"introduce a random minus sign\" choice for snake lemma boundary map, just like the sensible map from a vector space to its double dual can be defined without throwing in a random minus sign. Probably some parts of the theory also work for commutative additive monoids but other parts don't? Going from homogeneous cocycles to inhomogeneous ones in group cohomology needs the object you're taking cohomology of to have negation.</p>",
        "id": 282671728,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652806450
    }
]