[
    {
        "content": "<p>Recently to abuse defeq I changed a definition in LTE and had to do quite a big refactor. I learnt how to get automation to help me, but one thing I noticed was that <code>simp</code> simps <code>1 / 2</code> to <code>2⁻¹</code> in both <code>real</code> and <code>nnreal</code>, which made it harder to use the simplifier -- stuff wasn't in simp normal form. On a whim, I just spent the last few hours changing all the <code>1/2</code>s in the project to <code>2⁻¹</code>s. I think it's better. I think <code>half</code> could refer to this constant, Most proof fixes just involved removing <code>\\l one_div</code> stuff. My logic: if we were using -1 constantly in an argument we wouldn't keep writing <code>0 - 1</code> would we!</p>\n<p>The refactor is on the <code>twoinv</code> branch, which I didn't merge to master. Note <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> I changed the \"front facing\" <code>challenge.lean</code>. Are there aesthetic reasons why you'd prefer mathematicians to see the horrible <code>1 / 2</code>? Does anyone have any comments about this? Should I make a PR?</p>",
        "id": 280712206,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651287509
    },
    {
        "content": "<p>The diff is <a href=\"https://github.com/leanprover-community/lean-liquid/compare/twoinv\">here</a>. Everything gets a bit shorter.</p>",
        "id": 280713396,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651289233
    },
    {
        "content": "<p>I suspect that some proofs could be golfed now.</p>",
        "id": 280713915,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651290099
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Thanks! I'm perfectly fine with having <code>2⁻¹</code> everywhere.</p>",
        "id": 280715314,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651291944
    },
    {
        "content": "<p>I just replaced <code>(2⁻¹)</code> by <code>2⁻¹</code> everywhere, because <code>⁻¹</code> has maximal precedence.</p>",
        "id": 280719691,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651299312
    },
    {
        "content": "<p>In the branch, I guess?</p>",
        "id": 280719831,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651299525
    },
    {
        "content": "<p>Ok, I have now pushed a commit that merges <code>twoinv</code> into master.</p>",
        "id": 280719843,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651299583
    },
    {
        "content": "<p>Thanks to both of you for this polishing.</p>",
        "id": 280719845,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651299592
    },
    {
        "content": "<p>Thanks Yael!</p>",
        "id": 280727076,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651311475
    },
    {
        "content": "<p>I guess <a href=\"https://leanprover-community.github.io/mathlib_docs/find/exp_series\">docs#exp_series</a> should be redefined to use <code>inv</code> instead of <code>div</code> too?</p>",
        "id": 280730508,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651316426
    },
    {
        "content": "<p>My memory was that Ashvni and I had an awful time manipulating the algebra when doing Bernouilli polynomials via power series. Maybe this would have made it easier?</p>",
        "id": 280734331,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651322113
    },
    {
        "content": "<p>I take my share of responsibility for inserting <code>(1 / 2)</code>all over the places and not reverting it back as soon as I realised that many lemmas where rather stated with <code>2⁻¹</code> and that <code>simp</code>was keeping on inserting some <code>div_one_eq_inv</code> at all places. I am sorry. <span aria-label=\"division\" class=\"emoji emoji-2797\" role=\"img\" title=\"division\">:division:</span></p>",
        "id": 280735594,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1651323923
    },
    {
        "content": "<p>Fortunately global search and replace is not hard to use :-)</p>",
        "id": 280735681,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651324068
    },
    {
        "content": "<p>Welp, looks like this issue doesn't divide us!</p>",
        "id": 280735834,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651324302
    }
]