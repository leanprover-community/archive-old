[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> <span class=\"user-mention\" data-user-id=\"132603\">@Calle SÃ¶nne</span> can you give me an idea of how far we are from defining the proetale site on profinite sets?</p>",
        "id": 236290768,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619506141
    },
    {
        "content": "<p>Once we have it, we can define profinite sets (of course), but I think one of the first things that needs to be done after that, is proving the equivalent \"sheaf condition\" in terms of extremally disconnected sets.</p>",
        "id": 236290863,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619506223
    },
    {
        "content": "<p>There will also be a design question about how to handle condensed abelian groups. Do we want to define them as <code>Ab</code>-valued sheaves or as abelian group objects in <code>Cond(Set)</code> and then define dedicated constructors?</p>",
        "id": 236290951,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619506309
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"369530\">@Peter Scholze</span> My gut feeling is that it will be useful to know that the category of condensed sets/groups/etc... is defeq a sheaf category, because then you can apply general facts. But as soon as you are \"off the ground\" you almost always want to work with functors on extremally disconnected spaces. Is that right?</p>",
        "id": 236291835,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619506858
    },
    {
        "content": "<p>It's a good question about what the \"official\" definition of condensed sets ought to be. In fact, it's a question I've been debating a lot with Dustin, and we haven't quite settled it. There are three options, <em>all of which</em> are definitionally sheaf categories (up to the same set-theoretic problems; so maybe I'm really doing pyknotic things here):</p>\n<p>a) Take the site of extremally disconnected profinite sets, with covers open covers.<br>\nb) Take the site of profinite sets, with covers finite families of jointly surjective maps.<br>\nc) Take the site of compact Hausdorff spaces, with covers finite families of jointly surjective maps.</p>\n<p>The extremally disconnected profinite sets are exactly the compact projective condensed sets, and it's quite useful to build the theory from compact projectives, so this would be a strong argument for a). The compact Hausdorff spaces are exactly the coherent (=quasicompact + quasiseparated) condensed sets, so this gives an argument for c). But profinite sets are some weird middle ground; they aren't really distinguished by any simple property inside condensed sets.</p>\n<p>Still, I am advocating for taking b) as the definition. One reason is that the site in b) has all finite limits (in particular, finite products), and this is generally an extremely useful property to have. The other reason (making it more suitable than c)) is that profinite sets are in many ways much more basic than general compact Hausdorff spaces -- for example, they are pro-(finite sets), and anti-equivalent to Boolean algebras. Relatedly, many of the basic constructions, like the free solid or liquid modules, are easily and uniformly defined for all profinite sets (but not for general compact Hausdorff spaces).</p>\n<p>I wouldn't be surprised if condensed sets turn out to be a really good test case for the problem of handling the idea of \"the following definitions are canonically equivalent\"...</p>",
        "id": 236298990,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1619511299
    },
    {
        "content": "<p>Another reason for b) is that it's a special case of the pro-etale site, right. To what extent do you think that's a good reason for making it the \"official\" definition?</p>",
        "id": 236299432,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619511556
    },
    {
        "content": "<p>I think that's more of a historical reason</p>",
        "id": 236299458,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1619511579
    },
    {
        "content": "<p>For proving 9.1, do you think that (a) is the most useful definition?</p>",
        "id": 236299524,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619511614
    },
    {
        "content": "<p>I'm not sure. You need the vanishing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>H</mi><mi>i</mi></msup><mo stretchy=\"false\">(</mo><mi>S</mi><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>V</mi><mo>^</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">H^i(S,\\hat{V})=0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.19677em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9467699999999999em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span><span style=\"top:-3.25233em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.25em;\"><span class=\"mord\">^</span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> for profinite <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> (and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">i&gt;0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69862em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>), and I think this is most conveniently proved when your site has all profinite <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> in it.</p>",
        "id": 236299637,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1619511670
    },
    {
        "content": "<p>You also need free modules <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><mi>S</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb Z[S]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">]</span></span></span></span> for arbitrary profinite <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> a lot</p>",
        "id": 236299778,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1619511744
    },
    {
        "content": "<p>Ooh, right. So we probably want (a) + (b) and the equivalence between them.</p>",
        "id": 236299779,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619511745
    },
    {
        "content": "<p>My internal point of view is that b) is the \"official definition\", but immediately comes with an equivalence to a), and this equivalence is used to prove lots of facts about b).</p>",
        "id": 236300051,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1619511922
    },
    {
        "content": "<p>I think in a branch I had the definition of the site - if not I had the definition of the covers with some sorried axioms.</p>",
        "id": 236322604,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1619524445
    },
    {
        "content": "<p>I'd taken approach b)</p>",
        "id": 236322654,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1619524475
    },
    {
        "content": "<p>I'll check today how much of the axioms are done - I think most but I could well be misremembering</p>",
        "id": 236322710,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1619524512
    },
    {
        "content": "<p>Updates on this - the axioms were just over half-done, I'm finishing them off right now</p>",
        "id": 236527589,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1619623552
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/proetale/src/topology/category/proetale.lean\">https://github.com/leanprover-community/mathlib/blob/proetale/src/topology/category/proetale.lean</a> is the sorry-free definition of the proetale topology on profinites, so it's one line to get the category of condensed sets now and once <a href=\"https://github.com/leanprover-community/mathlib/issues/5927\">#5927</a> is ironed out, another couple of lines to get condensed abelian groups (or maybe pyknotic?)</p>",
        "id": 236550906,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1619632549
    },
    {
        "content": "<p>Awesome!</p>",
        "id": 236551849,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619632902
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> are you planning to PR it directly to mathlib?</p>",
        "id": 236551940,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619632926
    },
    {
        "content": "<p>I'll definitely PR the first two sections - I think the third can be generalised and made nicer, so it might be easiest for now to put the third and fourth in the LTE repo since the PR process could take time</p>",
        "id": 236554226,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1619633841
    },
    {
        "content": "<p>Yes, please push it to LTE in that case.</p>",
        "id": 236554472,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619633959
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[derive category]</span>\n<span class=\"kd\">def</span> <span class=\"n\">Condensed</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">[</span><span class=\"n\">large_category</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">Sheaf.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"n\">proetale_topology</span> <span class=\"n\">A</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">Condensed</span> <span class=\"n\">Ab.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">})</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">Condensed</span> <span class=\"n\">Ring.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">})</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span>\n</code></pre></div>\n<p>Works too! :)</p>",
        "id": 236896903,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1619814606
    },
    {
        "content": "<p>That's great!</p>",
        "id": 236896988,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619814645
    },
    {
        "content": "<p>The notation came out nicer than I expected :D</p>",
        "id": 236897012,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1619814652
    },
    {
        "content": "<p>So now we can start working on Condensed.S2</p>",
        "id": 236897101,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619814705
    },
    {
        "content": "<p>Yup, I think the next two goals here are to show the equivalent conditions to be a condensed set here: <a href=\"https://ncatlab.org/nlab/show/condensed+set#definition\">https://ncatlab.org/nlab/show/condensed+set#definition</a>, and Theorem 2.2 from Condensed.pdf</p>",
        "id": 236897229,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1619814760
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/267928-condensed-mathematics/topic/proetale.20site.20on.20profinite/near/236897101\">said</a>:</p>\n<blockquote>\n<p>So now we can start working on Condensed.S2</p>\n</blockquote>\n<p>Is that the condensed sphere?</p>",
        "id": 236897332,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1619814807
    },
    {
        "content": "<p>Bhavik, I guess you've now finally justified the name of this stream! Thanks so much for doing this <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 236938862,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1619845801
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"246273\">Bhavik Mehta</span> <a href=\"#narrow/stream/267928-condensed-mathematics/topic/proetale.20site.20on.20profinite/near/236897229\">said</a>:</p>\n<blockquote>\n<p>Yup, I think the next two goals here are to show the equivalent conditions to be a condensed set here: <a href=\"https://ncatlab.org/nlab/show/condensed+set#definition\">https://ncatlab.org/nlab/show/condensed+set#definition</a></p>\n</blockquote>\n<p>Is there a maths proof of the equivalence between these two conditions written down somewhere? Or does it just drop out if you play with the definitions a bit more</p>",
        "id": 237178260,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1620054999
    },
    {
        "content": "<p>Hmm, I think it should be reasonably direct</p>",
        "id": 237178672,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1620055106
    },
    {
        "content": "<p>Should we go directly for the condition in terms of extremally disconnected sets?</p>",
        "id": 237178830,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620055180
    },
    {
        "content": "<p>The idea is that if you have a cover <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><msubsup><mi>S</mi><mi>i</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">â²</mo></msubsup><msub><mo stretchy=\"false\">}</mo><mrow><mi>i</mi><mo>â</mo><mi>I</mi></mrow></msub><mo>â</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">\\{S_i'\\}_{i\\in I}\\to S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.010556em;vertical-align:-0.258664em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-2.441336em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">â²</span></span></span></span></span><span class=\"vlist-s\">â</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">}</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">â</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">I</span></span></span></span></span><span class=\"vlist-s\">â</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.17737em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">â</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> (so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">I</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span> finite) you can use the first part to see that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">(</mo><msub><mo>â¨</mo><mi>i</mi></msub><msubsup><mi>S</mi><mi>i</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">â²</mo></msubsup><mo stretchy=\"false\">)</mo><mo>â</mo><msub><mo>â</mo><mi>i</mi></msub><mi mathvariant=\"script\">F</mi><mo stretchy=\"false\">(</mo><msubsup><mi>S</mi><mi>i</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">â²</mo></msubsup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal F(\\bigsqcup_i S_i')\\cong \\prod_i \\mathcal F(S_i')</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.051602em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"mopen\">(</span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">â¨</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16195399999999993em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">â</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-2.441336em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">â²</span></span></span></span></span><span class=\"vlist-s\">â</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">â</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.051602em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">â</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16195399999999993em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">â</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">F</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-2.441336em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">â²</span></span></span></span></span><span class=\"vlist-s\">â</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>, and then reduce the sheaf axiom for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><msubsup><mi>S</mi><mi>i</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">â²</mo></msubsup><msub><mo stretchy=\"false\">}</mo><mi>i</mi></msub><mo>â</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">\\{S_i'\\}_i\\to S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.010556em;vertical-align:-0.258664em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-2.441336em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">â²</span></span></span></span></span><span class=\"vlist-s\">â</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">}</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">â</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">â</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> to the cover <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>â¨</mo><msubsup><mi>S</mi><mi>i</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">â²</mo></msubsup><mo>â</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">\\bigsqcup S_i'\\to S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.010556em;vertical-align:-0.258664em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">â¨</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-2.441336em;margin-left:-0.05764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">â²</span></span></span></span></span><span class=\"vlist-s\">â</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">â</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>. (You will also need to use a similar equality on fibre products, of course.)</p>",
        "id": 237178872,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1620055200
    },
    {
        "content": "<p>I think it's better to make this intermediate step</p>",
        "id": 237178963,
        "sender_full_name": "Peter Scholze",
        "timestamp": 1620055225
    }
]