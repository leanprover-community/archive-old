[
    {
        "content": "<p>I'm working on the sorries in <code>single_coproducts.lean</code>.</p>",
        "id": 287712605,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1656421518
    },
    {
        "content": "<p>There is 1 sorry left in this file. I don't see immediately how to tackle it with the lemmas that we have. It is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">noncomputable</span>\n<span class=\"kd\">instance</span> <span class=\"n\">preserves_coproducts_Ext'</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">AB4</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">preserves_colimits_of_shape</span> <span class=\"o\">(</span><span class=\"n\">discrete</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n  <span class=\"o\">((</span><span class=\"n\">Ext'</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">flip.obj</span> <span class=\"n\">Y</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">right_op</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 287713930,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1656422163
    },
    {
        "content": "<p>Isn't this supposed to use the fact that <code>Ext(-,Y)</code> sends coproducts to products?</p>",
        "id": 287715147,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1656422759
    },
    {
        "content": "<p>Along with the fact that <code>single</code> preserves coproducts</p>",
        "id": 287715217,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1656422781
    },
    {
        "content": "<p>well, that's what it's proving, I guess</p>",
        "id": 287717256,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1656423707
    },
    {
        "content": "<p>But we already have the isomorphism between ext of the coproduct and the product of the exts</p>",
        "id": 287717992,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1656424036
    },
    {
        "content": "<p>And I think we may even have that <code>Ext(-,Y).right_op</code> preserves coproducts??</p>",
        "id": 287718076,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1656424077
    },
    {
        "content": "<p>Maybe we never got around to adding that...</p>",
        "id": 287718140,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1656424097
    },
    {
        "content": "<p>Hmm, the skeleton for this sorry is much more than simply \"compose two instances\"</p>",
        "id": 287718266,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1656424176
    },
    {
        "content": "<p>Oh I remember now, we couldn't really state a preserves colimit instance because of the uniformly bounded stuff</p>",
        "id": 287719203,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1656424578
    },
    {
        "content": "<p>yeah, that makes sense</p>",
        "id": 287719564,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1656424725
    },
    {
        "content": "<p>I pushed a proof of this sorry</p>",
        "id": 287726169,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1656427569
    },
    {
        "content": "<p>Nice! Thanks</p>",
        "id": 287729770,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1656429055
    },
    {
        "content": "<p>Another file sorry-free (-;</p>",
        "id": 287729802,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1656429065
    }
]