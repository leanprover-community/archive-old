[
    {
        "content": "<p>I was using <code>finset.card_eq_succ</code> ([un]surprisingly it is never used in mathlib!) and noticed something wrong in the statement:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">card_eq_succ</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">s</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"bp\">∃</span><span class=\"n\">a</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"err\">∉</span> <span class=\"n\">t</span> <span class=\"bp\">∧</span> <span class=\"n\">insert</span> <span class=\"n\">a</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"n\">card</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</pre></div>\n\n\n<p>the <code>{a : α}</code> is useless</p>\n<p>I wonder if problems like this can be detected by Mario's olean parser and whatnot</p>",
        "id": 159555821,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1551304168
    },
    {
        "content": "<p>Occasionally the fact that <code>α</code> is nonempty is important in the proof.</p>",
        "id": 159556813,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1551304933
    },
    {
        "content": "<p>can be solved by olean parser</p>",
        "id": 159556830,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1551304955
    },
    {
        "content": "<p>(in this case it isn't used in the proof)</p>",
        "id": 159556836,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1551304965
    }
]