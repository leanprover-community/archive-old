[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/actions/runs/3392263007/jobs/5640909957\">https://github.com/leanprover-community/mathlib/actions/runs/3392263007/jobs/5640909957</a></p>\n<p>Which line of code is it about, please?</p>",
        "id": 308341503,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1667808786
    },
    {
        "content": "<p>The significant line in that output is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"bp\">@</span><span class=\"n\">list.join_nil</span> <span class=\"c\">/-</span><span class=\"cm\"> simp can prove this:</span>\n</code></pre></div>",
        "id": 308345036,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1667810467
    },
    {
        "content": "<p>and maybe more helpfully:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">list.join_nil</span> <span class=\"bp\">-</span> <span class=\"n\">simp</span> <span class=\"n\">can</span> <span class=\"n\">prove</span> <span class=\"n\">this</span><span class=\"o\">:</span>\n  <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">list.join_singleton</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>is telling you that not both of these lemmas should be in the simp set.</p>",
        "id": 308345104,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1667810505
    },
    {
        "content": "<p>What should be in the simp set? Both <code>list.join_nil</code> and <code>list.join_singleton</code> already have the <code>@[simp]</code> flag.</p>",
        "id": 308346316,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1667811055
    },
    {
        "content": "<p><code>list.join_singleton</code> doesn't exist yet, right?</p>",
        "id": 308346545,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1667811157
    },
    {
        "content": "<p>I think <code>list.join_singleton</code> is the one which should be simp</p>",
        "id": 308346570,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1667811176
    },
    {
        "content": "<p>In fact, I'm not sure we need <code>list.join_nil</code> at all!</p>",
        "id": 308346594,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1667811190
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2317190.20feat.28data.2Flist.2F.7Bbasic.2Cjoin.7D.29/near/308346545\">said</a>:</p>\n<blockquote>\n<p><code>list.join_singleton</code> doesn't exist yet, right?</p>\n</blockquote>\n<p>It has been added in the PR.</p>",
        "id": 308346723,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1667811243
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2317190.20feat.28data.2Flist.2F.7Bbasic.2Cjoin.7D.29/near/308346594\">said</a>:</p>\n<blockquote>\n<p>In fact, I'm not sure we need <code>list.join_nil</code> at all!</p>\n</blockquote>\n<p>We can just write <code>rw list.join,</code> instead. What is the convention?</p>",
        "id": 308346807,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1667811292
    },
    {
        "content": "<p>That's not quite the same. What I meant is that <code>list.join_nil</code> is a special case of <code>list.join_singleton</code></p>",
        "id": 308357852,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1667815918
    },
    {
        "content": "<p>Oh I see now! I thought it was <code>[].join</code> but it is <code>[[]].join</code> actually. I will delete <code>list.join_nil</code> then.</p>",
        "id": 308358148,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1667816027
    },
    {
        "content": "<p>Will you approve my PR please? I have a few more things about <code>list</code> I want to add to mathlib and I would like to get it all done before the port to Lean 4.</p>",
        "id": 309433546,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1668332186
    },
    {
        "content": "<p>I've given it another pass and d+'d it; turns out one lemma was a duplicate, but I'm happy with the rest modulo small nits</p>",
        "id": 309435374,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668333532
    },
    {
        "content": "<p>Maybe <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> wants to do a final golfing pass</p>",
        "id": 309435397,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668333547
    },
    {
        "content": "<p>I do not see any obvious golf.</p>",
        "id": 309438231,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668335670
    }
]