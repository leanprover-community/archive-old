[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span>, I just pushed a commit which changed <code>category_theory/limits/shapes/binary_products.lean</code>, avoiding <code>erw</code> in favour of more <code>dsimp</code>.</p>",
        "id": 209160368,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1599278778
    },
    {
        "content": "<p>I'm going to claim that what I wrote there does not count as a \"non-terminal simp\".</p>",
        "id": 209160371,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1599278799
    },
    {
        "content": "<p>Why is that?</p>",
        "id": 209160489,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1599279020
    },
    {
        "content": "<p>(Per the conversation now going on in <a href=\"#narrow/stream/113488-general/topic/Make.20.60simp.60.20more.20powerful.20than.20.60dsimp.60.3F\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Make.20.60simp.60.20more.20powerful.20than.20.60dsimp.60.3F</a>: <code>simp, dsimp, simp</code> is just emulating \"what <code>simp</code> should be\".)</p>",
        "id": 209161752,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1599281560
    },
    {
        "content": "<p>Skimming through this some more, there is no way that I can give the approving review of this. There's just too much stuff I know nothing about, and don't really understand what it is for.</p>",
        "id": 209162910,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1599283841
    },
    {
        "content": "<p>If you pull out the changes to the category theory files (e.g. <code>diag</code> and <code>codiag</code>) I can certainly merge that.</p>",
        "id": 209162918,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1599283871
    },
    {
        "content": "<p>Ok, I can do that. I don't know if that will be enough to reassure the other reviewers</p>",
        "id": 209162985,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1599284023
    },
    {
        "content": "<p>Presumably not, unfortunately.</p>",
        "id": 209163098,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1599284247
    },
    {
        "content": "<p>I'll have to pick this up later. It's way past my bed time</p>",
        "id": 209163404,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1599284916
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.233638/near/209161752\">said</a>:</p>\n<blockquote>\n<p>(Per the conversation now going on in <a href=\"#narrow/stream/113488-general/topic/Make.20.60simp.60.20more.20powerful.20than.20.60dsimp.60.3F\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Make.20.60simp.60.20more.20powerful.20than.20.60dsimp.60.3F</a>: <code>simp, dsimp, simp</code> is just emulating \"what <code>simp</code> should be\".)</p>\n</blockquote>\n<p>A reminder: The rule on nonterminal simp is actually a rule about following a \"flexible result\" tactic like <code>simp</code> with an \"exact target\" tactic like <code>rw</code> (or <code>exact</code> or <code>refine</code> or most other tactics, but not other \"flexible\" finishing tactics like <code>ring</code> or <code>linarith</code> or <code>dsimp</code>).</p>",
        "id": 209163865,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1599286041
    },
    {
        "content": "<p>It's easier to summarize that as \"no nonterminal simp\", but it does permit patterns like <code>simp, dsimp, ring</code> as finishing sequences.</p>",
        "id": 209163908,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1599286118
    },
    {
        "content": "<p>except you might want to use <code>;</code> instead of <code>,</code> there in case one of the tactics closes the goal early</p>",
        "id": 209163915,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1599286171
    }
]