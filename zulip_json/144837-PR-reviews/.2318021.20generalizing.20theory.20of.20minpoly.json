[
    {
        "content": "<p>This PR generalizes some of the theory of <code>minpoly</code> to the setting of integrally closed rings. In a following PR, I will use some of the results proven here to generalize Gauss' theorem for monic polynomials to this setting.</p>",
        "id": 318475801,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1672342354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span> This is ready for a first review. I should mention all the results are currently in a temporary file (this is just  until the results are in a more or less definitive form - also I'm not sure where some of them should go). Some results could also use a second opinion when it comes to the naming ;)</p>",
        "id": 318476069,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1672342477
    },
    {
        "content": "<p>Sorry for the late answer, I will review it tomorrow</p>",
        "id": 318492254,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672351428
    },
    {
        "content": "<p>I've just noticed this PR has a problem with an import loop, since some of the new results in <code>gauss_lemma.lean</code> require <code>field_theory/splitting_field</code> to be imported, but <code>field_theory/splitting_field</code> imports <code>field_theory.intermediate_field</code> which itself  imports <code>field_theory.minpoly</code> which imports <code>ring_theory.gauss_lemma</code>. One way of fixing this (I think) would be to move the results about <code>gcd_monoid</code> to <code>gauss_lemma.lean</code>. Would people be fine with that?</p>",
        "id": 318979983,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1672660868
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span>  <span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span></p>",
        "id": 318980012,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1672660881
    },
    {
        "content": "<p>I generally prefer making new files that import the right set of dependencies, over moving results or adjusting the import hierarchy. Or are these new results generalizations of the existing results?</p>",
        "id": 318985035,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1672663195
    },
    {
        "content": "<p>I also think it's better to have a new file. You can have a file about integrally closed domains and one about minpoly over such domains (maybe we can have a <code>minpoly</code> folder).</p>",
        "id": 318986619,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672663840
    },
    {
        "content": "<p>These are generalisations of already existing results, but making a new file shouldn't be too much work so I'll do that</p>",
        "id": 318987606,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1672664254
    },
    {
        "content": "<p>A minpoly file could be good !</p>",
        "id": 318987709,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1672664289
    },
    {
        "content": "<p>I suggest the following (to do in a preliminary PR). Create a folder <code>ring_theory/minpoly</code> with files:</p>\n<ul>\n<li><code>basic</code> with definitions and results that hold over any ring</li>\n<li><code>field</code> with results over fields</li>\n<li><code>gcd</code> (that will become <code>integrally closed</code>) with results that hold for <code>gcd_monoid</code>.<br>\nThe preliminary PR should only move stuff, without adding anything new. Feel free to ask for a review.</li>\n</ul>",
        "id": 318988376,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672664598
    },
    {
        "content": "<p>Sure I'll try and do that tonight !</p>",
        "id": 318996204,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1672667501
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> Preliminary PR is now open <a href=\"https://github.com/leanprover-community/mathlib/pull/18048\">#18048</a></p>",
        "id": 319143732,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1672733363
    },
    {
        "content": "<p>When splitting files, is the convention to put as authors of the new files the ones that were listed as authors of the original files?</p>",
        "id": 319143880,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1672733455
    },
    {
        "content": "<p>It's better to git blame and see who actually wrote what makes up this new file.</p>",
        "id": 319147857,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672735470
    },
    {
        "content": "<p>Example:<br>\n<a href=\"/user_uploads/3121/3RQVuvKnoFeyyiEQg0dbQMI8/image.png\">image.png</a><br>\nor you can also \"View File\" then press B.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/3RQVuvKnoFeyyiEQg0dbQMI8/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/3RQVuvKnoFeyyiEQg0dbQMI8/image.png\"></a></div>",
        "id": 319151535,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1672737063
    },
    {
        "content": "<p>Ok cool I'll do that</p>",
        "id": 319157960,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1672739577
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"376152\">Paul Lezeau</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2318021.20generalizing.20theory.20of.20minpoly/near/319143732\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> Preliminary PR is now open <a href=\"https://github.com/leanprover-community/mathlib/pull/18048\">#18048</a></p>\n</blockquote>\n<p>Thanks! I will a look later today.</p>",
        "id": 319181506,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1672748379
    },
    {
        "content": "<p>I've opened another PR (<a href=\"https://github.com/leanprover-community/mathlib/pull/18065\">#18065</a>) to fix some other import issues that were arising. Hopefully it should be ready for review this afternoon</p>",
        "id": 319535775,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1672907774
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2318021.20generalizing.20theory.20of.20minpoly/near/319147857\">said</a>:</p>\n<blockquote>\n<p>It's better to git blame and see who actually wrote what makes up this new file.</p>\n</blockquote>\n<p>But don't feel that you need to do this step; it's nice, but optional.</p>",
        "id": 319688231,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1672959479
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2318021.20generalizing.20theory.20of.20minpoly/near/319688231\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2318021.20generalizing.20theory.20of.20minpoly/near/319147857\">said</a>:</p>\n<blockquote>\n<p>It's better to git blame and see who actually wrote what makes up this new file.</p>\n</blockquote>\n<p>But don't feel that you need to do this step; it's nice, but optional.</p>\n</blockquote>\n<p>In the end it wasn't too annoying so I did it</p>",
        "id": 319763785,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673004994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> If you want <a href=\"https://github.com/leanprover-community/mathlib/pull/18065\">#18065</a> is ready for review :)</p>",
        "id": 319763929,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673005059
    },
    {
        "content": "<p>Nice! I should have some time later today to take a look.</p>",
        "id": 319778197,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1673010851
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2318021.20generalizing.20theory.20of.20minpoly/near/319778197\">said</a>:</p>\n<blockquote>\n<p>Nice! I should have some time later today to take a look.</p>\n</blockquote>\n<p>Great, thanks!</p>",
        "id": 319780248,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673011633
    },
    {
        "content": "<p>For some reason, some random files that are untouched by this PR (<a href=\"https://github.com/leanprover-community/mathlib/pull/18021\">#18021</a>) are making the build fail, and the problem seems to be that some results in the <code>function</code> namespace can no longer be found. For instance, the <a href=\"https://github.com/leanprover-community/mathlib/actions/runs/3862587426/jobs/6584248348\">last build</a> failed because <code>function.injective.comp</code> could not be found in a proof in <code>linear_algebra.lagrange</code>. Does anyone know why this might be happening?</p>",
        "id": 319988044,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673112499
    },
    {
        "content": "<p>I should mention the PR does modify a file (namely <code>data.polynomial.monic</code>) that is in the import graph of the problematic file. I did however have similar problem previously with <code>data.polynomial.hasse_deriv</code> which does not (to the best of my knowledge) have <code>data.polynomial.basic</code> in its import graph</p>",
        "id": 319988101,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673112549
    },
    {
        "content": "<p>I think the problem might be related to the fact I am adding a result to the <code>function</code>namespace (namely <code>function.injective.monic_map_iff</code> in <code>data.polynomial.monic</code>)</p>",
        "id": 319988653,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673112901
    },
    {
        "content": "<p>If you put <code>open function</code> before <code>namespace polynomial</code> you can avoid adding the <code>function.</code>. Not sure exactly why changing imports affect behavior though...</p>",
        "id": 319999043,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1673119570
    },
    {
        "content": "<p>Ok thanks ! I'll try and see if that works on the other file</p>",
        "id": 320000649,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673120803
    },
    {
        "content": "<p>Quite weird though</p>",
        "id": 320000655,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673120811
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> I've opened the Gauss lemma PR (<a href=\"https://github.com/leanprover-community/mathlib/pull/18147\">#18147</a>) you suggested. I've now got a sorry free version of Gauss's lemma for integrally closed rings (modulo one small lemma), so I'll clean this up and push it by tomorrow.</p>",
        "id": 320976833,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673540018
    },
    {
        "content": "<p>Having a look! You can make <a href=\"https://github.com/leanprover-community/mathlib/pull/18021\">#18021</a> depending on this one.</p>",
        "id": 320977271,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673540144
    },
    {
        "content": "<p>I've left a couple of comments, but <code>monic.irreducible_iff_irreducible_map_fraction_map</code> is definitely what we want.</p>",
        "id": 320979386,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673540762
    },
    {
        "content": "<p>Oh thanks ! I wasn't expecting a review so quickly - I haven't pushed the sorry free version yet :D. I'll make the fixes you suggested and push the cleaned-up-and-sorry-free version tomorrow</p>",
        "id": 320980336,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673541021
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> <a href=\"https://github.com/leanprover-community/mathlib/pull/18147\">#18147</a> is ready for review - let me know if I missed anything</p>",
        "id": 321116682,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673602931
    },
    {
        "content": "<p>Just a few more comments and then it is ready to go, thanks!</p>",
        "id": 321142769,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673611094
    },
    {
        "content": "<p>Can you maybe add that <code>monic.irreducible_iff_irreducible_map_fraction_map</code> holds iff the ring is integrally closed (keeping the current version that use the instance). You already proved the difficult implication, for the other just take an element of <code>K</code> that is not in <code>R</code> but is in the integral closure.</p>",
        "id": 321144632,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673611669
    },
    {
        "content": "<p>(I am sorry to keep asking you to add more stuff, I am just very happy about this result)</p>",
        "id": 321145207,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673611852
    },
    {
        "content": "<p>No worries! I've worked a bit on it today, hopefully will hit merge this evening or tomorrow</p>",
        "id": 321208684,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673628788
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> I've just made the last few modifications you requested. Since I ended up editing quite a bit of code to make everything work again, would you mind having a last small look before I hit merge?</p>",
        "id": 321260873,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673645413
    },
    {
        "content": "<p>I will have a look tomorrow, good night!</p>",
        "id": 321283460,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673656173
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 321337552,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673694815
    },
    {
        "content": "<p>It's delegated. Be sure to take into account the lasts comments of myself and <span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span> , thanks!</p>",
        "id": 321344133,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1673697538
    },
    {
        "content": "<p>I've made the changes! I'm just waiting for CI and I'll hit merge as soon as it's finished</p>",
        "id": 321349141,
        "sender_full_name": "Paul Lezeau",
        "timestamp": 1673699426
    }
]