[
    {
        "content": "<p>The question for this PR seems to be whether we prefer <code>a^(1/c)</code> or <code>a^c⁻¹</code> in the lemmas. There are some 'old' (2021) lemmas written by <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> and <span class=\"user-mention\" data-user-id=\"350992\">@Rémy Degenne</span> which use <code>1/c</code>, but that feels slightly odd to me. cc <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span></p>",
        "id": 300283272,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1663903608
    },
    {
        "content": "<p>(this PR is the last roadblock for showing that Schwartz functions are integrable, so I would have this sorted out rather sooner than later)</p>",
        "id": 300283356,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1663903689
    },
    {
        "content": "<p>No strong opinion from me ... If you have the energy to come up with a considered opinion on my behalf, I will thank you for it!</p>",
        "id": 300283422,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1663903760
    },
    {
        "content": "<p>Actually, I don't really care about that - I just want to integrate Schwartz functions <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 300283683,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1663903994
    },
    {
        "content": "<p>If <code>field_simp</code> and/or <code>norm_num</code> and/or <code>ring</code> don't care about the spelling, then I don't care either. Otherwise, I would go with whatever those tactics prefer as \"normal form\".</p>",
        "id": 300290523,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663910444
    },
    {
        "content": "<p>Given </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">):</span> <span class=\"n\">x</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">):</span> <span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p><code>field_simp</code> normalizes both to <code>1 = y * x</code><br>\n<code>ring_nf</code> normalizes to <code>x⁻¹ = y</code></p>",
        "id": 300291042,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1663910910
    },
    {
        "content": "<p>so the first option seems to be the correct way to spell it</p>",
        "id": 300291070,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1663910959
    },
    {
        "content": "<p>(note also that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/one_div\">docs#one_div</a> is a simp lemma)</p>",
        "id": 300298259,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1663916402
    },
    {
        "content": "<p>fyi: I am doing the rewrite for the old lemmas now, but I guess the code will depend on this PR, because the <code>nnreal</code> version should follow trivially from the <code>real</code> version</p>",
        "id": 300525514,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1664019843
    }
]