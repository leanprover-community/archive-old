[
    {
        "content": "<p>This is a Lean PR to get the pretty printer to display the types of numerals as type ascriptions when you either add an attribute or set a pretty printer option:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">pp_numeral_type</span><span class=\"o\">]</span> <span class=\"n\">fin</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">17</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span>\n<span class=\"c1\">-- (2 : fin 17) + (3 : fin 17) : fin 17</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">pp.numeral_types</span> <span class=\"n\">true</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">17</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span>\n<span class=\"c1\">-- (2 : fin (17 : ℕ)) + (3 : fin (17 : ℕ)) : fin (17 : ℕ)</span>\n</code></pre></div>\n<p>There are two use cases I'm imagining: (1) sometimes you aren't sure whether <code>2 ^ 2</code> has a <code>nat</code> or a <code>real</code> exponent, so the option can help you debug without having to turn numerals off completely, and (2) with types like <code>zmod</code> you might rather have it always display ascriptions for numerals (for teaching, for example), since <code>(2 : zmod 5) = (7 : zmod 5)</code> in this situation is better than seeing just <code>2 = 7</code>.</p>\n<p>Are there any other use cases that this might be useful for? Any additional configurable options that might be needed to support them?</p>",
        "id": 273867721,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1646251136
    },
    {
        "content": "<p>(Ideally it could be context-aware and insert ascriptions only where the types are ambiguous, but that seems like it would be a much larger project!)</p>",
        "id": 273867933,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1646251215
    },
    {
        "content": "<p>This is a very nice idea, especially for teaching. I hope Lean 4 will have this as well (in one way or another, I guess it doesn't have to be in core).</p>",
        "id": 273874354,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646254092
    },
    {
        "content": "<p>I'm not sure I understand why you would ever _not_ want to put the <code>pp_numeral_type</code> attribute on something</p>",
        "id": 273877717,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646255514
    },
    {
        "content": "<p>Unless the idea is that we put it on nothing, and you only attach it to things when debugging</p>",
        "id": 273877786,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646255531
    },
    {
        "content": "<p>Either way, this is a great change!</p>",
        "id": 273877804,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646255540
    },
    {
        "content": "<p>I think the default should still be nothing</p>",
        "id": 273878482,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646255927
    },
    {
        "content": "<p>If you are looking at a proof term or a norm_num proof or other larger term with a lot of numbers the type ascriptions will blow up the term by 5x</p>",
        "id": 273878575,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646255994
    },
    {
        "content": "<p>it seems appropriate as something you turn on when you want more information like <code>pp.universes</code></p>",
        "id": 273878689,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646256040
    },
    {
        "content": "<p>Yes. Bhavik and I had quite a few very calculatory proofs in SRL and I really don't need this option to reach unreadable tactic states (and everything is in <code>ℕ</code> or <code>ℚ</code> anyway). Setting it on occasionally for debugging sounds great however!</p>",
        "id": 273882667,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1646257816
    },
    {
        "content": "<p>The option is great (and easy to implement in Lean 4), but I agree with Mario that it definitely shouldn't be the default.</p>",
        "id": 273944162,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1646299053
    }
]