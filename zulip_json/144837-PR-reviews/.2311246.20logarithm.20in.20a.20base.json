[
    {
        "content": "<p>This file has a proliferation of arguments of the form <code>one_lt_b : 1 &lt; b</code>. But I can't seem to include a variable that tells lemmas that this is true for the section. What is going wrong here?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.log</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.pow</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">real</span>\n\n<span class=\"sd\">/-- The real logarithm in a given base. As with the natural logarithm, we define `logb b x` to</span>\n<span class=\"sd\">be `logb b |x|` for `x &lt; 0`, and `0` for `x = 0`.-/</span>\n<span class=\"kd\">@[pp_nodot]</span> <span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">logb</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">log</span> <span class=\"n\">x</span> <span class=\"bp\">/</span> <span class=\"n\">log</span> <span class=\"n\">b</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">one_lt_b</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">one_lt_b</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">logb_le_logb</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">logb</span> <span class=\"n\">b</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">logb</span> <span class=\"n\">b</span> <span class=\"n\">y</span> <span class=\"bp\">↔</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">logb</span><span class=\"o\">,</span> <span class=\"n\">logb</span><span class=\"o\">,</span> <span class=\"n\">div_le_div_right</span> <span class=\"o\">(</span><span class=\"n\">log_pos</span> <span class=\"n\">one_lt_b</span><span class=\"o\">),</span> <span class=\"n\">log_le_log</span> <span class=\"n\">h</span> <span class=\"n\">h₁</span><span class=\"o\">],</span> <span class=\"o\">}</span> <span class=\"c1\">-- unknown identifier 'one_lt_b'</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">logb_lt_logb</span> <span class=\"o\">(</span><span class=\"n\">one_lt_b</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">logb</span> <span class=\"n\">b</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">logb</span> <span class=\"n\">b</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">logb</span><span class=\"o\">,</span> <span class=\"n\">logb</span><span class=\"o\">,</span> <span class=\"n\">div_lt_div_right</span> <span class=\"o\">(</span><span class=\"n\">log_pos</span> <span class=\"n\">one_lt_b</span><span class=\"o\">)],</span> <span class=\"n\">exact</span> <span class=\"n\">log_lt_log</span> <span class=\"n\">hx</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">one_lt_b</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">real</span>\n</code></pre></div>",
        "id": 267797202,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1642027095
    },
    {
        "content": "<p>You can use <code>include one_lt_b</code> below the variable line.</p>",
        "id": 267797454,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1642027295
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.log</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.pow</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">real</span>\n\n<span class=\"sd\">/-- The real logarithm in a given base. As with the natural logarithm, we define `logb b x` to</span>\n<span class=\"sd\">be `logb b |x|` for `x &lt; 0`, and `0` for `x = 0`.-/</span>\n<span class=\"kd\">@[pp_nodot]</span> <span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">logb</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">log</span> <span class=\"n\">x</span> <span class=\"bp\">/</span> <span class=\"n\">log</span> <span class=\"n\">b</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">one_lt_b</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">one_lt_b</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n<span class=\"kn\">include</span> <span class=\"n\">one_lt_b</span>\n\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">logb_le_logb</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">logb</span> <span class=\"n\">b</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">logb</span> <span class=\"n\">b</span> <span class=\"n\">y</span> <span class=\"bp\">↔</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">logb</span><span class=\"o\">,</span> <span class=\"n\">logb</span><span class=\"o\">,</span> <span class=\"n\">div_le_div_right</span> <span class=\"o\">(</span><span class=\"n\">log_pos</span> <span class=\"n\">one_lt_b</span><span class=\"o\">),</span> <span class=\"n\">log_le_log</span> <span class=\"n\">h</span> <span class=\"n\">h₁</span><span class=\"o\">],</span> <span class=\"o\">}</span> <span class=\"c1\">-- unknown identifier 'one_lt_b'</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">logb_lt_logb</span> <span class=\"o\">(</span><span class=\"n\">one_lt_b</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">logb</span> <span class=\"n\">b</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">logb</span> <span class=\"n\">b</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">logb</span><span class=\"o\">,</span> <span class=\"n\">logb</span><span class=\"o\">,</span> <span class=\"n\">div_lt_div_right</span> <span class=\"o\">(</span><span class=\"n\">log_pos</span> <span class=\"n\">one_lt_b</span><span class=\"o\">)],</span> <span class=\"n\">exact</span> <span class=\"n\">log_lt_log</span> <span class=\"n\">hx</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">one_lt_b</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">real</span>\n</code></pre></div>\n<p>Check line 16 now</p>",
        "id": 267797457,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1642027302
    },
    {
        "content": "<p>Sweet, that works! Thank you.</p>",
        "id": 267797562,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1642027362
    },
    {
        "content": "<p>Also, <code>hb</code> is probably a shorter hypothesis name.</p>",
        "id": 267797579,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642027380
    },
    {
        "content": "<p>What is the fundamental difference between <code>b x y : ℝ</code> and <code>one_lt_b : 1 &lt; b</code> that the latter needs this <code>include</code> statement. Is it that the latter is a <code>Prop</code>?</p>",
        "id": 267797752,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1642027463
    },
    {
        "content": "<p>Its that <code>b x y</code> are all referred to in the lemma statement, but <code>one_lt_b</code> only comes up in the proof</p>",
        "id": 267797834,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1642027521
    },
    {
        "content": "<p>And lemmas determine which arguments they need before the proof starts</p>",
        "id": 267797862,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1642027539
    },
    {
        "content": "<p>That makes sense, thanks.</p>",
        "id": 267797877,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1642027554
    }
]