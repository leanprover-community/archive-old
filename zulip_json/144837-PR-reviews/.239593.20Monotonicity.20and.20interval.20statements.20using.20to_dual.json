[
    {
        "content": "<p>In that PR, <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> requests a <code>has_ge.ge.dual</code>. Should that have a conclusion of type <code>has_ge.ge</code>? Do we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ge.trans\">docs#ge.trans</a> etc to match <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_le.le.trans\">docs#has_le.le.trans</a> already?</p>",
        "id": 256758340,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1633707398
    },
    {
        "content": "<p>I think the <code>{ge,gt}.foobar</code> lemmas should have conclusions in terms of <code>{le,lt}</code></p>",
        "id": 256759561,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633707889
    },
    {
        "content": "<p>In that case it seems like no action is needed, because dot notation on <code>ge</code> <em>usually</em> sees through to <code>has_le.le</code></p>",
        "id": 256759684,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1633707948
    },
    {
        "content": "<p>Hmm, I had it complain recently.</p>",
        "id": 256759835,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633707993
    },
    {
        "content": "<p>I had a <code>gt</code> in my context, but Lean didn't like me writing <code>h.ne'</code></p>",
        "id": 256759898,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633708026
    },
    {
        "content": "<p>I think if you're not careful lean unfolds the <code>le</code> at the same time and looks at what's underneath</p>",
        "id": 256759970,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1633708065
    },
    {
        "content": "<p>We should use <code>le</code>/<code>lt</code> in the output where possible.</p>",
        "id": 256760070,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1633708091
    },
    {
        "content": "<p>This looks like pretty good evidence we shouldn't add things under the <code>ge</code> namespace:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#print</span> <span class=\"kd\">prefix</span> <span class=\"n\">ge</span>\n<span class=\"c1\">-- ge : Π {α : Type u} [_inst_1 : has_le α], α → α → Prop</span>\n<span class=\"c1\">-- ge.equations._eqn_1 : ∀ {α : Type u} [_inst_1 : has_le α] (a b : α), a ≥ b = (b ≤ a)</span>\n<span class=\"c1\">-- ge.le : ∀ {α : Type u} [_inst_1 : has_le α] {x y : α}, x ≥ y → y ≤ x</span>\n</code></pre></div>",
        "id": 256760121,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1633708130
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/FHuUF0vUddy9GkONrMHTKUBF/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/FHuUF0vUddy9GkONrMHTKUBF/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/FHuUF0vUddy9GkONrMHTKUBF/image.png\"></a></div>",
        "id": 256762500,
        "sender_full_name": "Reid Barton",
        "timestamp": 1633709143
    },
    {
        "content": "<p>hahaha</p>",
        "id": 256764480,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633709878
    }
]