[
    {
        "content": "<p>This PR characterises internal direct sums of submodules. I think it's ready to merge. Is there any reason to wait?</p>",
        "id": 255530366,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1632987291
    },
    {
        "content": "<p>(In particular it proves <code>submodule_is_internal_iff_independent_and_supr_eq_top</code> which says that given a family of submodules, the map from their external direct sum to the parent module is bijective iff the family spans and its components are independent.)</p>",
        "id": 255530412,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1632987319
    },
    {
        "content": "<p>I'll take a look! I somehow missed that PR. Too many things going on <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 255532851,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632988855
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> My gut feeling says that </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">submodule_is_internal_iff_independent_and_supr_eq_top</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"n\">submodule_is_internal</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span> <span class=\"n\">complete_lattice.independent</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">supr</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"bp\">⊤</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>should be the definition of \"internal direct sum\", and the current definition should instead be a result.<br>\nWhat do you think of that? Are there downsides to that approach?</p>",
        "id": 255533276,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632989073
    },
    {
        "content": "<p>Also, do you need <code>R</code> to be a ring?</p>",
        "id": 255533340,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632989121
    },
    {
        "content": "<p>The downside of that approach is that those definitions aren't proved as equivalent when <code>add_comm_monoid M</code></p>",
        "id": 255533635,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632989282
    },
    {
        "content": "<p>And I suspect that's because they aren't equivalent</p>",
        "id": 255533747,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632989340
    },
    {
        "content": "<p>(note that this requires R to be a ring also because <code>coe_sort S</code> is only an <code>add_comm_group</code> given <code>S : module R M</code> when <code>R</code> is a ring, as there is no <code>submodule.neg_mem</code> field)</p>",
        "id": 255533933,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632989449
    },
    {
        "content": "<p>I like the bijective definition.</p>",
        "id": 255534200,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632989605
    },
    {
        "content": "<p>I like the version that stores the two-sided inverse as data even better, but that's saved for a follow-up!</p>",
        "id": 255534390,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632989737
    },
    {
        "content": "<p>Does is matter which is the definition and which is the theorem?</p>",
        "id": 255534495,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632989792
    },
    {
        "content": "<p>Yes, because right now one has weaker typeclasses, as I mention above.</p>",
        "id": 255534528,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632989816
    },
    {
        "content": "<p>Is there a maths question here? Is it the following: If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is an additive commutative monoid then are the following predicates equivalent for an indexed family of submonoids of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>: (1) the canonical map from the direct sum of the submonoids to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is bijective; (2) each submonoid has trivial intersection with the submonoid generated by the others, and the submonoid generated by all of them is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span></p>",
        "id": 255534975,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632990041
    },
    {
        "content": "<p>I don't know whether the version with weaker typeclasses just escapes me, or actually has a counter-example.</p>",
        "id": 255535028,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632990070
    },
    {
        "content": "<p>My hope is that the question is equivalent to the following \"smaller\" problem:</p>\n<blockquote>\n<p>If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is an additive commutative monoid then are the following predicates equivalent for an indexed family of submonoids of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>: (1) the canonical map from the direct sum of the submonoids to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> is injective; (2) each submonoid has trivial intersection with the submonoid generated by the others</p>\n</blockquote>",
        "id": 255535178,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632990135
    },
    {
        "content": "<p>What goes wrong with the \"obvious\" proof?</p>",
        "id": 255535210,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632990155
    },
    {
        "content": "<p>I was able to prove the forward direction but not the reverse one of that smaller question</p>",
        "id": 255535221,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632990165
    },
    {
        "content": "<p>The obvious proof uses subtraction to move things around, so the problem with the less obvious one is I can't do that!</p>",
        "id": 255535484,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632990297
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.239214.20results.20on.20internal.20direct.20sums/near/255534390\">said</a>:</p>\n<blockquote>\n<p>I like the version that stores the two-sided inverse as data even better, but that's saved for a follow-up!</p>\n</blockquote>\n<p>Don't the usual pros and cons of data-vs-props apply here? Should we have both?</p>",
        "id": 255535644,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632990366
    },
    {
        "content": "<p>I see. The issue is that if a finitely supported sum <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∑</mo><mi>i</mi></msub><msub><mi>m</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\sum_i m_i=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16195399999999993em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> then we can't deduce that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>m</mi><msub><mi>i</mi><mn>0</mn></msub></msub><mo>=</mo><mo>−</mo><msub><mo>∑</mo><mrow><mi>i</mi><mo>≠</mo><msub><mi>i</mi><mn>0</mn></msub></mrow></msub><msub><mi>m</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">m_{i_0}=-\\sum_{i\\not=i_0}m_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68066em;vertical-align:-0.2501em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2501em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.185818em;vertical-align:-0.43581800000000004em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.18639799999999984em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\"><span class=\"mord vbox mtight\"><span class=\"thinbox mtight\"><span class=\"rlap mtight\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mord mtight\"><span class=\"mrel mtight\"></span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (because that makes no sense)</p>",
        "id": 255535666,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632990378
    },
    {
        "content": "<p>Essentially, yes <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>. The goal state that I get stuck at is after this line: <a href=\"https://github.com/leanprover-community/mathlib/pull/9214/files#diff-67bf3e0207d9a5c91d7e25c88f46cb6321e8f6618ef60560ce31cadbecdcd948R334\">https://github.com/leanprover-community/mathlib/pull/9214/files#diff-67bf3e0207d9a5c91d7e25c88f46cb6321e8f6618ef60560ce31cadbecdcd948R334</a></p>",
        "id": 255535764,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632990447
    },
    {
        "content": "<p>Indeed how about <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Z</mi><mrow><mo>≥</mo><mn>0</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\Z_{\\geq0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.934069em;vertical-align:-0.24517899999999998em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">≥</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24517899999999998em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Z</mi><mrow><mo>≤</mo><mn>0</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\Z_{\\leq 0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.934069em;vertical-align:-0.24517899999999998em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">≤</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24517899999999998em;\"><span></span></span></span></span></span></span></span></span></span> as submodules of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span></p>",
        "id": 255535779,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632990455
    },
    {
        "content": "<p>Hmm, I agree that for semirings, the bijective defn is probably better behaved. (Same thing with injective homs: you can't just ask for <code>f.ker = ⊥</code>)</p>",
        "id": 255535783,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632990459
    },
    {
        "content": "<p>The canonical map is not injective but each submonoid has trivial intersection with the submonoid generated by the others</p>",
        "id": 255535867,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632990486
    },
    {
        "content": "<p>so here even for the stronger (bijective) statement (2) is true and (1) is false.</p>",
        "id": 255535909,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632990511
    },
    {
        "content": "<p>Perhaps that belongs in the counterexamples folder</p>",
        "id": 255535954,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632990532
    },
    {
        "content": "<p>The question is whether a mathematician would regard this as a direct sum decomposition of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> as a monoid and for me the answer is a big no.</p>",
        "id": 255536014,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632990560
    },
    {
        "content": "<p>Meaning the bijectivity definition is in your opinion the correct choice?</p>",
        "id": 255536137,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632990611
    },
    {
        "content": "<p>Well I think the logic going on in my head is \"obviously the bijectivity definition is the correct one, and here it's not bijective\", so my reasoning is circular</p>",
        "id": 255536207,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632990643
    },
    {
        "content": "<p>I guess what's really going on is that I do not see any use of decomposing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span> into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Z</mi><mrow><mo>≥</mo><mn>0</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\Z_{\\geq0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.934069em;vertical-align:-0.24517899999999998em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">≥</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24517899999999998em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Z</mi><mrow><mo>≤</mo><mn>0</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\Z_{\\leq0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.934069em;vertical-align:-0.24517899999999998em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">≤</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24517899999999998em;\"><span></span></span></span></span></span></span></span></span></span> because you don't have uniqueness</p>",
        "id": 255536269,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632990682
    },
    {
        "content": "<p>I don't know if this needs to go into <code>counterexamples</code>, but it would be excellent to mention it in the doc-string on the definition here!</p>",
        "id": 255536301,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632990704
    },
    {
        "content": "<p>so it's not a direct sum decomposition in any useful sense. But I am not a monoid theorist (indeed I had no idea what a monoid was before I started doing Lean, all I remembered was that it was a group without one of the axioms and goodness knows which one)</p>",
        "id": 255536325,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632990721
    },
    {
        "content": "<p>Yep, I'll follow up shortly with the TODO comments removed, and a counter-example if it's easy</p>",
        "id": 255536443,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632990768
    },
    {
        "content": "<p>In the end, the most important semiring example is the grading on <code>polynomial ℕ</code>.</p>\n<p>Anyway, the discussion above convinced me that we should go for the bijective defn</p>",
        "id": 255536444,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632990769
    },
    {
        "content": "<p>I'm super pleased Kevin found a counter-example</p>",
        "id": 255536490,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632990808
    },
    {
        "content": "<p>Thanks for bringing it up!</p>",
        "id": 255536595,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632990865
    },
    {
        "content": "<p>I've pushed the counterexample, it was more painful than expected</p>",
        "id": 255575267,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1633009168
    },
    {
        "content": "<p>The de-bruijn factor isn't great considering we started with</p>\n<blockquote>\n<p>Indeed how about <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Z</mi><mrow><mo>≥</mo><mn>0</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\Z_{\\geq0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.934069em;vertical-align:-0.24517899999999998em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">≥</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24517899999999998em;\"><span></span></span></span></span></span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Z</mi><mrow><mo>≤</mo><mn>0</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\Z_{\\leq 0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.934069em;vertical-align:-0.24517899999999998em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">≤</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24517899999999998em;\"><span></span></span></span></span></span></span></span></span></span> as submodules of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\"> \\Z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">Z</span></span></span></span></p>\n</blockquote>\n<p>and blew up to 80 lines of lean</p>",
        "id": 255575483,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1633009267
    },
    {
        "content": "<p>Maybe there's some glue missing between <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_compl\">docs#is_compl</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/complete_lattice.independent\">docs#complete_lattice.independent</a> when <code>fintype.card I = 2</code></p>",
        "id": 255585305,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1633012719
    }
]