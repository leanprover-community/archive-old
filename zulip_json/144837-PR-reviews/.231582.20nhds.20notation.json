[
    {
        "content": "<p>It seems we need a discussion about this PR introducing a notation for the neighborhood filter of a point in a topological space. S√©bastien says he doesn't like this notation because it could make mathlib hard to understand for an outsider. This remark leaves me speechless, but probably I was a very stupid outsider when I started.</p>",
        "id": 178667807,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571672664
    },
    {
        "content": "<p>I didn't say \"hard\" but \"even harder\" :)</p>",
        "id": 178667886,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1571672707
    },
    {
        "content": "<p>The question is about the notation for neighborhoods. The current notation is <code>nhds x</code> and Patrick proposes <code>ùìù x</code>. My point is that it is barely shorter, and a newcomer (knowing Lean but not this part of mathlib) could understand that <code>nhds x</code> is talking about neighborhoods of <code>x</code>, but not what <code>ùìù x</code> is. Patrick's point is that it is nicer and shorter. What do you think?</p>",
        "id": 178668099,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1571672821
    },
    {
        "content": "<p>I also add that things like <code>A ‚Üí‚Çê[R] B</code> are much harder to parse for an outsider. But this is all a virtual debate. Outsider don't use filters, so they don't use the neighborhood filters, and they will have to relearn all of topology anyway.</p>",
        "id": 178668734,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571673174
    },
    {
        "content": "<p>In the perfectoid project we use the notation everywhere, and I've use it in every talk I ever displayed any Lean code.</p>",
        "id": 178668926,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571673273
    },
    {
        "content": "<p>In particular in calculations, having notation makes the calculation read as it does on paper.</p>",
        "id": 178669015,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571673312
    },
    {
        "content": "<p>This is just notation, which some people use, right? I don't know what all those &lt;&lt; things mean in the category theory library but I know that I can hover over them until they become stuff which I do know...</p>",
        "id": 178669343,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571673512
    },
    {
        "content": "<p>I definitely don't want to fight about this, this is anyways a minor issue!</p>",
        "id": 178669642,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1571673689
    },
    {
        "content": "<p>Maybe a compromise is that every file using a notation that is not a well known one to general mathematician  (even if the notation was imported from another file) could be encouraged to have a brief docstring at the top of the file listing the notation used, of course this is intentionally vague. It is nice to have some chance of reading a file on a phone or github without opening it in vscode sometimes.</p>",
        "id": 178670411,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1571674157
    },
    {
        "content": "<p>Alex, we already have that requirement, except that very few files conform to the new recommended doc style.</p>",
        "id": 178671411,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571674759
    },
    {
        "content": "<p>S√©bastien, if you think this is a minor issue, why not merging this PR?</p>",
        "id": 178671441,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571674783
    },
    {
        "content": "<p>I also don't feel very strongly about this change</p>",
        "id": 178671609,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571674847
    },
    {
        "content": "<p>In some places (particularly around inequalities) it looks better to me, elsewhere (even in Patrick's example <code>s \\elem nhds a</code>) it looks worse</p>",
        "id": 178671635,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571674871
    },
    {
        "content": "<p>but never much better or worse, of course</p>",
        "id": 178671656,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571674892
    },
    {
        "content": "<p>I am not merging it because I still think it is slightly worse, but I won't object if anyone else wants to merge it.</p>",
        "id": 178671970,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1571675076
    },
    {
        "content": "<blockquote>\n<p>Alex, we already have that requirement, except that very few files conform to the new recommended doc style.</p>\n</blockquote>\n<p>I don't see it in <a href=\"https://github.com/leanprover-community/mathlib/blob/master/docs/contribute/doc.md\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/docs/contribute/doc.md\">https://github.com/leanprover-community/mathlib/blob/master/docs/contribute/doc.md</a> my compromise was to suggest that _even if the notation is imported from a separate file where it is defined_ the reader be reminded about it in the header in non-standard cases, so that such files can be read \"offline\" without the ability to find which line of which import it is defined in.</p>",
        "id": 178672754,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1571675545
    },
    {
        "content": "<p>It's a matter of interpreting the line \"Notations (omitted only if no notation is introduced in this file)\". I don't think this line forbids to recall notations introduced elsewhere.</p>",
        "id": 178672859,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571675616
    },
    {
        "content": "<p>And I think the idea of reading mathlib offline is a joke, unless you already know the library very well.</p>",
        "id": 178672942,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571675647
    },
    {
        "content": "<p>I guess I don't really see how needing to learn ùìù is worth it, when <code>nhds</code> is so short. It's also obvious how to type it.<br>\nThe PR replaces all occurrences of <code>nhds</code> with <code>ùìù</code> (I assume), but how long will that last?</p>",
        "id": 178673162,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571675806
    },
    {
        "content": "<p>My interpretation of \"introduced\" was as \"defined\" ,yes.</p>",
        "id": 178673209,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1571675844
    },
    {
        "content": "<p>I don't dislike this change, exactly, but I feel like I don't understand it</p>",
        "id": 178673230,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571675865
    },
    {
        "content": "<p>My personal experience in the perfectoid project was that it made several proofs (especially calc-blocks) a lot nicer to read.</p>",
        "id": 178673686,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1571676158
    },
    {
        "content": "<p>And I think Patrick wrote &gt;20 times as much code involving this filter than I did</p>",
        "id": 178673716,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1571676183
    },
    {
        "content": "<p>Another option is to define it as notation in the perfectoid space project, right?</p>",
        "id": 178673860,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571676306
    },
    {
        "content": "<p>Well, most of the more elementary code about topological algebra was supposed to move into mathlib at some point</p>",
        "id": 178673922,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1571676356
    },
    {
        "content": "<p>This PR is actually a start of that tradition (-;</p>",
        "id": 178673988,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1571676379
    },
    {
        "content": "<p>We could have it as a notation, but not enforce it everywhere. Note that there is also the filter <code>nhds_within</code>, that I tend to use a lot, and it would be weird to have a notation for one but not the other.</p>",
        "id": 178673998,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1571676392
    },
    {
        "content": "<p>Why don't you want a notation for <code>nhds_within</code>? We could use <code>ùìù_{s} x</code> for <code>nhds_within x s</code> for instance. Note that I needed to open mathlib to learn the order of arguments of <code>nhds_within</code> when typing the previous sentence. With notations <code>ùìù x</code> vs <code>ùìù_{s} x</code> it's clear where is the exotic parameter.</p>",
        "id": 178685578,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571683662
    },
    {
        "content": "<p>As a general rule, I am not keen on notations which make things slightly shorter, but harder to understand. In the same way that in programming languages I don't like perl, and I don't like short variable names. But I understand that some people like it the other way around!</p>",
        "id": 178686289,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1571684125
    },
    {
        "content": "<p>Given discussion in this thread and the maintainer thread, I closed the PR.</p>",
        "id": 178687418,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571684925
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  has been at a conference (doing \"proper mathematics\") but is due back tomorrow. I've discussed this issue with him some more in the last couple of days and I'm hoping he'll have some time for Zulip once he gets back. Patrick's point with this notation is that in the perfectoid project we use this<code>ùìù</code> notation all over the place and it makes things a bit shorter especially when there are several <code>ùìù</code>'s in one line e.g. <a href=\"https://github.com/leanprover-community/lean-perfectoid-spaces/blob/e6abc27c1a5056afdae1deb948bc6362bb8b3c38/src/for_mathlib/topological_rings.lean#L64\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean-perfectoid-spaces/blob/e6abc27c1a5056afdae1deb948bc6362bb8b3c38/src/for_mathlib/topological_rings.lean#L64\">here</a>. <br>\n<span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> 's point is that <code>ùìù x</code> might be understood by fewer people than <code>nhds x</code>, the issue being the people who know enough about topology to know that <code>nhds</code> probably means \"neighbourhoods\" but not enough to know that <code>ùìù </code> is sometimes used for this. There might be no standard notation for this, but on the other hand that doesn't mean that we shouldn't use notation in mathlib. Patrick's observation that notation like <code>A ‚Üí[R] B</code> is being used already in mathlib is a pretty clear cut example of us making up notation, and we also have <code>‚Üí+*</code> for ring hom (there is also no standard notation for this in mathematics and it didn't stop us making one here) which I think is plenty of evidence that we're not scared to obfuscate slightly for the sake of having some cool notation to save typing. On the other hand Sebastien is right to point out that <code>nhds</code> exists in other contexts in mathlib and changing one might make us consider changing them all. I think that's the situation currently.</p>",
        "id": 180383665,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573424238
    },
    {
        "content": "<p>I really don't know what I could add, but I can rewrite things I already wrote.</p>\n<ul>\n<li>I think a couple of thousands years of mathematics history taught us that using notations is useful, especially when performing computations. </li>\n<li>As far as I know, doing topology the way we do it in mathlib doesn't exist anywhere else. That includes Bourbaki. Bourbaki uses filters, especially neighborhood filters, everywhere, but they do very little <em>computations</em> with filters.  So they don't need notations for filters or filter operations (push forward, pull backs, products...).</li>\n<li>The previous point both explain why we need a notation and why arguing that it could make the library hard to read is ridiculous. Beyond the obvious observation that reading any part of mathlib is impossible for beginners, that specific part is hard to read because its specific point of view does not exist on paper.</li>\n</ul>",
        "id": 180421020,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1573477251
    },
    {
        "content": "<p>I started using mathlib almost two years ago, and I've seen many decisions that I couldn't understand or I thought were wrong. But that rejection of using a notation for filters seems several orders of magnitude more wrong and un-understandable than anything else I've seen.</p>",
        "id": 180421182,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1573477367
    },
    {
        "content": "<p>It seems to me that there is no argument of the form \"we can't use \\N because it makes the library more unreadable for beginners\" because the same argument seems to rule out plenty of notation which we already use -- the category theory library is a case in point with its &lt;&lt; and what have you, and all the decorated arrows we have (ring homs, module homs, functions with finite support etc) are also an issue. It seemed to me that the main argument against the notation was that <code>nhds</code> is more easily guessable as \"neighbourhoods\" than \\N is, and that at least <code>-&gt;+*</code> and <code>-&gt;[R]</code> are kind of guessable as ring hom and R-module hom. </p>\n<p>It should also be noted that this is not an issue regarding changing the simp normal form. This is simply a question of <em>notation</em>. Are we lacking some sort of coherent strategy for when notation is good/allowed/recommended?</p>",
        "id": 180434613,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573487588
    },
    {
        "content": "<p>Though I cast a vote earlier, I should emphasize that I don't have a strong opinion one way or another. Notation and style are very personal things. Arguments over notation in calculus split England from the rest of Europe for much of the eighteenth and nineteenth centuries.</p>\n<p>A general policy should be that those who are most actively developing and using a library should be happy with the notation. When people who fit in that category differ, I think each should be allowed to use the notation they prefer. Doing mathematics means getting used to different terminology and notation, and users of the topology library can easily learn to identify \\N and nhds.</p>",
        "id": 180438694,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1573490619
    },
    {
        "content": "<p>Based on further discussions, I want to reopen this PR. The consensus seems to rather weigh towards the side of merging this PR.</p>",
        "id": 180452296,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573500450
    },
    {
        "content": "<p>For the record, if it needs to be updated to library changes, I think the regex (with lookahead) <code>(?&lt;!_)nhds(?!_)</code> should be about right. It matches any occurrence that isn't preceded or followed by <code>_</code>.</p>",
        "id": 180452699,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1573500676
    },
    {
        "content": "<p>I think it's updated.</p>",
        "id": 180462159,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1573508130
    },
    {
        "content": "<p>This PR is now on the merge queue</p>",
        "id": 180492615,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573547113
    }
]