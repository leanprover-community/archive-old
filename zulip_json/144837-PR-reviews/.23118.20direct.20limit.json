[
    {
        "content": "<p>This is a can of worms. If we define a directed order to be one such that for every x and y there is z with x&lt;=z and y&lt;=z, then you can't define (x,a) + (y,b) computably, because you only have the fact that such <code>z</code> exists. So originally I defined a directed order to be one with a supremum function where <code>le_sup_left</code> and <code>le_sup_right</code> hold, but I don't require <code>sup_le</code>. But this generated much backlash, because people don't want it to be a function, but just an existential.</p>",
        "id": 135791634,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539547982
    },
    {
        "content": "<p>I'm not sure as to how this issue can be resolved.</p>",
        "id": 135791641,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539547991
    },
    {
        "content": "<p>You can actually define those sorts of things computably</p>",
        "id": 135791696,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539548067
    },
    {
        "content": "<p>the idea is to use partial functions to keep track of how many of the indices are still valid for use, and which are invalidated by going out of range</p>",
        "id": 135791721,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539548135
    },
    {
        "content": "<p>Could you explain it more? I don't understand what you mean by partial functions.</p>",
        "id": 135791769,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548180
    },
    {
        "content": "<p>actually I need a primer on the direct limit first</p>",
        "id": 135791774,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539548196
    },
    {
        "content": "<p>what's the mathematician's definition?</p>",
        "id": 135791779,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539548207
    },
    {
        "content": "<p><a href=\"https://stacks.math.columbia.edu/tag/04AX\" target=\"_blank\" title=\"https://stacks.math.columbia.edu/tag/04AX\">https://stacks.math.columbia.edu/tag/04AX</a></p>",
        "id": 135791859,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548323
    },
    {
        "content": "<p>do you want to work with filtered categories or posets?</p>",
        "id": 135791879,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539548386
    },
    {
        "content": "<p>posets.</p>",
        "id": 135791881,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548391
    },
    {
        "content": "<p>But I can only find this version in stacks</p>",
        "id": 135791885,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548397
    },
    {
        "content": "<p>ah I can refer you to Atiyah Macdonald</p>",
        "id": 135791934,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548424
    },
    {
        "content": "<p>Exercise 2.14, on PP.32-33</p>",
        "id": 135791963,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548480
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/PALFqY5aEbdKO93gwajVDoTz/2018-10-14-1.png\" target=\"_blank\" title=\"2018-10-14-1.png\">2018-10-14-1.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/PALFqY5aEbdKO93gwajVDoTz/2018-10-14-1.png\" target=\"_blank\" title=\"2018-10-14-1.png\"><img src=\"/user_uploads/3121/PALFqY5aEbdKO93gwajVDoTz/2018-10-14-1.png\"></a></div>",
        "id": 135792016,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548542
    },
    {
        "content": "<p>wait, isn't that definition already perfectly constructive?</p>",
        "id": 135792045,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539548618
    },
    {
        "content": "<p>aha</p>",
        "id": 135792092,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548675
    },
    {
        "content": "<p>the direct sum construction</p>",
        "id": 135792093,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548679
    },
    {
        "content": "<p>ah that's the same as what you mean by finset</p>",
        "id": 135792095,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548691
    },
    {
        "content": "<p>I finally understand why people use direct sum rather than union</p>",
        "id": 135792097,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548701
    },
    {
        "content": "<p>thanks</p>",
        "id": 135792098,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548702
    },
    {
        "content": "<p>issue resolved</p>",
        "id": 135792109,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539548722
    },
    {
        "content": "<p>oh well in this case this needs direct sum which needs dfinsupp which needs to wait for the module refactoring</p>",
        "id": 135792426,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539549266
    },
    {
        "content": "<p>so I re-bury this PR.</p>",
        "id": 135792429,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539549274
    }
]