[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib/issues/4273\">#4273</a> linter fails because <code>simp</code> can apply <code>with_bot</code> lemmas to <code>with_top</code>. How can I avoid this? BTW, it can also apply <code>with_top.range_coe</code> to <code>ennreal</code> creating <code>with_top nnreal</code> in the output; this makes it harder to <code>apply</code> some lemmas afterwards.</p>",
        "id": 211343762,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1601098569
    },
    {
        "content": "<p>I had problems like this with <code>with_zero</code> and <code>with_one</code> and I fixed them all by making them both irreducible</p>",
        "id": 211348302,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1601107024
    },
    {
        "content": "<p>It broke very little, and a lot of what broke could either be fixed by writing better code (ie not abusing definitional equality as much) or just temporarily marking them as reducible in a file</p>",
        "id": 211348349,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1601107093
    },
    {
        "content": "<p>Yes, making them both irreducible makes sense, and is probably a good thing (after proving the relevant API).</p>",
        "id": 211348643,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1601107568
    },
    {
        "content": "<p>Yes, \"writing better code\" sometimes meant \"filling in some API\"</p>",
        "id": 211348856,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1601108024
    },
    {
        "content": "<p>But it was the only way I could get the simp linter to be happy. Before this change it was for me very unpredictable what was going to fire, because sometimes option lemmas fired too (to my surprise)</p>",
        "id": 211348910,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1601108101
    }
]