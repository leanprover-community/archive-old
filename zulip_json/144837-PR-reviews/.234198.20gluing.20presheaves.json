[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> just pinging you on this one as you've been asking for this for a while. <a href=\"https://github.com/leanprover-community/mathlib/issues/4198\">#4198</a> constructs a <code>has_colimits (PresheafedSpace C)</code> instance, which is more or less \"gluing of presheaves\". This doesn't do the <code>SheafedSpace C</code> case yet.</p>",
        "id": 210742044,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1600695650
    },
    {
        "content": "<p>Is there some reflexive subcategory trick?</p>",
        "id": 210753627,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1600700404
    },
    {
        "content": "<p>Some, but not all, constructions on presheaves extend immediately to sheaves without any further alteration -- for example the presheaf direct sum of two sheaves is the sheaf direct sum. However not all do -- for example the presheaf tensor product does not coincide with the sheaf tensor product -- the presheaf tensor product isn't a sheaf and one has to sheafify, in general.</p>",
        "id": 210753903,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1600700523
    },
    {
        "content": "<p>so the question is whether a presheaf colimit of sheaves is a sheaf</p>",
        "id": 210754038,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1600700566
    },
    {
        "content": "<p>and maybe this depends on what they're sheaves of :-)</p>",
        "id": 210754128,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1600700602
    },
    {
        "content": "<p>Note we don't actually have that sheaves are a reflexive subcategory, yet --- we have sheafification (at least of <code>Type</code>-valued presheaves), but not the adjunction.</p>",
        "id": 210824551,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1600744672
    },
    {
        "content": "<p>Does anyone know a reference for <code>has_colimits (PresheafedSpace C)</code>, per se? I was making it up as I went along. I wondered if it would actually work in great generality (using that <code>PresheafedSpace C</code> is the grothendieck construction on the functor that associates to a <code>Top</code> its category of presheaves), but while I think you can construct the candidate cocone, I couldn't see why it would be a colimit  cocone in that generality.</p>",
        "id": 210824626,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1600744783
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> thanks for writing this! I wonder, how hard would it to nos glue sheaves on opens in a fixed ambient space.<br>\nSomething like this: I have a space X, two open sets <code>U1</code> and <code>U2</code>, and a proof that they cover <code>X</code>. (Concretely, their sup in <code>opens X</code> is <code>\\top</code>.)<br>\nI also have a sheaf <code>F1</code> on <code>U1</code> and a <code>F2</code> on <code>U2</code>. And a given fixed isomorphism between <code>F1</code> and <code>F2</code> after restricting to the intersection of <code>U1</code> and <code>U2</code>. Can we now use this machine to get a sheaf on <code>X</code>?</p>",
        "id": 211109007,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600940665
    },
    {
        "content": "<p>First --- this PR only does presheaves, not sheaves! I think we still need the sheafification adjunction before we get the corresponding result for SheafedSpace.</p>",
        "id": 211111392,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1600942246
    },
    {
        "content": "<p>Second --- yes, that should be straightforward. You'll want to set things up so that you can construct <code>pushout f g</code> for appropriate <code>f</code> and <code>g</code>, and then transport along the isomorphism between the pushout in <code>Top</code> and <code>X</code> (which you get from the proof they cover <code>X</code>).</p>",
        "id": 211111560,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1600942382
    },
    {
        "content": "<p>What you won't get for free from what has been written already is that this presheaf actually restricts to give the original <code>F1</code> and <code>F2</code>.</p>",
        "id": 211111686,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1600942465
    },
    {
        "content": "<p>I haven't started in this direction yet --- someone else should grab the glory of ticking of the exercise in Hartshorne. :-)</p>",
        "id": 211111728,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1600942503
    },
    {
        "content": "<p>There are some more fundamental things that I want to get straight before returning to sheafification (yet another equivalent formulation of the sheaf condition, and doing cofinality properly).</p>",
        "id": 211111773,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1600942538
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.234198.20gluing.20presheaves/near/211111686\">said</a>:</p>\n<blockquote>\n<p>What you won't get for free from what has been written already is that this presheaf actually restricts to give the original <code>F1</code> and <code>F2</code>.</p>\n</blockquote>\n<p>This is the price paid for this construction also doing more general things --- i.e. arbitrary colimits, where the maps of spaces aren't just open embeddings.</p>\n<p>You need to feed that fact back in, in order to get that the restrictions are what you started with.</p>\n<p>I don't think this should be particularly hard, but I haven't done it --- and again, I think it will be easier once cofinal functors are set up properly.</p>",
        "id": 211111925,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1600942647
    },
    {
        "content": "<p>With the Hartshorne exercise IIRC the conditions for the gluing involve a cocycle condition, which Kenny observed that he didn't need to glue the sheaves, but which was needed to prove that the glued sheaf restricted to the original sheaves</p>",
        "id": 211113319,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1600943730
    }
]