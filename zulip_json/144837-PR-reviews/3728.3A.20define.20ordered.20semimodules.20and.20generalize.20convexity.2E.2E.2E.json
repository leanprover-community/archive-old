[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span> I'm rewriting convexity for affine spaces, and I have a question about your old PR <a href=\"https://github.com/leanprover-community/mathlib/issues/3728\">#3728</a><br>\nMany lemmas assume <code> {β : Type*} [ordered_add_comm_monoid β] [ordered_semimodule ℝ β]</code>. Is there any reason to prefer these assumptions to <code>{γ : Type*} [ordered_cancel_add_comm_monoid γ]  [ordered_semimodule ℝ γ]</code>? A (semi)module over <code>ℝ</code> can't be just an <code>add_comm_monoid</code> anyway (unless someone forgot to define an instance).</p>",
        "id": 207484628,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1597892788
    },
    {
        "content": "<p>It makes sense if you're going to generalize to <code>{β : Type*} [ordered_add_comm_monoid β] [ordered_semimodule nnreal β]</code>.</p>",
        "id": 207484653,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1597892865
    },
    {
        "content": "<p>Do you need this generalization in some case?</p>",
        "id": 207484656,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1597892880
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> and I were just talking about ordered semimodules yesterday <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 207484694,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597892889
    },
    {
        "content": "<p>Didn't realise there was a PR <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span></p>",
        "id": 207484699,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597892908
    },
    {
        "content": "<p>The PR is already merged!</p>",
        "id": 207484706,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1597892924
    },
    {
        "content": "<p>/me should learn what is in mathlib!</p>",
        "id": 207484715,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597892943
    },
    {
        "content": "<p>That's what you get for going on holidays</p>",
        "id": 207484729,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597892998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> What's your reason for preferring the cancellative version?</p>",
        "id": 207484828,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597893122
    },
    {
        "content": "<p>Copy+paste from wrong line</p>",
        "id": 207484855,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1597893156
    },
    {
        "content": "<p>Fixed.</p>",
        "id": 207484860,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1597893178
    },
    {
        "content": "<p>I'm going to wait for an answer before porting <code>convex_on</code>.</p>",
        "id": 207485378,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1597894052
    },
    {
        "content": "<p>I didn't have any particularly good reason -- at the beginning I was hoping it would allow us to define convexity for functions into things like nnreal, but as you say it doesn't work anyway. I'd be happy with just <code>ordered_add_comm_group</code>, it would clean things up a bit.</p>",
        "id": 207513934,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1597924518
    },
    {
        "content": "<p>Although now that I think about it, <code>[ordered_semimodule nnreal β]</code> might be useful for things like weighting Hermitian matrices by probabilities.</p>",
        "id": 207522693,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1597930571
    }
]