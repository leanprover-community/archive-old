[
    {
        "content": "<p>Just like <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> I hadn't realised that <code>is_left_adjoint</code> was already carrying data. I wonder whether it is still worth putting more emphasis on the <code>ihom</code> part of the data. Right now we have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/--</span>\n<span class=\"sd\">This is the internal hom `A ⟶[C] -`.</span>\n<span class=\"sd\">Note that this is essentially an opaque definition,</span>\n<span class=\"sd\">and so will not agree definitionally with any \"native\" internal hom the category has.</span>\n<span class=\"sd\">TODO: we could introduce a `has_ihom` class</span>\n<span class=\"sd\">that allows specifying a particular definition of the internal hom,</span>\n<span class=\"sd\">and provide a low priority opaque instance.</span>\n<span class=\"sd\">-/</span>\n<span class=\"kd\">def</span> <span class=\"n\">ihom</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">⥤</span> <span class=\"n\">C</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">closed.is_adj</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">A</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">right</span>\n</code></pre></div>\n<p>As I understand it, this docstring is incorrect. But it still points to a problem with the current approach: even if there are no defeq problems, the <code>ihom</code> is still taking a back seat, in some sense.</p>",
        "id": 274500641,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1646719609
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span></p>",
        "id": 274500647,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1646719617
    },
    {
        "content": "<p>I'll fix that comment at some point. I</p>",
        "id": 274505253,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1646724500
    },
    {
        "content": "<p>I'm not sure that it's a problem having <code>ihom</code> take a back seat. I've been using the internal hom in <code>Module R</code> today a bit, and it seems to work fine.</p>",
        "id": 274505277,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1646724538
    },
    {
        "content": "<p>Perhaps the <code>monoidal_closed (Module R)</code> instance would be slightly more understandable if we rearranged the definition?</p>",
        "id": 274505293,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1646724558
    },
    {
        "content": "<p>Yeah, that's exactly what I'm hoping</p>",
        "id": 274505652,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1646724911
    }
]