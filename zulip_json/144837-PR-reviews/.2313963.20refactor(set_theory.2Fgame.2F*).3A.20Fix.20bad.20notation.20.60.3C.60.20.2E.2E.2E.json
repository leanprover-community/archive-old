[
    {
        "content": "<p>I have two reasons for introducing <code>fuzzy</code>:</p>\n<ul>\n<li>It's part of the basic API for <code>lf</code>, which we most definitely want along with <code>lf</code>.</li>\n<li>It makes <code>winner.lean</code> almost trivial.</li>\n</ul>\n<p>I tried to only add the bare minimum of lemmas for it.</p>",
        "id": 282358367,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652542776
    },
    {
        "content": "<p>One reason this PR is so long is that just replacing <code>&lt;</code> by <code>⧏</code> would leave very glaring holes in the API and very awkward statements and proofs. I don't think that not adding the basic API would have been a good idea. It'd lead to extra work making some really awkward proofs that would get immediately golfed down in a subsequent PR.</p>",
        "id": 282358504,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652542995
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459227\">Violeta Hernández</span> has marked this topic as resolved.</p>",
        "id": 282359509,
        "sender_full_name": "Notification Bot",
        "timestamp": 1652544234
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459227\">Violeta Hernández</span> has marked this topic as unresolved.</p>",
        "id": 282359513,
        "sender_full_name": "Notification Bot",
        "timestamp": 1652544239
    },
    {
        "content": "<p>Whoops, misclick. I meant to rename the topic.</p>",
        "id": 282359555,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652544257
    },
    {
        "content": "<p>By the way, where should we discuss the addition of <code>\\&lt;|</code> and <code>\\lf</code>? I think both of these would be really useful</p>",
        "id": 282362084,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652547276
    },
    {
        "content": "<p>Cc <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> who knows how to do it. It's on the repository for the vscode extension iirc.</p>",
        "id": 282362390,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1652547639
    },
    {
        "content": "<p>Oh, as for the PR being minimal. I just realized that there is one extra thing I did I could have avoided - I added some dot notation on <code>equiv</code>. Having to write <code>equiv_symm</code> and <code>equiv_trans</code> was just tiring me out</p>",
        "id": 282362475,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652547748
    },
    {
        "content": "<p>If needed, I could move this to a separate PR</p>",
        "id": 282362485,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652547778
    },
    {
        "content": "<p>The very glaring holes were already there before, and fixing the definition doesn't compel you to fix all of the API. It's okay to touch twice the same line in two consecutive PRs.</p>",
        "id": 282363455,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652549179
    },
    {
        "content": "<p>I would have been fine with some scope creep had the diff been &lt; 500 lines long, but here it's 1.3k.</p>",
        "id": 282363483,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652549241
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459227\">Violeta Hernández</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2313963.20refactor.28set_theory.2Fgame.2F*.29.3A.20Fix.20bad.20notation.20.60.3C.60.20.2E.2E.2E/near/282358504\">said</a>:</p>\n<blockquote>\n<p>It'd lead to extra work making some really awkward proofs that would get immediately golfed down in a subsequent PR.</p>\n</blockquote>\n<p>Just changing the notation and lemma names wouldn't make proofs really awkward, because it wouldn't change the proofs.</p>",
        "id": 282363721,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652549581
    },
    {
        "content": "<p>There are places where we do want to prove something about <code>&lt;</code> instead of <code>⧏</code>. Again, I could do a bare bones PR where I only rename things, but I would then need to do a subsequent one which largely looks the same as the current one.</p>",
        "id": 282364032,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652550026
    },
    {
        "content": "<p>I will separate the <code>equiv</code> dot notation, but I don't think there's anything else that it would be a good idea to separate</p>",
        "id": 282364044,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652550084
    },
    {
        "content": "<p>Darn it, for whatever reason, this dot notation suddenly breaks a few <code>equiv_rw</code>? These <code>equiv_rw</code> can be completely sidestepped (and the proofs made easier), but only once <a href=\"https://github.com/leanprover-community/mathlib/pull/13611\">#13611</a> gets merged.</p>",
        "id": 282364403,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652550622
    },
    {
        "content": "<p>I'll just remove the dot notation from this PR and hope that magically fixes <code>equiv_rw</code>; I'll do the dot notation refactor after both this and <a href=\"https://github.com/leanprover-community/mathlib/pull/13611\">#13611</a> get merged</p>",
        "id": 282364740,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652551140
    },
    {
        "content": "<p>There, I've removed that</p>",
        "id": 282366558,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652553989
    },
    {
        "content": "<p>The diff size didn't even get much smaller, haha</p>",
        "id": 282366815,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652554366
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459227\">Violeta Hernández</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2313963.20refactor.28set_theory.2Fgame.2F*.29.3A.20Fix.20bad.20notation.20.60.3C.60.20.2E.2E.2E/near/282364032\">said</a>:</p>\n<blockquote>\n<p>I could do a bare bones PR where I only rename things, but I would then need to do a subsequent one which largely looks the same as the current one.</p>\n</blockquote>\n<p>This is not a problem.</p>",
        "id": 282370947,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652560527
    },
    {
        "content": "<p>Just feels like kicking down the can to me, with the added inconvenience that the API will have a ton of holes in the meantime</p>",
        "id": 282371799,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652561966
    },
    {
        "content": "<p>I think the refactor is as currently simple as I would feel comfortable keeping it</p>",
        "id": 282371885,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652562014
    },
    {
        "content": "<p>Well, you managed to live several months with this ton of holes, it surely can wait a dedicated PR <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 282374001,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652565153
    },
    {
        "content": "<p>Anyway, I'm not the one summoning bors.</p>",
        "id": 282374007,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652565168
    },
    {
        "content": "<p>I think if <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> is fine merging it then there's no need to change anything more for this PR (and it looks good to me, though I don't know anything about games). It's just Good Practice to construct PRs that have limited scope of a given <a href=\"https://github.com/leanprover-community/lean/blob/master/doc/commit_convention.md\">type</a> to make it easier to evaluate changes. The <code>feat</code> part of the PR that you slipped in seems localized enough that it's not so bad.</p>",
        "id": 282374867,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1652566211
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"459227\">@Violeta Hernández</span> Could you point me to the commit where the dot notation broke? There are some bugs in dot notation itself that I've been trying to fix, and I want to see if my fix applies here.</p>",
        "id": 282374876,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1652566243
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/13963/commits/755800928f882e4591702caf0ad7848c27cf3e91\">https://github.com/leanprover-community/mathlib/pull/13963/commits/755800928f882e4591702caf0ad7848c27cf3e91</a></p>",
        "id": 282376196,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652568139
    },
    {
        "content": "<p>I have no idea how anything I did correlates to that <code>equiv_rw</code> breaking</p>",
        "id": 282376198,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652568154
    },
    {
        "content": "<p>And when I reverted the dot notation change, it just magically got fixed</p>",
        "id": 282376358,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652568442
    },
    {
        "content": "<p><em>maybe</em> it has something to do with <code>pgame.equiv.symm</code> clashing with <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.symm\">docs#equiv.symm</a>?</p>",
        "id": 282376366,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652568464
    }
]