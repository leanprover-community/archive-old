[
    {
        "content": "<p>I seem to have confused the dependent issues bot by removing the <code>blocked-by-other-PR</code> label myself. This PR is, in fact ready for review.</p>",
        "id": 257670867,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634290727
    },
    {
        "content": "<p>Ping! Can anyone review this?</p>",
        "id": 257996726,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634547435
    },
    {
        "content": "<p>I was about to review this yesterday and was put off by your remark:</p>\n<blockquote>\n<p>I expect this new file to be temporary as the lemmas hold more generally in a conditionally complete linear order whose default value is 0.</p>\n</blockquote>",
        "id": 258003276,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1634550897
    },
    {
        "content": "<p>If you could expand a little, I think it would help me understand the context better.</p>",
        "id": 258003365,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1634550944
    },
    {
        "content": "<p>The property of <code>real.Inf</code> we use its that when it's not well behaved it's equal to <code>0</code>. Then the proof goes \"It's well-behaved for <code>s</code> iff it's well-behaved for <code>a \\sm s</code>. When both are well-behaved, it's true. When both are bad-behaved, it's true because <code>a \\sm 0 = 0</code>\"</p>",
        "id": 258012506,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634555895
    },
    {
        "content": "<p>The correct generalization of this is conditionally complete linear orders whose Sup/Inf junk value is <code>0</code>.</p>",
        "id": 258012564,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634555937
    },
    {
        "content": "<p>Wasn't <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> working on a generalization of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/conditionally_complete_lattice\">docs#conditionally_complete_lattice</a> to always include a junk value specification?</p>",
        "id": 258016082,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634557921
    },
    {
        "content": "<p>Yeah, that's exactly why I'm saying this file is temporary, because it will hopefully soon be generalized to conditionally complete lattices.</p>",
        "id": 258017702,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634558725
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>  I'm bad at making progress in several projects at once.</p>",
        "id": 258019377,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1634559645
    },
    {
        "content": "<p>No worries, I was just checking I remembered correctly.</p>",
        "id": 258023615,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634561558
    },
    {
        "content": "<p>Perhaps it's worth spending more time writing down project ideas as issues than spending time half-implementing them, since then it might be easier for someone else to adopt them (and issues go stale less quickly than branches).</p>",
        "id": 258023712,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634561605
    },
    {
        "content": "<p>If you're not working on it, I can also do it myself. I seem to be pretty good at fighting staleness.</p>",
        "id": 258025961,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634562597
    },
    {
        "content": "<p>But please merge <a href=\"https://github.com/leanprover-community/mathlib/issues/9707\">#9707</a> without the generalization. This is already 13 or so PRs that I had to make for Krein-Milman and I wouldn't like any more, especially because it's not crucial here.</p>",
        "id": 258026177,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634562684
    },
    {
        "content": "<p>(just noticed Yury hit <img alt=\":merge:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/18527.png\" title=\"merge\">)</p>",
        "id": 258026758,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634562926
    }
]