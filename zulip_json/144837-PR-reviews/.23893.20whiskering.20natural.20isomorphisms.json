[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span>, how would you feel about replacing my <code>functor.map_nat_iso</code> with the following:</p>\n<div class=\"codehilite\"><pre><span></span>def iso_whisker_left (F : C ⥤ D) {G H : D ⥤ E} (α : G ≅ H) : (F ⋙ G) ≅ (F ⋙ H) :=\n((whiskering_left C D E).obj F).map_iso α\n@[simp] lemma iso_whisker_left_hom (F : C ⥤ D) {G H : D ⥤ E} (α : G ≅ H) :\n  (iso_whisker_left F α).hom = whisker_left F α.hom :=\nrfl\n@[simp] lemma iso_whisker_left_inv (F : C ⥤ D) {G H : D ⥤ E} (α : G ≅ H) :\n  (iso_whisker_left F α).inv = whisker_left F α.inv :=\nrfl\n\ndef iso_whisker_right {G H : C ⥤ D} (α : G ≅ H) (F : D ⥤ E) : (G ⋙ F) ≅ (H ⋙ F) :=\n((whiskering_right C D E).obj F).map_iso α\n@[simp] lemma iso_whisker_right_hom {G H : C ⥤ D} (α : G ≅ H) (F : D ⥤ E) :\n  (iso_whisker_right α F).hom = whisker_right α.hom F :=\nrfl\n@[simp] lemma iso_whisker_right_inv {G H : C ⥤ D} (α : G ≅ H) (F : D ⥤ E) :\n  (iso_whisker_right α F).inv = whisker_right α.inv F :=\nrfl\n</pre></div>\n\n\n<p>which I would put in the existing <code>whiskering.lean</code>.</p>",
        "id": 162865872,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554767736
    },
    {
        "content": "<p>If you've got something even better that's good too. :-)</p>",
        "id": 162865931,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554767764
    }
]