[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110789\">@Jakob von Raumer</span>, I left some comments on your PR. Sorry for the delay.</p>\n<p>I think <code>rigid.lean</code> is done very well, and is essentially ready to go. I think <code>FinVect.lean</code> can still be better! If you feel like splitting it into two PRs I'd be happy to merge <code>rigid.lean</code> soon. But it's also fine that we sort out <code>FinVect.lean</code> as part of this PR.</p>",
        "id": 252124899,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1630901964
    },
    {
        "content": "<p>And a thought about notation: I'm tempted to suggest <code>Xᘁ</code> notation for the dual, rather than <code>X^*</code>. (One day we'll get to dagger and C* tensor categories, e.g. modules over von Neumann algebras, and there will simply be too many things notated <code>^*</code>. :-)</p>",
        "id": 252134502,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1630911640
    },
    {
        "content": "<p>But not a big deal.</p>",
        "id": 252134510,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1630911650
    },
    {
        "content": "<p>Thanks for the comments!</p>",
        "id": 252139979,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1630915197
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.238946.20rigid.20monoidal.20categories/near/252134502\">said</a>:</p>\n<blockquote>\n<p>And a thought about notation: I'm tempted to suggest <code>Xᘁ</code> notation for the dual, rather than <code>X^*</code>. (One day we'll get to dagger and C* tensor categories, e.g. modules over von Neumann algebras, and there will simply be too many things notated <code>^*</code>. :-)</p>\n</blockquote>\n<p>Any comment on the left dual notation? I'm not quite satisfied with that</p>",
        "id": 252140107,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1630915223
    },
    {
        "content": "<p>I'll think about splitting the PRs, somehow, the file dependencies and the fact that there is no clear directed dependency between the stuff in <code>algebra</code> and the stuff in <code>linear_algebra</code> made <code>FinVect</code> a lot harder</p>",
        "id": 252140830,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1630915678
    },
    {
        "content": "<p>Removing the <code>.val</code>s and relying on sort coercion did seem to make the elaboration of the terms (not the proofs) of the last two lemmas in <code>algebra.category.FinVect</code> slower, but I think there's something else going on as well, I'm not happy with the performance</p>",
        "id": 252152477,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1630921991
    },
    {
        "content": "<p>I think if there's slow elaboration we should fix that, but it's just as important that we don't use <code>.val</code> when there's a coercion to sorts available that \"we're meant to be using\". Writing things in terms of their normal forms generally helps rather than hinders elaboration performance.</p>",
        "id": 252155182,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1630923518
    },
    {
        "content": "<p>How about <code>ᘁX</code> for the other dual? I've seen that in print, too.</p>",
        "id": 252155209,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1630923540
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.238946.20rigid.20monoidal.20categories/near/252155209\">said</a>:</p>\n<blockquote>\n<p>How about <code>ᘁX</code> for the other dual? I've seen that in print, too.</p>\n</blockquote>\n<p>I'll try that, but it means that <code>ᘁ</code> is a postfix and a prefix notation, which might not work?</p>",
        "id": 252158497,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1630925647
    },
    {
        "content": "<p>Ah nvm, that doesn't seem to cause any issues</p>",
        "id": 252158738,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1630925805
    }
]