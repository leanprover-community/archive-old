[
    {
        "content": "<p>just want a comment on whether people think this is a good idea - as I said there, I tend to write a lot of <code>simp [card_univ]</code>, but I wonder if maybe I'm an outlier</p>",
        "id": 236055947,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619347297
    },
    {
        "content": "<p>If you're working on \"naked\" types, and are working on type combinators like |α → β| = |β| ^ |α|, |α ⊕ β| = |α| + |β| in your examples, then, yes, this direction makes sense. But if you're working on types which are coerced from sets (which are themselves either coerced from finset or finiteness from set.finite), the only way to deal with those is to somehow recombine the sets in finset.card land. Because lemmas about type combinations of sort-coerced sets are very clunky, especially because you don't automatically get the inferred fintype instances.</p>",
        "id": 236064493,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1619356523
    }
]