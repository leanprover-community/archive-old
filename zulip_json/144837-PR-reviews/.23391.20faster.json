[
    {
        "content": "<p>How can I improve <a href=\"https://github.com/leanprover/mathlib/pull/391\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/391\">the <code>faster</code> PR</a>?</p>",
        "id": 135349088,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538911271
    },
    {
        "content": "<p>I was wondering, Kenny, if it makes sense to rebase it onto the squeeze-simp PR?</p>",
        "id": 135349130,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538911333
    },
    {
        "content": "<p>Presumably that one will be reviewed and merged first, since <code>faster</code> relies on it.</p>",
        "id": 135349132,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538911350
    },
    {
        "content": "<p>If you like I can try doing that. If you don't mind compressing everything into a single commit it should be easy.</p>",
        "id": 135349138,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538911388
    },
    {
        "content": "<p>Possibly harder if you want to preserve the individual commits, but leave out the ones that have already been separated out into <code>squeeze-simp</code>.</p>",
        "id": 135349139,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538911416
    },
    {
        "content": "<p>I'll rebase it onto <code>squeeze-simp</code> once it (i.e. <code>squeeze-simp</code>) has been merged</p>",
        "id": 135349179,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538911475
    },
    {
        "content": "<p>Ok, I guess that's fine. It's just a piece of cleaning up work that you could do already if you're in a hurry.</p>",
        "id": 135349283,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538911687
    },
    {
        "content": "<p>I've had a scroll through the changes on this one, but I'm not really the one to comment. :-) Unreadable proofs beforehand, unreadable proofs afterwards, so if they're faster, I'd say go for it. :-)</p>",
        "id": 135349284,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538911721
    },
    {
        "content": "<p>Ok, thanks for your review</p>",
        "id": 135349287,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538911744
    },
    {
        "content": "<p>Some places make me a little sad:</p>",
        "id": 135349408,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912033
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/mathlib/pull/391/files#diff-52b9e281e7667f88f8203fb617843d93L522\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/391/files#diff-52b9e281e7667f88f8203fb617843d93L522\">https://github.com/leanprover/mathlib/pull/391/files#diff-52b9e281e7667f88f8203fb617843d93L522</a></p>",
        "id": 135349409,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912034
    },
    {
        "content": "<p>When the proof used to just be <code>simp</code>, and now it's some rewrite.</p>",
        "id": 135349447,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912045
    },
    {
        "content": "<p>it saves a lot of speed though...</p>",
        "id": 135349455,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538912078
    },
    {
        "content": "<p>Yes, but it's a tradeoff. It's very sad to have to write proofs of such simple things. I agree in the short term it's worth saving the speed.</p>",
        "id": 135349463,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912113
    },
    {
        "content": "<p>But in the long run, I have to say that this is the most depressing thing I've seen in Lean yet --- the fact that we are having to do this.</p>",
        "id": 135349464,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912140
    },
    {
        "content": "<p>I noticed there are some actual new features hiding in here: <a href=\"https://github.com/leanprover/mathlib/pull/391/files#diff-47cbe97193e277c9a413e62bc8afadff\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/391/files#diff-47cbe97193e277c9a413e62bc8afadff\">https://github.com/leanprover/mathlib/pull/391/files#diff-47cbe97193e277c9a413e62bc8afadff</a></p>",
        "id": 135349507,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912199
    },
    {
        "content": "<p>You should almost certainly take these out, and make a separate PR for them.</p>",
        "id": 135349513,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912244
    },
    {
        "content": "<p>Oh, I see, those are the parts that Simon wrote</p>",
        "id": 135349517,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912280
    },
    {
        "content": "<p>and that are in the separate PR already.</p>",
        "id": 135349556,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912287
    },
    {
        "content": "<p>(This is exactly why I suggested rebasing now --- so it's easy for us to review it already!)</p>",
        "id": 135349559,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912306
    },
    {
        "content": "<p>What do you mean by rebasing this PR onto squeeze_simp?</p>",
        "id": 135349562,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538912345
    },
    {
        "content": "<p>At the moment there is a fork in the history --- leading out of master is one sequence of commits leading to squeeze-simp</p>",
        "id": 135349569,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912392
    },
    {
        "content": "<p>and another sequence of commits leading to faster</p>",
        "id": 135349614,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912414
    },
    {
        "content": "<p>I was proposing making that history linear again, but so all of squeeze-simp comes first, and then the rest of faster</p>",
        "id": 135349620,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912439
    },
    {
        "content": "<p>and how do I do that?</p>",
        "id": 135349627,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538912449
    },
    {
        "content": "<p>Well -- do we care if all your commits get smushed into a single one?</p>",
        "id": 135349633,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912470
    },
    {
        "content": "<p>If that's okay, we can do a squash merge.</p>",
        "id": 135349634,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912484
    },
    {
        "content": "<p>how does that work?</p>",
        "id": 135349636,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538912494
    },
    {
        "content": "<p>If that's not okay, I'd have to experiment --- it's at the limit of my rebase ability. :-)</p>",
        "id": 135349638,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912502
    },
    {
        "content": "<p>To do a squash merge, you would:</p>",
        "id": 135349640,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912514
    },
    {
        "content": "<p><code>git checkout squeeze-simp</code></p>",
        "id": 135349642,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912521
    },
    {
        "content": "<p><code>git merge --squash faster</code></p>",
        "id": 135349681,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912530
    },
    {
        "content": "<p>then look at the state of things, and make sure everything looks sane.</p>",
        "id": 135349684,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912546
    },
    {
        "content": "<p>if it does:</p>",
        "id": 135349685,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912547
    },
    {
        "content": "<p><code>git branch faster2</code></p>",
        "id": 135349686,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912552
    },
    {
        "content": "<p><code>git checkout faster2</code></p>",
        "id": 135349689,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912562
    },
    {
        "content": "<p><code>git commit -m \"feat(*): make mathlib faster using simp only, rw, and rfl\"</code></p>",
        "id": 135349692,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912582
    },
    {
        "content": "<p>then if everything looks okay, delete the faster branch, and rename faster2 back to faster</p>",
        "id": 135349697,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912599
    },
    {
        "content": "<p>and finally <code>git push --force community</code> to overwrite the old faster branch.</p>",
        "id": 135349698,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912612
    },
    {
        "content": "<p>how will this make the tactic changes disappear from the \"Files changed\"?</p>",
        "id": 135349700,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538912617
    },
    {
        "content": "<p>So it won't do that immediately in files changed, but ...</p>",
        "id": 135349705,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912637
    },
    {
        "content": "<p>but?</p>",
        "id": 135349745,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538912668
    },
    {
        "content": "<p>on the changes page, if you click on the <code>changes from all commits</code> text</p>",
        "id": 135349756,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912728
    },
    {
        "content": "<p>you get an option to just compare across a range.</p>",
        "id": 135349757,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912737
    },
    {
        "content": "<p>after the squash merge, the commits will be linearly ordered, so it's possible to just look at the changes after Simon was \"finished\" with squeeze-simp -- i.e. just showing yours</p>",
        "id": 135349803,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912779
    },
    {
        "content": "<p>and posting the URL for that range here would give anyone easy access to it.</p>",
        "id": 135349807,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912798
    },
    {
        "content": "<p>(I'm not strongly saying this is worth doing... it's a possibility if you want to clean up)</p>",
        "id": 135349809,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912812
    },
    {
        "content": "<p>Another suggestion, for cleaning up, is that you change the name of the PR, e.g. to <code>feat(*): make mathlib faster using simp only, rw, and rfl</code></p>",
        "id": 135349816,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912837
    },
    {
        "content": "<p>the convention is <code>XXX(FFF): CCC</code>, where <code>XXX</code> is <code>doc</code>, <code>feat</code>, <code>bug</code>, or <code>chore</code>, <code>FFF</code> is the files affected (perhaps abbreviated some way), and <code>CCC</code> is a short summary</p>",
        "id": 135349820,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912881
    },
    {
        "content": "<p>When everything is finally merged, it will be squashed to a single commit, and it makes the maintainers life slightly easier if they've got a commit message in the right format in front of them.</p>",
        "id": 135349861,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538912927
    },
    {
        "content": "<p>what is <code>feat</code>?</p>",
        "id": 135349865,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538912945
    },
    {
        "content": "<p>feature: it's for commits that add new stuff</p>",
        "id": 135349870,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538912999
    },
    {
        "content": "<p>I think <code>faster</code> is a <code>refactor</code> commit</p>",
        "id": 135349911,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538913012
    },
    {
        "content": "<p>I don't think <code>refactor</code> is one of <code>doc</code>, <code>feat</code>, <code>bug</code>, or <code>chore</code></p>",
        "id": 135349916,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538913051
    },
    {
        "content": "<p>The list is longer than that</p>",
        "id": 135349917,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538913061
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Is there any reason why this PR is not a no-brainer?</p>",
        "id": 135349922,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538913067
    },
    {
        "content": "<p>where can I find the list?</p>",
        "id": 135349923,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538913068
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean/blob/master/doc/commit_convention.md\" target=\"_blank\" title=\"https://github.com/leanprover/lean/blob/master/doc/commit_convention.md\">https://github.com/leanprover/lean/blob/master/doc/commit_convention.md</a></p>",
        "id": 135349924,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538913096
    },
    {
        "content": "<p>It's a large change, that's never a no-brainer</p>",
        "id": 135349925,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538913113
    },
    {
        "content": "<p>Kenny could you not replace <code>induction</code> with <code>nat.rec_on</code>? It's less readable</p>",
        "id": 135349966,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538913167
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>, it's worth remembering that once a PR is in, little problems never get fixed again. :-)</p>",
        "id": 135349969,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913185
    },
    {
        "content": "<p>This is a one moment where there's a chance to get things right. Saying \"oh, we can fix it later\" turns out to be false in practice!</p>",
        "id": 135349972,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913224
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Kenny Lau@DESKTOP-F01EMD3 MINGW64 /c/mathlib\n$ git branch\n  direct_sum\n* faster\n  master\n</pre></div>",
        "id": 135350012,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538913250
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> how do I add <code>squeeze_simp</code> to this list?</p>",
        "id": 135350013,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538913259
    },
    {
        "content": "<p><code>git checkout squeeze-simp</code></p>",
        "id": 135350021,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913337
    },
    {
        "content": "<p>(it's a hypen, not an underscore)</p>",
        "id": 135350022,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913350
    },
    {
        "content": "<p>Do you have <code>community</code> set up as a remote?</p>",
        "id": 135350060,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913365
    },
    {
        "content": "<p>yes</p>",
        "id": 135350063,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538913373
    },
    {
        "content": "<p>okay, then just <code>checkout</code> should be enough</p>",
        "id": 135350064,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913388
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Kenny Lau@DESKTOP-F01EMD3 MINGW64 /c/mathlib\n$ git checkout squeeze-simp\nerror: pathspec &#39;squeeze-simp&#39; did not match any file(s) known to git.\n\nKenny Lau@DESKTOP-F01EMD3 MINGW64 /c/mathlib\n$ git remote\nlc\norigin\n</pre></div>",
        "id": 135350067,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538913420
    },
    {
        "content": "<p>What does <code>git remote get-url lc</code> say?</p>",
        "id": 135350115,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913493
    },
    {
        "content": "<p>Have you run <code>git fetch</code>?</p>",
        "id": 135350116,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913508
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Kenny Lau@DESKTOP-F01EMD3 MINGW64 /c/mathlib\n$ git remote get-url lc\nhttps://github.com/leanprover-community/mathlib\n</pre></div>",
        "id": 135350117,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538913509
    },
    {
        "content": "<p>You may need to do that, so it looks up all the available branches on that remote.</p>",
        "id": 135350118,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913524
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Kenny Lau@DESKTOP-F01EMD3 MINGW64 /c/mathlib\n$ git fetch\nremote: Enumerating objects: 13, done.\nremote: Counting objects: 100% (13/13), done.\nremote: Compressing objects: 100% (6/6), done.\nremote: Total 13 (delta 7), reused 9 (delta 7), pack-reused 0\nUnpacking objects: 100% (13/13), done.\nFrom https://github.com/leanprover/mathlib\n   0ddb58c..e4ce469  master     -&gt; origin/master\n\nKenny Lau@DESKTOP-F01EMD3 MINGW64 /c/mathlib\n$ git checkout squeeze-simp\nerror: pathspec &#39;squeeze-simp&#39; did not match any file(s) known to git.\n</pre></div>",
        "id": 135350124,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538913559
    },
    {
        "content": "<p>(By the way, you might like to learn how to use ssh URLs, rather than https ones, as then you can use an ssh key and never have to type a password.)</p>",
        "id": 135350125,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913560
    },
    {
        "content": "<p>I suppose some of the words mean something</p>",
        "id": 135350163,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538913603
    },
    {
        "content": "<p>Hmm, I guess you'll need <code>git checkout -b squeeze-simp lc/squeeze-simp</code></p>",
        "id": 135350177,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913639
    },
    {
        "content": "<p>Sorry, not sure why you can't just <code>checkout</code>, that seems to work for me.</p>",
        "id": 135350179,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913651
    },
    {
        "content": "<blockquote>\n<p>I suppose some of the words mean something</p>\n</blockquote>\n<p>I'll let you google them later. :-)</p>",
        "id": 135350187,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913669
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Kenny Lau@DESKTOP-F01EMD3 MINGW64 /c/mathlib\n$ git checkout -b squeeze-simp lc/squeeze-simp\nfatal: Cannot update paths and switch to branch &#39;squeeze-simp&#39; at the same time.\nDid you intend to checkout &#39;lc/squeeze-simp&#39; which can not be resolved as commit?\n</pre></div>",
        "id": 135350188,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538913718
    },
    {
        "content": "<p>ugh, sorry, you've exceeded my knowledge of git at this point.</p>",
        "id": 135350239,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913816
    },
    {
        "content": "<p><code>git checkout lc/squeeze-simp</code>?</p>",
        "id": 135350241,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538913841
    },
    {
        "content": "<p>ah --- also <code>git fetch lc</code> might be helpful</p>",
        "id": 135350280,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913884
    },
    {
        "content": "<p>I forgot when you ran <code>git fetch</code> above it only fetched from <code>origin</code>.</p>",
        "id": 135350290,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538913909
    },
    {
        "content": "<blockquote>\n<p><code>git checkout lc/squeeze-simp</code>?</p>\n</blockquote>\n<p>no <code>-b</code>?</p>",
        "id": 135350332,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538913980
    },
    {
        "content": "<p>I <em>think</em> if you run <code>git fetch lc</code> first, then both commands (with and without the <code>-b</code>) should have the same effect.</p>",
        "id": 135350340,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538914042
    },
    {
        "content": "<p>I don't think so</p>",
        "id": 135350380,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538914091
    },
    {
        "content": "<p>What does <code>git branch -a -v</code> give you?</p>",
        "id": 135350381,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538914096
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ git branch -a -v\n* (HEAD detached at lc/squeeze-simp)   136ab4a Provide a means for other tactics to use squeeze\n  direct_sum                           009b95f refactor dfinsupp again\n  faster                               ddae2b2 chore(data/finsupp): reduce build time\n  master                               6434658 [behind 40] feat(analysis/topology): locally compact spaces and the compact-open topology\n  remotes/lc/applicative               7a57a7f fix(data/vector2): traversable instance\n  remotes/lc/auto-cases-iff            4e7bcd6 add Johan&#39;s test case\n  remotes/lc/basis                     e0db366 remove pempty_equiv_empty\n  remotes/lc/bifunctor                 1b63bf6 change direction of composition law\n  remotes/lc/cfsg                      b583ad0 a start on the statement of the classification of finite simple groups\n  remotes/lc/cleanup                   6e9a638 cleanup\n  remotes/lc/coinductive-fixes         d2fdb5c fix(tactic/eval_expr): often crashes when reflecting expressions\n  remotes/lc/coinductive-types         bf5f318 [WIP] coinductive type families\n  remotes/lc/completions               125efed fail(analysis/topology/completion): fail to get topological ring strucutre on separation quotient\n  remotes/lc/determinants              9280cbf core(data/fin): cleanup fin proofs\n  remotes/lc/direct_limit              9b8259f Update direct_limit.lean\n  remotes/lc/direct_sum                009b95f refactor dfinsupp again\n  remotes/lc/dvd_add-lemmas            a0c1deb adding two lemmas about division\n  remotes/lc/eckmann-hilton            ddd03a1 feat(group_theory/eckmann_hilton): add Eckmann-Hilton\n  remotes/lc/elan-docs                 1f2e745 noting additional prerequisite on macOS\n  remotes/lc/eval-expr-fix             d2fdb5c fix(tactic/eval_expr): often crashes when reflecting expressions\n  remotes/lc/exp                       f77c3fe fix build\n  remotes/lc/ext                       2d3b8d3 feat(tactic/ext): remove lambda abstractions when inferring a type&#39;s name\n  remotes/lc/ext-goal-ordering         bb1a40a adding configuration to non-interactive ext1\n  remotes/lc/faster                    ddae2b2 chore(data/finsupp): reduce build time\n  remotes/lc/fin_cases                 ab2d3e6 removing guard\n  remotes/lc/finmap                    6863745 feat(data/finmap): change keys to finset\n  remotes/lc/fold                      0919259 reformulate `fold` to use `monoid` rather than `applicative\n  remotes/lc/hlist                     b5d6d60 [WIP] hlist type\n  remotes/lc/inner_product_spaces      2203545 Update herm_inner_product_space.lean\n  remotes/lc/integral                  0d10db9 fix eapprox\n  remotes/lc/kmb_hilbert2              3683d9d Merge remote-tracking branch &#39;origin/module&#39; into kmb_hilbert2\n  remotes/lc/kmb_hilbert_basis         651baa8 WIP\n  remotes/lc/kmb_some_zerology         d3add5f fix(algebra/ring) : non_zero -&gt; nonzero\n  remotes/lc/kmb_zerology              a7edb2c feat(ring_theory/noetherian): zero ring (and finite rings) are Noetherian\n  remotes/lc/lean-3.3.0                6a2607e fix(data/rat): backport bugfix\n  remotes/lc/lean-3.4.1                905345a fix(data/array/lemmas,...): fix build\n  remotes/lc/master                    0ddb58c workaround(tactic/tfae): tfae is broken, comment out its tests (#398)\n  remotes/lc/matrix                    3dd7f4d feat(ring_theory/matrix): category of free modules; scalar matrices\n  remotes/lc/module                    335fab4 refactor(linear_algebra/dimension): update for new modules\n  remotes/lc/monoid_stuff              519f6d6 style(algebra/group): fix alignment of code\n  remotes/lc/monotonicity              1138482 fix(tactic/mono): fix conflict with `has_lt`\n  remotes/lc/monotonicity-updated      366bd52 feat(tactic/mono): update traversable\n  remotes/lc/normed_space_instance     82d95ba fix(analysis/normed_space): Add instance showing that normed field is a normed space over itself\n  remotes/lc/poly_coeffs               92c2cfc feat(data/polynomial): coeff is R-linear\n  remotes/lc/scott/supremum            8b22c4d Merge branch &#39;solve_by_elim_congr&#39; into scott/supremum\n  remotes/lc/solve_by_elim_backtrack   501959b fix(data/real/cau_seq_filter): use new syntax for solve_by_elim\n  remotes/lc/solve_by_elim_congr       fb5600b use non-interactive solve_by_elim in tfae\n  remotes/lc/splitting_fields          9861ccd Work on lift\n  remotes/lc/squeeze-simp              136ab4a Provide a means for other tactics to use squeeze\n  remotes/lc/structure-stub            5f5e9b5 doc(hole/instance_stub)\n  remotes/lc/subrings_subfields        986274a simplify a proof instance\n  remotes/lc/sum-functor               d1cf30a feat(category/functor): make `sum` `functor` instance more universe polymorphic\n  remotes/lc/sum-monad                 7e28be8 feat(data/sum): add monad instance\n  remotes/lc/sylow                     cd0a486 Merge remote-tracking branch &#39;dorhinj/sylow&#39; into sylow\n  remotes/lc/tensor-product            5226782 namespace\n  remotes/lc/tfae                      8bc42a0 perf(tactic/scc): produce smaller proofs\n  remotes/lc/traversable-derive-lawful e597516 chore(traversable): merge with Mario&#39;s branch\n  remotes/lc/traverse-finset           477104e finset traversable: proof of composition law\n  remotes/lc/tutorials                 09982a9 fix finset\n  remotes/lc/whiskering                95ff94b Merge pull request #5 from rwbarton/whiskering\n  remotes/origin/HEAD                  -&gt; origin/master\n  remotes/origin/lean-3.3.0            6a2607e fix(data/rat): backport bugfix\n  remotes/origin/lean-3.4.1            905345a fix(data/array/lemmas,...): fix build\n  remotes/origin/master                e4ce469 fix(docs/elan): fix homebrew instructions for macOS (#395)\n</pre></div>",
        "id": 135350384,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538914120
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ git branch faster2\nwarning: refname &#39;lc/squeeze-simp&#39; is ambiguous.\nfatal: Ambiguous object name: &#39;lc/squeeze-simp&#39;.\n</pre></div>",
        "id": 135350632,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538914718
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span></p>",
        "id": 135350633,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538914721
    },
    {
        "content": "<p>oof, you've done something strange!</p>",
        "id": 135350641,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538914764
    },
    {
        "content": "<p>Let's try to get back to normal. <code>git checkout master</code></p>",
        "id": 135350642,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538914777
    },
    {
        "content": "<p>(perhaps copy and paste the outputs back here, so the peanut gallery can see what's going on)</p>",
        "id": 135350643,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538914799
    },
    {
        "content": "<p>and then?</p>",
        "id": 135350688,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538914831
    },
    {
        "content": "<p>What did <code>git checkout master</code> say?</p>",
        "id": 135350691,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538914842
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ git checkout master\nSwitched to branch &#39;master&#39;\nYour branch is behind &#39;origin/master&#39; by 40 commits, and can be fast-forwarded.\n  (use &quot;git pull&quot; to update your local branch)\n</pre></div>",
        "id": 135350695,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538914850
    },
    {
        "content": "<p><code>git checkout squeeze-simp</code></p>",
        "id": 135350701,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538914874
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ git checkout squeeze-simp\nBranch squeeze-simp set up to track remote branch squeeze-simp from lc.\nSwitched to a new branch &#39;squeeze-simp&#39;\n\nKenny Lau@DESKTOP-F01EMD3 MINGW64 /c/mathlib\n$ git branch\n  direct_sum\n  faster\n  lc/squeeze-simp\n  master\n* squeeze-simp\n</pre></div>",
        "id": 135350707,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538914905
    },
    {
        "content": "<p>what is this</p>",
        "id": 135350708,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538914907
    },
    {
        "content": "<p>That sounds promising!</p>",
        "id": 135350735,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538914922
    },
    {
        "content": "<p>Let's get rid of your <code>lc/squeeze-simp</code> though.</p>",
        "id": 135350749,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538914934
    },
    {
        "content": "<p><code>git branch -d lc/squeeze-simp</code></p>",
        "id": 135350753,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538914962
    },
    {
        "content": "<p>(don't worry, there's no danger that will actually kill the one on community !)</p>",
        "id": 135350755,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538914977
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ git branch -D lc/squeeze-simp\nDeleted branch lc/squeeze-simp (was cbbbd17).\n</pre></div>",
        "id": 135350766,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538914994
    },
    {
        "content": "<p>great.</p>",
        "id": 135350768,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915034
    },
    {
        "content": "<p><code>git merge --squash faster</code></p>",
        "id": 135350803,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915043
    },
    {
        "content": "<p><code>git status</code></p>",
        "id": 135350807,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915046
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ git merge --squash faster\nAuto-merging tactic/squeeze.lean\nCONFLICT (add/add): Merge conflict in tactic/squeeze.lean\nSquash commit -- not updating HEAD\nAutomatic merge failed; fix conflicts and then commit the result.\n\n$ git status\nOn branch squeeze-simp\nYour branch is up-to-date with &#39;lc/squeeze-simp&#39;.\nChanges to be committed:\n  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)\n\n        modified:   algebra/archimedean.lean\n        modified:   algebra/big_operators.lean\n        modified:   algebra/char_zero.lean\n        modified:   algebra/euclidean_domain.lean\n        modified:   algebra/field.lean\n        modified:   algebra/field_power.lean\n        modified:   algebra/gcd_domain.lean\n        modified:   algebra/group.lean\n        modified:   algebra/group_power.lean\n        modified:   analysis/topology/topological_space.lean\n        modified:   analysis/topology/uniform_space.lean\n        modified:   computability/turing_machine.lean\n        modified:   data/complex/basic.lean\n        modified:   data/finset.lean\n        modified:   data/finsupp.lean\n        modified:   data/list/basic.lean\n        modified:   data/multiset.lean\n        modified:   data/polynomial.lean\n        modified:   meta/rb_map.lean\n        modified:   order/conditionally_complete_lattice.lean\n        modified:   order/filter.lean\n        modified:   order/lattice.lean\n        modified:   set_theory/ordinal.lean\n        modified:   tactic/tfae.lean\n        modified:   tests/tactics.lean\n\nUnmerged paths:\n  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)\n  (use &quot;git add &lt;file&gt;...&quot; to mark resolution)\n\n        both added:      tactic/squeeze.lean\n</pre></div>",
        "id": 135350813,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538915102
    },
    {
        "content": "<p>hmm!</p>",
        "id": 135350859,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915176
    },
    {
        "content": "<p>(I can resolve the conflict myself)</p>",
        "id": 135350864,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538915202
    },
    {
        "content": "<p>have a look at <code>squeeze.lean</code>, and try to make it look like Simon's version, I guess</p>",
        "id": 135350865,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915213
    },
    {
        "content": "<p>now what</p>",
        "id": 135350909,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538915295
    },
    {
        "content": "<p><code>git status</code></p>",
        "id": 135350957,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915404
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ git status\nOn branch squeeze-simp\nYour branch is up-to-date with &#39;lc/squeeze-simp&#39;.\nChanges to be committed:\n  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)\n\n        modified:   algebra/archimedean.lean\n        modified:   algebra/big_operators.lean\n        modified:   algebra/char_zero.lean\n        modified:   algebra/euclidean_domain.lean\n        modified:   algebra/field.lean\n        modified:   algebra/field_power.lean\n        modified:   algebra/gcd_domain.lean\n        modified:   algebra/group.lean\n        modified:   algebra/group_power.lean\n        modified:   analysis/topology/topological_space.lean\n        modified:   analysis/topology/uniform_space.lean\n        modified:   computability/turing_machine.lean\n        modified:   data/complex/basic.lean\n        modified:   data/finset.lean\n        modified:   data/finsupp.lean\n        modified:   data/list/basic.lean\n        modified:   data/multiset.lean\n        modified:   data/polynomial.lean\n        modified:   meta/rb_map.lean\n        modified:   order/conditionally_complete_lattice.lean\n        modified:   order/filter.lean\n        modified:   order/lattice.lean\n        modified:   set_theory/ordinal.lean\n        modified:   tactic/squeeze.lean\n        modified:   tactic/tfae.lean\n        modified:   tests/tactics.lean\n</pre></div>",
        "id": 135351015,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538915551
    },
    {
        "content": "<p><code>git commit -m \"nice message here\"</code></p>",
        "id": 135351020,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915575
    },
    {
        "content": "<p>no no!</p>",
        "id": 135351021,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915578
    },
    {
        "content": "<p>oops, sorry we want to make a new branch first :-)</p>",
        "id": 135351024,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915585
    },
    {
        "content": "<p>so <code>git branch faster2</code></p>",
        "id": 135351028,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915600
    },
    {
        "content": "<p>eh... I already committed</p>",
        "id": 135351029,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538915608
    },
    {
        "content": "<p>okay :-)</p>",
        "id": 135351032,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915616
    },
    {
        "content": "<p>how do I reverse the commit?</p>",
        "id": 135351033,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538915621
    },
    {
        "content": "<p>can I just delete this branch and redo it?</p>",
        "id": 135351038,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538915628
    },
    {
        "content": "<p><code>git reset HEAD~</code> should work</p>",
        "id": 135351079,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538915688
    },
    {
        "content": "<p>nice</p>",
        "id": 135351087,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538915715
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ git add .\n\n$ git branch faster2\n\n$ git branch\n  direct_sum\n  faster\n  faster2\n  master\n* squeeze-simp\n</pre></div>",
        "id": 135351133,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538915866
    },
    {
        "content": "<p>Do you think you can take it from here, Kenny? I have to head off.</p>",
        "id": 135351134,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915866
    },
    {
        "content": "<p>eh...</p>",
        "id": 135351135,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538915870
    },
    {
        "content": "<p>kind of confused</p>",
        "id": 135351136,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538915876
    },
    {
        "content": "<p><code>git checkout faster2</code></p>",
        "id": 135351174,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915887
    },
    {
        "content": "<p><code>git commit -m \"refactor(*): making mathlib faster\"</code></p>",
        "id": 135351177,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915908
    },
    {
        "content": "<p>and then?</p>",
        "id": 135351186,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538915946
    },
    {
        "content": "<p><code>git branch -d faster</code></p>",
        "id": 135351188,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915958
    },
    {
        "content": "<p>probably get an error message, because it's not fully merged</p>",
        "id": 135351189,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915967
    },
    {
        "content": "<p>so</p>",
        "id": 135351190,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915969
    },
    {
        "content": "<p><code>git branch -D faster</code></p>",
        "id": 135351191,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915974
    },
    {
        "content": "<p>to force it to delete</p>",
        "id": 135351193,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538915979
    },
    {
        "content": "<p><code>git branch -m faster2 faster</code></p>",
        "id": 135351231,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538916003
    },
    {
        "content": "<p>to rename faster2 to faster</p>",
        "id": 135351237,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538916009
    },
    {
        "content": "<p>and finally <code>git push --force lc</code></p>",
        "id": 135351239,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538916016
    },
    {
        "content": "<p>Good luck! I'll have a look when I get up to see how you went. :-)</p>",
        "id": 135351247,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538916065
    },
    {
        "content": "<blockquote>\n<p>Kenny could you not replace <code>induction</code> with <code>nat.rec_on</code>? It's less readable</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> can I use <code>match</code>?</p>",
        "id": 135354608,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538923639
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/mathlib/pull/391\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/391\">done</a></p>",
        "id": 135360399,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538934820
    },
    {
        "content": "<p>Do you intend to do all your speed up before merging your branch? I think there's a benefit to merging regularly</p>",
        "id": 135368048,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1538951043
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> I don't understand your question</p>",
        "id": 135368287,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538951552
    },
    {
        "content": "<p>I can't control when my PR is merged</p>",
        "id": 135368288,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538951561
    },
    {
        "content": "<p>Yes, you have control. If you keep making commits to the same branch and don't ask <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> and <span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span> to merge, they won't merge.</p>",
        "id": 135368297,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1538951622
    },
    {
        "content": "<p>Mario asked me to not use <code>nat.rec_on</code>, so I changed <code>nat.rec_on</code> to <code>by induction</code> and pushed.</p>",
        "id": 135368348,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538951713
    },
    {
        "content": "<p>also why are we on this thread?</p>",
        "id": 135368351,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538951724
    },
    {
        "content": "<p>so I don't see what I should have done instead.</p>",
        "id": 135368355,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538951746
    },
    {
        "content": "<p>What I'm asking you is when do you intend for <code>faster</code> to get merged.</p>",
        "id": 135368779,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1538952510
    },
    {
        "content": "<p>well, now, preferably</p>",
        "id": 135368804,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538952574
    },
    {
        "content": "<p>but I don't know what I can do.</p>",
        "id": 135368808,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538952592
    },
    {
        "content": "<p>Cool, thanks</p>",
        "id": 135368855,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1538952624
    },
    {
        "content": "<p>could you move this discussion to the faster thread?</p>",
        "id": 135368860,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538952642
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> so what should I do now?</p>",
        "id": 135368970,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538952905
    },
    {
        "content": "<p>Nothing different. I didn't realize that you were trying to get it merged</p>",
        "id": 135369071,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1538953095
    },
    {
        "content": "<p>I notice you worked on <code>turing_machine.lean</code>. While I applaud your effort, I think it was probably not a good choice. The theorems there are still under construction, as it were; I'm not certain that they will keep their current form, and if so the original proofs with <code>simp</code> will be more robust to changes. Moreover, those proofs are very CSy in the sense that they are proving simple properties of complicated objects; it is in this situation where <code>simp</code> has the biggest advantage, and the proofs without it are much longer and more brittle.</p>\n<p>I will accept the changes since the file is on mathlib and everyone feels the compilation overhead (at least, if they are compiling everything in mathlib - it's not a dependent of any other files), but probably I should move the file out of mathlib altogether.</p>",
        "id": 135391043,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538991331
    },
    {
        "content": "<p>Oof, I was going well through the PR, and then I see this:<br>\n<a href=\"https://github.com/leanprover/mathlib/pull/391/files#diff-21d78f94c9e397a3a2d037174c0903d6R18\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/391/files#diff-21d78f94c9e397a3a2d037174c0903d6R18\">https://github.com/leanprover/mathlib/pull/391/files#diff-21d78f94c9e397a3a2d037174c0903d6R18</a></p>\n<p>What is this? There is no way this huge list will make it in to mathlib</p>",
        "id": 135400485,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539002981
    },
    {
        "content": "<p>\"with multiset\" occurs 148 times on that page.</p>",
        "id": 135400637,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539003155
    },
    {
        "content": "<p>Also, I think you should ping <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span></p>",
        "id": 135400643,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539003165
    },
    {
        "content": "<p>I know, it gets used everywhere</p>",
        "id": 135400663,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539003207
    },
    {
        "content": "<p>I don't see the point in adding the kitchen sink to a simp set, that's just reinventing the default simp set</p>",
        "id": 135400707,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539003244
    },
    {
        "content": "<p>that was added by <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> to test an alternative way to reducing build time, i.e. by using simp attr</p>",
        "id": 135400720,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539003282
    },
    {
        "content": "<p>From the profile gist: <code>data/multiset.lean 99.3 --&gt; 42.9 (Kenny)</code></p>",
        "id": 135400733,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539003310
    },
    {
        "content": "<p>look at the history</p>",
        "id": 135400838,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539003473
    },
    {
        "content": "<p>I mostly wanted to point out the speed-up, not the guy behind it (-;</p>",
        "id": 135400887,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539003503
    },
    {
        "content": "<p>okay, but that's a separate PR</p>",
        "id": 135400891,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539003512
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> Could you extract the bits from the PR about the <code>multiset</code> simp set?</p>",
        "id": 135401088,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539003747
    },
    {
        "content": "<p>Actually, the best might just be to redo the work with <code>squeeze_simp</code>. That was before I wrote it and I was trying to leave the proofs mostly unchanged. I think <code>squeeze_simp</code> is better at this.</p>",
        "id": 135406953,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1539008910
    },
    {
        "content": "<p>The <code>faster</code> branch has been merged... mostly. The <code>multiset</code> file should be done without that simp set thing</p>",
        "id": 135420706,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539023592
    },
    {
        "content": "<p>Thank you very much <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span>  and <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 135420916,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539023848
    },
    {
        "content": "<p>I think it would be good to draw some lessons from this experience, before diving into the next 10 files.</p>",
        "id": 135420930,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539023878
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> What are your thoughts and feelings about this battle?</p>",
        "id": 135420982,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539023909
    },
    {
        "content": "<p>Are we sacrificing too much readability for speed? Should we look for other methods of increasing speed?</p>",
        "id": 135421005,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539023945
    },
    {
        "content": "<p>It took me a while to read all the proofs, and I'm sure Kenny learned a lot of math by osmosis</p>",
        "id": 135421008,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539023946
    },
    {
        "content": "<p>Your end goal is to \"golf all of maths\". Does this fit in well?</p>",
        "id": 135421036,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539023999
    },
    {
        "content": "<p>Honestly, once I got used to the constraints it was like I'm doing metamath again, trying to minimize a <em>proof</em> not a proof script</p>",
        "id": 135421037,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539024001
    },
    {
        "content": "<p>but I'm sure the thought of that does not appeal to most here</p>",
        "id": 135421088,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539024019
    },
    {
        "content": "<p>Do we have a choice?</p>",
        "id": 135421119,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539024060
    },
    {
        "content": "<p>Or is mathlib going to grind to a halt in a couple of months if we don't adapt to this spartan way of proofwriting?</p>",
        "id": 135421155,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539024089
    },
    {
        "content": "<p>I think that I will not change the way we write proofs. I prefer the big sweep</p>",
        "id": 135421167,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539024106
    },
    {
        "content": "<p>I think we should focus more on early files though</p>",
        "id": 135421228,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539024143
    },
    {
        "content": "<p>i.e. it doesn't matter if <code>turing_machine</code> is slow, no one imports it</p>",
        "id": 135421244,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539024176
    },
    {
        "content": "<p>but having basic files like <code>order.filter</code> being slow was a killer</p>",
        "id": 135421273,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539024226
    },
    {
        "content": "<blockquote>\n<p>i.e. it doesn't matter if <code>turing_machine</code> is slow, no one imports it</p>\n</blockquote>\n<p>I always build everything, just to make life easy.</p>",
        "id": 135421343,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1539024293
    },
    {
        "content": "<p>Sure, but in that case you are already geared for a long compile</p>",
        "id": 135421377,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539024340
    },
    {
        "content": "<p>That doesn't help when you're writing a PR, and you change <code>nat.basic</code></p>",
        "id": 135421382,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1539024359
    },
    {
        "content": "<p>Well, if this big sweep goes on like it does, then \"long compile\" could be 10 minutes, instead of 60.</p>",
        "id": 135421432,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539024377
    },
    {
        "content": "<p>Of course I suggested to go for the low hanging fruits first, the next third of compile time probably will be more work still</p>",
        "id": 135421452,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539024425
    },
    {
        "content": "<p>Anyway, does Github show which PR's have merge conflicts after this refactor?</p>",
        "id": 135421529,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539024495
    },
    {
        "content": "<p>Or does Chris have to write all of <code>exp</code> all over again [kidding] <span class=\"emoji emoji-1f643\" title=\"upside down\">:upside_down:</span></p>",
        "id": 135421548,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539024560
    },
    {
        "content": "<p>Muito obrigado <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> .</p>",
        "id": 135421872,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539025035
    },
    {
        "content": "<p><code>linear_algebra/dimension.lean</code> was broken by the merge <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 135423561,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1539027297
    },
    {
        "content": "<p>and an extra import of <code>tactic.squeeze</code> in <code>algebra/big_operators.lean</code> as pointed out by Simon</p>",
        "id": 135423935,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539027657
    },
    {
        "content": "<blockquote>\n<p><code>linear_algebra/dimension.lean</code> was broken by the merge <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>\n</blockquote>\n<p>That file will be module-refactored anyway</p>",
        "id": 135424021,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539027752
    }
]