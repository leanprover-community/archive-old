[
    {
        "content": "<p>This is I hope an interesting refactor. I happened to see a todo in algebra/order/floor.lean that looked very tractable, and so I have separated out those lemmas that depend on being in a <code>linear_order</code>, and those that do not. But it will need careful review, hence why I am posting here.</p>",
        "id": 296823953,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662126513
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16352\">#16352</a> is the PR, <a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/order/floor.html\">https://leanprover-community.github.io/mathlib_docs/algebra/order/floor.html</a> is the current file.</p>",
        "id": 296824075,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662126547
    },
    {
        "content": "<p>I don't believe we have any other PRs touching this file currently in flight. There may be changes needed outside this file - I'm waiting to see what CI says.</p>",
        "id": 296824391,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662126646
    },
    {
        "content": "<p>Just to repeat what I've said on Discord and on the previous PR that tried this: This is not a meaningful generalization, I'm sorry I wrote that todo, and let's remove it.</p>",
        "id": 296903719,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662157018
    },
    {
        "content": "<p>The only use I see for such a generalization would be some kind of line with double origin or something like that, where you have incomparable elements between the integers. I'm not sure that forms a <code>floor_ring</code> but what I'm<br>\nrather sure of is that we don't care about it.</p>",
        "id": 296903951,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662157128
    },
    {
        "content": "<p>To repeat what I said there: I think the generalisation has value because if nothing else it tests the limits of the definitions. Is a floor ring an established \"thing\" or was it invented by the authors of this file?</p>",
        "id": 296951333,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662189906
    },
    {
        "content": "<p>I actually found the exercise fairly pretty, and while I know you don't find aesthetics a good reason to keep something, I do. I will leave it to others to judge.</p>",
        "id": 296951563,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662190071
    },
    {
        "content": "<p>I just had an interesting realization that (in a canonically ordered add monoid) the floor is simply the additive version of the <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiplicity\">docs#multiplicity</a> of 1, and the existence of fractional part is the additive version of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiplicity.exists_eq_pow_mul_and_not_dvd\">docs#multiplicity.exists_eq_pow_mul_and_not_dvd</a>. But I think the two theories don't overlap enough to allow substantial deduplication via to_additive.</p>",
        "id": 297122946,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1662311786
    },
    {
        "content": "<p>Isn't the overlap mostly Galois connections?</p>",
        "id": 297174443,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662361271
    },
    {
        "content": "<p>No, I see what Junyan Xu means - there is such a connection. But indeed I don't think this is worth changing.</p>",
        "id": 297222860,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662382789
    },
    {
        "content": "<p>Given that it's a contentious issue, I propose a poll; I'll lay out the current arguments I know beforehand</p>\n<h2>Merge</h2>\n<ul>\n<li>it has strictly stronger results; why not?</li>\n<li>it also has some bonus results too</li>\n<li>when proving statements in Lean, less-strict typeclasses are often helpful even if not mathematically called-for</li>\n</ul>\n<h2>Don't merge</h2>\n<ul>\n<li>no floor (semi)rings that are studied are likely to meet these conditions; why bother?</li>\n<li>non-linear-ordered floor rings are \"unmathematical\" - elements that are not comparable with integer casts don't contribute to the floor structure,</li>\n</ul>\n<hr>\n<p>I wish I could set this message as \"community wiki\" a la SO so other people could edit it, but I'll try and keep it up to date</p>",
        "id": 297226514,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1662384251
    },
    {
        "content": "<p>/poll should we merge this?<br>\nYes<br>\nNo</p>",
        "id": 297226533,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1662384261
    },
    {
        "content": "<p>Is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"bold\">Q</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf Q ^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> an example of such a ring? With floor function the minimum of the floors of the components? That example doesn't seem so weird to me</p>",
        "id": 297228513,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1662385125
    },
    {
        "content": "<p>i think that is blocked from being an ordered ring because currently <code>ordered_ring</code> is too strong, but Yael is currently generalising this somewhere else and I think it will work after that!</p>",
        "id": 297233208,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1662387147
    },
    {
        "content": "<p>Here's another example: C[0, 1], with ordering as pointwise and floor given by the floor of the infimum of the function - I find it very hard to call this example unmathematical!</p>",
        "id": 297234361,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1662387612
    },
    {
        "content": "<p>Oh that's a great example.</p>",
        "id": 297239442,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662389765
    },
    {
        "content": "<p>I did think by the way that if you adjust the definition of <code>floor_semiring</code> to be:<br>\n<code>floor_of_neg : ∀ {a : α}, \\not (0 &lt;= a) → floor_semiring.floor a = 0</code> that could possible mean more lemmas would not need the linear assumption (I haven't tried it).</p>",
        "id": 297239814,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662389909
    },
    {
        "content": "<p>Because often the issue is simply one of not being able to pass from not le to lt.</p>",
        "id": 297239907,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662389945
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2316352.20algebra.2Forder.2Ffloor.2Elean.20refactor/near/297228513\">said</a>:</p>\n<blockquote>\n<p>Is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"bold\">Q</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbf Q ^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0085em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathbf\">Q</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> an example of such a ring? With floor function the minimum of the floors of the components? That example doesn't seem so weird to me</p>\n</blockquote>\n<p>This certainly feels, to me, like a classic example of something that \"should\" be a floor ring.</p>",
        "id": 297240416,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662390126
    },
    {
        "content": "<p>Great! I was very reluctant because no one came up with a non-linear example in the past year, but apparently it just hadn't reached the right persons <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 297280267,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662414251
    },
    {
        "content": "<p>Is it then true that the product of floor rings is a floor ring?</p>",
        "id": 297280273,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662414257
    },
    {
        "content": "<p>If not, I would then go a step further and make sure that it becomes true.</p>",
        "id": 297280325,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662414324
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2316352.20algebra.2Forder.2Ffloor.2Elean.20refactor/near/297280267\">said</a>:</p>\n<blockquote>\n<p>Great! I was very reluctant because no one came up with a non-linear example in the past year, but apparently it just hadn't reached the right persons <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>\n</blockquote>\n<p>Was anyone looking for a non-linear example for the past year? Up until your comments about Wrenna's PR, I don't think I'd seen the claim that non-linear floor rings didn't exist anywhere</p>",
        "id": 297281016,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1662415036
    },
    {
        "content": "<p>Does this mean you've changed your vote, Yaël?</p>",
        "id": 297281625,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662415754
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2316352.20algebra.2Forder.2Ffloor.2Elean.20refactor/near/297233208\">said</a>:</p>\n<blockquote>\n<p>i think that is blocked from being an ordered ring because currently <code>ordered_ring</code> is too strong, but Yael is currently generalising this somewhere else and I think it will work after that!</p>\n</blockquote>\n<p>Actually, it seems that <a href=\"https://github.com/leanprover-community/mathlib/pull/16172\">#16172</a> won't fix this, and the names I introduce are misleading. Cancellativity should involve <code>a + b ≤ a + c → b ≤ c</code> but I'm in fact talking about <code>b &lt; c → a + b &lt; a + c</code> (even though those are equivalent in linear orders when you already have monotonicity).</p>",
        "id": 298027390,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662746710
    },
    {
        "content": "<p>Hence I think I will rename the classes in <a href=\"https://github.com/leanprover-community/mathlib/pull/16172\">#16172</a> from <code>ordered_cancel_</code> to <code>strict_ordered_</code> and open another PR (once <a href=\"https://github.com/leanprover-community/mathlib/pull/16172\">#16172</a> is in <span aria-label=\"sweat\" class=\"emoji emoji-1f613\" role=\"img\" title=\"sweat\">:sweat:</span>) to add non-strict semirings.</p>",
        "id": 298027680,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662746806
    },
    {
        "content": "<p>The problem is still that <code>0 &lt; (0, 1)</code> and <code>0 &lt; (1, 0)</code> but <code>(0, 1) * (1, 0) = 0</code>.</p>",
        "id": 298027796,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662746856
    },
    {
        "content": "<p>I have not checked all the assumptions, but there is also this:</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib/blob/master/counterexamples/linear_order_with_pos_mul_pos_eq_zero.lean\">https://github.com/leanprover-community/mathlib/blob/master/counterexamples/linear_order_with_pos_mul_pos_eq_zero.lean</a></p>",
        "id": 298030018,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1662747710
    },
    {
        "content": "<p>It seems like to the extent anyone cares, there's a slight majority in favour of merging this?</p>",
        "id": 299183102,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1663341600
    },
    {
        "content": "<p>I would first like to see the <code>floor_ring (α × β)</code> instance, but for this we need <a href=\"https://github.com/leanprover-community/mathlib/pull/16172\">#16172</a> and some more.</p>",
        "id": 299194346,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1663344633
    }
]