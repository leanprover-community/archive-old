[
    {
        "content": "<p>Anybody willing to look at talk about my PR? I am trying to define order/sublattice. I need at least some quick overview if structure is right and what else should I work on to be successful with merge.</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib/issues/7093\">#7093</a></p>",
        "id": 233556553,
        "sender_full_name": "Matúš Behun",
        "timestamp": 1617827618
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"346429\">@Matúš Behun</span> welcome! (Note that there is a dedicated stream <a class=\"stream\" data-stream-id=\"144837\" href=\"/#narrow/stream/144837-PR-reviews\">#PR reviews</a> for discussion of specific PRs.)</p>",
        "id": 233557348,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617827954
    },
    {
        "content": "<p>Thanks for doing this! PR's have their own stream -- perhaps we should continue this conversation in <a class=\"stream\" data-stream-id=\"144837\" href=\"/#narrow/stream/144837-PR-reviews\">#PR reviews</a> .</p>",
        "id": 233557358,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1617827957
    },
    {
        "content": "<p>heh :-)</p>",
        "id": 233557393,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1617827976
    },
    {
        "content": "<p>First look: this looks pretty good, but there are some style issues.</p>",
        "id": 233557496,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617828020
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"346429\">@Matúš Behun</span> please take a look at <a href=\"https://leanprover-community.github.io/contribute/style.html#structuring-definitions-and-theorems\">https://leanprover-community.github.io/contribute/style.html#structuring-definitions-and-theorems</a></p>",
        "id": 233557584,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617828059
    },
    {
        "content": "<p>A zulip admin can presumably move this thread?</p>",
        "id": 233559400,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617828895
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/PR.20Sublattice\">#new members &gt; PR Sublattice</a> by <span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span></p>",
        "id": 233567531,
        "sender_full_name": "Notification Bot",
        "timestamp": 1617831490
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> Thank you for review, I would like to discuss it here and your comment regarding function.injective.lattice</p>",
        "id": 233570289,
        "sender_full_name": "Matúš Behun",
        "timestamp": 1617832963
    },
    {
        "content": "<p>I did a big refactor recently that removed a lot of duplication between subobjects, and introduced <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set_like\">docs#set_like</a></p>",
        "id": 233570760,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617833172
    },
    {
        "content": "<p>I would guess you started your branch before that refactor</p>",
        "id": 233570790,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617833188
    },
    {
        "content": "<p>What I wanted to achieve is transformation of sublattice to lattice hence <code>lattice beta</code>. Also any comment regarding how to improve pr by adding theorems or instancing something would be appreciated.</p>",
        "id": 233570917,
        "sender_full_name": "Matúš Behun",
        "timestamp": 1617833272
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/sublattice.20definition.20.237093/near/233570790\">said</a>:</p>\n<blockquote>\n<p>I would guess you started your branch before that refactor</p>\n</blockquote>\n<p>Yes</p>",
        "id": 233570935,
        "sender_full_name": "Matúš Behun",
        "timestamp": 1617833282
    },
    {
        "content": "<p>Your <code>function.injective.lattice</code> definition isn't useful because it takes a lattice over L, a function from <code>\\b</code> to <code>L</code>, a bunch of proofs about that function... Only to ignore all those things and just produce the same lattice over L it started with!</p>",
        "id": 233571324,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617833493
    },
    {
        "content": "<p>Have a look at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.injective.mul_one_class/src\">src#function.injective.mul_one_class</a> for a very simple example of how that definition should actually look</p>",
        "id": 233571444,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617833559
    },
    {
        "content": "<p>Regarding <code>set_like</code>, you'll want to <code>git fetch origin &amp;&amp; git merge origin/master</code> before you try to use it</p>",
        "id": 233571647,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617833674
    },
    {
        "content": "<p>okay thanks for the help</p>",
        "id": 233572106,
        "sender_full_name": "Matúš Behun",
        "timestamp": 1617833955
    },
    {
        "content": "<p>function.injective.sublattice - thanks for the example i changed it accordingly, of course i forgot to produce sublattice instead of lattice, still might ask around here how to finish this definition</p>",
        "id": 234409597,
        "sender_full_name": "Matúš Behun",
        "timestamp": 1618351555
    },
    {
        "content": "<p>regarding set_coe_sort I've changed all definitions to match new style</p>",
        "id": 234409773,
        "sender_full_name": "Matúš Behun",
        "timestamp": 1618351643
    },
    {
        "content": "<p>No, the result really should be <code>lattice</code>, just on the type at the other end of the injective function</p>",
        "id": 234411471,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618352747
    },
    {
        "content": "<p>Perhaps we already have that definition as <a href=\"https://leanprover-community.github.io/mathlib_docs/find/lattice.lift\">docs#lattice.lift</a> (to match <a href=\"https://leanprover-community.github.io/mathlib_docs/find/partial_order.lift\">docs#partial_order.lift</a>)?</p>",
        "id": 234411484,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618352762
    }
]