[
    {
        "content": "<p>I have a new draft of some of the proofs in <span class=\"user-mention\" data-user-id=\"511228\">@Huỳnh Trần Khanh</span>'s <a href=\"https://github.com/leanprover-community/mathlib/pull/11162\">#11162</a> \"Stars and bars\".  I've taken a somewhat different approach (roughly <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>'s suggestion in <a href=\"#narrow/stream/113488-general/topic/Stars.20and.20bars.20revisited/near/277167127\">this thread</a>), which simplifies the proof.</p>\n<p>In <a href=\"https://github.com/leanprover-community/mathlib/pull/15072\">#15072</a> I introduced a recursive definition of <code>multichoose</code> (which is intended as the multisets analogue of <code>choose</code>) and proved that <code>multichoose n k = (n + k - 1).choose k</code>.  Now in <a href=\"https://github.com/leanprover-community/mathlib/pull/11162\">#11162</a> I've proved that <code>card (sym (fin n) k) = multichoose n k</code>, which then allows a simple proof that <code>card (sym α k) = multichoose (card α) k</code> for any fintype <code>α</code> — i.e. that <code>multichoose</code> counts the number of multisets of size <code>k</code> over the finite alphabet <code>α</code>, as intended.  This all goes through much more simply than the original proof that used induction on fintypes via <code>option</code>.  (I've left the original code in for now, for comparison.)</p>",
        "id": 288812410,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1657203606
    },
    {
        "content": "<p>This is all still a draft at the moment, so I'm looking for comments and suggestions.  In particular, which of the statements proved here (if any) should be regarded as the formalisation of \"stars and bars\"?  Presumably, per mathlib's naming convention, none of these lemmas should be <em>called</em> <code>stars_and_bars</code>, but which should have that in its docstring? Is it <code>card (sym α k) = multichoose (card α) k</code>?  Or <code>multichoose n k = (n + k - 1).choose k</code>?  Or yet another statement?  Or, as <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/Stars.20and.20bars.20revisited/near/277116416\">suggests</a>, should we think of \"stars and bars\" as \"a tool for solving combinatorics problems, not a specific problem\"?</p>",
        "id": 288812447,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1657203630
    },
    {
        "content": "<p>Note that I haven't updated the docstring at the top of <code>data/sym/card</code> since re-writing the proofs, which I'll do once I get some feedback on the above questions.</p>",
        "id": 288812788,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1657203771
    },
    {
        "content": "<p>cc/ <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>  and <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span></p>",
        "id": 288812836,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1657203792
    },
    {
        "content": "<p>If stars-and-bars is the formula for the cardinality for <code>sym α k</code> (which can be regarded as ways to put <code>k</code> objects into bins indexed by <code>α</code>) then I think this counts. Even if it's not stars-and-bars per se, it's the domain orbits cell of the twelvefold way. (Thanks for your work!)</p>\n<p>Maybe what would really count as stars-and-bars is an equivalence between <code>sym (fin n) k</code> and the cardinality-k subsets of <code>fin (n + k - 1)</code> using the stars-and-bars encoding, but I don't think we're obligated to prove anything with this.</p>",
        "id": 288814848,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1657204701
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.powerset_len\">docs#finset.powerset_len</a> on <code>finset.univ</code> the best way to get all the cardinality-k subsets of a finite type?</p>",
        "id": 288815177,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1657204844
    },
    {
        "content": "<p>Currently, yes. But, because <code>finset α</code> is graded, the <code>k</code>-slice of <code>finset α</code> is exactly what you're looking for.</p>",
        "id": 288815528,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1657205001
    },
    {
        "content": "<p>I have this material on a branch. I am in the process of making it PRable (<a href=\"https://github.com/leanprover-community/mathlib/pull/14977\">#14977</a> was part of it).</p>",
        "id": 288815697,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1657205064
    },
    {
        "content": "<p>What reference are we using for the meaning of stars and bars here?</p>",
        "id": 288816886,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657205577
    },
    {
        "content": "<p>Wikipedia says:</p>\n<blockquote>\n<p>In the context of combinatorial mathematics, stars and bars (also called \"sticks and stones\",[1] \"balls and bars\",[2] and \"dots and dividers\"[3]) is <strong>a graphical aid for deriving</strong> certain combinatorial theorems</p>\n</blockquote>\n<p>Which suggests if anything the name belongs to a tactic</p>",
        "id": 288817061,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657205643
    },
    {
        "content": "<p>(or to a very direct representation of stars and bars, such as the one in my PR, or a subtype of <code>list bool</code>)</p>",
        "id": 288817824,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657205884
    },
    {
        "content": "<p>The way I learned it, stars and bars is a graphical technique, that serves as the mnemonic for the bijection which proves the theorem at hand.</p>",
        "id": 288830820,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1657211392
    },
    {
        "content": "<p>I don't have any reference on this unfortunately</p>",
        "id": 288830839,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1657211399
    },
    {
        "content": "<p>I find that graphical aid is mostly a mnemonic for the idea that to count the number of ways of putting n indistinguishable objects in k bins, you choose the locations of the k-1 bin dividers. (Violeta beat me to \"mnemonic\")</p>",
        "id": 288831029,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1657211490
    },
    {
        "content": "<p>Usually there aren't actually stars and bars in whatever you're counting</p>",
        "id": 288831075,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1657211517
    },
    {
        "content": "<p>(The textbook I chose for my combinatorics class made some odd choices in presentation. For this, they used a generating function and the generalized binomial theorem! They seemed to always prefer algebraic proofs over combinatorial ones... At least it complemented the lectures.)</p>",
        "id": 288832470,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1657212137
    },
    {
        "content": "<p>Thanks for your answers everyone.  I think I'd agree that \"stars and bars\" is a technique rather than a statement, and that it would be nice to have a tactic implementing this technique.  I'll edit the tags and comments in <code>data/nat/choose/basic</code> and <code>data/sym/card</code> accordingly.</p>",
        "id": 288855900,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1657222847
    },
    {
        "content": "<p>Anyone have a proposal for what a stars-and-bars tactic would do?</p>",
        "id": 288857400,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1657223674
    },
    {
        "content": "<p>a) I have zero idea what a stars and bars tactic would do.<br>\nb) I actually don't mind the statement in hand being called stars and bars. That's really the only important result you get out of this bijection, isn't it?</p>",
        "id": 288869540,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1657230017
    },
    {
        "content": "<p>A nice result to have would be the <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finite_dimensional.finrank\">docs#finite_dimensional.finrank</a> of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mv_polynomial.homogeneous_submodule\">docs#mv_polynomial.homogeneous_submodule</a> ... Anyone planning to define Hilbert polynomial?</p>",
        "id": 288888232,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1657245797
    },
    {
        "content": "<p>It is on the list of \"I might need to do it if it is not yet done by the time I need it\". But I think it would depend on <a href=\"https://github.com/leanprover-community/mathlib/pull/14582\">#14582</a>.</p>",
        "id": 288901042,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1657259522
    },
    {
        "content": "<p>Ok, I've updated the docstrings in <code>data/sym/card</code> and <code>data/nat/choose/basic</code> in <a href=\"https://github.com/leanprover-community/mathlib/pull/11162\">#11162</a> to explain the \"stars and bars\" technique.</p>",
        "id": 288915318,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1657271135
    },
    {
        "content": "<p>I suppose one of the problems with having a stars and bars tactic is that there are many different problems that can be informally interpreted as \"putting <code>k</code> indistinguishable items into <code>n</code> distinguishable boxes\", but it may be far from straightforward to translate that informal interpretation into something that Lean could recognise as such and act upon. So potentially more work would go into formalising that interpretation than would be saved by having a tactic.</p>",
        "id": 288917490,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1657272501
    },
    {
        "content": "<p>In fact, in many cases it may be easier to just directly prove that the quantity of interest is counted by <code>multichoose</code>.</p>",
        "id": 288917668,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1657272634
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"422543\">@Stuart Presnell</span> It seems good to have, so I extracted the equivalence that got cut out into <a href=\"https://github.com/leanprover-community/mathlib/pull/15192\">#15192</a> -- please let me know if we don't need this PR</p>",
        "id": 288969910,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1657301281
    },
    {
        "content": "<p>I'm happy for that code to go in separately.  The material that I cut from <a href=\"https://github.com/leanprover-community/mathlib/pull/11162\">#11162</a> was by <span class=\"user-mention\" data-user-id=\"511228\">@Huỳnh Trần Khanh</span>.</p>",
        "id": 289044005,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1657376213
    }
]