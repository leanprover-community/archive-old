[
    {
        "content": "<p>PR <a href=\"https://github.com/leanprover-community/mathlib/pull/11366\">#11366</a> has the following CI error (<a href=\"https://github.com/leanprover-community/mathlib/runs/4779218155\">https://github.com/leanprover-community/mathlib/runs/4779218155</a>). Is all this merge conflict checking causing the API rate limit to be exceeded?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(tactic/vampire): interface with Vampire\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">1083</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"refactor(data/polynomial): use `monoid_algebra.lift` and `aeval`\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">2492</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(topology/local_homeomorph): define `local_homeomorph.curry`\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">2508</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(group_theory/free_monoid_product): define free monoid/group product\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">2578</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(combinatorics): Kruskal-Katona theorem and some related results\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">2770</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(number_theory/geometry_of_numbers): Minkowski's theorem\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">2819</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(ring_theory/polynomial): homogeneous and symmetric polynomials\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">3169</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(field_theory/complete_ordered): conditionally_complete_linear_ordered_field, aka the reals\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">3292</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(data/qpf/indexed): indexed families of data types\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">3332</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(data/dfinsupp): Add an equivalence between (Π₀ i j, β i j) and (Π₀ ij, β ij.1 ij.2)\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">3515</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(data/qpf): extend the theory of qpfs to support indexed families\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">3638</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"WIP: new datatype compiler\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">3748</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(group/perm/sign): swap_adj_induction_on \"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">3770</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(category_theory/monoidal): Strong functor\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">4059</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(archive/100-theorems-list): Partition theorem\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">4259</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(data/set/intervals/with_bot_top): lemmas about `I??` and `with_top/bot`\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">4273</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(algebra/free_algebra): Define a grading\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">4321</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(order/omega-cpo): cpos form a cartesian closed category\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">4348</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(data/tuple): homogeneous tuples based on `fin`\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">4406</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(tactic/chain_trans): prove inequalities by transitivity on multiple assumptions\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">4579</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(tactic/converter): Add an exact tactic, to allow dropping back into tactic mode\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">4615</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(tactic/congr): use reducible transparency\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">4678</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"chore(category_theory/limits/preserves): preserve limit of special shape\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">4716</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(order/compactly_generated): For any `b`, there exists a set of independent atoms `s` such that `Sup s` is the complement of `b`.\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8475</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"refactor(order/conditionally_complete_lattice): refactor definition, add constructors\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8496</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"refactor(data/matrix/basic): Remove matrix.scalar\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8516</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(topology/vector_bundle): the pullback of a vector bundle is a vector bundle\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8545</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(analysis/complex/isometry): Homomorphism from Dihedral Group into Linear Isometries of C \"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8559</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(group_theory/group_action/subgroup): Conjugation action on subgroups of a group\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8592</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(group_theory/p_group): Groups of order p^2 are commutative\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8632</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(combinatorics/simple_graph): connectivity\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8737</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(linear_algebra/{tensor,exterior,clifford}): prove `supr_ι_range_pow_eq_top`\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8781</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(geometry/euclidean/lattice): define standard square lattice in the affine plane\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8818</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(algebra/add_torsor, linear_algebra/affine_space/affine_equiv, analysis/normed_space/affine_isometry): `base_at` construction\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8837</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(algebra/ordered_monoid): sub_neg_monoid (with_top R)\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8889</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(algebra/group_power/lemmas): distrib_mul_action ℤ (with_top A)\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8890</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"refactor(field_theory/*): generalize subfields to division_rings\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8901</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(ring_theory/mv_polynomial/homogeneous): Multivariate polynomials permit a nat-grading\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8913</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"feat(number_theory/multiplicity): lifting the exponent lemma\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8915</span> <span class=\"n\">does</span> <span class=\"n\">not</span> <span class=\"k\">have</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">remove.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"refactor(field_theory/*): generalize subfields to division_rings (alternative)\"</span><span class=\"o\">:</span> <span class=\"n\">add</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">,</span> <span class=\"n\">remove</span> <span class=\"s2\">\"nothing\"</span>\n<span class=\"n\">Issue</span> <span class=\"bp\">#</span><span class=\"mi\">8919</span> <span class=\"n\">already</span> <span class=\"n\">has</span> <span class=\"n\">label</span> <span class=\"bp\">'</span><span class=\"n\">merge</span><span class=\"bp\">-</span><span class=\"n\">conflict'.</span> <span class=\"n\">No</span> <span class=\"n\">need</span> <span class=\"n\">to</span> <span class=\"n\">add.</span>\n<span class=\"n\">for</span> <span class=\"n\">PR</span> <span class=\"s2\">\"Modular forms\"</span><span class=\"o\">:</span> <span class=\"n\">remove</span> <span class=\"s2\">\"merge-conflict\"</span>\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">error</span> <span class=\"n\">removing</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">:</span> <span class=\"n\">HttpError</span><span class=\"o\">:</span> <span class=\"n\">API</span> <span class=\"n\">rate</span> <span class=\"n\">limit</span> <span class=\"n\">exceeded</span> <span class=\"n\">for</span> <span class=\"n\">user</span> <span class=\"n\">ID</span> <span class=\"mi\">97194829</span><span class=\"bp\">.</span>\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">error</span> <span class=\"n\">removing</span> <span class=\"s2\">\"merge-conflict\"</span><span class=\"o\">:</span> <span class=\"n\">HttpError</span><span class=\"o\">:</span> <span class=\"n\">API</span> <span class=\"n\">rate</span> <span class=\"n\">limit</span> <span class=\"n\">exceeded</span> <span class=\"n\">for</span> <span class=\"n\">user</span> <span class=\"n\">ID</span> <span class=\"mi\">97194829</span><span class=\"bp\">.</span>\n</code></pre></div>",
        "id": 267619427,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1641923513
    },
    {
        "content": "<p>I think the actions does that with a single query, so that shouldn't be a problem.</p>",
        "id": 267627105,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1641926685
    }
]