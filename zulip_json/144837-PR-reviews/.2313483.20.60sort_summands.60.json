[
    {
        "content": "<p>The PR is ready for review.  It introduces a tactic to simplify dealing with additive expressions.  It makes \"isolating\" subexpressions easy and allows to \"zoom in\" on partial sums convenient.</p>\n<p>I would still like to get pattern matching to work on the symbols passed by the user, but this can wait for a later PR.</p>\n<p>Any comments welcome!</p>",
        "id": 279591760,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650482817
    },
    {
        "content": "<p>It allows to move terms to the left, say for collecting them together with a <code>←add_mul</code>, or to the right, if say, one of them is \"bigger\" than the remaining ones, so that it is isolated from the rest.</p>",
        "id": 279592196,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650483035
    },
    {
        "content": "<p>Can it be extended to multiplicative expressions?</p>",
        "id": 279592486,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1650483217
    },
    {
        "content": "<p>Yes, I have a draft for that</p>",
        "id": 279592929,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650483437
    },
    {
        "content": "<p>In fact, it can likely be extended to any binary commutative and associative operation.</p>",
        "id": 279593000,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650483474
    },
    {
        "content": "<p>Though, my meta programming skills may not be able to do it</p>",
        "id": 279593077,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650483499
    },
    {
        "content": "<p>My initial input was to automate computations of degrees of polynomials and being able to isolate the highest degree term is key for that.</p>",
        "id": 279593237,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650483590
    },
    {
        "content": "<p>Once the highest degree is to the right, <code>nat_degree_add_eq_right_of_nat_degree_lt</code> essentially takes you home.</p>",
        "id": 279593374,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650483649
    },
    {
        "content": "<p>If you have an expression involving sums and you want to cancel terms or collect terms together, it should be painless to isolate the terms you want and work in them.</p>",
        "id": 279593617,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650483775
    },
    {
        "content": "<p>Yaël, to be more specific about products, if you look at line 125 of <code>tactic.sort</code>, you find <code>get_summands</code>.  This looks for sums in an expression and returns them.</p>\n<p>Changing the match to a different binary operation would give you the same sorting structure, but with respect to your custom operation.</p>\n<p>I think that the remaining change would have to be on line 150, where <code>simp</code> expects additions.  This would have to change either <code>s/add/mul</code>, or whatever commutation lemmas you have for your operation.</p>\n<p>Likely, something else will break, but maybe not much.</p>",
        "id": 279639771,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650520821
    },
    {
        "content": "<p>I guess you can have two user-facing tactics depending on which operation you wish to simplify.</p>",
        "id": 279641728,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1650522981
    },
    {
        "content": "<p>At the moment, this is in the list of <code>todo</code> at the end of the module doc-string.  I like the idea of adding support for multiplication, but I think that it belongs to a separate PR.</p>",
        "id": 279642128,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650523423
    },
    {
        "content": "<p>Especially since \"simply change this, everything else will work automatically\" is usually false.</p>",
        "id": 279642494,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1650523808
    }
]