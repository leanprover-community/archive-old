[
    {
        "content": "<p>In this PR I suggest renaming <code>minimal_polynomial</code> to <code>minpoly</code>.</p>\n<ul>\n<li>It's a lot shorter, leading to shorter names in many other declarations</li>\n<li>It's a common name for minimal polynomials in other computer algebra systems</li>\n<li>I claim that the name still is clear in its meaning, and unambiguous</li>\n</ul>",
        "id": 222966856,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610782104
    },
    {
        "content": "<p>In followup work, I want to change the definition so that <code>minpoly K x</code> is the minimal polynomial over <code>K</code> for some element <code>x : L</code> in a <code>K</code>-algebra <code>L</code> using</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">is_integral</span> <span class=\"n\">x</span> <span class=\"k\">then</span> <span class=\"n\">actual_def</span> <span class=\"k\">else</span> <span class=\"mi\">0</span><span class=\"bp\">`</span>\n</code></pre></div>\n<p>This will make the code a lot nicer, compared to <code>minimal_polynomial hx</code> that we have now.<br>\nBut this refactor is orthogonal to the name change, so that's a separate PR.</p>",
        "id": 222966885,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610782197
    },
    {
        "content": "<p>These both sound good to me.</p>",
        "id": 222966953,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1610782295
    },
    {
        "content": "<p>I approve of shortening names, of course. In particular I think having definitions be one \"name segment\" is helpful for parsing theorems since then the separators are only between different things that are mashed up in a given theorem. (<code>leanFour_case</code> also solves this problem by using underscores to separate definitions with the definitions in camel case.)</p>",
        "id": 222967100,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1610782504
    },
    {
        "content": "<p>Any objections to merging this?</p>",
        "id": 222991664,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610815600
    },
    {
        "content": "<p>Did you change the definition of monic?</p>",
        "id": 222991679,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1610815618
    },
    {
        "content": "<p>Because I liked the idea of removing the <code>is_integral</code> assumption from <code>minimal_polynomial</code> and I don't feel strongly about the abbreviation but changing <code>monic</code> seemed more controversial.</p>",
        "id": 222991716,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1610815668
    },
    {
        "content": "<p>I clearly remember that at one point during my lectures a couple of weeks ago I thought: this result is ok because the zero polynomial isn't monic.</p>",
        "id": 222991782,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1610815704
    },
    {
        "content": "<p>Oh, this is only the renaming part?</p>",
        "id": 222991832,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1610815797
    },
    {
        "content": "<p>This one only renames</p>",
        "id": 222991924,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610815896
    },
    {
        "content": "<p>There are 3 PRs:</p>\n<ul>\n<li>this one renames <code>minimal_polynomial</code> to <code>minpoly</code></li>\n<li>the next uses nice variable names in the minpoly file</li>\n<li>the last one refactors <code>minpoly</code> to remove <code>is_integral</code>, but I don't touch <code>monic</code>.</li>\n</ul>",
        "id": 222992021,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610815945
    },
    {
        "content": "<p>the second PR (renaming a bunch of variables [easy]) is now ready to go</p>",
        "id": 223082518,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610947965
    }
]