[
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2494\">@maintainers</span> would someone else second-opinion this?  I had a couple of ideas for what would be added to mathlib in an ideal world to make this PR easy, but <span class=\"user-mention\" data-user-id=\"238605\">@Kevin Lacker</span> says (reasonably) that the additions would be burdensome.  If we're ok merging IMO PRs on the standard that mathlib contributions are mathlib quality and the rest follows style guidelines, then I think this PR is ready to go.</p>",
        "id": 213094460,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1602543612
    },
    {
        "content": "<p>(modulo 3 last points I just put in a review)</p>",
        "id": 213094515,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1602543677
    },
    {
        "content": "<p>I think merging and making changes in a follow-up PR makes sense. I'm doing a refactor of another of Kevin's formalizations in <a href=\"https://github.com/leanprover-community/mathlib/issues/4391\">#4391</a>.</p>",
        "id": 213103362,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602552904
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"238605\">@Kevin Lacker</span> I have PR'd some trig lemmas, <a href=\"https://github.com/leanprover-community/mathlib/issues/4638\">#4638</a>.  Now it should be possible to do some of the tasks you previously mentioned in <a href=\"https://github.com/leanprover-community/mathlib/issues/4518\">#4518</a> as being difficult, eg</p>\n<blockquote>\n<p>basic middle school stuff like solving <code>cos x = sqrt(3)/2</code></p>\n</blockquote>\n<p>can be done as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">cos</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">sqrt</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span> <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">+</span> <span class=\"n\">π</span> <span class=\"bp\">/</span> <span class=\"mi\">6</span> <span class=\"bp\">∨</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">-</span> <span class=\"n\">π</span> <span class=\"bp\">/</span> <span class=\"mi\">6</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">eq_comm</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">cos_pi_div_six</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">cos_eq_cos_iff</span><span class=\"o\">]</span>\n</code></pre></div>\n\n<p>Would you mind trying out the \"ideal method\" you had in mind for <a href=\"https://github.com/leanprover-community/mathlib/issues/4518\">#4518</a> </p>\n<blockquote>\n<p>I think the ideal method of proof would actually be different from all of these. It would be to first simplify the equation in terms of <code>cos x</code>, because intuitively <code>cos (2 * x)</code> and <code>cos (3 * x)</code> are ugly. Then notice that it's a polynomial in <code>cos x ^ 2</code>, and then to use standard polynomial methods to solve.</p>\n</blockquote>\n<p>to see if it is now possible, or to identify more things missing from the trig library if it's not possible?</p>",
        "id": 213511403,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1602815551
    },
    {
        "content": "<p>cool! - i will take a look</p>",
        "id": 213516521,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602820722
    }
]