[
    {
        "content": "<p>This PR is ready for review, but fails to pass CI because of a <a href=\"#narrow/stream/113488-general/topic/Strange.20timeout\">weird timeout</a> ... help would be much appreciated!</p>",
        "id": 268204454,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1642364059
    },
    {
        "content": "<p>I had a go at it, and I have the impression that the following proof is better accepted:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">protected</span> <span class=\"kd\">lemma</span> <span class=\"n\">has_sum_repr_symm</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">hilbert_basis</span> <span class=\"n\">ι</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℓ</span><span class=\"bp\">²</span><span class=\"o\">(</span><span class=\"n\">ι</span><span class=\"o\">,</span> <span class=\"bp\">𝕜</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">•</span> <span class=\"n\">b</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b.repr.symm</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">suffices</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">•</span> <span class=\"n\">b</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">b_1</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">b.repr.symm.to_continuous_linear_equiv</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">),</span> <span class=\"n\">lp.single</span> <span class=\"mi\">2</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"n\">b_1</span><span class=\"o\">)),</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">),</span> <span class=\"n\">lp.single</span> <span class=\"mi\">2</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">lp.has_sum_single</span> <span class=\"n\">ennreal.two_ne_top</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">b.repr.symm.to_continuous_linear_equiv</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℓ</span><span class=\"bp\">²</span><span class=\"o\">(</span><span class=\"n\">ι</span><span class=\"o\">,</span> <span class=\"bp\">𝕜</span><span class=\"o\">)</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"n\">E</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">has_sum</span> <span class=\"n\">this</span> <span class=\"o\">},</span>\n  <span class=\"n\">ext</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">b.repr.injective</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">lp.single</span> <span class=\"mi\">2</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">lp.single_smul</span> <span class=\"mi\">2</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"bp\">𝕜</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"n\">mul_one</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">linear_isometry_equiv.map_smul</span><span class=\"o\">,</span> <span class=\"n\">b.repr_self</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n    <span class=\"n\">linear_isometry_equiv.coe_to_continuous_linear_equiv</span><span class=\"o\">],</span>\n  <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">b.repr.apply_symm_apply</span> <span class=\"o\">(</span><span class=\"n\">lp.single</span> <span class=\"mi\">2</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>(Hard to tell for sure, because the problem seems to be at the kernel level: the profiler says that the original proof and this one are completed within less than 2s, but then the apparent processing time is much longer, so my guess is that the issue is with the kernel being stuck to check some heavy rfl. My modification of the proof above removes one coercion, and so is hopefully slightly lighter).</p>",
        "id": 268207084,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1642367467
    },
    {
        "content": "<p>Thank you!  It works for me locally, I will push it and see if it passes CI.</p>",
        "id": 268207595,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1642368180
    },
    {
        "content": "<p>And indeed, it does!</p>",
        "id": 268207892,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1642368490
    }
]