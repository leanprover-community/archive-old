[
    {
        "content": "<p>I invite people with a slight interest in number theory or history of maths to look at the Liouville PR <a href=\"https://github.com/leanprover-community/mathlib/issues/4301\">#4301</a>. I feel like some of the proofs are long, and could maybe be improved/factored into pieces.</p>",
        "id": 218394566,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1606813218
    },
    {
        "content": "<p>I don't see anything to egregious in the style, but I haven't looked at the proof approach in detail</p>",
        "id": 218394900,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1606813391
    },
    {
        "content": "<p>Would it be sensible for someone other than the original author to spin off sub-PRs?</p>",
        "id": 218463683,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606847993
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252627\">@Jujian Zhang</span> how do you feel about that?</p>",
        "id": 218464032,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1606848171
    },
    {
        "content": "<p>I think my main problem with this is that <code>analysis/real/polynomial</code> feels like it should contain really fundamental facts, and maybe these are fundamental but I don't realize it, or maybe that doesn't matter. It's also hard to tell what properties of the reals are necessary.</p>",
        "id": 218486179,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606859040
    },
    {
        "content": "<p>One way you could split it is just including <code>analysis/transcendental/liouville</code> with the one lemma from <code>analysis/real/polynomial</code> that it needs in one PR</p>",
        "id": 218486296,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606859087
    },
    {
        "content": "<p>so there's only a little bit of the general real polynomial stuff, and you still get all the way to some actual interesting facts about Liouville numbers</p>",
        "id": 218486348,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606859116
    },
    {
        "content": "<p>I would be very surprised to a find a file <code>analysis/real/polynomial.lean</code> without continuity of polynomials or things like that (I am saying this just because I was looking for this exact file last week)</p>",
        "id": 218488996,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1606860455
    },
    {
        "content": "<p>I have the impression that <code>non_root_interval_of_polynomial</code>  says that <code>f.roots</code> is discrete (in some equivalent formulation). This is true for any finite set in any metric space, with probably the same proof. I think it would be better to have it in general</p>",
        "id": 218490606,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1606861231
    },
    {
        "content": "<p>That first polynomial lemma <code>exists_forall_ge_of_polynomial_deriv</code> appears to be stating some kind of Lipschitz-like property of the derivative - which should be true for any polynomial in general.</p>",
        "id": 218490874,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606861384
    },
    {
        "content": "<p>Is this already in mathlib, and if it isn't, can we re-express it in such a way that it's more obvious that that's what's going on?</p>",
        "id": 218490907,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606861410
    },
    {
        "content": "<p>I don't have a great way of saying exactly what the property is, but it seems to me to be related to this: <code>convex.lipschitz_on_with_of_norm_deriv_le</code></p>",
        "id": 218491592,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1606861833
    },
    {
        "content": "<p>Also <code>non_root_small_interval_of_polynomial</code> says essentially the same thing as <code>non_root_interval_of_polynomial</code>, don't it? Given <code>α</code> there is a ball with center <code>α</code> such that <code>f</code> is different from <code>0</code>, except maybe at <code>α</code>. In <code>non_root_small_interval_of_polynomial</code> one can just take <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>min</mi><mo>⁡</mo><mrow><mn>1</mn><mo separator=\"true\">,</mo><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo separator=\"true\">,</mo><msub><mi>B</mi><mn>1</mn></msub></mrow></mrow><mn>2</mn></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{\\min{1,M^{-1}, B_1}}{2}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.415028em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.070028em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.446108em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mtight\">m</span><span class=\"mtight\">i</span><span class=\"mtight\">n</span></span><span class=\"mspace mtight\" style=\"margin-right:0.19516666666666668em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913142857142857em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05017em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> as radius, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">B_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is given by <code>non_root_interval_of_polynomial</code> if I have understood the statement correctly. (This is at least what I would say on pen and paper). In any case I have the same impression as <span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span> , that these lemmas are particular cases of more general results (again, this is what I would say seeing these written in standard mathematics, maybe in lean it makes completely sense to state them like that).</p>",
        "id": 218492046,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1606862117
    },
    {
        "content": "<p>I am looking at the file <code>src/analysis/real/polynomial.lean</code> right now.  In the very first lemma, it seems that the hypothesis</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">h_f_deg</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f.nat_degree</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>is only used in the first line of the proof</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"n\">h_f_nonzero</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">ne_zero_of_nat_degree_gt</span> <span class=\"n\">h_f_deg</span>\n</code></pre></div>\n<p>and commenting both out still makes the proof go through.  Besides, the result is clearly true for constant polynomials!</p>\n<p>I will continue looking at this, but we can certainly simplify this, right?</p>",
        "id": 218519006,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1606889806
    },
    {
        "content": "<p>Sorry, I saw that the linarith step later does use it: will try to get rid of it!  <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 218519023,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1606889848
    },
    {
        "content": "<p>Indeed, chopping off assumptions and hypotheses, this works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">exists_forall_ge_of_polynomial_deriv</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n  <span class=\"c1\">-- ~~(h_f_deg : 0 &lt; f.nat_degree)~~</span>\n   <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">eval</span> <span class=\"n\">y</span> <span class=\"n\">f.derivative</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">M</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"c1\">--  ~~have h_f_nonzero : f ≠ 0 := ne_zero_of_nat_degree_gt h_f_deg,~~</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x_max</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">h_x_max_range</span><span class=\"o\">,</span> <span class=\"n\">hM</span><span class=\"o\">⟩⟩</span> <span class=\"o\">:=</span> <span class=\"n\">is_compact.exists_forall_ge</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">compact_Icc</span> <span class=\"o\">(</span><span class=\"n\">α</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span>\n    <span class=\"kd\">begin</span> <span class=\"n\">rw</span> <span class=\"n\">set.nonempty</span><span class=\"o\">,</span> <span class=\"n\">use</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">set.mem_Icc</span><span class=\"o\">,</span> <span class=\"n\">split</span><span class=\"bp\">;</span> <span class=\"n\">linarith</span> <span class=\"kd\">end</span>\n    <span class=\"o\">(</span><span class=\"n\">continuous_abs.comp</span> <span class=\"n\">f.derivative.continuous_eval</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">continuous_on</span><span class=\"o\">,</span>\n  <span class=\"n\">replace</span> <span class=\"n\">hM</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">eval</span> <span class=\"n\">y</span> <span class=\"n\">f.derivative</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">eval</span> <span class=\"n\">x_max</span> <span class=\"n\">f.derivative</span><span class=\"o\">),</span>\n    <span class=\"o\">{</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">function.comp_app</span> <span class=\"n\">abs</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">set</span> <span class=\"n\">M</span> <span class=\"o\">:=</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">f.derivative.eval</span> <span class=\"n\">x_max</span><span class=\"o\">),</span>\n  <span class=\"n\">use</span> <span class=\"n\">M</span><span class=\"o\">,</span>\n<span class=\"c1\">--  remove from here ~~split,</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">  { apply lt_of_le_of_ne (abs_nonneg _),</span>\n<span class=\"cm\">    intro hM0, change 0 = M at hM0, rw hM0.symm at hM,</span>\n<span class=\"cm\">    replace hM := nat_degree_eq_zero_of_derivative_eq_zero</span>\n<span class=\"cm\">      (f.derivative.eq_zero_of_infinite_is_root</span>\n<span class=\"cm\">        (infinite_mono (λ y hy, _)</span>\n<span class=\"cm\">        (Icc.infinite (show α - 1 &lt; α + 1, by linarith)))),</span>\n<span class=\"cm\">    { linarith only [h_f_deg, hM] },</span>\n<span class=\"cm\">    { simp only [mem_set_of_eq, is_root.def, abs_nonpos_iff.1 (hM y hy)] }},</span>\n<span class=\"cm\">-/</span> <span class=\"c1\">-- ~~to here</span>\n  <span class=\"n\">intros</span> <span class=\"n\">y</span> <span class=\"n\">hy</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hy'</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n  <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">mem_Icc.mpr</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:=</span> <span class=\"n\">le_abs_self</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">α</span><span class=\"o\">),</span>\n    <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:=</span> <span class=\"n\">neg_le_abs_self</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">α</span><span class=\"o\">),</span>\n    <span class=\"n\">split</span><span class=\"bp\">;</span> <span class=\"n\">linarith</span> <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"n\">hM</span> <span class=\"n\">y</span> <span class=\"n\">hy'</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>(I left the commented out part, hoping that this helps with the checking!)  I also removed the assumption on <code>M</code> that is should be strictly positive.</p>",
        "id": 218519573,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1606890508
    },
    {
        "content": "<p>Please feel free to push these improvements to the branch</p>",
        "id": 218520360,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1606891507
    },
    {
        "content": "<p>Ok, I will look at this a little longer, until I will have to start my teaching!</p>",
        "id": 218521266,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1606892693
    },
    {
        "content": "<p>Sorry for not having reviewed this today: I am still interested in doing this, just it will take me more time!  I will take a look tomorrow!</p>",
        "id": 218594587,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1606931817
    },
    {
        "content": "<p>I worked a little on trying to simplify the proofs of the PR.  I have only looked at the first half of the file <code>analysis/real/polynomial.lean</code>.</p>\n<p>I believe that there is still a lot of minimization that can be achieved, likely by trying to find more direct statements to prove the results in the following file, <code>liouville</code>.  However, I did not dive into that one yet.</p>\n<p>Let me know what you think!  I am pinging a few people that were involved, in case you miss this!</p>\n<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> <span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span> <span class=\"user-mention\" data-user-id=\"252627\">@Jujian Zhang</span> </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.polynomial.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.set.intervals.infinite</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology.algebra.polynomial</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.calculus.mean_value</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">!</span>\n<span class=\"cm\">This file contains some lemmas about real polynomials and their derivatives</span>\n<span class=\"cm\">-/</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">polynomial</span> <span class=\"n\">real</span> <span class=\"n\">set</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">zero_le_add_abs_self</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">abs</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">abs_of_neg</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">add_right_neg</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">abs_of_nonneg</span> <span class=\"o\">(</span><span class=\"n\">not_lt.mp</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n    <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">not_lt.mp</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">le_add_of_nonneg_left</span> <span class=\"o\">(</span><span class=\"n\">not_lt.mp</span> <span class=\"n\">h</span><span class=\"o\">))</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">sub_mem_Icc_iff</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">i</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">α</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span> <span class=\"bp\">↔</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"o\">⟨</span><span class=\"n\">sub_le_iff_le_add.mpr</span> <span class=\"o\">(</span><span class=\"n\">neg_le_sub_iff_le_add.mp</span> <span class=\"n\">a.1</span><span class=\"o\">),</span> <span class=\"n\">sub_le_iff_le_add.mp</span> <span class=\"o\">(</span><span class=\"n\">sub_le.mpr</span> <span class=\"n\">a.2</span><span class=\"o\">)⟩,</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">neg_le_sub_iff_le_add.mpr</span> <span class=\"o\">(</span><span class=\"n\">sub_le_iff_le_add.mp</span> <span class=\"n\">a.1</span><span class=\"o\">)</span> <span class=\"o\">,</span> <span class=\"n\">sub_le_iff_le_add'.mpr</span> <span class=\"n\">a.2</span><span class=\"o\">⟩⟩</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">abs_le_iff_mem_Icc</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">i</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">i</span> <span class=\"bp\">↔</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">sub_le_of_abs_sub_le_left</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">sub_le_iff_le_add'.mp</span> <span class=\"o\">(</span><span class=\"n\">abs_le.mp</span> <span class=\"n\">h</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">⟩,</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">abs_le.mpr</span> <span class=\"o\">((</span><span class=\"n\">sub_mem_Icc_iff</span> <span class=\"n\">α</span> <span class=\"n\">i</span> <span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">h</span><span class=\"o\">)⟩</span>\n\n\n\n<span class=\"kd\">lemma</span> <span class=\"n\">exists_forall_ge_of_polynomial_Ioo_for</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"bp\">≥</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">eval</span> <span class=\"n\">y</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">N</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">⟩⟩</span> <span class=\"o\">:=</span>\n    <span class=\"n\">is_compact.exists_forall_ge</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">compact_Icc</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span>\n      <span class=\"o\">⟨</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">rfl.le</span><span class=\"o\">,</span> <span class=\"n\">sub_le_iff_le_add.mpr</span>\n        <span class=\"o\">(</span><span class=\"n\">le_add_of_le_of_nonneg</span> <span class=\"o\">(</span><span class=\"n\">le_add_of_le_of_nonneg</span> <span class=\"n\">rfl.le</span> <span class=\"n\">zero_le_one</span><span class=\"o\">)</span> <span class=\"n\">zero_le_one</span><span class=\"o\">)⟩⟩</span>\n    <span class=\"o\">(</span><span class=\"n\">continuous_abs.comp</span> <span class=\"n\">f.continuous_eval</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">continuous_on</span><span class=\"o\">,</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">f.eval</span> <span class=\"n\">x</span><span class=\"o\">),</span> <span class=\"bp\">λ</span> <span class=\"n\">N</span> <span class=\"n\">hN</span> <span class=\"n\">y</span> <span class=\"n\">hy1</span><span class=\"o\">,</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"n\">y</span> <span class=\"n\">hy1</span><span class=\"o\">)</span> <span class=\"n\">hN</span><span class=\"o\">⟩,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">exists_forall_ge_of_polynomial_deriv</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">M</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">eval</span> <span class=\"n\">y</span> <span class=\"n\">f.derivative</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">M</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">xx</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">exists_forall_ge_of_polynomial_Ioo_for</span> <span class=\"n\">α</span> <span class=\"n\">f.derivative</span><span class=\"o\">,</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">M</span> <span class=\"bp\">+</span> <span class=\"n\">abs</span> <span class=\"n\">M</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"n\">lt_of_lt_of_le</span> <span class=\"n\">zero_lt_one</span> <span class=\"o\">((</span><span class=\"n\">le_add_iff_nonneg_left</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"o\">(</span><span class=\"n\">zero_le_add_abs_self</span> <span class=\"n\">M</span><span class=\"o\">)),</span> <span class=\"bp\">λ</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">abs_le_iff_mem_Icc</span><span class=\"o\">,</span>\n  <span class=\"n\">refine</span> <span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)),</span> <span class=\"n\">xx</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">+</span> <span class=\"n\">abs</span> <span class=\"n\">M</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ge_iff_le.mpr</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">y</span> <span class=\"n\">hy</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">add_assoc</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"n\">le_add_iff_nonneg_right</span> <span class=\"n\">M</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">abs_nonneg</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">le_add_iff_nonneg_right</span> <span class=\"o\">(</span><span class=\"n\">abs</span> <span class=\"n\">M</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">zero_le_one</span><span class=\"o\">),</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">non_root_interval_of_polynomial</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h_f_nonzero</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">B</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">hr</span> <span class=\"o\">:</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">f.eval</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">set</span> <span class=\"n\">dist</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">f.roots.to_finset.erase</span> <span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">image</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)),</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">d0</span> <span class=\"o\">:</span> <span class=\"n\">dist.nonempty</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h_allpos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">dist</span> <span class=\"bp\">→</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"o\">(</span><span class=\"n\">finset.mem_image.mp</span> <span class=\"n\">hx</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩,</span>\n    <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">abs_pos.mpr</span> <span class=\"o\">(</span><span class=\"n\">sub_ne_zero.mpr</span> <span class=\"o\">(</span><span class=\"n\">ne.symm</span> <span class=\"o\">(</span><span class=\"n\">ne_of_mem_of_not_mem</span> <span class=\"n\">hy</span> <span class=\"n\">_</span><span class=\"o\">))),</span>\n      <span class=\"n\">exact</span> <span class=\"n\">finset.not_mem_erase</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">roots</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">to_finset</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">dist.min'</span> <span class=\"n\">d0</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">h_allpos</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">dist.min'_mem</span> <span class=\"n\">d0</span><span class=\"o\">)),</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">hxα</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ne.def</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">is_root.def</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">mem_roots</span> <span class=\"n\">h_f_nonzero</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">multiset.mem_to_finset</span><span class=\"o\">],</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">dist</span> <span class=\"o\">:=</span> <span class=\"n\">finset.mem_image.mpr</span>\n    <span class=\"o\">(</span><span class=\"n\">bex.intro</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">finset.mem_erase.mpr</span> <span class=\"o\">⟨</span><span class=\"n\">hxα</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">⟩)</span> <span class=\"n\">rfl</span><span class=\"o\">),</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h_f_nonzero</span> <span class=\"o\">(</span><span class=\"n\">false.rec</span> <span class=\"n\">_</span> <span class=\"o\">((</span><span class=\"n\">not_le.mpr</span> <span class=\"n\">hx</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">finset.min'_le</span> <span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"n\">h₂</span><span class=\"o\">))),</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">zero_lt_one</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">_</span> <span class=\"n\">xa</span> <span class=\"n\">ev</span><span class=\"o\">,</span> <span class=\"n\">d0</span> <span class=\"o\">⟨</span><span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">),</span> <span class=\"n\">finset.mem_image.mpr</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩⟩⟩,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">finset.mem_erase</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"o\">⟨⟨</span><span class=\"n\">xa</span><span class=\"o\">,</span> <span class=\"n\">multiset.mem_to_finset.mpr</span> <span class=\"o\">((</span><span class=\"n\">mem_roots</span> <span class=\"n\">h_f_nonzero</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">ev</span><span class=\"o\">)⟩,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">non_root_interval_of_polynomial_with_M</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h_f_nonzero</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hM</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">B</span> <span class=\"bp\">∧</span> <span class=\"n\">B</span> <span class=\"bp\">≤</span> <span class=\"n\">M</span> <span class=\"bp\">∧</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">hr</span> <span class=\"o\">:</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">f.eval</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"n\">F</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">non_root_interval_of_polynomial</span> <span class=\"n\">α</span> <span class=\"n\">f</span> <span class=\"n\">h_f_nonzero</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">min</span> <span class=\"n\">B</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">lt_min</span> <span class=\"n\">C</span> <span class=\"n\">hM</span><span class=\"o\">,</span> <span class=\"n\">min_le_right</span> <span class=\"n\">B</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">y</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">F</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"n\">lt_of_lt_of_le</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">min_le_left</span> <span class=\"n\">B</span> <span class=\"n\">M</span><span class=\"o\">))⟩,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">non_root_small_interval_of_polynomial</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h_f_nonzero</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hM</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">B</span> <span class=\"bp\">∧</span> <span class=\"n\">B</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"n\">M</span> <span class=\"bp\">∧</span> <span class=\"n\">B</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">hr</span> <span class=\"o\">:</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">f.eval</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"n\">D</span><span class=\"o\">,</span> <span class=\"n\">F</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span>\n    <span class=\"n\">non_root_interval_of_polynomial_with_M</span> <span class=\"n\">α</span> <span class=\"n\">f</span> <span class=\"n\">h_f_nonzero</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">one_div_pos.mpr</span> <span class=\"n\">hM</span><span class=\"o\">),</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"n\">D</span><span class=\"o\">,</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"n\">F</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">zero_lt_one</span><span class=\"o\">,</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_not_ge</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"n\">D</span><span class=\"o\">,</span> <span class=\"n\">rfl.le</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">F</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">lt_trans</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">not_le.mp</span> <span class=\"n\">E</span><span class=\"o\">))⟩</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 218721339,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1607014081
    },
    {
        "content": "<p>One common feature is that these proofs revolve around the fact that zero sets of non-zero polynomials are <em>discrete</em>.  This seems painful to argue, at least to me.  In fact, even the weaker statement that there are sequences of non-roots approaching each root might be useful and yet I could not find it in mathlib...  Is it there?</p>",
        "id": 218721694,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1607014212
    },
    {
        "content": "<p>We should prove it for finite sets I think: I don't know if discrete spaces are somewhere in mathlib (I don't find them), but the proof that any point is isolated in a finite metric space is easy, and it is essentially what is done here for the set of roots.</p>",
        "id": 218723199,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1607014828
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/discrete_topology\">docs#discrete_topology</a></p>",
        "id": 218729659,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1607017713
    }
]