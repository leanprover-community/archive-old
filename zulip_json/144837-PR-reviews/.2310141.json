[
    {
        "content": "<p>This does a bit of refactoring of the <code>fin n</code> equivalences for fintypes and adds</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">trunc_fin_bijection</span> <span class=\"o\">(</span><span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">trunc</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">card</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">//</span> <span class=\"n\">bijective</span> <span class=\"n\">f</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>which can potentially help remove <code>decidable_eq</code> instances for algorithms that need to enumerate elements.</p>\n<p>(The PR has been susceptible to experiencing merge conflicts.)</p>",
        "id": 261029983,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636567677
    }
]