[
    {
        "content": "<p>This one needs some attention from a doc-gen maintainer; it's solving an issue with large string expressions that was causing <code>lean --tlean</code> to crash, and the fix changed the interface to tactic docs which is used by doc-gen</p>",
        "id": 292491853,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1659990340
    },
    {
        "content": "<p>Is this fallout from <a href=\"https://github.com/leanprover-community/mathlib/pull/15537\">#15537</a> ?</p>",
        "id": 292527406,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1660021751
    },
    {
        "content": "<p>yes</p>",
        "id": 292527475,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660021826
    },
    {
        "content": "<p>quoting from the issue:</p>\n<blockquote>\n<p>So the issue here is that although there is a string-literal macro, <code>--tlean</code> <em>unfolds</em> all macros. (I pointed out that this was probably a bad idea at the time, but it presumably simplifies re-interpretation in binport.) I would like to merge all capabilities of the tlean files into the .ast.json format (which does not unfold macros when it writes expressions), but it doesn't have all environment modifications currently.</p>\n</blockquote>",
        "id": 292527500,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660021899
    },
    {
        "content": "<p>so the assertion made at <a href=\"https://github.com/leanprover-community/mathlib/pull/15537\">#15537</a> that the bug was fixed by introducing a string literal macro (and hence the workaround is no longer needed) is only half true</p>",
        "id": 292527552,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660021938
    },
    {
        "content": "<p>Does this mean we should revert <a href=\"https://github.com/leanprover-community/mathlib/pull/15537\">#15537</a>? It smoothed a sharp edge, and given it turns out we weren't immune to being cut by that edge it seems sensible to add back the protection</p>",
        "id": 292543345,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660035962
    },
    {
        "content": "<p>Regarding <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span>'s docgen patch in <a href=\"https://github.com/leanprover-community/doc-gen/commit/d74f0abd7a7f7ee2b22184cd870f748eeded496d\">https://github.com/leanprover-community/doc-gen/commit/d74f0abd7a7f7ee2b22184cd870f748eeded496d</a>; ideally doc-gen would work both before and after this change, so that we can still use it to build older versions (or third-party projects on old versions)</p>",
        "id": 292543459,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660036052
    },
    {
        "content": "<p>I don't think we need to revert <a href=\"https://github.com/leanprover-community/mathlib/pull/15537\">#15537</a>, the fallout has been completely cleaned up as far as I can tell.</p>",
        "id": 292545798,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1660037257
    }
]