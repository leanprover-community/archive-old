[
    {
        "content": "<p>It's a bit unfortunate for this PR that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.log\">docs#nat.log</a> is a 2-ary function with a base, whereas <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.log\">docs#real.log</a> is the 1-ary natural log. What do people think about a big refactor renaming the real natural log to <code>ln</code> and naming the real 2-ary log-with-base <code>log</code>?</p>",
        "id": 268315820,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1642454045
    },
    {
        "content": "<p>I would really personally dislike seeing the natural log as <code>ln</code>. <code>logb</code> maybe for log with base, but certainly not <code>ln</code></p>",
        "id": 268316037,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1642454269
    },
    {
        "content": "<p>Would you be in favor of renaming <code>nat.log</code> to <code>nat.logb</code> then? Or do you think it's fine that the conceptually similar function has the different name?</p>",
        "id": 268316161,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1642454392
    },
    {
        "content": "<p>I personally am in favor of <code>ln</code> for the natural log, because I think <code>ln</code> has no other interpretations. <code>log</code> can be either natural log or log base 10 (as I learned to my chagrin in high school after getting a question wrong on the AMC 12).</p>",
        "id": 268316466,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1642454645
    },
    {
        "content": "<p>How about the more radical suggestion of leaving <code>log</code> undefined so that it can be used as local notation? In much of theoretical computer science \"log\" means log base 2, and it would be nice to be able to support this locally in relevant files.</p>",
        "id": 268316743,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1642454906
    },
    {
        "content": "<p>This would also enable other fancy uses; for example, when we get the <a href=\"https://en.wikipedia.org/wiki/Continuous_functional_calculus\">continuous functional calculus</a> working, we would be able to locally define <code>log</code> to be <code>real.log</code> applied to elements of a C*-algebra via this calculus.</p>",
        "id": 268316942,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1642455103
    },
    {
        "content": "<p>I just found <code>ordinal.log</code> which is also 2-ary.</p>",
        "id": 268317816,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1642456023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span>  I'm not sure what you mean by \"locally define\". Wouldn't this use case be better covered using namespaces, as is already being done?</p>",
        "id": 268317907,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1642456118
    },
    {
        "content": "<p>I mean declaring something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"bp\">`</span><span class=\"n\">log</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">logb</span> <span class=\"mi\">2</span>\n</code></pre></div>\n<p>at the top of a file where we want <code>log</code> to mean log base 2.</p>",
        "id": 268317963,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1642456189
    },
    {
        "content": "<p>Ah, ok, that makes sense to me and seems like the best solution.</p>",
        "id": 268318281,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1642456422
    },
    {
        "content": "<p>Hell's bells, I think <code>real.log</code> is completely unambiguous and base <code>e</code> in math departments</p>",
        "id": 268327330,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642464449
    },
    {
        "content": "<p>Some CS texts, such as The Art of Computer Programming, use <code>lg</code> for base-2 log</p>",
        "id": 268327561,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1642464677
    },
    {
        "content": "<p><del>docs#ordinal.log is not 2-ary, it has a custom base</del> oh, you don't mean base 2</p>",
        "id": 268334420,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1642471422
    },
    {
        "content": "<p>I don't think I have ever seen <code>log</code> used for base 2 in CS, it's usually <code>lg</code> if it matters and <code>log</code> in big-O (where it doesn't matter)</p>",
        "id": 268334528,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1642471533
    },
    {
        "content": "<p>I'm in favor of the status quo: <code>nat.log</code> is 2-ary, <code>real.log</code> is base e</p>",
        "id": 268334625,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1642471658
    },
    {
        "content": "<p>I had a feeling this wouldn't be the most popular idea :-) The main area I was thinking of here is information theory, where taking log to mean base 2 lets you measure information in bits. Some even go so far as to use \"exp\" to mean 2^x.</p>",
        "id": 268334824,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1642471881
    },
    {
        "content": "<p>Maybe too far of an example, but <a href=\"https://numpy.org/doc/stable/reference/generated/numpy.log.html\"><code>numpy</code></a> treats <code>log</code> as the natural logarithm. Same thing in <a href=\"https://www.cplusplus.com/reference/cmath/log/\">C++</a></p>",
        "id": 268334835,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642471903
    },
    {
        "content": "<p>Can we use <code>log_base</code> for the general version, and <code>log</code> for base e (Haskell's solution)? This isn't that different from the PR as it is now, which uses <code>logb</code> for the former and I think is totally fine as is!</p>",
        "id": 268337438,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1642474713
    },
    {
        "content": "<p>I would prefer <code>logb</code> over <code>log_base</code>. Just because it saves 4 * n characters from every lemma name about it. And also because it avoids an <code>_</code> in a function name.</p>",
        "id": 268349355,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1642488356
    }
]