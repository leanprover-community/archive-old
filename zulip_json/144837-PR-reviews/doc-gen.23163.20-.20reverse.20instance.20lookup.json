[
    {
        "content": "<p>Over at <a href=\"https://github.com/leanprover-community/doc-gen/pull/163\">doc-gen#163</a>, I've tried a rough attempt at showing what instances are available for a given type. See the PR comments for some screenshots.</p>",
        "id": 278550929,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649682714
    },
    {
        "content": "<p>The heuristics for choosing what to display are overly generous, mainly because I don't know how to work with binders effectively in meta code</p>",
        "id": 278551054,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649682768
    },
    {
        "content": "<p>Oh nice!</p>",
        "id": 278565574,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649688864
    },
    {
        "content": "<p>Ideally instances about <code>list.lex</code> wouldn't show up under the list of instances for <code>list</code></p>",
        "id": 278566023,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649689044
    },
    {
        "content": "<p>But that would need something that notices when type arguments to typeclasses are used as indices to later type arguments to typeclasses</p>",
        "id": 278566147,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649689090
    },
    {
        "content": "<p>Unrelatedly, we might want a special page that lists instances on <code>pi</code>, <code>Type</code>, <code>Prop</code>, and <code>Sort</code></p>",
        "id": 278566194,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649689114
    },
    {
        "content": "<p>Generating that page would be easy, it's just a question of how to present it and where to put it</p>",
        "id": 278566232,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649689131
    },
    {
        "content": "<p>Any more thoughts on this?</p>",
        "id": 279706036,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650559092
    },
    {
        "content": "<p>ummm... I love it? <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 279707270,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650559684
    },
    {
        "content": "<p>For bikeshedding: Any better suggestions than \"Available typeclasses\" for the heading?</p>",
        "id": 279707884,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650559928
    },
    {
        "content": "<p>Instances?</p>",
        "id": 279707996,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1650559985
    },
    {
        "content": "<p>or related instances?</p>",
        "id": 279708034,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1650560008
    },
    {
        "content": "<p>\"Fulfilled instances\"?</p>",
        "id": 279708292,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1650560117
    },
    {
        "content": "<p>\"Instances\" is the heading we use under <code>class</code> for the things that are instances _of_ it</p>",
        "id": 279708303,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650560122
    },
    {
        "content": "<p>/poll What should the heading be called</p>",
        "id": 279708418,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650560166
    },
    {
        "content": "<p>In hindsight <code>typeclass</code> was a bad word to use, since it lists the <code>instance</code>s not their types (<code>class</code>es)</p>",
        "id": 279710202,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650560957
    },
    {
        "content": "<p>I've gone with \"Available instances\"</p>",
        "id": 279803807,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650622495
    },
    {
        "content": "<p>This ended up changing to \"instances for <code>foo</code>\" in review, but is now merged. See <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat\">docs#nat</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/lp\">docs#lp</a> for examples</p>",
        "id": 281606185,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652026067
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/doc-gen.23163.20-.20reverse.20instance.20lookup/near/278566194\">said</a>:</p>\n<blockquote>\n<p>Unrelatedly, we might want a special page that lists instances on <code>pi</code>, <code>Type</code>, <code>Prop</code>, and <code>Sort</code></p>\n</blockquote>\n<p>(done, see <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/foundational_types.html#pi-types-code%CF%80-a--%CE%B1-%CE%B2-acode\">https://leanprover-community.github.io/mathlib_docs_demo/foundational_types.html#pi-types-code%CF%80-a--%CE%B1-%CE%B2-acode</a>)</p>",
        "id": 307925916,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1667558143
    },
    {
        "content": "<p>Are there any instances on <code>Type</code> which aren't also instances on <code>Type u</code>?</p>",
        "id": 308026739,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667587290
    }
]