[
    {
        "content": "<p>As part of this PR <a href=\"https://github.com/leanprover-community/mathlib/pull/2746\">https://github.com/leanprover-community/mathlib/pull/2746</a> I proposed a definition for when two  endomorphisms of a module carrying bilinear form are adjoint. In the course of the review, <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> suggested that it might be better to begin with a more general definition, which defines adjointness in the context of a pair of modules, each carrying a bilinear form. I tend to agree but as I thought about it, it occurred to me that there were at least two different directions in which to generalise. This made me pause for thought and Johan suggested it might be worth seeking further commentary here on Zulip.</p>",
        "id": 198591199,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1590339677
    },
    {
        "content": "<p>Given two modules <code>M</code> and <code>N</code>, generalisation A is the natural concept of adjointness associated to data consisting of an element of each of:</p>\n<ul>\n<li><code>Hom(M ⊗ M, R)</code></li>\n<li><code>Hom(N ⊗ N, R)</code></li>\n<li><code>Hom(M, N)</code></li>\n<li><code>Hom(N, M)</code></li>\n</ul>\n<p>(in other words a bilinear form on each of <code>M</code> and <code>N</code> and maps back and forth)</p>",
        "id": 198591330,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1590339870
    },
    {
        "content": "<p>But there is also generalisation B, which is the natural concept of adjointness associated to data consisting of an element of each of:</p>\n<ul>\n<li><code>Hom(M ⊗ N, R)</code></li>\n<li><code>Hom(M, M)</code></li>\n<li><code>Hom(N, N)</code></li>\n</ul>\n<p>(in other words a bilinear pairing of <code>M</code> and <code>N</code> and an endomorphism of each module)</p>",
        "id": 198591458,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1590340068
    },
    {
        "content": "<p>And of course if we wanted, we could add more data to generalisation B by supplying two pairings.</p>",
        "id": 198591508,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1590340110
    },
    {
        "content": "<p>Note that I have not required the bilinear forms to be symmetric so there is a left- / right- handed version of everything. This is of course also up for debate but I think it is more or less an independent issue.</p>",
        "id": 198591583,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1590340229
    },
    {
        "content": "<p>So my questions are:</p>\n<ol>\n<li>Am I missing something obvious, is generalisation B obviously foolish or is there a natural common generalisation of both?</li>\n<li>Should we generalise to a pair of modules, or just leave the PR as it stands?</li>\n<li>If we do generalise for a pair of modules, which way should we go?</li>\n</ol>",
        "id": 198591640,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1590340327
    },
    {
        "content": "<p>I would expect generalization A. Is B a known concept?</p>",
        "id": 198591795,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590340572
    },
    {
        "content": "<p>Thanks. I would expect A also, and I'm not sure I've ever encountered B. Perhaps this is sufficient reason just to go ahead with A.</p>",
        "id": 198591810,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1590340645
    },
    {
        "content": "<p>I suggest we go for option A</p>",
        "id": 198720385,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590468487
    },
    {
        "content": "<p>If we need B at some point, we can always add it, whereas it's pretty clear that we want A soonish.</p>",
        "id": 198720390,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590468519
    }
]