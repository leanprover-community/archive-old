[
    {
        "content": "<p>The linter failed while installing elan with errors</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>info: downloading installer\ncurl: (22) The requested URL returned error: 503\nelan: command failed: curl -sSfL https://github.com/leanprover/elan/releases/download/v1.3.1/elan-x86_64-unknown-linux-gnu.tar.gz -o /tmp/tmp.4lYcWNeDBk/elan-init.tar.gz\nError: Process completed with exit code 1.\n</code></pre></div>\n<p>I suppose this is not normal. Should I <code>Re-run all jobs</code>?</p>",
        "id": 264138234,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1638960416
    },
    {
        "content": "<p>Yes.</p>",
        "id": 264138302,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1638960472
    },
    {
        "content": "<p>Done.</p>",
        "id": 264138383,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1638960511
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 264138556,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1638960619
    },
    {
        "content": "<p>I got this error in <a href=\"https://github.com/leanprover-community/mathlib/issues/10668\">#10668</a>, and I have no idea how to fix / debug it. I've tried to <code>Re-run all jobs</code>, but the same error still occurs.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">The</span> <span class=\"n\">self</span><span class=\"bp\">-</span><span class=\"n\">hosted</span> <span class=\"n\">runner</span><span class=\"o\">:</span> <span class=\"n\">nael</span> <span class=\"n\">lost</span> <span class=\"n\">communication</span> <span class=\"k\">with</span> <span class=\"n\">the</span> <span class=\"n\">server.</span> <span class=\"n\">Verify</span> <span class=\"n\">the</span> <span class=\"n\">machine</span> <span class=\"n\">is</span> <span class=\"n\">running</span> <span class=\"n\">and</span> <span class=\"n\">has</span> <span class=\"n\">a</span> <span class=\"n\">healthy</span> <span class=\"n\">network</span> <span class=\"n\">connection.</span> <span class=\"n\">Anything</span> <span class=\"k\">in</span> <span class=\"n\">your</span> <span class=\"n\">workflow</span> <span class=\"n\">that</span> <span class=\"n\">terminates</span> <span class=\"n\">the</span> <span class=\"n\">runner</span> <span class=\"n\">process</span><span class=\"o\">,</span> <span class=\"n\">starves</span> <span class=\"n\">it</span> <span class=\"n\">for</span> <span class=\"n\">CPU</span><span class=\"bp\">/</span><span class=\"n\">Memory</span><span class=\"o\">,</span> <span class=\"n\">or</span> <span class=\"n\">blocks</span> <span class=\"n\">its</span> <span class=\"n\">network</span> <span class=\"n\">access</span> <span class=\"n\">can</span> <span class=\"n\">cause</span> <span class=\"n\">this</span> <span class=\"n\">error.</span>\n</code></pre></div>",
        "id": 264430187,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1639133667
    },
    {
        "content": "<p><code>nael</code> was misbehaving, and forcefully restarted about 1hr ago. That might be related?</p>",
        "id": 264430369,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639133776
    },
    {
        "content": "<p>I also got one from <code>lane</code>. I could continue trying to rerun if it would potentially solve the problem.</p>",
        "id": 264430616,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1639133921
    },
    {
        "content": "<p>Right, <code>lane</code> and <code>lena</code> also got power cycled.</p>",
        "id": 264430949,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639134085
    },
    {
        "content": "<p>Sorry for the nuisance. Hopefully it's fixed now.</p>",
        "id": 264430965,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639134097
    },
    {
        "content": "<p>It still failed <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 264434993,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1639136592
    },
    {
        "content": "<p>Bah. That means we'll have to dig deeper.</p>",
        "id": 264440387,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639139719
    },
    {
        "content": "<p>the runners seem to be completely on fire right now</p>",
        "id": 264442379,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639140882
    },
    {
        "content": "<p>This also happened to me last night with <code>nale</code> on the first run of <a href=\"https://github.com/leanprover-community/mathlib/issues/10700\">#10700</a>. The second run completed.</p>",
        "id": 264452787,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1639145758
    },
    {
        "content": "<p>What are all these anagrams of <code>lean</code>?</p>",
        "id": 264456252,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1639147391
    },
    {
        "content": "<p>These are names of computers that used for CI</p>",
        "id": 264456939,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639147688
    },
    {
        "content": "<p>(CI = continuous integration)</p>",
        "id": 264456948,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639147696
    },
    {
        "content": "<p>Not to be confused with <code>elan</code>, the program that ensures the correct version of Lean is available for compiling your code :P</p>",
        "id": 264458048,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1639148199
    },
    {
        "content": "<p>Thanks. There are 22 anagrams except lean and elan. How many have been used by now?</p>",
        "id": 264458522,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1639148359
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2310668/near/264458048\">said</a>:</p>\n<blockquote>\n<p>Not to be confused with <code>elan</code>, the program that ensures the correct version of Lean is available for compiling your code :P</p>\n</blockquote>\n<p>Yeah, I originally thought these were also names of programs.</p>",
        "id": 264458832,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1639148483
    },
    {
        "content": "<p>We have <code>lane</code>, <code>lena</code>, <code>nael</code>, <code>nale</code> and <code>nela</code> from Freiburg, and <code>hoskinson1</code>-<code>hoskinson5</code> from Pittsburgh</p>",
        "id": 264459321,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1639148633
    },
    {
        "content": "<p>Not to be mistaken with <code>yael</code></p>",
        "id": 264515033,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639173860
    },
    {
        "content": "<p>When are you going to introduce your clones <code>leya</code>, <code>laye</code> <code>yale</code>, and <code>yela</code> to Zulip?</p>",
        "id": 264549309,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639210368
    },
    {
        "content": "<p>Are you ready to review 350 PR/month from my clones army? <span aria-label=\"stuck out tongue closed eyes\" class=\"emoji emoji-1f61d\" role=\"img\" title=\"stuck out tongue closed eyes\">:stuck_out_tongue_closed_eyes:</span></p>",
        "id": 264551270,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639213252
    },
    {
        "content": "<p>We just let the clones cross-review these PRs!</p>",
        "id": 264556641,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639221128
    }
]