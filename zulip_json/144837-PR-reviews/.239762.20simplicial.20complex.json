[
    {
        "content": "<p>A quick poll...</p>\n<p>Consider the following code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.convex.topology</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.finset.basic</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">foo_A</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">faces</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"n\">V</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">singleton</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">,</span> <span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"bp\">∈</span> <span class=\"n\">faces</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">down_closed</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"n\">t</span><span class=\"o\">},</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">faces</span> <span class=\"bp\">→</span> <span class=\"n\">t</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">t</span> <span class=\"bp\">∈</span> <span class=\"n\">faces</span><span class=\"o\">)</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">foo_B</span> <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ordered_ring</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">faces</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"n\">E</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">empty_mem</span> <span class=\"o\">:</span> <span class=\"bp\">∅</span> <span class=\"bp\">∈</span> <span class=\"n\">faces</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">indep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">s</span><span class=\"o\">},</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">faces</span> <span class=\"bp\">→</span> <span class=\"n\">affine_independent</span> <span class=\"bp\">𝕜</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">down_closed</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"n\">t</span><span class=\"o\">},</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">faces</span> <span class=\"bp\">→</span> <span class=\"n\">t</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">t</span> <span class=\"bp\">∈</span> <span class=\"n\">faces</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">disjoint</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"n\">t</span><span class=\"o\">},</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">faces</span> <span class=\"bp\">→</span> <span class=\"n\">t</span> <span class=\"bp\">∈</span> <span class=\"n\">faces</span> <span class=\"bp\">→</span>\n  <span class=\"n\">convex_hull</span> <span class=\"bp\">𝕜</span> <span class=\"bp\">↑</span><span class=\"n\">s</span> <span class=\"bp\">∩</span> <span class=\"n\">convex_hull</span> <span class=\"bp\">𝕜</span> <span class=\"bp\">↑</span><span class=\"n\">t</span> <span class=\"bp\">⊆</span> <span class=\"n\">convex_hull</span> <span class=\"bp\">𝕜</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">∩</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">E</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>What should <code>foo_A</code> resp. <code>foo_B</code> be called?</p>",
        "id": 258831322,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1635006255
    },
    {
        "content": "<p>/poll Naming contest<br>\nsimplicial_complex resp. embedded_simplicial_complex<br>\nabstract_simplicial_complex resp. simplicial_complex<br>\nsimplicial_complex resp. something else<br>\nsomething else resp. simplicial_complex<br>\nsomething else resp. something else</p>",
        "id": 258831362,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1635006316
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span></p>",
        "id": 258831367,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1635006329
    },
    {
        "content": "<p>(If you chose <code>something else</code>, please comment below)</p>",
        "id": 258831422,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1635006386
    },
    {
        "content": "<p>For <code>foo_A</code>, I'd be happy with either <code>abstract_simplicial_complex</code> or something more descriptive like <code>down_closed_family</code>.</p>",
        "id": 258831444,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635006441
    },
    {
        "content": "<p>Also note that <code>foo_A</code> can be generalized to atomic lattices.</p>",
        "id": 258831451,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635006468
    },
    {
        "content": "<p>or even further, as soon as you have an idea of what it means for a family of elements to cover the whole lattice (e.g., in a complete lattice it could mean that their join is everything)</p>",
        "id": 258831653,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635006770
    },
    {
        "content": "<p>Let me also ping <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> and <span class=\"user-mention\" data-user-id=\"329425\">@Peter Nelson</span></p>",
        "id": 258831885,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1635007138
    },
    {
        "content": "<p>I have a draft of a paper where I need to separately talk about</p>\n<ul>\n<li>simplicial sets,</li>\n<li>simplicial sets that are are isomorphic to subcomplexes of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"normal\">Δ</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\Delta^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span>,</li>\n<li>abstract simplicial complexes (approximately <code>foo_A</code>),</li>\n<li>geometric simplicial complexes (approximately <code>foo_B</code>),</li>\n<li>geometric simplicial complexes with a partial ordering of their vertices which is total on each face,</li>\n<li>and geometric simplicial complexes where a subset of a face doesn't have to be a face.</li>\n</ul>\n<p>So, it could be worse.</p>",
        "id": 258831959,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635007235
    },
    {
        "content": "<p>Oh what</p>",
        "id": 258831979,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635007288
    },
    {
        "content": "<p>I guess I'd call the last two <code>ordered_simplicial_complex</code> and <code>defect_simplicial_complex</code>.</p>",
        "id": 258832027,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635007323
    },
    {
        "content": "<p>The literature (or maybe it's just me) sometimes calls the last ones \"open\", in the sense of not necessarily \"closed\"</p>",
        "id": 258832049,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635007368
    },
    {
        "content": "<p>It's certainly not just you who does that <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 258832572,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1635008157
    },
    {
        "content": "<p>Makes sense though I can't remember where I got it then, since the \"open\" version is the default in vdD.</p>",
        "id": 258832946,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635008574
    },
    {
        "content": "<p>In general, could we survey what people expect from simplicial complexes?</p>",
        "id": 258843650,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635024664
    },
    {
        "content": "<p>Bhavik and I are interested in the combinatorics side of things, but we need the geometrical embedding for the fact that any subcell belongs to exactly one cell if it's on the boundary and exactly two if it's in the interior.</p>",
        "id": 258843720,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635024767
    },
    {
        "content": "<p>I think you already know my opinion (like essentially everyone else, I consider a simplicial complex to be a set of simplices and the empty set is not a simplex), but if you like I can find any number of sources that agree with me</p>",
        "id": 258845920,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635028135
    },
    {
        "content": "<p>The main thing I would like to use (abstract) simplicial complexes for is for cohomology. If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is a topological space that is homeomorphic to the geometric realization of an abstract simplicial complex <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>, then you can use the combinatorics of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> to compute the (co)homology of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>.</p>",
        "id": 258846290,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1635028696
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.239762.20simplicial.20complex/near/258831959\">said</a>:</p>\n<blockquote>\n<ul>\n<li>abstract simplicial complexes (approximately <code>foo_A</code>),</li>\n<li>geometric simplicial complexes (approximately <code>foo_B</code>),</li>\n</ul>\n</blockquote>\n<p>I'm curious what's the approximation -- is it because rather than simplicial complexes you're working with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi></mrow><annotation encoding=\"application/x-tex\">\\Delta</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Δ</span></span></span></span>-complexes (like in Hatcher)? or is it just that you exclude empty faces?</p>",
        "id": 258846856,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1635029630
    },
    {
        "content": "<p>I think in both cases the exclusion of the empty face is the only difference, though I'm not 100% sure about how I defined abstract simplicial complexes</p>",
        "id": 258848312,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635032075
    },
    {
        "content": "<p>This reminds me of when Mario was saying \"why don't we just let 1 be a prime,  the definition of prime would then be simpler and hence it's the correct definition\" and all the number theorists were going \"noooo noooo\"</p>",
        "id": 258866583,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635063720
    },
    {
        "content": "<p>Just because the beginning looks simpler doesn't mean it stays simpler</p>",
        "id": 258866628,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635063747
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.239762.20simplicial.20complex/near/258843650\">said</a>:</p>\n<blockquote>\n<p>In general, could we survey what people expect from simplicial complexes?</p>\n</blockquote>\n<p>I expect them to be the objects we use in algebraic topology, hence what Reid says.</p>",
        "id": 258866720,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1635063941
    },
    {
        "content": "<p>I think the definitions of <code>preprime</code> and <code>preconnected</code> came out of the previous discussion.</p>",
        "id": 258866727,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635063957
    },
    {
        "content": "<p>Ie the simpler definitions were given names which didn't clash with the mathematical definitions</p>",
        "id": 258866772,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635063984
    },
    {
        "content": "<p>(the empty set is preconnected but not connected)</p>",
        "id": 258866778,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635064006
    },
    {
        "content": "<p>So you want some presimplicial complex?</p>",
        "id": 258866908,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635064247
    },
    {
        "content": "<p>No. <em>You</em> want it. We only want the normal one.</p>",
        "id": 258867079,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1635064518
    },
    {
        "content": "<p>If you want to include the empty set and if Reid says that this is ultimately a bad idea then this is the way this issue has been solved in the past</p>",
        "id": 258867090,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635064547
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/preconnected\">docs#preconnected</a></p>",
        "id": 258867129,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635064575
    },
    {
        "content": "<p>That doesn't work but it's there somewhere</p>",
        "id": 258867133,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635064595
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_preconnected\">docs#is_preconnected</a></p>",
        "id": 258867145,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635064642
    },
    {
        "content": "<p>And basically a lot of the early API works fine for preconnected (maybe even better) but then at some point connected becomes the dominant concept</p>",
        "id": 258867207,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635064711
    },
    {
        "content": "<p>My understanding is that historically the first prime number has been thought of as 1, 2 and 3</p>",
        "id": 258867284,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635064804
    },
    {
        "content": "<p><del>I guess in the end they just took the average</del></p>",
        "id": 258867289,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635064812
    },
    {
        "content": "<p>But by the time you're doing p-adic numbers the most useful definition has become clear</p>",
        "id": 258867316,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635064879
    },
    {
        "content": "<p>Here is one example: <a href=\"https://kerodon.net/tag/0024\">https://kerodon.net/tag/0024</a><br>\nThe elements of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">U</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{U}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.09931em;\">U</span></span></span></span> are in one-to-one correspondence with the nondegenerate simplices of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi mathvariant=\"normal\">Δ</mi><mi mathvariant=\"script\">U</mi><mi>n</mi></msubsup></mrow><annotation encoding=\"application/x-tex\">\\Delta^n_{\\mathcal{U}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.958661em;vertical-align:-0.275331em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-2.424669em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.09931em;\">U</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.275331em;\"><span></span></span></span></span></span></span></span></span></span>, and also in one-to-one correspondence with the faces of the geometric simplicial complex that's implicitly being used here whose underlying set is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><msup><mi mathvariant=\"normal\">Δ</mi><mi>n</mi></msup><msub><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"script\">U</mi></msub></mrow><annotation encoding=\"application/x-tex\">|\\Delta^n|_{\\mathcal{U}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathcal mtight\" style=\"margin-right:0.09931em;\">U</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. If you treat the empty set as a face then this correspondence with simplicial sets will be \"off by one\", since there is no \"empty simplex\" in a simplicial set.</p>",
        "id": 258871578,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635071487
    },
    {
        "content": "<p>What is strange to me here though is that it doesn't seem like <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> really wants the empty faces, either? I'm not sure why I need to be defending the standard definition at all--rather, one should have a good reason <em>not</em> to adopt it.</p>",
        "id": 258871644,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635071601
    },
    {
        "content": "<p>The good reason to not adopt the standard (in 2021) principle that 1 isn't prime is that it makes the definition of prime twice as short -- right now a computer scientist looks at the definition and it looks like \"some divisibility thing, oh, and also not 1, for some reason\"</p>",
        "id": 258871762,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635071764
    },
    {
        "content": "<p>The reason only becomes apparently later on</p>",
        "id": 258871789,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635071844
    },
    {
        "content": "<p>My question wasn't only about whether we should include the empty set. I was also wondering what we want to mean by <code>K ≤ L</code> and <code>x ∈ K</code>.</p>",
        "id": 258871803,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635071878
    },
    {
        "content": "<p>I just looked in Spanier, in Rourke-Sanderson and in van den Dries's book on o-minimal structures and what they all do is:</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi><mo>∈</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma \\in K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> means <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span> is a face of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>;</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"normal\">∣</mi><mi>K</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">x \\in |K|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\">∣</span></span></span></span> means <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is in the union of the convex hulls of etc, what the PR currently calls <code>K.space</code> I guess;</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>⊆</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">L \\subseteq K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> means <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> is a subcomplex of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>;</li>\n<li>for subdivision R-S uses <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>K</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>⊲</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K&#x27; \\vartriangleleft K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.787062em;vertical-align:-0.03517em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⊲</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>, Spanier writes \"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>K</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">K&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> is a subdivision of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>\" and it doesn't really come up in vdD</li>\n</ul>",
        "id": 258873089,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635073624
    },
    {
        "content": "<p>Of course we may not want to / be able to exactly reproduce this in Lean, but it is a good reference point</p>",
        "id": 258873347,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635073920
    },
    {
        "content": "<p>Also, it's important to distinguish a simplicial map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>K</mi><mo>→</mo><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">f : K \\to L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> from a general continuous map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>:</mo><mi mathvariant=\"normal\">∣</mi><mi>K</mi><mi mathvariant=\"normal\">∣</mi><mo>→</mo><mi mathvariant=\"normal\">∣</mi><mi>L</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">g : |K| \\to |L|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">L</span><span class=\"mord\">∣</span></span></span></span></p>",
        "id": 258874340,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635075383
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>K</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|K|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\">∣</span></span></span></span> in particular is notation we can't really reproduce.</p>",
        "id": 258874620,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635075838
    },
    {
        "content": "<p>Right, but one thing we can conclude from these notations is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>K</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|K|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\">∣</span></span></span></span> should be distinguished visually somehow from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> (so, not related by a coercion)</p>",
        "id": 258875048,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635076478
    },
    {
        "content": "<p>So it's ready for review again. As mentioned in the PR, we still have to figure out:</p>\n<ul>\n<li>how to name the structure</li>\n<li>what coercions we want</li>\n<li>what should membership mean</li>\n<li>how to name the \"glue nicely\" condition</li>\n<li>how to name the underlying space/set</li>\n</ul>\n<p>None of those is crucial, so if we can't decide on those matters we might as well merge this PR now. Then if anybody comes up with a better name/meaning for any of those, a quick renaming PR will do the job.</p>",
        "id": 261436118,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636920811
    },
    {
        "content": "<p><span aria-label=\"ping pong\" class=\"emoji emoji-1f3d3\" role=\"img\" title=\"ping pong\">:ping_pong:</span></p>",
        "id": 264593612,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639268313
    }
]