[
    {
        "content": "<p>Travis seems to be screwing something up with <a href=\"https://github.com/leanprover/mathlib/pull/480\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/480\">https://github.com/leanprover/mathlib/pull/480</a>. It’s complaining about invalid imports in files that aren’t even in this PR anymore. <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, are you able to reset it somehow?</p>",
        "id": 148686856,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1543375775
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> have you tried clearing the cache for that branch? I think I can do it</p>",
        "id": 148687461,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1543376723
    },
    {
        "content": "<p>Ah, I thought only some people could do that. If you see how to do it, teach me. :-)</p>",
        "id": 148687515,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1543376767
    },
    {
        "content": "<p><a href=\"https://travis-ci.org/leanprover-community/mathlib/caches\" target=\"_blank\" title=\"https://travis-ci.org/leanprover-community/mathlib/caches\">https://travis-ci.org/leanprover-community/mathlib/caches</a></p>",
        "id": 148687524,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1543376792
    },
    {
        "content": "<p>And just click the lil bin</p>",
        "id": 148687526,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1543376797
    },
    {
        "content": "<p>I retriggered a build</p>",
        "id": 148687529,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1543376810
    },
    {
        "content": "<p>after</p>",
        "id": 148687531,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1543376813
    },
    {
        "content": "<p>We can because everything is really on mathlib-community, which we can push to</p>",
        "id": 148687643,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1543377006
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"110111\">@Keeley Hoek</span>. Curiously this doesn't seem to have fixed the PR, however. :-(</p>",
        "id": 148692162,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1543385484
    },
    {
        "content": "<p>Ah yes<br>\nBut it did build successfully<br>\n<a href=\"https://travis-ci.org/leanprover-community/mathlib/builds/460592170\" target=\"_blank\" title=\"https://travis-ci.org/leanprover-community/mathlib/builds/460592170\">https://travis-ci.org/leanprover-community/mathlib/builds/460592170</a></p>",
        "id": 148692163,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1543385507
    },
    {
        "content": "<p>I was wrong about it updating the thingo for the main repo though</p>",
        "id": 148692164,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1543385516
    },
    {
        "content": "<p>Okay, I'll just push a whitespace change and see if that fixes things.</p>",
        "id": 148692210,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1543385603
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> could you restart the build for <a href=\"https://github.com/leanprover/mathlib/issues/480\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/issues/480\">#480</a> on travis? I've tried deleting caches, force pushing again, etc. but it won't rebuild and the error message is nonsense (because of the cache).</p>",
        "id": 148693645,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1543388333
    },
    {
        "content": "<p>Ok, this is ready.<br>\nIt just does two small things: a few lemmas about</p>\n<div class=\"codehilite\"><pre><span></span>def ulift_functor : (Type u) ⥤ (Type (max u v))\n</pre></div>\n\n\n<p>and states as a separate lemma the componentwise version of the Yoneda lemma:</p>\n<div class=\"codehilite\"><pre><span></span>@[simp] def yoneda_sections (X : C) (F : Cᵒᵖ ⥤ Type v₁) : (yoneda.obj X ⟹ F) ≅ ulift.{u₁} (F.obj X)\n</pre></div>\n\n\n<p>Oh -- and adds the definition of <code>representable</code>, which will be needed shortly for the limits PRs.</p>",
        "id": 148696110,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1543392357
    }
]