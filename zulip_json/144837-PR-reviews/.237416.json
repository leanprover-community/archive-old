[
    {
        "content": "<p>It seems that <a href=\"https://github.com/leanprover-community/mathlib/pull/7416\">#7416</a> is getting a deterministic timeout in <code>linear_algebra/clifford_algebra/basic</code>. How can I fix this? That file is compiling fine locally for me so I'm not sure what's going wrong.</p>",
        "id": 236978410,
        "sender_full_name": "Jason KY.",
        "timestamp": 1619883999
    },
    {
        "content": "<p>The error message gives a line number and column: <code>113:23</code>, so you could check if whatever's there compiles slowly and try to speed that up.</p>",
        "id": 236978690,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1619884225
    },
    {
        "content": "<p>Note also that the CI build runs with the command line option <code>-T100000</code>. I think this is the same value that's used in the VS Code plugin by default, but I think \"deterministic timeouts\" can depend on the order in which files are loaded (?), so it might behave a little bit differently.</p>",
        "id": 236978888,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1619884432
    },
    {
        "content": "<p>I see there are two <code>simp</code>s there  so I will change them to be <code>simp only</code> instead</p>",
        "id": 236978986,
        "sender_full_name": "Jason KY.",
        "timestamp": 1619884539
    },
    {
        "content": "<p>Perhaps the timeout is because I introduced new imports?</p>",
        "id": 236979045,
        "sender_full_name": "Jason KY.",
        "timestamp": 1619884574
    },
    {
        "content": "<p>It's quite possible. Some <code>simp</code> lemmas might be looping, for example.</p>",
        "id": 236979185,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1619884707
    },
    {
        "content": "<p>Thanks for your help! Now that I changed <code>simp</code>to <code>simp_only</code> it is building fine and the linter is also happy. But its now failing with </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Run</span> <span class=\"n\">lean</span> <span class=\"c1\">--recursive --export=mathlib.txt src/</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">runner</span><span class=\"bp\">/</span><span class=\"n\">work</span><span class=\"bp\">/</span><span class=\"n\">_temp</span><span class=\"bp\">/</span><span class=\"n\">b781b1d4</span><span class=\"bp\">-</span><span class=\"mi\">54</span><span class=\"n\">b3</span><span class=\"bp\">-</span><span class=\"mi\">4</span><span class=\"n\">bf3</span><span class=\"bp\">-</span><span class=\"n\">a5a9</span><span class=\"bp\">-</span><span class=\"n\">f86b76fbfc97.sh</span><span class=\"o\">:</span> <span class=\"n\">line</span> <span class=\"mi\">2</span><span class=\"o\">:</span>  <span class=\"mi\">2074</span> <span class=\"n\">Killed</span>\n <span class=\"n\">leanchecker</span> <span class=\"n\">mathlib.txt</span>\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">Process</span> <span class=\"n\">completed</span> <span class=\"k\">with</span> <span class=\"n\">exit</span> <span class=\"n\">code</span> <span class=\"mi\">137</span><span class=\"bp\">.</span>\n</code></pre></div>\n<p>What does this mean?</p>",
        "id": 236985333,
        "sender_full_name": "Jason KY.",
        "timestamp": 1619890151
    },
    {
        "content": "<p>something probably recursing very deep - thats the out of memory error code</p>",
        "id": 236986903,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619891627
    },
    {
        "content": "<p>there was already some discussion about moving out of leanchecker,  maybe treppelein will do better with it?</p>",
        "id": 236987529,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619892208
    },
    {
        "content": "<p>Emm, so is there anything I can do then? Or should we just ignore the error</p>",
        "id": 236989190,
        "sender_full_name": "Jason KY.",
        "timestamp": 1619893797
    },
    {
        "content": "<p>This is a problem, but I don't know how to fix it. There have been some other recent issues with <code>leanchecker</code>, so let's wait for an expert. cc: <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 236990063,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1619894576
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"go\">&gt; ./target/universal/stage/bin/trepplein mathlib.txt</span>\n<span class=\"go\">-- successfully checked 148367 declarations</span>\n</code></pre></div>",
        "id": 236990082,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619894597
    },
    {
        "content": "<p>seems like a leanchecker problem yep :(</p>",
        "id": 236990090,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619894614
    },
    {
        "content": "<p>can you try running <code>leanchecker -v</code>?</p>",
        "id": 236990236,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1619894736
    },
    {
        "content": "<p>this was on CI, mario; I'll leave it running on my machine and see if I can get something back for you but I'm probably going to be AFK for a while now</p>",
        "id": 236990378,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619894840
    },
    {
        "content": "<p>random q; could it be related to <a href=\"https://github.com/leanprover/lean/issues/1716\">https://github.com/leanprover/lean/issues/1716</a>?</p>",
        "id": 236990412,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619894883
    },
    {
        "content": "<p>(I know that's closed)</p>",
        "id": 236990447,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619894890
    },
    {
        "content": "<p>There's a more recent open <code>leanchecker</code> issue at <a href=\"https://github.com/leanprover-community/lean/issues/543\">lean#543</a>.</p>",
        "id": 236990580,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1619895026
    },
    {
        "content": "<p>But that's probably not it, I guess.</p>",
        "id": 236990617,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1619895088
    },
    {
        "content": "<p>wait - will <code>-v</code> even work? it seems to have been introduced in 3.29, but mathlib is on 3.28</p>",
        "id": 236990910,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619895390
    },
    {
        "content": "<p>(<a href=\"https://github.com/leanprover-community/lean/commit/0c580b8c42bc40e0e68478cf9558ea63f7ab6d0c\">https://github.com/leanprover-community/lean/commit/0c580b8c42bc40e0e68478cf9558ea63f7ab6d0c</a>)</p>",
        "id": 236990915,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619895394
    },
    {
        "content": "<p>you should be able to use leanchecker 3.29 to check mathlib built with lean 3.28</p>",
        "id": 236990944,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1619895439
    },
    {
        "content": "<p>okay, so it actually ran just fine on my machine... maybe try re-run it on CI and see if it was just a transient bug?</p>",
        "id": 237027365,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619932132
    },
    {
        "content": "<p>(this was on the 3.30 checker though)</p>",
        "id": 237027630,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619932500
    },
    {
        "content": "<p>Alright, I will re-run it for <a href=\"https://github.com/leanprover-community/mathlib/issues/7416\">#7416</a> to see if it fixes it (though it also failed for <a href=\"https://github.com/leanprover-community/mathlib/pull/7427\">#7427</a>)</p>",
        "id": 237044466,
        "sender_full_name": "Jason KY.",
        "timestamp": 1619952376
    },
    {
        "content": "<p>Looks like this is still failing. On the off chance something in Lean 3.30c fixes things, I've merged <a href=\"https://github.com/leanprover-community/mathlib/issues/7264\">#7264</a> into <a href=\"https://github.com/leanprover-community/mathlib/issues/7416\">#7416</a> in <a href=\"https://github.com/leanprover-community/mathlib/tree/sylvester330\">branch#sylvester330</a>.</p>",
        "id": 237064845,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1619973528
    },
    {
        "content": "<p>Well, it fails with 3.30c as well: <a href=\"https://github.com/leanprover-community/mathlib/runs/2487859889?check_suite_focus=true\">https://github.com/leanprover-community/mathlib/runs/2487859889?check_suite_focus=true</a></p>",
        "id": 237087381,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1619991555
    },
    {
        "content": "<p>how much memory does the CI server have? I have 32GB so that may be why</p>",
        "id": 237087601,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619991758
    },
    {
        "content": "<p>Only 7 GB I think: <a href=\"https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners\">https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners</a></p>",
        "id": 237087684,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1619991850
    },
    {
        "content": "<p>still weird regardless though, with it being <code>simp only</code> it really shouldn't have that many new things to hold in memory because of this specific build</p>",
        "id": 237087890,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619992062
    },
    {
        "content": "<p>I suspect it's <code>is_basis.smul_of_invertible</code> that is breaking it. I've been slowly removing lemmas in a test <a href=\"https://github.com/leanprover-community/mathlib/tree/JasonKYi/test\">branch</a> and it is the only lemma remaining with the test still failing.</p>",
        "id": 237088067,
        "sender_full_name": "Jason KY.",
        "timestamp": 1619992216
    },
    {
        "content": "<p>It seems it is fixed now after I had removed a <a href=\"https://github.com/leanprover-community/mathlib/pull/7416/commits/50fda927ca0ab5cdb5dadb91d5e48c88bd39fda4\">import</a></p>",
        "id": 237178857,
        "sender_full_name": "Jason KY.",
        "timestamp": 1620055192
    },
    {
        "content": "<p>OK, great! Still, it'd be good to figure out exactly what's going on and document it somehow so we can avoid this in the future.</p>",
        "id": 237178993,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1620055239
    }
]