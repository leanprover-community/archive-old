[
    {
        "content": "<p>Dear All,</p>\n<p>in <a href=\"https://github.com/leanprover-community/mathlib/pull/12564\">#12564</a>, I made a trivial addition to <code>to_additive</code> to support generating the intended names in the case of <code>units</code> and <code>is_unit</code>, respectively producing <code>add_units</code> and <code>is_add_unit</code>.</p>\n<p>(Really, the current status of the PR only adds support for <code>is_unit</code>.  In my local branch I added both</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">|</span> <span class=\"n\">is_comm</span> <span class=\"o\">(</span><span class=\"s2\">\"unit\"</span> <span class=\"o\">::</span> <span class=\"n\">s</span><span class=\"o\">)</span>        <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"s2\">\"add_\"</span> <span class=\"bp\">++</span> <span class=\"n\">add_comm_prefix</span> <span class=\"n\">is_comm</span> <span class=\"s2\">\"unit\"</span><span class=\"o\">)</span>    <span class=\"o\">::</span> <span class=\"n\">tr</span> <span class=\"n\">ff</span> <span class=\"n\">s</span>\n<span class=\"bp\">|</span> <span class=\"n\">is_comm</span> <span class=\"o\">(</span><span class=\"s2\">\"units\"</span> <span class=\"o\">::</span> <span class=\"n\">s</span><span class=\"o\">)</span>       <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"s2\">\"add_\"</span> <span class=\"bp\">++</span> <span class=\"n\">add_comm_prefix</span> <span class=\"n\">is_comm</span> <span class=\"s2\">\"units\"</span><span class=\"o\">)</span>    <span class=\"o\">::</span> <span class=\"n\">tr</span> <span class=\"n\">ff</span> <span class=\"n\">s</span>\n</code></pre></div>\n<p>I am waiting for CI to approve of the first change, before pushing also the second one.)</p>\n<p>I am not sure if this is desirable and I would welcome any comment!</p>",
        "id": 274831726,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1646917677
    },
    {
        "content": "<p>Moreover, since this is the first time that I actually change a <code>meta def</code>, I may very well have messed up badly!  Do let me know if you have better suggestions!</p>\n<p>Finally, is there support for any other similar dictionary change?</p>",
        "id": 274831765,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1646917683
    },
    {
        "content": "<p>Looks great to me, lets see if CI is happy</p>",
        "id": 274853555,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646927346
    },
    {
        "content": "<p>On my machine, it builds with just some auto-generated names to be removed.</p>",
        "id": 274854594,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1646927739
    },
    {
        "content": "<p>Incidentally, I saw that there are a couple of uses of <code>to_additive</code> with <code>center</code>: should I look to add those as well as auto-generated names?  They did not seem too straightforward, so maybe this is a reason not to do it.</p>",
        "id": 274854599,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1646927741
    },
    {
        "content": "<p>CI finished with an error, but is not letting me know what is wrong...</p>",
        "id": 274856895,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1646928633
    }
]