[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16944\">#16944</a> adds a lemma <code>function.extend_apply_of_unique</code><br>\nwhich allows to rewrite <code>function.extend f g e (f a) = g a</code><br>\nnot only when the function <code>f</code> is injective, what <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.extend_apply\">docs#function.extend_apply</a> does,<br>\nbut also when <code>f a = f b → g a = g b</code>.</p>\n<p>I generalized a few similar lemmas in the same way, when it was automatic.</p>\n<p>I didn't envision proving injectivity/surjectivity (see <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.extend_injective\">docs#function.extend_injective</a>) in the same way,<br>\nbut it can be.</p>\n<p>Also, maybe <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.extend_apply\">docs#function.extend_apply</a> should be rewritten by referring to <code>function.extend_apply_unique</code>,<br>\nmaybe not, the proofs are anyway very short.</p>",
        "id": 303774684,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1665647321
    },
    {
        "content": "<p>Probably out of scope for that PR, but; is <code>∀ ⦃a, b⦄, f a = f b → g a = g b</code> interesting enough to be given a name like <code>function.factors_through g f</code>?</p>",
        "id": 304148175,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1665804815
    },
    {
        "content": "<p>(indicating that <code>g = g' ∘ f</code> for some <code>g'</code>)</p>",
        "id": 304148263,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1665804886
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, your function pals!</p>",
        "id": 304165617,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665821704
    },
    {
        "content": "<p>Do you want me to add it here?</p>",
        "id": 304894987,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1666164833
    }
]