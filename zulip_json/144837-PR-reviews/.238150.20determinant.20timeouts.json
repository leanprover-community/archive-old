[
    {
        "content": "<p>The latest build of <a href=\"https://github.com/leanprover-community/mathlib/issues/8150\">#8150</a> fails with the same timeout as the last bors batch failed with</p>",
        "id": 244478296,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625082717
    },
    {
        "content": "<p>I think <code>src/linear_algebra/matrix/determinant.lean:163:25</code> must be right on the verge of a timeout, and is sensitive to any import restructures that might introduce more simp lemmas / instances</p>",
        "id": 244478500,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625082799
    },
    {
        "content": "<p>Yeah that doesn't surprise me - the <code>det_mul</code> family has been quite slow for as long as I remember</p>",
        "id": 244486403,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1625086482
    },
    {
        "content": "<p>The proof hasn't been really changed in 2 years, maybe we can update it to a more modern style?</p>",
        "id": 244486868,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1625086706
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/7832\">#7832</a> hits the same timeout, although that's not really an new data point since it was one of the PRs in the failing batch</p>",
        "id": 244489741,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625088052
    },
    {
        "content": "<p>Mindlessly squeezing the simps yields a lemma that, on my machine goes from taking just under 19secs to compile, to less than 4s.  This is the result:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">det_mul</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">⬝</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span> <span class=\"o\">:=</span>\n<span class=\"k\">calc</span> <span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">⬝</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">det_apply'</span><span class=\"o\">,</span> <span class=\"n\">mul_apply</span><span class=\"o\">,</span> <span class=\"n\">prod_univ_sum</span><span class=\"o\">,</span> <span class=\"n\">mul_sum</span><span class=\"o\">,</span>\n    <span class=\"n\">fintype.pi_finset_univ</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">finset.sum_comm</span><span class=\"o\">]</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"n\">bijective</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">perm</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n    <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">eq.symm</span> <span class=\"bp\">$</span> <span class=\"n\">sum_subset</span> <span class=\"o\">(</span><span class=\"n\">filter_subset</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">f</span> <span class=\"n\">_</span> <span class=\"n\">hbij</span><span class=\"o\">,</span> <span class=\"n\">det_mul_aux</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">true_and</span><span class=\"o\">,</span> <span class=\"n\">mem_filter</span><span class=\"o\">,</span> <span class=\"n\">mem_univ</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">hbij</span><span class=\"o\">)</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">sum_bij</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">equiv.of_bijective</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">mem_filter.1</span> <span class=\"n\">h</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">mem_univ</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">injection</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">b</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">mem_filter.2</span> <span class=\"o\">⟨</span><span class=\"n\">mem_univ</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">b.bijective</span><span class=\"o\">⟩,</span> <span class=\"n\">coe_fn_injective</span> <span class=\"n\">rfl</span><span class=\"o\">⟩)</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">mul_left_comm</span><span class=\"o\">,</span> <span class=\"n\">prod_mul_distrib</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"n\">perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"n\">perm</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(((</span><span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"bp\">∏</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">sum_congr</span> <span class=\"n\">rfl</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">σ</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">fintype.sum_equiv</span> <span class=\"o\">(</span><span class=\"n\">equiv.mul_right</span> <span class=\"n\">σ</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">τ</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">∏</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">((</span><span class=\"n\">τ</span> <span class=\"bp\">*</span> <span class=\"n\">σ</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"n\">j</span><span class=\"o\">,</span>\n        <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">σ</span><span class=\"bp\">⁻¹.</span><span class=\"n\">prod_comp</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">equiv.perm.coe_mul</span><span class=\"o\">,</span> <span class=\"n\">apply_inv_self</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n      <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"bp\">*</span> <span class=\"n\">σ</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span> <span class=\"o\">:=</span>\n        <span class=\"k\">calc</span> <span class=\"n\">ε</span> <span class=\"n\">σ</span> <span class=\"bp\">*</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"bp\">*</span> <span class=\"n\">σ</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"o\">((</span><span class=\"n\">τ</span> <span class=\"bp\">*</span> <span class=\"n\">σ</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n          <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">sign_mul</span> <span class=\"o\">(</span><span class=\"n\">τ</span> <span class=\"bp\">*</span> <span class=\"n\">σ</span><span class=\"bp\">⁻¹</span><span class=\"o\">)],</span> <span class=\"n\">simp</span> <span class=\"o\">}</span>\n        <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"n\">τ</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">inv_mul_cancel_right</span><span class=\"o\">],</span>\n      <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">equiv.coe_mul_right</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">],</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">]</span> <span class=\"o\">}))</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">det</span> <span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"n\">det</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">det_apply'</span><span class=\"o\">,</span> <span class=\"n\">finset.mul_sum</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">mul_left_comm</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 244511828,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1625106288
    },
    {
        "content": "<p>PR <a href=\"https://github.com/leanprover-community/mathlib/issues/8156\">#8156</a></p>",
        "id": 244512569,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1625107350
    },
    {
        "content": "<p>While I was at it, I did the same for a couple of other lemmas in the same file!</p>",
        "id": 244513215,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1625108265
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/8151\">#8151</a> failed for this reason too - thanks for taking this on <span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span>!</p>",
        "id": 244516406,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625112585
    },
    {
        "content": "<p>The squeezed proof got merged: let's see if it makes a difference!</p>",
        "id": 244541912,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1625133070
    }
]