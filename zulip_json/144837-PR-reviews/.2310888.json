[
    {
        "content": "<p>I'd like some opinions on where the lemma <code>filter_Ico_card_eq_of_periodic</code> from this PR should live. The two primary dependencies are <code>data/nat/interval</code> and <code>algebra/periodic</code> but neither imports the other.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">filter_Ico_card_eq_of_periodic</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"n\">p</span><span class=\"o\">]</span>\n <span class=\"o\">(</span><span class=\"n\">pp</span> <span class=\"o\">:</span> <span class=\"n\">function.periodic</span> <span class=\"n\">p</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">filter</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">Ico</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"n\">a</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">filter</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">a</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span>\n</code></pre></div>\n<p>It would be nice to put it upstream of <code>data/nat/totient</code> so that  a <code>filter_coprime_Ico_eq_totient</code> lemma (from <a href=\"https://github.com/leanprover-community/mathlib/pull/9080\">#9080</a>), which depends on it, can be added there.</p>",
        "id": 265453800,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639876970
    },
    {
        "content": "<p>Isn't the RHS <code>a.count p</code>?</p>",
        "id": 265453818,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639877035
    },
    {
        "content": "<p>Oh lol, yes, I should change that now that that's been pulled.</p>",
        "id": 265453864,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639877071
    },
    {
        "content": "<p>Also not sure how general this lemma should be made.</p>",
        "id": 265453889,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639877152
    },
    {
        "content": "<p>For example, one could prove that <code>(filter p (Ico m (m+a))).card = (filter p (Ico n (n+a))).card</code> over cyclic groups.</p>",
        "id": 265453951,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1639877244
    }
]