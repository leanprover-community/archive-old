[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"459699\">@Joël Riou</span> Thanks for your suggestions! I don't expect that the whole of it, is it?</p>",
        "id": 301772925,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1664604451
    },
    {
        "content": "<p>My main other remark is about the three universal properties that are in the PR:<br>\n1) Lifting of prefunctor from a quiver to a category as functors from the path category<br>\n2) Lifting of prefunctors to get functors from <code>quiver.symmetrify</code><br>\n3) Lifting of prefunctors from a quiver to a groupoid as functors from the free groupoid</p>\n<p>I would think that 3) should be first stated as<br>\n3') Lifting of prefunctors from a quiver to a category (which sends maps to invertible maps) as functors from the free groupoid</p>\n<p>Then 3) would a particular case of 3'). (Thanks to the class inference system, if the assumption is phrased as <code>[∀ (X Y) (f : X ⟶ Y), is_iso (φ.map f)]</code> in 3'), then you do not even need to restate 3).)</p>",
        "id": 301781785,
        "sender_full_name": "Joël Riou",
        "timestamp": 1664611019
    },
    {
        "content": "<p>Ah, that's a good point. Let me try and do that, thanks!</p>",
        "id": 301783527,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1664611984
    },
    {
        "content": "<p>In the meantime, <a href=\"https://github.com/leanprover-community/mathlib/pull/16742\">here</a> is a PR for subgroupoids. I feel like it's patterned closely enough on other files to be OK, but maybe not</p>",
        "id": 301790740,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1664616006
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459699\">Joël Riou</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2316666.20free.20groupoid.20on.20a.20quiver/near/301781785\">said</a>:</p>\n<blockquote>\n<p>My main other remark is about the three universal properties that are in the PR:<br>\n1) Lifting of prefunctor from a quiver to a category as functors from the path category<br>\n2) Lifting of prefunctors to get functors from <code>quiver.symmetrify</code><br>\n3) Lifting of prefunctors from a quiver to a groupoid as functors from the free groupoid</p>\n<p>I would think that 3) should be first stated as<br>\n3') Lifting of prefunctors from a quiver to a category (which sends maps to invertible maps) as functors from the free groupoid</p>\n<p>Then 3) would a particular case of 3'). (Thanks to the class inference system, if the assumption is phrased as <code>[∀ (X Y) (f : X ⟶ Y), is_iso (φ.map f)]</code> in 3'), then you do not even need to restate 3).)</p>\n</blockquote>\n<p>Mmh, the problem is that this actually implies also changing 1), since for now the lift to <code>symmetrify</code> assumes all arrows have \"formal\" inverses, which in turns means I can't use <code>has_reverse</code> at all… </p>\n<p>Sort of a pickle: I wonder if this changes is worth overhauling the whole <code>has_reverse</code> usage. Maybe a more compatible approach would be to reverse your argument and simply prove that if I have a functor mapping arrows to invertible ones, I can restrict to the core of the category… hence no need to change my code, but only to add stuff.<br>\nWhat do you think of that?</p>",
        "id": 301792503,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1664616977
    },
    {
        "content": "<p>Ok, so it is not as immediate as I thought, so that it may certainly be done later, in a separate PR.</p>",
        "id": 301874310,
        "sender_full_name": "Joël Riou",
        "timestamp": 1664665316
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459699\">Joël Riou</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2316666.20free.20groupoid.20on.20a.20quiver/near/301874310\">said</a>:</p>\n<blockquote>\n<p>Ok, so it is not as immediate as I thought, so that it may certainly be done later, in a separate PR.</p>\n</blockquote>\n<p>Alright! Well, then I need to find someone with \"bors\"-rights to review and hopefully accept it then.<br>\nBy the way, I'd like to refactor the <code>quiver</code> part at some point, to get stuff about <code>symmetrify</code> and <code>paths</code> and reversal and reduction of paths in a common file, rather than abusing <code>connected_component</code>, but I think for now it's fine.</p>",
        "id": 301899403,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1664694005
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"461830\">@Rémi Bottinelli</span> Thanks for the PR!<br>\n<span class=\"user-mention\" data-user-id=\"459699\">@Joël Riou</span> Thanks for the reviews!</p>\n<p>I've kicked it on the queue.</p>",
        "id": 302006830,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1664779744
    },
    {
        "content": "<p>(first PR not entirely overhauled by Kyle, I'm overly proud)</p>",
        "id": 302007703,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1664780258
    }
]