[
    {
        "content": "<p>This PR introduces a family of classes saying that the coercion map <code>coe</code> between specified types is a multiplicative/additive/monoid/ring/etc homomorphism. It generalizes the large amount of <code>coe_add</code>/<code>coe_mul</code>/<code>coe_zero</code>/<code>coe_one</code>/etc. lemmas we have currently, so it goes stale quickly. Can I interest anyone in reviewing it? The diff is admittedly large, but hopefully straightforward enough and I've written a comprehensive PR description.</p>",
        "id": 305988757,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1666689905
    },
    {
        "content": "<p>A bikeshed: <code>coe_add_monoid_hom</code> might be better named <code>coe_is_add_monoid_hom</code> to make it clear that it's the <code>Prop</code> typeclass and not the morphism <code>add_monoid_hom.coe</code> itself</p>",
        "id": 305990104,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1666690425
    },
    {
        "content": "<p>Especially since we have things like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/dfinsupp.coe_fn_add_monoid_hom\">docs#dfinsupp.coe_fn_add_monoid_hom</a> which are the morphisms</p>",
        "id": 305990268,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1666690473
    },
    {
        "content": "<p>I'm generally in favor though as long as we remember to circle around and cleanup <code>algebra_map</code> later!</p>",
        "id": 305990484,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1666690563
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2317048.20classes.20for.20coercions.20that.20are.20homomorphisms/near/305990104\">said</a>:</p>\n<blockquote>\n<p>A bikeshed: <code>coe_add_monoid_hom</code> might be better named <code>coe_is_add_monoid_hom</code> to make it clear that it's the <code>Prop</code> typeclass and not the morphism <code>add_monoid_hom.coe</code> itself</p>\n</blockquote>\n<p>Oh that's a good suggestion! I couldn't figure out a good name that didn't involve <code>class</code> somewhere :)</p>",
        "id": 305996033,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1666692588
    },
    {
        "content": "<p><code>_class</code> was going to be my second suggestion</p>",
        "id": 306000859,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1666694741
    },
    {
        "content": "<p>Can I bump this review request again? I had to do some minor fixing again yesterday.</p>",
        "id": 307563735,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1667405936
    },
    {
        "content": "<p>LGTM, but I wouldn't mind if <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> took another look at this.</p>",
        "id": 307608332,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1667419286
    }
]