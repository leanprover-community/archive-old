[
    {
        "content": "<p>Have you used it before? I'm writing a configuration file now. I can show it here for comments</p>",
        "id": 162262596,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554141655
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"nt\">pull_request_rules</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">automatic merge on CI success and review</span>\n    <span class=\"nt\">conditions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">status-success=continuous-integration/travis-ci/pr</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"s\">&quot;#approved-reviews-by&gt;=1&quot;</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"s\">&quot;#review-requested=0&quot;</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"s\">&quot;#changes-requested-reviews-by=0&quot;</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">base=master</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">label=[&#39;ready-to-merge&#39;]</span>\n    <span class=\"nt\">actions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">delete_head_branch</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">merge</span><span class=\"p\">:</span>\n        <span class=\"nt\">method</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">squash</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">remove outdated reviews</span>\n    <span class=\"nt\">conditions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">status-success=continuous-integration/travis-ci/pr</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"s\">&quot;#approved-reviews-by&gt;=2&quot;</span>\n    <span class=\"nt\">actions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">dismiss_reviews</span><span class=\"p\">:</span>\n        <span class=\"nt\">approved</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">True</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"nt\">remove</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[</span><span class=\"s\">&#39;ready-to-merge&#39;</span><span class=\"p p-Indicator\">]</span>\n</pre></div>",
        "id": 162263473,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554142181
    },
    {
        "content": "<p>I'm testing it out on my fork. Can't seem to get it to work. My config file look like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">pull_request_rules</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">automatic merge with strict</span>\n    <span class=\"nt\">conditions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">status-success=continuous-integration/travis-ci/pr</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">status-success=continuous-integration/travis-ci/push</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">base=master</span>\n    <span class=\"nt\">actions</span><span class=\"p\">:</span>\n      <span class=\"nt\">merge</span><span class=\"p\">:</span>\n        <span class=\"nt\">method</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">squash</span>\n        <span class=\"nt\">strict</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n</pre></div>",
        "id": 162263837,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554142406
    },
    {
        "content": "<p>What does <code>strict</code> mean?</p>",
        "id": 162264165,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554142572
    },
    {
        "content": "<p><a href=\"https://doc.mergify.io/strict-workflow.html\" target=\"_blank\" title=\"https://doc.mergify.io/strict-workflow.html\">https://doc.mergify.io/strict-workflow.html</a></p>",
        "id": 162264502,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554142787
    },
    {
        "content": "<p>That's probably best if we automate merges</p>",
        "id": 162264794,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554142907
    },
    {
        "content": "<p>I set those rules, but it still just merged straight away before Travis passed.</p>",
        "id": 162264921,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554142949
    },
    {
        "content": "<p>Both the PR build and the push build?</p>",
        "id": 162265295,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554143154
    },
    {
        "content": "<p>Exactly those rules.</p>",
        "id": 162265466,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554143239
    },
    {
        "content": "<p>I mean, did neither build terminate before the merge?</p>",
        "id": 162265508,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554143268
    },
    {
        "content": "<p>Neither build terminated</p>",
        "id": 162265657,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554143336
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/3jxc9guBBmUP7BVMvcZyYgnm/Screenshot-2019-04-01-at-19.28.42.png\" target=\"_blank\" title=\"Screenshot-2019-04-01-at-19.28.42.png\">Screenshot-2019-04-01-at-19.28.42.png</a> Only one box is ticked, but it says success.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/3jxc9guBBmUP7BVMvcZyYgnm/Screenshot-2019-04-01-at-19.28.42.png\" target=\"_blank\" title=\"Screenshot-2019-04-01-at-19.28.42.png\"><img src=\"/user_uploads/3121/3jxc9guBBmUP7BVMvcZyYgnm/Screenshot-2019-04-01-at-19.28.42.png\"></a></div>",
        "id": 162265708,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554143363
    },
    {
        "content": "<p>Is the list of condition a disjunction or a conjunction?</p>",
        "id": 162265830,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554143413
    },
    {
        "content": "<p>Try removing the last condition</p>",
        "id": 162265841,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554143420
    },
    {
        "content": "<p>Now it doesn't tell me anything.</p>",
        "id": 162266334,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554143662
    },
    {
        "content": "<p>That's frustrating</p>",
        "id": 162266534,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554143794
    },
    {
        "content": "<p>Can I let you look into it?</p>",
        "id": 162266544,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554143807
    },
    {
        "content": "<p>But travis has also stopped.</p>",
        "id": 162266547,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554143811
    },
    {
        "content": "<p>I'll have a go at sorting it out.</p>",
        "id": 162266603,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554143855
    },
    {
        "content": "<p>Thanks! Let me know if you need something</p>",
        "id": 162266743,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554143929
    },
    {
        "content": "<p>If this works, it seems like a really good idea!</p>",
        "id": 162266910,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554144029
    },
    {
        "content": "<p>Yes! That could make things simpler. We could merge a branch by clicking \"update branch\" and adding the label \"ready-to-merge\". We have to remember to get back to them if they fail to merge though and we can't do more than one PR at a time with this approach</p>",
        "id": 162267238,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554144255
    },
    {
        "content": "<p>What does <code>status-success=continuous-integration/travis-ci/push</code> mean if <code>status-success</code> is an array of strings? Will it fail if the array contains more than just that one string?</p>",
        "id": 162267455,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554144380
    },
    {
        "content": "<p>I know what's going on. \"merge\" means merge straight away with no further user input. We definitely don't want that. I never clicked \"merge\" on this PR <a href=\"https://github.com/ChrisHughes24/mathlib/pull/16\" target=\"_blank\" title=\"https://github.com/ChrisHughes24/mathlib/pull/16\">https://github.com/ChrisHughes24/mathlib/pull/16</a></p>\n<p>I don't think you can set it up to have a \"merge when ready\" button. You could do some hack, where you add a label to instigate a merge or something like that.</p>",
        "id": 162268364,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554144992
    },
    {
        "content": "<p>I would put that in condition</p>",
        "id": 162268625,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554145200
    },
    {
        "content": "<p>Maybe that was obvious to you, looking at your script.</p>",
        "id": 162268661,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554145204
    },
    {
        "content": "<p>So I think your script is about right, but just with <code>strict</code> added.</p>",
        "id": 162268721,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554145232
    },
    {
        "content": "<p>I setup some test PRs. I set up one of them to break after I changed mathlib. <a href=\"https://github.com/ChrisHughes24/mathlib/pulls\" target=\"_blank\" title=\"https://github.com/ChrisHughes24/mathlib/pulls\">https://github.com/ChrisHughes24/mathlib/pulls</a> Hopefully <a href=\"https://github.com/leanprover-community/mathlib/issues/20\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/20\">#20</a> will merge, but <a href=\"https://github.com/leanprover-community/mathlib/issues/21\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/21\">#21</a> and <a href=\"https://github.com/leanprover-community/mathlib/issues/22\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/22\">#22</a> won't</p>",
        "id": 162271065,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554146910
    },
    {
        "content": "<p>Cool! Let's see what happens.</p>",
        "id": 162271223,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554147040
    },
    {
        "content": "<p>Hmm... it seems that <a href=\"https://github.com/ChrisHughes24/mathlib/pull/20\" target=\"_blank\" title=\"https://github.com/ChrisHughes24/mathlib/pull/20\">https://github.com/ChrisHughes24/mathlib/pull/20</a> is ready to merged. But the merge didn't automatically happen</p>",
        "id": 162273689,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554149017
    },
    {
        "content": "<p>It's because Travis failed because it's failing on master.</p>",
        "id": 162273710,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554149037
    },
    {
        "content": "<p>Hmm... ok. Bit weird that it says all the tests passed though. Too bad.</p>",
        "id": 162273791,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554149082
    },
    {
        "content": "<p>Can we see the Travis logs for the failing master builds? I can't find links from Githubs commit log</p>",
        "id": 162273945,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554149173
    },
    {
        "content": "<p>It's weird that the links aren't on the PRs any more.</p>",
        "id": 162273981,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554149214
    },
    {
        "content": "<p>This is the problematic test run: <a href=\"https://travis-ci.org/leanprover-community/mathlib/jobs/513991382\" target=\"_blank\" title=\"https://travis-ci.org/leanprover-community/mathlib/jobs/513991382\">https://travis-ci.org/leanprover-community/mathlib/jobs/513991382</a></p>",
        "id": 162274577,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554149676
    },
    {
        "content": "<p>The first two stages went fine. Then the \"Test\" stage timed out because of no output in 10 minutes.</p>",
        "id": 162274603,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554149699
    },
    {
        "content": "<p>Travis is failing at the leanchecker stage since the pi PR. I noticed this earlier but haven't had time to investigate.</p>",
        "id": 162274650,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1554149738
    },
    {
        "content": "<p>We have a trick to prevent this kind of issue. Let me take a look</p>",
        "id": 162274741,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554149798
    },
    {
        "content": "<p>If only there were some tool that could automatically and transparently handle these merge issues for us...</p>",
        "id": 162274798,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554149856
    },
    {
        "content": "<p>A tool that figures out what part of a PR is too hard for leanchecker, and fixes it?</p>",
        "id": 162274916,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1554149922
    },
    {
        "content": "<p>I'd like that tool too.</p>",
        "id": 162274925,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1554149933
    },
    {
        "content": "<p>Well that would be awesome. But I was thinking of a tool that merely checks whether 2 or 3 maintainers approve of a PR, and then waits till the build passes, and then merges.</p>",
        "id": 162275156,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554150064
    },
    {
        "content": "<p>That's what this thread (mergify) is about</p>",
        "id": 162275208,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554150116
    },
    {
        "content": "<p>I wonder if there's a way of automating the update of a PR when no branch is building and that it's marked as <code>ready-to-merge</code></p>",
        "id": 162277617,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554151648
    },
    {
        "content": "<p>Do you want to test this on <a href=\"https://github.com/leanprover-community/mathlib/issues/854\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/854\">#854</a> by marking it <code>ready-to-merge</code>? ;-)</p>",
        "id": 162281352,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1554154248
    },
    {
        "content": "<blockquote>\n<p>We have a trick to prevent this kind of issue. Let me take a look</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> what is this trick? I've several times had trouble with the test stage timing out after 10 minutes, and never known how to diagnose the problem.</p>",
        "id": 162283647,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554156351
    },
    {
        "content": "<p>here is the trick: <a href=\"https://github.com/leanprover-community/mathlib/compare/2f088fc1cb98...5995d460bc69\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/compare/2f088fc1cb98...5995d460bc69\">https://github.com/leanprover-community/mathlib/compare/2f088fc1cb98...5995d460bc69</a></p>",
        "id": 162286371,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554158887
    },
    {
        "content": "<p>What is the status here? <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> Did you rerun your experiment now that master is back on track?</p>",
        "id": 162312693,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554192890
    },
    {
        "content": "<p>Yes. It all seems to be working as expected.</p>",
        "id": 162312730,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554192920
    },
    {
        "content": "<p>That's great news.</p>",
        "id": 162312793,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554192965
    },
    {
        "content": "<p>Can maintainers override the mergify workflow? Or do they always have to abide, once we implement it?</p>",
        "id": 162323351,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554202975
    },
    {
        "content": "<p>I think Simon's setup is opt-in. Giving something the <code>ready-to-merge</code> tag is explicitly approving the mergify workflow.</p>",
        "id": 162326514,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1554205888
    },
    {
        "content": "<p>Right. So then I don't really understand <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span>'s concern over here: <a href=\"https://github.com/leanprover-community/mathlib/pull/871#discussion_r271218389\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/871#discussion_r271218389\">https://github.com/leanprover-community/mathlib/pull/871#discussion_r271218389</a></p>",
        "id": 162326618,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554205966
    },
    {
        "content": "<p>It's set up to only auto-merge if there's at least one approving review. For very easy PRs, Chris wants to be able to say \"auto-merge this once Travis finishes successfully,\" without also having to post an empty approving review.</p>",
        "id": 162326816,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1554206082
    },
    {
        "content": "<p>Aah, got it</p>",
        "id": 162326874,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554206129
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> I've fixed the errors with the mergify config. I don't think I diverted from your intentions.</p>",
        "id": 162331208,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554209780
    },
    {
        "content": "<p>nice! Thanks!</p>",
        "id": 162332078,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554210342
    },
    {
        "content": "<p>I'm happy with the current state of the PR. Any objections to me merging?</p>",
        "id": 162332173,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554210408
    },
    {
        "content": "<p>How does the second condition work?</p>",
        "id": 162332226,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554210470
    },
    {
        "content": "<p>Why do you need the review conditions. We want it to remove the label whenever there's a commit, regardless of the reviews.</p>",
        "id": 162332322,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554210531
    },
    {
        "content": "<p>You're right, I'll change it to:</p>\n<div class=\"codehilite\"><pre><span></span>      - base=master\n</pre></div>",
        "id": 162332590,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554210733
    },
    {
        "content": "<p>And it only triggers after a commit? This isn't what I would expect.</p>",
        "id": 162332625,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554210769
    },
    {
        "content": "<p>I also don't understand the 2nd rule</p>",
        "id": 162332742,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554210845
    },
    {
        "content": "<p>Yeah, it's confusing to me too. Here is where I got it from: <a href=\"https://doc.mergify.io/examples.html#removing-stale-reviews\" target=\"_blank\" title=\"https://doc.mergify.io/examples.html#removing-stale-reviews\">https://doc.mergify.io/examples.html#removing-stale-reviews</a></p>",
        "id": 162332818,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554210923
    },
    {
        "content": "<p>Why is <code>strict_method</code> back to <code>squash</code>?</p>",
        "id": 162333158,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554211176
    },
    {
        "content": "<p>That's not a valid value</p>",
        "id": 162333160,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554211181
    },
    {
        "content": "<p>If it's set to merge, I think all the commits to the PR branch will be in the history of the branch.</p>",
        "id": 162333283,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554211269
    },
    {
        "content": "<p>The question you need to answer is: If <code>pr-branch</code> is outdated, and I need to update it, I will use <code>strict_method</code>to update <code>pr-branch</code> to current <code>master</code>.<br>\nPossible values are <code>rebase</code> and <code>merge</code>.</p>",
        "id": 162333296,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554211278
    },
    {
        "content": "<p>I didn't realise squash wasn't a valid value.</p>",
        "id": 162333300,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554211281
    },
    {
        "content": "<p>No, it will still use <code>squash</code>, when it is performing the merge from <code>pr-branch</code> into <code>master</code>.</p>",
        "id": 162333306,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554211292
    },
    {
        "content": "<p>I see.</p>",
        "id": 162333322,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554211306
    },
    {
        "content": "<p>Then merge is correct.</p>",
        "id": 162333334,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554211317
    },
    {
        "content": "<p>I misunderstood.</p>",
        "id": 162333388,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554211328
    },
    {
        "content": "<p>No worries. Btw, <code>merge</code> is the default value. So we can remove that line, if we want.</p>",
        "id": 162333499,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554211431
    },
    {
        "content": "<p>Okay, let's do that.</p>",
        "id": 162333570,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554211472
    },
    {
        "content": "<p>I just tested the second part on my fork. It does indeed do the right thing.</p>",
        "id": 162333590,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554211491
    },
    {
        "content": "<p>Mergify is now happy: it says that there are no syntax errors in the config file</p>",
        "id": 162333596,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554211496
    },
    {
        "content": "<p>Hmm... the README looks bad: <a href=\"https://github.com/leanprover-community/mathlib/tree/enable-mergify#mathlib\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/tree/enable-mergify#mathlib\">https://github.com/leanprover-community/mathlib/tree/enable-mergify#mathlib</a></p>",
        "id": 162333730,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554211596
    },
    {
        "content": "<p>There is a problem<br>\n<a href=\"https://github.com/ChrisHughes24/mathlib/pull/35\" target=\"_blank\" title=\"https://github.com/ChrisHughes24/mathlib/pull/35\">https://github.com/ChrisHughes24/mathlib/pull/35</a><br>\nI can't add the <code>ready-to-merge</code> label to this, without mergify immediately removing it.</p>",
        "id": 162333857,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554211705
    },
    {
        "content": "<p>In fact I don't think it was behaving as expected at all.</p>",
        "id": 162333918,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554211771
    },
    {
        "content": "<p>The badge in the README is now fixed</p>",
        "id": 162334005,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554211807
    },
    {
        "content": "<p>To me the 2nd rule reads like<br>\n<code>if (empty condition) then (remove reviews and remove label \"ready-to-merge\")</code></p>\n<p><em>The condition isn't really empty. But it's only testing if we want to merge something into <code>master</code></em></p>",
        "id": 162335334,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554212845
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> Can you test whether it also dismisses reviews as soon as you make them?</p>",
        "id": 162335746,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554213119
    },
    {
        "content": "<p>I can't make an approving review on my own PR.</p>",
        "id": 162335869,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554213181
    },
    {
        "content": "<p>Could you make a PR to my fork, and I'll make an approving review.</p>",
        "id": 162335903,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554213204
    },
    {
        "content": "<p>I think maybe it only cares about reviews by admin.</p>",
        "id": 162335921,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554213217
    },
    {
        "content": "<p>Done: <a href=\"https://github.com/ChrisHughes24/mathlib/pull/37\" target=\"_blank\" title=\"https://github.com/ChrisHughes24/mathlib/pull/37\">https://github.com/ChrisHughes24/mathlib/pull/37</a></p>",
        "id": 162336214,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554213404
    },
    {
        "content": "<p>It didn't remove it.</p>",
        "id": 162336364,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554213483
    },
    {
        "content": "<p>Now what happens if it's edited</p>",
        "id": 162336407,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554213499
    },
    {
        "content": "<p>If what is edited?</p>",
        "id": 162337132,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554214038
    },
    {
        "content": "<p>I added the tag ready-to-merge, so the event triggered, but it didn't remove the review. I can't edit the PR, because it's from Johan's fork.</p>",
        "id": 162337256,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554214119
    },
    {
        "content": "<p>If there's a commit I meant.</p>",
        "id": 162337259,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554214130
    },
    {
        "content": "<p>Ok, I'll make another commit.</p>",
        "id": 162337325,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554214182
    },
    {
        "content": "<p>Done</p>",
        "id": 162337415,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554214235
    },
    {
        "content": "<p>Ok, it removed your review</p>",
        "id": 162337496,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554214284
    },
    {
        "content": "<p>So it's going to have to be slightly less nice.</p>",
        "id": 162337525,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554214311
    },
    {
        "content": "<p>We need an approving review, and a tag?</p>",
        "id": 162337585,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554214330
    },
    {
        "content": "<p>This means we can't use the \"ready-to-merge\" label.</p>",
        "id": 162337594,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554214336
    },
    {
        "content": "<p>So I suggest we ask for an approving review of a maintainer</p>",
        "id": 162337611,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554214349
    },
    {
        "content": "<p>I suggest both.</p>",
        "id": 162337643,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554214369
    },
    {
        "content": "<p>But the second condition has to only remove approving review and not labels.</p>",
        "id": 162337680,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554214394
    },
    {
        "content": "<p>And maybe there is a Github team of mathlib maintainers, and you can match on them in the mergify config with <code>@something</code></p>",
        "id": 162337688,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554214398
    },
    {
        "content": "<p>mergify only cares about reviews from people with <code>write</code> permission on the repository.</p>",
        "id": 162337859,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554214497
    },
    {
        "content": "<p>Which I guess is a lot of people if it's talking about <code>leanprover-community</code> and not just <code>leanprover-community/master</code></p>",
        "id": 162337909,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554214525
    },
    {
        "content": "<p>Do you mean <code>leanprover-community/mathlib</code> or <code>leanprover-community/mathlib/master</code>?</p>",
        "id": 162338072,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554214596
    },
    {
        "content": "<p>Yes.</p>",
        "id": 162338511,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554214829
    },
    {
        "content": "<p>I don't know which of those two mergify means</p>",
        "id": 162338543,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554214848
    },
    {
        "content": "<p>But it says repository, so I guess <code>leanprover-community/mathlib</code></p>",
        "id": 162338587,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554214871
    },
    {
        "content": "<p>You can do a regex match on the people who left a review</p>",
        "id": 162338964,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554215069
    },
    {
        "content": "<p>It does mean that if the list of maintainers changes, you also need to update this config file.</p>",
        "id": 162339008,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554215088
    },
    {
        "content": "<p>The attribute is <code>approved-review-by</code> and it takes an array of strings (the authors) as an argument. So we can use that.</p>",
        "id": 162339179,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554215183
    },
    {
        "content": "<p>What is the suggested workflow to get mergify to merge once the build succeeds?</p>",
        "id": 162339726,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554215499
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span>  I don't understand your question</p>",
        "id": 162339819,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554215541
    },
    {
        "content": "<p>One maintainer gives an approving review, and someone gives a <code>ready-to-merge</code> label.</p>",
        "id": 162339891,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554215581
    },
    {
        "content": "<p>But you were saying that the label <code>ready-to-merge</code> couldn't be used as intended</p>",
        "id": 162339966,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554215625
    },
    {
        "content": "<p>Mergify won't remove it. (Or it will always remove it.)</p>",
        "id": 162340082,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554215674
    },
    {
        "content": "<p>But <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> thinks it is still a useful flag. And maybe I agree.</p>",
        "id": 162340114,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554215692
    },
    {
        "content": "<p>I think the maintainers need to agree on what they mean with an \"Approving review\"</p>",
        "id": 162340154,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554215716
    },
    {
        "content": "<p>What does \"always remove it\" mean?</p>",
        "id": 162340155,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554215717
    },
    {
        "content": "<p>We can't use the second condition to remove the label.</p>",
        "id": 162340198,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554215736
    },
    {
        "content": "<p>If you try to build a rule that removes the tag after new commits, the rule will remove the label as soon as it is added.</p>",
        "id": 162340218,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554215747
    },
    {
        "content": "<p>Because it will be removed as soon as it's added, regardless of whether there are any commits.</p>",
        "id": 162340243,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554215757
    },
    {
        "content": "<p>Scenario: Maintainer gives approving review, thinking \"looks good, but not exactly <code>ready-to-merge</code>\". Doofus comes by and gives tag <code>ready-to-merge</code>. → Mergify goes ahead and merges.</p>",
        "id": 162340369,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554215806
    },
    {
        "content": "<p>But only the maintainers can give a label so we should be ok as long as we don't choose doofuses as maintainers</p>",
        "id": 162340469,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554215881
    },
    {
        "content": "<p>I don't think that scenario is any different from a doofus merging random PRs. Only click <code>ready-to-merge</code>, if it's ready to merge.</p>",
        "id": 162340562,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554215923
    },
    {
        "content": "<p>I second that comment</p>",
        "id": 162340917,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554216099
    },
    {
        "content": "<p>So we shouldn't remove the label automatically. Is this right?</p>",
        "id": 162341595,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554216438
    },
    {
        "content": "<p>Yes.</p>",
        "id": 162341608,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554216445
    },
    {
        "content": "<p>Hmmm, I thought I saw people assigning WIP to their PRs.</p>",
        "id": 162341758,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554216524
    },
    {
        "content": "<p>Maybe that's a special label?</p>",
        "id": 162341779,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554216536
    },
    {
        "content": "<p>Can you assign a label?</p>",
        "id": 162341853,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554216577
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/854\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/854\">#854</a></p>",
        "id": 162342073,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554216680
    },
    {
        "content": "<p>Didn't realise that. I remember not being able to do it when we were at <code>leanprover</code>, but I guess you have write access to community.</p>",
        "id": 162342257,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554216784
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> So how about \"Only click <em>Approved review</em> if it's ready to merge\"?</p>",
        "id": 162342274,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554216790
    },
    {
        "content": "<p>If we have the label mechanism, do we also need the approved review mechanism. Maybe they should be two separate options: either you tag it as ready to merge or you approve a review</p>",
        "id": 162342657,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554217003
    },
    {
        "content": "<p>The label mechanism is fragile</p>",
        "id": 162342678,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554217018
    },
    {
        "content": "<p>Because an \"old\" label is not dismissed when someone pushes new commits</p>",
        "id": 162342715,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554217043
    },
    {
        "content": "<p>You don't need to be a maintainer to give a label.</p>",
        "id": 162342716,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554217043
    },
    {
        "content": "<p>Also <span aria-label=\"point up\" class=\"emoji emoji-1f446\" role=\"img\" title=\"point up\">:point_up:</span></p>",
        "id": 162342772,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554217077
    },
    {
        "content": "<p>Are you sure? Johan, have you tried adding a label?</p>",
        "id": 162343580,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554217477
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/issues/854\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/854\">#854</a></p>\n</blockquote>",
        "id": 162343849,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554217630
    },
    {
        "content": "<p>blast</p>",
        "id": 162344289,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554217871
    },
    {
        "content": "<p>Ok a review too then</p>",
        "id": 162344332,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554217898
    },
    {
        "content": "<p>But the new rule has to be \"Only give an approving review if it's ready to merge\"</p>",
        "id": 162344464,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554217968
    },
    {
        "content": "<p>Hmm... how about we make the rule \"If it is approved by the person that got assigned, then merge\"</p>",
        "id": 162344466,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554217972
    },
    {
        "content": "<p>It might mean making 8 duplicate rules in the config file</p>",
        "id": 162344498,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554217990
    },
    {
        "content": "<p>One for each maintainer</p>",
        "id": 162344506,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554217996
    },
    {
        "content": "<p>But that is not very hard to maintain. And it is closer to current mathlib policy.</p>",
        "id": 162344526,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218015
    },
    {
        "content": "<p>I just assigned <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> to <a href=\"https://github.com/leanprover-community/mathlib/issues/854\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/854\">#854</a></p>",
        "id": 162344979,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218302
    },
    {
        "content": "<p>I don't think that affects the issue at hand. But apparently this is possible</p>",
        "id": 162345008,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218334
    },
    {
        "content": "<p>blast! We have much less security than I thought on repo</p>",
        "id": 162345072,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554218387
    },
    {
        "content": "<p>/me is a doofus <span aria-label=\"warning\" class=\"emoji emoji-26a0\" role=\"img\" title=\"warning\">:warning:</span></p>",
        "id": 162345135,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218406
    },
    {
        "content": "<p>I think you have a good idea. Let's go with that</p>",
        "id": 162345140,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554218410
    },
    {
        "content": "<p>Haha! No duh! :P</p>",
        "id": 162345156,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554218422
    },
    {
        "content": "<p>Also, it means that we shouldn't try to hack a <code>has_review_by = assigned</code> because that is unsecure.</p>",
        "id": 162345193,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218454
    },
    {
        "content": "<p>Explicitly test against a list of maintainers.</p>",
        "id": 162345238,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218473
    },
    {
        "content": "<p>I'm on a flaky connection, so I can't currently edit the file.</p>",
        "id": 162345279,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218489
    },
    {
        "content": "<p>Is the second rule of any use?</p>",
        "id": 162345515,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554218644
    },
    {
        "content": "<p>It would be nice if the presence of a <code>mergify.yml</code> created a \"Pass this to mergify\" button next to the regular merge button...</p>",
        "id": 162345516,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218644
    },
    {
        "content": "<p>But I'm not going to PR to mergify (-;</p>",
        "id": 162345529,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218654
    },
    {
        "content": "<p>The current second rule doesn't have too much use anymore.</p>",
        "id": 162345548,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218678
    },
    {
        "content": "<p>I don't know what happens if someone pushes new commits in the 60 minutes between Mario's approval and Mergifies merging.</p>",
        "id": 162345583,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218717
    },
    {
        "content": "<p>maybe it's good to keep the rule in place</p>",
        "id": 162345614,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218749
    },
    {
        "content": "<p>It's going to reject the merge and we're going to need to update it again</p>",
        "id": 162345673,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554218772
    },
    {
        "content": "<p>independent of the 2nd rule?</p>",
        "id": 162345717,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218816
    },
    {
        "content": "<p>With 50 open PRs at the same time, a few people might end up upgrading at the same time which will create a race condition and require one of them to start over. It might be better if we don't require a strict workflow</p>",
        "id": 162345767,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554218855
    },
    {
        "content": "<p>Yes</p>",
        "id": 162345771,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554218861
    },
    {
        "content": "<p>I think mergify maintains a queue</p>",
        "id": 162345845,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218888
    },
    {
        "content": "<p>We still need the second rule.</p>",
        "id": 162345861,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554218903
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> I don't think mergify can resolve that race condition with strict merge</p>",
        "id": 162345886,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554218942
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> why?</p>",
        "id": 162345896,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554218947
    },
    {
        "content": "<p>I'm hopping on a bike. See you <span aria-label=\"bicycle\" class=\"emoji emoji-1f6b2\" role=\"img\" title=\"bicycle\">:bicycle:</span></p>",
        "id": 162345908,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554218957
    },
    {
        "content": "<p>In case there's a commit after an approving review.</p>",
        "id": 162345916,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554218966
    },
    {
        "content": "<p>The <code>strict:smart</code> means that there won't be a race, there'll just be a queue instead.</p>",
        "id": 162346006,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554219018
    },
    {
        "content": "<p>How does that work?</p>",
        "id": 162346024,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554219036
    },
    {
        "content": "<p>I just looked it up</p>",
        "id": 162346078,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554219091
    },
    {
        "content": "<p>That sounds good. Let's do that</p>",
        "id": 162346082,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554219099
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> Can you try this rule and see if it takes 7 reviews?</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">automatic merge on CI success and review</span>\n    <span class=\"nt\">conditions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">status-success=continuous-integration/travis-ci/pr</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"s\">&quot;#changes-requested-reviews-by=0&quot;</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">base=master</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">label=ready-to-merge</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">approved-reviews-by=[&#39;avigad&#39;,&#39;rwbarton&#39;,&#39;digama0&#39;,&#39;cipher1024&#39;,&#39;ChrisHughes24&#39;,&#39;robertylewis&#39;,&#39;patrickmassot&#39;]</span>\n    <span class=\"nt\">actions</span><span class=\"p\">:</span>\n      <span class=\"nt\">delete_head_branch</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">{}</span>\n      <span class=\"nt\">merge</span><span class=\"p\">:</span>\n        <span class=\"nt\">method</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">squash</span>\n        <span class=\"nt\">strict</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">smart</span>\n        <span class=\"nt\">strict_method</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">merge</span>\n</pre></div>",
        "id": 162346523,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554219439
    },
    {
        "content": "<p>Also, you're saying that we need the second rule to remove stale reviews but why does it not work to remove <code>ready-to-merge</code>?</p>",
        "id": 162346638,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554219513
    },
    {
        "content": "<p>That's an invalid configuration. Not sure why</p>",
        "id": 162347980,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554220359
    },
    {
        "content": "<p>what if you only write <code>- approved-reviews-by='avigad'</code>? or `- approved-reviews-by=avigad?</p>",
        "id": 162350332,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554222038
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> For some (buggy) reason Mergify will dismiss-old-reviews only when there is an actual new commit, but it will <code>label: remove [foobar]</code> whenever something happens (for example, when \"adding <code>foobar</code>\" happens).</p>",
        "id": 162350629,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554222263
    },
    {
        "content": "<p>Ok, I filed an issue: <a href=\"https://github.com/Mergifyio/mergify-engine/issues/360\" target=\"_blank\" title=\"https://github.com/Mergifyio/mergify-engine/issues/360\">https://github.com/Mergifyio/mergify-engine/issues/360</a></p>",
        "id": 162351312,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554222789
    },
    {
        "content": "<p><del>maybe we should add <code>- label!=ready-to-merge</code> in the conditions</del></p>",
        "id": 162351451,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554222862
    },
    {
        "content": "<p>no, that's dumb</p>",
        "id": 162351482,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554222886
    },
    {
        "content": "<p>I upvoted your issue</p>",
        "id": 162351675,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554223016
    },
    {
        "content": "<p>In the mean time, are we ready to merge the <code>mergify</code> setup?</p>",
        "id": 162359405,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554228494
    },
    {
        "content": "<p>Is Mergify ready to merge the setup?</p>",
        "id": 162359446,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554228530
    },
    {
        "content": "<p>Huh?</p>",
        "id": 162359509,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554228566
    },
    {
        "content": "<p>/joke</p>",
        "id": 162359524,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554228576
    },
    {
        "content": "<p>Not as is. It's not doofus proof currently.</p>",
        "id": 162359526,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554228577
    },
    {
        "content": "<p>You got me</p>",
        "id": 162359548,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554228594
    },
    {
        "content": "<p>/me is a doofus <span aria-label=\"warning\" class=\"emoji emoji-26a0\" role=\"img\" title=\"warning\">:warning:</span></p>",
        "id": 162359549,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554228595
    },
    {
        "content": "<p>And the configuration Simon posted is invalid.</p>",
        "id": 162359610,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554228606
    },
    {
        "content": "<p>What is missing to make it doofus proof?</p>",
        "id": 162359616,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554228613
    },
    {
        "content": "<p>Oh, that</p>",
        "id": 162359621,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554228616
    },
    {
        "content": "<p>ok</p>",
        "id": 162359622,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554228617
    },
    {
        "content": "<p>I'll happily break mathlib if you give me the chance</p>",
        "id": 162359623,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554228618
    },
    {
        "content": "<p>I think we want 1 rule for every maintainer</p>",
        "id": 162359645,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554228637
    },
    {
        "content": "<p>We don't want the maintainer of foobarology to approve of a PR in xyzzygies and suddenly the PR is merged by Mergify.</p>",
        "id": 162359725,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554228698
    },
    {
        "content": "<p>This is invalid for some reason</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">pull_request_rules</span><span class=\"p\">:</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">automatic merge on CI success and review</span>\n    <span class=\"l l-Scalar l-Scalar-Plain\">conditions</span><span class=\"p p-Indicator\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">status-success=continuous-integration/travis-ci/pr</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"s\">&quot;#changes-requested-reviews-by=0&quot;</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">base=master</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">label=ready-to-merge</span>\n      <span class=\"c1\">#- approved-reviews-by=avigad</span>\n  <span class=\" -Error\">  </span><span class=\"nt\">actions</span><span class=\"p\">:</span>\n      <span class=\"nt\">delete_head_branch</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">{}</span>\n      <span class=\"nt\">merge</span><span class=\"p\">:</span>\n        <span class=\"nt\">method</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">squash</span>\n        <span class=\"nt\">strict</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">smart</span>\n        <span class=\"nt\">strict_method</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">merge</span>\n</pre></div>",
        "id": 162359936,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554228844
    },
    {
        "content": "<p>What is the error message?</p>",
        "id": 162360029,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554228910
    },
    {
        "content": "<p>The current version in the PR is approved of by Mergify</p>",
        "id": 162360045,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554228925
    },
    {
        "content": "<p>Mergify configuration is invalid: position (3:15)</p>",
        "id": 162360232,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554229042
    },
    {
        "content": "<p>I have no clue what is wrong. But the syntax highligher also isn't highlighting the 3rd line</p>",
        "id": 162363427,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554231234
    },
    {
        "content": "<p>maybe an indentation issue? is this yaml syntax?</p>",
        "id": 162363545,
        "sender_full_name": "Reid Barton",
        "timestamp": 1554231298
    },
    {
        "content": "<p>This works and its indistinguishable</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">pull_request_rules</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">automatic merge when CI passes</span>\n    <span class=\"nt\">conditions</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">status-success=continuous-integration/travis-ci/pr</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"s\">&quot;#changes-requested-reviews-by=0&quot;</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">base=master</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">label=ready-to-merge</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">approved-reviews-by=[&#39;avigad&#39;,&#39;rwbarton&#39;,&#39;digama0&#39;,&#39;cipher1024&#39;,&#39;ChrisHughes24&#39;,&#39;robertylewis&#39;,&#39;patrickmassot&#39;]</span>\n    <span class=\"nt\">actions</span><span class=\"p\">:</span>\n      <span class=\"nt\">merge</span><span class=\"p\">:</span>\n        <span class=\"nt\">method</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">squash</span>\n        <span class=\"nt\">strict</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">smart</span>\n        <span class=\"nt\">strict_method</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">merge</span>\n</pre></div>",
        "id": 162363709,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554231382
    },
    {
        "content": "<p>The difference is on the 2nd line</p>",
        "id": 162363895,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554231489
    },
    {
        "content": "<p>You indented the <code>- name</code></p>",
        "id": 162363909,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554231497
    },
    {
        "content": "<p>Good!</p>",
        "id": 162364286,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554231768
    },
    {
        "content": "<p>Now, do we need 7 identical rules or is it ok to enumerate the maintainers?</p>",
        "id": 162364316,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554231795
    },
    {
        "content": "<p>I think we need 7 rules</p>",
        "id": 162364337,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554231813
    },
    {
        "content": "<p>But that's really up to the maintainers...</p>",
        "id": 162364404,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554231846
    },
    {
        "content": "<p>Do you regard the maintainer of foobargles a doofus when it comes to xyzzygies?</p>",
        "id": 162364424,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554231873
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> Approve of this to test.</p>",
        "id": 162364496,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554231928
    },
    {
        "content": "<p><a href=\"https://github.com/ChrisHughes24/mathlib/pull/47\" target=\"_blank\" title=\"https://github.com/ChrisHughes24/mathlib/pull/47\">https://github.com/ChrisHughes24/mathlib/pull/47</a></p>",
        "id": 162364503,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554231936
    },
    {
        "content": "<p>Do I make a review and approve?</p>",
        "id": 162364668,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554232080
    },
    {
        "content": "<p>I think you need to invite me to review</p>",
        "id": 162364723,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554232103
    },
    {
        "content": "<p>Are foobargles and xyzzygies two of your projects Johan?</p>",
        "id": 162364743,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554232123
    },
    {
        "content": "<p>I think you can just click the \"Changed files\" tab</p>",
        "id": 162364745,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232127
    },
    {
        "content": "<p>And then \"Review changes\" -&gt; \"Approve\"</p>",
        "id": 162364755,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232138
    },
    {
        "content": "<p>Foobargles and xyzzygies are both fundamental objects in scitamehtam</p>",
        "id": 162364875,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232229
    },
    {
        "content": "<p><a href=\"https://github.com/Mergifyio/mergify-engine/issues/360#issuecomment-479148498\" target=\"_blank\" title=\"https://github.com/Mergifyio/mergify-engine/issues/360#issuecomment-479148498\">https://github.com/Mergifyio/mergify-engine/issues/360#issuecomment-479148498</a></p>",
        "id": 162364939,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554232290
    },
    {
        "content": "<p>obviously!</p>",
        "id": 162364946,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554232294
    },
    {
        "content": "<p>I just wanted to know if you knew it</p>",
        "id": 162364952,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554232302
    },
    {
        "content": "<p><code>obviously</code> <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 162365060,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232375
    },
    {
        "content": "<p>Looks like your review didn't trigger it <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span></p>",
        "id": 162365101,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554232415
    },
    {
        "content": "<p>Would <code>&lt;=</code> instead of <code>=</code> work?</p>",
        "id": 162365126,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554232442
    },
    {
        "content": "<p>I don't think so...</p>",
        "id": 162365217,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232488
    },
    {
        "content": "<p>You could write a regex though</p>",
        "id": 162365225,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232496
    },
    {
        "content": "<p>Something like <code> ~= nameA|nameB|nameC</code></p>",
        "id": 162365253,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232527
    },
    {
        "content": "<p>Modulo quotes etc</p>",
        "id": 162365266,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232548
    },
    {
        "content": "<p>In fact, I think you don't need any quotes</p>",
        "id": 162365374,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232609
    },
    {
        "content": "<p>uh!</p>",
        "id": 162365442,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554232670
    },
    {
        "content": "<p>Nice</p>",
        "id": 162365443,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554232672
    },
    {
        "content": "<p>I haven't really been following what's going on here, but I think there's no need (at least currently) to formally enforce a policy of which maintainers can approve what kind of PRs</p>",
        "id": 162365532,
        "sender_full_name": "Reid Barton",
        "timestamp": 1554232735
    },
    {
        "content": "<p>I agree <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> and I think the idea hasn't been considered seriously</p>",
        "id": 162365588,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554232788
    },
    {
        "content": "<p>There is no such policy.</p>",
        "id": 162365589,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232788
    },
    {
        "content": "<p>I am thinking that Mergify PRs that have been approved by the maintainer assigned to the PR.</p>",
        "id": 162365666,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232821
    },
    {
        "content": "<p>Everyone can assign everyone to every PR</p>",
        "id": 162365675,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232830
    },
    {
        "content": "<blockquote>\n<p>We don't want the maintainer of foobarology to approve of a PR in xyzzygies and suddenly the PR is merged by Mergify.</p>\n</blockquote>\n<p>Then I don't understand what this is about...?</p>",
        "id": 162365679,
        "sender_full_name": "Reid Barton",
        "timestamp": 1554232833
    },
    {
        "content": "<p>Using regexes to match usernames sounds like a bad idea to me</p>",
        "id": 162365706,
        "sender_full_name": "Reid Barton",
        "timestamp": 1554232872
    },
    {
        "content": "<p>you don't want to accidentally allow <code>notrwbarton</code> to merge PRs for example, it just seems like there is too much scope for error</p>",
        "id": 162365737,
        "sender_full_name": "Reid Barton",
        "timestamp": 1554232906
    },
    {
        "content": "<p>What I mean is that we can choose how careful maintainers should be with giving \"approving\" reviews.</p>",
        "id": 162365853,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554232997
    },
    {
        "content": "<p>Oh, I see</p>",
        "id": 162365898,
        "sender_full_name": "Reid Barton",
        "timestamp": 1554233038
    },
    {
        "content": "<p>If we want to allow them to use it as a signal to another maintainer that they think a PR is fine, even if they don't want to trigger a merge, then we could follow my proposal</p>",
        "id": 162365950,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554233048
    },
    {
        "content": "<p>Otoh, if the approve of a PR that was assigned to them, then I guess they also think that it is ready for merging. So Mergify can go ahead.</p>",
        "id": 162366004,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554233113
    },
    {
        "content": "<p>And of course we can decorate the regex with <code>^(theregex)$</code></p>",
        "id": 162366044,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554233153
    },
    {
        "content": "<p>This is showing up as Simon not having reviewed <a href=\"https://github.com/ChrisHughes24/mathlib/pull/47/checks?check_run_id=91331543\" target=\"_blank\" title=\"https://github.com/ChrisHughes24/mathlib/pull/47/checks?check_run_id=91331543\">https://github.com/ChrisHughes24/mathlib/pull/47/checks?check_run_id=91331543</a></p>",
        "id": 162366318,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554233344
    },
    {
        "content": "<p>With <code>approved-reviews-by=cipher1024</code></p>",
        "id": 162366338,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554233357
    },
    {
        "content": "<p>Weird...</p>",
        "id": 162366635,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554233584
    },
    {
        "content": "<p>No, I did approve that PR</p>",
        "id": 162366818,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554233710
    },
    {
        "content": "<p>Exactly... I can see that on the \"Conversation\" tab. But Mergify isn't picking this up.</p>",
        "id": 162366842,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554233739
    },
    {
        "content": "<p>Maybe because it's a stale review</p>",
        "id": 162366942,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554233813
    },
    {
        "content": "<p>But you don't have \"Rule 2\"</p>",
        "id": 162366961,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554233838
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> Could you approve again?</p>",
        "id": 162366967,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554233846
    },
    {
        "content": "<p>I just did</p>",
        "id": 162367719,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554234422
    },
    {
        "content": "<p>Still doesn't fly</p>",
        "id": 162367764,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554234470
    },
    {
        "content": "<p>And it didn't change the status</p>",
        "id": 162367767,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554234474
    },
    {
        "content": "<blockquote>\n<p>This will match only reviewers with admin or write permission on the repository.</p>\n</blockquote>",
        "id": 162367862,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554234529
    },
    {
        "content": "<p>I think that explains the issue</p>",
        "id": 162367875,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554234539
    },
    {
        "content": "<p>Ah!</p>",
        "id": 162367898,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554234553
    },
    {
        "content": "<p>Give me permission then</p>",
        "id": 162367908,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554234558
    },
    {
        "content": "<p>Sorry, I can't do that (-;</p>",
        "id": 162367924,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554234570
    },
    {
        "content": "<p>I'm not enough of a doofus</p>",
        "id": 162367943,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554234585
    },
    {
        "content": "<p>Sent an invite</p>",
        "id": 162367953,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554234593
    },
    {
        "content": "<p>It would be nice if it said \"write permission on the base branch\".</p>",
        "id": 162368207,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554234747
    },
    {
        "content": "<p>Would save us a bunch of headaches</p>",
        "id": 162368217,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554234758
    },
    {
        "content": "<p>Tada! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 162368282,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554234814
    },
    {
        "content": "<p>It got merged! Well done <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span></p>",
        "id": 162368299,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554234826
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 162368308,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554234838
    },
    {
        "content": "<p>Yay!</p>",
        "id": 162368312,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554234840
    },
    {
        "content": "<p>I think this addresses the doofus objection</p>",
        "id": 162368420,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554234893
    },
    {
        "content": "<p>I did follow closely. Did you find a website that will review all of Kenny's algebra PR and merge them?</p>",
        "id": 162368470,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1554234932
    },
    {
        "content": "<p>Only the extra-maintainer doofus objection</p>",
        "id": 162368476,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554234937
    },
    {
        "content": "<p>But the intra-maintainer doofus objection still stands... You'll have to figure that out amongst yourselves though</p>",
        "id": 162368572,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554234974
    },
    {
        "content": "<p>Can you approve this one <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> <br>\n<a href=\"https://github.com/ChrisHughes24/mathlib/pull/48\" target=\"_blank\" title=\"https://github.com/ChrisHughes24/mathlib/pull/48\">https://github.com/ChrisHughes24/mathlib/pull/48</a><br>\nJust to see if the list of maintainers works</p>",
        "id": 162368608,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554234998
    },
    {
        "content": "<p>Do we still want the label?</p>",
        "id": 162368791,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554235119
    },
    {
        "content": "<p>By the way, there is a strict upper bound on the number of tests that <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> can perform: at some point the README file in his fork will be empty.</p>",
        "id": 162368869,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554235193
    },
    {
        "content": "<p>Probably we don't want the label. But we'll have to be careful merging mergify, because there are a bunch of open PRs with approving reviews.</p>",
        "id": 162369027,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554235300
    },
    {
        "content": "<p>I think we can keep the label for two reasons: communicate with each other and avoid mistreating existing PRs</p>",
        "id": 162369109,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554235352
    },
    {
        "content": "<p>So the list version isn't working, it seems</p>",
        "id": 162369660,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554235753
    },
    {
        "content": "<p>I guess it means that you require all those people to approve</p>",
        "id": 162369673,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554235766
    },
    {
        "content": "<p>Maybe 7 conditions then.</p>",
        "id": 162369722,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554235801
    },
    {
        "content": "<p>I went ahead and edited the config into the 7 + 1 rules</p>",
        "id": 162418162,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554289206
    },
    {
        "content": "<p>I'm happy with that. What about you guys?</p>",
        "id": 162422113,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554292775
    },
    {
        "content": "<p>I think I can just merge this. We don't need to wait for the build</p>",
        "id": 162422782,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554293323
    },
    {
        "content": "<p>Let's go for it!</p>",
        "id": 162423723,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554294111
    },
    {
        "content": "<p>(Sorry I was distracted: trying to prove a theorem)</p>",
        "id": 162423774,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554294124
    },
    {
        "content": "<p>silly theorem getting in the way of real work</p>",
        "id": 162424914,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554295107
    },
    {
        "content": "<p>done</p>",
        "id": 162424916,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554295109
    },
    {
        "content": "<p>Let's try it for a couple of rounds and then advertise it. How about that?</p>",
        "id": 162424931,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554295129
    },
    {
        "content": "<p>Cool!</p>",
        "id": 162424957,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554295157
    },
    {
        "content": "<p>Does mergify only use the <code>.mergify.yml</code> file on <code>master</code> or does it use the one in the current branch?</p>",
        "id": 162430873,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554299431
    },
    {
        "content": "<p>Current branch</p>",
        "id": 162431009,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554299526
    },
    {
        "content": "<p>That might be a security issue ...</p>",
        "id": 162431039,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554299560
    },
    {
        "content": "<p>Yes, just realised.</p>",
        "id": 162431237,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554299686
    },
    {
        "content": "<p>How about exploiting it to commit a fix to the mergify repository?</p>",
        "id": 162431495,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554299839
    },
    {
        "content": "<p>Hahaha! To they use their own tool?</p>",
        "id": 162431692,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554299979
    },
    {
        "content": "<p>Yes.</p>",
        "id": 162431806,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554300041
    },
    {
        "content": "<p>Although mergify is disabled for PRs that change the configuration</p>",
        "id": 162431858,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554300071
    },
    {
        "content": "<p>So there is no problem</p>",
        "id": 162431873,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554300082
    },
    {
        "content": "<p>How do you do that?</p>",
        "id": 162431980,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554300147
    },
    {
        "content": "<p>It's disabled by default</p>",
        "id": 162432137,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554300263
    },
    {
        "content": "<p>We're fine</p>",
        "id": 162432183,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554300288
    },
    {
        "content": "<p>ooof :)</p>",
        "id": 162432231,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554300317
    },
    {
        "content": "<p>I almost wrote a panicked issue to them :P</p>",
        "id": 162432254,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554300331
    },
    {
        "content": "<p>Now I'm trying to change how travis deals with PRs. Right now, every time you push to a PR, you get two builds. I'd like them to cancel the push build. We'd get way more builds in.</p>",
        "id": 162432437,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554300458
    },
    {
        "content": "<p>Travis does seem to be less generous with allocating build time lately. A lot more queued builds.</p>",
        "id": 162435053,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554302036
    },
    {
        "content": "<p>I think it's because of duplicated work</p>",
        "id": 162435721,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554302436
    },
    {
        "content": "<p>I feel like disabling PR builds and only keeping push builds</p>",
        "id": 162435833,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554303227
    },
    {
        "content": "<p>But then, people creating PRs from other repos wouldn't get a build automatically</p>",
        "id": 162435834,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554303227
    },
    {
        "content": "<p>Regarding Travis slowdowns, I guess it's probably possible to pay for more time/power, right? Does anyone know how much this costs? I can't find it immediately on their website.</p>",
        "id": 162437786,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1554304451
    },
    {
        "content": "<p>Or maybe one of the full profs can ask/instruct/request a local sysadmin to setup and maintain a CI server?</p>",
        "id": 162437887,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554304518
    },
    {
        "content": "<p>Those are possibilities. But right now, we're misusing the resources that we do have so first, let's see if we can use them better</p>",
        "id": 162438046,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554304641
    },
    {
        "content": "<p>And Robb: <a href=\"https://travis-ci.com/plans\" target=\"_blank\" title=\"https://travis-ci.com/plans\">https://travis-ci.com/plans</a></p>",
        "id": 162438059,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554304662
    },
    {
        "content": "<p>Huh. <a href=\"http://travis-ci.com\" target=\"_blank\" title=\"http://travis-ci.com\">travis-ci.com</a> is different from <a href=\"http://travis-ci.org\" target=\"_blank\" title=\"http://travis-ci.org\">travis-ci.org</a>.</p>",
        "id": 162438192,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1554304736
    },
    {
        "content": "<p>Should it become necessary, we could probably put a bit of Jasmin's Lean Forward money to an upgraded account. I don't know what the limitations are on the free account, so it's not clear which upgrade would be appropriate, or how much Jasmin would be willing to spend.</p>",
        "id": 162438795,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1554305107
    },
    {
        "content": "<p>I think premium might be better than what we currently get</p>",
        "id": 162439012,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554305260
    },
    {
        "content": "<p>Open source projects get a pretty sweet deal</p>",
        "id": 162439038,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554305279
    },
    {
        "content": "<p>Okay, yeah, I doubt that would happen.</p>",
        "id": 162439112,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1554305305
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> Your change fixed the old error on minchaowu's PR, but there's a new one, which is the same as the error on all the other PRs.</p>",
        "id": 162460283,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554319281
    },
    {
        "content": "<p>mergify doesn't seem to be working:</p>",
        "id": 162474045,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554328899
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/865/checks?check_run_id=92382766\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/865/checks?check_run_id=92382766\">https://github.com/leanprover-community/mathlib/pull/865/checks?check_run_id=92382766</a></p>",
        "id": 162474059,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554328901
    },
    {
        "content": "<p>I'm going try and remove the protection on master for a moment. Let's see if that makes a difference</p>",
        "id": 162522996,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554383428
    },
    {
        "content": "<p>One thing we could do is go back to a way of working with two repo. That would fix the permission situation and that would lighten the load on mathlib Travis build budget</p>",
        "id": 162536578,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554391607
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> what happened when you removed the branch protection? If you do that, you could try a fresh start of mergify, by approving and tagging e.g. <a href=\"https://github.com/leanprover-community/mathlib/pull/831\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/831\">https://github.com/leanprover-community/mathlib/pull/831</a></p>",
        "id": 162538155,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1554392478
    },
    {
        "content": "<p>We just got one successful build. It corresponds to me disabling the protection</p>",
        "id": 162547205,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554398270
    },
    {
        "content": "<p>Should we reenable the protection by enabling \"Require review from Code Owners\", and making administrators code owners for every file?</p>",
        "id": 162558433,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554405151
    },
    {
        "content": "<p>How do we set the code owners?</p>",
        "id": 162558627,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554405287
    },
    {
        "content": "<p><a href=\"https://help.github.com/en/articles/about-code-owners\" target=\"_blank\" title=\"https://help.github.com/en/articles/about-code-owners\">https://help.github.com/en/articles/about-code-owners</a></p>",
        "id": 162558702,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554405341
    },
    {
        "content": "<p>That sounds like a great solution!</p>",
        "id": 162559082,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554405585
    },
    {
        "content": "<p>Let's do it!</p>",
        "id": 162559086,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554405588
    },
    {
        "content": "<p>We can set <code>@mathlib-maintainers</code> as the owner</p>",
        "id": 162559179,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554405629
    },
    {
        "content": "<p>Do you know where the update branch button has gone by the way?</p>",
        "id": 162570444,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554413016
    },
    {
        "content": "<p>I do not</p>",
        "id": 162570586,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554413095
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> I'm not sure your interruption control code works. Can you look at it?</p>",
        "id": 162580731,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554422580
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/e791b57f819a1ec6948f186b8148c895a805cbf5/scripts/update-mathlib.py#L91-L93\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/e791b57f819a1ec6948f186b8148c895a805cbf5/scripts/update-mathlib.py#L91-L93\">https://github.com/leanprover-community/mathlib/blob/e791b57f819a1ec6948f186b8148c895a805cbf5/scripts/update-mathlib.py#L91-L93</a> </p>\n<p>I'm told <code>signal</code> is not in scope.</p>",
        "id": 162580836,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554422685
    },
    {
        "content": "<p>Why is <a href=\"https://github.com/leanprover-community/mathlib/issues/862\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/862\">#862</a> failing? Is it because the pr build finished before the push build perhaps? It says push build has failed when it has passed.</p>",
        "id": 162718166,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554581111
    },
    {
        "content": "<p>I'll look into it. It might be because of a new rule I'm trying out</p>",
        "id": 162718615,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554581706
    },
    {
        "content": "<p>I think the best thing would be to make sure that the branch protections &lt;= mergify conditions</p>",
        "id": 162728491,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554596757
    },
    {
        "content": "<p>It didn't say it had failed actually, it says pending.</p>",
        "id": 162728538,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554596788
    },
    {
        "content": "<p>the next two PRs should merge automatically now</p>",
        "id": 162731769,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554602182
    }
]