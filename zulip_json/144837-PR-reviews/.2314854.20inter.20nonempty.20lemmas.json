[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/14854\">#14854</a> has been languishing in limbo for some time and I do not know how to progress it without re-tagging people who I assume are not replying for a reason. It is a small PR and I didn't expect it to take this long.</p>",
        "id": 291591739,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1659368073
    },
    {
        "content": "<p>I'll leave this for someone else to decide. From my perspective, this PR seems to be change for changes sake; it's not at all obvious that the new lemmas are any better than the existing ones<del>, nor does the PR contain any evidence one way or the other</del> indeed, the downstream changes in the PR suggest that the new lemmas are worse.</p>",
        "id": 291597473,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1659370297
    },
    {
        "content": "<p>For instance, <code>inter_nonempty : (s ‚à© t).nonempty ‚Üî ‚àÉ x, x ‚àà s ‚àß x ‚àà t</code> is provable with just <code>simp_rw [nonempty, mem_inter]</code> and this is the obvious chain of rewrites to get to that goal.</p>",
        "id": 291597696,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1659370376
    },
    {
        "content": "<p>What do you need this PR for?</p>",
        "id": 291597879,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1659370444
    },
    {
        "content": "<p>I wish you'd told me that a month ago.</p>",
        "id": 291598969,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1659370954
    },
    {
        "content": "<p>I can't now remember - about a month ago I was working on something and the current form was really getting in my way, and I noticed that the form of <code>inter_nonempty</code> was quite different from that of all the lemmas that surrounded it.</p>\n<p>I don't agree about the downstream changes - they only look worse because the particular context <em>is</em> using sets as types instead of membership. But it seems a lot more common to use membership, certainly in things I've worked on!</p>",
        "id": 291599256,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1659371098
    },
    {
        "content": "<p>(That is to say, the downstream lemmas have <code>‚àÄ t ‚àà ùìù a, ‚àÉ y : s, ‚Üëy ‚àà t</code>, instead of <code>‚àÄ t ‚àà ùìù a, ‚àÉ y ‚àà s, y ‚àà t</code>, which is how I'd expect to spell that...)</p>",
        "id": 291599344,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1659371152
    },
    {
        "content": "<p>You may as well say \"why does <code>union_nonempty</code> exist, can't you use <code>simp_rw [nonempty, mem_union]</code>: you can. But we have the former...</p>",
        "id": 291599656,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1659371294
    },
    {
        "content": "<p>Indeed, on the 24th of June, you told me that \"[<code>inter_nonempty</code>] is great\": <a href=\"https://github.com/leanprover-community/mathlib/pull/14854#discussion_r905981630\">https://github.com/leanprover-community/mathlib/pull/14854#discussion_r905981630</a>.</p>\n<p>If you have now changed your mind, that's fine: but I do find it confusing to be told that a new lemma is great, and then a month later told that there's no point to my PR. It really disincentivises future contribution.</p>",
        "id": 291600036,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1659371439
    },
    {
        "content": "<p>And indeed: <code>simp</code> is not necessary. As the commit has:<br>\n<code>lemma inter_nonempty : (s ‚à© t).nonempty ‚Üî ‚àÉ x, x ‚àà s ‚àß x ‚àà t := iff.rfl</code> - this was the lemma you said was great.</p>",
        "id": 291600263,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1659371543
    },
    {
        "content": "<p>Perhaps what I should have said is \"I've looked at this PR too much and now can't tell good from bad\". A fresh pair of eyes should make the call.</p>",
        "id": 291602336,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1659372574
    },
    {
        "content": "<p>Indeed, you're right that I previously thought <code>inter_nonempty</code> was great. In my most recent comment, I had forgotten about <code>union_nonempty</code>.<br>\nIf the PR description said \"adds inter_nonempty to match union_nonempty\" then I wouldn't have gotten confused just now!</p>",
        "id": 291602484,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1659372624
    },
    {
        "content": "<p>I will edit it. The issue was that I have also myself lost track of what I did where (and to be fair I did also confuse things initially by making style changes that you didn't like, and I think were not good).</p>\n<p>I do remember thinking that <code>mem_closure_iff_nhds'</code> was a pretty weird lemma at the time when I made this PR, but I was trying to minimally disturb things.</p>\n<p>Personally I think:</p>\n<ul>\n<li>You were right before: <code>inter_nonempty</code> is indeed good.</li>\n<li>\n<p>The other two lemmas were weird originally and they're weird now (there is not much else like them).<br>\n Options include:</p>\n</li>\n<li>\n<p>get rid of them entirely - they're barely used anyway, only by <code>mem_closure_iff_comap_ne_bot</code> and <code>mem_closure_iff_nhds'</code> and maybe there's better proofs. And also nobody uses <em>those</em> lemmas anyway, but that's a different PR.</p>\n</li>\n<li>leave them as they are e.g. <code>nonempty_inter_iff_exists_right</code> - but I do not think we would now accept a PR that added lemmas like this</li>\n<li>Accept my changes, and deal with the weirdness of <code>mem_closure_iff_comap_ne_bot</code> and <code>mem_closure_iff_nhds'</code> separately (this was my original plan).</li>\n</ul>\n<p>Mostly I just don't care anymore except that I want <code>inter_nonempty</code>.</p>",
        "id": 291604156,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1659373389
    },
    {
        "content": "<p>For what it's worth, the original lemmas aren't in simp normal form with respect to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/subtype.exists\">docs#subtype.exists</a> (a.k.a. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set_coe.exists\">docs#set_coe.exists</a>). I'm not making a suggestion by bringing this up, but it seems worth considering.</p>",
        "id": 291606739,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1659374576
    },
    {
        "content": "<p>Huh - shouldn't they fail linting if that's the case?</p>",
        "id": 291606814,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1659374617
    },
    {
        "content": "<p>They weren't simp lemmas, so no</p>",
        "id": 291606881,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1659374642
    },
    {
        "content": "<p>Ah, I see.</p>",
        "id": 291608822,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1659375531
    }
]