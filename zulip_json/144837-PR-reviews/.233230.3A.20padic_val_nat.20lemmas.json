[
    {
        "content": "<p>This is ultimately a step towards Bertrand's postulate. The point of this PR is to get <code>lemma prod_pow_prime_padic_val_nat : ∀ (n : nat) (s : n ≠ 0) (m : nat) (pr : n &lt; m), ∏ p in finset.filter nat.prime (finset.range m), pow p (padic_val_nat p n) = n</code>.</p>",
        "id": 202363161,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1593462199
    },
    {
        "content": "<p>I've been working on something pretty similar to this to (possibly) clean up my proof of the Perfect Number Theorem. I'm going to try to get that up in the next few hours, and then it'll probably be worth an expert taking a look at our various approaches to prime factorization.</p>",
        "id": 202527276,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1593573810
    },
    {
        "content": "<p>This lemma I need in this specific form for Bertrand - I definitely don't expect or want it to be The One True Prime Factorisation</p>",
        "id": 202534523,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1593584298
    },
    {
        "content": "<p>I think of it more as \"the lemma that links padic_val_nat to factorisation\"</p>",
        "id": 202534532,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1593584317
    },
    {
        "content": "<p>I've fixed up <a href=\"https://github.com/leanprover-community/mathlib/pull/3230\">https://github.com/leanprover-community/mathlib/pull/3230</a> after Johan's refactor.</p>",
        "id": 203652357,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1594574428
    },
    {
        "content": "<p>I was wondering if we could get this in before it rots</p>",
        "id": 204315803,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1595103092
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"117987\">@Patrick Stevens</span> Sorry... we've been really busy with the workshop last week. I'll try look at it on Monday.</p>",
        "id": 204315857,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595103154
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"117987\">@Patrick Stevens</span> In fact, I took a small look, and I think there is still an issue. The lemma that you have named <code>mul</code> is not in a namespace. That means there is now a lemma (globally) named <code>mul</code>, and it is about <code>padic_val_nat</code>...</p>",
        "id": 204316003,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595103415
    }
]