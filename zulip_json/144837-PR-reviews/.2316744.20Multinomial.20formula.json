[
    {
        "content": "<p>This is a proof of the multinomial formula in a commutative semiring.</p>\n<p>Limitation : the sums have to be indexed by <code>fin m</code> because I rely on <code>finset.nat.antidiagonal_tuple</code></p>\n<p>Possible extension to arbitrary semirings, when imposing that the elements of the sum commute pairwise.</p>",
        "id": 301851485,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1664647380
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> Apparently you missed <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a> and <a href=\"#narrow/stream/113489-new-members/topic/Multinomial.20coefficients.20definition\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Multinomial.20coefficients.20definition</a></p>",
        "id": 301852114,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1664647800
    },
    {
        "content": "<p>Unless I'm mistaken, that file contains a <em>definition</em> of multinomial coefficients, but not the proof of the <em>multinomial theorem</em>.</p>",
        "id": 301853842,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1664648976
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span>  <a href=\"https://github.com/leanprover-community/mathlib/pull/16317/files#diff-7872ddfaadbfff078a40c94cddf0dabb6195a01cfe7119226111243243e5b971R199\">The theorem is here.</a> It may takes some effort to connect to your version with antidiagonal though (I suggested doing this in the other thread).</p>",
        "id": 301861041,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1664654100
    },
    {
        "content": "<p>Thanks!<br>\n<code>finset.sym</code> is also a natural way of doing this, probably better than both <code>nat.antidiagonal_tuple</code> (which lacks a convenient API for sums) and my ad hoc<code>tuple</code>.</p>",
        "id": 301861653,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1664654549
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span> , in our work with <span class=\"user-mention\" data-user-id=\"406490\">@María Inés de Frutos Fernández</span> , we will need part of this PR. I used your proof of the multinomial theorem to write a proof of the “multinomial” theorem  for divided powers — where the multinomial coefficients are 1, and I need the modifications you made to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/data.sym.basic\">docs#data.sym.basic</a> <br>\nDo you have any recommendation on how to help this PR be pushed to mathlib ?<br>\nIs it worth to add the noncommutative case ?<br>\n(I would be happy to help, but I don't know how to do it concretely.)</p>",
        "id": 302414584,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1664960383
    },
    {
        "content": "<p>So the problem is that <a href=\"https://github.com/leanprover-community/mathlib/pull/16744\">#16744</a> doesn't use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.multinomial\">docs#nat.multinomial</a> but it gives a new definition?</p>",
        "id": 302415591,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1664960744
    },
    {
        "content": "<p>(In any case it doesn't pass CI at the moment, so it is not shown on the <a href=\"https://bit.ly/3AZk1Qk\">#queue</a>, and it's likely people don't see it)</p>",
        "id": 302415775,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1664960811
    },
    {
        "content": "<p>There's no problem with my PR <a href=\"https://github.com/leanprover-community/mathlib/pull/16744\">#16744</a> except that there was an earlier PR  <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a> which does the same in a better way, but it is not clear to me how/when <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a> will be added to mathlib nor whether I could help.<br>\n(I should delete my PR if I knew how to do it.)</p>",
        "id": 302447515,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1664973541
    },
    {
        "content": "<p>You can close a PR by clicking the button below the comment box at the very bottom of the page, PRs can be reopened later and never really permanently deleted I believe.<br>\nI think its quite acceptable to just push improvements to a PR that the author doesn't have time for, like <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a>, for example it looks like you wrote a nice docstring that could be incorporated there</p>",
        "id": 302456286,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1664976521
    },
    {
        "content": "<p>Regarding reopening PRs: I could be mistaken, but I think you can only reopen if the branch wasn't deleted; the default is that it is not deleted if there are unmerged changes upon closure.</p>",
        "id": 302482234,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1664983503
    },
    {
        "content": "<blockquote>\n<p>Do you have any recommendation on how to help this PR be pushed to mathlib ?<br>\nIs it worth to add the noncommutative case ?</p>\n</blockquote>\n<p>Maybe you could change the title of this topic to point to <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a>? And then maybe just wait for maintainers or official reviewers to make a decision. (I think you already caught the attention from some of them with this topic!) For the noncommutative case, we do have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset.noncomm_prod\">docs#multiset.noncomm_prod</a> to state the result, and I think you might add it to <a href=\"https://github.com/leanprover-community/mathlib/pull/16317\">#16317</a> if you'd like to.</p>",
        "id": 302514522,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1664993030
    }
]