[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/3212\">#3212</a> touches 41 files, so I think that we should merge it before it rots.</p>",
        "id": 202257129,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593380930
    },
    {
        "content": "<p>I understand that it's long but it's only about changing <code>-</code> to <code>\\C</code> or <code>\\</code></p>",
        "id": 202257139,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593380968
    },
    {
        "content": "<p>Crap, I see this one minute too late.</p>",
        "id": 202257213,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593381043
    },
    {
        "content": "<p>I just sent Heine to the queue since Sébastien <code>bors d+</code>ed it. And it does use complement with the stupid old notation.</p>",
        "id": 202257227,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593381087
    },
    {
        "content": "<p>OK, I'll merge <code>staging</code> and fix notation.</p>",
        "id": 202257275,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593381133
    },
    {
        "content": "<p>Note that this Heine PR touches only one file.</p>",
        "id": 202257280,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593381162
    },
    {
        "content": "<p>I have a question actually. Do we want this space after the C? Bourbaki doesn't has a space here. I checked and the Lean parser doesn't mind.</p>",
        "id": 202257413,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593381389
    },
    {
        "content": "<p>I don't care. Should I <code>sed</code> remove the space?</p>",
        "id": 202257690,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593381946
    },
    {
        "content": "<p>I don't know actually. I wish this symbol would be as recognizable as in Bourbaki where it's both taller and bolder (I don't like that it is bold in Bourbaki, but tall is nice).</p>",
        "id": 202257862,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593382249
    },
    {
        "content": "<p>And I need to sleep, so I'll let everybody else decide.</p>",
        "id": 202257872,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593382267
    },
    {
        "content": "<p>Are there unicode variations that are easier to distinguish from a recular C?</p>",
        "id": 202269704,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593402505
    },
    {
        "content": "<p>Another option migth be a superscript <code>c</code> as postfix notation. Something like <code>Xᶜ</code><br>\nIs <a href=\"https://en.wikipedia.org/wiki/Stretched_C\">https://en.wikipedia.org/wiki/Stretched_C</a> the thing you are currently using?</p>",
        "id": 202269906,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593402822
    },
    {
        "content": "<p>Aha, there is a dedicated \"Complement\" symbol in Unicode, which is what Yury has been using so far, it looks like: <code>∁</code>.<br>\nThere is also the \"Stretched C\", which looks like <code>ʗ</code>.</p>",
        "id": 202269958,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593402954
    },
    {
        "content": "<p>I understand that it is technically better to use \"Complement\". But from a UX point of view, it seems too easy to confuse it for a regular \"C\".</p>",
        "id": 202270007,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593403036
    },
    {
        "content": "<p>In the font I'm using in VSCode, \"Stretched C\" is <em>much</em> more recognizable that \"Complement\", and much closer to Bourbaki's notation.</p>",
        "id": 202279168,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593415911
    },
    {
        "content": "<p>I vote for switching to streched C without space and merging.</p>",
        "id": 202279249,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593415979
    },
    {
        "content": "<p>This will probably need a PR to VScode translations then.</p>",
        "id": 202279385,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593416126
    },
    {
        "content": "<p>That looks good in my VSCode too.</p>",
        "id": 202283052,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593419004
    },
    {
        "content": "<p>Which font do you use? In \"Hack\" <code>ʗ</code> is shifted down w.r.t. the baseline.</p>",
        "id": 202328510,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593445460
    },
    {
        "content": "<p>BTW, can we use a proper unicode symbol and adjust highlighting in VScode/Emacs?</p>",
        "id": 202328615,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593445504
    },
    {
        "content": "<p>E.g., make it bold.</p>",
        "id": 202328821,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593445604
    },
    {
        "content": "<p>I would prefer a different notation for complementation. I think a postfix superscript <code>c</code> is pretty common: <code>ᶜ</code>. This could also be the notation for complement in a boolean algebra.</p>",
        "id": 202329698,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1593446017
    },
    {
        "content": "<p>The <code>ʗ</code> looks ugly with my (default) font, and is by far less standard than the postfix superscript <code>c</code> in papers I have read by non-French writers.</p>",
        "id": 202330348,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1593446302
    },
    {
        "content": "<p>Could you please write the <code>notation</code> line?</p>",
        "id": 202330352,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593446302
    },
    {
        "content": "<p>∁ʗᶜ</p>",
        "id": 202330421,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593446337
    },
    {
        "content": "<p>I would be fine with the postfix upper c.</p>",
        "id": 202330747,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593446499
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">postfix</span> <span class=\"bp\">`</span><span class=\"err\">ᶜ</span><span class=\"bp\">`</span><span class=\"o\">:(</span><span class=\"n\">max</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl</span>\n</code></pre></div>",
        "id": 202331330,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1593446782
    },
    {
        "content": "<p>I can add the character to the VSCode input list (currently you cannot input it with <code>\\^c</code>).</p>",
        "id": 202331369,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1593446806
    },
    {
        "content": "<p>With this precedence <code>f sᶜ</code> is parsed as <code>f (sᶜ)</code>, which I think is what we want.</p>",
        "id": 202331433,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1593446841
    },
    {
        "content": "<p><code>\\^c</code> is good, but also <code>\\compl</code> please</p>",
        "id": 202331565,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593446892
    },
    {
        "content": "<p>Of course!</p>",
        "id": 202331647,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1593446943
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/vscode-lean/issues/196\">leanprover/vscode-lean#196</a></p>",
        "id": 202332693,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1593447351
    },
    {
        "content": "<p>You can input it with <code>\\^c</code> in Emacs <code>lean-mode</code></p>",
        "id": 202332793,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593447382
    },
    {
        "content": "<p>Oh good!</p>",
        "id": 202332820,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1593447392
    },
    {
        "content": "<p>Could you double check that it is indeed the same character?</p>",
        "id": 202332891,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1593447415
    },
    {
        "content": "<p>Done.</p>",
        "id": 202333066,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593447494
    },
    {
        "content": "<p>I also filed <a href=\"https://github.com/leanprover-community/lean/issues/367\">leanprover-community/lean#367</a></p>",
        "id": 202335246,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1593448321
    },
    {
        "content": "<p>(aka <a href=\"https://github.com/leanprover-community/lean/issues/367\">lean#367</a> <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span>)</p>",
        "id": 202335368,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593448357
    },
    {
        "content": "<p>I'm recompiling with the new notation.</p>",
        "id": 202339476,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593450244
    }
]