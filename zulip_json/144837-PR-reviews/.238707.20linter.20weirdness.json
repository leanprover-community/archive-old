[
    {
        "content": "<p>The linter seems to be complaining about a missing docstring in <a href=\"https://github.com/leanprover-community/mathlib/issues/8707\">#8707</a>, but to me it looks like it's got one already. What am I missing?</p>",
        "id": 249762592,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629226492
    },
    {
        "content": "<p><del>Number of hyphens. I've commented</del></p>",
        "id": 249763206,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1629226800
    },
    {
        "content": "<p>I misunderstood how to_additive docstringing works</p>",
        "id": 249763355,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1629226842
    },
    {
        "content": "<p>This isn't to-additive docstringing specifically, this is just <code>/-\" comment-string \"-/</code> syntax which is the same as <code>\" comment-string \"</code> to lean</p>",
        "id": 249764206,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629227244
    },
    {
        "content": "<p>(but gets markdown comment highlighting)</p>",
        "id": 249764326,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629227298
    },
    {
        "content": "<p><code>has_scalar.comp.smul</code> has <code>has_vadd.comp.vadd</code> as additive version.<br>\nHowever, it seems like this is not added to the <code>to_additive</code>-dictionary. When translating <code>has_scalar.comp</code>, it generates a new additive version <br>\n<code>has_vadd.comp.smul</code> of the previous definition.<br>\nSo this is a bug in <code>to_additive</code> that I likely introduced. I will investigate more later today.</p>",
        "id": 249764388,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1629227332
    },
    {
        "content": "<p>Should I replace the <code>.</code> with an <code>_</code> for now to fix it?</p>",
        "id": 249764577,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629227424
    },
    {
        "content": "<p>Does that fix it?</p>",
        "id": 249764777,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1629227532
    },
    {
        "content": "<p>Ah, that does fix it indeed...</p>",
        "id": 249764826,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1629227568
    },
    {
        "content": "<p>I didn't try, just guessed</p>",
        "id": 249764843,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629227579
    },
    {
        "content": "<p>Feel free to push to that branch</p>",
        "id": 249764856,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629227587
    },
    {
        "content": "<p>This was indeed a bug in <code>to_additive</code>. To trigger it you needed the following conditions:</p>\n<ul>\n<li>In <code>has_scalar.comp</code> you used a declaration in the namespace <code>has_scalar.comp</code> (namely <code>has_scalar.comp.smul</code>)</li>\n<li><code>has_scalar.comp</code> and <code>has_scalar.comp.smul</code> both have the attribute <code>@[to_additive]</code></li>\n<li>Additivizing <code>has_scalar.comp.smul</code> changes the last part of the name</li>\n</ul>\n<p>I'll fix it in a new PR.</p>",
        "id": 249784692,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1629237775
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/8733\">#8733</a></p>",
        "id": 249788372,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1629240154
    }
]