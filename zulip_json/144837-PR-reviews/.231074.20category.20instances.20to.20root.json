[
    {
        "content": "<p>What do people think of the idea to just move these instances into the rest of the mathlib hierarchy instead of in the directory <code>category_theory/instances</code>? I wouldn't mind having a file <code>ring_theory/category.lean</code> etc...<br>\nI think it would stimulate the tighter integration of category theory with the rest of mathlib.</p>",
        "id": 166335564,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1558592073
    },
    {
        "content": "<p>that sounds reasonable</p>",
        "id": 166335579,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1558592116
    },
    {
        "content": "<p>I'm on it.</p>",
        "id": 166335735,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1558592342
    },
    {
        "content": "<p>The question is where to put all the subsidiary files. One option is to just move the current <code>category_theory/instances/Top/</code> directory to <code>topology/Top/</code>. Another is to move it to <code>topology/category/</code>. The choice is I guess between things like:</p>\n<div class=\"codehilite\"><pre><span></span>import topology.Top\nimport topology.Top.limits -- this is redundant\n</pre></div>\n\n\n<p>and</p>\n<div class=\"codehilite\"><pre><span></span>import topology.category\nimport topology.category.limits -- this is redundant\n</pre></div>\n\n\n<p>I guess the second one is clearly better.</p>",
        "id": 166336748,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1558593669
    },
    {
        "content": "<p>I prefer the second. And I'm being a bit dense, but what do you mean with \"this is redundant\"?</p>",
        "id": 166336832,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1558593792
    },
    {
        "content": "<p>Oh, sorry, I showed two import statements in each case, but since <code>import topology.category</code> will import <code>topology/category/default.lean</code>, which just contains a list of import statements for all the subsidiary files, there's no need to <code>import topology.category.limits</code> if you've already done that.</p>",
        "id": 166337155,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1558594262
    },
    {
        "content": "<p>Ok... I see. I certainly prefer the second. On the other hand... where will <code>TopCommRing</code> go?</p>",
        "id": 166337373,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1558594562
    },
    {
        "content": "<p>I would expect to get <code>Top</code> by importing <code>topologic.basic</code> and <code>TopCommRing</code> by importing <code>topology.algebra.ring</code></p>",
        "id": 166344601,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1558602879
    },
    {
        "content": "<p>that's going to put a lot of category stuff in the dependency chain</p>",
        "id": 166344697,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1558602963
    },
    {
        "content": "<p>because <code>topology.basic</code> is used all over the place</p>",
        "id": 166344711,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1558602975
    },
    {
        "content": "<p>I haven't looked at the PR specifically yet but I agree this move generally makes sense.</p>",
        "id": 166367551,
        "sender_full_name": "Reid Barton",
        "timestamp": 1558622845
    },
    {
        "content": "<p>Getting <code>Top</code> as soon as you import <code>topology.basic</code> would not actually add <em>that</em> much of the category theory library to the dependency chain. Our current <code>Top/basic.lean</code> file (which introduces it) depends on:</p>\n<ul>\n<li><code>concrete_category.lean</code></li>\n<li><code>functor.lean</code></li>\n<li><code>category.lean</code></li>\n<li><code>types.lean</code></li>\n<li><code>functor_category.lean</code></li>\n<li><code>natural_transformation.lean</code></li>\n<li><code>fully_faithful.lean</code></li>\n<li><code>isomorphism.lean</code><br>\n(and compiling that chain take 13s single threaded).</li>\n</ul>",
        "id": 166413203,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1558658230
    },
    {
        "content": "<p>I'm not necessarily pushing for this. I hadn't thought to go that far until Patrick suggested it, but if it is not particularly expensive for the import chain I do like the idea a lot.</p>",
        "id": 166413212,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1558658277
    },
    {
        "content": "<p>It would certainly be possible to split <code>types.lean</code> into two pieces and strip off the bottom four from that list...</p>",
        "id": 166413282,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1558658361
    },
    {
        "content": "<p>I wouldn't mind that change. <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> What do you think? After all, no-one cares about having posets in their dependency chain. We shouldn't be too scared by a bit of basic category theory either...</p>",
        "id": 166422637,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1558672882
    },
    {
        "content": "<p>I don't like it, not for <code>topology.basic</code>. Ideally that should give me the basics of topology only, independent of other fields to the degree possible</p>",
        "id": 166422684,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1558672940
    },
    {
        "content": "<p>if <code>topology.basic</code> doesn't give me that then what does?</p>",
        "id": 166422686,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1558672966
    },
    {
        "content": "<p>Ok, so we want <code>topology.category</code> and then <code>topology.default</code> gives me everything I want...</p>",
        "id": 166422696,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1558673003
    },
    {
        "content": "<p>I don't even know what the extent of <code>topology.default</code> is... that could be the entire library</p>",
        "id": 166422701,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1558673034
    },
    {
        "content": "<p>Ok, I will for now move things like <code>Top</code> into files like <code>topology/category.lean</code>.</p>",
        "id": 166422748,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1558673061
    },
    {
        "content": "<p><code>import mathlib</code></p>",
        "id": 166422750,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1558673064
    },
    {
        "content": "<p>We can go for tighter integration later. :-)</p>",
        "id": 166422753,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1558673075
    },
    {
        "content": "<p>I like <code>import mathlib</code> because it's obvious what goes in and what doesn't</p>",
        "id": 166422756,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1558673088
    },
    {
        "content": "<p>I think too many files are unclear about their intended dependencies, so dependency creep is a thing which eventually blows up in some cycle</p>",
        "id": 166422778,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1558673151
    },
    {
        "content": "<p>or just means that it takes half an hour to compile any file</p>",
        "id": 166422824,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1558673176
    },
    {
        "content": "<p>People import entire python math libraries just because they want a cosine, right?</p>",
        "id": 166426098,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1558678416
    },
    {
        "content": "<p>I bet the authors of python maths libraries don't do that.</p>",
        "id": 166430467,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1558683890
    },
    {
        "content": "<p>I moved things to:</p>\n<div class=\"codehilite\"><pre><span></span>import algebra.CommRing\nimport algebra.Mon\nimport topology.Top\nimport topology.algebra.TopCommRing\nimport measure_theory.Meas\n</pre></div>\n\n\n<p>(most of these have further files in subdirectories, e.g. <code>import algebra.CommRing.colimits</code>).</p>",
        "id": 166836943,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1559150516
    },
    {
        "content": "<p>Looks fine to me. <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> Shall we merge?</p>",
        "id": 166837467,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1559150867
    }
]