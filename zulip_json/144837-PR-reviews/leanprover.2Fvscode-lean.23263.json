[
    {
        "content": "<p>It's only a partial fix, but this changes the <code>\\</code>-shortcut bug from super-annoying to still-quite-annoying. cc <span class=\"user-mention\" data-user-id=\"234196\">@Henning Dieterichs</span>.</p>",
        "id": 238122187,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620644843
    },
    {
        "content": "<p>To summarize, the bug is that if you type <code>\\tol </code> too quickly you end up with <code>\\t|ol  </code> where <code>|</code> is the cursor</p>",
        "id": 238122328,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620644914
    },
    {
        "content": "<p>With this fix, you end up with <code>\\tol |</code> instead which is at least easier to clean up and try again</p>",
        "id": 238122364,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620644940
    },
    {
        "content": "<p>Sorry, I never experienced the \\-shortcut to be annoying . Is there a good way to reproduce this issue? Is this related to the eager replacement or does it also happen without it? Did it happen in the old version?</p>",
        "id": 238129870,
        "sender_full_name": "Henning Dieterichs",
        "timestamp": 1620648831
    },
    {
        "content": "<p>It's only annoying when this bug hits, its otherwise great!</p>",
        "id": 238131303,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620649538
    },
    {
        "content": "<p>I find it happens most often when I'm editing a file early in mathlib and lean is trying to use all my CPU to build leaving not very much for vs-code</p>",
        "id": 238131381,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620649565
    },
    {
        "content": "<p>I don't think it did happen in the old version, but I'm not really sure and I think that had other bugs</p>",
        "id": 238131426,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620649590
    },
    {
        "content": "<p>My hunch is that this is all called by the <code>setTimeout(..., 0)</code></p>",
        "id": 238131455,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620649604
    },
    {
        "content": "<p>I don't think vs-code makes any guarantees about how soon that will run, in particular it may not get a chance to run until after I've typed some more</p>",
        "id": 238131522,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620649635
    },
    {
        "content": "<p>Which means that any ranges which you had before the timeout might no longer be valid after the timeout</p>",
        "id": 238131576,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620649670
    },
    {
        "content": "<p>If that hunch is correct, you can debug this by replacing that <code>0</code> with something like <code>250</code> to simulate a slower vs-code</p>",
        "id": 238131646,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620649691
    }
]