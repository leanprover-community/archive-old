[
    {
        "content": "<p>I've just piled up a bunch of PRs cleaning up <code>algebra.order.ring</code> and its dependencies, mostly just splitting files and postponing unneeded imports.</p>\n<p>I think each of the following are (mostly) independent, and I'd love to get them moving:</p>",
        "id": 303006759,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665230291
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16863\">#16863</a></p>",
        "id": 303006772,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665230298
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16864\">#16864</a></p>",
        "id": 303006779,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665230304
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16865\">#16865</a></p>",
        "id": 303006782,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665230308
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16866\">#16866</a></p>",
        "id": 303006786,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665230311
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16869\">#16869</a></p>",
        "id": 303006796,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665230316
    },
    {
        "content": "<p>Then there's also <a href=\"https://github.com/leanprover-community/mathlib/pull/16861\">#16861</a> and <a href=\"https://github.com/leanprover-community/mathlib/pull/16869\">#16869</a>, but these are stacked up behind Yael's <a href=\"https://github.com/leanprover-community/mathlib/pull/16172\">#16172</a> (which bors is working on), so are harder to review for now.</p>",
        "id": 303006920,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665230372
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/cleaning.20up.20algebra.2Eorder.2Ering.20and.20dependencies/near/303006772\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16863\">#16863</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> note that bors rejected the merge because of the awaiting-ci label</p>",
        "id": 303010327,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1665231880
    },
    {
        "content": "<p>Thanks for letting me know, <code>d+</code>d</p>",
        "id": 303010563,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1665231991
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>, you still haven't answered me what your goal was.</p>",
        "id": 303017771,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665235307
    },
    {
        "content": "<p>Do you have specific pairs of declarations that you think should not import each other?</p>",
        "id": 303017857,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665235331
    },
    {
        "content": "<p>Minimize the number of files (and their sizes) that need to be imported to get to ordered_ring and its basic lemmas. Essentially I am looking at <code>leanproject import-graph --to algebra.order.ring</code>, and identifying spurious things in the graph.</p>",
        "id": 303018225,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665235551
    },
    {
        "content": "<p>And the xy is that I am porting linarith, and trying to get a balance between only porting the mathlib development that is needed, and not making life harder for the eventual complete port. Having smaller simpler files makes porting more manageable.</p>",
        "id": 303018628,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665235736
    },
    {
        "content": "<p>I feel like <code>linarith</code> is one of the last big obstacles to getting mathlib ported.</p>",
        "id": 303030825,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665241544
    },
    {
        "content": "<p>I definitely vote for letting Scott change whatever he wants in mathlib if it helps him porting <code>linarith</code>.</p>",
        "id": 303031034,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665241652
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> how wildly off is my linarith claim/hope?</p>",
        "id": 303046393,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665250969
    },
    {
        "content": "<p>There's a bunch still to port, don't worry. :-)</p>",
        "id": 303071668,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665270480
    },
    {
        "content": "<p>The category theory library is still going to be broken from the first file for lack of tidy. That shouldn't be too hard to implement, but it's lower priority for now as we want to get the prerequisites for Rob's and Heather's courses next year done asap.</p>",
        "id": 303071779,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665270588
    },
    {
        "content": "<p>It's encouraging that it is actually possible to do complete ports of some of the low-down-the-hierarchy files now. Maybe we can resume a conversation about how the \"flag day\" vs \"gradual transition\" question will work out. It may not be too long before we want to start marking some very basic files in mathlib as \"no changes accepted unless you make the corresponding changes in mathlib4\".</p>",
        "id": 303071928,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665270721
    },
    {
        "content": "<p>I'm still not sure how much work linarith will be. I've got the Fourier-Motzkin elimination part \"working\" (i.e. compiling, who knows if it actually works) locally in lean4, but there is a lot of frontend still to do.</p>",
        "id": 303072028,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665270807
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16861\">#16861</a> is hopefully ready for review (CI not complete, I'll promise not to merge until it does if someone wants to delegate. :-)</p>",
        "id": 303089788,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665288736
    }
]