[
    {
        "content": "<p>Before I go and update the library, I wanted to check in about this one. Right now <code>apply_rules [a, b, c]</code> takes a list of rules which are either expressions or names of attributes. The current implementation is broken (and I think always has been), as pointed out in the PR. </p>\n<p>Supporting this kind of heterogeneous list of arguments is hard and hacky. There's a reason for the syntax <code>simp [lemma1, lemma2] with attr1 attr2</code> and I propose to change the syntax for <code>apply_rules</code> to mirror that. But I wanted to check first that nobody is super attached to the broken syntax!</p>",
        "id": 278611246,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1649708505
    },
    {
        "content": "<p>Does order matter in this syntax?</p>",
        "id": 278618863,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649712124
    },
    {
        "content": "<p>Ie, would <code>apply_rules [a, c] with b</code> behave indistinguishably from the <code>apply_rules [a, b, c]</code> that's currently allowed?</p>",
        "id": 278618936,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649712170
    },
    {
        "content": "<p>Yes, it would be slightly different, I don't think <code>apply_rules</code> is order-agnostic, so it would be just like <code>apply_rules [a, c, b]</code>. But I doubt that many people are this precise with <code>apply_rules</code>.</p>",
        "id": 278620497,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1649712989
    },
    {
        "content": "<p>I think in the long run a syntax that allows interleaving attributes with expressions would be good for both <code>simp</code> and <code>apply_rules</code> (assuming both can be order-dependent), but consistency is all we care about for now so the change you propose seems fine</p>",
        "id": 278623927,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649715112
    },
    {
        "content": "<p><code>[a, ..b, c]</code> feels like a somewhat natural syntax to me, if we wanted to change it in future</p>",
        "id": 278624043,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649715182
    },
    {
        "content": "<p>I think that would be a nice improvement to <code>simp with</code> syntax.</p>",
        "id": 278627142,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1649717364
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> I'm pretty sure right now <code>with</code> will be a manageable change in mathlib.</p>",
        "id": 278650063,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1649741698
    },
    {
        "content": "<p>Turns out there were 0 non-meta uses of <code>apply_rules</code> with an attribute in mathlib. <a href=\"https://github.com/leanprover-community/mathlib/pull/13227\">#13227</a> is updated.</p>",
        "id": 278740884,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1649791156
    }
]