[
    {
        "content": "<p>This PR makes use of the <code>subgraph</code> API to define matchings and further perfect matchings. It also makes small enhancements in the <code>subgraph</code> API</p>",
        "id": 261512412,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1636990080
    },
    {
        "content": "<p>This one's got two approvals already. Two more to go <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 261871426,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1637195772
    },
    {
        "content": "<p>I'm not very familiar with our combinatorics results but this PR looks good to me. Are we waiting for comment from <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> and <span class=\"user-mention\" data-user-id=\"303889\">@Alena Gusakov</span> ?</p>",
        "id": 262299097,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1637575242
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"240862\">@Oliver Nash</span> to give you more context, Yaël proposed that we should get rid of graph matchings as they could be generalized by the implementation of k-factors that he is working on. Then Mauricio Collares reminded us that perfect matchings are indeed 1-factors (every vertex has degree 1) but regular matchings aren't necessarily 1-factors as matchings don't require that every vertex must have a neighbor.</p>\n<p>Then Kyle proposed that we could move on with the refactor and eventually change things in the future if needed. Then he asked for Bhavik's review and he also approved the PR.</p>",
        "id": 262311563,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1637583886
    },
    {
        "content": "<p>Full context of the discussion starts <a href=\"#narrow/stream/252551-graph-theory/topic/matchings/near/260609209\">here</a></p>",
        "id": 262311793,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1637584050
    },
    {
        "content": "<p>So because regular matchings aren't a special case of k-factors, the content of this PR is in fact not covered by Yaël's work on k-factors, and with this in mind, Bhavik and Kyle agreed we should go ahead with this?</p>",
        "id": 262311915,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1637584121
    },
    {
        "content": "<p>Kyle said so while aware of Yaël's and Mauricio's points, whereas I'm not sure Bhavik was aware of the discussion</p>",
        "id": 262312077,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1637584213
    },
    {
        "content": "<p>Well he's agreed on the PR so I'm happy to take that as his vote. Unless there are objections (e.g., from <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> ) I vote we merge this.</p>",
        "id": 262312289,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1637584376
    },
    {
        "content": "<p>In fact with that in mind, I'm delegating this to Yaël.</p>",
        "id": 262312336,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1637584421
    },
    {
        "content": "<p>I agree with Kyle because:</p>\n<ul>\n<li>k-factors are not on master yet (at least I don't think they are)</li>\n<li>The PR enriches the subgraph API</li>\n<li>It's an iterative work and we can improve and generalize things further later on. Right now, reusing the subgraph API makes more sense to me than creating a fully new structure just for matchings</li>\n</ul>",
        "id": 262312484,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1637584502
    },
    {
        "content": "<p>The Plan, at least as I'm envisioning it, is that matchings and k-factors are orthogonal generalizations of a perfect matching, so we have both, and then we'll have lemmas to go back and forth between perfect matchings and 1-factors.  </p>\n<p>For <code>G : simple_graph V</code> and <code>G' : G.subgraph</code>:</p>\n<ul>\n<li>this PR (re)introduces <code>G'.is_matching</code> for matchings</li>\n<li>this PR (re)introduces <code>G'.is_perfect_matching</code> for perfect matchings, and every perfect matching is a matching</li>\n<li>a k-factor is a simple graph <code>G' : simple_graph V</code> satisfying  <code>G' ≤ G</code> and <code>G.is_regular_of_degree k</code>. (<span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Could you remind me how you're implementing k-factors?)</li>\n</ul>\n<p>Some next steps include showing that when <code>G'.is_perfect_matching</code> then <code>G'.spanning_coe</code> is a 1-factor in the above sense, and conversely a 1-factor in the above sense arises in this way from a <code>G.subgraph</code>.  This would then be integrated into what Yael is formalizing.</p>\n<p>There are arguments where you consider decompositions of a graph by perfect matchings, and I'm imagining those will be done in the language of 1-factorizations. (My understanding is that this is how Yael is viewing things, too.)</p>",
        "id": 262342965,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1637598556
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> any other consideration regarding this PR? Oliver has delegated it to you <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 262533270,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1637713821
    },
    {
        "content": "<p>Sorry I have a few last comments. I just haven't had much time for Lean. Will try to do this this afternoon.</p>",
        "id": 262557726,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1637742435
    }
]