[
    {
        "content": "<p>I have formalized a nice counterexample (requiring measure theory, ordinals, Hahn-Banach and complete Banach spaces -- the fact that all this was readily available shows that mathlib has reached a form of maturity). I don't think it belongs to mathlib, though: this is clearly a leaf on which noone will build anything further. There was a discussion of a <code>counterexamples</code> folder at some point, if I recall correctly, so I created this folder and put my file there.</p>\n<p>There is the question of what the requirements on files in this folder would be. I did not try to be as general as possible, or to develop a whole API on the objects I introduce in the file, because my goal is just to get to the counterexample as efficiently as possible. It might be worth discussing here.</p>",
        "id": 238018399,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1620547636
    },
    {
        "content": "<p><code>counterexamples</code> is a branch that Damiano (I think) runs, if you wanted to coordinate that</p>",
        "id": 238018514,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1620547757
    },
    {
        "content": "<p>I like the idea of a counter-example folder for large-scale counter-examples (smaller ones could go directly in the relevant files). It's much easier to keep up to date than a branch.</p>",
        "id": 238018964,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620548376
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> , what do you think of PRing your branch to master? A difference between your branch and mine is that I put my counterexample folder at the root, while yours is in <code>src</code>.</p>",
        "id": 238019089,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1620548514
    },
    {
        "content": "<p>The idea is that when doing <code>lean --make src</code>, the counterexamples don't get compiled, which gains some time since they're supposed to be leaves of the hierarchy.</p>",
        "id": 238019152,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1620548559
    },
    {
        "content": "<p>Do you mean you don't want CI to test them?</p>",
        "id": 238019238,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620548695
    },
    {
        "content": "<p>Or only when people compile by hand?</p>",
        "id": 238019245,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620548706
    },
    {
        "content": "<p>Only when people compile by hand. CI tests everything.</p>",
        "id": 238019434,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1620548924
    },
    {
        "content": "<p>Under what situation do people typically compile all of mathlib by hand if not to check in advance if they'll break CI?</p>",
        "id": 238019964,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620549557
    },
    {
        "content": "<p>Ok, I like the idea of counterexamples being somewhere and I do not mind whether in <code>src</code> or somewhere else!</p>",
        "id": 238027527,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1620557695
    },
    {
        "content": "<p>Sébastien, I will see how to fix it, now that your refactors of <code>nat</code>- and <code>int</code>-stuff have gone through!</p>",
        "id": 238027590,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1620557733
    },
    {
        "content": "<p>Should I move the folder <code>counterexamples</code> to the folder where <code>src</code> is?  At the moment, it is inside <code>src</code>.</p>",
        "id": 238027944,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1620558113
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.237553/near/238027944\">said</a>:</p>\n<blockquote>\n<p>Should I move the folder <code>counterexamples</code> to the folder where <code>src</code> is?  At the moment, it is inside <code>src</code>.</p>\n</blockquote>\n<p>I'd say yes, just like it's done in <a href=\"https://github.com/leanprover-community/mathlib/issues/7553\">#7553</a>.</p>",
        "id": 238030465,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1620560825
    },
    {
        "content": "<p>Sebastien, can you elaborate on the advantage of not putting the counterexamples in src?</p>",
        "id": 238030587,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620560986
    },
    {
        "content": "<p>Sébastien, are you sure you extracted from the counter-example everything that could go to mathlib? It looks like like it contains a lot of things. Are they really for counter-example purposes? Also, seeing the conclusion of the main result being <code>false</code> is psychologically weird. What not stating <code>¬\n(∀ (φ : (discrete_copy ℝ →ᵇ ℝ) →L[ℝ] ℝ), ∫ x in Icc 0 1, φ (f Hcont x) = φ g)</code>? Is it only to save one line in the proof?</p>",
        "id": 238030900,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620561326
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.237553/near/238030587\">said</a>:</p>\n<blockquote>\n<p>Sebastien, can you elaborate on the advantage of not putting the counterexamples in src?</p>\n</blockquote>\n<p>For me, it's a little bit like the <code>tests</code> directory: things that are not supposed to be imported by anything. I'd say that things in <code>src</code> are of interest for projects using <code>mathlib</code>, and things in another subdirectory are not. Also, quite often I type <code>lean --make src</code> to test I've not broken anything relevant, and I don't count these counterexamples as relevant in this sense. Maybe a better home for the counterexamples would even be <code>archive/counterexamples/</code>.</p>",
        "id": 238031795,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1620562263
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.237553/near/238030900\">said</a>:</p>\n<blockquote>\n<p>Also, seeing the conclusion of the main result being <code>false</code> is psychologically weird. </p>\n</blockquote>\n<p>The most natural way to state the main result is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">¬</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">discrete_copy</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→ᵇ</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span>\n    <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">φ</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">discrete_copy</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→ᵇ</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"n\">ℝ</span><span class=\"o\">]</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"bp\">∫</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">φ</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">Hcont</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">φ</span> <span class=\"n\">g</span>\n</code></pre></div>\n<p>i.e., there is no Pettis integral. This seemed a bit of a mouthful to me, so I switched to the current formulation to make it more readable. But I can definitely change it!</p>",
        "id": 238032020,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1620562507
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.237553/near/238030900\">said</a>:</p>\n<blockquote>\n<p>Sébastien, are you sure you extracted from the counter-example everything that could go to mathlib? It looks like like it contains a lot of things.</p>\n</blockquote>\n<p>I have the feeling that all of this is really esoterical. If it turns out that it is useful for other theorems I'd be very happy to move it to mathlib, but for now I have to admit I don't have other applications in mind.</p>",
        "id": 238032143,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1620562631
    },
    {
        "content": "<p>I trust you</p>",
        "id": 238032508,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620563040
    },
    {
        "content": "<p>I created PR <a href=\"https://github.com/leanprover-community/mathlib/issues/7558\">#7558</a> with the counterexamples folder.  I left it in <code>src</code>, since I wanted CI to finish and confirm that everything was alright.  I do not mind moving it elsewhere, though!</p>",
        "id": 238045132,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1620576725
    },
    {
        "content": "<p>After both <a href=\"https://github.com/leanprover-community/mathlib/issues/7553\">#7553</a> and <a href=\"https://github.com/leanprover-community/mathlib/issues/7558\">#7558</a> were merged, we now have both <code>src/counterexamples</code> and <code>counterexamples/</code>. <a href=\"https://github.com/leanprover-community/mathlib/issues/7618\">#7618</a> consolidates them into <code>counterexamples/</code> and adds that folder to CI; let me know if there are any objections.</p>",
        "id": 238943701,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1621133712
    },
    {
        "content": "<p>Bryan, I think that having a single counterexamples folder with all the counterexamples inside is great!</p>",
        "id": 238947737,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1621138395
    },
    {
        "content": "<p>There was a suggestion elsewhere to use <code>archive/counterexamples</code> as the name.</p>",
        "id": 238956653,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1621149371
    }
]