[
    {
        "content": "<p>Hey, those PRs are rather small but I'd love for them to get merged to be able to do some more heavy work around quivers. Would welcome reviews! Thanks</p>",
        "id": 312430750,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1669531003
    },
    {
        "content": "<p>If these could be modified to put to the new content for <code>combinatorics.quiver.basic</code> into a new file  (e.g. <code>.push</code>) that would be good. I don't want these in the import path/porting path for all of category theory.</p>",
        "id": 312493447,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669567593
    },
    {
        "content": "<p>Does that also hold for the <code>cast</code> part for arrows, that is <a href=\"https://github.com/leanprover-community/mathlib/pull/17617\">#17617</a> ?</p>",
        "id": 312572249,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1669622228
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"461830\">@Rémi Bottinelli</span>, yes please.</p>",
        "id": 312632746,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1669643633
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> The first two PRs have been refactored</p>",
        "id": 313642069,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670052494
    },
    {
        "content": "<p>Merged one, left a note on the other; it needs a matching mathlib4 PR.</p>",
        "id": 313686658,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670074263
    },
    {
        "content": "<p>Thanks! Is there any kind of guide on how to do this? I'm only vaguely aware of this port/synchronization effort so I'm not sure what doing such a PR involves.</p>",
        "id": 313687363,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670074581
    },
    {
        "content": "<p>Hopping on a plane now, but you can try <a href=\"https://github.com/leanprover-community/mathlib4/wiki\">#port-guide</a></p>",
        "id": 313687559,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670074660
    },
    {
        "content": "<p>Or look at other open PRs that are updating already ported files.</p>",
        "id": 313687644,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670074684
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"461830\">@Rémi Bottinelli</span> I was about to do some porting work but for technical reasons I can't work on the file I wanted to work on. Do you want me to make this matching mathlib4 PR for you (or even livestream doing it whilst you watch?) Ping me if you're interested.</p>",
        "id": 313691634,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670076304
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> gladly, yeah! I can arrange some time essentially any afternoon if you'd livestream it.</p>",
        "id": 313720672,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670091739
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>  … and I've updated the third PR too now: <a href=\"https://github.com/leanprover-community/mathlib/pull/17665\">https://github.com/leanprover-community/mathlib/pull/17665</a></p>",
        "id": 313775475,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670140465
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> For Cayley graphs and covering maps, we also need a version of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.single_obj\">docs#category_theory.single_obj</a> for quivers, i.e. that doesn't assume you have a multiplication on the edge type. Do you think this should be independant of the category theory version or should we refactor <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.single_obj\">docs#category_theory.single_obj</a> to be based on the new quiver version?</p>",
        "id": 313811310,
        "sender_full_name": "Antoine Labelle",
        "timestamp": 1670161691
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> re splitting this last PR: Is such PR hygiene really worth it? Isn't <code>git bisect</code> good enough that atomizing the PRs to this extent become more work than could even be theoretically beneficial?</p>",
        "id": 313827611,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670169961
    },
    {
        "content": "<p>I'm always too eager to put a lot in a single PR, so I should definitely learn to play the other way around, but I also kind of feel bad about restarting the PR/CI process each time.</p>",
        "id": 313827735,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670170036
    },
    {
        "content": "<p>I can't easily tell from the diff what was added and what was moved. If I want to figure it out, I need to check declarations one by one in both files.</p>",
        "id": 313831367,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670171905
    },
    {
        "content": "<p>So either make a list of the new declarations, or split the PR.</p>",
        "id": 313831389,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670171923
    },
    {
        "content": "<p>I'll make the list, then :) Thanks</p>",
        "id": 313831508,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670171995
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> For the porting to mathlib4, should the PR be first merged in mathlib3 and only then ported? I'm not sure I understand from the guide.</p>",
        "id": 313892299,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670219767
    },
    {
        "content": "<p>The mathlib 4 pr should be opened in parallel</p>",
        "id": 313893740,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1670220707
    },
    {
        "content": "<p>Ah, like this: <a href=\"https://github.com/leanprover-community/mathlib4/pull/799\">https://github.com/leanprover-community/mathlib4/pull/799</a></p>",
        "id": 313893963,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670220826
    },
    {
        "content": "<p>Do I need PR rights for mathlib4? Can I get them?</p>",
        "id": 313902229,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670225049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"461830\">@Rémi Bottinelli</span> Voila: <a href=\"https://github.com/leanprover-community/mathlib4/invitations\">https://github.com/leanprover-community/mathlib4/invitations</a></p>",
        "id": 313902354,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1670225114
    },
    {
        "content": "<p>That's fast, thanks!</p>",
        "id": 313902416,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670225153
    },
    {
        "content": "<p>OK, here is the mathlib4 PR: <a href=\"https://github.com/leanprover-community/mathlib4/pull/858\">https://github.com/leanprover-community/mathlib4/pull/858</a></p>",
        "id": 313903018,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670225454
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"461830\">@Rémi Bottinelli</span> I haven't followed the quiver discussion. But I've kicked the ml4 PR on the queue already.</p>",
        "id": 313904300,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1670226131
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> Could you please take a look at the ml3 PR <a href=\"https://github.com/leanprover-community/mathlib/pull/17617\">#17617</a> ?</p>",
        "id": 313904337,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1670226151
    },
    {
        "content": "<p>Ah, actually in lean4, these are just <code>rfl</code> lemmas (I assume because of definitional eta for structs)… oh, well!</p>",
        "id": 313904833,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670226363
    },
    {
        "content": "<p>I see we're also touching <code>combinatorics/quiver/path.lean</code> which is also synchronized with mathlib4.</p>",
        "id": 313908923,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670228265
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib4/pull/861\">https://github.com/leanprover-community/mathlib4/pull/861</a><br>\nHere is a PR to synchronize the <code>path.lean</code> part. I'm waiting for a green light there to merge <a href=\"https://github.com/leanprover-community/mathlib/pull/17617\">#17617</a> (which has Kyle's approval already).</p>",
        "id": 313993308,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670252400
    },
    {
        "content": "<p>OK, I've now  created <a href=\"https://github.com/leanprover-community/mathlib4/pull/971\">https://github.com/leanprover-community/mathlib4/pull/971</a> to synchronize PR #17665</p>",
        "id": 315545345,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670924177
    },
    {
        "content": "<p>I'm not sure exactly what the error on \"Check that all files are imported\" is, but I venture it's just because I added a new file?</p>",
        "id": 315545608,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670924271
    },
    {
        "content": "<p>You need to add the import of your new file to <code>Mathlib.lean</code></p>",
        "id": 315545767,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670924310
    },
    {
        "content": "<p>yes, you want to run</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">find</span> <span class=\"n\">Mathlib</span> <span class=\"bp\">-</span><span class=\"n\">name</span> <span class=\"s2\">\"*.lean\"</span> <span class=\"bp\">|</span> <span class=\"n\">env</span> <span class=\"n\">LC_ALL</span><span class=\"bp\">=</span><span class=\"n\">C</span> <span class=\"n\">sort</span> <span class=\"bp\">|</span> <span class=\"n\">sed</span> <span class=\"bp\">'</span><span class=\"n\">s</span><span class=\"bp\">/\\.</span><span class=\"n\">lean</span><span class=\"bp\">//;</span><span class=\"n\">s</span><span class=\"o\">,</span><span class=\"bp\">/</span><span class=\"o\">,</span><span class=\"bp\">.</span><span class=\"o\">,</span><span class=\"n\">g</span><span class=\"bp\">;</span><span class=\"n\">s</span><span class=\"bp\">/^/</span><span class=\"kn\">import</span> <span class=\"bp\">/'</span> <span class=\"bp\">&gt;</span> <span class=\"n\">Mathlib.lean</span>\n</code></pre></div>\n<p>to update Mathlib.lean</p>",
        "id": 315545832,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670924337
    },
    {
        "content": "<p>Iirc, in mathlib3, the <code>mathlib.lean</code> file was generated automatically. Why is it changed here?</p>",
        "id": 315546191,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670924462
    },
    {
        "content": "<p>Is there even a <code>mathlib.lean</code> in mathlib?</p>",
        "id": 315546313,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670924511
    },
    {
        "content": "<p>there is an <code>all.lean</code> file made by a script</p>",
        "id": 315546405,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670924532
    },
    {
        "content": "<p>(anyway, done and pushed, thanks for the help!)</p>",
        "id": 315546490,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670924566
    },
    {
        "content": "<p>... which one has to run locally, right? I don't ever remember the script running automatically.</p>",
        "id": 315546514,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670924575
    },
    {
        "content": "<p>but lean3 (in its role as package manager) doesn't use it when you <code>lean --make src</code></p>",
        "id": 315546554,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670924591
    },
    {
        "content": "<p>whereas <code>lake build</code> is <code>lake build Mathlib</code> which does need a top level file</p>",
        "id": 315546604,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670924615
    },
    {
        "content": "<p>(Yael, thanks you're always so quick!!)</p>",
        "id": 315546675,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670924641
    },
    {
        "content": "<p>anything not in that file is not built</p>",
        "id": 315546733,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670924648
    },
    {
        "content": "<p>which means that if you have errors in unimported files then they might not be caught by CI without that extra step</p>",
        "id": 315546784,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1670924670
    },
    {
        "content": "<p>(I <span aria-label=\"eyes\" class=\"emoji emoji-1f440\" role=\"img\" title=\"eyes\">:eyes:</span> <img alt=\":zulip:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/zulip.png\" title=\"zulip\">)</p>",
        "id": 315546796,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670924672
    },
    {
        "content": "<p>I need to stop hacking code together and learn lean4 properly in order to get this porting process faster</p>",
        "id": 315546993,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1670924752
    },
    {
        "content": "<p>You can learn lean 4 by porting (this is how I learnt it). Just keep asking questions.</p>",
        "id": 315548904,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670925436
    },
    {
        "content": "<p>Hey, could I ping again for <a href=\"https://github.com/leanprover-community/mathlib/pull/17665\">#17665</a> ? Once it's approved I'll update the corresponding mathlib4 PR, but I'd like to get it merged. Thanks!</p>",
        "id": 316307254,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1671207972
    }
]