[
    {
        "content": "<p>Which one of these is the more useful one?<br>\n<code>variables (p : ℕ) [fact p.prime] {K : Type*} [field K] [fintype K] [algebra (zmod p) K] \n  {K' : Type*} [field K'] [fintype K'] [algebra (zmod p) K']</code></p>\n<p><code>theorem alg_equiv_of_card_eq (hKK' : fintype.card K = fintype.card K') : nonempty (K ≃ₐ[zmod p] K') :=</code><br>\nor <br>\n<code>def alg_equiv_of_card_eq (hKK' : fintype.card K = fintype.card K') : K ≃ₐ[zmod p] K' :=</code></p>\n<p>If the latter, how do i extract the p and n from the cardinalities? I want them in order to find the Galois field with the same cardinality.<br>\n<code>obtain ⟨n,_,hK⟩ := finite_field.card K p,</code> doesn't seem to work</p>",
        "id": 258533764,
        "sender_full_name": "Anupam Nayak",
        "timestamp": 1634818459
    },
    {
        "content": "<p>Uniqueness of finite fields:<br>\nAny two finite fields of the same cardinality are (possibly non canonically) isomorphic</p>\n<p>I'm trying to prove this^^</p>",
        "id": 258533812,
        "sender_full_name": "Anupam Nayak",
        "timestamp": 1634818496
    },
    {
        "content": "<p>That's not provable, because if the cardinality is prime then the isomorphism is canonical ;-)</p>",
        "id": 258533880,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1634818530
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"431311\">@Anupam Nayak</span> There are at least two useful statements, I think.</p>",
        "id": 258534732,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634818904
    },
    {
        "content": "<p>You can use <code>choose</code> instead of <code>obtain</code>; <code>choose n hn hK using finite_field.card K p,</code></p>",
        "id": 258534760,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634818917
    },
    {
        "content": "<p>If you know that <code>K</code> and <code>K'</code> have char <code>p</code>, then you want an algebra isom, like you've given.</p>",
        "id": 258534828,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634818930
    },
    {
        "content": "<p>But if you don't have those instances lying around, then you can still give a ring isomorphism without bothering about any primes.</p>",
        "id": 258534885,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634818961
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.239834.20statement.3F/near/258534828\">said</a>:</p>\n<blockquote>\n<p>If you know that <code>K</code> and <code>K'</code> have char <code>p</code>, then you want an algebra isom, like you've given.</p>\n</blockquote>\n<p>I assumed that K and K' are zmod p algebras, and then proved the char p instances. That is fine?</p>",
        "id": 258536319,
        "sender_full_name": "Anupam Nayak",
        "timestamp": 1634819572
    },
    {
        "content": "<p>Sure</p>",
        "id": 258536408,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634819621
    },
    {
        "content": "<p>But if the user doesn't have those zmod p algebra instances around, then a ring iso might still be nice.</p>",
        "id": 258536496,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634819651
    },
    {
        "content": "<p>So I think both variants are useful.</p>",
        "id": 258536511,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634819658
    },
    {
        "content": "<p>To be clear, you're talking not about \"both\" variants from the top of this thread, but about one of the variants and another unwritten one?</p>",
        "id": 258536567,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634819687
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.239834.20statement.3F/near/258536511\">said</a>:</p>\n<blockquote>\n<p>So I think both variants are useful.</p>\n</blockquote>\n<p>ok, i'll add another statement with just the ring isomorphism</p>",
        "id": 258536734,
        "sender_full_name": "Anupam Nayak",
        "timestamp": 1634819759
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.239834.20statement.3F/near/258534760\">said</a>:</p>\n<blockquote>\n<p>You can use <code>choose</code> instead of <code>obtain</code>; <code>choose n hn hK using finite_field.card K p,</code></p>\n</blockquote>\n<p>the <code>choose</code> tactic's mathlib documentation page should point this out</p>",
        "id": 258540037,
        "sender_full_name": "Anupam Nayak",
        "timestamp": 1634821025
    }
]