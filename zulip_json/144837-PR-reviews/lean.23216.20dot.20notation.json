[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/lean/issues/216\" title=\"https://github.com/leanprover-community/lean/issues/216\">lean#216</a> I make corelib use dot notation for some theorems about functions. Should I move them to <code>mathlib</code> instead?</p>",
        "id": 197033162,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589085972
    },
    {
        "content": "<p>It's ok for me if they stay.  That said, some people have been planning to move large parts of core to mathlib.  Maybe we should combine this.  <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> We can make 3.12 all about gutting core and assimilating it into mathlib, but I'd really appreciate it if somebody else could take the lead on this project.</p>",
        "id": 197041022,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1589098369
    },
    {
        "content": "<p>I am willing to take this on. But I will probably need some help (-;</p>",
        "id": 197098057,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589170231
    },
    {
        "content": "<p>When I'm compiling the core library, how do I tell it to use my custom compiled lean?</p>",
        "id": 197098237,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589170576
    },
    {
        "content": "<p>I always forget the <code>elan</code> incantation. And <code>elan help</code> isn't telling me what to do <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 197098239,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589170599
    },
    {
        "content": "<p>My proposal is to move <code>library/init/algebra/</code> out of core, and into <code>init/algebra</code> in mathlib. (In follow-up PRs, we can merge <code>init/algebra/*</code> into the rest of mathlib in proper places.)</p>",
        "id": 197098690,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589171091
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> did <a href=\"#narrow/stream/144837-PR-reviews/topic/lean.23211.20don't.20unfold.20irred.20defs/near/196194753\" title=\"#narrow/stream/144837-PR-reviews/topic/lean.23211.20don't.20unfold.20irred.20defs/near/196194753\">this suggestion</a> help, or are you trying to do something else?</p>",
        "id": 197100115,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1589172744
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> aah, does that also work when you are modifying core? I should of course have tried.</p>",
        "id": 197100186,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589172867
    },
    {
        "content": "<p>Yes, that's my primary use case for it.</p>",
        "id": 197100194,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1589172894
    },
    {
        "content": "<p><code>error: invalid custom toolchain name: 'local2'</code></p>",
        "id": 197100204,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589172921
    },
    {
        "content": "<p>I'm running this from the root of the core git repo.</p>",
        "id": 197100207,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589172937
    },
    {
        "content": "<p><code>elan toolchain link local2 .</code></p>",
        "id": 197100209,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589172950
    },
    {
        "content": "<p>Uh oh.</p>\n<blockquote>\n<p>Any name is permitted as long as it does not fully match an initial<br>\n    substring of a standard release channel. For example, you can use<br>\n    the names 'latest' or '2018-04-01' but you cannot use 'stable' or<br>\n    'nightly'.</p>\n</blockquote>\n<p>I wonder if this is conflicting with <a href=\"https://github.com/Kha/elan/commit/ab556e229cd5e690cdb74cc5fab70721810e774c\" title=\"https://github.com/Kha/elan/commit/ab556e229cd5e690cdb74cc5fab70721810e774c\">the recent change to <code>elan</code></a> which allows arbitrary release names..</p>",
        "id": 197100328,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1589173122
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span></p>",
        "id": 197100332,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1589173145
    },
    {
        "content": "<p>I think <code>elan toolchain link</code> just creates a symlink inside your <code>~/.elan/toolchains</code> directory to the directory you specify.</p>",
        "id": 197100537,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1589173518
    },
    {
        "content": "<p>Then you need some <code>elan override</code> magic</p>",
        "id": 197100878,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589174077
    },
    {
        "content": "<p>I just tested the following and it seems that making a symlink manually works as a replacement for <code>elan toolchain link</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ ln -s /path/to/local/lean/. ~/.elan/toolchains/blah\n$ elan override set blah\ninfo: using existing install for &#39;blah&#39;\ninfo: override toolchain for &#39;/path/to/some/lean/package&#39; set to &#39;blah&#39;\n\n  blah unchanged - Lean (version 3.10.0, commit 675c47294a57, Release)\n</code></pre></div>",
        "id": 197101505,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1589175072
    },
    {
        "content": "<p>Ah, that's unfortunate. But I think we can simply drop the restriction.</p>",
        "id": 197143267,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1589202948
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> I just updated <code>elan</code> to 0.10.1 but I'm still getting: <code>error: invalid custom toolchain name: 'blah'</code> when I run <code>elan toolchain link blah .</code>.</p>",
        "id": 197205342,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1589231458
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> Wow, I somehow lost a complete commit during rebasing. Could you please try again with 0.10.2?</p>",
        "id": 197207307,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1589232713
    },
    {
        "content": "<p>It seems to work now, thanks!</p>",
        "id": 197207422,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1589232767
    }
]