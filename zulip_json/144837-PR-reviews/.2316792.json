[
    {
        "content": "<p>I'd like to start cleaning up <code>algebra.order.*</code>, making files more modular. I've got a first PR <a href=\"https://github.com/leanprover-community/mathlib/pull/16792\">#16792</a> that is crawling its way through CI. If someone could take a quick look and delegate if appropriate, I'd like to get this off the queue asap to avoid rotting.</p>",
        "id": 302581057,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665030063
    },
    {
        "content": "<p>Oh no please!</p>",
        "id": 302590827,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665038449
    },
    {
        "content": "<p>I have been keeping <a href=\"https://github.com/leanprover-community/mathlib/pull/16172\">#16172</a> afloat for a month and a half now and this will just kill it.</p>",
        "id": 302590886,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665038488
    },
    {
        "content": "<p>It's ready to be merged, but I keep hitting random timeouts.</p>",
        "id": 302590916,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665038513
    },
    {
        "content": "<p>Also I don't like how you separate instances from the typeclass definitions. The problem with this approach is that you end up with structure files that have inflated imports because people will dump in here later theory in the name of it being about the structure. I have been actively working against that.</p>",
        "id": 302593246,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665039785
    },
    {
        "content": "<p>And please shorten <code>.canonically_ordered</code> to <code>.canonical</code>. File names are long enough like that and we already have <code>order</code> earlier <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 302593313,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665039829
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2316792/near/302593246\">said</a>:</p>\n<blockquote>\n<p>Also I don't like how you separate instances from the typeclass definitions. The problem with this approach is that you end up with structure files that have inflated imports because people will dump in here later theory in the name of it being about the structure. I have been actively working against that.</p>\n</blockquote>\n<p>I don't understand this. Isn't the solution just to tell people not to do this?</p>",
        "id": 302610845,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665047467
    },
    {
        "content": "<p>We really have far too much being imported to get to the definition <code>ordered_ring</code>. This is really annoying for porting.</p>",
        "id": 302610934,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665047513
    },
    {
        "content": "<p>If you think <a href=\"https://github.com/leanprover-community/mathlib/pull/16172\">#16172</a> will be in soon, I can wait and rejigger around it.</p>",
        "id": 302611321,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665047673
    },
    {
        "content": "<p>But I'm hoping days not months. :-)</p>",
        "id": 302611371,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665047691
    },
    {
        "content": "<p>What is \"far too much\" to you? I have a pretty good picture of the import tensions around the algebraic order hierarchy and I am working on releasing some of them but maybe you think of others.</p>",
        "id": 302612629,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665048222
    },
    {
        "content": "<p>In particular I have a PR that's almost ready to define <code>nnrat.cast</code> and this forces me to fix the imports.</p>",
        "id": 302612933,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665048320
    },
    {
        "content": "<p>I suspect you went on a crusade against the finest parts of the algebraic order hierarchy while in fact your life might have been severely affected by files like <a href=\"https://tqft.net/mathlib/data/set/intervals/unordered\">file#data/set/intervals/unordered</a> that needlessly inject a bunch of algebraic files into pure order theory.</p>",
        "id": 302613256,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665048449
    },
    {
        "content": "<p>My point is that I am actively working on this. And this time by \"working\" I do not mean \"I have it in my todo list and will work on it every few weeks\" but \"I am pushing several commits a day\".</p>",
        "id": 302613768,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665048620
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2316792/near/302581057\">said</a>:</p>\n<blockquote>\n<p>I'd like to start cleaning up <code>algebra.order.*</code>, making files more modular. I've got a first PR <a href=\"https://github.com/leanprover-community/mathlib/pull/16792\">#16792</a> that is crawling its way through CI. If someone could take a quick look and delegate if appropriate, I'd like to get this off the queue asap to avoid rotting.</p>\n</blockquote>\n<p>I think the PR looks good overall so I'll let you and Yaël come to a consensus on what to adapt.</p>",
        "id": 302625250,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1665053214
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2316792/near/302593246\">said</a>:</p>\n<blockquote>\n<p>Also I don't like how you separate instances from the typeclass definitions. The problem with this approach is that you end up with structure files that have inflated imports because people will dump in here later theory in the name of it being about the structure. I have been actively working against that.</p>\n</blockquote>\n<p>I disagree with this. I think in the files I've been working with has doing pretty well separating out instances from their structures in various files: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/rat.comm_ring\">docs#rat.comm_ring</a> vs <a href=\"https://leanprover-community.github.io/mathlib_docs/find/rat.field\">docs#rat.field</a> vs <a href=\"https://leanprover-community.github.io/mathlib_docs/find/rat.linear_ordered_field\">docs#rat.linear_ordered_field</a>. And certainly we should err more on the side of splitting files more rather than joining them together.</p>",
        "id": 302626489,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1665053732
    },
    {
        "content": "<p>I am talking about derived instances, not instances on concrete structures. My typîcal example is <a href=\"https://tqft.net/mathlib/algebra/ring/prod\">file#algebra/ring/prod</a>, which contains way more than just the instances, because it grew out of being \"the first file where the product of two rings is a ring\".</p>",
        "id": 302677077,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665069573
    },
    {
        "content": "<p>Put another way, I'm not complaining that we're splitting the files too much, I'm complaining that we're splitting them wrongly.</p>",
        "id": 302677224,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665069605
    },
    {
        "content": "<p>So what I would much prefer over this PR is we were splitting those files first, then see whether we actually need any more splitting.</p>",
        "id": 302678268,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665069866
    },
    {
        "content": "<p>Shall we merge <a href=\"https://github.com/leanprover-community/mathlib/pull/16172\">#16172</a>? Has Mario's comment from yesterday been addressed? If so I'd like to get this on the queue so I can have another go.</p>",
        "id": 302753263,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665095954
    },
    {
        "content": "<p>Oh wait it compiles? <span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span></p>",
        "id": 302753296,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665095980
    },
    {
        "content": "<p>It wasn't compiling for the past entire week despite repeated attempts <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 302753395,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665096009
    },
    {
        "content": "<p>Fingers crossed.</p>",
        "id": 302753455,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665096040
    },
    {
        "content": "<p>What about Mario's comment? Was that addressed?</p>",
        "id": 302753544,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1665096090
    },
    {
        "content": "<p>Yes, it was addressed even before Mario's comment. See <a href=\"#narrow/stream/144837-PR-reviews/topic/.2316172.20and.20.2316189.2C.20ordered.20PRs/near/294916802\">here</a>. Mario must have missed the relevant piece of code.</p>",
        "id": 302753689,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665096154
    },
    {
        "content": "<p>to be fair, the PR is not very easy to review right now, there are hundreds of commits and the diffs are huge and mostly useless</p>",
        "id": 302760086,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665100151
    },
    {
        "content": "<p>can this not be broken up into smaller pieces?</p>",
        "id": 302760129,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1665100191
    }
]