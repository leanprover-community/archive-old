[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib/pull/17831\">#17831</a> I change the definition of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_domain\">docs#is_domain</a> to allow semirings, and nothing else.</p>\n<p>CI fails with a <code> deterministic timeout</code> during \"run tests\".</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Error: /home/lean/actions-runner/_work/mathlib/mathlib/test/library_search/filter.lean:10:3:\n<span class=\"o\">(</span>deterministic<span class=\"o\">)</span> timeout\n</code></pre></div>\n<p>I see that this file has recently been modified by <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> , but I don't know exactly what it does, so I don't really know what to do. Any ideas? Thanks!</p>",
        "id": 314440310,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1670415007
    },
    {
        "content": "<p>I commented the test that timed out and everything seems OK, but I am not sure it is the correct thing to do...</p>",
        "id": 314487395,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1670427864
    },
    {
        "content": "<p>I had a timeout there too.  Previously there was a single proof with three <code>library_search</code>s, but the super slow one was the one you identify.  So I split it into two lemmas.  It seems that now it's so slow that even just that one <code>library_search</code> on its own times out.  Should we just delete that test?  cc <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span></p>",
        "id": 314518147,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1670434860
    },
    {
        "content": "<p>Following <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> suggestion I just added </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">by</span> <span class=\"n\">try_for</span> <span class=\"mi\">200000</span> <span class=\"o\">{</span> <span class=\"n\">library_search</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>and it seems now to work.</p>",
        "id": 314518473,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1670434951
    },
    {
        "content": "<p>Does <code>try_for 200000</code> mean you try for 200000 time units and then declare success?  If so, I guess this test is no longer testing anything?</p>",
        "id": 314519640,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1670435272
    },
    {
        "content": "<p>I think it just locally increases the maximum heartbeat threshold.</p>",
        "id": 314521366,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1670435754
    },
    {
        "content": "<p>So if it succeeds that means it did it within the required time frame.</p>",
        "id": 314521490,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1670435783
    },
    {
        "content": "<p>I think <code>try_for</code> might use <code>sorry</code> if it times out</p>",
        "id": 314522878,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670436156
    },
    {
        "content": "<p>Which would indeed make the test meaningless</p>",
        "id": 314522909,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670436164
    },
    {
        "content": "<p>Yeah, we don't have a <code>try_for</code> with failure on timeout</p>",
        "id": 314523181,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670436236
    },
    {
        "content": "<p>Maybe we should just change <code>try_for</code> so that it fails</p>",
        "id": 314523734,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670436385
    },
    {
        "content": "<p><code>library_search</code> works on my machine, so it's only a matter of threshold I think.</p>",
        "id": 314529207,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1670437990
    },
    {
        "content": "<p>Oh, you could just use <code>set_option timeout 200000</code> in that section of the file</p>",
        "id": 314552301,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1670445217
    },
    {
        "content": "<p>It fails <span aria-label=\"oh no\" class=\"emoji emoji-1f615\" role=\"img\" title=\"oh no\">:oh_no:</span></p>",
        "id": 314558792,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1670447661
    },
    {
        "content": "<p>What's the timeout set to on your machine? Mine is 1000000 ;-)</p>",
        "id": 314561078,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1670448544
    },
    {
        "content": "<p>Feel free to just delete the test. <code>library_search</code> has a better implementation in Lean 4, so we don't care about performance regressions in mathlib3 anymore.</p>",
        "id": 314565215,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670450162
    },
    {
        "content": "<p>That said, it is probably failing because someone has modified the typeclass search problems in some way that is causing problems... So it is a decent canary. Just not a very specific one.</p>",
        "id": 314565342,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1670450209
    }
]