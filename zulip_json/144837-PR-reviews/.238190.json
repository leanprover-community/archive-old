[
    {
        "content": "<p>I don't quite understand why the linter reports some lemma in PR <a href=\"https://github.com/leanprover-community/mathlib/issues/8190\">#8190</a> should be defs not lemmas?<br>\nIs that because the pointed lemmas by the linter are not proving a proposition?</p>",
        "id": 244860138,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1625406160
    },
    {
        "content": "<p>The main idea is that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/invertible\">docs#invertible</a> is data (as it contains <del>the element that is invertible in it</del> the inverse of a) as opposed to a <code>Prop</code>, and anything with data shouldn't be a lemma (there's some form of erasing that happens if so)</p>",
        "id": 244860150,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1625406186
    },
    {
        "content": "<p>Do you have examples of lemma where you would rather use the TC to infer <code>[invertible A]</code> as opposed to using <code>is_unit A</code>?</p>",
        "id": 244860358,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1625406568
    },
    {
        "content": "<p>Hi, Yakov. What do you mean by \"TC\"?</p>",
        "id": 244860703,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1625407123
    },
    {
        "content": "<p>that stands for typeclass, or possibly typeclass inference</p>",
        "id": 244860792,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1625407246
    },
    {
        "content": "<p>Should I add <code>norm</code> in line 383 before <code>lemma inv_eq_nonsing_inv_of_invertible</code>?</p>",
        "id": 244907587,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1625473517
    },
    {
        "content": "<p>I've never seen <code>@[norm]</code> before - where did you see it used?</p>",
        "id": 244914553,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625478048
    },
    {
        "content": "<p>Eric, I have never seen it in mathlib neither. I  have only seen <code>norm : simplified attribute</code> in lean. I added it as I saw \"The <code>simp</code> normal form tries to normalize <code>⅟a</code> to <code>a ⁻¹</code>. Otherwise, it pushes <code>⅟</code> inside the expression as much as possible\" in invertible.lean, which makes me think <code>a ⁻¹</code> is a normalized form of <code>⅟a</code>.<br>\nPerhaps just delete it for safety.</p>",
        "id": 244915795,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1625478914
    },
    {
        "content": "<blockquote>\n<p>I have only seen norm : simplified attribute in lean</p>\n</blockquote>\n<p>Can you elaborate on precisely where you saw that?</p>",
        "id": 244916000,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625479036
    },
    {
        "content": "<p>I saw it in <code>#print attributes</code></p>",
        "id": 244916869,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1625479589
    },
    {
        "content": "<p>I assume <a href=\"https://leanprover-community.github.io/mathlib_docs/attributes.html#norm\">attr#norm</a> goes nowhere</p>",
        "id": 244924838,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625484860
    },
    {
        "content": "<p>the only place I can find it referenced (in mathlib) is at line 106 in the <code>simps</code> test file</p>",
        "id": 244925608,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1625485367
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/blob/65ad4ffdb3abac75be748554e3cbe990fb1c6500/library/init/meta/simp_tactic.lean#L598\">https://github.com/leanprover-community/lean/blob/65ad4ffdb3abac75be748554e3cbe990fb1c6500/library/init/meta/simp_tactic.lean#L598</a></p>",
        "id": 244926231,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1625485836
    },
    {
        "content": "<p>this seems to be where it's defined</p>",
        "id": 244926240,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1625485840
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>  Are you working on a new PR to replace this PR? If so, I think I am not to spend more time on this one. If not, I will finish the work left for this one. Please let me know.</p>",
        "id": 244941129,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1625494536
    },
    {
        "content": "<p>I just opened <a href=\"https://github.com/leanprover-community/mathlib/issues/8201\">#8201</a>. I wasn't intending to replace your PR, just to rework the existing proofs that are already in master. If your PR has new lemmas, they are probably still worth having once 8201 has gone in</p>",
        "id": 244942050,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625494997
    },
    {
        "content": "<p>Yes, my PR does have new lemmas. I used some lemmas that may seem unhelpful to you is for proving new lemmas.  As you have added new things in <a href=\"https://github.com/leanprover-community/mathlib/issues/8201\">#8201</a>, the proofs may be able to be further improved.</p>",
        "id": 244943508,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1625495745
    },
    {
        "content": "<p>How can I update the lib for <a href=\"https://github.com/leanprover-community/mathlib/issues/8190\">#8190</a> after <a href=\"https://github.com/leanprover-community/mathlib/issues/8201\">#8201</a> has been merged?</p>",
        "id": 244946801,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1625497594
    },
    {
        "content": "<p>You can run <code>git pull origin master</code>, and then you'll need to solve the conflicts, assuming there are any</p>",
        "id": 244949068,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625498897
    },
    {
        "content": "<p>If you don't want to wait for the merge (it will probably be two hours or so), you can run <code>git pull origin eric-wieser/tidy-nonsingular-inverse</code></p>",
        "id": 244949136,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1625498946
    }
]