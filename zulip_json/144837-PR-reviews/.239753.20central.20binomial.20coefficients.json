[
    {
        "content": "<p>Towards Bertrand's postulate, <a href=\"https://github.com/leanprover-community/mathlib/pull/9753\">https://github.com/leanprover-community/mathlib/pull/9753</a> proves two bounds (one rather weak but good enough for Erdös, and one somewhat stronger used in the Tochiori proof) on <code>nat.choose (2 * n) n</code>. The weaker bound is really quite a lot weaker than the strong bound (but it holds for <code>0 &lt; n</code> rather than <code>3 &lt; n</code>); I could believe it's right to just delete it, as its interest is mostly historical.</p>\n<p>Remaining to do on that PR is a certain identity of binomial coefficients (<a href=\"https://github.com/leanprover-community/mathlib/pull/9753/files#diff-3a50df2258d371d37976a6df76ec92f84abdaac9eb39c112bfb254996860ae1dR123\">https://github.com/leanprover-community/mathlib/pull/9753/files#diff-3a50df2258d371d37976a6df76ec92f84abdaac9eb39c112bfb254996860ae1dR123</a>), which I suspect will be rather grungy unless we find the right additions to the <code>nat.choose</code> API. If anyone fancies that, please do it!</p>",
        "id": 257843627,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1634401812
    },
    {
        "content": "<p>Now ready for review. Two outstanding questions, really: should I just delete the weaker bound entirely, and where should the tiny little arithmetic proofs go (I think they might be novel?!)</p>",
        "id": 257860471,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1634417581
    },
    {
        "content": "<p>Why are you proving <code>central_binom_induction</code> through <em>addition</em>? This is clearly a multiplicative property.</p>",
        "id": 257861064,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634418113
    },
    {
        "content": "<p>What I foresee is that you have to be careful because of nat division. There are several ways out of this:</p>\n<ul>\n<li>multiply everything out, then you can use the <code>nat.factorial</code> API as is</li>\n<li>go into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85556em;vertical-align:-0.16667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span>. I suspect we're missing API about that. I recently added some related API for <code>nat.asc_factorial</code> and <code>nat.desc_factorial</code> but not exactly what you need I'm afraid.</li>\n</ul>",
        "id": 257861303,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634418337
    },
    {
        "content": "<p>Yes, I know it's insane from a maths perspective, but I thought I'd give it a go with just what was there and it turned out to work really very easily</p>",
        "id": 257863463,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1634420371
    },
    {
        "content": "<p>It's actually less insane than it looked - three of those lines, for no reason at all, prove something of the form <code>a = b = c = a</code> before proceeding</p>",
        "id": 257863553,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1634420452
    },
    {
        "content": "<p>This PR is ready again as far as I'm concerned.</p>",
        "id": 258812477,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1634979535
    }
]