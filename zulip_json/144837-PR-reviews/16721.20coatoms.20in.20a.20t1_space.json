[
    {
        "content": "<p>I'm very confused. The build failed with a deterministic timeout (this is only after having recently merged master). But when I download the oleans and run <code>lean -T100000 src/topology/sheaves/presheaf_of_functions.lean</code> then it happily succeeds. Also, it succeeds when I have it open in VS Code with the same 100k timeout set. So, what happened during the build? Should I just retry?</p>",
        "id": 303058466,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1665259051
    },
    {
        "content": "<p>I'm going to retry, but if anyone want to take a look, here is the run: <a href=\"https://github.com/leanprover-community/mathlib/actions/runs/3211108316/jobs/5249043275\">https://github.com/leanprover-community/mathlib/actions/runs/3211108316/jobs/5249043275</a></p>",
        "id": 303059030,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1665259456
    },
    {
        "content": "<p>It's causing bors failure as well: <a href=\"https://github.com/leanprover-community/mathlib/actions/runs/3211416019/jobs/5249570763\">https://github.com/leanprover-community/mathlib/actions/runs/3211416019/jobs/5249570763</a> Needs another speedup I guess!</p>",
        "id": 303062044,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1665262016
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span> I'm not sure it's a real problem. I just re-ran the build and it succeeded.</p>",
        "id": 303064279,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1665263813
    },
    {
        "content": "<p>I am really torn by all of this. Random timeouts seem to be becoming more and more of an issue. Hopefully this will all go away with Lean 4 so perhaps the strategy is just to grit our teeth until then...</p>",
        "id": 303064442,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665263956
    },
    {
        "content": "<p>I've written the speedup. Just PRing...</p>",
        "id": 303066629,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665265703
    },
    {
        "content": "<p>I also PR'd <a href=\"https://github.com/leanprover-community/mathlib/pull/16873\">#16873</a> ...</p>",
        "id": 303067040,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1665266056
    },
    {
        "content": "<p>Thanks! You beat me to it :-) The reason I did it was that I wanted to review Chris Birkbeck's modular forms PR and he just bumped master and it timed out on the same lemma :-(</p>",
        "id": 303067204,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665266256
    },
    {
        "content": "<p>It turns out there are two other slow declarations in the same file that takes 13s and 4s to check respectively; the culprits again are the autofill <code>map_id'</code> and <code>map_comp'</code> fields. I've sped up them in <a href=\"https://github.com/leanprover-community/mathlib/pull/16873\">#16873</a> as well. The observation is that the tactic (<code>tidy</code>?) used to autofill in these fields can be really slow now; presumably it wasn't the case when the file was written. Other category files have seen the same problem as well. So what has changed in the meantime? Is the slowdown due to algebraic instance hierarchy becoming more complicated (I think unlikely) or it having access to more lemmas (can we restrict the lemmas it use)?</p>\n<p>You can see to manually fill in those fields I mostly just need <code>ext</code> (with <code>cases</code> at two locations) and <code>refl</code> for <code>map_id</code> and <code>refl</code> suffices for <code>map_comp</code>; a bit counterintuitive that <code>id</code> is more complicated than <code>comp</code>, right? This weirdness is due to the lack of definitional eta in Lean 3, so that e.g. <code>x</code> is not defeq to <code>⟨x.val, x.property⟩</code>. With definitional eta in Lean 4, <code>map_id</code> should be solvable by a single <code>refl</code>.</p>",
        "id": 303075846,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1665274382
    },
    {
        "content": "<p>Thanks! Scott once told me that things like this make him sad but at this point the speedups are more important than this I guess :-/</p>",
        "id": 303077575,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665276354
    }
]