[
    {
        "content": "<p>This didn't get merged in month <code>floor Ï€</code>. Let's get it merged on April Fools Day!</p>",
        "id": 162213984,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554101866
    },
    {
        "content": "<p>the github constraints are kind of annoying... you can't merge stuff without first updating the branch, even if there are no conflicts, and then it takes an hour before travis runs... I used my admin privileges to merge anyway this time</p>",
        "id": 162214261,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1554102191
    },
    {
        "content": "<p>That's not specific to this PR, right?</p>",
        "id": 162214327,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554102281
    },
    {
        "content": "<p>no</p>",
        "id": 162214331,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1554102285
    },
    {
        "content": "<p>And we don't want Travis to use even more caches, because there should be some place where we recompile from scratch</p>",
        "id": 162214351,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554102329
    },
    {
        "content": "<p>but if I have a few minutes to look at PRs usually I only have time to update the branch, then travis runs, and I get pulled away... and I come back and something else has merged in the meantime and we are back to square one</p>",
        "id": 162214356,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1554102346
    },
    {
        "content": "<p>Yep, I understand.</p>",
        "id": 162214400,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554102364
    },
    {
        "content": "<p>Which means that we need to fix some workflow issues.</p>",
        "id": 162214408,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554102377
    },
    {
        "content": "<p>I think it should be okay to merge a branch that is not up to date if github can merge automatically</p>",
        "id": 162214425,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1554102417
    },
    {
        "content": "<p>there is a small possibility of travis breakage</p>",
        "id": 162214439,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1554102433
    },
    {
        "content": "<p>Hmmm... green lights from Travis don't mean much if they are several weeks old</p>",
        "id": 162214443,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554102440
    },
    {
        "content": "<p>For example, you might need to bump up type class search depth. That has occurred a couple of times lately.</p>",
        "id": 162214450,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554102469
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Anyway, thanks for merging!</p>",
        "id": 162215404,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554103552
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Is there something that we can do about this issue?</p>",
        "id": 162226090,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554114671
    },
    {
        "content": "<p>Because it's not good if merging PRs becomes an annoying bureaucratic dance...</p>",
        "id": 162226123,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554114713
    },
    {
        "content": "<p>I think the larger the PRs the worse it will be</p>",
        "id": 162248432,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554131921
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> Why's that? I got the impression from Mario that it will just be one hour of Travis-compiling before each merge...</p>",
        "id": 162250761,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554133400
    },
    {
        "content": "<p>With smaller PRs, it's easier to take the risk and just merge even if it's not completely up to master</p>",
        "id": 162251119,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554133619
    },
    {
        "content": "<p>Right...</p>",
        "id": 162251339,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554133785
    },
    {
        "content": "<p>Could we let Travis use <code>cache-olean</code> somehow?</p>",
        "id": 162251409,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554133809
    },
    {
        "content": "<p>It already does</p>",
        "id": 162251425,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554133830
    },
    {
        "content": "<p>The other thing we can do is reduce inter-modular dependencies. That will bring re-build time down</p>",
        "id": 162251455,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554133858
    },
    {
        "content": "<p>I haven't followed this whole saga. How much of a nightmare is it actually?</p>",
        "id": 162251540,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554133919
    },
    {
        "content": "<p>So why is it taking <code>&gt; 1hr</code> to check?</p>",
        "id": 162251731,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554134037
    },
    {
        "content": "<p>That just means we get very bad VMs</p>",
        "id": 162251797,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554134061
    },
    {
        "content": "<p>Maybe we need to reconsider running our own CI.</p>",
        "id": 162251798,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554134061
    },
    {
        "content": "<p>Because if this is creating a frustrating experience for maintainers, then we get a frustrating experience for contributors, and we end up with a frustrated community...</p>",
        "id": 162251799,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554134061
    },
    {
        "content": "<p>Look at the PR queue to get an idea of the nightmare.</p>",
        "id": 162251823,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554134079
    },
    {
        "content": "<p>Is the number of PRs we receive increasing or are we getting worse at handling them?</p>",
        "id": 162251984,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554134178
    },
    {
        "content": "<p>Maybe a bit of both</p>",
        "id": 162252010,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554134202
    },
    {
        "content": "<p>What makes you say that? The queue grows but if it's just because we get more requests, it's only an indicator of our popularity</p>",
        "id": 162252096,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554134254
    },
    {
        "content": "<p>The growth of the queue has made me very reluctant to start PR'ing the stuff we have in the perfectoid project. <a href=\"https://github.com/leanprover-community/lean-perfectoid-spaces/tree/master/src/for_mathlib\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean-perfectoid-spaces/tree/master/src/for_mathlib\">https://github.com/leanprover-community/lean-perfectoid-spaces/tree/master/src/for_mathlib</a> there's what we have waiting for you. But what's the point of just adding it to the pile?</p>",
        "id": 162252826,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1554134753
    },
    {
        "content": "<p>Beside making the build faster, what do you guys think would make the situation better?</p>",
        "id": 162253074,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554134920
    },
    {
        "content": "<p>It was Mario's post above which concerned me. Making it easier for Mario would make the situation better.</p>",
        "id": 162253116,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1554134954
    },
    {
        "content": "<p>You mean?</p>\n<blockquote>\n<p>Mario Carneiro: but if I have a few minutes to look at PRs usually I only have time to update the branch, then travis runs, and I get pulled away... and I come back and something else has merged in the meantime and we are back to square one</p>\n</blockquote>",
        "id": 162253254,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554135049
    },
    {
        "content": "<p>Yes that.</p>",
        "id": 162253478,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1554135209
    },
    {
        "content": "<p>Ok, no matter how fast we make the build, we're not going to fix this without a change of workflow</p>",
        "id": 162253537,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554135242
    },
    {
        "content": "<p>Yes I see.</p>",
        "id": 162253615,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1554135293
    },
    {
        "content": "<p>In my opinion it's not that big a deal if the master branch occasionally fails to build, particularly when we have the <code>lean-3.4.2</code> branch head which is always supposed to build.</p>",
        "id": 162253646,
        "sender_full_name": "Reid Barton",
        "timestamp": 1554135308
    },
    {
        "content": "<p>Every time a PR is merged there are now 50 PR's which need updating to mathlib master. The question is whether to update them all or to gamble.</p>",
        "id": 162253704,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1554135358
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> when you update a branch which you're ready to merge, you can tag it as \"ready-to-merge\" and post on the maintainer channel to ask someone available to merge it when it's done building.</p>",
        "id": 162253790,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554135388
    },
    {
        "content": "<p>I would vote for merging without check, and then fixing if needed.</p>",
        "id": 162253855,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1554135470
    },
    {
        "content": "<p>for small PRs I agree</p>",
        "id": 162253910,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554135486
    },
    {
        "content": "<p>For larger PR, the best might be to have a sort of merge queue: we update the head of the queue, when it builds we merge it and then do the same for the next.</p>",
        "id": 162253962,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554135545
    },
    {
        "content": "<p>right now only I and other admins have permission to merge without check. Some github option is causing a problem?</p>",
        "id": 162254174,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1554135668
    },
    {
        "content": "<p>I agree with Reid that <code>3.4.2</code> is <em>stable</em> and will always build. So it doesn't matter too much if master sometimes breaks. I also like Simon's proposal of a \"ready-to-merge\" queue.</p>",
        "id": 162257592,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554138040
    },
    {
        "content": "<p><a href=\"https://mergify.io\" target=\"_blank\" title=\"https://mergify.io\">https://mergify.io</a> Free for open source repositories.</p>",
        "id": 162258364,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1554138553
    }
]