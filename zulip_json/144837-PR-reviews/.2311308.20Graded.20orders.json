[
    {
        "content": "<p>This PR is finally ready for review again!</p>",
        "id": 270086893,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643655988
    },
    {
        "content": "<p>Do people expect any more from it? This PR is at the intersection of 4 (four!) projects of mine, so is quite blocking.</p>",
        "id": 271344237,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644439316
    },
    {
        "content": "<p>Should we stop the bikeshedding? We could not find the precise definitions we settled on in the literature but the literature itself is very inconsistent (indicating that the precise definition doesn't matter much) and we managed to base 3k lines of code on it.</p>",
        "id": 275000991,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1647017650
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span></p>",
        "id": 275000997,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1647017655
    },
    {
        "content": "<p>One thing I'm happy to do is to generalize the codomain of the grade. I have absolutely no use for it, but it can be done.</p>",
        "id": 275001107,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1647017716
    },
    {
        "content": "<p>I'm concerned that the definitions here aren't the correct ones - let alone for mathlib. Have any significant <em>theorems</em> been proved using these definitions?</p>",
        "id": 275002009,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1647018056
    },
    {
        "content": "<p>In my view this isn't bikeshedding, it's important to get these definitions right (or at least, with justified design decisions).</p>",
        "id": 275002109,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1647018106
    },
    {
        "content": "<p>Combinatorics the Rota Way by Kung et al, page 9 <a href=\"/user_uploads/3121/GU0CpzJikJDbb_3nOujyTB-0/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/GU0CpzJikJDbb_3nOujyTB-0/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/GU0CpzJikJDbb_3nOujyTB-0/image.png\"></a></div><p>Lacks the strict monotonicity condition we have but matches otherwise, including being general to multiple minimal elements.</p>",
        "id": 275011486,
        "sender_full_name": "Grayson Burton",
        "timestamp": 1647022174
    },
    {
        "content": "<p>Note that the differences between all the definitions are mostly about minimal elements. But cases we currently care about (<code>finset</code>, <code>list</code>,  <code>finpartition</code>, polytopes, ...) all have a <strong>bottom</strong> element. So In practice those definitions are all equivalent.</p>",
        "id": 275011995,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1647022417
    },
    {
        "content": "<p>This PR looks good to me now - the definition is phrased in a natural and general way, and it includes translations for textbook definitions. Does anyone else have comments before I hit merge?</p>",
        "id": 279681746,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1650548615
    },
    {
        "content": "<p>LGTM</p>",
        "id": 279682526,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1650548953
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> Do we have some natural examples of graded orders in mathlib? E.g. finite dimensional subspaces of a vector space, with grading coming from the dimension?</p>",
        "id": 282827296,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652897739
    },
    {
        "content": "<p>Not yet. I have <code>multiset</code>, <code>finset</code>, <code>list</code>, <code>prod</code> on a branch. Do you need one in particular?</p>",
        "id": 282827400,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652897780
    },
    {
        "content": "<p>My student <span class=\"user-mention\" data-user-id=\"488747\">@Michael Blyth</span> might eventually need the finite dimensional subspaces one I mentioned above, but not immediately.</p>",
        "id": 282827467,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652897822
    },
    {
        "content": "<p>Is \"finite dimensional subspaces\" a type in mathlib?</p>",
        "id": 282827477,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652897826
    },
    {
        "content": "<p>I don't think so.</p>",
        "id": 282827507,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652897844
    },
    {
        "content": "<p>WIll it ever be? because that's how <a href=\"https://leanprover-community.github.io/mathlib_docs/find/grade_order\">docs#grade_order</a> works.</p>",
        "id": 282827547,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652897873
    },
    {
        "content": "<p>It seems like a natural linear analogue of <code>finset</code>, so why not?!</p>",
        "id": 282827635,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652897928
    },
    {
        "content": "<p>Cool <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> I was afraid I would have to define \"locally graded orders\" or something of sort</p>",
        "id": 282834622,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652901185
    },
    {
        "content": "<p>How would it be to formalize putting an order on <a href=\"https://leanprover-community.github.io/mathlib_docs/find/FinVect\">docs#FinVect</a> where <code>V &lt;= W</code> if there is a monomorphism <code>V -&gt; W</code> and then using dimension for the graded order?</p>",
        "id": 282836173,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1652901863
    },
    {
        "content": "<p>Does that not only give us subspaces of finite dimensional vector spaces, rather than finite dimensional vector subspaces?</p>",
        "id": 282836401,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652901971
    },
    {
        "content": "<p>We already have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.subobject\">docs#category_theory.subobject</a></p>",
        "id": 282836611,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652902076
    },
    {
        "content": "<p>And, yeah, I was referring to the lattice of finite dimensional subspaces of a fixed (arbitrary) vector space.</p>",
        "id": 282837762,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652902542
    },
    {
        "content": "<p>This is like the subcategory of compact objects of the lattice of all subspaces, considered as a category in the usual way.</p>",
        "id": 282837907,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652902611
    },
    {
        "content": "<p>I guess one approach could be to define the sub-poset of compact objects of a poset. Do we have something like this in mathlib?</p>",
        "id": 282837976,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1652902663
    },
    {
        "content": "<p>Could you use the embedding <code>FinVect -&gt; Vect</code> to restrict to the subspaces of some vector space?</p>",
        "id": 282837989,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1652902671
    },
    {
        "content": "<p>I think not. But to be fair compact objects are more <span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span>'s thing than mine (although I swore to change that <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span>)</p>",
        "id": 282838066,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652902700
    },
    {
        "content": "<p>Also, I was just wondering earlier about <code>FinVect</code>; it doesn't really give a lattice of subspaces, since you probably want them to be \"true\" subobjects (identified with their subsets) so the lattice operations are just union/intersection, etc.</p>",
        "id": 282838181,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1652902777
    },
    {
        "content": "<p>Yeah probably the best thing to do is to define <code>findim_submodule</code>, with a <code>set_like</code> instance and all the nice API.</p>",
        "id": 282838668,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652903032
    }
]