[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span>, could you explain what you meant by</p>\n<blockquote>\n<p>It might be worth also defining the &lt; relations as the obvious thing analogous to &lt;= and supplying the field lt_iff_le_not_le.</p>\n</blockquote>",
        "id": 162094750,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1553905089
    },
    {
        "content": "<p>I'm not sure what this entails.</p>",
        "id": 162094752,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1553905095
    },
    {
        "content": "<p>there is a <code>prod.lex</code> function that produces <code>&lt;</code> relations, and you could define a similar one for <code>&lt;=</code></p>",
        "id": 162094836,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1553905195
    },
    {
        "content": "<p>Basically <code>lt := \\lam (x1, y1) (x2, y2), x1 &lt; x2 \\/ (x1 = x2 /\\ y1 &lt; y2)</code></p>",
        "id": 162094840,
        "sender_full_name": "Reid Barton",
        "timestamp": 1553905198
    },
    {
        "content": "<p>You can actually use <code>lex (&lt;) (&lt;=)</code> for le too, I think.</p>",
        "id": 162094903,
        "sender_full_name": "Reid Barton",
        "timestamp": 1553905248
    },
    {
        "content": "<p>Sorry, still confused. Where does something need to be changed/added?</p>",
        "id": 162095056,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1553905479
    },
    {
        "content": "<p>In the definition of the preorder instance there are optional fields you didn't supply</p>",
        "id": 162095151,
        "sender_full_name": "Reid Barton",
        "timestamp": 1553905565
    },
    {
        "content": "<p>oh! okay</p>",
        "id": 162095180,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1553905653
    },
    {
        "content": "<p>Done. I'm happy with this now.</p>",
        "id": 162103914,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1553920563
    },
    {
        "content": "<p>What do you think about instead using <code>prod.lex</code> to define the ordering?</p>",
        "id": 162105675,
        "sender_full_name": "Reid Barton",
        "timestamp": 1553923646
    },
    {
        "content": "<p>It's not used all that widely, but you could reuse <code>lex.decidable</code>, for example</p>",
        "id": 162105804,
        "sender_full_name": "Reid Barton",
        "timestamp": 1553923897
    },
    {
        "content": "<p>meh, I'm not that excited to do this.</p>",
        "id": 162106280,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1553924787
    },
    {
        "content": "<p>Would you object if the PR were to magically change to use <code>prod.lex</code>?</p>",
        "id": 162197840,
        "sender_full_name": "Reid Barton",
        "timestamp": 1554075993
    },
    {
        "content": "<p>Not at all.</p>",
        "id": 162197844,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554076016
    },
    {
        "content": "<p>I just don't see the reason for someone to do that work. :-)</p>",
        "id": 162197853,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554076053
    }
]