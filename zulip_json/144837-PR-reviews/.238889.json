[
    {
        "content": "<p>In this PR, I am attempting to define a general <code>sub_add_monoid</code> structure on <code>with_top R</code> when given <code>sub_add_monoid R</code>. I originally thought that one just lifts the subtraction into the modified top, getting the \"definitional\" lemmas of:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">coe_sub</span> <span class=\"o\">[</span><span class=\"n\">has_sub</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">with_top</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">top_sub</span> <span class=\"o\">[</span><span class=\"n\">has_sub</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">with_top</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">with_top</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"bp\">⊤</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">sub_top</span> <span class=\"o\">[</span><span class=\"n\">has_sub</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">with_top</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"bp\">⊤</span> <span class=\"bp\">=</span> <span class=\"bp\">⊤</span> <span class=\"o\">:=</span>\n<span class=\"n\">rec_top_coe</span> <span class=\"n\">rfl</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"n\">x</span>\n</code></pre></div>\n<p>but upon some more thought and encountering <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ennreal.has_sub\">docs#ennreal.has_sub</a>, <code>sub_top</code> looks problematic. How I'd like to use this structure is in tropical algebra, and while no text specifies this exactly (as far as I've seen), I think they rely on <code>⊤ - x  ≤  y - ⊤</code> to be false. That is, something akin to the <code>ennreal.sub</code> definition when subtraction of the top element gives the lowest possible element.</p>",
        "id": 251830199,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1630651823
    },
    {
        "content": "<p>That means the <code>sub</code> definition I have now is not relevant to <code>with_top</code>, but solely to a <code>option</code>.</p>",
        "id": 251830245,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1630651864
    },
    {
        "content": "<p>Doesn't it rather mean that it is only relevant to bounded lattices?</p>",
        "id": 251830480,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1630652019
    },
    {
        "content": "<p>Is subtraction not definable unless working over a <code>has_Inf R</code>? Or should I not even define subtraction on <code>with_top R</code> at all, and define my own <code>div_inv_monoid (tropical (with_top R))</code> when I have a <code>(conditionally)_complete_linear_order R</code>?</p>",
        "id": 251830503,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1630652036
    },
    {
        "content": "<p>I am very dubious about this definition. It's simply not a reasonable general choice of subtraction on <code>with_top R</code>. I think I'm going to mark this PR as WIP, and leave it to <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> to articulate the motivation here, or close the PR.</p>",
        "id": 252253777,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1630992606
    }
]