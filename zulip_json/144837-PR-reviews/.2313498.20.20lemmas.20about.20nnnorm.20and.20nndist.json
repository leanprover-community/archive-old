[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib/pull/13498\">#13498</a>, there are a <a href=\"https://github.com/leanprover-community/mathlib/pull/13498/files#r852088395\">couple</a> of <a href=\"https://github.com/leanprover-community/mathlib/pull/13498/files#diff-90e32d13f34bab9226c69820a1bdeb5033a8f23158557af1463011bb15c27e21R187\">places</a> where <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mem_set_of_eq\">docs#mem_set_of_eq</a> doesn't apply, and I'm forced to unfold <code>set.mem</code> to make progress. Does anyone have any ideas why this might be happening?</p>",
        "id": 279380465,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650358294
    },
    {
        "content": "<p>Random thought: <a href=\"https://github.com/leanprover-community/mathlib/pull/13480\">#13480</a> uses <code>parallelogram_law_with_norm_real</code>, although I haven't tried whether <code>parallelogram_law_with_norm</code> would work instead.</p>",
        "id": 279380624,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1650358387
    },
    {
        "content": "<p><code>mem_set_of_eq</code> typically fails to apply when the type of the member and of the set do not match.</p>",
        "id": 279380769,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1650358459
    },
    {
        "content": "<p>Ah, so maybe one has type <code>subtype ((≤) (0 : ℝ))</code> and the other has type <code>nnreal</code></p>",
        "id": 279380891,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650358550
    },
    {
        "content": "<p>Yes, or something of sort</p>",
        "id": 279380950,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1650358565
    },
    {
        "content": "<p>Thanks, I was able to fix it by making a copy of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/subtype.coe_image\">docs#subtype.coe_image</a> for <code>nnreal</code>.</p>",
        "id": 279393959,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650366393
    }
]