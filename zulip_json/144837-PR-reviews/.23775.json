[
    {
        "content": "<p>As a step along the way to <code>nat_cases</code>, and I think independently useful, I've significantly upgraded the <code>fin_cases</code> tactic.</p>",
        "id": 159603659,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1551350447
    },
    {
        "content": "<p>It used to just case bash on <code>fin n</code> hypotheses; now it can case bash <code>finset</code>, <code>list</code>, and <code>fintype</code> hypotheses.</p>",
        "id": 159603710,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1551350517
    },
    {
        "content": "<p>e.g.</p>\n<div class=\"codehilite\"><pre><span></span>instance (n : ℕ) : decidable (prime n) := decidable_prime_1 n\nexample (x : ℕ) (h : x ∈ (range 10).filter prime) : x = 2 ∨ x = 3 ∨ x = 5 ∨ x = 7 :=\nbegin\n  fin_cases h; exact dec_trivial\nend\n</pre></div>",
        "id": 159603760,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1551350535
    },
    {
        "content": "<p>Nice!</p>",
        "id": 159603791,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1551350580
    },
    {
        "content": "<p>I suggest that <code>fin_cases</code> accept a list of terms as an argument, that should match the cases that are being produced. This gives you the opportunity to choose what they look like so you don't get wild nat.adds</p>",
        "id": 159622520,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551367106
    },
    {
        "content": "<p>like in this case <code>fin_cases h with [2,3,5,7]</code></p>",
        "id": 159622538,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551367120
    }
]