[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> Nice work! Monster PR again (-; Can we now prove that <code>exp</code> is the derivative of <code>exp</code>?</p>",
        "id": 164641435,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556732542
    },
    {
        "content": "<p>Not really a monster PR, as a good part of it is mostly boring boilerplate, but necessary to make sure than all natural functions one might want to use are indeed there. Have a look at <a href=\"https://github.com/sgouezel/mathlib/blob/41cdebbc91e326c6a702f0b9ef7935fe853b4e66/src/analysis/normed_space/deriv.lean#L555\" target=\"_blank\" title=\"https://github.com/sgouezel/mathlib/blob/41cdebbc91e326c6a702f0b9ef7935fe853b4e66/src/analysis/normed_space/deriv.lean#L555\">https://github.com/sgouezel/mathlib/blob/41cdebbc91e326c6a702f0b9ef7935fe853b4e66/src/analysis/normed_space/deriv.lean#L555</a> and at the next 400 lines, say :)</p>",
        "id": 164646385,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556736004
    },
    {
        "content": "<p>Many further things are needed to prove (without add hoc arguments) that the derivative of <code>exp</code> is <code>exp</code>: power series, term by term differentiation, and one-dimensional derivative. I am not going in this direction, my goal is to do manifolds and I don't need <code>exp</code> for this -- well, until I do Lie groups...</p>",
        "id": 164646621,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556736190
    },
    {
        "content": "<p>Manifolds will be a wonderful addition to Lean :-)</p>",
        "id": 164647227,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556736632
    },
    {
        "content": "<p>Sébastien, did you get the opportunity to discuss manifolds with Assia?</p>",
        "id": 164647254,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556736660
    },
    {
        "content": "<p>Except that to prove anything serious on manifolds I will need partitions of unity, and for this I will need bump functions, and for this I need to know that <code>exp(1/x)</code> is infinitely flat, and for this I need the derivative of <code>exp</code>. It is really hard to construct anything serious when the bases are not here yet!</p>",
        "id": 164647477,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556736837
    },
    {
        "content": "<p>And I would also need convolution to smoothen functions, and for this I need integrals :(</p>",
        "id": 164647542,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556736860
    },
    {
        "content": "<p>Why don't you do integrals? It shouldn't take you more than a couple of days, right?</p>",
        "id": 164647573,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556736896
    },
    {
        "content": "<p>Defining it would not be too bad, but proving all the useful bits is a lot of work. I think <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span>  mentioned he wanted to give this to a student.</p>",
        "id": 164647958,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556737186
    },
    {
        "content": "<blockquote>\n<p>Sébastien, did you get the opportunity to discuss manifolds with Assia?</p>\n</blockquote>\n<p>Not yet. Between committees and conferences, I am not often in Nantes currently.</p>",
        "id": 164648055,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556737215
    },
    {
        "content": "<p>The roadmap for manifolds is appearing though. Aren't minimal surfaces trendy at the minute? That's another analysis-y thing...</p>",
        "id": 164650653,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556739271
    },
    {
        "content": "<p>Yes, there is a clear roadmap: let's have Sébastien doing it!</p>",
        "id": 164651527,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556740006
    },
    {
        "content": "<p>This is a very much improved version of our previous roadmap (let's have Patrick doing it)</p>",
        "id": 164651549,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556740032
    },
    {
        "content": "<p>Nice! Paula Neeley has done the product rule and has been specializing definitions to the univariate case. When the semester is over, I'll help her clean up the code and do a pull request. And yes, another student, Zhouhang Zhou, has been working on the Bochner integral, and will be working on that over the summer. If there is any danger of a bottleneck (i.e. someone can't do something because they are waiting for something else) let me know and we can try to work around it.</p>",
        "id": 164730684,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1556820317
    },
    {
        "content": "<p>I've got some PhD students here asking me if they could help developing Riemannian geometry <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> <span aria-label=\"oops\" class=\"emoji emoji-1f643\" role=\"img\" title=\"oops\">:oops:</span> <br>\nI'll tell them that they should be patient for a while \"waiting for several someone elses\".<br>\nAlternatively, they should start proving that <code>exp</code> is the derivative of <code>exp</code>.</p>",
        "id": 164730873,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556820452
    },
    {
        "content": "<p>O.k., let's just keep each other informed, so we are not stepping on each others' toes. Paula and Joe are still learning, but both plan to devote time to this over the summer.</p>",
        "id": 164731135,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1556820606
    },
    {
        "content": "<p>I would really like to know that the derivative of sine is cosine. This is a fact which kids in the UK are \"taught\" at school so it comes up in maths departments quite naturally.</p>",
        "id": 164731163,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556820646
    },
    {
        "content": "<blockquote>\n<p>I've got some PhD students here asking me if they could help developing Riemannian geometry <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> <span aria-label=\"oops\" class=\"emoji emoji-1f643\" role=\"img\" title=\"oops\">:oops:</span> <br>\nI'll tell them that they should be patient for a while \"waiting for several someone elses\".<br>\nAlternatively, they should start proving that <code>exp</code> is the derivative of <code>exp</code>.</p>\n</blockquote>\n<p>If your student wants a nice project, I think singular (co)homology would be awesome. I mean, interesting to do, not completely crazy, and incredibly useful.</p>",
        "id": 164737049,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556824906
    },
    {
        "content": "<p>If I remember correctly, that's the very first thing Johan tried to do</p>",
        "id": 164737135,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556824965
    },
    {
        "content": "<p>I even finished the definition (-;</p>",
        "id": 164737145,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556824978
    },
    {
        "content": "<blockquote>\n<p>If there is any danger of a bottleneck (i.e. someone can't do something because they are waiting for something else) let me know and we can try to work around it.</p>\n</blockquote>\n<p>I don't think there are bottleneck issues, there are enough things to be done in orthogonal directions. I definitely won't touch one-dimensional derivatives nor integrals.</p>",
        "id": 164737146,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556824981
    },
    {
        "content": "<p>So you don't intend to work on the implicit function theorem?</p>",
        "id": 164737175,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556825007
    },
    {
        "content": "<p>Not in a one-dimensional setting, where you really take advantage of the identification between <code>k -&gt;L[k] E</code> and <code>E</code>.</p>",
        "id": 164737299,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556825095
    },
    {
        "content": "<p>I've one student who is going to write a bachelor thesis, and it will most likely be on simplicial sets. My intention is that the code will go into mathlib after that. But we'll have to see how it goes.</p>",
        "id": 164737308,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556825103
    },
    {
        "content": "<p>How do you do the inverse function theorem without the one-dimensional case?</p>",
        "id": 164737356,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556825131
    },
    {
        "content": "<p>I don't know yet what the PhD students plan to do. First of all they should sort out if they should actually do anything with Lean instead of writing a thesis <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 164737376,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556825146
    },
    {
        "content": "<p>I don't think I know any proof of the mean value inequality without doing the 1-dimensional case first</p>",
        "id": 164737426,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556825163
    },
    {
        "content": "<p>This is clearly sorted out: they shouldn't play with Lean. But it doesn't mean they won't</p>",
        "id": 164737447,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556825194
    },
    {
        "content": "<p>It sounds like the good ol' Gitter days, we have two interleaving conversations!</p>",
        "id": 164737480,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556825227
    },
    {
        "content": "<p>You mean, to prove that a C^1 function is locally Lipschitz? It's true the natural proof is 1-dimensional, but I guess it is not too hard to circumvent.</p>",
        "id": 164737617,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556825341
    },
    {
        "content": "<p>Yes, that's what I mean. Maybe you can circumvent it, but I don't know how</p>",
        "id": 164737736,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556825418
    },
    {
        "content": "<p>You even want one dimensional target</p>",
        "id": 164737744,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556825427
    },
    {
        "content": "<p>(Hahn-Banach give you that)</p>",
        "id": 164737757,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556825447
    },
    {
        "content": "<p>For instance. Fix <code>x</code>, and consider the set of points <code>y</code>for which <code>d(f(y),f(x)) &lt;= C d(x,y)</code> where <code>C</code>is larger than an upper bound on your derivative. I claim that it is closed (clear by continuity) and open (use the definition of the derivative with <code>o</code>). Then it is everything.</p>",
        "id": 164737906,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556825542
    },
    {
        "content": "<p>I'll need to see it formalized before believing it</p>",
        "id": 164737992,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556825639
    },
    {
        "content": "<p>Hahn-Banach is another nice theorem that is yet to be proved. Johan, you can give it to your student (in the version with convex functions as in the French wikipedia, not the English one which has too many assumptions). He will be surprised at how nontrivial the formalization will be, I would guess :)</p>",
        "id": 164738071,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556825685
    },
    {
        "content": "<blockquote>\n<p>I'll need to see it formalized before believing it</p>\n</blockquote>\n<p>Challenge accepted.</p>",
        "id": 164738103,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556825708
    },
    {
        "content": "<p>I'll need to see Fermat-Wiles formalized before believing it</p>",
        "id": 164738242,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556825799
    },
    {
        "content": "<blockquote>\n<p>Hahn-Banach is another nice theorem that is yet to be proved. Johan, you can give it to your student (in the version with convex functions as in the French wikipedia, not the English one which has too many assumptions). He will be surprised at how nontrivial the formalization will be, I would guess :)</p>\n</blockquote>\n<p>I'm not sure if there is anyone around that could seriously work on that project. I really don't want to encourage those PhD students... but if they ask for suggestions, I'll let them know.</p>",
        "id": 164738977,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556826331
    },
    {
        "content": "<p>Playing with Lean is definitely a bad idea for PhD students in the current state of affairs.</p>",
        "id": 164739117,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556826437
    },
    {
        "content": "<blockquote>\n<p>I'll need to see Fermat-Wiles formalized before believing it</p>\n</blockquote>\n<p>It seems it didn't work. But it was worth trying.</p>",
        "id": 164739239,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556826538
    },
    {
        "content": "<p>Just read the proof! Although it uses Langlands--Tunnell, and I'll need to see Langlands--Tunnell formalised before I believe it...</p>",
        "id": 164740144,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556827162
    },
    {
        "content": "<blockquote>\n<p>Playing with Lean is definitely a bad idea for PhD students in the current state of affairs.</p>\n</blockquote>\n<p>If you aren't careful, they might end up doing formalization full time</p>",
        "id": 164742132,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556828526
    },
    {
        "content": "<p>Sure. The question is: what can they do next? How do they get a job?</p>",
        "id": 164742190,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556828593
    },
    {
        "content": "<p>We have to make jobs for these people.</p>",
        "id": 164745961,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556831568
    },
    {
        "content": "<p>I had a go at the mean value inequality. Turns out I had to use an argument along segments. But still the proof works fine without adding anything specific about one-dimensional derivatives, see <a href=\"https://github.com/sgouezel/mathlib/blob/aa7fbab39d1e6a01665e24e6197b09338e855467/src/geometry/manifolds/basic.lean#L244\" target=\"_blank\" title=\"https://github.com/sgouezel/mathlib/blob/aa7fbab39d1e6a01665e24e6197b09338e855467/src/geometry/manifolds/basic.lean#L244\">https://github.com/sgouezel/mathlib/blob/aa7fbab39d1e6a01665e24e6197b09338e855467/src/geometry/manifolds/basic.lean#L244</a>. Not PRed because it needs <a href=\"https://github.com/leanprover-community/mathlib/issues/966\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/966\">#966</a>.</p>",
        "id": 164883674,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1556998909
    },
    {
        "content": "<p>It's feel nice to me to see I still have a correct idea of what needs to be done to prove the mean value inequality</p>",
        "id": 164884033,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556999485
    },
    {
        "content": "<p>Maybe we need a notation to write <code>ℝ-differentiable_on f (Icc 0 1)</code> instead of <code>differentiable_on ℝ f (Icc 0 1)</code> which really like <code>f</code> is differentiable on <code>ℝ</code></p>",
        "id": 164884121,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556999613
    },
    {
        "content": "<blockquote>\n<p>which is straightforward but tedious for lack of automation</p>\n</blockquote>\n<p>What kind of automation do you have in mind?</p>",
        "id": 164884173,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556999654
    },
    {
        "content": "<p>First, automation to show that a complicated function, built out of elementary pieces, is differentiable. I.e., apply iteratively all the rules differentiable.add, differentiable.sub, differentiable.smul, and so on. This is just a matter of setting up a list of the theorems one wants to apply, and try to apply iteratively all of them, except that <code>apply</code> does not work very well in this context (known bug or limitation, I think, when there are too many forall's in definitions you need to help <code>apply</code> by providing just the right number of underscores).This kind of thing would also be needed for continuity, for measurability, and so on.</p>\n<p>And second, automation to check that the derivative of a function is given by some other function, again by applying iteratively the algorithmic formulas for the derivative until there is nothing left.</p>",
        "id": 164885522,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1557001827
    },
    {
        "content": "<p>Can type class inference not prove that complicated functions are differentiable?</p>",
        "id": 164885938,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1557002473
    },
    {
        "content": "<p>Did <code>back</code> ever get merged? If so I could PR my <code>continuity</code> tactic at some point</p>",
        "id": 164886004,
        "sender_full_name": "Reid Barton",
        "timestamp": 1557002574
    },
    {
        "content": "<p>Type class inference doesn't work too well for checking continuity because the basic tool is <code>continuous.comp</code> but the type class system is too simple to understand when applying <code>continuous.comp</code> is a good idea (and probably rightfully so)</p>",
        "id": 164886096,
        "sender_full_name": "Reid Barton",
        "timestamp": 1557002735
    },
    {
        "content": "<p>No, <code>back</code> did not get merged. It at first grew wildly in scope, then I realised I could write a usable <code>library_search</code> much more simply, and then I haven't had time to get back to it.</p>",
        "id": 164896713,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1557021664
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> that sounds like something which could be (partly) handled with an appropriate suite of simp lemmas</p>",
        "id": 164901162,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1557029755
    },
    {
        "content": "<p>It might be similar to the <code>hom</code> tactic that Scott and I have been working on. (See the <code>hom-tactic</code> branch.)</p>",
        "id": 164903721,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1557034854
    },
    {
        "content": "<p>Indeed, this tactic will be mostly a wrapper around simp... after deriving the appropriate set of equalities from the context</p>",
        "id": 164903731,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1557034912
    }
]