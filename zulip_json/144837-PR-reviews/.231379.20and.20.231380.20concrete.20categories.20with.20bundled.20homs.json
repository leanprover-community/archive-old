[
    {
        "content": "<p>Hi, we have two independent PRs that introduce concrete categories with bundled morphisms, one from <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> , and one from me. Let's discuss how to take the best from both.</p>\n<p>My proposal:</p>\n<ul>\n<li>use <code>bundled.lean</code> and <code>bundled_hom</code> class from <a href=\"https://github.com/leanprover-community/mathlib/issues/1379\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1379\">#1379</a>;</li>\n<li>may be, move <code>bundled.lean</code> to <code>src/data</code>;</li>\n<li>use <code>concrete_category</code>, <code>has_forget</code>, and <code>of_hom_class</code> from <a href=\"https://github.com/leanprover-community/mathlib/issues/1380\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1380\">#1380</a>.</li>\n</ul>\n<p>Probably this means merge <a href=\"https://github.com/leanprover-community/mathlib/issues/1379\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1379\">#1379</a> first, then update <a href=\"https://github.com/leanprover-community/mathlib/issues/1380\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1380\">#1380</a>, and look into it again.</p>",
        "id": 174684419,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1567387131
    },
    {
        "content": "<p>As per the comment on github, this sounds good to me!</p>",
        "id": 174689415,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1567397086
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>, regarding the desirability or otherwise of \"explicit proofs\", and <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> complaining that some things previously done by <code>tidy</code> no longer were:</p>\n<p>I think there's nothing necessarily wrong with replacing an \"automated proof\" with an \"explicit proof\", and indeed if the automation is running painfully slowly, it's a good thing to do. However, I find that<br>\n1. checking that all the easy proofs _can_ be done by automation is an excellent test of whether I have all my <code>simp</code> lemmas, coercions, instances, and <code>ext</code> lemmas set up correctly! <code>tidy</code> failing on something dumb often reveals a gap<br>\n2. trying to automate away \"more proofs than really necessary\" is an excellent driver for improving the automation!<br>\n3. finally, reading developments where all the \"boring\"/\"easy\" proofs are entirely invisible, because of automation, is much easier --- I only have to pay attention to the interesting bits, rather than having to identify the 90% of the text which is too boring to bother understanding.</p>",
        "id": 176072470,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1568874488
    }
]