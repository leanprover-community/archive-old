[
    {
        "content": "<p>This PR builds locally. It brings <code>simp?</code> to mathlib. Improvements in usability should probably be done in follow-up PRs.</p>",
        "id": 224008679,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611649651
    },
    {
        "content": "<p>I've fixed the tests, so CI is now also happy</p>",
        "id": 224040314,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611668835
    },
    {
        "content": "<p>Is <code>simp?</code> the same as <code>squeeze_simp</code>?</p>",
        "id": 224040680,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611669011
    },
    {
        "content": "<p>roughly speaking, but it should be faster and have less failures in edge cases</p>",
        "id": 224040726,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611669039
    },
    {
        "content": "<p>I think it's meant to be more reliable.</p>",
        "id": 224040727,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611669040
    },
    {
        "content": "<p>But right now <code>squeeze_simp</code> has a bit more functionality in terms of <code>Try this</code> support.<br>\nE.g., if you add <code>{contextual := tt}</code> then <code>squeeze_simp</code> will copy that to the <code>Try this</code> output, but <code>simp?</code> does not (yet).</p>",
        "id": 224040891,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611669118
    },
    {
        "content": "<p>Also <code>simpa</code> isn't modified yet.</p>",
        "id": 224040954,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611669131
    },
    {
        "content": "<p>But this can all be done in future PRs by people more capable than me.</p>",
        "id": 224040983,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611669146
    },
    {
        "content": "<p>Oh gosh, you did it?? Congratulations! I'm in mobile and can't see an easy way to jump to the PR, hence the dumb questions</p>",
        "id": 224041310,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611669306
    },
    {
        "content": "<p>On the desktop app I think there's a link in the title</p>",
        "id": 224041361,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611669334
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/5895\">#5895</a> for mobile users</p>",
        "id": 224041516,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1611669391
    },
    {
        "content": "<p>Oh my goodness me. If someone had told you in 2017 Johan that you'd be writing code like that in 2021, who knows what you would have thought</p>",
        "id": 224041928,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611669586
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.235895.20bump.20to.203.2E25.2E0/near/224040983\">said</a>:</p>\n<blockquote>\n<p>But this can all be done in future PRs by people more capable than me.</p>\n</blockquote>\n<p>Will those PRs have to go to core Lean or mathlib? Do you have a roadmap in mind?</p>",
        "id": 224060751,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611677028
    },
    {
        "content": "<p>I don't have much of a roadmap. I think most things can happen in mathlib now.</p>",
        "id": 224061382,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611677264
    },
    {
        "content": "<p>But if I did something stupid or inefficient in C++, then we will have to fix core as well</p>",
        "id": 224061420,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611677282
    },
    {
        "content": "<p>Is the eventual goal to remove <code>squeeze_*</code> someday? If so, do you mind creating an issue somewhere with a list of TODOs? </p>\n<p>Should we mention <code>simp?</code> in any of our documentation?</p>",
        "id": 224063122,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611677924
    },
    {
        "content": "<p>Yes, it would be good to do both those things. I think <code>simp?</code> can replace <code>squeeze_simp</code> eventually.</p>",
        "id": 224069137,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611680369
    },
    {
        "content": "<p>I'll do it later, I'm about to enter a virtual meeting.</p>",
        "id": 224069190,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611680394
    },
    {
        "content": "<p>I wrote something in <a href=\"https://github.com/leanprover-community/mathlib/issues/5901\">#5901</a></p>",
        "id": 224084203,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611686710
    },
    {
        "content": "<p>Is it worth making another quick release of Lean to include <span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span>'s fix <a href=\"https://github.com/leanprover-community/lean/issues/520\">lean#520</a> for use in <a href=\"https://github.com/leanprover-community/mathlib/issues/5440\">#5440</a>? I can get this done in a few hours and my (possibly unfounded) guess is that it won't affect any of the rest of mathlib.</p>",
        "id": 224099878,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611693767
    },
    {
        "content": "<p>Fine with me.</p>",
        "id": 224100781,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611694159
    },
    {
        "content": "<p>But we can also have two bump PR's in a row. I don't care.</p>",
        "id": 224100807,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611694173
    },
    {
        "content": "<p>OK. I couldn't leave well enough alone, so 3.26.0c is coming out soon...</p>",
        "id": 224101894,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611694669
    },
    {
        "content": "<p>BTW it's not important, but isn't this the sort of change that the third version component is for?</p>",
        "id": 224106357,
        "sender_full_name": "Reid Barton",
        "timestamp": 1611696589
    },
    {
        "content": "<p>Oh, maybe. I considered making it 3.25.1c but I wasn't sure if it was \"too big\" of a fix or not.</p>",
        "id": 224106558,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611696670
    },
    {
        "content": "<p>These days the \"cool guys\" just bump the major version number whenever they feel like it, right? Shouldn't we be releasing mathlib 57 in a couple of days?</p>",
        "id": 224138218,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611720707
    },
    {
        "content": "<p>Is there anything we want to check/test before merging this?</p>",
        "id": 224151116,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611735509
    }
]