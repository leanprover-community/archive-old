[
    {
        "content": "<blockquote>\n<p>refactor(measure_theory/integral): restrict interval integrals to real intervals <a href=\"https://github.com/leanprover-community/mathlib/pull/12754\">#12754</a> </p>\n</blockquote>\n<p>Could integration experts please decide whether this improvement in UX outweighs the loss in generality?</p>",
        "id": 276011597,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1647845190
    },
    {
        "content": "<p>Some previous discussion: <a href=\"#narrow/stream/116395-maths/topic/interval.20integral.3A.20do.20we.20need.20.60.CE.B1.20.E2.89.A0.20real.60.3F\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/interval.20integral.3A.20do.20we.20need.20.60.CE.B1.20.E2.89.A0.20real.60.3F</a></p>",
        "id": 276015606,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1647849341
    },
    {
        "content": "<p>After casting my vote in the poll contained in thread Ruben linked, there is now a majority in favour of merging. I think it really comes down to <a href=\"#narrow/stream/116395-maths/topic/interval.20integral.3A.20do.20we.20need.20.60.CE.B1.20.E2.89.A0.20real.60.3F/near/270037186\">Reid's point</a> and we should just merge this.</p>",
        "id": 276090082,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1647885321
    },
    {
        "content": "<p>I'm very hesitant to comment as I don't touch this area much, but is it maybe correct to fix this at the notation end? i.e. change the definition to <code>notation `∫` binders ` in ` a `..` b `, ` r:(scoped:60 f, f) ` ∂` μ:70 := interval_integral r (a : ℝ) b μ</code> and if you want <code>interval_integral</code> over some crazy space, then you have to not use the notation/use another one?</p>",
        "id": 276090525,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647885566
    },
    {
        "content": "<p>I actually view the proposed more restrictive definition of <code>interval_integral</code> as a benefit, rather than a cost: it simplifies the theory, I bet c.100% of the time <code>interval_integral</code> will be used for <code>α = ℝ</code>, and the alternative <code>∫ x in Ioc a b, f x ∂μ</code> for a general <code>α</code> is absolutely acceptable IMO. Nevertheless, the notation solution is neat too.</p>",
        "id": 276092120,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1647886242
    },
    {
        "content": "<p>But it would mean that API devs can't use the notation xor the API is developed for <code>α = ℝ</code> nonetheless.</p>",
        "id": 276092258,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1647886301
    },
    {
        "content": "<p>Great point; I'm not so keen on the notation solution in view of this.</p>",
        "id": 276092365,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1647886328
    },
    {
        "content": "<p>Then we can make the general notation local and the restricted notation global once the API is done.</p>",
        "id": 276092530,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1647886412
    },
    {
        "content": "<p>That sounds really confusing</p>",
        "id": 276093672,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1647886921
    },
    {
        "content": "<p>How so? It will be literally the same notation.</p>",
        "id": 276094693,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1647887319
    },
    {
        "content": "<p>I'm really wary of crippling definitions for the sake of convenience. If this is merged, I very well see someone coming along undoing this very PR in six months or so.</p>",
        "id": 276094846,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1647887377
    },
    {
        "content": "<p>I doubt that because the main convenience of interval integrals is that we have theorems like FTC, and these theorems assume <code>a b : real</code>.</p>",
        "id": 276136414,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1647915490
    }
]