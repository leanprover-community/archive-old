[
    {
        "content": "<p>The results proven in <a href=\"https://github.com/leanprover-community/mathlib/pull/15286\">#15286</a> may look odd, but what they amount to is that you can do induction on an unordered pair as long as either entry decreases. So far, I've found this useful in two completely unrelated places.</p>",
        "id": 290527615,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658504486
    },
    {
        "content": "<p>is this useful for the associativity proof? do we have that yet?</p>",
        "id": 290528420,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1658504789
    },
    {
        "content": "<p>I probably would have found that PR a lot easy to follow if</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">game_add</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"n\">fst</span> <span class=\"o\">{</span><span class=\"n\">a'</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">rα</span> <span class=\"n\">a'</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">game_add</span> <span class=\"o\">(</span><span class=\"n\">a'</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">snd</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b'</span> <span class=\"n\">b</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">rβ</span> <span class=\"n\">b'</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">game_add</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b'</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>were in some file about orders on products rather than surrounded with <code>game</code> stuff</p>",
        "id": 290528533,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658504851
    },
    {
        "content": "<p>We could do that move</p>",
        "id": 290529706,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658505339
    },
    {
        "content": "<p>In truth the hydra file doesn't have much to do with games, even though we created it to prove a result about games</p>",
        "id": 290530017,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658505463
    },
    {
        "content": "<p>Its main result is the well-foundedness of the <code>cut_expand</code> relation, which basically amounts to \"you always win a certain hydra game\"</p>",
        "id": 290530111,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658505490
    },
    {
        "content": "<p>We could move and even rename <code>game_add</code> and <code>game_add_swap</code> to another file</p>",
        "id": 290530153,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658505505
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2315286.20induction.20on.20an.20unordered.20pair/near/290528420\">said</a>:</p>\n<blockquote>\n<p>is this useful for the associativity proof? do we have that yet?</p>\n</blockquote>\n<p>Associativity of what?</p>",
        "id": 290530190,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658505518
    },
    {
        "content": "<p>surreal multiplication</p>",
        "id": 290530259,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1658505543
    },
    {
        "content": "<p>I don't think it's useful after how we've modified the proof, but it would have been useful in an initial draft</p>",
        "id": 290530382,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658505602
    },
    {
        "content": "<p>It is useful when defining <code>≤</code> on games, since it means we no longer need to define both <code>≤</code> and <code>⧏</code> at the same time through mutual induction</p>",
        "id": 290530483,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658505631
    },
    {
        "content": "<p>I also used it to prove some basic results about von Neumann ordinals</p>",
        "id": 290531875,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658506215
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2315286.20induction.20on.20an.20unordered.20pair/near/290528420\">said</a>:</p>\n<blockquote>\n<p>is this useful for the associativity proof? do we have that yet?</p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/pgame.mul_assoc_equiv\">docs#pgame.mul_assoc_equiv</a> has been there for a long time. What's recently done is well-definedness of surreal multiplication (i.e. that multiplication respects game equivalence) and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mul_pos\">docs#mul_pos</a>, so we know surreals form a <a href=\"https://github.com/leanprover-community/mathlib/compare/surreal_mul_symm'#diff-cfb19983c79209e00ac093e670e2db956ca48e00238011a5854479250cbaec67R740\">linear_ordered_comm_ring</a> now.</p>",
        "id": 290532761,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1658506609
    },
    {
        "content": "<p>Here's an idea, what about moving <code>game_add</code> and <code>game_add_swap</code> to a new file <code>order/game_rels.lean</code>?</p>",
        "id": 290576623,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658530692
    },
    {
        "content": "<p>Seems niche, but it might demystify these relations a bit</p>",
        "id": 290576647,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658530717
    }
]