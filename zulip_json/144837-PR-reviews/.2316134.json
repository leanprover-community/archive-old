[
    {
        "content": "<p>In this PR I am adding a <code>smul_mem_class</code> and <code>submodule_class</code> to the <code>set_like</code> hierarchy. The <code>fails_quickly</code> linter complains. My machine isn't powerful enough to figure out the problem with <code>mk_all</code>, but if I import only the file contiaining the declaration and I trace the class intances, I got the attached output. I didn't see anything clearly wrong, but I would appreciate someone taking a look. <a href=\"/user_uploads/3121/k8ptOlUuO_FrR_t8BWBUUGGu/trace2.txt\">trace2.txt</a></p>",
        "id": 302719484,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1665082343
    },
    {
        "content": "<p>Sorry for the late reply! In my experience, all of the <code>measure_theory.lp</code> definitions have the tendency to complicate instance search really badly because they look like a definition that takes an instance on a definition that takes an instance on etc. and I think unification will become exponential in the depth of this chain.</p>\n<p>My first suggestion would be to try taking <code>add_submonoid_class</code> as a parameter to <code>submodule_class</code>, rather than extending it. Shortening the bundled path should remove some of the expensive defeq checks. Maybe this change will also avoid awkwardness when something is both an <code>add_subgroup_class</code> and a <code>submodule_class</code>.</p>",
        "id": 304914376,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1666172507
    },
    {
        "content": "<p>(By the way, feel free to request a review from me on these kinds of PRs, then I won't miss them!)</p>",
        "id": 304914665,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1666172638
    }
]