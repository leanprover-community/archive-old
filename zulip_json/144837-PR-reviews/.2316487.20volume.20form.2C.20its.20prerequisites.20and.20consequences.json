[
    {
        "content": "<p>I'd like to ping <a href=\"https://github.com/leanprover-community/mathlib/pull/16475\">#16475</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/16476\">#16476</a> and <a href=\"https://github.com/leanprover-community/mathlib/pull/16479\">#16479</a>, small facts about linear algebra and combinatorics which are prerequisites for <a href=\"https://github.com/leanprover-community/mathlib/pull/16477\">#16477</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/16478\">#16478</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/16487\">#16487</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/16490\">#16490</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/16596\">#16596</a> (the volume form, the cross-product, and a refactor of oriented angles).</p>",
        "id": 301444924,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1664459539
    },
    {
        "content": "<p>I have a very generic question for all of that. This is probably very stupid and you have thought about it already: if I understand it correctly you are using <code>inner_product_space</code> all the way, correct? If we go to manifolds, wouldn't it be easier to use just a bilinear form and define everything without the bilinear form bundled into an <code>inner_product_space</code>. Stating smoothness of the Riemannian metric sounds like a complicated thing if our vector bundle is an <code>inner_product_space</code>. Of course it should be possible to work around this, but then Riemannian metrics are defined in very different fashion than every other type of tensor on a manifold.</p>",
        "id": 301494894,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1664473063
    },
    {
        "content": "<p>In Riemannian manifolds, I definitely expect that the tangent spaces will have an <code>inner_product_space</code> structure.</p>",
        "id": 301502179,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1664475131
    },
    {
        "content": "<p>More precisely, a Riemannian structure on a manifold will involve a bunch of stuff, notably a smooth section of the bundle of bilinear forms, the fact that it takes values in positive definite forms, and an inner product space structure on each fiber, and a compatibility condition saying that the inner product structure comes from the given section of bilinear forms. In the end, it is important that there is a typeclass <code>inner_product_space</code> on the tange bundle because that's the way we want to think of the tangent space, and we want to be able to apply all theorems of Euclidean geometry there.</p>",
        "id": 301502814,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1664475299
    },
    {
        "content": "<p>Thanks all for the reviews.  <a href=\"https://github.com/leanprover-community/mathlib/pull/16478\">#16478</a> is the next in this series.</p>",
        "id": 302167046,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1664840143
    },
    {
        "content": "<p>The PR actually defining the volume form is now ready, <a href=\"https://github.com/leanprover-community/mathlib/pull/16487\">#16487</a>.</p>",
        "id": 302749090,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1665093836
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"412682\">Moritz Doll</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2316487.20volume.20form.2C.20its.20prerequisites.20and.20consequences/near/301494894\">said</a>:</p>\n<blockquote>\n<p>I have a very generic question for all of that. This is probably very stupid and you have thought about it already: if I understand it correctly you are using <code>inner_product_space</code> all the way, correct? If we go to manifolds, wouldn't it be easier to use just a bilinear form and define everything without the bilinear form bundled into an <code>inner_product_space</code>. Stating smoothness of the Riemannian metric sounds like a complicated thing if our vector bundle is an <code>inner_product_space</code>. Of course it should be possible to work around this, but then Riemannian metrics are defined in very different fashion than every other type of tensor on a manifold.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"412682\">@Moritz Doll</span> To answer this question of yours:  It would be possible to do a bit of Riemannian geometry even before we have vector bundles.  For example, you could give the following ad hoc definition of a Riemannian manifold: an inner product space instance on each tangent space, together with the assumption that, for all smooth vector fields <code>v</code> and <code>w</code>, the function <code>λ x, ⟪v x, w x⟫</code> is smooth.</p>\n<p>You could use this to define an <code>emetric_space</code> structure, a measure, and even define scalar curvature as</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>r</mi><mo>→</mo><msup><mn>0</mn><mo>+</mo></msup></mrow></msub><mfrac><mrow><msup><mi>r</mi><mi>n</mi></msup><mtext>[volume of euclidean ball]</mtext><mo>−</mo><mi mathvariant=\"normal\">vol</mi><mo>⁡</mo><msub><mi>B</mi><mi>r</mi></msub></mrow><msup><mi>r</mi><mn>2</mn></msup></mfrac></mrow><annotation encoding=\"application/x-tex\">\\lim_{r\\to 0^+}\\frac{r^n\\text{[volume of euclidean ball]} -\\operatorname{vol} B_r}{r^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mop\"><span class=\"mop\">lim</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3419em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\"><span class=\"mord mtight\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7027em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mbin mtight\">+</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7463em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385em;\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord text mtight\"><span class=\"mord mtight\">[volume of euclidean ball]</span></span><span class=\"mbin mtight\">−</span><span class=\"mop mtight\"><span class=\"mord mathrm mtight\">vol</span></span><span class=\"mspace mtight\" style=\"margin-right:0.1952em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p>(up to some constant).  And prove that for Euclidean space, the sphere, the hyperbolic plane, projective space, .... these give the expected <code>emetric_space</code> structure, measure, and scalar curvature definition.  Maybe also define the gradient of a scalar function, study its flow and do some Morse theory ...</p>",
        "id": 302751396,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1665094936
    },
    {
        "content": "<p>The rest of this series concerns the geometry of oriented real inner product spaces in specific, low dimensions.  <a href=\"https://github.com/leanprover-community/mathlib/pull/16490\">#16490</a> and <a href=\"https://github.com/leanprover-community/mathlib/pull/16928\">#16928</a> are now ready for review.  <a href=\"https://github.com/leanprover-community/mathlib/pull/16490\">#16490</a> constructs the cross product on an oriented 3-dimensional inner product space.  <a href=\"https://github.com/leanprover-community/mathlib/pull/16928\">#16928</a> constructs the \"rotation-by-90-degrees\" map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi></mrow><annotation encoding=\"application/x-tex\">J</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span></span></span></span>, and friends, on an oriented 2-dimensional inner product space.</p>",
        "id": 303744487,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1665623242
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16490\">#16490</a> (cross product) is still open.  The final PR is now also ready for review: <a href=\"https://github.com/leanprover-community/mathlib/pull/16596\">#16596</a>, a <code>+460 −1,049</code> refactor of  oriented angles.</p>",
        "id": 305224678,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1666294904
    },
    {
        "content": "<p>I left some review on <a href=\"https://github.com/leanprover-community/mathlib/pull/16490\">#16490</a></p>",
        "id": 305316648,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1666346222
    }
]