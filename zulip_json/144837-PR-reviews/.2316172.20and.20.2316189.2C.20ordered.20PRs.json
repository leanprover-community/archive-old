[
    {
        "content": "<p>Dear All,</p>\n<p>PRs <a href=\"https://github.com/leanprover-community/mathlib/pull/16172\">#16172</a> and <a href=\"https://github.com/leanprover-community/mathlib/pull/16189\">#16189</a> have complementary goals, but overlap quite a bit in <code>algebra.order.ring</code>.</p>\n<p>Here is a quick summary of the differences: I think that they are both valuable additions, but whichever one gets merged first will give a few problems to the other, dealing with merge conflicts.</p>\n<p>Yaël's PR introduces an intermediate class <code>oredered_semiring</code>, whose name corresponds more closely to what mathematicians would imagine.  What is currently called <code>ordered_semiring</code> is renamed to <code>ordered_cancel_semiring</code>.  On top of that, the PR has to deal with the shifting of lemmas and instances linking the new class with the rest of the algebraic/order canvas.</p>\n<p>My PR removes lemmas from <code>algebra.order.ring</code> that already exist with weaker assumptions in <code>algebra.order.monoid_lemmas_zero_lt</code>.  If you look at the diff, removed lemmas are now superfluous, lemmas that changed name have had their name align with the name of the removed lemma.</p>\n<p>One final difference is our dealing with <code>decidable</code>.  I've been conservative, since I do not really understand it: no decidable lemmas have been harmed by my PR.  Yaël has been (I think) more thorough in the replacement and has removed some of them.  I consider this a minor point, though others may disagree.</p>\n<p>To conclude: I think that renaming <code>ordered_semiring</code> to <code>ordered_cancel_semiring</code> is the way to go.  I also like to have the class whose name occupies the void left by the rename.  Also, the order refactor naturally leads to replacing lemmas for the older classes to lemmas with mixin hypotheses.  These two changes are happening now: one in each PR!</p>\n<p>Comments are very welcome!</p>\n<p>Thanks!</p>",
        "id": 294761022,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1661199569
    },
    {
        "content": "<p>Disclaimer: I have not discussed this post with Yaël, so the above is my personal view of his PR and he may disagree with what I said!  <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 294762088,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1661200096
    },
    {
        "content": "<p>To be clear, the <code>decidable</code> lemmas existed because they would otherwise require choice (and were used to prove basic properties of <code>ℕ</code> and <code>ℤ</code> so apparently people wanted them choice-free). And they are now gone because none of them requires choice anymore. The reason for having choice in the first place was for proving monotonicity of addition from its strict monotonicity coming from <code>ordered_semiring</code>, but now <code>ordered_semiring</code> directly states monotonicity.</p>",
        "id": 294763476,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661200767
    },
    {
        "content": "<p>Choice is still required for <code>nat</code> lemmas in Yaël's PR currently. It's probably because <code>ordered_cancel_semiring.to_ordered_semiring</code> requires choice. You can use <code>#print axioms nat.mul_self_le_mul_self</code> to display the axioms that <code>nat.mul_self_le_mul_self</code> depends on.</p>",
        "id": 294829091,
        "sender_full_name": "FR",
        "timestamp": 1661245760
    },
    {
        "content": "<p>Fixed.</p>",
        "id": 294916802,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661276586
    }
]