[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">euclidean_domain</span> <span class=\"bp\">ℤ</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">quotient</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"n\">x</span> <span class=\"bp\">/</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n  <span class=\"n\">remainder</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"err\">%</span><span class=\"o\">),</span>\n  <span class=\"n\">quotient_mul_add_remainder_eq</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n    <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">split_ifs</span> <span class=\"k\">with</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">zero_mod</span><span class=\"o\">,</span> <span class=\"n\">zero_mul</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"n\">add_comm</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">mod_add_div</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span>\n  <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">nat_abs</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">nat_abs</span><span class=\"o\">,</span>\n  <span class=\"n\">r_well_founded</span> <span class=\"o\">:=</span> <span class=\"n\">measure_wf</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">nat_abs</span> <span class=\"n\">a</span><span class=\"o\">),</span>\n  <span class=\"n\">remainder_lt</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">b0</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_nat_lt</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"err\">$</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">nat_abs_of_nonneg</span> <span class=\"o\">(</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">mod_nonneg</span> <span class=\"bp\">_</span> <span class=\"n\">b0</span><span class=\"o\">),</span> <span class=\"err\">←</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">abs_eq_nat_abs</span><span class=\"o\">]</span><span class=\"bp\">;</span>\n    <span class=\"n\">exact</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">mod_lt</span> <span class=\"bp\">_</span> <span class=\"n\">b0</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_left_not_lt</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">b0</span><span class=\"o\">,</span> <span class=\"n\">not_lt_of_ge</span> <span class=\"err\">$</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mul_one</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">nat_abs</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">nat_abs_mul</span><span class=\"o\">]</span><span class=\"bp\">;</span>\n    <span class=\"n\">exact</span> <span class=\"n\">mul_le_mul_of_nonneg_left</span> <span class=\"o\">(</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">nat_abs_pos_of_ne_zero</span> <span class=\"n\">b0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">zero_le</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n</pre></div>",
        "id": 157341283,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549014542
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 157341289,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549014544
    },
    {
        "content": "<p>I meant that comment as evidence that <code>euclidean_domain</code> needs an axiom to pin down the behavior of division by zero</p>",
        "id": 157341323,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549014596
    },
    {
        "content": "<p>should I include it in that PR?</p>",
        "id": 157341378,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549014617
    },
    {
        "content": "<p>I guess it's a separate PR, but it affects this one</p>",
        "id": 157341396,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549014649
    },
    {
        "content": "<p>ok I'll close this PR</p>",
        "id": 157341414,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549014665
    },
    {
        "content": "<p>no need, just rebase later</p>",
        "id": 157341421,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549014674
    },
    {
        "content": "<p>I can reopen it later right</p>",
        "id": 157341424,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549014685
    },
    {
        "content": "<p>sure</p>",
        "id": 157341628,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549014906
    }
]