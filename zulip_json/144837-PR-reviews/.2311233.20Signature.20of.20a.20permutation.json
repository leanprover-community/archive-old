[
    {
        "content": "<p>Let's try to resolve your VScode problems rather than start with a new PR, because this will likely come up in many PRs you make in future</p>",
        "id": 267059412,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641475070
    },
    {
        "content": "<p>Apparently, once I touch algebra/big_operators/multiset.lean or algebra/big_operators/basic.lean, I can't work anymore until I can get-cache again…</p>",
        "id": 267063329,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1641477436
    },
    {
        "content": "<p>I touched <code>algebra.big_operators.multiset</code> very recently, so it might be a question of you getting a cache from master and using it on your branch.</p>",
        "id": 267063433,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641477488
    },
    {
        "content": "<p>If you touch a basic file, then everything depending on it will need to be recompiled. There are two options here:</p>",
        "id": 267063521,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1641477552
    },
    {
        "content": "<ul>\n<li>either work in a file of your own, adding lemmas you need, and then once you are completely happy move them to the right file</li>\n<li>or recompile by hand (using for instance <code>lean --make src/my_target_file.lean</code>) once you have made your edits.</li>\n</ul>",
        "id": 267063670,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1641477619
    },
    {
        "content": "<p>Salut ! À propos de <br>\n<a href=\"#narrow/stream/144837-PR-reviews/topic/.2311233.20Signature.20of.20a.20permutation/near/267063433\">https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.2311233.20Signature.20of.20a.20permutation/near/267063433</a><br>\nquelle est la procédure correcte à faire ? <code>git-log</code>me dit ceci : </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">58</span><span class=\"o\">)</span> <span class=\"n\">pro</span><span class=\"bp\">-</span><span class=\"n\">acl</span> <span class=\"bp\">&gt;</span>   <span class=\"n\">git</span> <span class=\"n\">log</span> <span class=\"c1\">--graph 00c2666fd 4cfc147bc^!</span>\n<span class=\"bp\">*</span> <span class=\"n\">commit</span> <span class=\"mi\">00</span><span class=\"n\">c2666fd1f2d9fdd8ddef89b97abf69da4b9c42</span> <span class=\"o\">(</span><span class=\"n\">HEAD</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">sign_from_cycle_type'</span><span class=\"o\">,</span> <span class=\"n\">origin</span><span class=\"bp\">/</span><span class=\"n\">sign_from_cycle_type'</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">Author</span><span class=\"o\">:</span> <span class=\"n\">Antoine</span> <span class=\"n\">Chambert</span><span class=\"bp\">-</span><span class=\"n\">Loir</span> <span class=\"bp\">&lt;</span><span class=\"n\">antoine.chambert</span><span class=\"bp\">-</span><span class=\"n\">loir</span><span class=\"bp\">@</span><span class=\"n\">math.univ</span><span class=\"bp\">-</span><span class=\"n\">paris</span><span class=\"bp\">-</span><span class=\"n\">diderot.fr</span><span class=\"bp\">&gt;</span>\n<span class=\"bp\">|</span> <span class=\"n\">Date</span><span class=\"o\">:</span>   <span class=\"n\">Thu</span> <span class=\"n\">Jan</span> <span class=\"mi\">6</span> <span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">52</span><span class=\"o\">:</span><span class=\"mi\">28</span> <span class=\"mi\">2022</span> <span class=\"bp\">+</span><span class=\"mi\">0100</span>\n<span class=\"bp\">|</span>\n<span class=\"bp\">|</span>     <span class=\"n\">prod_map_pow</span> <span class=\"n\">for</span> <span class=\"n\">finsets</span>\n<span class=\"bp\">|</span>\n<span class=\"bp\">*</span> <span class=\"n\">commit</span> <span class=\"mi\">83</span><span class=\"n\">c21ea846386fa4e6d53f5526bc950cbf6ba40a</span>\n<span class=\"bp\">|</span> <span class=\"n\">Author</span><span class=\"o\">:</span> <span class=\"n\">Antoine</span> <span class=\"n\">Chambert</span><span class=\"bp\">-</span><span class=\"n\">Loir</span> <span class=\"bp\">&lt;</span><span class=\"n\">antoine.chambert</span><span class=\"bp\">-</span><span class=\"n\">loir</span><span class=\"bp\">@</span><span class=\"n\">math.univ</span><span class=\"bp\">-</span><span class=\"n\">paris</span><span class=\"bp\">-</span><span class=\"n\">diderot.fr</span><span class=\"bp\">&gt;</span>\n<span class=\"bp\">|</span> <span class=\"n\">Date</span><span class=\"o\">:</span>   <span class=\"n\">Thu</span> <span class=\"n\">Jan</span> <span class=\"mi\">6</span> <span class=\"mi\">14</span><span class=\"o\">:</span><span class=\"mi\">30</span><span class=\"o\">:</span><span class=\"mi\">48</span> <span class=\"mi\">2022</span> <span class=\"bp\">+</span><span class=\"mi\">0100</span>\n<span class=\"bp\">|</span>\n<span class=\"bp\">|</span>     <span class=\"n\">now</span> <span class=\"n\">this</span> <span class=\"n\">works</span>\n<span class=\"bp\">|</span>\n<span class=\"bp\">*</span> <span class=\"n\">commit</span> <span class=\"mi\">4</span><span class=\"n\">cfc147bcab336975ba5c1223db3597aa76ef993</span>\n  <span class=\"n\">Merge</span><span class=\"o\">:</span> <span class=\"n\">d37d9c735</span> <span class=\"n\">c391512ee</span>\n  <span class=\"n\">Author</span><span class=\"o\">:</span> <span class=\"n\">Antoine</span> <span class=\"n\">Chambert</span><span class=\"bp\">-</span><span class=\"n\">Loir</span> <span class=\"bp\">&lt;</span><span class=\"n\">antoine.chambert</span><span class=\"bp\">-</span><span class=\"n\">loir</span><span class=\"bp\">@</span><span class=\"n\">math.univ</span><span class=\"bp\">-</span><span class=\"n\">paris</span><span class=\"bp\">-</span><span class=\"n\">diderot.fr</span><span class=\"bp\">&gt;</span>\n  <span class=\"n\">Date</span><span class=\"o\">:</span>   <span class=\"n\">Thu</span> <span class=\"n\">Jan</span> <span class=\"mi\">6</span> <span class=\"mi\">11</span><span class=\"o\">:</span><span class=\"mi\">44</span><span class=\"o\">:</span><span class=\"mi\">11</span> <span class=\"mi\">2022</span> <span class=\"bp\">+</span><span class=\"mi\">0100</span>\n\n      <span class=\"n\">Merge</span> <span class=\"n\">branch</span> <span class=\"bp\">'</span><span class=\"n\">master'</span> <span class=\"n\">into</span> <span class=\"n\">sign_from_cycle_type'</span>\n\n      <span class=\"n\">to</span> <span class=\"n\">get</span> <span class=\"n\">correct</span> <span class=\"n\">cache</span>\n</code></pre></div>\n<p>Est-ce que faire <code>leanproject get-cache --rev 4cfc147bc</code> suffirait ?</p>",
        "id": 267063732,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1641477644
    },
    {
        "content": "<p>If you run <code>get-cache --fallback=download-first</code> then it will do that for you! (and yes, in that case <code>4cfc147bc</code> will definitely be better than no cache)</p>",
        "id": 267063842,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641477708
    },
    {
        "content": "<p>I try that. (Sorry for the French, it was intended as a private message, but I didn't understand Zulip's suggestion of narrowing the scope of my message.)</p>",
        "id": 267064102,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1641477852
    },
    {
        "content": "<p>A rule of thumb is: don't merge master unless you need to (because everything will need to be recompiled). When I need to merge master in a branch (for instance because of a nice addition in master that I need), I do it as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">git</span> <span class=\"n\">fetch</span> <span class=\"n\">upstream</span>\n<span class=\"n\">git</span> <span class=\"n\">merge</span> <span class=\"n\">upstream</span><span class=\"bp\">/</span><span class=\"n\">master</span>\n<span class=\"bp\">%</span> <span class=\"k\">if</span> <span class=\"n\">there</span> <span class=\"n\">are</span> <span class=\"n\">conflicts</span><span class=\"o\">,</span> <span class=\"k\">then</span> <span class=\"n\">fix</span> <span class=\"n\">the</span> <span class=\"n\">conflicts</span> <span class=\"n\">and</span> <span class=\"k\">then</span> <span class=\"k\">do</span> <span class=\"s2\">\"git merge\"</span>\n<span class=\"n\">git</span> <span class=\"n\">push</span>\n</code></pre></div>",
        "id": 267064175,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1641477912
    },
    {
        "content": "<p>Then I wait for the build to be finished in the cloud, and I do <code>leanproject up</code>.</p>",
        "id": 267064215,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1641477942
    },
    {
        "content": "<p>And for the next two hours, you work on something else ?</p>",
        "id": 267064305,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1641477979
    },
    {
        "content": "<p>Writing recommendation letters, for instance. Or refereeing papers. Or correcting my own papers. There are always countless things to be done, yes.</p>",
        "id": 267064355,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1641478023
    },
    {
        "content": "<p>But usually I merge master just before going to bed, and on the next day my fresh build is ready.</p>",
        "id": 267064408,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1641478070
    },
    {
        "content": "<p>(When I have something boring to do, with a very short deadline, I make sure to merge master to avoid the temptation to add just one more little lemma to my current Lean branch :-)</p>",
        "id": 267064543,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1641478154
    },
    {
        "content": "<p>Adding to what <span class=\"user-mention silent\" data-user-id=\"110050\">Sebastien Gouezel</span>  says, if your branch <em>doesn't</em> modify anything low level then you can run <code>leanproject get-cache --rev upstream/master</code> immediately after doing the merge as in the snippet above. That's only helpful if master has modified more lower level things than you have. If you both have, then you're doomed to wait no matter what</p>",
        "id": 267064677,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641478231
    },
    {
        "content": "<p>Is there documentation to help new contributors with this? Is it hard to find? Unclear? Almost every new contributor seems to stumble on this.</p>",
        "id": 267064757,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641478296
    },
    {
        "content": "<p>I think the closest thing may be <a href=\"https://leanprover-community.github.io/contribute/index.html#making-a-pull-request-pr\">this section</a> of the PR lifecycle page.</p>",
        "id": 267065030,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1641478462
    },
    {
        "content": "<p>There's also the <a href=\"https://leanprover-community.github.io/leanproject.html\">leanproject page</a> but I think that has a different focus.</p>",
        "id": 267065096,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1641478515
    },
    {
        "content": "<p>Thanks for these links. (On the leanproject page, about reduce_imports, the  --file  option does not work.)</p>",
        "id": 267067678,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1641480039
    },
    {
        "content": "<p>Hmm it probably got renamed or i made a mistake</p>",
        "id": 267069438,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1641480919
    },
    {
        "content": "<p>Does it work without the flag? <code>leanproject reduce-imports my_file</code> ?</p>",
        "id": 267069583,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1641480977
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130609\">Antoine Chambert-Loir</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2311233.20Signature.20of.20a.20permutation/near/267064102\">said</a>:</p>\n<blockquote>\n<p>I try that. (Sorry for the French, it was intended as a private message, but I didn't understand Zulip's suggestion of narrowing the scope of my message.)</p>\n</blockquote>\n<p>Oh no! Now they know that I'm French!</p>",
        "id": 267070211,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641481285
    },
    {
        "content": "<p>I can tell you a secret Yaël, two actually :</p>\n<ul>\n<li>There are other people here whom I know and with whom I speak French !</li>\n<li>With a double dot on your firstname, there are few other possibilities than you to be French!</li>\n</ul>",
        "id": 267093189,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1641492178
    },
    {
        "content": "<p>Since there are no double dots on my name here on Zulip (and no accent on my first name), does this mean no-one can guess I'm French?</p>",
        "id": 267094086,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1641492557
    },
    {
        "content": "<p>Are you suggesting that you are <em>in fact</em> French?</p>",
        "id": 267094510,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1641492806
    },
    {
        "content": "<p>I think anyone who heard me lecturing in English has no doubt about that :-)</p>",
        "id": 267095443,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1641493311
    },
    {
        "content": "<p>I never understood why you're not writing your name properly here, especially Sébastien would be easier to distinguish from Sebastian.</p>",
        "id": 267098954,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1641495136
    },
    {
        "content": "<p>Perhaps people might guess that I am French, but they'd be mistaken (at least not in recent family history). Although I understand a bit.</p>",
        "id": 267386287,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1641775204
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110050\">Sebastien Gouezel</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2311233.20Signature.20of.20a.20permutation/near/267094086\">said</a>:</p>\n<blockquote>\n<p>Since there are no double dots on my name here on Zulip (and no accent on my first name), does this mean no-one can guess I'm French?</p>\n</blockquote>\n<p>Well, actress Chloë Sevigny is american, so everything can happen…</p>",
        "id": 274302705,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1646568852
    }
]