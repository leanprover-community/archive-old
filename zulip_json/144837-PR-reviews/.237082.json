[
    {
        "content": "<p>Something that I cannot explain has happened in this PR.</p>\n<p>After the last successful build of the PR, I decided to clean up the various variables in the file and suddenly, the untouched file <code>algebra/char_p/basic</code> broke. However, I do not understand why: now it says that there no longer is an instance of <code>1</code> on <code>group (multiplicative R)</code>. I do not understand how this has something to do with the moving around of variables, though...</p>",
        "id": 233980373,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1618082785
    },
    {
        "content": "<p>A little bit of context: the now-broken lemma is </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- file algebra/char_p/basic</span>\n<span class=\"kd\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">char_p.cast_card_eq_zero</span> <span class=\"o\">[</span><span class=\"n\">add_group</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_one</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">fintype.card</span> <span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">fintype.card</span> <span class=\"n\">R</span> <span class=\"bp\">•</span><span class=\"n\">ℕ</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n    <span class=\"bp\">@</span><span class=\"n\">pow_card_eq_one</span> <span class=\"o\">(</span><span class=\"n\">multiplicative</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">multiplicative.of_add</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n  <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">nsmul_one</span><span class=\"o\">]</span>\n<span class=\"kd\">end</span>\n<span class=\"c\">/-</span><span class=\"cm\"> error under the (1 : R):</span>\n<span class=\"cm\">failed to synthesize type class instance for</span>\n<span class=\"cm\">R : Type u,</span>\n<span class=\"cm\">_inst_1 : add_group R,</span>\n<span class=\"cm\">_inst_2 : has_one R,</span>\n<span class=\"cm\">_inst_3 : fintype R</span>\n<span class=\"cm\">⊢ has_one (group (multiplicative R))</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>",
        "id": 233980418,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1618082843
    },
    {
        "content": "<p>Lemma <code>pow_card_eq_one</code> is changed in the PR and this is what it says:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- file group_theory/order_of_element</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">#where</span>\n<span class=\"cm\">open quotient_group subgroup nat function</span>\n<span class=\"cm\">variables {α : Type u} {H : Type v} {x : H} {a : α} {m n : ℕ} [fintype α] [fintype H] [group α] [add_group H]</span>\n<span class=\"cm\">-/</span>\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">pow_card_eq_one</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">fintype.card</span> <span class=\"n\">α</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">let</span> <span class=\"o\">⟨</span><span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">hm</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">order_of_dvd_card_univ</span> <span class=\"n\">_</span> <span class=\"n\">a</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"k\">in</span>\n<span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">hm</span><span class=\"o\">,</span> <span class=\"n\">pow_mul</span><span class=\"o\">,</span> <span class=\"n\">pow_order_of_eq_one</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 233980520,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1618082934
    },
    {
        "content": "<p>All that I did (I think) between the successful and the broken PR has been to reorganise the variables to clean up the file.  This could have had the effect of swapping around variable positions, but I do not think that this is the error that I am seeing: there is no wrong type, Lean says that it cannot produce a <code>1</code> somewhere...</p>",
        "id": 233980655,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1618083039
    },
    {
        "content": "<p>Reordering variables is exactly what breaks the build.</p>",
        "id": 233981309,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1618083611
    },
    {
        "content": "<p>Ok, so should I intertwine the <code>_</code> and terms in all possible ways until I find the correct term?  Or this will not work?</p>",
        "id": 233981359,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1618083678
    },
    {
        "content": "<p>Now it tries to find <code>has_one (group G)</code> instead of <code>has_one G</code></p>",
        "id": 233981374,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1618083711
    },
    {
        "content": "<p>Actually, I had tried this, and now I tried one that I thought I already tried and it works!</p>",
        "id": 233981421,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1618083733
    },
    {
        "content": "<p>It's better to look at the new signature of the lemma</p>",
        "id": 233981439,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1618083749
    },
    {
        "content": "<p>this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>    <span class=\"bp\">@</span><span class=\"n\">pow_card_eq_one</span> <span class=\"o\">(</span><span class=\"n\">multiplicative</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">multiplicative.of_add</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n</code></pre></div>\n<p>instead of </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"n\">pow_card_eq_one</span> <span class=\"o\">(</span><span class=\"n\">multiplicative</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">multiplicative.of_add</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n</code></pre></div>\n<p>works fine!</p>",
        "id": 233981453,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1618083765
    },
    {
        "content": "<p>Yury, thanks a lot for your support!  Knowing what <em>must</em> be the cause was really helpful!</p>",
        "id": 233981475,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1618083793
    },
    {
        "content": "<p>Of course, now I need to hope that the same reordering has not affected other parts, but now I am confident that I will manage!</p>\n<p>Thanks again!</p>",
        "id": 233981489,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1618083839
    },
    {
        "content": "<p>Also, Yury, sorry for misspelling your name: I corrected it now here, but I might have misspelled it elsewhere as well.</p>",
        "id": 233981707,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1618084017
    },
    {
        "content": "<p>Russian authorities issued 3 passports for me (next after the previous expired), each with a different transliteration of my name.</p>",
        "id": 233982186,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1618084456
    },
    {
        "content": "<p>Which transliteration do you prefer?</p>",
        "id": 233982240,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1618084531
    },
    {
        "content": "<p>The one in my username here</p>",
        "id": 233982258,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1618084560
    }
]