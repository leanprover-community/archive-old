[
    {
        "content": "<p>This PR introduces graph coloring and partitions (and functions to wander between them)</p>",
        "id": 261796109,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1637161378
    },
    {
        "content": "<p>This PR now touches <code>data/fintype/basic.lean</code> and <code>data/setoid/partition.lean</code>. Would appreciate more reviews <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 262131935,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1637357015
    },
    {
        "content": "<p>Ping</p>",
        "id": 263578059,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1638537647
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> I'm not expert enough to merge this. I left some superficial comments about how to save some lines. I've deferred to <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> for the actual merging.</p>",
        "id": 263582941,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1638539912
    },
    {
        "content": "<p>Most of the changes worked nicely but I'm rolling back the ones that broke the file. Will update the branch soon</p>",
        "id": 263585133,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1638540831
    },
    {
        "content": "<p>Ok, sorry, I didn't test them</p>",
        "id": 263585596,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1638541037
    },
    {
        "content": "<p>Np at all. I'm impressed by how you guys can rewrite and clean Lean code in Github's interface <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 263585855,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1638541149
    },
    {
        "content": "<p>Branch updated <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 263592945,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1638544277
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> Just some missing <code>$</code>'s, so I reincorporated them.</p>",
        "id": 263609981,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1638551851
    },
    {
        "content": "<p>Just to get some input before merging, this PR is touching <code>src/data/setoid/partition.lean</code> and adding a dependence on <code>data.fintype.basic</code>.  Is this ok?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">classes_ker_subset_fiber_set</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">setoid.ker</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">classes</span> <span class=\"bp\">⊆</span> <span class=\"n\">set.range</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">})</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rintro</span> <span class=\"n\">s</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩,</span> <span class=\"n\">rw</span> <span class=\"n\">set.mem_range</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">nonempty_fintype_classes_ker</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"n\">fintype</span> <span class=\"o\">(</span><span class=\"n\">setoid.ker</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">classes</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">classical</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">set.fintype_subset</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">classes_ker_subset_fiber_set</span> <span class=\"n\">f</span><span class=\"o\">)⟩</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">card_classes_ker_le</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"o\">(</span><span class=\"n\">setoid.ker</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">classes</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">fintype.card</span> <span class=\"o\">(</span><span class=\"n\">setoid.ker</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">classes</span> <span class=\"bp\">≤</span> <span class=\"n\">fintype.card</span> <span class=\"n\">β</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">classical</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">set.card_le_of_subset</span> <span class=\"o\">(</span><span class=\"n\">classes_ker_subset_fiber_set</span> <span class=\"n\">f</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">fintype.card_range_le</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 263610161,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1638551951
    },
    {
        "content": "<p>Bors behaving strangely <a href=\"https://github.com/leanprover-community/mathlib/pull/10287#issuecomment-985899284\">https://github.com/leanprover-community/mathlib/pull/10287#issuecomment-985899284</a><br>\nKyle <em>is</em> a reviewer for that PR <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 263679436,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1638587040
    },
    {
        "content": "<p>It looks like bors didn't understand Johan's comment due to the square braces. I've put your PR on the queue.</p>",
        "id": 263680086,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1638587917
    }
]