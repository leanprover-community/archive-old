[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>'s <a href=\"https://github.com/leanprover-community/mathlib/issues/4037\">#4037</a> added <code>@[simps]</code> to all <code>pi.semilattice_sup</code> etc instances. As a result, I see <code>f ≤ g</code> unfolded using one of these lemmas, with <code>semilattice_sup.le</code> in the new goal.</p>",
        "id": 216012935,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1604851662
    },
    {
        "content": "<p>Scott, what expressions you really want to simplify?</p>",
        "id": 216013000,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1604851752
    },
    {
        "content": "<p>I believe the easiest fix is to add <code>le := (≤), lt := (&lt;)</code> to these instances (untested tho).  These <code>semilattice_sup.le</code> projections should never be mentioned.</p>",
        "id": 216053250,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1604909820
    },
    {
        "content": "<p>I wonder whether we need these <code>@[simps]</code> at all.</p>",
        "id": 216075894,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1604924022
    },
    {
        "content": "<p>Taking a closer look, I agree that the simps are overkill.  At most we should only have simp lemmas for ⨆, etc. and not for ≤.</p>",
        "id": 216077310,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1604924942
    },
    {
        "content": "<p>I hope, <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> will tell us what was his intent.</p>",
        "id": 216133874,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1604950819
    },
    {
        "content": "<p>I'm sorry, I can't remember what was going on here.</p>",
        "id": 218140646,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1606526872
    },
    {
        "content": "<p>This PR was by <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span>, not Scott, right?</p>",
        "id": 218140773,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1606527064
    },
    {
        "content": "<p>(By the way, welcome back Scott! Hope all has been well.)</p>",
        "id": 218140844,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1606527172
    }
]