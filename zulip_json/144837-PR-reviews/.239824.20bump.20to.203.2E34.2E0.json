[
    {
        "content": "<p>A slightly interesting question: we took out the (lexicographic) <code>prod.has_lt</code> from core Lean, because the default order in mathlib on pairwise is the pointwise (partial) order.</p>\n<p>In at least one place (inside <code>linarith</code>) we need a <code>has_lt (expr × bool)</code>. How should I provide this? It doesn't really matter if it has any axioms, so I could just define an instance on the spot just for that special case. </p>\n<p>Alternatively, I could import <code>order.lexicographic</code>, and use <code>lex_has_lt</code>. However this assumes a <code>preorder</code> on both factors, and we only have the bare <code>has_lt</code> and <code>has_le</code> class for <code>expr</code>.</p>",
        "id": 258340905,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634723798
    },
    {
        "content": "<p>In any case, I'm done for the night on <a href=\"https://github.com/leanprover-community/mathlib/issues/9824\">#9824</a>: please anyone adopt as they like!</p>",
        "id": 258341871,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634724274
    },
    {
        "content": "<p>There shouldn't be an issue with generalizing <code>lex_has_lt</code> to require <code>has_lt</code> and <code>has_le</code> instead of <code>preorder</code>, right?</p>",
        "id": 258342213,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1634724434
    },
    {
        "content": "<p>Yup, no problem with that</p>",
        "id": 258342914,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634724777
    },
    {
        "content": "<p>I'm looking forward to <code>master</code> running on <code>3.34.0</code> when I get up in the morning, thanks. :-)</p>",
        "id": 258343069,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634724861
    },
    {
        "content": "<p>Added <code>lex</code> to <code>linartih</code>, let's see what breaks next :D</p>",
        "id": 258346870,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1634726964
    },
    {
        "content": "<p>I'm afraid I cannot add more fixes today, I hope you enjoy the 20 or so fixes I pushed in the meantime :)</p>",
        "id": 258391065,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1634744747
    }
]