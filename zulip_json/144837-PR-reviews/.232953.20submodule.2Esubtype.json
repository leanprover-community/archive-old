[
    {
        "content": "<p>They are coming... the bots are taking over. This PR was generated using tooling written by Jason Rute and Patrick Massot.</p>",
        "id": 199791684,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591296615
    },
    {
        "content": "<p>So, big thanks to them <span class=\"user-mention\" data-user-id=\"115715\">@Jason Rute</span> <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 199791750,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591296645
    },
    {
        "content": "<p>Is the tool publicly available?</p>",
        "id": 199796692,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1591298840
    },
    {
        "content": "<p>It's mostly the lean python client thing</p>",
        "id": 199797171,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591299004
    },
    {
        "content": "<p>I guess after this stress test, the extra scripting can also go public. (But I'll leave that to Jason.)</p>",
        "id": 199797282,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591299040
    },
    {
        "content": "<p>As <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> mentioned, this \"tool\" is a script written using the Trio version of <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>'s <a href=\"https://github.com/leanprover-community/lean-client-python\">Lean-Python client</a>.  The client itself suffers from <a href=\"https://github.com/leanprover-community/lean-client-python/issues\">many bugs</a> (one of which was created by 3.15.0 when the shape of the info response changed <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>).  After a long hiatus, I've come back to the project to fix some of those up.  </p>\n<p>To help Johan, I made a branch <a href=\"https://github.com/leanprover-community/lean-client-python/tree/find-and-replace-example\">find-and-replace-example</a> which provides quick fixes (no tests!) to some of the worst bugs and also adds a slightly ad-hoc script <a href=\"https://github.com/leanprover-community/lean-client-python/blob/find-and-replace-example/examples/find_and_replace.py\">find-and-replace.py</a>.</p>\n<p>The script does the following:</p>\n<ul>\n<li>it takes a directory (e.g. <code>path/to/mathlib/scr</code>), an old id (e.g. <code>submodule.subtype</code>) and a new id (<code>submodule.incl</code>) [all are just currently hard coded in the example, but easy to change]</li>\n<li>it quickly finds all instances of the string (e.g. \"subtype\") in all lean files in the directory.</li>\n<li>it then (much more slowly) calls an info request on the lean server for each example see if it is from the old id (e.g. <code>submodule.subtype</code>).</li>\n<li>it finally (with permission from the user) changes all such examples (e.g., \"subtype\" -&gt; \"incl\").</li>\n</ul>\n<p>Now, it still has a bunch of quirks, making it not a great public tool yet:</p>\n<ul>\n<li>It won't change any instance of \"subtype\" which doesn't get an info response with a <code>full-id</code> field. It doesn't even currently change the original definition, making it an poor refactor tool. <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></li>\n<li>I think the behavior of the Lean server depends on the existence of <code>.olean</code> files which can make the behavior of the script confusing.  I don't know for sure this is the cause, but sometimes when <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> runs it, it says there are no examples even though there clearly are some.</li>\n<li>It doesn't currently handle errors from the lean server.  (This might also be an issue related to <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>'s bad examples, since it wouldn't tell you if it couldn't get back information.)</li>\n</ul>",
        "id": 199815692,
        "sender_full_name": "Jason Rute",
        "timestamp": 1591309085
    }
]