[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> has proposed some snippets for declarations like <code>def</code>, etc.  I'm not sure how much they would help in practice.<br>\nWhat are your thoughts on the snippets in <a href=\"https://github.com/leanprover/vscode-lean/issues/214\">leanprover/vscode-lean#214</a>?<br>\nAre there any snippets that would make your life easier?</p>",
        "id": 205109668,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1595852417
    },
    {
        "content": "<p>It seems this list is disjoint from I find useful. The snippets I use are:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"nt\">&quot;Type*&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Type*&quot;</span><span class=\"p\">,</span>\n                <span class=\"nt\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                  <span class=\"s2\">&quot;{$1 : Type*}$0&quot;</span>\n                <span class=\"p\">],</span>\n        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Type* variable&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">&quot;Variables&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;var&quot;</span><span class=\"p\">,</span>\n                <span class=\"nt\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                  <span class=\"s2\">&quot;variables $0&quot;</span>\n                <span class=\"p\">],</span>\n        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Variables&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">&quot;set_option pp.implicit&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;#implicit&quot;</span><span class=\"p\">,</span>\n                <span class=\"nt\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                  <span class=\"s2\">&quot;set_option pp.implicit true$0&quot;</span>\n                <span class=\"p\">],</span>\n        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Pretty print implicit&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">&quot;set_option pp.all&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;#all&quot;</span><span class=\"p\">,</span>\n                <span class=\"nt\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                  <span class=\"s2\">&quot;set_option pp.all true$0&quot;</span>\n                <span class=\"p\">],</span>\n        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Pretty print all&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">&quot;Trace instance&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;#instance&quot;</span><span class=\"p\">,</span>\n                <span class=\"nt\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                  <span class=\"s2\">&quot;set_option trace.class_instances true$0&quot;</span>\n                <span class=\"p\">],</span>\n        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Trace class instances&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">&quot;Trace simp rewrite&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;#rewrite&quot;</span><span class=\"p\">,</span>\n                <span class=\"nt\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                  <span class=\"s2\">&quot;set_option trace.simplify.rewrite true$0&quot;</span>\n                <span class=\"p\">],</span>\n        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Trace simp rewrites&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">&quot;Sorry&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;sor&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"s2\">&quot;{ $0&quot;</span><span class=\"p\">,</span>\n          <span class=\"s2\">&quot;  sorry },&quot;</span>\n        <span class=\"p\">],</span>\n        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Sorry block&quot;</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">&quot;Proof&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;proof&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"s2\">&quot;begin&quot;</span><span class=\"p\">,</span>\n          <span class=\"s2\">&quot;  $0&quot;</span><span class=\"p\">,</span>\n          <span class=\"s2\">&quot;  sorry&quot;</span><span class=\"p\">,</span>\n          <span class=\"s2\">&quot;end&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">],</span>\n        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Proof tactic block&quot;</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">&quot;Library search&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;LS&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"s2\">&quot;library_search,&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">],</span>\n        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Library search&quot;</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">&quot;Split&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;split&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"s2\">&quot;split,&quot;</span><span class=\"p\">,</span>\n          <span class=\"s2\">&quot;{ $0&quot;</span><span class=\"p\">,</span>\n          <span class=\"s2\">&quot;  sorry },&quot;</span><span class=\"p\">,</span>\n          <span class=\"s2\">&quot;{ &quot;</span><span class=\"p\">,</span>\n          <span class=\"s2\">&quot;  sorry },&quot;</span>\n        <span class=\"p\">],</span>\n        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Split tactic&quot;</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">&quot;Anonymous_constructor&quot;</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">&quot;prefix&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ac&quot;</span><span class=\"p\">,</span>\n                <span class=\"nt\">&quot;body&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;⟨$0⟩&quot;</span><span class=\"p\">],</span>\n                <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Insert anonymous constructor&quot;</span>\n        <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 205111272,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1595853498
    },
    {
        "content": "<p>The expectation of having such snippets is from other programming languages but <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> makes a good point:</p>\n<blockquote>\n<p>The lean syntax does not have much boilerplate. At best I don't have to type <code>:=</code> but that's it.</p>\n</blockquote>\n<p>and \"The input abbreviation does not work in snippets\" makes the holes like <code>${1:hole_name}</code> less useful.</p>\n<p>Mostly only pairing snippets are useful such as <code>namespace</code>, <code>section</code>, Patrick's <code>proof</code>, <code>split</code>,  <code>sorry</code>, <code>ac</code>.</p>\n<p>The ones for options are great too, it would be better if they share the same unused prefix.</p>\n<p><code>var</code> is mostly useless because the problem is actually the annoying singular <code>variable</code>, so a word with a different prefix is needed here such as <code>vs</code>. <code>Type*</code> contains too many keystrokes(involving Shift) to be generally convenient.</p>",
        "id": 205117725,
        "sender_full_name": "Utensil Song",
        "timestamp": 1595857138
    }
]