[
    {
        "content": "<p>It occurred to me while I was working on something that it would be helpful to have a variant of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/list.count_singleton\">docs#list.count_singleton</a> like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">count_singleton'</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">count</span> <span class=\"n\">a</span> <span class=\"o\">[</span><span class=\"n\">b</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">ite</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">refl</span>\n</code></pre></div>\n<p>So I PRed that to <code>data/list/count</code> and then merged that branch into the branch I was working on.  But now the file I was originally working on is in permanent orange mode.  Am I right in thinking that this is because Lean is recompiling everything downstream of <code>data/list/count</code> that my file imports?</p>",
        "id": 265436536,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639854369
    },
    {
        "content": "<p>yes, I think there's often a finely tuned guessing game of which is the best olean to get to get stuff working on your upstream branch whilst CI processes these changes. A workflow I often use is just not merge, work with the lemma in a <code>to_move</code> sectioin at the top, and then only when I'm going to push, move out and merge</p>",
        "id": 265436802,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639854752
    },
    {
        "content": "<p>Yes, that would have been the better way to go.  When Github reports that all checks have passed I should be able to update and get all the oleans that my local Lean was struggling to compile, right?</p>",
        "id": 265436973,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639855030
    },
    {
        "content": "<p>Did you try <code>leanproject get-cache --fallback=download-all</code>?</p>",
        "id": 265436975,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1639855043
    },
    {
        "content": "<p>Hmm, I get <code>Error: No such option: --fallback</code></p>",
        "id": 265437176,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639855340
    },
    {
        "content": "<p>update leanproject?</p>",
        "id": 265437442,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639855769
    },
    {
        "content": "<p>Can you try and update leanproject by updating the pip package mathlibtools</p>",
        "id": 265437444,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1639855770
    },
    {
        "content": "<p>Also, if you edit low-level files, then I suggest adding <code>--old</code> to lean arguments.</p>",
        "id": 265437497,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639855809
    },
    {
        "content": "<p>(should be somewhere in the settings)</p>",
        "id": 265437504,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639855818
    },
    {
        "content": "<p>This way Lean will recompile changed files, and take it for granted that other files still work.</p>",
        "id": 265437510,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639855846
    },
    {
        "content": "<p>Ok, I reverted the commit that merged the edited `data/list/count' into my branch, so I've effectively gone back in time to before that ill-judged merge.  Now I'll follow the better method that Eric suggested above.</p>",
        "id": 265438033,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639856390
    },
    {
        "content": "<p>And my file compiles again <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 265438169,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639856462
    },
    {
        "content": "<p>Thanks everyone for your suggestions</p>",
        "id": 265438190,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639856481
    },
    {
        "content": "<p>One more option: wait till CI compiles your PR, then merge and do <code>leanproject get-cache --rev=PR-branch</code>. As you can see, there are many workflows. Choose the one that suits you.</p>",
        "id": 265439764,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639857485
    },
    {
        "content": "<p>Oh no</p>",
        "id": 265439988,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639857699
    },
    {
        "content": "<p>I pushed the reversion and a subsequent edit.  GitHub now reports that I have a merge conflict involving 586 files, adding 7,502 lines and deleting 24,400 lines!</p>",
        "id": 265440128,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639857919
    },
    {
        "content": "<p>This may be a result of a previous solution I attempted, based on this question: <a href=\"https://stackoverflow.com/questions/28932515/\">https://stackoverflow.com/questions/28932515/</a></p>",
        "id": 265440205,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639858025
    },
    {
        "content": "<p>I did <code>git reset --hard 93e17873b</code> in an attempt to roll back to an earlier commit.  This didn't work; the History view in GitHub Desktop still showed the subsequent commits.  That was when I realised that I could revert the offending commit in GitHub Desktop.</p>",
        "id": 265440364,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639858254
    },
    {
        "content": "<p>tl;dr: I fear I have spectacularly mangled this branch beyond all recognition</p>",
        "id": 265440463,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639858413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"422543\">@Stuart Presnell</span> which branch are you pushing to? <code>SP_list_count_singleton</code>?</p>",
        "id": 265440557,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639858450
    },
    {
        "content": "<p>If you describe the issue and what you want to accomplish, I might be able to help</p>",
        "id": 265441200,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639858821
    },
    {
        "content": "<p>That’s the branch with the new <code>list.count_singleton'</code> lemma. That branch is fine and has passed all checks. The branch that’s messed up is <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_prime_factorization_basics\">branch#SP_prime_factorization_basics</a> in <a href=\"https://github.com/leanprover-community/mathlib/pull/10540\">#10540</a></p>",
        "id": 265441231,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639858906
    },
    {
        "content": "<p>Alright, and you want it to get back to the state it was at <code>93e17873b</code>?</p>",
        "id": 265441300,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639858978
    },
    {
        "content": "<p>I think that’s the commit where I merged, yes</p>",
        "id": 265441330,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639859038
    },
    {
        "content": "<p><code>9536f85</code> is one commit ahead</p>",
        "id": 265441373,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639859063
    },
    {
        "content": "<p>This is what you added: <code>lemma count_singleton' (a b : α) : count a [b] = ite (a = b) 1 0 := by refl</code></p>\n<p>wanna keep that?</p>",
        "id": 265441384,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639859092
    },
    {
        "content": "<p>(<code>9536f85</code> had passed all checks)</p>",
        "id": 265441434,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639859152
    },
    {
        "content": "<p>That was the commit where I initially posted the edit to <code>data/list/count</code> in <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_list_count_singleton\">branch#SP_list_count_singleton</a>. So I guess that's in the history of <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_prime_factorization_basics\">branch#SP_prime_factorization_basics</a> because I merged. So I think the commit I want to roll back to is <code>93e1787</code>, \"Prepare to refactor thru <code>list.count_singleton</code>\"</p>",
        "id": 265441635,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639859392
    },
    {
        "content": "<p>Okay, at this point it's easier to rollback and force push. Do you know how to delete your branch locally and fetch it again?</p>",
        "id": 265441747,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639859463
    },
    {
        "content": "<p>No, I don't know how to do that</p>",
        "id": 265441793,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639859522
    },
    {
        "content": "<p>If I do a rollback and a force push, your local branch will be ahead of the branch on GitHub and pulling won't work.</p>",
        "id": 265441856,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639859576
    },
    {
        "content": "<p>this is how you can delete your branch: <a href=\"https://stackoverflow.com/questions/32102810/how-do-i-delete-a-local-branch-on-github-desktop\">https://stackoverflow.com/questions/32102810/how-do-i-delete-a-local-branch-on-github-desktop</a></p>",
        "id": 265441886,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639859630
    },
    {
        "content": "<p>Ok, so in GitHub Desktop I'll delete the branch <code>SP_prime_factorization_basics</code></p>",
        "id": 265441974,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639859750
    },
    {
        "content": "<p>I'm doing the force push okay?</p>",
        "id": 265442014,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639859772
    },
    {
        "content": "<p>I've deleted my local copy of the branch <code>SP_prime_factorization_basics</code> (but not the remote copy!)</p>",
        "id": 265442053,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639859868
    },
    {
        "content": "<p>okay, the force push is done. if anyone else is working with you on that branch, they'll need to delete their local branch and fetch it again</p>",
        "id": 265442124,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639859947
    },
    {
        "content": "<p>Now try fetching that branch (sorry, I don't know how to use GitHub Desktop)</p>",
        "id": 265442143,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639859990
    },
    {
        "content": "<p>via command line you can do:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ git checkout master\n$ git fetch origin SP_prime_factorization_basics\n$ git checkout SP_prime_factorization_basics\n</code></pre></div>",
        "id": 265442203,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639860033
    },
    {
        "content": "<p>Fantastic!  Thanks so much for fixing this for me!</p>",
        "id": 265442317,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639860153
    },
    {
        "content": "<p>Bear in mind that force pushes are not recommended. And not even allowed on protected branches (unless you're an admin and explicitly allow it)</p>",
        "id": 265442407,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639860268
    },
    {
        "content": "<p>Ok.  I'll be more cautious about merging branches in future</p>",
        "id": 265442472,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639860361
    },
    {
        "content": "<p>Force pushes <em>are</em> recommended if you do a rebase though; doing a rebase then being tricked into running <code>git pull</code> after <code>git push</code> refuses is often how this type of thing goes wrong</p>",
        "id": 265442515,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639860375
    },
    {
        "content": "<p>But the better advice for mathlib is probably to avoid both rebases and force pushes</p>",
        "id": 265442529,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639860404
    },
    {
        "content": "<p>As bors makes it all irrelevant anyway</p>",
        "id": 265442542,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639860425
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.2310880.20.20list.2Ecount_singleton'/near/265442124\">said</a>:</p>\n<blockquote>\n<p>okay, the force push is done. if anyone else is working with you on that branch, they'll need to delete their local branch and fetch it again</p>\n</blockquote>\n<p>And just to enhance this information, others would need to delete their local branches and fetch again <em>if</em> they were ahead of the remote branch as you were (after the force push).</p>\n<p>Another option would be to simply hard reset instead of deleting, but you seemed to be having some difficulties with it so deletion was the most straightforward way out</p>",
        "id": 265442956,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639860920
    },
    {
        "content": "<p>Thanks. In this case I’m the only one working on the branch</p>",
        "id": 265443042,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639861051
    }
]