[
    {
        "content": "<p>This short PR (+37, -1) introduces <code>quiver.path.to_list</code>, a function that lists the vertices a path goes through.</p>\n<p>What might be contentious is whether to include each endpoint. My reasoning is that if we include neither or both, then we do not get <code>(p.comp q).to_list = q.to_list ++ p.to_list</code>. Which endpoint to include was informed by the direction of <code>list</code>, but really I didn't think too much about it.</p>",
        "id": 291565228,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1659355779
    },
    {
        "content": "<p>For simple_graph it's called <a href=\"https://leanprover-community.github.io/mathlib_docs/find/simple_graph.walk.support\">docs#simple_graph.walk.support</a> ... <a href=\"https://leanprover-community.github.io/mathlib_docs/find/simple_graph.walk\">docs#simple_graph.walk</a> is just <a href=\"https://leanprover-community.github.io/mathlib_docs/find/quiver.path\">docs#quiver.path</a> on a symmetric irreflexive relation.</p>",
        "id": 291574644,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1659360265
    },
    {
        "content": "<p>It's an equivalence (to a subtype of the lists) in the simple graph case, but for quivers the vertices no longer determines the path.</p>",
        "id": 291575257,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1659360508
    },
    {
        "content": "<p>When looking at this PR, I haven't been sure about not including endpoints in <code>to_list</code>. The homomorphism property is nice, but I do wonder whether it'd be better to either (a) drop both endpoints, so then the endpoints are handled symmetrically and the algebraic relation is <code>(p.comp q).to_list = q.to_list ++ [v] ++ p.to_list</code>, or (b) add a somewhat artificial composition operator that drops the head of the second list when appending (though this seems very difficult to work with!)</p>",
        "id": 291589290,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1659366939
    }
]