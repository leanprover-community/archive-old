[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, just letting you know about this --- thanks to improvements in Lean, we can essentially remove all the <code>.{v}</code> universe annotations needed to operate categories, except in the <code>variables {C : Type u} [category.{v} C]</code> lines. It's a big improvement in ergonomics!</p>",
        "id": 202266781,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593397521
    },
    {
        "content": "<p>Nice! How did it happen?</p>",
        "id": 202266789,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593397554
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span>, do you know which commits to Lean fixed this? I don't actually know who was responsible, but it's lovely.</p>",
        "id": 202266845,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593397614
    },
    {
        "content": "<p>and <code>include \\mathcal{C}</code> is gone as well?</p>",
        "id": 202267030,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593398027
    },
    {
        "content": "<p>Yup!</p>",
        "id": 202267069,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593398046
    },
    {
        "content": "<p>Nice!</p>",
        "id": 202267073,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593398067
    },
    {
        "content": "<p>No, I don't know about this change. (I only know about the <code>include</code> one.) Curious.</p>",
        "id": 202295375,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593428615
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span>, do you know what changed in Lean so that suddenly we never need to write <code>.{v}</code> in the category theory library? I'm guessing you changed something about how universe metavariables get unified during typeclass search?</p>",
        "id": 202296551,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593429568
    },
    {
        "content": "<p>(Thank you in advance, presuming it was you. :-) I just want to give due credit in the mathlib PR.)</p>",
        "id": 202296576,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593429594
    },
    {
        "content": "<p>I did not make any intentional changes in that direction.  Do you recall why you had to add the <code>.{v}</code> in the first place?  The only related change I can think of that I did in core was to support <code>variables {α β : Type*}</code>.</p>",
        "id": 202298789,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1593431509
    },
    {
        "content": "<p>It used it fail to pick up the <code>category.{v} C</code> instance available, because it was searching for <code>category.{?l_1} C</code>.</p>",
        "id": 202303781,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593434749
    },
    {
        "content": "<p>Now it just unifies happily.</p>",
        "id": 202303790,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593434757
    },
    {
        "content": "<p>That change may well have happened a while back (months?!)</p>",
        "id": 202303852,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593434779
    },
    {
        "content": "<p>This might also be an unintentional side effect of improving type-class inference.  It should have already picked up this instance before (according to the comments), but it is possible I happened to fix this when I allowed type-class search on goals with metavariables.</p>",
        "id": 202304078,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1593434925
    },
    {
        "content": "<p>That sounds more plausible than the <code>variables {α β : Type*}</code> commit.</p>",
        "id": 202304240,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593435030
    },
    {
        "content": "<p>It seems plausible that this was unintentional. I was surprised no one had told me about this already. :-) Alena was fixing something in the category theory tutorial, and I went to find a good example of why <code>.{v}</code> was necessary for her and ... couldn't find any.</p>",
        "id": 202305535,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593435811
    },
    {
        "content": "<p>Huh! I did need some universe annotations recently but I haven't checked if they disappear in the most recent versions of lean/mathlib</p>",
        "id": 202330423,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1593446338
    },
    {
        "content": "<p><a href=\"#narrow/stream/113489-new-members/topic/universe.20levels\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/universe.20levels</a> (here, for context)</p>",
        "id": 202330493,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1593446382
    }
]