[
    {
        "content": "<p>This PR is passing the main build CI, but some tests are failing. Could someone who understands <code>guard_target</code> please take a look at <code>test/interval_cases.lean</code> after</p>\n<div class=\"codehilite\"><pre><span></span><code>leanproject get mathlib:pnat_facts_for_perfect\n</code></pre></div>",
        "id": 202857229,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593840018
    },
    {
        "content": "<p>The issue is that <code>guard_target</code> is failing, but as far as I can see the goal is <em>exactly</em> what it should be according to <code>guard_target</code>.</p>",
        "id": 202857456,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593840524
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> If you have a spare 5 minutes, that would be lovely.</p>",
        "id": 202857463,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593840540
    },
    {
        "content": "<p>Away from a computer for 48 hours, but I'll look them if it's still open.</p>",
        "id": 202857514,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593840603
    },
    {
        "content": "<p>Have you tried <code>guard_target'</code>?</p>",
        "id": 202857593,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593840796
    },
    {
        "content": "<p>If the implicit parameters are exactly right, it might be an issue with metavariables not getting instantiated. You can also try prefixing the <code>guard_target</code> with <code>do { target &gt;&gt;= instantiate_mvars &gt;&gt;= change }</code> (and do <code>open tactic</code> first)</p>",
        "id": 202857712,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593840975
    },
    {
        "content": "<p>Sorry, the timing is bad. It's 1:37 AM here and I'm due for a night of sleep</p>",
        "id": 202857731,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593841065
    },
    {
        "content": "<p>Let me know if those changes work and I'll see what's going on tomorrow</p>",
        "id": 202857775,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593841107
    },
    {
        "content": "<p><code>guard_target'</code> seems to work. Let's see if CI is happy now.</p>",
        "id": 202858871,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593843186
    },
    {
        "content": "<p>This feels like it might be papering over an actual issue.</p>",
        "id": 202872174,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593866552
    },
    {
        "content": "<p>I think it's that <code>guard_target</code> is often inadequate. It is too sensitive. I'm not sure if it is always too sensitive but often, I'm ok with a looser notion of equality than alpha equality. It would be interesting to see what tripped it up this time.</p>",
        "id": 202875941,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593872734
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/144837-PR-reviews/topic/.233274.20pnat.20facts/near/202872174\">said</a>:</p>\n<blockquote>\n<p>This feels like it might be papering over an actual issue.</p>\n</blockquote>\n<p>Certainly... but I also feel like I'm not qualified to figure out or fix the actual issue.</p>",
        "id": 202877301,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593874711
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span> I've kicked it on the merge queue. Congrats!</p>",
        "id": 202877479,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593874960
    },
    {
        "content": "<p>The <code>guard_target</code> issue can be fixed by others in another PR</p>",
        "id": 202877486,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593874981
    },
    {
        "content": "<p>but probably won't be <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 202881207,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593880383
    },
    {
        "content": "<p>Well, there's a bunch of primed tactic in mathlib that we considered moving into core to replace the unprimed version. That could be such an example. I don't know concretely where it is on the list of priorities though</p>",
        "id": 202881297,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593880502
    },
    {
        "content": "<p>I think this should remain primed, because it does something different.  And in particular because the failure mode is that tests would silently pass even though they should fail.</p>",
        "id": 202881878,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1593881295
    }
]