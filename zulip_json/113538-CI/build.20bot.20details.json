[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256311\">@Jannis Limperg</span> Can you give some details on the benchmarking system?  From the Azure dashboard, I can see that you're an E4as v4 VM.  How is Lean executed?  That is, do you compile each file individually or do you run <code>lean --make</code>?  Do you make use of parallelism (the VM has \"four\" \"cores\")?  (I didn't see this mentioned anywhere.)</p>",
        "id": 242583546,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1623670453
    },
    {
        "content": "<p>The benchmark runner runs <a href=\"https://hub.docker.com/repository/docker/jlimperg/mathlib-bench-runner\">this Docker container</a> with</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>docker run jlimperg/mathlib-bench-runner daemon runner1 https://mathlib-bench.limperg.de &lt;secret&gt;\n</code></pre></div>\n<p>If you want comparable timings, you could pull this container on the same VM and do</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>docker run jlimperg/mathlib-bench-runner oneshot &lt;commit&gt; --runs N\n</code></pre></div>\n<p>Source code for the container is <a href=\"https://github.com/JLimperg/mathlib-bench\">here</a>; the runner's <code>main</code> is in <a href=\"https://github.com/JLimperg/mathlib-bench/blob/master/lib/MathlibBench/Runner/Main.hs\">this file</a>.</p>\n<p>Internally, the runner runs</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>leanpkg build -- --threads 4 --memory 20000\n</code></pre></div>\n<p>for the full build. Then it does another build for the per-file timings with</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>lean -j0 &lt;file&gt;\n</code></pre></div>\n<p>for each file (using the oleans from the full build).</p>\n<p>Actually, I discovered that the runner was misconfigured for a while and ran the full build with <code>--threads 16</code>. I'm currently testing whether that makes a difference.</p>",
        "id": 242585685,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1623671919
    },
    {
        "content": "<p>Thanks!  The code looks much more professional than our typical benchmarking scripts! <span aria-label=\"love\" class=\"emoji emoji-2764\" role=\"img\" title=\"love\">:love:</span>  One thing I'm still not clear about: is the 2h30m the time that <code>leanpkg build -- --threads 16 --memory 20000</code> takes or is the whole benchmarking run (incl. per-file benchmarks)?</p>",
        "id": 242600977,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1623679319
    },
    {
        "content": "<p>Thanks! The reported time is only <code>leanpkg build</code>; the per-file run is only used for the per-file timings.</p>",
        "id": 242606044,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1623681283
    }
]