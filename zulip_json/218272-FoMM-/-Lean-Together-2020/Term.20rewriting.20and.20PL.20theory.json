[
    {
        "content": "<p>I've been thinking about formalizing fundamentals of term rewriting (e.g. lemmas about equivalence of various notions of confluence, proof techniques for termination/confluence, completion procedures, etc. - formalizations of Term Rewriting and All That, Advanced Topics in Term Rewriting) and PL theory (definitions of statics/dynamics for common languages, safety proofs, and related utilities), especially based on the recent discussions. Would this be useful to people?</p>\n<p>If I were to take a stab at this, what would be the recommended way to develop? Should I build in an independent GitHub repo and discuss on Zulip? Does it make sense in mathlib (i.e. creating <code>src/pl_theory</code>, <code>src/rewriting</code>), and if so, are there any guidelines about structure? (Apologies if I'm missing something - don't have much experience contributing to Lean projects yet. <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>)</p>",
        "id": 185336842,
        "sender_full_name": "Harrison Grodin",
        "timestamp": 1578680824
    },
    {
        "content": "<p>I don't know if it fits into mathlib. <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> would be the best person to answer that question.</p>",
        "id": 185337960,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1578681509
    },
    {
        "content": "<p>You could certainly start a new package, add mathlib as dependency, and get started.</p>",
        "id": 185337984,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1578681527
    },
    {
        "content": "<p>Discussions on Zulip are always a good idea (-;</p>",
        "id": 185338009,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1578681547
    },
    {
        "content": "<p>Mario has in the past complained about the name <code>mathlib</code>, on the grounds that it should be a library good for e.g. program verification as well. Rewriting is pretty fundamental, and I'd personally be happy to see a library for it inside of mathlib. </p>\n<p>But is everyone subscribed to this stream? Maybe the question would do better in <code>general</code> or <code>new members</code>?</p>",
        "id": 185342290,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1578684295
    },
    {
        "content": "<p>Do you know about IsaFoR? <a href=\"http://cl-informatik.uibk.ac.at/isafor/\" target=\"_blank\" title=\"http://cl-informatik.uibk.ac.at/isafor/\">http://cl-informatik.uibk.ac.at/isafor/</a></p>",
        "id": 185351628,
        "sender_full_name": "Manuel Eberl",
        "timestamp": 1578690472
    },
    {
        "content": "<p>No, I wasn't aware - this seems quite good.</p>",
        "id": 185351986,
        "sender_full_name": "Harrison Grodin",
        "timestamp": 1578690708
    },
    {
        "content": "<p>I know plenty of purely mathematical applications for confluent rewriting. I would be very happy to see this in mathlib.</p>",
        "id": 185394147,
        "sender_full_name": "Neil Strickland",
        "timestamp": 1578756727
    },
    {
        "content": "<p>Note that this thread was continued in the general stream: <a href=\"#narrow/stream/113488-general/topic/Term.20rewriting.20and.20PL.20theory/near/185342815\" title=\"#narrow/stream/113488-general/topic/Term.20rewriting.20and.20PL.20theory/near/185342815\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Term.20rewriting.20and.20PL.20theory/near/185342815</a></p>",
        "id": 185394801,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1578757960
    }
]