[
    {
        "content": "<p>I understand that a definition/structure belongs to <code>std</code> if it's useful for programmers or is a dependency of a definition that is useful for programmers. What about lemmas? What stays in <code>mathlib</code>, what goes to <code>std</code>?</p>",
        "id": 321974840,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674019001
    },
    {
        "content": "<p>E.g., should most of lemmas about <code>List</code>s that don't need <code>[Group]</code> etc go to <code>std</code> or not?</p>",
        "id": 321974879,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1674019058
    },
    {
        "content": "<p>Can't speak for Mario but I think the standard so far has just been \"does this not require mathlib stuff?\" (so probably most lemmas about List should go in std)</p>",
        "id": 321976518,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1674020212
    },
    {
        "content": "<p>e.g. I'm working on moving <code>List.Perm</code> to Std since it's useful for programmers and most of the lemmas don't depend on mathlib stuff</p>",
        "id": 321976577,
        "sender_full_name": "James Gallicchio",
        "timestamp": 1674020264
    },
    {
        "content": "<p>Yes, James is right. Things that require too much of mathlib are out, but \"is a dependency of a definition that is useful for programmers\" can be interpreted broadly to include lemmas about existing structures that could potentially be useful for downstream programming tasks. As a result, I anticipate almost everything in mathlib's <code>Data.List</code> to move to std eventually, although I am waiting until all the porting work settles down to do that</p>",
        "id": 321990844,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674028341
    }
]