[
    {
        "content": "<p>I was talking to someone recently and I mentioned how Terry Tao has been asking for some sort of \"semantic search\" for mathematics for over a decade now.  I'm trying to dig up some old posts of his on the topic.  The idea is that ideally you should be able to ask a mathematical search engine for a formula or a statement and it should be able to tell you if it is already in the literature.  Obviously, you don't just want something which is an exact word for word (or symbol for symbol) match, but also you don't want something which looks similar but is totally not semantically related.  I wonder what progress has been made on this over the last decade.  Is Google and Google Scholar still about as good as you can get?  (Of course Google has also improved over the last decade, but I still think this aspect is lacking.)  (Of course the best you can get is still talking to a human expert, which is what MathOverflow and other social networks excel at.)</p>",
        "id": 313724940,
        "sender_full_name": "Jason Rute",
        "timestamp": 1670094636
    },
    {
        "content": "<p>And of course Terry Tao isn't the only one who has talked about this.</p>",
        "id": 313724996,
        "sender_full_name": "Jason Rute",
        "timestamp": 1670094683
    },
    {
        "content": "<p>There was an interesting book written about a decade ago on the topic of this and generally building a mathematical digital library <a href=\"https://arxiv.org/pdf/1404.1905.pdf\">Developing a 21st Century Global Library for Mathematics Research</a>.  I was asked to be one of the (open) reviewers (because of some comments I left on Tao's blog on the subject).  Also, I didn't know who he was at the time, but Yann LeCun (a bigshot in neural networks) was one of the authors.  I'd be curious how the ideas have aged over the past decade.  It seemed like a hard problem then, and frankly it still seems hard, but maybe slightly more trackable.</p>",
        "id": 313726153,
        "sender_full_name": "Jason Rute",
        "timestamp": 1670095535
    },
    {
        "content": "<p>Some searching brought up <a href=\"https://approach0.xyz/search/\">https://approach0.xyz/search/</a>.  I've never heard of it before, I wonder if it is any good?</p>",
        "id": 313726312,
        "sender_full_name": "Jason Rute",
        "timestamp": 1670095643
    },
    {
        "content": "<p>It's impressive that it comes up with many non-exact matches when I <a href=\"https://approach0.xyz/search/?q=OR%20content%3A%24%7B%5Cfrac%20%7B1%7D%7B%5Cpi%20%7D%7D%3D%7B%5Cfrac%20%7B2%7B%5Csqrt%20%7B2%7D%7D%7D%7B99%5E%7B2%7D%7D%7D%5Csum%20_%7Bk%3D0%7D%5E%7B%5Cinfty%20%7D%7B%5Cfrac%20%7B(4k)!%7D%7Bk!%5E%7B4%7D%7D%7D%7B%5Cfrac%20%7B26390k%2B1103%7D%7B396%5E%7B4k%7D%7D%7D%24&amp;p=1\">searched for Ramanujan's formula for pi</a>.</p>",
        "id": 313766976,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1670132379
    },
    {
        "content": "<p>Looks like many are (1) change variable name (e.g. n vs k) (2) constant computation (e.g. 26390 vs 58*455), so looks like the engine understands LaTeX and maybe somehow parse it</p>",
        "id": 313767188,
        "sender_full_name": "Tom Chen",
        "timestamp": 1670132595
    },
    {
        "content": "<p>There are some discussion under <a href=\"https://terrytao.wordpress.com/2009/10/29/displaying-mathematics-on-the-web/#comment-42086\">Tao's blogpost</a> in 2009 but Tao didn't participate. There's <a href=\"https://terrytao.wordpress.com/2009/08/27/mathematical-research-and-the-internet/\">this talk</a> but not exactly relevant.</p>",
        "id": 313767274,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1670132670
    },
    {
        "content": "<p>Approach Zero's <a href=\"https://github.com/approach0/search-engine\">codebase</a> has been inactive for two years, but in <a href=\"https://github.com/approach0/math-dense-retrievers\">another repo</a> I found a <a href=\"https://arxiv.org/pdf/2203.11163v2.pdf\">fairly recent paper</a>.</p>",
        "id": 313767480,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1670132931
    },
    {
        "content": "<p>Some other services that comes to mind, though many are not for math specifically:<br>\n<a href=\"https://wayback.cecm.sfu.ca/projects/ISC/ISCmain.html\">Inverse symbolic calculator</a> (<a href=\"https://oeis.org/wiki/Plouffe%27s_Inverter\">fuzzy numerical search for mathematical constants</a>)<br>\n<a href=\"https://behemoth.cl.cam.ac.uk/search/\">SErAPIS</a> for Isabelle from the ALEXANDRIA project<br>\n<a href=\"https://arxiv-sanity-lite.com/about\">arxiv-sanity</a> (recommends new (machine learning) papers for each tag based on SVMs over tfidf features of paper abstracts)<br>\n<a href=\"https://www.semanticscholar.org/about\">Semantic Scholar</a> (I use it sparingly and only today learned it's backed by the Allen Institute for AI; another website I consider to be similar, <a href=\"https://www.researchgate.net/about\">ResearchGate</a>, doesn't brag about use of AI)<br>\nOf course there is also the recent <a href=\"https://galactica.org/mission/\">Galactica</a> which aims to <a href=\"https://galactica.org/explore/\">provide accurate citations</a> but only survived three days; apparently its hallucinations aren't controlled as well as ChatGPT.</p>",
        "id": 313768938,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1670134267
    },
    {
        "content": "<p>Here’s a paper I came across: <a href=\"https://dl.acm.org/doi/abs/10.1145/3394486.3403056\">https://dl.acm.org/doi/abs/10.1145/3394486.3403056</a></p>",
        "id": 313806126,
        "sender_full_name": "Tyler Josephson ⚛️",
        "timestamp": 1670159086
    },
    {
        "content": "<p>I was the one who was talking to Jason, by the way :) I'm new to this stuff and it really impressed me how the daily working process in a mathematician's life lacks some basic tooling that someone should be able to do. As an NLP Engineer, e. g. someone directly in the profession for making that sort of stuff, I had no idea that there is a need to semantic search in math papers. And given how Terry friggin Tao has been talking about that for a decade, there must be a crying need for it. Given the amazing recent breakthroughs in NLP with large pretrained LMs, there must be some new approaches that haven't been tried yet for this task. Would anyone be up for a big of messing around with LMs for math semantic search?</p>",
        "id": 314387171,
        "sender_full_name": "Vadim Fomin",
        "timestamp": 1670395753
    },
    {
        "content": "<p>btw, I just talked with an NLP guy who does semantic search and who'd be very interested in building semantic search for math - only we're not sure where to get the data. he also did code search, so maybe we can start with building better semantic search for mathlib? would you folks be interested?</p>",
        "id": 314428951,
        "sender_full_name": "Vadim Fomin",
        "timestamp": 1670410952
    },
    {
        "content": "<p>Here are some of my quick thoughts.</p>\n<p>A nice stepping stone on the way to a search engine for all mathematical knowledge might be a search engine for mathib only. This makes challenges of scale more manageable, and also makes UI/UX easier since we know the goal is always to find the user a formal statement. </p>\n<p>My immediate thought would be to train CLIP-style query-value embeddings. At inference time, we'd embed the user's query (which can be natural language, formal, or a mixture of the two), then use a fast nearest neighbors search to match the query embedding against pre-computed value embeddings of mathlib formal statements. Where would we get data? Well one thing we know is that Codex is really good at informalization, and when Codex fails, the prediction is still semantically similar to the correct answer. So we could informalize every theorem in mathlib with Codex, and those pairs give us 100k training examples. Similarly, we could prompt Codex to do other tasks than informalization, for example \"Use natural language connectives but mathlib names\" or \"copy the theorem statement but leave out some hypotheses\". This could get us millions of training examples. </p>\n<p>I don't know very much about deploying neural nets in synchronous applications, but I expect we'd be using a pretty small neural network and mathlib search volume is pretty low, so we might be able to serve this on a single cloud GPU. </p>\n<p>This neural net based approach might not scale to the entire internet, but if we want truly semantic search I don't think we can avoid somehow computing dense vector representations. But perhaps this approach could scale to arXiv + math overflow + stack exchange + journals + ebooks, which is maybe all that matters. </p>\n<p>Any thoughts <span class=\"user-mention\" data-user-id=\"240875\">@Yuhuai Tony Wu</span>? This modelling approach is somewhat similar to your team's work on premise selection.</p>",
        "id": 314773490,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1670534248
    },
    {
        "content": "<p>I think both a) code search over entire mathlib and b) semantic search over arXiv + math overflow + stack exchange + journals + ebooks would be something worth exploring! Let me ping the guy who does semantic search and code search and who was interested in exploring semantic search for math, and see what he thinks</p>",
        "id": 314837509,
        "sender_full_name": "Vadim Fomin",
        "timestamp": 1670573143
    },
    {
        "content": "<p>Maybe you should first ask in the <a class=\"stream\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general\">#general</a> or <a class=\"stream\" data-stream-id=\"116395\" href=\"/#narrow/stream/116395-maths\">#maths</a> stream to gather a requirement document or something. From my own experience, I find the mathlib docs search box easy enough to use, and I never use <code>library_search</code>.</p>",
        "id": 315444815,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1670873790
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284997\">Zhangir Azerbayev</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Semantic.20Search.20for.20Mathematics/near/314773490\">said</a>:</p>\n<blockquote>\n<p>My immediate thought would be to train CLIP-style query-value embeddings.</p>\n</blockquote>\n<p>consider trying <a href=\"https://openai.com/blog/new-and-improved-embedding-model/\">https://openai.com/blog/new-and-improved-embedding-model/</a> before training your own</p>",
        "id": 316108511,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1671128258
    },
    {
        "content": "<p>Just found this: <a href=\"https://lablab.ai/event/semantic-search-hackathon\">https://lablab.ai/event/semantic-search-hackathon</a> . Starting tomorrow!</p>",
        "id": 316186280,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1671164587
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224323\">Junyan Xu</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Semantic.20Search.20for.20Mathematics/near/316186280\">said</a>:</p>\n<blockquote>\n<p>Just found this: <a href=\"https://lablab.ai/event/semantic-search-hackathon\">https://lablab.ai/event/semantic-search-hackathon</a> . Starting tomorrow!</p>\n</blockquote>\n<p>Any indication there will be people focused on Lean?</p>",
        "id": 316224001,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1671184333
    },
    {
        "content": "<p>Hey guys, sorry for disappearing. I was actually thinking I pull you in a call with the semantic search guy? You'd probably help us clarify the use cases for the math semantic search, and we could think together which way to attack the problem, and what can be done? Would you guys be up for a call?</p>",
        "id": 316235544,
        "sender_full_name": "Vadim Fomin",
        "timestamp": 1671188039
    },
    {
        "content": "<p>Why doesn't the semantic search guy join the discussion here on zulip?</p>",
        "id": 316250551,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1671192880
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"573272\">@Vladimir Orshulevich</span> hey man, this is the Zulip community of the Lean theorem prover, these folks are also interested in semantic search for math. We had a little chat about that, you can see it above. Wanna train a model or something?</p>",
        "id": 316257596,
        "sender_full_name": "Vadim Fomin",
        "timestamp": 1671194982
    },
    {
        "content": "<p>The conference at IPAM in Feb on machines and mathematics organised by Terry Tao, Tim Gowers and various people from this Zulip will have a fair bit of lean representation and that very conference is happening because Tao is interested in semantic search in mahematics</p>",
        "id": 316258251,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671195178
    },
    {
        "content": "<p>Btw, can you share use cases for the semantic search, maybe with example queries and responses?</p>\n<p>We wanna have an understanding of the goal, and to decide which data to use. (arxiv papers? code search over mathlib?)</p>",
        "id": 316270342,
        "sender_full_name": "Vadim Fomin",
        "timestamp": 1671198424
    },
    {
        "content": "<p>Hey guys,</p>\n<p>Great to be here and have a chance to help with semantic search engine for math!</p>\n<p>Following the conversation: <br>\n\"ada-002\" from openAI is cool, but it is paid api. So mb it is reasonable to try it for testing proof-of-concept. But for search service like that I suggest to fine-tune some Salesforce/codegen-{350M, 2B, 6B, 16B}-multi on some pairs . It is pre-trained in similar way. So the problem here is data, everything else I probably know how to implement.</p>\n<p>\"single cloud GPU\"<br>\nI've made text-visual and text-audio search services with HNSW index. It's 4-5K qps (inference + search) for single RTX3090 (probably twice with A100). I hope its enough to test. Even though its horizontally scalable.</p>",
        "id": 316273190,
        "sender_full_name": "Vladimir Orshulevich",
        "timestamp": 1671199116
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"568200\">Vadim Fomin</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Semantic.20Search.20for.20Mathematics/near/316270342\">said</a>:</p>\n<blockquote>\n<p>Btw, can you share use cases for the semantic search, maybe with example queries and responses?</p>\n<p>We wanna have an understanding of the goal, and to decide which data to use. (arxiv papers? code search over mathlib?)</p>\n</blockquote>\n<p>Here is an example of a question I asked chatGPT which it answered incorrectly:</p>\n<ul>\n<li>Is it true that every smooth, closed manifold of dimension at least 3 admits a metric with negative Ricci curvature?</li>\n</ul>",
        "id": 316286128,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671202520
    },
    {
        "content": "<p>This is a deep theorem. Semantic search should find it.</p>",
        "id": 316286186,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671202540
    },
    {
        "content": "<p>Another that I asked chatGPT and it answered incorrectly (answered the wrong question and justified with incorrect logic).</p>\n<ul>\n<li>What are examples of knots that are known not to be <em>ribbon</em> but which may be <em>slice</em>?</li>\n</ul>\n<p>For this discussion it does not matter what these mean - they are some properties of knots.</p>",
        "id": 316286541,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671202640
    },
    {
        "content": "<p>chatGPT answered giving examples of knots that are known not to be <em>slice</em> instead. Then claimed it is not known whether they are <em>ribbon</em>.</p>",
        "id": 316286909,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671202760
    },
    {
        "content": "<p>By the result that all <em>ribbon</em> knots are <em>slice</em>, those that are not <em>slice</em> are not <em>ribbon</em>. This is not only a well-known result, but one which <em>chatGPT had stated as background material when answering</em>.</p>",
        "id": 316287241,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671202857
    },
    {
        "content": "<blockquote>\n<p>Is it true that every smooth, closed manifold of dimension at least 3 admits a metric with negative Ricci curvature?</p>\n</blockquote>\n<p>Googling \"admit negative ricci curvature\" returns the paper of Lohkamp as the first result, which states the result for three-manifolds in the introduction (due to Gao--Yau and Brooks), and the result for dimension &gt;=3 (proven in the paper) is on the second page, but the article is behind JSTOR paywall beyond the first page. I wonder whether Galactica has been trained on sci-hub database ... May need to OCR as well. This info is also avaiable in a <a href=\"https://math.stackexchange.com/a/2903036/12932\">math.SE answer</a> though.</p>\n<blockquote>\n<p>What are examples of knots that are known not to be ribbon but which may be slice?</p>\n</blockquote>\n<p>I looked up Knot Atlas and KnotInfo but ribbon-ness seems not to be a field in their databases, so you have to get the information elsewhere (papers and online discussions?).</p>",
        "id": 316299850,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1671206109
    },
    {
        "content": "<p>It is in <a href=\"https://en.wikipedia.org/wiki/Ribbon_knot\">wikipedia</a> including the slice-ribbon conjecture.</p>",
        "id": 316405493,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671255947
    },
    {
        "content": "<p>Another example of a question:  what is known about the traces of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>×</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2 \\times 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2</span></span></span></span> matrices with integer coefficients with determinant 1</p>",
        "id": 316405579,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671256035
    },
    {
        "content": "<p>What is known? Presumably the trace can be any integer? Yeah [n,1;-1,0]</p>",
        "id": 316419581,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671267239
    },
    {
        "content": "<p>Isn't this a calculation/construction rather than something that you can find on the internet? Should one expect an AI to be able to solve this?</p>",
        "id": 316419686,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671267287
    },
    {
        "content": "<p>I asked too simple a question. I believe what I meant to ask was the relation between the traces of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> and the commutator <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>B</mi><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>B</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">ABA^{-1}B^{-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> having determinant 1.</p>",
        "id": 316423110,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671269234
    },
    {
        "content": "<p>And an AI is supposed to be able to answer this?</p>",
        "id": 316428117,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671271794
    },
    {
        "content": "<p>I don't really know what's in scope</p>",
        "id": 316428210,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671271820
    },
    {
        "content": "<p>An AI is supposed to find papers/books that address this question, and even the statements of theorems within them. That is essentially the definition of \"semantic search\"</p>",
        "id": 316466045,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1671287119
    },
    {
        "content": "<p>AI is not there yet afaik.</p>",
        "id": 316507597,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1671309064
    },
    {
        "content": "<p>here's an example for semantic search: \"what theorems can tell me when a bunch of lines from the vertices of a triangle to the opposite side intersect?\" this is basically an elementary geometry question. it's a bit too advanced for chatgpt, which answers:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">There</span> <span class=\"n\">are</span> <span class=\"n\">several</span> <span class=\"n\">theorems</span> <span class=\"n\">that</span> <span class=\"n\">pertain</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">intersection</span> <span class=\"n\">of</span> <span class=\"n\">lines</span> <span class=\"n\">drawn</span> <span class=\"k\">from</span> <span class=\"n\">the</span> <span class=\"n\">vertices</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"n\">triangle</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">opposite</span> <span class=\"n\">side.</span> <span class=\"n\">Here</span> <span class=\"n\">are</span> <span class=\"n\">three</span> <span class=\"n\">such</span> <span class=\"n\">theorems</span><span class=\"o\">:</span>\n\n<span class=\"n\">The</span> <span class=\"n\">Angle</span> <span class=\"n\">Bisector</span> <span class=\"n\">Theorem</span> <span class=\"n\">states</span> <span class=\"n\">that</span> <span class=\"k\">in</span> <span class=\"n\">any</span> <span class=\"n\">triangle</span><span class=\"o\">,</span> <span class=\"n\">the</span> <span class=\"n\">line</span> <span class=\"n\">segment</span> <span class=\"n\">drawn</span> <span class=\"k\">from</span> <span class=\"n\">a</span> <span class=\"n\">vertex</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">midpoint</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">opposite</span> <span class=\"n\">side</span> <span class=\"n\">is</span> <span class=\"n\">bisected</span> <span class=\"kd\">by</span> <span class=\"n\">the</span> <span class=\"n\">angle</span> <span class=\"n\">bisector</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">angle</span> <span class=\"n\">at</span> <span class=\"n\">that</span> <span class=\"n\">vertex.</span> <span class=\"n\">This</span> <span class=\"n\">means</span> <span class=\"n\">that</span> <span class=\"n\">the</span> <span class=\"n\">line</span> <span class=\"n\">segment</span> <span class=\"n\">is</span> <span class=\"n\">divided</span> <span class=\"n\">into</span> <span class=\"n\">two</span> <span class=\"n\">equal</span> <span class=\"n\">parts</span> <span class=\"kd\">by</span> <span class=\"n\">the</span> <span class=\"n\">angle</span> <span class=\"n\">bisector.</span>\n\n<span class=\"n\">The</span> <span class=\"n\">Median</span> <span class=\"n\">Theorem</span> <span class=\"n\">states</span> <span class=\"n\">that</span> <span class=\"k\">in</span> <span class=\"n\">any</span> <span class=\"n\">triangle</span><span class=\"o\">,</span> <span class=\"n\">the</span> <span class=\"n\">line</span> <span class=\"n\">segment</span> <span class=\"n\">drawn</span> <span class=\"k\">from</span> <span class=\"n\">a</span> <span class=\"n\">vertex</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">midpoint</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">opposite</span> <span class=\"n\">side</span> <span class=\"n\">is</span> <span class=\"n\">twice</span> <span class=\"n\">as</span> <span class=\"n\">long</span> <span class=\"n\">as</span> <span class=\"n\">the</span> <span class=\"n\">line</span> <span class=\"n\">segment</span> <span class=\"n\">drawn</span> <span class=\"k\">from</span> <span class=\"n\">the</span> <span class=\"n\">midpoint</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">opposite</span> <span class=\"n\">side</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">midpoint</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">opposite</span> <span class=\"n\">side</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">triangle.</span>\n\n<span class=\"n\">The</span> <span class=\"n\">Altitude</span> <span class=\"n\">Theorem</span> <span class=\"n\">states</span> <span class=\"n\">that</span> <span class=\"k\">in</span> <span class=\"n\">any</span> <span class=\"n\">triangle</span><span class=\"o\">,</span> <span class=\"n\">the</span> <span class=\"n\">line</span> <span class=\"n\">drawn</span> <span class=\"k\">from</span> <span class=\"n\">a</span> <span class=\"n\">vertex</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">opposite</span> <span class=\"n\">side</span> <span class=\"n\">is</span> <span class=\"n\">perpendicular</span> <span class=\"n\">to</span> <span class=\"n\">that</span> <span class=\"n\">side.</span> <span class=\"n\">This</span> <span class=\"n\">means</span> <span class=\"n\">that</span> <span class=\"n\">the</span> <span class=\"n\">line</span> <span class=\"n\">forms</span> <span class=\"n\">a</span> <span class=\"n\">right</span> <span class=\"n\">angle</span> <span class=\"k\">with</span> <span class=\"n\">the</span> <span class=\"n\">side.</span>\n\n<span class=\"n\">These</span> <span class=\"n\">theorems</span> <span class=\"n\">can</span> <span class=\"n\">help</span> <span class=\"n\">you</span> <span class=\"n\">understand</span> <span class=\"n\">the</span> <span class=\"n\">relationship</span> <span class=\"n\">between</span> <span class=\"n\">the</span> <span class=\"n\">lines</span> <span class=\"n\">drawn</span> <span class=\"k\">from</span> <span class=\"n\">the</span> <span class=\"n\">vertices</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"n\">triangle</span> <span class=\"n\">to</span> <span class=\"n\">the</span> <span class=\"n\">opposite</span> <span class=\"n\">side</span> <span class=\"n\">and</span> <span class=\"n\">how</span> <span class=\"n\">they</span> <span class=\"n\">intersect.</span>\n</code></pre></div>\n<p>none of those are really a direct answer to the question, a better answer i think would be Ceva's theorem - <a href=\"https://en.wikipedia.org/wiki/Ceva%27s_theorem\">https://en.wikipedia.org/wiki/Ceva%27s_theorem</a> . I bet you could come up with a corpus of questions like this, that could be answered by wikipedia pages. the goal of the semantic search system isn't to directly solve the problem, but just to correctly figure out which pages are the relevant ones, in a way that's better than just googling can do.</p>",
        "id": 316832421,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1671484449
    },
    {
        "content": "<p>Thanks for these explanations: I have a much better understanding of what this phrase means now!</p>",
        "id": 316854782,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1671494972
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"238605\">@Kevin Lacker</span> Interestingly, if you pose this question to <a href=\"http://perplexity.ai\">perplexity.ai</a>, it is able to retrieve Ceva's theorem (<a href=\"https://www.perplexity.ai/?uuid=94ccba12-5e6a-4f3f-b587-e5877fae8bf7\">https://www.perplexity.ai/?uuid=94ccba12-5e6a-4f3f-b587-e5877fae8bf7</a>). Though its reference of SSS doesn't make sense in context</p>",
        "id": 317079264,
        "sender_full_name": "Sid",
        "timestamp": 1671594290
    },
    {
        "content": "<p>Hey folks,<br>\nWe have A LOT of arxiv data, but we'd also like to include some math books in the dataset, it would probably make the search more relevant. Do you have any idea where we could scrape some?</p>",
        "id": 318956775,
        "sender_full_name": "Vadim Fomin",
        "timestamp": 1672650931
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"568200\">Vadim Fomin</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Semantic.20Search.20for.20Mathematics/near/318956775\">said</a>:</p>\n<blockquote>\n<p>Hey folks,<br>\nWe have A LOT of arxiv data, but we'd also like to include some math books in the dataset, it would probably make the search more relevant. Do you have any idea where we could scrape some?</p>\n</blockquote>\n<p>Library Genesis and SciHub.</p>",
        "id": 318958520,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1672651750
    },
    {
        "content": "<p>A nice suggestion! Is there any chance there is anything open-source (with older books perhaps?)</p>",
        "id": 318963120,
        "sender_full_name": "Vadim Fomin",
        "timestamp": 1672653936
    },
    {
        "content": "<p>Stacks Project and Kerodon are open source.</p>",
        "id": 318964205,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672654413
    },
    {
        "content": "<p>Both look like exactly the kind of thing we're looking for. You see, arxiv papers are nice because there is markup like \"Theorem 1\", \"Lemma 2\", and before them, there's some kind of a less formal explanation what's going on (\"Let's introduce this idea\", \"This theorem connects this to that\" etc.) - this is likely to be very useful for the semantic search engine. We'd like to find books that are also in this format, there's probably more fundamental stuff that would be good to be able to look up. And both Stacks Project and Kerodon look good for this, only we'd need rather <em>a lot</em>...</p>",
        "id": 318966086,
        "sender_full_name": "Vadim Fomin",
        "timestamp": 1672655193
    },
    {
        "content": "<p><a href=\"https://github.com/rfitzp/Elements\">https://github.com/rfitzp/Elements</a></p>",
        "id": 319036181,
        "sender_full_name": "Kaiyu Yang",
        "timestamp": 1672683405
    },
    {
        "content": "<p>Project Gutenberg has some math books, e.g. <a href=\"https://www.gutenberg.org/ebooks/search/?query=number+theory&amp;submit_search=Go%21\">in number theory</a>; not in nice format though</p>\n<p>EGA/SGA (algebraic geometry, French): <a href=\"https://github.com/zmwangx/Typeset-EGA-SGA\">typeset version</a> (<a href=\"https://github.com/dkmiller\">Dan Miller</a> should have the SGA TeX source) / <a href=\"https://wstein.org/sga/\">scanned version</a> (may be partially superseded by the Stacks project)</p>\n<p><a href=\"https://www.jmilne.org/math/\">J.S. Milne's books and notes</a> in PDF but I guess you can ask him for TeX source</p>\n<p>Terry Tao's blogposts were made into several <a href=\"https://terrytao.wordpress.com/books/\">books</a>, so you might as well scrape his blog</p>\n<p><a href=\"https://math.uchicago.edu/~dannyc/books/\">Danny Calegari</a> (low-dimensional topology)</p>\n<p><a href=\"https://web.archive.org/web/20221202172146/https://math.jhu.edu/~eriehl/\">Emily Riehl</a> (site down at the moment)</p>\n<p><a href=\"https://www.math.ias.edu/~lurie/\">Jacob Lurie's books</a> (are they subsumed by Kerodon?)</p>",
        "id": 319109080,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1672704847
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"224323\">Junyan Xu</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Semantic.20Search.20for.20Mathematics/near/319109080\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://www.math.ias.edu/~lurie/\">Jacob Lurie's books</a> (are they subsumed by Kerodon?)</p>\n</blockquote>\n<p>They are not (yet).</p>",
        "id": 319153036,
        "sender_full_name": "Reid Barton",
        "timestamp": 1672737642
    },
    {
        "content": "<p>I whipped up a quick demo of mathlib search using the openai embeddings + fast kNN search using Faiss. </p>\n<p><a href=\"https://github.com/zhangir-azerbayev/mathlib-semantic-search\">https://github.com/zhangir-azerbayev/mathlib-semantic-search</a></p>\n<p>Right now the demo requires you to download ~800mb of pre-computed mathlib embeddings and pay $0.0004 per 1K query tokens. </p>\n<p><span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> is working on a website with a nice UI that hosts this on the cloud and collects feedback about search results. If the openai embeddings work really well, we could think about integrating them into the mathlib docs and embedding other databases. Even if they don't, we could use the user feedback to create a challenging evaluation set for mathlib semantic search, hopefully with many examples like the one <span class=\"user-mention\" data-user-id=\"238605\">@Kevin Lacker</span> gave.</p>",
        "id": 319598614,
        "sender_full_name": "Zhangir Azerbayev",
        "timestamp": 1672929286
    },
    {
        "content": "<p><a href=\"https://twitter.com/tomtumiel/status/1611729847700570118\">https://twitter.com/tomtumiel/status/1611729847700570118</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/tomtumiel/status/1611729847700570118\"><img class=\"twitter-avatar\" src=\"https://uploads.zulipusercontent.net/03a427970dfb51fa008b09390b93689c5d3c0b8c/68747470733a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f313534343336303532343034393137303433332f5a4b583042426b4e5f6e6f726d616c2e6a7067\"></a><p>Just built a new website called <a href=\"https://t.co/BqTBR6VsJH\">https://arxivxplorer.com</a>\nIt's a semantic search engine for arXiv papers, and it uses <a href=\"https://twitter.com/OpenAI\">@OpenAI</a>'s latest embedding model to find the most relevant papers for your search queries.</p><span>- Tom Tumiel (@tomtumiel)</span></div></div>",
        "id": 320896814,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1673517834
    },
    {
        "content": "<p>Can you show an example prompt that finds a relevant paper but keyword search fails?</p>",
        "id": 320918916,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1673524509
    },
    {
        "content": "<p>I'm a bit confused as to what this actually does... Anyway, I can't seem to find any search query where the results are meaningful.<br>\nFor example, searching \"prismatic cohomology\" doesn't even return <a href=\"https://arxiv.org/abs/1905.08229\">arxiv#1905.08229</a></p>",
        "id": 321267865,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1673648094
    },
    {
        "content": "<p>(which is the first google result)</p>",
        "id": 321269015,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1673648571
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/219941-Machine-Learning-for-Theorem-Proving/topic/Semantic.20Search.20for.20Mathematics/near/321267865\">said</a>:</p>\n<blockquote>\n<p>I'm a bit confused as to what this actually does... Anyway, I can't seem to find any search query where the results are meaningful.<br>\nFor example, searching \"prismatic cohomology\" doesn't even return <a href=\"https://arxiv.org/abs/1905.08229\">arxiv#1905.08229</a></p>\n</blockquote>\n<p>The author doesn't seem to say that explicitly but it <a href=\"https://twitter.com/tomtumiel/status/1612203835325403141\">possibly</a> only embeds papers in the <code>cs.xyz</code> categories. In a search for \"cohomology\", all results are tagged with <code>cs.something</code>.</p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/tomtumiel/status/1612203835325403141\"><img class=\"twitter-avatar\" src=\"https://uploads.zulipusercontent.net/03a427970dfb51fa008b09390b93689c5d3c0b8c/68747470733a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f313534343336303532343034393137303433332f5a4b583042426b4e5f6e6f726d616c2e6a7067\"></a><p><a href=\"https://twitter.com/IntuitMachine\">@IntuitMachine</a> <a href=\"https://twitter.com/OpenAI\">@OpenAI</a> It was $40 to embed all the papers in the CS category (about 500k papers)</p><span>- Tom Tumiel (@tomtumiel)</span></div></div>",
        "id": 321271783,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1673649809
    },
    {
        "content": "<p>Yeah, if I put <a href=\"https://arxiv.org/abs/1905.08229\">https://arxiv.org/abs/1905.08229</a> into the search box it says it isn't indexed. Sorry for the noise!</p>",
        "id": 321274635,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1673651058
    },
    {
        "content": "<p>How many papers are in <code>math</code>? I assume more than 500k?</p>",
        "id": 321277032,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1673652168
    },
    {
        "content": "<p>Initially I was happy because when I asked it for curvature on graphs it gave very good answers. But then I asked it Riemannian Geometry stuff and it still kept giving curvature on graphs. Looks like CS related stuff overwhelms it.</p>\n<p>Seems that filtering by subject area should improve it a lot.</p>",
        "id": 321338821,
        "sender_full_name": "Siddhartha Gadgil",
        "timestamp": 1673695361
    }
]