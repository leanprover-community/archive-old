[
    {
        "content": "<p>Given a type A the task is to find a type B and maps f:A-&gt;B, g:B-&gt;A minimizing the sum of lengths of f and g. You are also not allowed to pick B=A.</p>\n<p>So in logical terms the task is to find a statement different from a given statement but that is transparently logically equivalent to it.</p>\n<p>Is there a program that can solve this task? Were similar things considered in the literature?</p>",
        "id": 237949358,
        "sender_full_name": "Joachim Hauge",
        "timestamp": 1620473666
    },
    {
        "content": "<p>I choose <code>B = id A</code></p>",
        "id": 237950736,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1620475212
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving/topic/Generate.20similar.20but.20not.20equal.20type/near/237950736\">said</a>:</p>\n<blockquote>\n<p>I choose <code>B = id A</code></p>\n</blockquote>\n<p>Does id mean the identity on the universe? That's judgmentally equal to A. I meant you aren't allowed to pick judgmentally equal things.</p>",
        "id": 237950897,
        "sender_full_name": "Joachim Hauge",
        "timestamp": 1620475377
    },
    {
        "content": "<p>Ok I choose the subtype of <code>option A</code> corresponding to <code>A</code></p>",
        "id": 237950947,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1620475434
    },
    {
        "content": "<p>OK I don't know all the details of Lean's pattern matching. Let's say you are only allowed to use Pi-types, Sigma-types, the natural numbers, axiom choice and law of excluded middle. Can you still trivialize this game?</p>",
        "id": 237951332,
        "sender_full_name": "Joachim Hauge",
        "timestamp": 1620475832
    },
    {
        "content": "<p>Doesn't <code>B = unit -&gt; A</code> work?</p>",
        "id": 237951398,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1620475925
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"266440\">Shing Tak Lam</span> <a href=\"#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving/topic/Generate.20similar.20but.20not.20equal.20type/near/237951398\">said</a>:</p>\n<blockquote>\n<p>Doesn't <code>B = unit -&gt; A</code> work?</p>\n</blockquote>\n<p>It does. OK as stated this game is nonsense. I think there maybe a fix via homotopy type theory (have two players where one player can shoot down the proposals (B, f, g) of the other if they can exhibit an equivalence h:A-&gt;B of similar length).</p>",
        "id": 237951967,
        "sender_full_name": "Joachim Hauge",
        "timestamp": 1620476539
    },
    {
        "content": "<p>In homotopy type theory if f and g are inverses then I'm afraid B = A by the univalence axiom!</p>",
        "id": 237953136,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1620477823
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving/topic/Generate.20similar.20but.20not.20equal.20type/near/237953136\">said</a>:</p>\n<blockquote>\n<p>In homotopy type theory if f and g are inverses then I'm afraid B = A by the univalence axiom!</p>\n</blockquote>\n<p>No in the homotopy version we would allow A=B but we would impose an upper limit on the lengths of the definitions of the equivalences (e.g. any provable proposition is equal to 1 but the length of the minimum equivalence can be large).</p>",
        "id": 237955081,
        "sender_full_name": "Joachim Hauge",
        "timestamp": 1620479567
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"403138\">@Joachim Hauge</span> what is the motivation for this game?</p>",
        "id": 238026151,
        "sender_full_name": "Jason Rute",
        "timestamp": 1620556323
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"115715\">Jason Rute</span> <a href=\"#narrow/stream/219941-Machine-Learning.20for.20Theorem.20Proving/topic/Generate.20similar.20but.20not.20equal.20type/near/238026151\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"403138\">Joachim Hauge</span> what is the motivation for this game?</p>\n</blockquote>\n<p>No particular motivation. I am just trying to think of ways to make reinforcement learning algorithms think non-trivial thoughts other than \"here is a statement, prove or disprove it\".</p>",
        "id": 238026806,
        "sender_full_name": "Joachim Hauge",
        "timestamp": 1620556925
    }
]