[
    {
        "content": "<p>Today I chose PR 6485 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/6485\">Add a linter for incorrectly used decidable arguments</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> (@eric-wieser) on 2021-02-28<br>\nLabels: WIP</p>\n<p>Is this PR still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 232600277,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1617200663
    },
    {
        "content": "<p>The linter works, but \"Yury's rule of thumb\" seems to lead to some unpleasant conclusions. Consider the following lemma:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">silly</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">split_ifs</span><span class=\"bp\">;</span> <span class=\"n\">simp</span><span class=\"o\">[</span><span class=\"bp\">*</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>This lemma includes a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.decidable_eq\">docs#nat.decidable_eq</a> term in its theorem statement, which means it can't be used to rewrite a goal containing an <code>if</code> that uses <a href=\"https://leanprover-community.github.io/mathlib_docs/find/classical.dec_eq\">docs#classical.dec_eq</a>. The solution to this is to instead write this lemma</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">silly_fixed</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)]</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">split_ifs</span><span class=\"bp\">;</span> <span class=\"n\">simp</span><span class=\"o\">[</span><span class=\"bp\">*</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>This will make the statement of some lemmas significantly harder to read. Are we ok with this?</p>",
        "id": 232602856,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617201518
    },
    {
        "content": "<p>I don't know what Yury thinks, but I think my rule of thumb would be not to apply Yury's rule of thumb in situations like that where there is already a constructive decidable instance in core.</p>",
        "id": 232603222,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1617201657
    },
    {
        "content": "<p>Here's a case where the difference matters:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"sd\">/-- This definition is in a classical module, so we don't care about decidability. -/</span>\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">update_zero</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">function.update</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">update_zero</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">update_zero</span><span class=\"o\">,</span> <span class=\"n\">function.update_apply</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"n\">silly</span><span class=\"o\">,</span>  <span class=\"c1\">-- fails. `rw silly_fixed` works</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 232604679,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617202161
    },
    {
        "content": "<p>I think <code>silly_fixed</code> is a good idea, yes.</p>",
        "id": 232607069,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1617203026
    },
    {
        "content": "<p>The CI logs suggest there are 363 lemmas which need a <code>[decidable_eq ℕ]</code> argument added like this.</p>",
        "id": 232608299,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617203465
    },
    {
        "content": "<p>I think this is not a good idea. We should try to avoid <code>classical.dec_eq</code> being used to prove <code>decidable_eq nat</code> instead</p>",
        "id": 232609819,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617203908
    },
    {
        "content": "<p>Here's a full list of the arguments we'd have to add. Things like <code>[decidable false]</code> seem particularly nonsensical.</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">((</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">y</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">∣</span> <span class=\"n\">n</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">_</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"bp\">∈</span> <span class=\"n\">_</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"bp\">≤</span> <span class=\"n\">_</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a'</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">f.support</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">a'</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">a.val</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">∣</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">bitvec.add_lsb</span> <span class=\"n\">x</span> <span class=\"n\">b</span> <span class=\"bp\">%</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span> <span class=\"bp\">%</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">%</span> <span class=\"n\">c</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">d.support.sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">σ</span><span class=\"o\">),</span> <span class=\"bp\">⇑</span><span class=\"n\">d</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">e₂</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">f.same_cycle</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">finsupp.single</span> <span class=\"n\">i</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">m</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">finsupp.single</span> <span class=\"n\">i</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">m</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">fintype.card</span> <span class=\"n\">K</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">∣</span> <span class=\"n\">i</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">f.nat_degree</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">finsupp.single</span> <span class=\"n\">s</span> <span class=\"n\">n</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">%</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">L.length</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">finsupp.single</span> <span class=\"n\">s</span> <span class=\"mi\">1</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">ordnode.delta</span> <span class=\"bp\">*</span> <span class=\"n\">ls</span> <span class=\"bp\">&lt;</span> <span class=\"n\">rs</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">ordnode.delta</span> <span class=\"bp\">*</span> <span class=\"n\">rs</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ls</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">a</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">n</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">roption.of_option</span> <span class=\"n\">o</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">dom</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">roption.some</span> <span class=\"mi\">0</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">dom</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">roption.some</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">dom</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">m.support</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">0</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">x'</span> <span class=\"bp\">≠</span> <span class=\"n\">x</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">x.dom</span> <span class=\"bp\">∧</span> <span class=\"n\">y.dom</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">x.val</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">0</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"bp\">¬</span><span class=\"n\">p</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"bp\">¬</span><span class=\"n\">P</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">m</span> <span class=\"bp\">%</span> <span class=\"bp\">↑</span><span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">),</span> <span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"n\">h</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">N</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">N</span><span class=\"o\">),</span> <span class=\"n\">has_edist.edist</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">has_edist.edist</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">n</span> <span class=\"n\">h</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">y</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"n\">false</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"n\">roption.none.dom</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"n\">true</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"n\">x.dom</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"n\">y.dom</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable</span> <span class=\"bp\">↑</span><span class=\"n\">n.dom</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">((</span><span class=\"n\">unit</span> <span class=\"bp\">⊕</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"bp\">⊕</span> <span class=\"n\">l</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"bp\">×</span> <span class=\"n\">_</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"bp\">⊕</span> <span class=\"n\">_</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">dihedral</span> <span class=\"n\">n</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">lucas_lehmer.X</span> <span class=\"o\">(</span><span class=\"n\">lucas_lehmer.q</span> <span class=\"o\">(</span><span class=\"n\">p'</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)))]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">option</span> <span class=\"n\">nnreal</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">option</span> <span class=\"n\">α</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">sym2.rel.setoid</span> <span class=\"n\">V</span><span class=\"o\">))]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">quotient</span> <span class=\"n\">R</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">unit</span> <span class=\"bp\">⊕</span> <span class=\"n\">l</span> <span class=\"bp\">⊕</span> <span class=\"n\">l</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">unit</span> <span class=\"bp\">⊕</span> <span class=\"n\">l</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">units</span> <span class=\"o\">(</span><span class=\"n\">lucas_lehmer.X</span> <span class=\"o\">(</span><span class=\"n\">lucas_lehmer.q</span> <span class=\"o\">(</span><span class=\"n\">p'</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">))))]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">units</span> <span class=\"o\">(</span><span class=\"n\">zmod</span> <span class=\"n\">p</span><span class=\"o\">))]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">zmod</span> <span class=\"n\">n</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">zmod</span> <span class=\"n\">p</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">δ</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">a</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">a_1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a_1</span> <span class=\"bp\">∈</span> <span class=\"n\">has_insert.insert</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">δ</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">a_1</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">ℕ</span> <span class=\"bp\">→₀</span> <span class=\"n\">F</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">ℕ</span> <span class=\"bp\">→₀</span> <span class=\"n\">R</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">ℕ</span> <span class=\"bp\">→₀</span> <span class=\"n\">α</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">bool</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">category_theory.limits.walking_pair</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">G.dart</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">onote</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">punit</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">turing.partrec_to_TM2.K'</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">associates</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">irreducible</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">set.range</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">M₁</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">set.range</span> <span class=\"n\">v₁</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">has_insert.insert</span> <span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">multiset.ndinsert</span> <span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">),</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">nat.prime</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c.blocks_fun</span> <span class=\"o\">(</span><span class=\"n\">c.index</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c.length</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n.succ</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">//</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">ℂ</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">ℕ</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">ℤ</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"o\">(</span><span class=\"n\">G.common_neighbors</span> <span class=\"n\">v</span> <span class=\"n\">w</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"n\">odd</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"n\">set.univ</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"n\">squarefree</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">composition</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">composition</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)),</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c.length</span><span class=\"o\">)</span> <span class=\"n\">a</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">composition</span> <span class=\"n\">n</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">composition</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c.length</span><span class=\"o\">)</span> <span class=\"n\">a</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"bp\">↥</span><span class=\"o\">((</span><span class=\"bp\">⇑</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">is_some</span><span class=\"o\">))</span> <span class=\"n\">a</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">a</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">),</span> <span class=\"bp\">↥</span><span class=\"o\">((</span><span class=\"bp\">⇑</span><span class=\"o\">(</span><span class=\"n\">f.symm</span><span class=\"o\">)</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">is_some</span><span class=\"o\">))</span> <span class=\"n\">a</span><span class=\"o\">}]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_pred</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">subgroup.gpowers</span> <span class=\"n\">a</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"o\">(</span><span class=\"n\">complete_graph</span> <span class=\"n\">V</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">adj</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"o\">(</span><span class=\"n\">sym2.rel</span> <span class=\"n\">V</span><span class=\"o\">)]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"n\">f.same_cycle</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"n\">has_dvd.dvd</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"n\">has_le.le</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"n\">has_lt.lt</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"n\">setoid.r</span><span class=\"o\">]</span>\n</code></pre></div>\n</div></div>",
        "id": 232609944,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617203950
    },
    {
        "content": "<p>The only way that would happen is if you substitute into a lemma about general alpha, where the decidability proof used <code>classical.dec_eq</code>; but then that lemma is already violating yury's rule</p>",
        "id": 232609989,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617203970
    },
    {
        "content": "<p>So the violation in the example above is that I unfolded <code>update_zero</code>?</p>",
        "id": 232610032,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617203991
    },
    {
        "content": "<p>right; there should be a \"definitional lemma\" for it instead, which takes an arbitrary instance</p>",
        "id": 232610145,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617204024
    },
    {
        "content": "<p>But essentially what we're saying then is that the equation compiler itself is broken?</p>",
        "id": 232610548,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617204162
    },
    {
        "content": "<p>Because <code>update_zero.equations._eqn_1</code> is the bad lemma</p>",
        "id": 232610560,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617204167
    },
    {
        "content": "<p>This seems like a task for <code>@[simps]</code>. Would it be hard to teach it to generalize over subsingleton instances according to Yury's rule?</p>",
        "id": 232610941,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1617204307
    },
    {
        "content": "<p>\"generalizing over subsingleton instances\" is the task that leads to inserting (arguable) nonsense like <code>[decidable false]</code></p>",
        "id": 232611665,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617204582
    },
    {
        "content": "<p>It sounds like Mario is arguing that only the classical instances should be generalized</p>",
        "id": 232611944,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617204657
    },
    {
        "content": "<p>Which I think is a valid argument iff there are no other diamonds that can occur for <code>decidable</code></p>",
        "id": 232611989,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617204673
    },
    {
        "content": "<p>I would use <code>[decidable_eq α]</code> in the definition of <code>update_zero</code>.</p>",
        "id": 232615109,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1617205798
    },
    {
        "content": "<p>But you wouldn't add such an argument for <code>finsum</code>, right?</p>",
        "id": 232615571,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617205980
    },
    {
        "content": "<p>I think it is okay for <code>update_zero</code> to have classical stuff internally, since the type of <code>update_zero</code> does not require any decidability</p>",
        "id": 232615743,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617206043
    },
    {
        "content": "<p>You might want a version with <code>decidable_eq A</code> if you intend to use it in computational contexts, like the finset ops, but otherwise this is analogous to definitions on <code>finsupp</code> or <code>finsum</code> that are \"explicitly classicalized\"</p>",
        "id": 232615916,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617206092
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/263328-triage/topic/PR.20.236485.3A.20Add.20a.20linter.20for.20incorrectly.20used.20decidable.20arg.2E.2E.2E/near/232610560\">said</a>:</p>\n<blockquote>\n<p>Because <code>update_zero.equations._eqn_1</code> is the bad lemma</p>\n</blockquote>\n<p>True, but this lemma is only as important as you make it. You can write your own equation lemma and use it instead of the built in one - the equation compiler \"gets it right\" only about 70-80% of the time, so manual equation lemmas are quite common</p>",
        "id": 232616390,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617206247
    },
    {
        "content": "<p>It would be nice if there were some way to register your own lemmas as an equation lemma, so that there was no way to end up using the bad one</p>",
        "id": 232619412,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617207282
    },
    {
        "content": "<p>That is, have <code>rw my_def</code> mean <code>rw my_def.equation.my_eqn_lemma</code></p>",
        "id": 232619481,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617207305
    },
    {
        "content": "<p>For me difference between <code>update_zero</code> and <code>finprod</code> is that <code>finprod</code> is irreducible which means \"don't unfold, use API\".</p>",
        "id": 232657796,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1617221659
    },
    {
        "content": "<p>But probably Mario is right about <code>update_zero</code> too.</p>",
        "id": 232657822,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1617221672
    },
    {
        "content": "<p>So your rule would be, the API around <code>finprod</code> should always accept a decidable argument rather than finding one from the environment?</p>",
        "id": 232658963,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617222161
    },
    {
        "content": "<p>It should take a decidable argument in any lemma that requires decidability in the statement. Many theorems about <code>finprod</code> won't need this, specifically <em>because</em> <code>finprod</code> itself doesn't take a decidability argument</p>",
        "id": 232659268,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617222300
    },
    {
        "content": "<p>So for example if you have <code>foo x := if p x then 0 else 1</code> then the theorem <code>foo x = if p x then 0 else 1</code> will need <code>decidable (p x)</code> but <code>p x -&gt; foo x = 0</code> and <code>not (p x) -&gt; foo x = 1</code> will not</p>",
        "id": 232659484,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617222389
    },
    {
        "content": "<p>Today I chose PR 6485 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/6485\">Add a linter for incorrectly used decidable arguments</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> (@eric-wieser) on 2021-02-28<br>\nLabels: WIP</p>\n<p>Is this PR still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 265920327,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1640269042
    },
    {
        "content": "<p>Today I chose PR 6485 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/6485\">Add a linter for incorrectly used decidable arguments</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> (@eric-wieser) on 2021-02-28<br>\nLabels: WIP</p>\n<p>Is this PR still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 266812448,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1641305874
    },
    {
        "content": "<p>Today I chose PR 6485 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/6485\">Add a linter for incorrectly used decidable arguments</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> (@eric-wieser) on 2021-02-28<br>\nLabels: WIP</p>\n<p>Is this PR still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 277424360,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1648822486
    },
    {
        "content": "<p>Today I chose PR 6485 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/6485\">Add a linter for incorrectly used decidable arguments</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> (@eric-wieser) on 2021-02-28<br>\nLabels: WIP</p>\n<p>Is this PR still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 315374928,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1670854094
    }
]