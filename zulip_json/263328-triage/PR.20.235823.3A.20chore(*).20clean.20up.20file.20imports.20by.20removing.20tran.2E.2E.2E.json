[
    {
        "content": "<p>Today I chose PR 5823 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/5823\">chore(*) clean up file imports by removing transitively included files</a></strong><br>\nCreated by @<strong>Alex J Best</strong> (@alexjbest) on 2021-01-21<br>\nLabels: RFC, merge-conflict, question</p>\n<p>Is this PR still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 225021621,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1612362142
    },
    {
        "content": "<p>Today I chose PR 5823 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/5823\">chore(*) clean up file imports by removing transitively included files</a></strong><br>\nCreated by @<strong>Alex J Best</strong> (@alexjbest) on 2021-01-21<br>\nLabels: RFC, merge-conflict, question</p>\n<p>Is this PR still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 232276261,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1617027867
    },
    {
        "content": "<p>My understanding is that some people think this is a bad idea for some reason?</p>",
        "id": 232329342,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1617049139
    },
    {
        "content": "<p>Yes, I am one of those people</p>",
        "id": 232334009,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617051141
    },
    {
        "content": "<p>I'd argue you want the reverse, where every lemma you rely upon has its module directly imported; but that's much harder to write a linter for.</p>\n<p>This is somewhat relevant, which explains a similar opinion, but applied to C and C++: <a href=\"https://github.com/include-what-you-use/include-what-you-use/blob/master/docs/WhyIWYU.md\">https://github.com/include-what-you-use/include-what-you-use/blob/master/docs/WhyIWYU.md</a></p>",
        "id": 232334292,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617051277
    },
    {
        "content": "<p>I think I've mostly come round (to the position that it is not a sufficiently good idea to do much of it). </p>\n<p>I think there is a counter-argument, however. </p>\n<p>I think it is very valuable to split up files in order to reduce dependencies -- that is, if 90% of a file only needs <code>import a</code>, then rather than adding <code>import b</code> for the last 10%, you should just move that 10% to a new file. Typically, this results in naturally segmenting files based on their mathematical content. And in any case, I think we have far too many large files. :-)</p>\n<p>So I will very happily endorse this sort of import refactoring!</p>\n<p>Currently the best way to do this sort of refactoring is to go through the imports one by one, deleting them, and seeing if some well-delineated sub-chunk of the file stops compiling. If everything complains, of course that import is essential. However, if we went in the reverse direction, of positively including transitive dependencies, then if becomes harder to do this analysis, just because there are more import lines to analyse, most of them giving you no information.</p>\n<p>I've at times done this sort of analysis -- every so often I'll stare at the dependency graph and ask \"why on earth do we need to know about matrices before we can define adjunctions?\" and then try to clean it up. I find it strangely soothing. :-)</p>",
        "id": 232350614,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1617060080
    },
    {
        "content": "<p>Is it possible / sensible to have a structure that uses some imports only for specific sections in a file? I have a feeling a practical downside of having separate files depending on which imports one needs would be that it becomes less easy to navigate while editing.</p>",
        "id": 232410442,
        "sender_full_name": "Jakob Scholbach",
        "timestamp": 1617104062
    },
    {
        "content": "<p>the CS people really don't like that idea</p>",
        "id": 232410638,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1617104180
    },
    {
        "content": "<p>Today I chose PR 5823 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/5823\">chore(*) clean up file imports by removing transitively included files</a></strong><br>\nCreated by @<strong>Alex J Best</strong> (@alexjbest) on 2021-01-21<br>\nLabels: RFC, merge-conflict, question</p>\n<p>Is this PR still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 233496824,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1617805516
    },
    {
        "content": "<p>Today I chose PR 5823 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/5823\">chore(*) clean up file imports by removing transitively included files</a></strong><br>\nCreated by @<strong>Alex J Best</strong> (@alexjbest) on 2021-01-21<br>\nLabels: RFC, merge-conflict, question</p>\n<p>Is this PR still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 235686989,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1619101482
    }
]