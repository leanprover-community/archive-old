[
    {
        "content": "<p>Today I chose PR 5010 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/5010\">feat(data/fin): identities in add and mul monoids</a></strong><br>\nCreated by <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> (@pechersky) on 2020-11-15<br>\nLabels: WIP, awaiting-author, merge-conflict</p>\n<p>Is this PR still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 222078499,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1610116359
    },
    {
        "content": "<p>I'd like to make this PR something about transferring the <code>comm_ring</code> instance or some substructure of that for <code>fin</code> out of <code>data/zmod/basic</code> to <code>data/fin</code>. That way there wouldn't have to be \"orphan\" <code>add_comm</code>, <code>add_assoc</code> and the like. I understand that one shouldn't be doing \"add\" or \"mul\" in <code>fin</code>, but at least given the definitions we have now, it's very hard to deal with these operations when they appear. A compromise might be to just have <code>group</code> and <code>add_group</code> and nothing more.</p>",
        "id": 222080454,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1610117442
    }
]