[
    {
        "content": "<p>Today I chose issue 946 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/946\">data.nat.cast.cast is too general to be an instance</a></strong><br>\nCreated by @<strong>None</strong> (@simonjwinwood) on 2019-04-17<br>\nLabels: </p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 218007012,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1606400445
    },
    {
        "content": "<p>Related: <a href=\"#narrow/stream/116395-maths/topic/Friday.20afternoon.20puzzle.20--.2037.20.E2.88.88.2037.3F/near/217418582\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Friday.20afternoon.20puzzle.20--.2037.20.E2.88.88.2037.3F/near/217418582</a></p>",
        "id": 218013746,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1606404380
    },
    {
        "content": "<p>Today I chose issue 946 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/946\">data.nat.cast.cast is too general to be an instance</a></strong><br>\nCreated by @<strong>None</strong> (@simonjwinwood) on 2019-04-17<br>\nLabels: </p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 220121055,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1608128740
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.cast\">docs#nat.cast</a></p>",
        "id": 220121735,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608129055
    },
    {
        "content": "<p>Today I chose issue 946 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/946\">data.nat.cast.cast is too general to be an instance</a></strong><br>\nCreated by @<strong>None</strong> (@simonjwinwood) on 2019-04-17<br>\nLabels: </p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 227094381,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1613830784
    },
    {
        "content": "<p>Today I chose issue 946 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/946\">data.nat.cast.cast is too general to be an instance</a></strong><br>\nCreated by @<strong>None</strong> (@simonjwinwood) on 2019-04-17<br>\nLabels: </p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 228960894,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1614954046
    },
    {
        "content": "<p>Today I chose issue 946 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/946\">data.nat.cast.cast is too general to be an instance</a></strong><br>\nCreated by @<strong>None</strong> (@simonjwinwood) on 2019-04-17<br>\nLabels: </p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 230165677,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1615645274
    },
    {
        "content": "<p>It seems at the conclusion of <a href=\"https://github.com/leanprover-community/mathlib/issues/5664\">#5664</a>, which added <code>nat.bin_cast</code>, there was a suggestion to try making it the implementation of the coercion. Did anyone attempt this?</p>",
        "id": 230195708,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615676267
    },
    {
        "content": "<p>It seems that it would be a satisfactory resolution to this old issue!</p>",
        "id": 230195715,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615676280
    },
    {
        "content": "<p>Yes, I tried doing it. But too many things use nat.cast in places where there is no proof of associativity, commutativity, or '0+0=0' which is what makes nat.cast and nat.bin_cast probably equal</p>",
        "id": 230199902,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1615681421
    },
    {
        "content": "<p>For example, it was a slog to try to get it working for pgame.short, so I abandoned the attempt.</p>",
        "id": 230199945,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1615681448
    },
    {
        "content": "<p>Ah, thanks! It's nice to know the combinatorial games are a good test case for this issue.</p>",
        "id": 230200736,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615682444
    },
    {
        "content": "<p>Could we try something like \"use <code>nat.bin_cast</code> by default, but it's okay, e.g. in <code>pgame</code>, to instead use the more primitive coercion\"?</p>",
        "id": 230200756,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615682486
    },
    {
        "content": "<p>So, instance priority based <code>add_comm_monoid -&gt; nat.bin_cast</code>, and <code>nat.cast</code> as lower priority?</p>",
        "id": 230201437,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1615683387
    },
    {
        "content": "<p>Yes.</p>",
        "id": 230202193,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615684440
    },
    {
        "content": "<p>Maybe it ends up being confusing.</p>",
        "id": 230202233,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615684450
    },
    {
        "content": "<p>Today I chose issue 946 for discussion!</p>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/issues/946\">data.nat.cast.cast is too general to be an instance</a></strong><br>\nCreated by @<strong>None</strong> (@simonjwinwood) on 2019-04-17<br>\nLabels: </p>\n<p>Is this issue still relevant? Any recent updates? Anyone making progress?</p>",
        "id": 259733320,
        "sender_full_name": "Random Issue Bot",
        "timestamp": 1635603497
    }
]