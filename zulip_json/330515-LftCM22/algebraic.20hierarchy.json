[
    {
        "content": "<p>In a moment I will talk about the \"algebraic hierarchy\".<br>\nHere is a graphical hyperlinked depiction of the instance graph of algebraic structures in mathlib.<br>\n<a href=\"/user_uploads/3121/GzQALJw3gD7GBup_7myA_wb_/instance_graph.svg\">instance_graph.svg</a> </p>\n<p>Major thanks to <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> for generating this on short notice!</p>",
        "id": 289505692,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1657739001
    },
    {
        "content": "<p>On the Zoom, I mentioned that Michael Kohlhase's group has a theory graph viewer that might be useful to the Lean community. Here's a link to the repository: <a href=\"https://github.com/UniFormal/TGView\">https://github.com/UniFormal/TGView</a></p>",
        "id": 289513179,
        "sender_full_name": "Katja Berčič",
        "timestamp": 1657742657
    },
    {
        "content": "<p>For anyone interesting in generating better graphs, that was generated with <code>graphviz</code> and the lean code here:</p>\n<p><a href=\"https://gist.github.com/eric-wieser/479c49a306430d9d8a896f105ef32178\">https://gist.github.com/eric-wieser/479c49a306430d9d8a896f105ef32178</a></p>\n<p>It's not a complete export as I only used everything under <a href=\"https://tqft.net/mathlib/analysis/normed_space/banach\">file#analysis/normed_space/banach</a> to keep it fast, but you could easily regenerate it for all of mathlib using <code>leanproject mk-all</code>.</p>",
        "id": 289588771,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657803813
    },
    {
        "content": "<p>I went ahead and updated the above with a mk-all version. The monster graph is</p>\n<p><a href=\"https://gist.githubusercontent.com/eric-wieser/479c49a306430d9d8a896f105ef32178/raw/32f67356bac21dda2c9a80a99d6cef602b643d96/out-large.svg\">https://gist.githubusercontent.com/eric-wieser/479c49a306430d9d8a896f105ef32178/raw/32f67356bac21dda2c9a80a99d6cef602b643d96/out-large.svg</a></p>",
        "id": 289619396,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657818101
    },
    {
        "content": "<p>The king! <a href=\"/user_uploads/3121/S-vv4V1JEY_QM3RtWMuBBFO4/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/S-vv4V1JEY_QM3RtWMuBBFO4/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/S-vv4V1JEY_QM3RtWMuBBFO4/image.png\"></a></div>",
        "id": 289621556,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1657819028
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> Thank you so much for doing this!</p>",
        "id": 289629783,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1657822890
    },
    {
        "content": "<p>That typeclass is not my favourite typeclass. [PS sorry.]</p>",
        "id": 289637116,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657826463
    },
    {
        "content": "<p>It shouldn't be at the top</p>",
        "id": 289637133,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657826471
    },
    {
        "content": "<p>There are diamond problems with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"true\">‾</mo></mover><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\overline{\\R},</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0833em;vertical-align:-0.1944em;\"></span><span class=\"mord overline\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8889em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span></span><span style=\"top:-3.8089em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"overline-line\" style=\"border-bottom-width:0.04em;\"></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span> which has two canonical <code>is_R_or_C</code> structures</p>",
        "id": 289637253,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657826524
    },
    {
        "content": "<p>Kevin, you shouldn't say that. This type class nicely solves a lot of issues.</p>",
        "id": 289638137,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1657826982
    },
    {
        "content": "<p>To link to a <a href=\"#narrow/stream/113489-new-members/topic/Michael.20Stoll.20.2F.20confusion.20with.20addition/near/272289141\">previous discussion</a> of whether <code>is_R_or_C</code> should even exist, a guess would be that <code>is_R_or_C</code> could be replaced by \"simultaneously a a finite-dimensional extension field of <code>ℝ</code> and a <code>star_ring</code>, with the star fixing only <code>ℝ</code>\".  But I am not even confident that that statement encodes all the needed properties.</p>",
        "id": 289640020,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1657827920
    },
    {
        "content": "<p>Of course I'm not serious about is_R_or_C but at some level the typeclass troubles me. Brian Conrad wrote an entire book explaining why if you're doing some kinds of mathematics then you never have to choose a preferred square root of -1. This has led me to believe that you should always think twice before doing so.</p>",
        "id": 289640726,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657828250
    },
    {
        "content": "<p>Kevin, my abstract definition doesn't involve a choice of square root of -1 ... I just haven't thought about whether it would truly work in all the use cases.</p>",
        "id": 289640887,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1657828330
    },
    {
        "content": "<p>I think my biggest qualm with <code>is_R_or_C</code> is that it's too appealing a tool to reach for when you might not actually need something that strong. Of course, the reason it's so appealing a tool to reach for is precisely because it solves lots of issues!</p>",
        "id": 289641192,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657828511
    },
    {
        "content": "<p>I think basically I've never thought hard about situations where it's really important to pick an orientation, and I've thought very hard about situations where it's actively a bad idea.</p>",
        "id": 289642279,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657829012
    }
]