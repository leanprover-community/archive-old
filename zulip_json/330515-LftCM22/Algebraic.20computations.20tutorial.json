[
    {
        "content": "<p>You can get a local copy of Heather's tutorial by running in the terminal:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>leanproject get https://github.com/hrmacbeth/computations_in_lean\n</code></pre></div>",
        "id": 289374784,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1657654504
    },
    {
        "content": "<p>The HTML pages are at <a href=\"https://hrmacbeth.github.io/computations_in_lean\">https://hrmacbeth.github.io/computations_in_lean</a></p>",
        "id": 289374854,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1657654534
    },
    {
        "content": "<p>This can be abbreviated to</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>leanproject get hrmacbeth/computations_in_lean\n</code></pre></div>",
        "id": 289374898,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1657654560
    },
    {
        "content": "<p>I did part of the beta testing, and I really recommend everyone to try some of the examples</p>",
        "id": 289377253,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1657655721
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Stockholm_syndrome\">https://en.wikipedia.org/wiki/Stockholm_syndrome</a></p>",
        "id": 289377299,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1657655747
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> Thanks you so much for this fantastic talk! It felt like you time-traveled to us from the future!</p>",
        "id": 289383798,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1657659119
    },
    {
        "content": "<p>Yes that was very impressive!</p>",
        "id": 289386162,
        "sender_full_name": "Jake Levinson",
        "timestamp": 1657660298
    },
    {
        "content": "<p>And impressive work by <span class=\"user-mention\" data-user-id=\"458879\">@Abby Goldberg</span> and <span class=\"user-mention\" data-user-id=\"452188\">@Dhruv Bhatia</span> on making the <code>linear_combination</code> and <code>polyrith</code> tactics.</p>",
        "id": 289386325,
        "sender_full_name": "Jake Levinson",
        "timestamp": 1657660390
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> Great presentation. Would there be interest to move the conversion from Sage objects to Lean inputs from <a href=\"https://github.com/leanprover-community/mathlib/blob/master/scripts/polyrith_sage_helper.py\">https://github.com/leanprover-community/mathlib/blob/master/scripts/polyrith_sage_helper.py</a> into Sage?</p>",
        "id": 289520332,
        "sender_full_name": "Matthias Köppe",
        "timestamp": 1657746089
    },
    {
        "content": "<p>This would be an interesting thing to discuss! If it's going to be \"official\" in that sense we might want to think about a more principled way, but yes, there would be interest</p>",
        "id": 289522149,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1657746982
    },
    {
        "content": "<p>Also <span class=\"user-mention\" data-user-id=\"513554\">@Matthias Köppe</span> we've also come up with some questions for someone familiar with Sage/Singular Grobner basis computations, if you know much about that/know anyone who does <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 289523276,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1657747582
    },
    {
        "content": "<p>Sage already has lots of conversions to other systems, implemented via methods such as \"_maxima_init_\", \"_fricas_init_\" etc. Lean mathlib would be easy to add.</p>",
        "id": 289523802,
        "sender_full_name": "Matthias Köppe",
        "timestamp": 1657747894
    },
    {
        "content": "<p>I've opened <a href=\"https://trac.sagemath.org/ticket/34180\">https://trac.sagemath.org/ticket/34180</a> to keep track of anything Lean-related in Sage</p>",
        "id": 289523898,
        "sender_full_name": "Matthias Köppe",
        "timestamp": 1657747927
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110596\">Rob Lewis</span> <a href=\"#narrow/stream/330515-LftCM22/topic/Algebraic.20computations.20tutorial/near/289523276\">said</a>:</p>\n<blockquote>\n<p>Also <span class=\"user-mention silent\" data-user-id=\"513554\">Matthias Köppe</span> we've also come up with some questions for someone familiar with Sage/Singular Grobner basis computations, if you know much about that/know anyone who does <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>Can't say that I'm an expert on that. Best to ask in <a href=\"https://groups.google.com/g/sage-support\">https://groups.google.com/g/sage-support</a></p>",
        "id": 289524045,
        "sender_full_name": "Matthias Köppe",
        "timestamp": 1657748016
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"513554\">Matthias Köppe</span> <a href=\"#narrow/stream/330515-LftCM22/topic/Algebraic.20computations.20tutorial/near/289523802\">said</a>:</p>\n<blockquote>\n<p>Sage already has lots of conversions to other systems, implemented via methods such as \"_maxima_init_\", \"_fricas_init_\" etc. Lean mathlib would be easy to add.</p>\n</blockquote>\n<p>I have prepared <a href=\"https://trac.sagemath.org/ticket/34182\">https://trac.sagemath.org/ticket/34182</a> to illustrate what this could look like</p>",
        "id": 289754348,
        "sender_full_name": "Matthias Köppe",
        "timestamp": 1657904414
    }
]