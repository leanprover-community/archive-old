[
    {
        "content": "<p>Right now Lean has normal extensions of fields, and it has algebraic closures, but it doesn't have the theory of normal closures. I made a start on this on a <a href=\"https://github.com/leanprover-community/mathlib/tree/kbuzzard/normal_closure\">normal closure branch</a> and also on <a href=\"https://github.com/leanprover-community/mathlib/tree/kbuzzard/normal_universal\">branch#kbuzzard/normal_universal</a> where I started a more foundational attempt. This is actually holding up a project of mine. Would anyone like to take it on?</p>",
        "id": 289405777,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657675255
    },
    {
        "content": "<p>Looking into it.</p>",
        "id": 289423345,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1657696915
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"406490\">@María Inés de Frutos Fernández</span> wanted something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">noncomputable</span><span class=\"bp\">!</span> <span class=\"kd\">def</span> <span class=\"n\">normal_closure</span> <span class=\"o\">:</span> <span class=\"n\">intermediate_field</span> <span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"n\">algebraic_closure</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">supr</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">φ</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"bp\">→ₐ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">algebraic_closure</span> <span class=\"n\">L</span><span class=\"o\">),</span> <span class=\"n\">φ.field_range</span><span class=\"o\">)</span> <span class=\"c1\">-- or whatever</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">normal_closure</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">is_normal</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">algebra.is_algebraic</span> <span class=\"n\">K</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">normal</span> <span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"n\">normal_closure</span> <span class=\"n\">K</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">is_finite_dimensional</span> <span class=\"o\">[</span><span class=\"n\">finite_dimensional</span> <span class=\"n\">K</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">finite_dimensional</span> <span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"n\">normal_closure</span> <span class=\"n\">K</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">normal_closure</span>\n</code></pre></div>",
        "id": 289449277,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657714469
    },
    {
        "content": "<p>but she might be more flexible with the algebraic closure thing. Oh she also wanted a map <code>L -&gt; normal_closure K L</code></p>",
        "id": 289449295,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657714479
    }
]