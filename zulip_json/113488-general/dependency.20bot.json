[
    {
        "content": "<p>We have a nice dependency bot, telling us when all dependencies have been resolved. Is it possible to teach the bot to merge master at this moment (if there are no conflicts), to make sure that reviewing the PR becomes possible? Otherwise, the diff contains both the new content and the material of the previous PRs it was depending on...</p>",
        "id": 223776212,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1611436189
    },
    {
        "content": "<p>I don't see an easy way to trigger additional actions only when all dependencies are resolved without making modifications to <a href=\"https://github.com/z0al/dependent-issues/\">the dependent-issues action</a>, but we could try some other GitHub actions e.g. <a href=\"https://github.com/marketplace/actions/auto-update\">https://github.com/marketplace/actions/auto-update</a> which looks like it can automatically merge master into all PRs or PRs with a certain label.</p>",
        "id": 223777975,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611437596
    },
    {
        "content": "<p>I think I've had a bad time in the past trying to merge master into a PR B that includes commits from PR A, where PR A has been merged - it's caused by bors doing a rebase, which means that git doesn't have any common history to try and construct a 3-way merge between A-plus-B and master-plus-A-rebased from</p>",
        "id": 223780544,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1611439783
    },
    {
        "content": "<p>It would be cool if after bors did the rebase into master, instead of deleting branch <code>A</code> it then checked out <code>A</code>  and ran <code>git merge master --theirs</code>, which would mean that A could be cleanly merged into B using the parent of that merge commit as the common ancestor</p>",
        "id": 223780956,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1611440014
    }
]