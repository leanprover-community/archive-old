[
    {
        "content": "<p>Dear All,</p>\n<p>I am trying to find a good notation for the type of positive elements of a type with <code>0</code> and <code>&lt;</code>.  Below are some suggestions: I have tested them <em>a little</em>, but I am not sure that they will not cause other problems.  Feel free to vote for one of the existing ones or to add choices!</p>\n<p>Thanks!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">has_zero</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_lt</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kd\">@[reducible]</span>\n<span class=\"kd\">def</span> <span class=\"n\">pos</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">//</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">}</span>\n\n<span class=\"kd\">notation</span> <span class=\"bp\">???</span> <span class=\"o\">:=</span> <span class=\"n\">pos</span> <span class=\"n\">α</span>\n</code></pre></div>",
        "id": 270550054,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1643895694
    },
    {
        "content": "<p>/poll Notation for positive elements<br>\n<code>α›0</code><br>\n<code>α&gt;0</code><br>\n<code>α&gt;₀</code><br>\n<code>α₊₀</code><br>\n<code>α₊</code></p>",
        "id": 270550059,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1643895696
    },
    {
        "content": "<p>What is wrong with <code>{x : α // 0 &lt; x}</code>? I was happy with the corresponding notation in <a href=\"https://tqft.net/mathlib/algebra/order/nonneg\">file#algebra/order/nonneg</a>.</p>",
        "id": 270550811,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1643895946
    },
    {
        "content": "<p>I would say the downside is its quite long. That's a lot of characters to represent a fairly simple idea</p>",
        "id": 270551080,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1643896051
    },
    {
        "content": "<p>I agree with Alex: it works, but is long and not as catchy as, for instance, <code>ℝ≥0</code>.</p>",
        "id": 270551362,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1643896156
    },
    {
        "content": "<p>Although it is a possibility: I will add it to the list!  (I did not know that the backticks do not work in polls.)</p>",
        "id": 270551412,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1643896180
    },
    {
        "content": "<p>If the <code>&gt;0</code> in option 2 consists of two ASCII characters, I would like to note that that option implies that you are never able to write <code>_ &gt; 0</code> without space anymore (and Lean will give a cryptic error message if you do).</p>",
        "id": 270552210,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1643896473
    },
    {
        "content": "<p>What I really want is <code>α\\_&gt;₀</code>, but Unicode is lacking...</p>",
        "id": 270552448,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643896571
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span> <a href=\"#narrow/stream/113488-general/topic/notation.20for.20positive.20elements/near/270552210\">said</a>:</p>\n<blockquote>\n<p>If the <code>&gt;0</code> in option 2 consists of two ASCII characters, I would like to note that that option implies that you are never able to write <code>_ &gt; 0</code> without space anymore (and Lean will give a cryptic error message if you do).</p>\n</blockquote>\n<p>Ok, so, even though I forgot the meaning of the symbol <code>&gt;</code>, thanks to mathlib, this is probably a good reason to remove this one from the list.</p>",
        "id": 270552970,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1643896793
    },
    {
        "content": "<p><a href=\"https://unicode-search.net/unicode-namesearch.pl\">What Unicode has to offer</a> (search for GREATER)</p>",
        "id": 270553280,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643896901
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/notation.20for.20positive.20elements/near/270553280\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://unicode-search.net/unicode-namesearch.pl\">What Unicode has to offer</a> (search for GREATER)</p>\n</blockquote>\n<p>There's also <a href=\"https://unicode-table.com/en/1433/\">https://unicode-table.com/en/1433/</a> (<code>ᐳ</code>) </p>\n<p>(<a href=\"https://www.reddit.com/r/rust/comments/5penft/comment/dcsq64p/?utm_source=share&amp;utm_medium=web2x&amp;context=3\">\"If you look closely, those aren't angle brackets, they're characters from the Canadian Aboriginal Syllabics block\"</a>)</p>\n<p>edit: also <a href=\"https://shapecatcher.com/\">https://shapecatcher.com/</a> is good for finding things with the shape of a <code>&gt;</code> but isn't <code>&gt;</code></p>",
        "id": 270568495,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1643902801
    },
    {
        "content": "<p>Wow!!  Thanks!</p>\n<p>This means that this is also an option:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">α</span><span class=\"bp\">˃⁰</span>\n</code></pre></div>",
        "id": 270569348,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1643903113
    },
    {
        "content": "<p>(Added this choice above: it looks much better in the poll than here.)</p>",
        "id": 270570123,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1643903385
    },
    {
        "content": "<p>In the French tradition, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">R</mi><mo>+</mo></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb R_+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8972em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant=\"double-struck\">R</mi><mo separator=\"true\">,</mo><mn>0</mn><mo>≤</mo><mi>x</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{x \\in \\mathbb R, 0 \\le x\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8833em;vertical-align:-0.1944em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">}</span></span></span></span> so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mo>+</mo></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha_+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6389em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span> would be a little confusing as meaning the strict inequality</p>",
        "id": 270571729,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1643903942
    },
    {
        "content": "<p>we have ℕ with zero, so sometimes these things have to be done</p>",
        "id": 270572184,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1643904069
    },
    {
        "content": "<p>Do there need to be a companion notation for <code>le</code> instead of <code>lt</code>?</p>",
        "id": 270572615,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1643904222
    },
    {
        "content": "<p>FWIW homotopy theorists also use <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>X</mi><mo lspace=\"0em\" rspace=\"0em\">+</mo></msub></mrow><annotation encoding=\"application/x-tex\">{X}_{+}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8917em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span></span></span></span> to mean basically <code>option X</code>, and I assume this notation is also popular in other fields with other meanings (like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mo>+</mo></msub><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\"false\">{</mo><mi>f</mi><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">f_+ = \\max \\{f, 0\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9028em;vertical-align:-0.2083em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2583em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2083em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">max</span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">}</span></span></span></span>), so maybe better not to reserve a global meaning for it</p>",
        "id": 270572823,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643904299
    },
    {
        "content": "<p>also in pretty much the next topic I clicked on I saw <code>⌊x⌋₊</code>, which I don't know the meaning of but looks likely to conflict</p>",
        "id": 270573054,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643904373
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.floor\">docs#nat.floor</a></p>",
        "id": 270574436,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643904929
    },
    {
        "content": "<p>I don't think that \"<code>ε&gt;0</code> doesn't work\" is really bad. I would say that \"insert spaces around binary operations and relations, otherwise you may hit a notation\" is not that bad.</p>",
        "id": 270574648,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643904993
    },
    {
        "content": "<p>Another option is to use</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"bp\">`</span><span class=\"n\">α</span><span class=\"bp\">&gt;</span><span class=\"mi\">0</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">//</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>(one line per relevant type variable) in files that deal with general theory and register, e.g., <code>ℝ&gt;0</code>, <code>ℚ&gt;0</code> globally.</p>",
        "id": 270574837,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643905070
    },
    {
        "content": "<p>I've added a bunch of spaces around notation myself, so i'm all in favor of enforcing it more.</p>",
        "id": 270574926,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643905096
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/113488-general/topic/notation.20for.20positive.20elements/near/270574648\">said</a>:</p>\n<blockquote>\n<p>I don't think that \"<code>ε&gt;0</code> doesn't work\" is really bad. I would say that \"insert spaces around binary operations and relations, otherwise you may hit a notation\" is not that bad.</p>\n</blockquote>\n<p>One downside is that maybe \"we\" all know that you need to put spaces in <code>ε &gt; 0</code>, but a new user might write <code>∀ε&gt;0</code> and get a totally baffling error message (I'm assuming).</p>",
        "id": 270576586,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643905747
    },
    {
        "content": "<p>if we put it in a locale, then such a user would have had to opt in first</p>",
        "id": 270578938,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1643906654
    },
    {
        "content": "<p>It would be nice if we could attach docstrings to locales so that hovering over <code>open_locale foo</code> gave some information about what the effect it</p>",
        "id": 270579041,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1643906691
    },
    {
        "content": "<p>That's actually a great idea!</p>",
        "id": 270579269,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643906771
    },
    {
        "content": "<p>I'm tempted to go with Yuri's suggestion of local notation with the α embedded into the symbol.</p>\n<p>I think that for this PR it is easier like this.  Changing it in a subsequent one will be easy, if desired!</p>",
        "id": 270599688,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1643914741
    },
    {
        "content": "<p>I've also just found this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">α</span><span class=\"bp\">˲₀</span>\n</code></pre></div>\n<p>I think that I'm going to use this, with α hardcoded in the notation, as per Yuri's suggestion!</p>",
        "id": 270615577,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1643921421
    },
    {
        "content": "<p>I think using regular <code>&gt;0</code> would be better to match <code>ℝ≥0</code></p>",
        "id": 270616975,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1643922112
    },
    {
        "content": "<p>Unless we change both</p>",
        "id": 270617066,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1643922144
    },
    {
        "content": "<p>Fair enough: I like the consistency argument!</p>",
        "id": 270617139,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1643922176
    }
]