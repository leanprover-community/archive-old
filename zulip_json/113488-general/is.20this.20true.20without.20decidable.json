[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hnat</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">≠</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hR</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n<span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</pre></div>",
        "id": 133509753,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536325910
    },
    {
        "content": "<p>If it is true, what is the one-line proof?<br>\nIf it is not true, what is the one-line proof assuming <code>[decidable_eq R]</code>?</p>",
        "id": 133509865,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536326020
    },
    {
        "content": "<p>Never mind. This is completely false.</p>",
        "id": 133509993,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536326157
    },
    {
        "content": "<p>/me needs to relearn modular arithmetic</p>",
        "id": 133510050,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536326186
    },
    {
        "content": "<p>I thought this was my goal state. But it's not. <code>i</code> and <code>j</code> are coerced somewhere else. But I don't know where.</p>",
        "id": 133510142,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536326286
    },
    {
        "content": "<p>/me needs to look at the <code>pp.all true</code> variant of the goal state.</p>",
        "id": 133510154,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536326304
    }
]