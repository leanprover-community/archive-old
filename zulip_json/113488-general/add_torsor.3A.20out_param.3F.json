[
    {
        "content": "<p>I'm trying to port <code>analysis/convex</code> to affine spaces. Very often I have to add the vector space as an explicit parameter but <code>convex E s</code> looks strange. Can we use some <code>out_param</code> magic or some other magic to make it work?</p>",
        "id": 199837267,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1591334825
    },
    {
        "content": "<p>I want to say that every affine space (should we assume the same for <code>add_torsor</code>s?) has exactly one vector space behind it.</p>",
        "id": 199837357,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1591334945
    },
    {
        "content": "<p>We used to have <code>out_param</code>s in modules, and it was a nightmare. So I'm scared by <code>out_param</code>s in general...</p>",
        "id": 199837366,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591334960
    },
    {
        "content": "<p>What kind of nightmare?</p>",
        "id": 199837382,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1591334986
    },
    {
        "content": "<p>I think I was not there yet.</p>",
        "id": 199837429,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1591335012
    },
    {
        "content": "<p>Do we want <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> to be a torsor for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>?</p>",
        "id": 199837431,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591335015
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/113488-general/topic/add_torsor.3A.20out_param.3F/near/199837382\">said</a>:</p>\n<blockquote>\n<p>What kind of nightmare?</p>\n</blockquote>\n<p>Basically, we had the definition of module/vector space, and dimension. And nothing else.</p>",
        "id": 199837439,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591335036
    },
    {
        "content": "<p>Every time someone tried to do something, you would only get a bunch of errors.</p>",
        "id": 199837448,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591335055
    },
    {
        "content": "<p>But back then I didn't understand anything of the discussions about <code>out_param</code>.</p>",
        "id": 199837454,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591335073
    },
    {
        "content": "<p>Then we'll have to live with <code>convex E s</code>.</p>",
        "id": 199837458,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1591335092
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/Module.20refactor\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Module.20refactor</a> is one thread, but that's not where the story ended</p>",
        "id": 199837531,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591335225
    },
    {
        "content": "<p><a href=\"#narrow/stream/116395-maths/topic/module.20refactor\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/module.20refactor</a> is another one</p>",
        "id": 199837577,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591335262
    },
    {
        "content": "<p>But those threads seem to be after the \"big\" module refactor, which was merged during LUG Freiburg 2018: <a href=\"#narrow/stream/113488-general/topic/LUG.20Freiburg.202018/near/147245873\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/LUG.20Freiburg.202018/near/147245873</a></p>",
        "id": 199837736,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591335540
    },
    {
        "content": "<p>I haven't found any zulip threads about the <code>out_param</code> pains that we had before that refactor.</p>",
        "id": 199837749,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591335567
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/add_torsor.3A.20out_param.3F/near/199837431\">said</a>:</p>\n<blockquote>\n<p>Do we want <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> to be a torsor for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>?</p>\n</blockquote>\n<p>I don't think we want that. We want <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb C</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> to be a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">R</span></span></span></span>-vector space, but this is different. And convexity is a real notion, even if the vector space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">E</span></span></span></span> can be seen as a <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85556em;vertical-align:-0.16667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span>-vector space, there is no notion of being <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85556em;vertical-align:-0.16667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span>-convex (you could define something but that doesn't exists in the real world AFAIK). So it should really <code>convex s</code>.</p>",
        "id": 199844892,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591343676
    },
    {
        "content": "<p>Of course in o-minimal theory ...</p>",
        "id": 199844981,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591343759
    },
    {
        "content": "<p>Never mind</p>",
        "id": 199845024,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591343764
    },
    {
        "content": "<p>But I was replying to whether we want the <code>out_param</code> for <code>add_torsor</code>.</p>",
        "id": 199845036,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591343781
    },
    {
        "content": "<p>And there I think my example applies.</p>",
        "id": 199845049,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591343792
    },
    {
        "content": "<p>Whether you hardcode the reals into <code>convex</code> is a different question (and one that seems reasonable to me).<br>\n(All those o-minimal theorists can generalise later. They first need to get the definition of a definable set into mathlib.)</p>",
        "id": 199845191,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591343893
    },
    {
        "content": "<p>The problem is not with hardcoding reals (already done). The problem is in hardcoding the vector space associated to our affine space.</p>",
        "id": 199846289,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1591344633
    },
    {
        "content": "<p>And I don't know whether we can do it for affine spaces without doing this for additive torsors</p>",
        "id": 199846379,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1591344701
    },
    {
        "content": "<p>Currently some space is an abbreviation for add torsors</p>",
        "id": 199846465,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1591344758
    }
]