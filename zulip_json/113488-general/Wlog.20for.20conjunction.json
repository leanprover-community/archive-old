[
    {
        "content": "<p><code>wlog</code> is pretty good I think at adopting assumptions of the kind <code>a ≤ b</code> when there's a symmetry between <code>a</code> and <code>b</code> and that the order is total. I'd like to use it to prove <code>a ≤ b /\\ b ≤ a</code> by only  showing <code>a ≤ b</code>. Has anyone tried it? Any success?</p>",
        "id": 204825890,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595524411
    },
    {
        "content": "<p><code>wlog : a ≤ b → b ≤ a</code>?</p>",
        "id": 204826115,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595524535
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> You should ask the author of <code>wlog</code> <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 204826218,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595524581
    },
    {
        "content": "<p>He is really kind, and very responsive!</p>",
        "id": 204826244,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595524602
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> I already sound crazy talking to myself alone in my apartment, I need to speak to living beings</p>",
        "id": 204826317,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595524650
    },
    {
        "content": "<p>Thanks! I didn't think I was that responsive. I'm pretty absent lately</p>",
        "id": 204826351,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595524676
    },
    {
        "content": "<p>Ooh, but whenever someone pings you, you're there</p>",
        "id": 204826418,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595524699
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> Thanks for the suggestion. I need to wrap my head around it</p>",
        "id": 204826422,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595524701
    },
    {
        "content": "<p>Thanks! I'm glad I'm not missed too much :)</p>",
        "id": 204826448,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595524724
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> </p>\n<p>I get blocked here:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">case</span> <span class=\"n\">main</span>\n<span class=\"n\">j</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span>\n<span class=\"n\">case</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span> <span class=\"bp\">→</span> <span class=\"n\">j</span> <span class=\"bp\">≤</span> <span class=\"n\">i</span>\n<span class=\"err\">⊢</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">j</span>\n</code></pre></div>",
        "id": 204826806,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595524927
    },
    {
        "content": "<p>Could you please post your code?</p>",
        "id": 204826914,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595524999
    },
    {
        "content": "<p>Certainly:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">j</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">wlog</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span> <span class=\"bp\">→</span> <span class=\"n\">j</span> <span class=\"bp\">≤</span> <span class=\"n\">i</span><span class=\"o\">),</span>\n    <span class=\"c1\">-- 2 goals</span>\n    <span class=\"c1\">-- case cases</span>\n    <span class=\"c1\">-- i j : ℕ</span>\n    <span class=\"c1\">-- ⊢ (i ≤ j → j ≤ i) ∨ (j ≤ i → i ≤ j)</span>\n\n    <span class=\"c1\">-- case main</span>\n    <span class=\"c1\">-- j i : ℕ,</span>\n    <span class=\"c1\">-- case : i ≤ j → j ≤ i</span>\n    <span class=\"c1\">-- ⊢ i = j</span>\n\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 204827024,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595525052
    },
    {
        "content": "<p>I'm confused... don't you want <code>a \\le b \\or b \\le a</code>? Instead of <code>\\and</code>?</p>",
        "id": 204827138,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595525123
    },
    {
        "content": "<p>In the case <code>main</code> you should somehow prove <code>H : i ≤ j</code>, then use <code>le_antisymm H (case H)</code>.</p>",
        "id": 204827218,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595525165
    },
    {
        "content": "<p>Oh! Of course! Thank you!</p>",
        "id": 204827302,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595525231
    },
    {
        "content": "<p>How useful would you find having syntax for this?</p>",
        "id": 204827350,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595525256
    },
    {
        "content": "<p>I saw several people coming with questions like this one on Zulip, so I think this is useful.</p>",
        "id": 204827444,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595525295
    },
    {
        "content": "<p>What do you think of <code>wlog show i ≤ j using [i j]</code>?</p>",
        "id": 204827514,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595525357
    },
    {
        "content": "<p>Another feature request: being able to say <code>wlog : p generalizing H1 H2</code> (possibly under a different name). It should <code>revert H1 H2</code>, then replace the goal <code>G</code> with the pair of goals <code>p → G</code>, <code>(p → G) → G</code>.</p>",
        "id": 204827988,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595525625
    },
    {
        "content": "<p>This is useful, e.g., if I want to say <code>wlog : 0 ≤ x</code> and in the general case do cases on <code>le_total 0 x</code>.</p>",
        "id": 204828085,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595525672
    },
    {
        "content": "<p>Or if I have <code>ε &gt; 0</code> and want to add <code>ε &lt; 1</code> to the context.</p>",
        "id": 204828119,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595525701
    },
    {
        "content": "<blockquote>\n<p>This is useful, e.g., if I want to say wlog : 0 ≤ x and in the general case do cases on le_total 0 x.</p>\n</blockquote>\n<p>I don't see the connection between the two. Wouldn't you deal with that situation with <code>wlog : 0 ≤ x := le_total 0 x</code>?</p>",
        "id": 204828284,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595525783
    },
    {
        "content": "<p>Currently <code>wlog</code> assumes that other cases follow from the \"main\" case by permutation of variables.</p>",
        "id": 204828363,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595525836
    },
    {
        "content": "<p>BTW, <a href=\"https://coq.inria.fr/refman/proof-engine/ssreflect-proof-language.html#variants-the-suff-and-wlog-tactics\">here</a> is what <code>ssreflect</code> have.</p>",
        "id": 204828425,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595525875
    },
    {
        "content": "<p>I <strong>do not</strong> suggest copying the whole syntax (some of it is not very readable).</p>",
        "id": 204828507,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595525906
    },
    {
        "content": "<p>Thanks for the reference. I'm still not fluent in ssreflect, I should really get to it</p>",
        "id": 204829099,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595526210
    },
    {
        "content": "<p>With your <code>le_total</code> example, can you show me the goals you'd expect the tactic to produce?</p>",
        "id": 204829200,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595526248
    },
    {
        "content": "<p>I'm not fluent in ssreflect either...</p>",
        "id": 204830590,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595526828
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">,</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">m</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">sorry</span> <span class=\"o\">},</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 204831004,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595526996
    },
    {
        "content": "<p>I don't want any \"clever\" tactic here, just a replacement for this <code>suffices</code> that allows me not to copy the goal.</p>",
        "id": 204831170,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595527069
    },
    {
        "content": "<p>A \"clever\" version could take <code>abs</code> as another argument.</p>",
        "id": 204831496,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595527192
    },
    {
        "content": "<p>And ask for proofs <code>0 ≤ abs m</code> and <code>H (abs m) → H m</code>.</p>",
        "id": 204831588,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595527215
    },
    {
        "content": "<p>Ok, I think I see what you mean. You'd be achieving that effect with <code>wlog : 0 ≤ m := le_total 0 m generalizing n</code>. Is this what you have in mind?</p>",
        "id": 204832451,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595527643
    },
    {
        "content": "<p>I don't need <code>le_total 0 m</code> here because in the <code>ε &gt; 0</code> case I want to say \"OK, we only care about small <code>ε</code>, so assume <code>ε ≤ 1</code>; in the general case we set <code>ε' := min ε 1</code> and apply the new lemma\".</p>",
        "id": 204833175,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595528013
    },
    {
        "content": "<p>Ok, but otherwise, in the example with <code>suffices</code>, <code>n</code> is the variable you want to generalize, right?</p>",
        "id": 204833698,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595528236
    },
    {
        "content": "<p>Yes.</p>",
        "id": 204833728,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1595528249
    },
    {
        "content": "<p>Ok, I think I get it. Let me see how I'm going to make it fit. <code>wlog</code> has a lot of nice features but it has really grown into a real mess</p>",
        "id": 204833981,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595528343
    },
    {
        "content": "<p>In the case of <code>wlog show i ≤ j</code>, do we care about more two permutations and if so do we want it to behave like <code>wlog : A -&gt; B -&gt; C using [i j k, j k i, k i j]</code>?</p>",
        "id": 204847792,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1595535012
    }
]