[
    {
        "content": "<p>Is it only on my computer or do other people noticed that the VSCode extension became very laggy sometimes? Since at least one week, I often get into a situation where the info view doesn't display anything and then suddenly catches up and very quickly displays everything it should have displayed in the previous 15 seconds. This is very distracting and would be catastrophic for teaching.</p>",
        "id": 263024228,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1638200245
    },
    {
        "content": "<p>Yes, I have also noticed this sometimes (on Linux). On Windows I sometimes get even worse behavior, where it might take multiple minutes for the server to start \"catching up\".</p>",
        "id": 263037406,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1638205609
    },
    {
        "content": "<p>I occasionally get an issue where I experience lag for each keystroke I make. If I type <code>rw my_lemma</code>, The info view will display \"unknown identifier: 'r'\" for half a second, then \"unknown identifier: 'rw'\" for half a second, then \"unknown identifier: 'm'\", then \"unknown identifier: 'my_l'\", until eventually it processes the whole 'my_lemma' string and succeeds.</p>",
        "id": 263039654,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1638206575
    },
    {
        "content": "<p>This usually happens if you're editing a file very basic in the import hierarchy while you have other files open that are deep descendants of the file being edited</p>",
        "id": 263042752,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1638207826
    },
    {
        "content": "<p>One way to reduce that lag is to close those other files. Another is to put an <code>#exit</code> right below what you're editing in the moment, which will prevent the rest of the file from being reinterpreted after every keystroke. This will result in snappier UI</p>",
        "id": 263042926,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1638207886
    },
    {
        "content": "<p>No, it happens when I'm editing a leaf file in a project which is not mathlib, without any modified mathlib file</p>",
        "id": 263043258,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1638208042
    },
    {
        "content": "<p>And this is a recent issue.</p>",
        "id": 263043289,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1638208057
    },
    {
        "content": "<p>I've had that behavior this August at least.</p>",
        "id": 263047770,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1638209954
    },
    {
        "content": "<p>ah i often encounter that issue when using the slow linarith tactic <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> and I usually fix that issue by replacing linarith with an explicit proof of the inequality</p>",
        "id": 263094414,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1638238547
    },
    {
        "content": "<p>I find that avoiding linarith and using clear_except help a lot</p>",
        "id": 263094527,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1638238663
    },
    {
        "content": "<p>like when I run clear_except things usually run a lot faster, especially <code>library_search</code> and <code>gptf</code> also gives more accurate suggestions</p>",
        "id": 263094608,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1638238734
    }
]