[
    {
        "content": "<p>This might still be premature since it is another month or so until Apple will release its new Apple Silicon MacBooks using an ARM processor instead of an Intel processor.  (I think the new OS is named Big Sur.)  My question is simple:  <strong>Will Lean 3 or 4 run on Apple Silicon Macs?</strong>  From what I've read, the answer for other software seems to be complicated.  (See <a href=\"https://github.com/Homebrew/brew/issues/7857\">here for the status of the most common homebrew formulas</a>.)  First, there is running natively vs. running in Rosetta which is something like an emulator for intel (x86_64) apps.  Honestly, I'm mostly trowing out tech jargon without knowing what it means, especially what it means for Lean.  It's even hard to know if VS Code (or Emacs) will be ready at launch time (but I think from Googling, they will be).</p>",
        "id": 213646021,
        "sender_full_name": "Jason Rute",
        "timestamp": 1602931568
    },
    {
        "content": "<p>I've had lean running in a chrooted Ubuntu environment on a 2017 Android phone and it wouldn't surprise me if that had an ARM chip in, but I'm certainly no expert here</p>",
        "id": 213646111,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1602931783
    },
    {
        "content": "<p>I don't see any reason why not. Lean is written in C++ and there are C++ compilers for all the major ISAs and many ISAs no one cares about</p>",
        "id": 213646452,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602932285
    },
    {
        "content": "<p>If the OS layer changes that might require more work, but switching from one supported ISA to another doesn't seem like a big problem</p>",
        "id": 213646481,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602932351
    },
    {
        "content": "<p>Lean 3 runs just fine on aarch64. I'm not invested in the Apple ecosystem so I don't know if \"Apple silicon\" is different.</p>",
        "id": 213751843,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1603093229
    },
    {
        "content": "<p>Ok.  I think what I'm hearing is that if I (or someone else here) gets an Apple Silicon mac (rumored to be coming out in Nov 17), then if I compile from sources it should likely compile and run natively.  And if not, it should be a relatively simple thing to support.  </p>\n<p>As for the elan binaries (which I assume are platform specific and for mac are currently for x86_64), they might work (maybe under Rosetta?) but we will have to see and compare the performance.  If they don't work or there is a performance difference, then we can look into <a href=\"https://developer.apple.com/documentation/xcode/building_a_universal_macos_binary\">building a universal mac binary</a> which supports both.</p>",
        "id": 213774267,
        "sender_full_name": "Jason Rute",
        "timestamp": 1603108683
    },
    {
        "content": "<p>I'm actually more worried about apple's signing conditions post-catalina. I don't think we have any signing setup, so I would assume that people have to go through some Gatekeeper (what a name!) workaround to be able to run lean today</p>",
        "id": 213774748,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603108956
    },
    {
        "content": "<p>I don't really see a reason to ship fat binaries, they are basically two programs stapled together. The user only needs one of them</p>",
        "id": 213774856,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603109029
    },
    {
        "content": "<p>you should be able to use software installed via homebrew without mucking around with signing, and homebrew plans on supporting apple silicon, so i would expect that to all work <a href=\"https://discourse.brew.sh/t/homebrew-and-apple-silicon/8837/2\">https://discourse.brew.sh/t/homebrew-and-apple-silicon/8837/2</a></p>",
        "id": 213816179,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1603127223
    },
    {
        "content": "<p>But Lean shouldn’t be installed via home brew, right?  A new version comes out like event month.  If elan is installed (and signed) via homebrew, will the elan installed lean binaries work?</p>",
        "id": 213816536,
        "sender_full_name": "Jason Rute",
        "timestamp": 1603127422
    },
    {
        "content": "<p>Just a note that the new line of macs will probably be announced next week and likely the Big Sur macOS with the code signing requirement Mario mentioned above will also be released soon.  I'm mentioning because I'm considering buying a new mac (although I might wait for some reviews and discussion of what software works).  Also, if anyone upgrades to Big Sur, it is not clear that Lean will work, because it's not signed.  Is that what I'm understanding from the above discussion?</p>",
        "id": 215443625,
        "sender_full_name": "Jason Rute",
        "timestamp": 1604404674
    },
    {
        "content": "<p>My understanding is that the new Macs will still run unsigned executables compiled for Intel processors, but won't run unsigned software compiled for Apple Silicon processors. (See the first addendum <a href=\"https://lapcatsoftware.com/articles/unsigned.html\">here</a>)</p>",
        "id": 215444201,
        "sender_full_name": "Alex Peattie",
        "timestamp": 1604405014
    },
    {
        "content": "<p>To anyone interested in the concept Big Sur: <a href=\"https://sneak.berlin/20201112/your-computer-isnt-yours/\">https://sneak.berlin/20201112/your-computer-isnt-yours/</a></p>",
        "id": 216593003,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1605263569
    },
    {
        "content": "<p>This is all very consistent with everything Apple has ever done. I don't see how one can have used MacOS in the past and pretend to care about this blogpost.</p>",
        "id": 216596584,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1605265779
    },
    {
        "content": "<p>Well, apparently the author himself combines both options: \"Now, it’s been possible up until today to block this sort of stuff on your Mac using a program called Little Snitch (really, the only thing keeping me using macOS at this point).\"</p>",
        "id": 216596682,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1605265839
    },
    {
        "content": "<p>Yes, this is why I'm puzzled.</p>",
        "id": 216596726,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1605265894
    },
    {
        "content": "<p>But the psychology of MacOS users has always been mysterious to me. I even know someone who is a genuine anti-capitalist activist and uses a Mac.</p>",
        "id": 216596807,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1605265938
    },
    {
        "content": "<p>I agree that it is very puzzling.</p>",
        "id": 216596850,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1605265976
    },
    {
        "content": "<p>Yes, it's very strange... Filippo and Patrick, I am sure you too have colleagues that absolutely refuse to install stopcovid on their phone but are very happy about their mac... (my point is not to discuss pro and cons of stopcovid, just that these two different attitudes are very strange to me)</p>",
        "id": 216598395,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1605267174
    },
    {
        "content": "<p>Indeed! Never thought about it.</p>",
        "id": 216598438,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1605267201
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Apple.20Silicon/near/216596807\">said</a>:</p>\n<blockquote>\n<p>But the psychology of MacOS users has always been mysterious to me.</p>\n</blockquote>\n<p>We're lazy people with an eye for design.</p>",
        "id": 216613574,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1605275831
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/Apple.20Silicon/near/216593003\">said</a>:</p>\n<blockquote>\n<p>To anyone interested in the concept Big Sur: <a href=\"https://sneak.berlin/20201112/your-computer-isnt-yours/\">https://sneak.berlin/20201112/your-computer-isnt-yours/</a></p>\n</blockquote>\n<p>Can lean run on a raspberry pi?</p>",
        "id": 216630147,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1605282794
    },
    {
        "content": "<p>Yes, but will it be fast enough?</p>",
        "id": 216630432,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1605282893
    },
    {
        "content": "<p>Maybe the new raspberry pi 4? (I don't have one, just wondering)</p>",
        "id": 216630493,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1605282916
    },
    {
        "content": "<p>I mean, the raspberry pi 4 is supposed to be just as fast as the old thinkpad X220 I have somewhere in my desk drawer</p>",
        "id": 216630554,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1605282944
    },
    {
        "content": "<p>I guess you won't even be able to install linux on the macs with the apple arm chips, right?</p>",
        "id": 216631169,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1605283171
    },
    {
        "content": "<p>Man, that article is depressing. I thought apple was supposed to be the \"pro privacy\" company. What happened?!</p>",
        "id": 216631322,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1605283224
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113488-general/topic/Apple.20Silicon/near/216630147\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/Apple.20Silicon/near/216593003\">said</a>:</p>\n<blockquote>\n<p>To anyone interested in the concept Big Sur: <a href=\"https://sneak.berlin/20201112/your-computer-isnt-yours/\">https://sneak.berlin/20201112/your-computer-isnt-yours/</a></p>\n</blockquote>\n<p>Can lean run on a raspberry pi?</p>\n</blockquote>\n<p>Slowly, I tried this the other day. It's possible, but in comparison to my i7 laptop.</p>",
        "id": 216632842,
        "sender_full_name": "James Arthur",
        "timestamp": 1605283796
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113488-general/topic/Apple.20Silicon/near/216631322\">said</a>:</p>\n<blockquote>\n<p>Man, that article is depressing. I thought apple was supposed to be the \"pro privacy\" company. What happened?!</p>\n</blockquote>\n<p>What? I've never seen anything from Apple that was pro-privacy</p>",
        "id": 216632978,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1605283835
    },
    {
        "content": "<p>Well, at least ios is supposed to be more \"private\" than android, no?</p>",
        "id": 216633296,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1605283896
    },
    {
        "content": "<p>Apple is supposedly anonymizing all the tracking data they collect on you, unlike google</p>",
        "id": 216633362,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1605283915
    },
    {
        "content": "<p>But <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> , I agree, being more privacy conscious than google isn't saying too much.</p>",
        "id": 216633719,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1605284073
    },
    {
        "content": "<p>lol that's a funny way to spin \"privacy\"</p>",
        "id": 216633876,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1605284143
    },
    {
        "content": "<p>Let's not forget that Google's most important business model is tracking user data, so promoting \"privacy\" is a good way for Apple to deny resources to their competition.</p>",
        "id": 216640110,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1605286629
    },
    {
        "content": "<p><a href=\"https://news.ycombinator.com/item?id=25086845\">https://news.ycombinator.com/item?id=25086845</a></p>",
        "id": 216687510,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1605309675
    },
    {
        "content": "<p>Incredible. I hear system76 is making pretty good laptops nowadays, I might roll the dice when my macbook dies.</p>",
        "id": 216691158,
        "sender_full_name": "Chris B",
        "timestamp": 1605312059
    },
    {
        "content": "<p>I have a not too fancy ThinkPad, running linux with perfect compatibility</p>",
        "id": 216691755,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1605312640
    },
    {
        "content": "<p>But I also hear good things about system76</p>",
        "id": 216691790,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1605312687
    },
    {
        "content": "<p>i recommend the huawei matebook x pro, works great with ubuntu with a standard dual boot install process, no custom anything required</p>",
        "id": 216692128,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1605313074
    },
    {
        "content": "<p>Is that the laptop with the pop-up webcam in the keyboard?</p>",
        "id": 216692598,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1605313559
    },
    {
        "content": "<p>I have this laptop too and yes</p>",
        "id": 216692771,
        "sender_full_name": "Reid Barton",
        "timestamp": 1605313698
    },
    {
        "content": "<p>Well, I'm now on ARM macOS. Do I win the lucky first prize to attempt to compile lean on ARM</p>",
        "id": 217343464,
        "sender_full_name": "Julian Berman",
        "timestamp": 1605827425
    },
    {
        "content": "<p>you win the prize once you paste a screen shot of either the error message you received, or a success message, into chat</p>",
        "id": 217343765,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1605827668
    },
    {
        "content": "<p>Hopefully the latter. (First need to install a bunch of deps.)</p>",
        "id": 217343952,
        "sender_full_name": "Julian Berman",
        "timestamp": 1605827871
    },
    {
        "content": "<p>Actually, I'd love if you try both with manually compiling natively AND using the usual <a href=\"https://leanprover-community.github.io/install/macos.html\">MacOS install instructions</a> via Rosetta 2 (elan+vscode+leanproject).  My understanding is that you have to use either all Rosetta or all native apps in a tool chain so they play well together.  It seems to me that if you did the Rosetta 2 install then everything would play together (python, git, vs code, and lean/elan) and lean would be sufficiently fast. Now, I don't have such a Mac, so you can tell me if I am wrong on that understanding and it is possible to mix and match.</p>",
        "id": 217346960,
        "sender_full_name": "Jason Rute",
        "timestamp": 1605830191
    },
    {
        "content": "<p>If you do the native install, is vs code (or emacs) ready for native apple silicon yet?  Also if you get both a native and Rosetta install, I'd love to see the differences in times it takes to compile Mathlib.</p>",
        "id": 217346974,
        "sender_full_name": "Jason Rute",
        "timestamp": 1605830196
    },
    {
        "content": "<p>Of course, feel free to ignore all my requests, but we should think about how to handle the mac os instructions for users who are not as tech savvy as you.</p>",
        "id": 217346978,
        "sender_full_name": "Jason Rute",
        "timestamp": 1605830200
    },
    {
        "content": "<p>Also you probably know this already, but here is <a href=\"https://www.notion.so/Run-x86-Apps-including-homebrew-in-the-Terminal-on-Apple-Silicon-8350b43d97de4ce690f283277e958602\">one way to install and run x86 apps in Rosetta 2</a>.</p>",
        "id": 217347393,
        "sender_full_name": "Jason Rute",
        "timestamp": 1605830493
    },
    {
        "content": "<p>Also, this is <a href=\"https://www.reddit.com/r/datascience/comments/jw5go3/hour_one_arm_mac_thoughts/\">probably the most insightful post</a> I've found yet on data science tools (conda, tensorflow, etc) for Apple Silicon Macs.  Unfortunately, the follow up article with the installation instructions got deleted.  Hopefully he reposts it.  I think the main point is that most everything works fine or more than fine under Rosetta 2 and many some things are ready for native while many things are quickly becoming ready.  Obviously, this isn't about Lean, but might be useful to you.</p>",
        "id": 217348388,
        "sender_full_name": "Jason Rute",
        "timestamp": 1605831365
    },
    {
        "content": "<p>Thanks. I went (first) for the route of pain, as I tend to, so I've set up only a native-compiling homebrew to start. Which... lean works with! After <code>brew install coreutils gmp</code> and <code>cmake -DCMAKE_PREFIX_PATH=/opt/homebrew/ ../../src</code> in a lean repo checkout, I've got a working <code>shell/lean</code> which I just confirmed is at least functional enough to begin compiling my toy project, will give an all green when <code>leanpkg test</code> passes on it after it finishes compiling mathlib, since I haven't yet set up Python enough to run leanproject. But yeah seems promising so far.</p>",
        "id": 217349426,
        "sender_full_name": "Julian Berman",
        "timestamp": 1605832413
    },
    {
        "content": "<p>(OK yeah <code>leanpkg test</code> passes)</p>",
        "id": 217349646,
        "sender_full_name": "Julian Berman",
        "timestamp": 1605832631
    },
    {
        "content": "<p>That was quite a speedy mathlib compilation too though I just jumped 8 years forward to the future I guess, I was previously compiling on a 2012 MacBook Air.</p>",
        "id": 217349712,
        "sender_full_name": "Julian Berman",
        "timestamp": 1605832690
    },
    {
        "content": "<p>It's going to turn out that really the M1 chip was optimized for M(athlib)</p>",
        "id": 217351517,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1605834714
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> Thank you for posting these updates.  I’m sure it will help whomever comes along next.  As for vs code, are you going to run the current x86 version or the native insider build?  If the current x86 version (through Rosetta 2), does it interact with a native Lean server without issue?</p>",
        "id": 217394234,
        "sender_full_name": "Jason Rute",
        "timestamp": 1605875259
    },
    {
        "content": "<p>Or did you compile Lean as a universal app?  If so, would it then run fine under both native and x86 vs code?  There are a lot of things I’m still trying to understand here.</p>",
        "id": 217394903,
        "sender_full_name": "Jason Rute",
        "timestamp": 1605875680
    },
    {
        "content": "<p>Of course! Happy to keep poking at things and sharing some results. I'll give vscode a shot after some coffee.</p>",
        "id": 217407859,
        "sender_full_name": "Julian Berman",
        "timestamp": 1605882834
    },
    {
        "content": "<p>I did not compile a universal app, just a pure ARM one.</p>",
        "id": 217407918,
        "sender_full_name": "Julian Berman",
        "timestamp": 1605882848
    },
    {
        "content": "<p>(I also have to finish attempting to compile PyPy today, which will likely be a 5-6 hour endeavor considering I don't have an ARM thing to bootstrap it with, so I may be splitting my attention/resources with that but yeah obviously happy to try Lean things that'd be helpful to report on :)</p>",
        "id": 217408271,
        "sender_full_name": "Julian Berman",
        "timestamp": 1605883042
    },
    {
        "content": "<p>OK yup vscode is working too (communicating with my arm64 lean)</p>",
        "id": 217412541,
        "sender_full_name": "Julian Berman",
        "timestamp": 1605884997
    },
    {
        "content": "<p>(Using a vscode gotten via <code>brew cask install visual-studio-code</code>, which looks like it's just the stable version from the vscode site)</p>",
        "id": 217412738,
        "sender_full_name": "Julian Berman",
        "timestamp": 1605885071
    },
    {
        "content": "<p>how is M1 performance looking?</p>",
        "id": 218752672,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1607028660
    },
    {
        "content": "<p>I haven't tested anything scientific. I'm happy to if you have anything you think is worthwhile.</p>",
        "id": 218756173,
        "sender_full_name": "Julian Berman",
        "timestamp": 1607030455
    },
    {
        "content": "<p>I guess I could say compile lean for rosetta and benchmark how long it takes to build mathlib on each</p>",
        "id": 218756209,
        "sender_full_name": "Julian Berman",
        "timestamp": 1607030473
    },
    {
        "content": "<p>Anecdotally I'd say I'm still quite happy overall.</p>",
        "id": 218756241,
        "sender_full_name": "Julian Berman",
        "timestamp": 1607030496
    },
    {
        "content": "<p>I just got it working too! Thanks <span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> for the \"<code>cmake -DCMAKE_PREFIX_PATH=/opt/homebrew/ ../../src</code>\" instruction. I would never have figured that out on my own.</p>",
        "id": 219305416,
        "sender_full_name": "Sorawee Porncharoenwase",
        "timestamp": 1607500103
    },
    {
        "content": "<p>Nice! Glad to hear</p>",
        "id": 219334972,
        "sender_full_name": "Julian Berman",
        "timestamp": 1607520388
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238605\">Kevin Lacker</span> <a href=\"#narrow/stream/113488-general/topic/Apple.20Silicon/near/218752672\">said</a>:</p>\n<blockquote>\n<p>how is M1 performance looking?</p>\n</blockquote>\n<p>I just got my Macbook Air M1 and I haven't yet attempted to use Lean on it yet but in general I'm very happy with it. All the intel-based apps work very smoothly through the Rosetta translation layer and noticeably faster than my previous intel Macbook Air.</p>",
        "id": 219359834,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1607530901
    },
    {
        "content": "<p>FWIW, I attempted to upgrade Lean today, and somehow I now get an error <code>ld: library not found for -lc++</code>. Apparently I have to execute <code>export LIBRARY_PATH=\"$LIBRARY_PATH:/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib\"</code> before calling <code>cmake</code>.</p>",
        "id": 223703909,
        "sender_full_name": "Sorawee Porncharoenwase",
        "timestamp": 1611351382
    },
    {
        "content": "<p>If someone wants to help add an <code>arm64</code> section to our <a href=\"https://github.com/leanprover-community/lean/blob/master/.github/workflows/on-push.yml\">compile and release scripts</a>, that'd be greatly appreciated!</p>",
        "id": 227374645,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1614047989
    },
    {
        "content": "<p>There's no M1 support in GitHub actions yet</p>",
        "id": 227376812,
        "sender_full_name": "Julian Berman",
        "timestamp": 1614049909
    },
    {
        "content": "<p>Which is <a href=\"https://github.com/actions/virtual-environments/issues/2187\">https://github.com/actions/virtual-environments/issues/2187</a></p>",
        "id": 227376820,
        "sender_full_name": "Julian Berman",
        "timestamp": 1614049918
    },
    {
        "content": "<p>Unless you mean Linux ARM64</p>",
        "id": 227376871,
        "sender_full_name": "Julian Berman",
        "timestamp": 1614049933
    },
    {
        "content": "<p>Ah, OK. It's not possible to cross-compile for M1 Macs either then?</p>",
        "id": 227377029,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1614050073
    },
    {
        "content": "<p>I guess we wouldn't be able to test the binary in CI, so maybe we should just wait.</p>",
        "id": 227377073,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1614050145
    },
    {
        "content": "<p>Apple is going to come out with the M1X MacBook Pros on Monday (or so it is widely believed).  After that, almost all new Macs will be on the M-series/Apple Silicon/arm processors.  I think as of right now, the <a href=\"https://leanprover-community.github.io/install/macos.html#m1-macs--apple-silicon\">current Apple Silicon instructions</a> are basically \"install from source and good luck\" <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>.  I understand this has to do with technical issues with GitHub actions mentioned above (which I don't claim to understand).  There is now a very detailed set of instructions in <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain\">#new members &gt; M1 Macs: Installing the Lean 3 toolchain</a>.  I wonder what incremental progress can be made here to make this easier for M1 and M1X users. I imaging a few lean users like me plan to buy an M1X MacBook Pro in the coming month.  For example, if those instructions in <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/M1.20Macs.3A.20Installing.20the.20Lean.203.20toolchain\">#new members &gt; M1 Macs: Installing the Lean 3 toolchain</a> are solid, then we could put them on the website, no?</p>",
        "id": 257691675,
        "sender_full_name": "Jason Rute",
        "timestamp": 1634302000
    },
    {
        "content": "<p>I think the proper solution would be to add ARM releases.  Lean builds just fine on ARM, but github actions doesn't have free ARM build bots.</p>",
        "id": 257693064,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634302668
    },
    {
        "content": "<p>This would also be useful to our subcommunity of Raspberry Pi users.</p>",
        "id": 257693145,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634302690
    },
    {
        "content": "<p>I've never quite understood this.  Would an arm release (that say works on a Raspberry Pi) also work on an M1 mac?</p>",
        "id": 257693658,
        "sender_full_name": "Jason Rute",
        "timestamp": 1634302896
    },
    {
        "content": "<p>There's Linux on ARM and then there's MacOS on ARM, the binaries are just as compatible as Linux/MacOS binaries are on AMD64.  <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>  So no, they are not interchangeable.  But it's the same kind of problem.  And a problem that I think we should solve.</p>",
        "id": 257693933,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634303005
    },
    {
        "content": "<p>Does anybody know what the commercially available options are for build VMs on ARM?  I know Amazon has Linux VMs.  Can we rent a Mac build VM somewhere?</p>",
        "id": 257694067,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634303060
    },
    {
        "content": "<p>In the meantime, I just ran through install instructions on M1 with Big Sur with elan v1.1.3-pre and can confirm I get the lean, leanpkg, and leanchecker installed.</p>",
        "id": 257695735,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1634303811
    },
    {
        "content": "<p>Another silly question:  As for renting a \"Mac build VM\", do you need to rent an Apple Silicon mac in the cloud (e.g. a physical mac mini), or are there VMs for MacOS which run on (non-mac) ARM machines.  (I for some reason thought it was the former, although I think I saw it is theoretically possible to build an Apple Silicon binary from an intel mac if it is running the newest MacOS.)</p>",
        "id": 257696199,
        "sender_full_name": "Jason Rute",
        "timestamp": 1634304014
    },
    {
        "content": "<p>MacStadium has them: <a href=\"https://www.macstadium.com/mac-mini\">https://www.macstadium.com/mac-mini</a> -- but IIRC from having this discussion a few months ago with a different project, you can rent them, but the $$ might be pretty silly relative to buying one and putting it somewhere unless it's super mission critical that it be up 24/7, which for a buildbot just for releases may not be the case.</p>",
        "id": 257697571,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634304646
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"115715\">Jason Rute</span> <a href=\"#narrow/stream/113488-general/topic/Apple.20Silicon/near/257696199\">said</a>:</p>\n<blockquote>\n<p>Another silly question:  As for renting a \"Mac build VM\", do you need to rent an Apple Silicon mac in the cloud (e.g. a physical mac mini), or are there VMs for MacOS which run on (non-mac) ARM machines.  (I for some reason thought it was the former, although I think I saw it is theoretically possible to build an Apple Silicon binary from an intel mac if it is running the newest MacOS.)</p>\n</blockquote>\n<p>there aren't for non-mac, I think (but haven't looked recently) it's still against the Apple TOS to run macOS on non-mac hardware, so this tends to make commercial people scared.</p>",
        "id": 257697751,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634304725
    },
    {
        "content": "<p>I think AWS has <a href=\"https://aws.amazon.com/ec2/instance-types/mac/\">macos vms</a></p>",
        "id": 257697775,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1634304740
    },
    {
        "content": "<p>They're intel macs AFAIK: <a href=\"https://aws.amazon.com/ec2/instance-types/\">https://aws.amazon.com/ec2/instance-types/</a></p>",
        "id": 257697819,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634304770
    },
    {
        "content": "<p>Ah shoot</p>",
        "id": 257697837,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1634304779
    },
    {
        "content": "<p>You can currently buy a refurbished 8GB Mac mini from Apple for $750.  It might even be cheaper next week.</p>",
        "id": 257697944,
        "sender_full_name": "Jason Rute",
        "timestamp": 1634304836
    },
    {
        "content": "<p>Cheaper than that I think, the baseline one is $649 new</p>",
        "id": 257698060,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634304877
    },
    {
        "content": "<p>Oh no that's the education store, the regular one for me says $699 -- <a href=\"https://www.apple.com/shop/buy-mac/mac-mini/apple-m1-chip-with-8-core-cpu-and-8-core-gpu-256gb\">https://www.apple.com/shop/buy-mac/mac-mini/apple-m1-chip-with-8-core-cpu-and-8-core-gpu-256gb</a> -- which yeah if someone buys and runs in their basement obviously can be connected to GHA</p>",
        "id": 257698085,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634304889
    },
    {
        "content": "<p>I think you can find someone who can purchase through that here</p>",
        "id": 257698118,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1634304906
    },
    {
        "content": "<p>Yeah, I'm sure most of us hah</p>",
        "id": 257698319,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634304996
    },
    {
        "content": "<p>I also wonder if any institution has M1 hardware for general computing use?</p>",
        "id": 257698402,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1634305041
    },
    {
        "content": "<p>That might be a decent idea. Also it looks like MacStadium has an open source section: <a href=\"https://www.macstadium.com/opensource/members\">https://www.macstadium.com/opensource/members</a></p>",
        "id": 257698876,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634305235
    },
    {
        "content": "<p>Which seems to include Haskell GHC and some other academic-y things</p>",
        "id": 257698898,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634305244
    },
    {
        "content": "<p>Seems like it'd be worth a shot to ask them for access for free under that for Lean.</p>",
        "id": 257698966,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634305270
    },
    {
        "content": "<p>$130/month?!?  That's quite steep, and buying it outright is cheaper after only a year or so.  The Amazon VMs are $15/mo for comparison.</p>",
        "id": 257704979,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634307490
    },
    {
        "content": "<p>I think we could easily rent an ARM Linux VM from Amazon and hook it up as a runner for the lean/lean4 repos.  <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> I believe you experimented with cross-compilation at some point.  Did that work out, or should we get native build machines?</p>",
        "id": 257705437,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634307663
    },
    {
        "content": "<p>I have no idea what the best approach for the mac builds is.</p>",
        "id": 257705664,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634307734
    },
    {
        "content": "<p>I will give it another try after landing the self-contained Zig/LLVM build, which is basically the same problem. I might take some dependencies from ARM Nixpkgs.</p>",
        "id": 257706464,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634308051
    },
    {
        "content": "<p>Do you want me to look into contacting the open source part there? I'm happy to do so and CC one of you.</p>",
        "id": 257706556,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634308082
    },
    {
        "content": "<p>I'll defer to Sebastian if cross-compilation is possible instead, but if it isn't then please go ahead.</p>",
        "id": 257706850,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634308195
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> What is your preferred way to support arm releases in elan?  Elan currently appends only <code>-linux.tar.gz</code>, but not any architecture information.  Should this be <code>-linux-aarch64.tar.gz</code> for arm and <code>-linux.tar.gz</code> for amd64?</p>",
        "id": 258031549,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634564976
    },
    {
        "content": "<p>I think that makes the most sense, yes</p>",
        "id": 258031717,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634565044
    },
    {
        "content": "<p>Lean 3.34 now comes with Linux/aarch64 builds (cross-compiled on github actions).  These work out of the box with elan (which also has a Linux/aarch64 release now).</p>",
        "id": 258339130,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634722902
    },
    {
        "content": "<p>The situation with Darwin/aarch64 is a bit more hairy because we can't cross compile them so we need an actual aarch64 machine.  Of course, the github actions runner doesn't work on aarch64 macs yet: <a href=\"https://github.com/actions/runner/issues/805\">https://github.com/actions/runner/issues/805</a>  But the issues describes some workarounds that we could use if we had such a machine.</p>",
        "id": 258339323,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634723007
    },
    {
        "content": "<p>I've tried the \"cross compile on github actions\" approach for Lean 4 as well.  The tests pass, but it takes 90 minutes to build:  <a href=\"https://github.com/gebner/lean4/runs/3941840303?check_suite_focus=true\">https://github.com/gebner/lean4/runs/3941840303?check_suite_focus=true</a><br>\n(It's so slow because it's running the stage0 compiler is compiled for aaarch64 and running via CPU emulation.  Otherwise the compiled Lean executable wouldn't recognize unicode syntax like ≤...)</p>",
        "id": 258339551,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634723126
    },
    {
        "content": "<p>So for Lean 4 we either need to set up a self-hosted runner for Linux/aarch64 (no technical issues) or get the zig cross-compilation PR working (and hope that it is faster).</p>",
        "id": 258339676,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634723183
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/113488-general/topic/Apple.20Silicon/near/258339551\">said</a>:</p>\n<blockquote>\n<p>Otherwise the compiled Lean executable wouldn't recognize unicode syntax like ≤...</p>\n</blockquote>\n<p>Wait, why is that?</p>",
        "id": 258346176,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634726551
    },
    {
        "content": "<p>Are the .oleans different after all?</p>",
        "id": 258346217,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634726580
    },
    {
        "content": "<p>I have no idea.  You can look at the build here: <a href=\"https://github.com/gebner/lean4/actions/runs/1359921109\">https://github.com/gebner/lean4/actions/runs/1359921109</a></p>",
        "id": 258346455,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634726720
    },
    {
        "content": "<p>They do differ in a handful of bytes, very interesting</p>",
        "id": 258347206,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634727126
    },
    {
        "content": "<p>Now how am I supposed to debug that <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 258347226,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634727142
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span>  Could you try running the working binary with the other olean files just to make sure?</p>",
        "id": 258347465,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634727279
    },
    {
        "content": "<p>All tests pass so it should work (except for tests involving leanc, which isn't set up for cross compilation).  I've just tested it on an aarch64 vm, and the 3941840303 build compiles a working lake binary.</p>",
        "id": 258348159,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634727653
    },
    {
        "content": "<p>Oh sorry, I misunderstood you.  I've now copied the oleans from the bad build the good build, and got this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">build</span><span class=\"bp\">@</span><span class=\"n\">ip</span><span class=\"bp\">-</span><span class=\"mi\">172</span><span class=\"bp\">-</span><span class=\"mi\">30</span><span class=\"bp\">-</span><span class=\"mi\">0</span><span class=\"bp\">-</span><span class=\"mi\">147</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">lake</span><span class=\"bp\">$</span> <span class=\"bp\">./</span><span class=\"n\">build.sh</span>\n<span class=\"n\">lean</span>  <span class=\"bp\">-</span><span class=\"n\">o</span> <span class=\"s2\">\"build/lib/Lake/Async.olean\"</span> <span class=\"c1\">--c=\"build/ir/Lake/Async.c.tmp\" Lake/Async.lean</span>\n<span class=\"n\">Lake</span><span class=\"bp\">/</span><span class=\"n\">Async.lean</span><span class=\"o\">:</span><span class=\"mi\">116</span><span class=\"o\">:</span><span class=\"mi\">7</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">elaboration</span> <span class=\"n\">function</span> <span class=\"n\">for</span> <span class=\"bp\">'«</span><span class=\"n\">term_</span><span class=\"bp\">≤</span><span class=\"n\">_</span><span class=\"bp\">»'</span> <span class=\"n\">has</span> <span class=\"n\">not</span> <span class=\"n\">been</span> <span class=\"n\">implemented</span>\n</code></pre></div>",
        "id": 258356386,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634732230
    },
    {
        "content": "<p>Thanks, that narrows it down at the very least</p>",
        "id": 258368743,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634737200
    },
    {
        "content": "<p>I think I have solved (part of) the puzzle.</p>",
        "id": 258406928,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634750261
    },
    {
        "content": "<p>The <code>String.hash</code> function gives different results on aarch64 and amd64.</p>",
        "id": 258407037,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634750290
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#eval</span> <span class=\"s2\">\"α\"</span><span class=\"bp\">.</span><span class=\"n\">hash</span>\n<span class=\"c1\">-- 1281896824 on amd64</span>\n<span class=\"c1\">-- 3220031286 on aarch64</span>\n</code></pre></div>",
        "id": 258407113,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634750318
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>α contains characters whose byte value is greater than 128. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> </p>\n</div></div>",
        "id": 258407246,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634750373
    },
    {
        "content": "<p>This was pretty obvious once I wrote an olean parser:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code> diff -u (~/oleanparser/build/bin/oleanparser good/lib/lean/Init/Classical.olean | psub) (~/oleanparser/build/bin/oleanparser bad/lib/lean/Init/Classical.olean | psub)\n<span class=\"gd\">--- /tmp/.psub.UC8YpPL3fz       2021-10-20 19:12:41.126207464 +0200</span>\n<span class=\"gi\">+++ /tmp/.psub.NKZ5f7HRrb       2021-10-20 19:12:41.148207390 +0200</span>\n<span class=\"gu\">@@ -554,7 +554,7 @@</span>\n let x554 := Obj.constructor 1 #[x553, \"proof_1\"] [97, 226, 97, 203, 47, 251, 113, 117]\n let x555 := Obj.constructor 1 #[0, \"u_1\"] [237, 16, 194, 56, 135, 176, 85, 203]\n let x556 := Obj.constructor 1 #[x555, 0] []\n<span class=\"gd\">-let x557 := Obj.constructor 1 #[0, \"α\"] [59, 122, 173, 22, 213, 44, 93, 185]</span>\n<span class=\"gi\">+let x557 := Obj.constructor 1 #[0, \"α\"] [191, 78, 70, 42, 51, 137, 215, 74]</span>\n let x558 := Obj.constructor 4 #[x555] [157, 7, 234, 105, 2, 0, 0, 0]\n let x559 := Obj.constructor 3 #[x558] [25, 15, 82, 84, 8, 0, 0, 0]\n let x560 := Obj.constructor 1 #[0, \"p\"] [185, 187, 25, 190, 51, 234, 3, 115]\n<span class=\"gu\">@@ -1476,7 +1476,7 @@</span>\n let x1476 := Obj.constructor 5 #[x43, x1381] [36, 111, 226, 248, 0, 2, 0, 0]\n let x1477 := Obj.constructor 5 #[x1476, x924] [19, 101, 95, 177, 0, 3, 10, 0]\n let x1478 := Obj.constructor 5 #[x1477, x802] [110, 161, 111, 244, 0, 4, 10, 0]\n<span class=\"gd\">-let x1479 := Obj.constructor 1 #[0, \"h₀\"] [249, 94, 105, 59, 215, 135, 180, 130]</span>\n<span class=\"gi\">+let x1479 := Obj.constructor 1 #[0, \"h₀\"] [149, 227, 157, 165, 5, 11, 91, 222]</span>\n let x1480 := Obj.constructor 5 #[x1443, x32] [163, 255, 221, 250, 0, 1, 12, 0]\n let x1481 := Obj.constructor 6 #[x18, x567, x1480] [48, 151, 219, 119, 0, 2, 11, 0]\n let x1482 := Obj.constructor 5 #[x1403, x1481] [45, 65, 72, 178, 0, 3, 11, 0]\n<span class=\"gu\">@@ -3420,7 +3420,7 @@</span>\n let x3420 := Obj.constructor 0 #[x3419, 0, x484] []\n let x3421 := Obj.constructor 0 #[x3420, x333, 0] [0, 0, 0, 0, 0, 0, 0, 0]\n let x3422 := Obj.constructor 1 #[x3421] []\n<span class=\"gd\">-let x3423 := Obj.constructor 1 #[0, \"β\"] [57, 91, 110, 179, 207, 81, 176, 247]</span>\n<span class=\"gi\">+let x3423 := Obj.constructor 1 #[0, \"β\"] [17, 104, 126, 98, 217, 137, 147, 75]</span>\n let x3424 := Obj.constructor 2 #[x565, 876] [83, 146, 246, 209, 131, 147, 125, 157]\n let x3425 := Obj.constructor 7 #[x3424, x32, x675] [255, 14, 17, 220, 8, 1, 1, 0]\n let x3426 := Obj.constructor 1 #[0, \"r\"] [151, 224, 143, 155, 147, 185, 82, 85]\n</code></pre></div>",
        "id": 258407426,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634750424
    },
    {
        "content": "<p>Apparently this was the only issue with stage0 as a cross-compiler.  Is it ok if I make PR? <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span></p>",
        "id": 258424453,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634756467
    },
    {
        "content": "<p>OMG, please do</p>",
        "id": 258424671,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634756546
    },
    {
        "content": "<p>The parser sounds amazing</p>",
        "id": 258424688,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634756552
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/113488-general/topic/Apple.20Silicon/near/258031549\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> What is your preferred way to support arm releases in elan?  Elan currently appends only <code>-linux.tar.gz</code>, but not any architecture information.  Should this be <code>-linux-aarch64.tar.gz</code> for arm and <code>-linux.tar.gz</code> for amd64?</p>\n</blockquote>\n<p>For the future, we could avoid these issues by enforcing an elan self update before attempting to download a toolchain.</p>",
        "id": 258682726,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1634893281
    },
    {
        "content": "<p>This won't work if you install elan via homebrew or nix.</p>",
        "id": 258689307,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634896889
    },
    {
        "content": "<p>Maybe it can output a warning whenever there is a new (major) release available?</p>",
        "id": 258689635,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634897067
    },
    {
        "content": "<p>Then people know that they should update their package</p>",
        "id": 258689656,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634897083
    }
]