[
    {
        "content": "<p>Think I have used variables in proofs before but today nothing works. What is wrong:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n\n<span class=\"kd\">variable</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">P</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"o\">:=</span> <span class=\"n\">p</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">exact</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I have boiled it down. Why does it say unknown identifier here?</p>",
        "id": 226669685,
        "sender_full_name": "Thorsten Altenkirch",
        "timestamp": 1613574623
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">include</span> <span class=\"n\">p</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">exact</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 226670349,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1613574860
    },
    {
        "content": "<p>If I understand correctly, by default Lean only brings into tactic mode the variables which appear in the hypotheses or conclusion.</p>",
        "id": 226670479,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1613574918
    },
    {
        "content": "<p>For completeness: <code>omit</code> is the evil twin of <code>include</code> (-;</p>",
        "id": 226670698,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613574998
    },
    {
        "content": "<p>Thank you. Actually I have used this before and forgot about it... :-( This just drove me mad.</p>",
        "id": 226670706,
        "sender_full_name": "Thorsten Altenkirch",
        "timestamp": 1613575001
    },
    {
        "content": "<p>Ooh, just run <code>omit mad</code> to unmad yourself again <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 226670977,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613575098
    },
    {
        "content": "<p>The reason that Lean makes you include <code>p</code> explicitly is that a tactic block is really a metaprogram, there is no way for the parse to figure out what <code>p</code> really means. You can have tactics that add things to the context, delete things from the context, and rename things in the context. So Lean doesn't even try to guess what you want to include (even though with <code>exact p</code> is seems pretty obvious).</p>",
        "id": 226704817,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1613587294
    },
    {
        "content": "<p>I noticed that once I am including a variable type inference fails because I suppose it also tries to use the new assumptions. Basically I only wanted to use variables as a replacement for a proof I don't want to do in the moment - I guess I better use sorry in this case?</p>",
        "id": 226791078,
        "sender_full_name": "Thorsten Altenkirch",
        "timestamp": 1613644285
    }
]