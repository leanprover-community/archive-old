[
    {
        "content": "<p>I see the dreaded <code>sub_eq_add_neg</code> was removed from <code>simp</code>! However, maybe some compensatory lemmas involving <code>sub</code> should then be added?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">â„¤</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"c1\">--  simplify tactic failed to simplify</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 195959833,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588339119
    },
    {
        "content": "<p>I guess I didn't test that this one used to work, but I know <code>a - (a - b) = b</code> did.</p>",
        "id": 195960158,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588339381
    },
    {
        "content": "<p>Yes, they should be added!  I only did the bare minimum to get mathlib compiling again.  There's probably also lots of lemmas from core that should be marked simp.</p>",
        "id": 195960222,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588339427
    },
    {
        "content": "<p>Did you not encounter much breakage in mathlib then?</p>",
        "id": 195960300,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588339466
    },
    {
        "content": "<p>This was the 3.6 upgrade.  162 files changed, 805 insertions(+), 760 deletions(-).  Lots of people helped, but there was a lot of breakage (also from other changes).</p>",
        "id": 195960476,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588339584
    },
    {
        "content": "<p>Ah, fair enough.</p>",
        "id": 195960525,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588339641
    },
    {
        "content": "<p>The new default for binder types of classes is fun. I get a mysterious error about something not being a function, but then I delete whatever comes after the location of the error and the error goes away.</p>",
        "id": 195960557,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588339679
    },
    {
        "content": "<p>(I know I could instead add the funny <code>[]</code> to my structures, but so far it seems better to just go with the flow.)</p>",
        "id": 195960662,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588339762
    },
    {
        "content": "<p><code>sub_self</code> is a <code>simp</code>, why your example fails?</p>",
        "id": 195987135,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1588354576
    },
    {
        "content": "<p>What do you <code>import</code>?</p>",
        "id": 195987163,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1588354592
    },
    {
        "content": "<p>It is marked as <code>simp</code> in <code>algebra.group.basic</code> in <code>mathlib</code>.</p>",
        "id": 195987317,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1588354664
    },
    {
        "content": "<p>All these <code>attribute</code>s should move to the definition site. Also <code>sub_sub_cancel</code> at least should be added as a simp lemma.</p>",
        "id": 195991626,
        "sender_full_name": "Reid Barton",
        "timestamp": 1588356906
    },
    {
        "content": "<p>Feel free to open a PR ;)</p>",
        "id": 195993450,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1588357925
    }
]