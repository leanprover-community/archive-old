[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib/issues/8516\">#8516</a>, I tried to remove <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.scalar\">docs#matrix.scalar</a> because I thought it was the same as <code>algebra_map R (matrix n n R)</code>. What I realize now is that that <code>algebra_map</code> only exists when <code>R</code> is commutative, due to the typeclass requirements of <code>algebra</code>.</p>\n<p>Should we extract a <code>has_algebra_map R A</code> typeclass from <code>algebra R A</code> which is just <a href=\"https://leanprover-community.github.io/mathlib_docs/find/algebra\">docs#algebra</a> without the <code>commutes'</code> field or requirement that R be commutative (aka a canonical ring hom and a proof it's compatible with smul? This feels like it would come up for polynomials over non-commutative coefficients too.</p>",
        "id": 247980569,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627944538
    },
    {
        "content": "<p>I think a <code>has_canonical_ring_hom R A</code> typeclass will be a good idea, in fact I suspect we will want it for groups too.</p>",
        "id": 248194385,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1627979228
    },
    {
        "content": "<p>I was just thinking that we probably want it for groups</p>",
        "id": 248194570,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627979380
    },
    {
        "content": "<p>Which I suspect opens a can of worms regarding definitional diamonds so I might just do the ring hom version</p>",
        "id": 248194672,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627979443
    }
]