[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">ideals</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">≤</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">refl</span>\n</code></pre></div>",
        "id": 202696640,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1593700512
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"n\">apply</span> <span class=\"n\">tactic</span><span class=\"o\">,</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">unify</span>\n  <span class=\"n\">s</span> <span class=\"bp\">≤</span> <span class=\"n\">s</span>\n<span class=\"k\">with</span>\n  <span class=\"bp\">∀</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">preorder</span> <span class=\"err\">?</span><span class=\"n\">m_1</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"err\">?</span><span class=\"n\">m_1</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span>\n<span class=\"n\">state</span><span class=\"o\">:</span>\n<span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"bp\">ℤ</span>\n<span class=\"err\">⊢</span> <span class=\"n\">s</span> <span class=\"bp\">≤</span> <span class=\"n\">s</span>\n</code></pre></div>",
        "id": 202696656,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1593700519
    },
    {
        "content": "<p>why doesn't <code>refl</code> close the goal?</p>",
        "id": 202696676,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1593700526
    },
    {
        "content": "<p>Guessing the <code>apply</code> bug</p>",
        "id": 202699946,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593702011
    },
    {
        "content": "<p>it looks like <code>apply</code> tried to supply the wrong number of parameters, and I bet <code>le</code> for <code>ideal</code> is some <code>forall</code>/<code>Pi</code>-type which would account for this</p>",
        "id": 202699992,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593702032
    },
    {
        "content": "<p>I think we have <code>refl'</code> for this.</p>",
        "id": 202700492,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1593702262
    },
    {
        "content": "<p>works like a charm!</p>",
        "id": 202702778,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1593703275
    }
]