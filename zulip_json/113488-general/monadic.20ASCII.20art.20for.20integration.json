[
    {
        "content": "<p>Given real vector spaces E and F equipped with a ton of additional structures and X a measured space, I get a map \"composing\" a continuous linear map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>:</mo><mi>E</mi><mo>→</mo><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">L : E \\to F</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> and a \"map\" <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><msup><mi>L</mi><mn>1</mn></msup><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f : L^1(X, E)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span> to get <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>∘</mo><mi>f</mi><mo>:</mo><msup><mi>L</mi><mn>1</mn></msup><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">L \\circ f : L^1(X, F)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span>. Of course none of these are actual functions, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> is a bundled function and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is an equivalence class of functions, bundled with some more props. Should I be using monadic ascii art? Something like <code>L &lt;$&gt; f</code> or <code>f &gt;&gt;= L</code>?</p>",
        "id": 208453369,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598734113
    },
    {
        "content": "<p>Imagine the world we could be living in if Unicode had just added a subscript <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mo lspace=\"0em\" rspace=\"0em\">∗</mo></msub></mrow><annotation encoding=\"application/x-tex\">{}_{*}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.325696em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">∗</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>",
        "id": 208453432,
        "sender_full_name": "Reid Barton",
        "timestamp": 1598734225
    },
    {
        "content": "<p>Can you take one of the many unicode variants to <code>∘</code> and use that?  The day will come when such constructions are used all the time, by people whose active mental model of these things is just as functions.</p>",
        "id": 208453655,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598734620
    },
    {
        "content": "<p>I could try that, but I fear we will end up with many variants, like our many decorated arrows.</p>",
        "id": 208453704,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598734684
    },
    {
        "content": "<p>Are there that many variants?  Equivalence classes under measurability; maybe bundled objects of a function + the fact that it belongs to a certain function space, ...</p>",
        "id": 208453788,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598734832
    },
    {
        "content": "<p>There are many bundled functions spaces.</p>",
        "id": 208453795,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598734858
    },
    {
        "content": "<p>Of course! But can one use <code>∘</code> for all of them?</p>",
        "id": 208453816,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598734892
    },
    {
        "content": "<p>(I don't know how notation works. But couldn't Lean figure it out?)</p>",
        "id": 208453825,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598734910
    },
    {
        "content": "<p>(If I am composing an object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mn>2</mn><mo separator=\"true\">,</mo><mi>α</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^{2,\\alpha}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span></span></span></span></span></span></span></span> with a smooth function, I unambiguously want another object in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mn>2</mn><mo separator=\"true\">,</mo><mi>α</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^{2,\\alpha}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span></span></span></span></span></span></span></span>.)</p>",
        "id": 208453877,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598734973
    },
    {
        "content": "<p>Maybe we could add a <code>has_fancy_composition</code> type class, but I fear there will be universe issues.</p>",
        "id": 208453889,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598734990
    },
    {
        "content": "<p>I would like Lean to have a list of triples A, B, C, together with the theorem (definition?) that an A and a B can be fancy-composed to get a C.</p>",
        "id": 208454019,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598735196
    },
    {
        "content": "<p>Yes, this is what the type class should be able to do</p>",
        "id": 208454027,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598735230
    },
    {
        "content": "<p>It may work actually, like the magic <code>has_uncurry</code> class.</p>",
        "id": 208454038,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598735260
    },
    {
        "content": "<p>Can one then use <code>∘</code> for all kinds of fancy-composition?</p>",
        "id": 208454040,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598735262
    },
    {
        "content": "<p>For example, it seems to cause no problems to use <code>≤</code> for all kinds of order.</p>",
        "id": 208454089,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598735307
    },
    {
        "content": "<p>Is there a problem with associativity?  Does one need compatibility theorems, if one has A, B, C, a fancy-composition of A and B to X, a fancy-composition of B and C to Y, a fancy-composition of X and C, ...</p>",
        "id": 208454653,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598736180
    },
    {
        "content": "<p>The simple version (still good enough for many applications) might be to have only left-fancy-compositions of A and B to B (with axiom that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>α</mi><msub><mo>∘</mo><mi>f</mi></msub><msub><mi>b</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><msub><mo>∘</mo><mi>f</mi></msub><msub><mi>b</mi><mn>2</mn></msub><mo>=</mo><mi>α</mi><msub><mo>∘</mo><mi>f</mi></msub><mo stretchy=\"false\">(</mo><msub><mi>b</mi><mn>1</mn></msub><mo>∘</mo><msub><mi>b</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(\\alpha \\circ_f b_1)\\circ_f b_2=\\alpha \\circ_f(b_1\\circ b_2)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\"><span class=\"mbin\">∘</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\"><span class=\"mbin\">∘</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.730558em;vertical-align:-0.286108em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\"><span class=\"mbin\">∘</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∘</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>) and right-fancy-compositions of A and B to A.</p>",
        "id": 208454934,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598736723
    },
    {
        "content": "<p>The \"fancy composition\" desire here reminds me of the use of lenses in Haskell - there are Isos and Lenses and Prisms and Traversals: every Iso is a Lens and a Prism, every Lens is a Traversal and every Prism is a Traversal, and each of these is closed under composition (ie composing a Lens with a Lens gives you a Lens, etc). Now when you compose a Iso with a Lens, you automatically get a Lens, and when you compose a Lens with a Prism, you automatically get a Traversal, and this is all done by the typeclass system nicely - which seems like the situation you have here...</p>",
        "id": 208455519,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1598737548
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/monadic.20ASCII.20art.20for.20integration/near/208453889\">said</a>:</p>\n<blockquote>\n<p>Maybe we could add a <code>has_fancy_composition</code> type class, but I fear there will be universe issues.</p>\n</blockquote>\n<p>Eventually people will want to prove things for real numbers, and then all of a sudden everyone will be forced into <code>Type</code> for some silly reason, and then all the universe issues will magically disappear.</p>",
        "id": 208455925,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598738274
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"246273\">Bhavik Mehta</span> <a href=\"#narrow/stream/113488-general/topic/monadic.20ASCII.20art.20for.20integration/near/208455519\">said</a>:</p>\n<blockquote>\n<p>The \"fancy composition\" desire here reminds me of the use of lenses in Haskell - there are Isos and Lenses and Prisms and Traversals: every Iso is a Lens and a Prism, every Lens is a Traversal and every Prism is a Traversal, and each of these is closed under composition (ie composing a Lens with a Lens gives you a Lens, etc). Now when you compose a Iso with a Lens, you automatically get a Lens, and when you compose a Lens with a Prism, you automatically get a Traversal, and this is all done by the typeclass system nicely - which seems like the situation you have here...</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> this is very interesting!  But I am not sure it's the same.  To take Patrick's original example, maybe the Isos would be continuous linear maps (eg <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>:</mo><mi>E</mi><mo>→</mo><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">L:E\\to F</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>), and the Lenses would be measurable functions (eg <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>∈</mo><msup><mi>L</mi><mn>1</mn></msup><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f \\in L^1(X,E)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span>).  Then as desired, Isos compose with Lenses to give Lenses.  But -- the Lenses are not closed under composition!</p>",
        "id": 208456438,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598739155
    },
    {
        "content": "<p>I was actually wondering if there's a category theory construction that deals with this -- and you are probably the right person to ask.</p>",
        "id": 208456516,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598739296
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113488-general/topic/monadic.20ASCII.20art.20for.20integration/near/208453877\">said</a>:</p>\n<blockquote>\n<p>(If I am composing an object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mn>2</mn><mo separator=\"true\">,</mo><mi>α</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^{2,\\alpha}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span></span></span></span></span></span></span></span> with a smooth function, I unambiguously want another object in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mn>2</mn><mo separator=\"true\">,</mo><mi>α</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^{2,\\alpha}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span></span></span></span></span></span></span></span>.)</p>\n</blockquote>\n<p>Ah I think you're right, I was basing my idea off of this, rather than Patrick's original example</p>",
        "id": 208456534,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1598739354
    },
    {
        "content": "<p>Given two categories (here: normed spaces and measure spaces), one wants a class of morphism-like things from one category to the other</p>",
        "id": 208456582,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598739404
    },
    {
        "content": "<p>which behave well under (say, pre-) compositions with morphisms in one of the categories.</p>",
        "id": 208456586,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598739429
    },
    {
        "content": "<p>Something like this comes to mind: <a href=\"https://ncatlab.org/nlab/show/Grothendieck+fibration\">https://ncatlab.org/nlab/show/Grothendieck+fibration</a></p>",
        "id": 208456637,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598739522
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"246273\">Bhavik Mehta</span> <a href=\"#narrow/stream/113488-general/topic/monadic.20ASCII.20art.20for.20integration/near/208456534\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113488-general/topic/monadic.20ASCII.20art.20for.20integration/near/208453877\">said</a>:</p>\n<blockquote>\n<p>(If I am composing an object of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mn>2</mn><mo separator=\"true\">,</mo><mi>α</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^{2,\\alpha}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span></span></span></span></span></span></span></span> with a smooth function, I unambiguously want another object in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mrow><mn>2</mn><mo separator=\"true\">,</mo><mi>α</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">C^{2,\\alpha}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span></span></span></span></span></span></span></span>.)</p>\n</blockquote>\n<p>Ah I think you're right, I was basing my idea off of this, rather than Patrick's original example</p>\n</blockquote>\n<p>One actually has the same problem here, for example <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msqrt><mi>x</mi></msqrt></mrow><annotation encoding=\"application/x-tex\">\\sqrt{x}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.23972em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8002800000000001em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.76028em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg height=\"1.08em\" preserveAspectRatio=\"xMinYMin slice\" viewBox=\"0 0 400000 1080\" width=\"400em\"><path d=\"M95,702 c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14 c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54 c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10 s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429 c69,-144,104.5,-217.7,106.5,-221 l0 -0 c5.3,-9.3,12,-14,20,-14 H400000v40H845.2724 s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7 c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80h400000v40h-400000z\"></path></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.23972em;\"><span></span></span></span></span></span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mfrac><mn>1</mn><mn>2</mn></mfrac></msup></mrow><annotation encoding=\"application/x-tex\">C^{\\tfrac{1}{2}}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9540200000000001em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9540200000000001em;\"><span style=\"top:-3.363em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8443142857142858em;\"><span style=\"top:-2.656em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.2255000000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.384em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.344em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span> but its self-composition <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mroot><mi>x</mi><mn>4</mn></mroot></mrow><annotation encoding=\"application/x-tex\">\\sqrt[4]{x}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.23972em;\"></span><span class=\"mord sqrt\"><span class=\"root\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6585560000000001em;\"><span style=\"top:-2.836336em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size6 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8002800000000001em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.76028em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg height=\"1.08em\" preserveAspectRatio=\"xMinYMin slice\" viewBox=\"0 0 400000 1080\" width=\"400em\"><path d=\"M95,702 c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14 c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54 c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10 s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429 c69,-144,104.5,-217.7,106.5,-221 l0 -0 c5.3,-9.3,12,-14,20,-14 H400000v40H845.2724 s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7 c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80h400000v40h-400000z\"></path></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.23972em;\"><span></span></span></span></span></span></span></span></span> is not.</p>",
        "id": 208456707,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598739635
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113488-general/topic/monadic.20ASCII.20art.20for.20integration/near/208456637\">said</a>:</p>\n<blockquote>\n<p>Something like this comes to mind: <a href=\"https://ncatlab.org/nlab/show/Grothendieck+fibration\">https://ncatlab.org/nlab/show/Grothendieck+fibration</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> I am very interested but it will take me some time to make sense of this :)</p>",
        "id": 208456766,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598739738
    },
    {
        "content": "<p>A straightforward thing one can do in this case is take a Sigma type of all L^1(X,E) as E varies, and define some category generated by morphisms given by composition with linear functions from E to F.</p>",
        "id": 208456863,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598739924
    },
    {
        "content": "<p>I think this could get messy if you have more than two sides though, I'm not sure if that case is relevant however</p>",
        "id": 208456926,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1598740020
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113488-general/topic/monadic.20ASCII.20art.20for.20integration/near/208456863\">said</a>:</p>\n<blockquote>\n<p>A straightforward thing one can do in this case is take a Sigma type of all L^1(X,E) as E varies, and define some category generated by morphisms given by composition with linear functions from E to F.</p>\n</blockquote>\n<p>Could you explain in more detail?  (Sorry.) The objects of the category are the individual <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mn>1</mn></msup><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">L^1(X,E)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span> 's?</p>",
        "id": 208456987,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598740141
    },
    {
        "content": "<p>Or individual elements of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mn>1</mn></msup><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">L^1(X, E)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span> 's?</p>",
        "id": 208456998,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598740191
    },
    {
        "content": "<p>The type of objects is the disjoint union of the L^1(X,E) as E varies.</p>",
        "id": 208457076,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598740297
    },
    {
        "content": "<p>The disjoint union being indexed over E.</p>",
        "id": 208457086,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598740315
    },
    {
        "content": "<p>And the morphisms are induced by the linear maps</p>",
        "id": 208457132,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598740336
    },
    {
        "content": "<p>Yeah</p>",
        "id": 208457187,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598740432
    },
    {
        "content": "<p>Actually I think the morphisms are literally just the ones induced by the linear maps</p>",
        "id": 208457232,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598740453
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mo>:</mo><mi>E</mi><mo>→</mo><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">L : E \\to F</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> induces a functional <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mn>1</mn></msup><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>E</mi><mo stretchy=\"false\">)</mo><mo>→</mo><msup><mi>L</mi><mn>1</mn></msup><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>F</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">L^1(X,E)\\to L^1(X, F)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mclose\">)</span></span></span></span>, and such things are the morphisms in the category ...</p>",
        "id": 208457234,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598740457
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 208457244,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598740471
    },
    {
        "content": "<p>The identity is given by the identity linear map</p>",
        "id": 208457258,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598740505
    },
    {
        "content": "<p>OK, this is very interesting, can it be used to solve Patrick's problem? <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 208457270,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598740527
    },
    {
        "content": "<p>There is a natural functor from this category to the category of all E's with linear maps</p>",
        "id": 208457272,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598740534
    },
    {
        "content": "<p>The functor being, \"take only the target space\"?</p>",
        "id": 208457328,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598740580
    },
    {
        "content": "<p>Yeah exactly</p>",
        "id": 208457331,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598740591
    },
    {
        "content": "<p>So could one give a name to this construction, and then use the same Lean notation for all its occurrences?</p>",
        "id": 208457408,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598740700
    },
    {
        "content": "<p>In terms of Patrick's original question regarding notation, this is would be a bit strange, since the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> would be an object in this category, and the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> would be a morphism.</p>",
        "id": 208457597,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598741028
    },
    {
        "content": "<p>Too bad!</p>",
        "id": 208457724,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598741192
    },
    {
        "content": "<p>(On second thought, I don't think that the \"remember only the target space\" is functorial.)</p>",
        "id": 208458572,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598742588
    },
    {
        "content": "<p>For what it's worth, the ascii art used by haskellers is <a href=\"https://hackage.haskell.org/package/base-4.14.0.0/docs/Control-Arrow.html#v:-94--60--60-\"><code>(^&lt;&lt;)</code></a></p>",
        "id": 208479348,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1598784732
    },
    {
        "content": "<p>Or <a href=\"https://hackage.haskell.org/package/profunctors-5.5.2/docs/Data-Profunctor.html#v:lmap\"><code>lmap</code></a>.</p>",
        "id": 208479503,
        "sender_full_name": "Chris Wong",
        "timestamp": 1598785000
    }
]