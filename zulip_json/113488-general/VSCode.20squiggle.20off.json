[
    {
        "content": "<p>It seems VSCode has trouble placing the red squiggles when some mathcal font is used, as in:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"bp\">𝓕</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"mi\">3</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"bp\">𝓕</span> <span class=\"bp\">+</span> <span class=\"n\">_</span>\n</code></pre></div>\n<p>resulting in <br>\n<a href=\"/user_uploads/3121/564lcpMF0008co8ZejU7ZLyF/image.png\">image.png</a> <br>\ncompared to<br>\n<a href=\"/user_uploads/3121/g0AuYsApZ9DDWBGJLyANgTQ6/image.png\">image.png</a> <br>\nwhich rightfully flags the underscore. I'm sure there is much to be done, this is probably a VSCode bug.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/564lcpMF0008co8ZejU7ZLyF/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/564lcpMF0008co8ZejU7ZLyF/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/g0AuYsApZ9DDWBGJLyANgTQ6/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/g0AuYsApZ9DDWBGJLyANgTQ6/image.png\"></a></div>",
        "id": 269407218,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1643202528
    },
    {
        "content": "<p>I'm surprised it took you so long to stumble upon this bug.</p>",
        "id": 269409949,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643203756
    },
    {
        "content": "<p>Maybe I saw it before and had post-traumatic amnesia</p>",
        "id": 269410133,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1643203834
    },
    {
        "content": "<p>Simply put, it happens because vscode and lean count characters differently.  In vscode, <code>𝓕</code> is two characters.  While in Lean, <code>𝓕</code> is one character.</p>",
        "id": 269410143,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643203839
    },
    {
        "content": "<p>And usually I don't try to type so confusing expression (not the one in the mwe, the real one...)</p>",
        "id": 269410245,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1643203888
    },
    {
        "content": "<p>(Lean 4 has learned to count like VS Code)</p>",
        "id": 269410298,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643203916
    },
    {
        "content": "<p>(Technically speaking, vscode (and javascript) count UTF-16 code units by default.  While Lean counts Unicode codepoints instead.)</p>",
        "id": 269410422,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643203963
    },
    {
        "content": "<p>Or possibly even UCS-2, right?</p>",
        "id": 269410501,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1643204000
    },
    {
        "content": "<p>(For people with too much time on their hands, there is a hilarious(ly long) thread on this whole issue over at <a href=\"https://github.com/microsoft/language-server-protocol/issues/376\">https://github.com/microsoft/language-server-protocol/issues/376</a>)</p>",
        "id": 269410547,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1643204029
    },
    {
        "content": "<p>I was going to say \"we can blame Microsoft for this one\" but then...</p>",
        "id": 269410707,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643204091
    },
    {
        "content": "<p>well, let's just say we knew it was a Microsoft issue even before attributing the blame</p>",
        "id": 269410833,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643204159
    },
    {
        "content": "<p>I was trying to type</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">𝓕.</span><span class=\"n\">φ</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"n\">L.loop</span> <span class=\"n\">h.1</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"bp\">*</span><span class=\"n\">L.ρ</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"bp\">$</span> <span class=\"o\">(</span><span class=\"n\">L.N</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">L.π</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"bp\">𝓕.</span><span class=\"n\">φ</span> <span class=\"n\">x</span> <span class=\"n\">L.v</span><span class=\"o\">)</span> <span class=\"bp\">⬝</span> <span class=\"n\">L.π</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"bp\">*</span><span class=\"n\">L.ρ</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"n\">corrugation.remainder</span> <span class=\"n\">L.p.π</span> <span class=\"o\">(</span><span class=\"n\">L.N</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">L.loop</span> <span class=\"n\">h.1</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">),</span>\n</code></pre></div>\n<p>and I really needed help from Lean and VSCode</p>",
        "id": 269410877,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1643204163
    },
    {
        "content": "<p>You can always insert a line break.  The problem only occurs if you're on the same line as the 𝓕.</p>",
        "id": 269410952,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1643204197
    }
]