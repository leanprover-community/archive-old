[
    {
        "content": "<p>I constructed the left adjoint of the forgetful functor from (the category of fields with 0^-1 = 0) to (the category of nonzero comm rings where every element is a unit)</p>",
        "id": 159206182,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550884516
    },
    {
        "content": "<p>Awesome... ...</p>",
        "id": 159214903,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1550899846
    },
    {
        "content": "<p>That's an equivalence. But not constructively so? I don't know. Whatever <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 159214918,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1550899878
    },
    {
        "content": "<p>Sneak peak:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">inductive</span> <span class=\"n\">pre_to_field</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n<span class=\"bp\">|</span> <span class=\"n\">of</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span>\n<span class=\"bp\">|</span> <span class=\"n\">add</span> <span class=\"o\">:</span> <span class=\"n\">pre_to_field</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span>\n<span class=\"bp\">|</span> <span class=\"n\">mul</span> <span class=\"o\">:</span> <span class=\"n\">pre_to_field</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span>\n<span class=\"bp\">|</span> <span class=\"n\">inv</span> <span class=\"o\">:</span> <span class=\"n\">pre_to_field</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span>\n\n<span class=\"n\">def</span> <span class=\"n\">mk</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"err\">⟦</span><span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">of</span> <span class=\"n\">x</span><span class=\"err\">⟧</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">mk</span><span class=\"bp\">.</span><span class=\"n\">bijective</span> <span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">bijective</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mk</span> <span class=\"n\">α</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">hxz</span><span class=\"o\">,</span> <span class=\"n\">hyz</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">exact</span> <span class=\"n\">H</span> <span class=\"k\">in</span> <span class=\"n\">eq</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"n\">hxz</span> <span class=\"n\">hyz</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">hz</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">unique_rel</span> <span class=\"n\">p</span> <span class=\"k\">in</span>\n<span class=\"bp\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span> <span class=\"bp\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">hz</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">⟩⟩⟩</span>\n\n<span class=\"n\">def</span> <span class=\"kn\">eval</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field&#39;</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">is_ring_hom</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"o\">:=</span>\n<span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqx</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n<span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">eval_of_rel</span> <span class=\"n\">f</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">eval_of_rel</span> <span class=\"n\">f</span> <span class=\"n\">hqx</span><span class=\"o\">]</span>\n</pre></div>",
        "id": 159221914,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550913808
    },
    {
        "content": "<p>is this the free meadow?</p>",
        "id": 159222328,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550914565
    },
    {
        "content": "<p>I never understood why \"champ algebrique\" was translated into English as \"algebraic stack\" instead of \"algebraic acre\".</p>",
        "id": 159222339,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1550914638
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> does this have its place in mathlib?</p>",
        "id": 159223780,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550917638
    },
    {
        "content": "<p>we can redefine the reals to have \"computable\" inverse :P</p>",
        "id": 159223782,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550917661
    },
    {
        "content": "<p>what's <code>field'</code>?</p>",
        "id": 159226006,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550921978
    },
    {
        "content": "<p>good question</p>",
        "id": 159226010,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550921996
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/field\" title=\"#narrow/stream/113488-general/topic/field\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/field</a>'</p>",
        "id": 159226055,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550922010
    },
    {
        "content": "<p>see this thread :P</p>",
        "id": 159226056,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550922012
    },
    {
        "content": "<p>what's <code>to_field</code>?</p>",
        "id": 159226057,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550922012
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">to_field</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_division_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span> <span class=\"o\">:=</span>\n<span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 159226060,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550922031
    },
    {
        "content": "<p>I think <code>field'</code> should be <code>discrete_field</code></p>",
        "id": 159226140,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550922219
    },
    {
        "content": "<p>I don't think so</p>",
        "id": 159226142,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550922241
    },
    {
        "content": "<p>because we don't assume modules, abelian groups, rings, semirings, etc, to have decidable equality</p>",
        "id": 159226185,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550922255
    },
    {
        "content": "<p>that's true, but decidability is sort of part of a field - it's basically impossible to define a field structure without decidable equality</p>",
        "id": 159226353,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550922652
    },
    {
        "content": "<p>I just did it :P</p>",
        "id": 159226364,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550922688
    },
    {
        "content": "<p>what about 0 != 1? What's <code>pre_to_field.setoid</code>?</p>",
        "id": 159226419,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550922763
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n\n<span class=\"n\">class</span> <span class=\"n\">is_division_ring</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">exists_inv</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kn\">section</span>\n<span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n<span class=\"n\">class</span> <span class=\"n\">field&#39;</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">division_ring</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">comm_ring</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">inv_zero</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">inv_zero&#39;</span> <span class=\"o\">[</span><span class=\"n\">field&#39;</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"n\">field&#39;</span><span class=\"bp\">.</span><span class=\"n\">inv_zero</span> <span class=\"n\">α</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">mul_eq_one_comm</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_division_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">by_cases</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hy0</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"n\">hy0</span><span class=\"o\">,</span> <span class=\"n\">zero_mul</span><span class=\"o\">,</span> <span class=\"n\">mul_zero</span><span class=\"o\">])</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hy0</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">hz</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">is_division_ring</span><span class=\"bp\">.</span><span class=\"n\">exists_inv</span> <span class=\"n\">hy0</span> <span class=\"k\">in</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mul_one</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">hz</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mul_assoc</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">])</span>\n\n<span class=\"kn\">inductive</span> <span class=\"n\">pre_to_field</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n<span class=\"bp\">|</span> <span class=\"n\">of</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span>\n<span class=\"bp\">|</span> <span class=\"n\">add</span> <span class=\"o\">:</span> <span class=\"n\">pre_to_field</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span>\n<span class=\"bp\">|</span> <span class=\"n\">mul</span> <span class=\"o\">:</span> <span class=\"n\">pre_to_field</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span>\n<span class=\"bp\">|</span> <span class=\"n\">inv</span> <span class=\"o\">:</span> <span class=\"n\">pre_to_field</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">pre_to_field</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span>\n\n<span class=\"n\">def</span> <span class=\"n\">rel</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">pre_to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">of</span> <span class=\"n\">p</span><span class=\"o\">)</span>    <span class=\"n\">z</span> <span class=\"o\">:=</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">z</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">add</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"n\">z</span> <span class=\"o\">:=</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">rel</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">rel</span> <span class=\"n\">q</span> <span class=\"n\">y</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">z</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"n\">z</span> <span class=\"o\">:=</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">rel</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">rel</span> <span class=\"n\">q</span> <span class=\"n\">y</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">z</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"n\">p</span><span class=\"o\">)</span>   <span class=\"n\">z</span> <span class=\"o\">:=</span> <span class=\"n\">rel</span> <span class=\"n\">p</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rel</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">def</span> <span class=\"n\">neg</span> <span class=\"o\">[</span><span class=\"n\">has_neg</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">pre_to_field</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">pre_to_field</span> <span class=\"n\">α</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">of</span> <span class=\"n\">p</span><span class=\"o\">)</span>    <span class=\"o\">:=</span> <span class=\"n\">of</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">p</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">add</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">add</span> <span class=\"o\">(</span><span class=\"n\">neg</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">neg</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">mul</span> <span class=\"o\">(</span><span class=\"n\">neg</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">y</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"n\">x</span><span class=\"o\">)</span>   <span class=\"o\">:=</span> <span class=\"n\">inv</span> <span class=\"o\">(</span><span class=\"n\">neg</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">rel_neg</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span> <span class=\"n\">rel</span> <span class=\"n\">p</span> <span class=\"n\">z</span> <span class=\"bp\">→</span> <span class=\"n\">rel</span> <span class=\"o\">(</span><span class=\"n\">neg</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">z</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">of</span> <span class=\"n\">p</span><span class=\"o\">)</span>    <span class=\"n\">z</span> <span class=\"n\">hpz</span>                   <span class=\"o\">:=</span> <span class=\"n\">congr_arg</span> <span class=\"n\">has_neg</span><span class=\"bp\">.</span><span class=\"n\">neg</span> <span class=\"n\">hpz</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">add</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"n\">z</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">hxyz</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨-</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">rel_neg</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">rel_neg</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">hxyz</span><span class=\"o\">,</span> <span class=\"n\">neg_add</span><span class=\"o\">]</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"n\">z</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">hxyz</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨-</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">rel_neg</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">hxyz</span><span class=\"o\">,</span> <span class=\"n\">neg_mul_eq_neg_mul</span><span class=\"o\">]</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"n\">p</span><span class=\"o\">)</span>   <span class=\"n\">z</span> <span class=\"o\">(</span><span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">⟨</span><span class=\"n\">hp0</span><span class=\"o\">,</span> <span class=\"n\">hz0</span><span class=\"bp\">⟩</span><span class=\"o\">)</span>    <span class=\"o\">:=</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">⟨@</span><span class=\"n\">neg_zero</span> <span class=\"n\">α</span> <span class=\"bp\">_</span> <span class=\"bp\">▸</span> <span class=\"n\">rel_neg</span> <span class=\"n\">hp0</span><span class=\"o\">,</span> <span class=\"n\">neg_eq_zero</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">hz0</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"n\">p</span><span class=\"o\">)</span>   <span class=\"n\">z</span> <span class=\"o\">(</span><span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hxz</span><span class=\"bp\">⟩</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">⟨-</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rel_neg</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">neg_mul_neg</span><span class=\"o\">,</span> <span class=\"n\">hxz</span><span class=\"o\">]</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_division_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">unique_rel</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">pre_to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃!</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rel</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">rec_on</span> <span class=\"n\">p</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">y</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"n\">hxy</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"bp\">⟩</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hpx2</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">hqy2</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"bp\">+</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"bp\">λ</span> <span class=\"n\">z</span> <span class=\"bp\">⟨</span><span class=\"n\">x&#39;</span><span class=\"o\">,</span> <span class=\"n\">y&#39;</span><span class=\"o\">,</span> <span class=\"n\">hpx&#39;</span><span class=\"o\">,</span> <span class=\"n\">hqy&#39;</span><span class=\"o\">,</span> <span class=\"n\">hxyz</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">hpx2</span> <span class=\"n\">x&#39;</span> <span class=\"n\">hpx&#39;</span> <span class=\"bp\">▸</span> <span class=\"n\">hqy2</span> <span class=\"n\">y&#39;</span> <span class=\"n\">hqy&#39;</span> <span class=\"bp\">▸</span> <span class=\"n\">hxyz</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"bp\">⟩</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hpx2</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">hqy2</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"bp\">λ</span> <span class=\"n\">z</span> <span class=\"bp\">⟨</span><span class=\"n\">x&#39;</span><span class=\"o\">,</span> <span class=\"n\">y&#39;</span><span class=\"o\">,</span> <span class=\"n\">hpx&#39;</span><span class=\"o\">,</span> <span class=\"n\">hqy&#39;</span><span class=\"o\">,</span> <span class=\"n\">hxyz</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">hpx2</span> <span class=\"n\">x&#39;</span> <span class=\"n\">hpx&#39;</span> <span class=\"bp\">▸</span> <span class=\"n\">hqy2</span> <span class=\"n\">y&#39;</span> <span class=\"n\">hqy&#39;</span> <span class=\"bp\">▸</span> <span class=\"n\">hxyz</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"bp\">⟩</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hpx2</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">by_cases</span>\n    <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hx0</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">⟨</span><span class=\"n\">hx0</span> <span class=\"bp\">▸</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">y</span> <span class=\"n\">hy</span><span class=\"o\">,</span>\n      <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">cases_on</span> <span class=\"n\">hy</span> <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">right</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"bp\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">hpz</span><span class=\"o\">,</span> <span class=\"n\">hzy</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n      <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">one_mul</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">hzy</span><span class=\"o\">,</span> <span class=\"n\">hpx2</span> <span class=\"n\">z</span> <span class=\"n\">hpz</span><span class=\"o\">,</span> <span class=\"n\">hx0</span><span class=\"o\">,</span> <span class=\"n\">zero_mul</span><span class=\"o\">,</span> <span class=\"n\">zero_mul</span><span class=\"o\">]</span><span class=\"bp\">⟩</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hx0</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hxy</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">is_division_ring</span><span class=\"bp\">.</span><span class=\"n\">exists_inv</span> <span class=\"n\">hx0</span> <span class=\"k\">in</span>\n      <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hxy</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">z</span> <span class=\"n\">hz</span><span class=\"o\">,</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">cases_on</span> <span class=\"n\">hz</span>\n        <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"bp\">⟨</span><span class=\"n\">hp0</span><span class=\"o\">,</span> <span class=\"n\">hz0</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hz0</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">one_mul</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">hpx2</span> <span class=\"mi\">0</span> <span class=\"n\">hp0</span><span class=\"o\">,</span> <span class=\"n\">zero_mul</span><span class=\"o\">,</span> <span class=\"n\">zero_mul</span><span class=\"o\">])</span>\n        <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"bp\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hps</span><span class=\"o\">,</span> <span class=\"n\">hsz</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mul_one</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">hsz</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">hpx2</span> <span class=\"n\">s</span> <span class=\"n\">hps</span><span class=\"o\">,</span> <span class=\"n\">mul_eq_one_comm</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">])</span><span class=\"bp\">⟩</span><span class=\"o\">))</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span>\n\n<span class=\"n\">def</span> <span class=\"kn\">eval</span> <span class=\"o\">[</span><span class=\"n\">division_ring</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">pre_to_field</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">of</span> <span class=\"n\">p</span><span class=\"o\">)</span>    <span class=\"o\">:=</span> <span class=\"n\">f</span> <span class=\"n\">p</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">add</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kn\">eval</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"kn\">eval</span> <span class=\"n\">y</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kn\">eval</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"kn\">eval</span> <span class=\"n\">y</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"n\">p</span><span class=\"o\">)</span>   <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"kn\">eval</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">eval_of_rel</span> <span class=\"o\">[</span><span class=\"n\">field&#39;</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">is_ring_hom</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hpx</span> <span class=\"o\">:</span> <span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">rel</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">),</span> <span class=\"kn\">eval</span> <span class=\"n\">f</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">x</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">of</span> <span class=\"n\">p</span><span class=\"o\">)</span>    <span class=\"n\">z</span> <span class=\"n\">hpz</span>                   <span class=\"o\">:=</span> <span class=\"n\">congr_arg</span> <span class=\"n\">f</span> <span class=\"n\">hpz</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">add</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"n\">z</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">hxyz</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"kn\">eval</span><span class=\"o\">,</span> <span class=\"n\">eval_of_rel</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">eval_of_rel</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">hxyz</span><span class=\"o\">,</span> <span class=\"n\">is_ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_add</span> <span class=\"n\">f</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"n\">z</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">hxyz</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"kn\">eval</span><span class=\"o\">,</span> <span class=\"n\">eval_of_rel</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">eval_of_rel</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">hxyz</span><span class=\"o\">,</span> <span class=\"n\">is_ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_mul</span> <span class=\"n\">f</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"n\">p</span><span class=\"o\">)</span>   <span class=\"n\">z</span> <span class=\"o\">(</span><span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">⟨</span><span class=\"n\">hp0</span><span class=\"o\">,</span> <span class=\"n\">hz0</span><span class=\"bp\">⟩</span><span class=\"o\">)</span>    <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"kn\">eval</span><span class=\"o\">,</span> <span class=\"n\">eval_of_rel</span> <span class=\"n\">hp0</span><span class=\"o\">,</span> <span class=\"n\">hz0</span><span class=\"o\">,</span> <span class=\"n\">is_ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_zero</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">inv_zero&#39;</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"n\">p</span><span class=\"o\">)</span>   <span class=\"n\">z</span> <span class=\"o\">(</span><span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hxz</span><span class=\"bp\">⟩</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"kn\">eval</span><span class=\"o\">,</span> <span class=\"n\">eval_of_rel</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mul_one</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">is_ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_one</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n    <span class=\"err\">←</span> <span class=\"n\">hxz</span><span class=\"o\">,</span> <span class=\"n\">is_ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_mul</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span>\n    <span class=\"n\">inv_mul_cancel</span> <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hfx</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">zero_ne_one</span> <span class=\"n\">β</span> <span class=\"bp\">_</span> <span class=\"err\">$</span>\n      <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">is_ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_one</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">hxz</span><span class=\"o\">,</span> <span class=\"n\">is_ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_mul</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">hfx</span><span class=\"o\">,</span> <span class=\"n\">zero_mul</span><span class=\"o\">]),</span>\n    <span class=\"n\">one_mul</span><span class=\"o\">]</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">pre_to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rel</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">rel</span> <span class=\"n\">q</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">iseqv</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">unique_rel</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqx</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hqx</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqx</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">hry</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">unique_of_exists_unique</span> <span class=\"o\">(</span><span class=\"n\">unique_rel</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"n\">hqy</span> <span class=\"n\">hqx</span> <span class=\"bp\">▸</span> <span class=\"n\">hry</span><span class=\"bp\">⟩⟩</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">pre_to_field</span>\n\n\n<span class=\"n\">def</span> <span class=\"n\">to_field</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_division_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span> <span class=\"o\">:=</span>\n<span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">to_field</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_division_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">mk</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"err\">⟦</span><span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">of</span> <span class=\"n\">x</span><span class=\"err\">⟧</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">mk</span><span class=\"bp\">.</span><span class=\"n\">bijective</span> <span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">bijective</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mk</span> <span class=\"n\">α</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">hxz</span><span class=\"o\">,</span> <span class=\"n\">hyz</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">exact</span> <span class=\"n\">H</span> <span class=\"k\">in</span> <span class=\"n\">eq</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"n\">hxz</span> <span class=\"n\">hyz</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">hz</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">unique_rel</span> <span class=\"n\">p</span> <span class=\"k\">in</span>\n<span class=\"bp\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span> <span class=\"bp\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">hz</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">⟩⟩⟩</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_add</span> <span class=\"o\">(</span><span class=\"n\">to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on₂</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"err\">⟦</span><span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">add</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"err\">⟧</span><span class=\"o\">)</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"n\">s</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hrx</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">hsy</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span>\n<span class=\"bp\">⟨</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hrx</span><span class=\"o\">,</span> <span class=\"n\">hsy</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩⟩⟩</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_neg</span> <span class=\"o\">(</span><span class=\"n\">to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"err\">⟦</span><span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">neg</span> <span class=\"n\">p</span><span class=\"err\">⟧</span><span class=\"o\">)</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqx</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span>\n<span class=\"bp\">⟨-</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">rel_neg</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">rel_neg</span> <span class=\"n\">hqx</span><span class=\"bp\">⟩⟩</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_mul</span> <span class=\"o\">(</span><span class=\"n\">to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on₂</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"err\">⟦</span><span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">mul</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"err\">⟧</span><span class=\"o\">)</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"n\">s</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hrx</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">hsy</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span>\n<span class=\"bp\">⟨</span><span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqy</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hrx</span><span class=\"o\">,</span> <span class=\"n\">hsy</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩⟩⟩</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_inv</span> <span class=\"o\">(</span><span class=\"n\">to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"err\">⟦</span><span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">inv</span> <span class=\"n\">p</span><span class=\"err\">⟧</span><span class=\"o\">)</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqx</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span> <span class=\"err\">$</span>\n<span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">by_cases</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hx0</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">⟨</span><span class=\"n\">hx0</span> <span class=\"bp\">▸</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">⟨</span><span class=\"n\">hx0</span> <span class=\"bp\">▸</span> <span class=\"n\">hqx</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩⟩</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">hx0</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">is_division_ring</span><span class=\"bp\">.</span><span class=\"n\">exists_inv</span> <span class=\"n\">hx0</span> <span class=\"k\">in</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hqx</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"bp\">⟩⟩</span><span class=\"o\">)</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">elab_as_eliminator</span><span class=\"o\">]</span> <span class=\"kn\">protected</span> <span class=\"kn\">lemma</span> <span class=\"n\">induction_on</span>\n  <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">ih</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">mk</span> <span class=\"n\">z</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">hz</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">mk</span><span class=\"bp\">.</span><span class=\"n\">bijective</span> <span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">hz</span> <span class=\"bp\">▸</span> <span class=\"n\">ih</span> <span class=\"n\">z</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">elab_as_eliminator</span><span class=\"o\">]</span> <span class=\"kn\">protected</span> <span class=\"kn\">lemma</span> <span class=\"n\">induction_on₂</span>\n  <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">ih</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">mk</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mk</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">y</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">ih</span> <span class=\"n\">p</span> <span class=\"n\">q</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">elab_as_eliminator</span><span class=\"o\">]</span> <span class=\"kn\">protected</span> <span class=\"kn\">lemma</span> <span class=\"n\">induction_on₃</span>\n  <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">ih</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">mk</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mk</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mk</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:=</span>\n<span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">y</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">z</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">ih</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">mk_add</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">mk</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">mk</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">mk</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩⟩</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">mk_neg</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">mk</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">mk</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">mk_mul</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">mk</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">mk</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">mk</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩⟩</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">mk_inv</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">mk</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"n\">mk</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">hxy</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">α</span><span class=\"o\">)</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">ring</span> <span class=\"o\">(</span><span class=\"n\">to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">zero</span> <span class=\"o\">:=</span> <span class=\"n\">mk</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"n\">one</span> <span class=\"o\">:=</span> <span class=\"n\">mk</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"n\">add_assoc</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on₃</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"n\">add_assoc</span><span class=\"o\">],</span>\n  <span class=\"n\">zero_add</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">],</span>\n  <span class=\"n\">add_zero</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">],</span>\n  <span class=\"n\">add_left_neg</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mk_neg</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"n\">add_left_neg</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">refl</span><span class=\"o\">,</span>\n  <span class=\"n\">add_comm</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on₂</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"n\">add_comm</span><span class=\"o\">],</span>\n  <span class=\"n\">mul_assoc</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on₃</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">],</span>\n  <span class=\"n\">one_mul</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">],</span>\n  <span class=\"n\">mul_one</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">],</span>\n  <span class=\"n\">left_distrib</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on₃</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"n\">mul_add</span><span class=\"o\">],</span>\n  <span class=\"n\">right_distrib</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on₃</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_add</span><span class=\"o\">,</span> <span class=\"n\">add_mul</span><span class=\"o\">],</span>\n  <span class=\"bp\">..</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">has_add</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">has_neg</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">has_mul</span> <span class=\"n\">α</span> <span class=\"o\">}</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">mk_zero</span> <span class=\"o\">:</span> <span class=\"n\">mk</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">mk_one</span> <span class=\"o\">:</span> <span class=\"n\">mk</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">mk</span><span class=\"bp\">.</span><span class=\"n\">is_ring_hom</span> <span class=\"o\">:</span> <span class=\"n\">is_ring_hom</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mk</span> <span class=\"n\">α</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span><span class=\"n\">mk_one</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"n\">mk_add</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span>\n<span class=\"n\">def</span> <span class=\"kn\">eval</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field&#39;</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">is_ring_hom</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"o\">:=</span>\n<span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">hqx</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n<span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">eval_of_rel</span> <span class=\"n\">f</span> <span class=\"n\">hpx</span><span class=\"o\">,</span> <span class=\"n\">pre_to_field</span><span class=\"bp\">.</span><span class=\"n\">eval_of_rel</span> <span class=\"n\">f</span> <span class=\"n\">hqx</span><span class=\"o\">]</span>\n\n<span class=\"kn\">instance</span> <span class=\"kn\">eval</span><span class=\"bp\">.</span><span class=\"n\">is_ring_hom</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field&#39;</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">is_ring_hom</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">is_ring_hom</span> <span class=\"o\">(</span><span class=\"kn\">eval</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span><span class=\"k\">by</span> <span class=\"n\">convert</span> <span class=\"n\">is_ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_one</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n<span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₂</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n<span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₂</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">to_field</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">to_field</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_division_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">comm_ring</span> <span class=\"o\">(</span><span class=\"n\">to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">mul_comm</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on₂</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">],</span>\n  <span class=\"bp\">..</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">ring</span> <span class=\"n\">α</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">[</span><span class=\"n\">nonzero_comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_division_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">field</span> <span class=\"o\">(</span><span class=\"n\">to_field</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">zero_ne_one</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">zero_ne_one</span> <span class=\"err\">$</span> <span class=\"o\">(</span><span class=\"n\">mk</span><span class=\"bp\">.</span><span class=\"n\">bijective</span> <span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_inv_cancel</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">hp0</span><span class=\"o\">,</span>\n    <span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">is_division_ring</span><span class=\"bp\">.</span><span class=\"n\">exists_inv</span> <span class=\"o\">(</span><span class=\"n\">mt</span> <span class=\"o\">(</span><span class=\"n\">congr_arg</span> <span class=\"n\">mk</span><span class=\"o\">)</span> <span class=\"n\">hp0</span><span class=\"o\">)</span> <span class=\"k\">in</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mk_inv</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">mk_one</span><span class=\"o\">],</span>\n  <span class=\"n\">inv_mul_cancel</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">hp0</span><span class=\"o\">,</span>\n    <span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">is_division_ring</span><span class=\"bp\">.</span><span class=\"n\">exists_inv</span> <span class=\"o\">(</span><span class=\"n\">mt</span> <span class=\"o\">(</span><span class=\"n\">congr_arg</span> <span class=\"n\">mk</span><span class=\"o\">)</span> <span class=\"n\">hp0</span><span class=\"o\">)</span> <span class=\"k\">in</span>\n    <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mk_inv</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mk_mul</span><span class=\"o\">,</span> <span class=\"n\">mul_eq_one_comm</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">mk_one</span><span class=\"o\">],</span>\n  <span class=\"bp\">..</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span> <span class=\"n\">to_field</span><span class=\"bp\">.</span><span class=\"n\">has_inv</span> <span class=\"n\">α</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">to_field</span>\n</pre></div>",
        "id": 159226441,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550922821
    },
    {
        "content": "<p>oh and to give a concrete example: the Cauchy sequence construction of the real numbers allow you to define it as a ring constructively; then <code>to_field real</code> would be an example of a field where the inverse of 0 is 0, but it has no decidable equality.</p>",
        "id": 159226489,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550922895
    },
    {
        "content": "<p>But you can't do it with computable inverses is the point I think.</p>",
        "id": 159226549,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1550922971
    },
    {
        "content": "<p><code>to_field real</code> has computable inverse, inv zero = zero, and no decidable equality</p>",
        "id": 159226552,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550922998
    },
    {
        "content": "<p>I see a <code>classical.by_cases</code> in there though</p>",
        "id": 159226610,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923089
    },
    {
        "content": "<p><code>classical.by_cases</code> is computable</p>",
        "id": 159226616,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923116
    },
    {
        "content": "<p>In order to work with the axioms of a division ring you don't actually need decidable eq but rather eq LEM</p>",
        "id": 159226618,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923130
    },
    {
        "content": "<p>but we don't have a typeclass for that</p>",
        "id": 159226620,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923140
    },
    {
        "content": "<p>I just find it inconvenient that the inverse of zero is left unspecified in <code>field</code> (which makes <code>subfield</code> weird, as seen in <a href=\"https://github.com/leanprover/mathlib/issues/742\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/issues/742\">#742</a>), and too strict that <code>discrete_field </code>requires decidable equality</p>",
        "id": 159226699,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923250
    },
    {
        "content": "<p>I think <code>field'</code> is the correct structure</p>",
        "id": 159226700,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923261
    },
    {
        "content": "<p>I agree that <code>field</code> is stupid, that's why I've been telling everyone to use <code>discrete_field</code> instead</p>",
        "id": 159226760,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923373
    },
    {
        "content": "<p>but we don't assume <code>add_comm_group</code> or <code>semiring</code> or <code>module</code> to have decidable equality either, so decidable equality seems too strong</p>",
        "id": 159226774,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923409
    },
    {
        "content": "<p>That's because none of those have case analysis on equaling zero</p>",
        "id": 159226778,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923439
    },
    {
        "content": "<p>I think the proper constructive analogue of <code>field</code> is <code>ring</code></p>",
        "id": 159226824,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923475
    },
    {
        "content": "<p>Also, we do have plenty of structures that assume decidable equality, specifically the order structures</p>",
        "id": 159226891,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923574
    },
    {
        "content": "<p><code>decidable_linear_ordered_semigroup</code> and so on</p>",
        "id": 159226893,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923586
    },
    {
        "content": "<p>but the category of discrete rings is not closed under direct limit</p>",
        "id": 159226910,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923670
    },
    {
        "content": "<p>is the category of fields?</p>",
        "id": 159226954,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923692
    },
    {
        "content": "<p>yes</p>",
        "id": 159226955,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923707
    },
    {
        "content": "<p>in that case, I have no idea what you are talking about</p>",
        "id": 159226957,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923724
    },
    {
        "content": "<p>what?</p>",
        "id": 159226958,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923731
    },
    {
        "content": "<p>I don't have any conception of how direct limits work</p>",
        "id": 159226965,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923747
    },
    {
        "content": "<p>or what the issues are</p>",
        "id": 159226966,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923764
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/cf8a619bde24d327387dd7321a8da55fd3bbd585/src/algebra/direct_limit.lean#L503-L555\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/cf8a619bde24d327387dd7321a8da55fd3bbd585/src/algebra/direct_limit.lean#L503-L555\">https://github.com/leanprover-community/mathlib/blob/cf8a619bde24d327387dd7321a8da55fd3bbd585/src/algebra/direct_limit.lean#L503-L555</a></p>",
        "id": 159226969,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923775
    },
    {
        "content": "<p>the issue is that to_field works great with direct limit</p>",
        "id": 159226972,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923801
    },
    {
        "content": "<p>the category of field is closed under direct limit</p>",
        "id": 159227019,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923812
    },
    {
        "content": "<p>and the category of discrete field might also be (I haven't thought about it)</p>",
        "id": 159227021,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923832
    },
    {
        "content": "<p>but the category of discrete rings, I'm 50% certain that it must not be closed under direct limit</p>",
        "id": 159227025,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923845
    },
    {
        "content": "<p>I didn't say anything about discrete rings though</p>",
        "id": 159227030,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923864
    },
    {
        "content": "<p>so you think that <code>field'</code> should not even exist?</p>",
        "id": 159227037,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923895
    },
    {
        "content": "<p>I'm asserting that all interesting fields are decidable</p>",
        "id": 159227038,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923901
    },
    {
        "content": "<p>and I gave you a concrete counter-example</p>",
        "id": 159227040,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923911
    },
    {
        "content": "<p>there's no way to make <code>real</code> decidable</p>",
        "id": 159227042,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923918
    },
    {
        "content": "<p>You want a different structure than <code>field'</code>... you want a ring where inverses exist</p>",
        "id": 159227084,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923951
    },
    {
        "content": "<p>exist in the weak sense</p>",
        "id": 159227087,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550923963
    },
    {
        "content": "<p>well then theorems become a bit clumsy</p>",
        "id": 159227089,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923979
    },
    {
        "content": "<p>so no that's not what I want</p>",
        "id": 159227096,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550923986
    },
    {
        "content": "<p><code>to_field</code> gives you a way to explicitly refer to these elements that are only known to exist propositionally</p>",
        "id": 159227139,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924050
    },
    {
        "content": "<p>but the cost is that you \"only\" get a <code>bijection</code> rather than an <code>equiv</code></p>",
        "id": 159227145,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924071
    },
    {
        "content": "<p>is there a situation where the hypothetical inverse function <code>to_field real -&gt; real</code> is helpful?</p>",
        "id": 159227154,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924115
    },
    {
        "content": "<p>sure... if you want to talk about the inverse of a real number</p>",
        "id": 159227212,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924223
    },
    {
        "content": "<p>I mean, let's say we replaced <code>real</code> with <code>to_field real</code></p>",
        "id": 159227219,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924255
    },
    {
        "content": "<p>everywhere in mathlib</p>",
        "id": 159227221,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924261
    },
    {
        "content": "<p>so the canonical structure of the real numbers is a field where the inverse of zero is zero, without decidable equality</p>",
        "id": 159227224,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924276
    },
    {
        "content": "<p>also I think the category of discrete fields is not closed under direct limit</p>",
        "id": 159227273,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924328
    },
    {
        "content": "<p>The real numbers are a quotient of Cauchy sequences. <code>to_field real</code> is a quotient of field expressions with constants in <code>real</code>... so it's like you just adjoined inverses for everything</p>",
        "id": 159227278,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924343
    },
    {
        "content": "<p>you never use the Cauchy sequences anyway</p>",
        "id": 159227287,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924357
    },
    {
        "content": "<p>How do you define the supremum?</p>",
        "id": 159227289,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924371
    },
    {
        "content": "<p>ok let's put this in context</p>",
        "id": 159227291,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924384
    },
    {
        "content": "<p>what should I replace <a href=\"https://github.com/leanprover-community/mathlib/blob/cf8a619bde24d327387dd7321a8da55fd3bbd585/src/algebra/direct_limit.lean#L503-L555\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/cf8a619bde24d327387dd7321a8da55fd3bbd585/src/algebra/direct_limit.lean#L503-L555\">https://github.com/leanprover-community/mathlib/blob/cf8a619bde24d327387dd7321a8da55fd3bbd585/src/algebra/direct_limit.lean#L503-L555</a> by?</p>",
        "id": 159227292,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924387
    },
    {
        "content": "<p>I definitely want direct limit of fields</p>",
        "id": 159227328,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924403
    },
    {
        "content": "<p>so don't tell me replace it with EOF</p>",
        "id": 159227336,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924414
    },
    {
        "content": "<p>go classical, man</p>",
        "id": 159227338,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924425
    },
    {
        "content": "<p>classical != noncomputable</p>",
        "id": 159227339,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924434
    },
    {
        "content": "<p>go noncomputable, man</p>",
        "id": 159227341,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924447
    },
    {
        "content": "<p>really?</p>",
        "id": 159227342,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924452
    },
    {
        "content": "<p>if it requires you to invent entirely new algebraic structures just to get this theorem, yes it seems like a valid approach</p>",
        "id": 159227360,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924486
    },
    {
        "content": "<p>what's wrong with inventing new algebraic structures</p>",
        "id": 159227361,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924502
    },
    {
        "content": "<p>well you have to make sure they play well with everything else</p>",
        "id": 159227362,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924516
    },
    {
        "content": "<p>particularly if you are planning on replacing the original</p>",
        "id": 159227404,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924527
    },
    {
        "content": "<p>I should say that I am actually quite impressed with the whole construction; I didn't know this was possible until you showed me</p>",
        "id": 159227418,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924616
    },
    {
        "content": "<p>thanks for your appreciation</p>",
        "id": 159227422,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924639
    },
    {
        "content": "<p>But I'm 110% sure kevin will say you are wasting your time</p>",
        "id": 159227423,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924640
    },
    {
        "content": "<p>... on a more related note, does this have its place in mathlib?</p>",
        "id": 159227476,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924735
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">class</span> <span class=\"n\">is_division_ring</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">exists_inv</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 159227477,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550924738
    },
    {
        "content": "<p>This seems a bit easier to deal with. This is what division rings should have been</p>",
        "id": 159227538,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924856
    },
    {
        "content": "<p>IIUC real is a division ring in this sense</p>",
        "id": 159227582,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550924884
    },
    {
        "content": "<p>so in which file should I put this?</p>",
        "id": 159227668,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550925085
    },
    {
        "content": "<p>(wasting your time) -- I simply do not understand the issues here and with things like this I only attempt to understand the issues when they actually affect my own work (like I never understood why lean treated quotients differently from equivalence classes until it began to matter to me). I'm not sure this will ever matter to me but I can quite believe there is a discussion to be had</p>",
        "id": 159228024,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1550925740
    },
    {
        "content": "<p>Why shouldn't we assume that all our structures have decidable equality? I am sure there are interesting things to be discussed here, but I don't really get them. I think what I would like to see is a concrete example where it creates a problem to assume decidable equality everywhere.</p>",
        "id": 159231432,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1550932212
    },
    {
        "content": "<p>I think the main problem is that this can make definitions noncomputable when they should be computable, e.g. rational arithmetic</p>",
        "id": 159234211,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550937017
    },
    {
        "content": "<p>and this can block some <code>rfl</code> proofs of trivial facts</p>",
        "id": 159234216,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550937036
    },
    {
        "content": "<p>(that's the pragmatic answer; there might also be religious reasons)</p>",
        "id": 159234230,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550937089
    },
    {
        "content": "<p>I am very much interested in pragmatic answers, thanks. And what if general decidable equality is declared with priority 0, and specific computable instances are declared with higher priority, say 50. Would that still block anything?</p>",
        "id": 159235663,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1550939404
    },
    {
        "content": "<p>The problem isn't so much with finding the wrong instance as it is with intermediate constructions being more classical than they could be with more care</p>",
        "id": 159235774,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550939542
    },
    {
        "content": "<p>i.e. if you use that int is a ring then you are depending on the axiom of choice, because an intermediate step decided not to use decidable equality when it was available</p>",
        "id": 159235807,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550939605
    },
    {
        "content": "<p>I still don't get why it could be important in proofs, since they are irrelevant anyway. In definitions where one might want to compute, sure. But my question is even more pragmatic: if one removed everything about <code>linear_order</code> in mathlib, using only <code>decidable_linear_order</code> everywhere, would that break something? If one assumed in the very definition of <code>ring</code>, and <code>group</code>, and everything, that equality is decidable, would that break something?</p>",
        "id": 159236995,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1550941335
    },
    {
        "content": "<p>\"Proofs are irrelevant\" -- every Lean user ever</p>",
        "id": 159237225,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550941735
    },
    {
        "content": "<p>Lean 3 users, there is still HoTT Lean</p>",
        "id": 159238902,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1550944492
    },
    {
        "content": "<p>But I would also prefer to add decidability to most things: (additive) semigroups, orders etc.</p>",
        "id": 159238968,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1550944574
    },
    {
        "content": "<blockquote>\n<p>\"Proofs are irrelevant\" -- every Lean user ever</p>\n</blockquote>\n<p>This quote is crazy, and I can't believe I said it myself. Don't tell that to my fellow mathematicians, please.</p>",
        "id": 159239496,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1550945508
    }
]