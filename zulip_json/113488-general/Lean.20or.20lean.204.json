[
    {
        "content": "<p>Is this video using lean or lean 4? <a href=\"https://youtu.be/b59fpAJ8Mfs\">https://youtu.be/b59fpAJ8Mfs</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"b59fpAJ8Mfs\" href=\"https://youtu.be/b59fpAJ8Mfs\"><img src=\"https://uploads.zulipusercontent.net/0481ad10632ca812767bd2459aac4f934b9e7cb8/68747470733a2f2f692e7974696d672e636f6d2f76692f6235396670414a384d66732f64656661756c742e6a7067\"></a></div>",
        "id": 268969855,
        "sender_full_name": "crab",
        "timestamp": 1642874735
    },
    {
        "content": "<p>I dont know if they said anywhere</p>",
        "id": 268969858,
        "sender_full_name": "crab",
        "timestamp": 1642874743
    },
    {
        "content": "<p>It's Lean 3</p>",
        "id": 268969919,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642874793
    },
    {
        "content": "<p>Probably because Lean 4 did not really exist at the time.</p>",
        "id": 268969926,
        "sender_full_name": "Reid Barton",
        "timestamp": 1642874817
    },
    {
        "content": "<p>Mathlib has changed since then and some declarations used on that video have changed as well. Check <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Infinitude.20of.20Primes.20tutorial/near/268716870\">this thread</a> if you're intending to reproduce that proof</p>",
        "id": 268970019,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642874966
    },
    {
        "content": "<p>Mathlib has like every single function i would ever need in my life</p>",
        "id": 268970842,
        "sender_full_name": "crab",
        "timestamp": 1642875976
    },
    {
        "content": "<p>im looking forward to the port</p>",
        "id": 268970845,
        "sender_full_name": "crab",
        "timestamp": 1642875982
    },
    {
        "content": "<p>Would i need to be some sort of mathematician or be really good at math to be doing theorems. I really want to do them, but i dont know how i would implement them in lean. Also, im terrible at proofs and logic</p>",
        "id": 268970867,
        "sender_full_name": "crab",
        "timestamp": 1642876063
    },
    {
        "content": "<p>Being at least okay with proofs and logic is certainly a requirement for doing proofs in Lean as well. Regarding being good with mathematics, sometimes when mathematicians here have a question I can at least somewhat understand what is happening on the Lean level but in the majority of cases I lack the math knowledge to actually help so if you want to contribute to mathlib itself I feel like you need to at least know more mathematics than I do (which is not that much to be fair :P).</p>",
        "id": 268971089,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1642876324
    },
    {
        "content": "<p>I’m probably one of the youngest here. I honestly was curious about lean for general programming, which im gonna use</p>",
        "id": 268971275,
        "sender_full_name": "crab",
        "timestamp": 1642876576
    },
    {
        "content": "<p>but sometimes my general programming is using it to help me with math</p>",
        "id": 268971280,
        "sender_full_name": "crab",
        "timestamp": 1642876591
    },
    {
        "content": "<p>and mathlib is so amazing</p>",
        "id": 268971282,
        "sender_full_name": "crab",
        "timestamp": 1642876596
    },
    {
        "content": "<p>And the theorem proving capabilities are amazing</p>",
        "id": 268971302,
        "sender_full_name": "crab",
        "timestamp": 1642876621
    },
    {
        "content": "<p>So i thought i would at least do some theorem proving in lean</p>",
        "id": 268971313,
        "sender_full_name": "crab",
        "timestamp": 1642876639
    },
    {
        "content": "<p>Or when im older</p>",
        "id": 268971316,
        "sender_full_name": "crab",
        "timestamp": 1642876647
    },
    {
        "content": "<p>I would refrain from stating sentences like</p>\n<blockquote>\n<p>Also, im terrible at proofs and logic</p>\n</blockquote>\n<p>Proofs don't need to be about mathematical objects like functors and algebras. You can have proofs about, say, the consistency of a certain data structure you're building. I will give you an example.</p>\n<p>Suppose you've built a function that inserts a natural number into a list of natural numbers in such a way that you'd expect the characteristic of being \"in ascending order\" not to be lost.</p>\n<p>Then you can have a proof that this function creates an \"ascending list\" off of an empty list, regardless of the number you insert. You can also have a proof that, given an ascending list, your function keeps the resulting list in ascending order too. Then you can have a proof that, starting from an empty list, no matter how many times you apply your function, the resulting list will be in ascending order. At this point you should be pretty confident about the correctness of your function.</p>",
        "id": 268971561,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642876930
    },
    {
        "content": "<p>Notice that if I give you the challenge of building such function, you'd likely be capable of coming up with it pretty quickly. So somehow you do have the intuition for the proofs I mentioned.</p>",
        "id": 268971707,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642877168
    },
    {
        "content": "<p>Hmm</p>",
        "id": 268971885,
        "sender_full_name": "crab",
        "timestamp": 1642877453
    },
    {
        "content": "<p>Some people are talented, no doubt about that. But others (like myself) can be trained/taught. Thank god talented people exist to show us the way <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 268972039,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642877658
    },
    {
        "content": "<p>:) yes thank god to them</p>",
        "id": 268972173,
        "sender_full_name": "crab",
        "timestamp": 1642877885
    },
    {
        "content": "<p>imo, the most talented people are the people who created and are currently creating lean</p>",
        "id": 268972422,
        "sender_full_name": "crab",
        "timestamp": 1642878165
    },
    {
        "content": "<p>i would love to contribute one day tbh</p>",
        "id": 268972426,
        "sender_full_name": "crab",
        "timestamp": 1642878176
    },
    {
        "content": "<p>But I feel like by the time I would contribute to Mathlib, there would be nothing to contribute lol</p>",
        "id": 268972653,
        "sender_full_name": "crab",
        "timestamp": 1642878528
    },
    {
        "content": "<p>or someone would have already been at me to it</p>",
        "id": 268972661,
        "sender_full_name": "crab",
        "timestamp": 1642878546
    }
]