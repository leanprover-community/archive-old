[
    {
        "content": "<p>Sorry, basic question:</p>\n<p>If I have <code>(w : set M) (f : w.finite)</code>, how am I supposed to refer to the cardinality of this set? </p>\n<p>I wish it were possible (e.g. by making <code>set.finite</code> a class) to just provide a <code>fintype</code> instance for the coercion to type, and write <code>fintype.card w</code>.</p>",
        "id": 240567406,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1622184573
    },
    {
        "content": "<p>seems like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.finite.fintype\">docs#set.finite.fintype</a> is a thing, but for the same reason as what you said it's not an instance</p>",
        "id": 240567881,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622185109
    },
    {
        "content": "<p>there's also <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.finite.to_finset\">docs#set.finite.to_finset</a>, and I'd really hope that those two cardinalities are defeq</p>",
        "id": 240567929,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622185183
    },
    {
        "content": "<p>Making <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.finite\">docs#set.finite</a> a class would be somewhat pointless, as then it would basically just be <code>fintype s</code></p>",
        "id": 240568034,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622185255
    },
    {
        "content": "<p><code>fincard</code>!</p>",
        "id": 240568134,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1622185344
    },
    {
        "content": "<p>No, because <code>fintype</code> has data (so, diamonds), while <code>finite</code> doesn't.</p>",
        "id": 240568135,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1622185345
    },
    {
        "content": "<p>If we didn't make <code>fincard</code> yet, its definition should be <code>finsum w 1</code></p>",
        "id": 240568149,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1622185380
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113488-general/topic/cardinality.20of.20a.20finite.20set.3F/near/240567929\">said</a>:</p>\n<blockquote>\n<p>there's also <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.finite.to_finset\">docs#set.finite.to_finset</a>, and I'd really hope that those two cardinalities are defeq</p>\n</blockquote>\n<p>they don't seem to be</p>",
        "id": 240568193,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622185442
    },
    {
        "content": "<p><a href=\"https://github.com/ImperialCollegeLondon/group-theory-game/blob/152ec4a92ad67b6174a3d240c63fa56a6df6017e/src/finsum/basic.lean#L290\">https://github.com/ImperialCollegeLondon/group-theory-game/blob/152ec4a92ad67b6174a3d240c63fa56a6df6017e/src/finsum/basic.lean#L290</a></p>",
        "id": 240568248,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1622185478
    },
    {
        "content": "<p>Oh darn, it's for finite types :-(</p>",
        "id": 240568313,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1622185548
    },
    {
        "content": "<p>Is there a lemma about <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cardinal.to_nat\">docs#cardinal.to_nat</a> and set.finite?</p>",
        "id": 240569103,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622186238
    },
    {
        "content": "<p>I guess you can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cardinal.lt_omega_iff_finite\">docs#cardinal.lt_omega_iff_finite</a> with something like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cardinal.cast_to_nat_of_lt_omega\">docs#cardinal.cast_to_nat_of_lt_omega</a></p>",
        "id": 240569413,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622186479
    },
    {
        "content": "<p>Aaron Anderson made a nat.card, which is fincard</p>",
        "id": 240601076,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1622207240
    },
    {
        "content": "<p>You can use that or set.finite.to_finset.card</p>",
        "id": 240601215,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1622207286
    }
]