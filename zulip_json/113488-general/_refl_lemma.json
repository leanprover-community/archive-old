[
    {
        "content": "<p>How does <code>_refl_lemma</code> work?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">inductive</span> <span class=\"n\">X</span>\n<span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">X</span>\n\n<span class=\"n\">def</span> <span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">true</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">R_refl</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"n\">t</span> <span class=\"n\">t</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">t</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">t</span><span class=\"o\">,</span>\n  <span class=\"n\">trivial</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">R_refl&#39;</span> <span class=\"o\">:</span> <span class=\"n\">reflexive</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"n\">R_refl</span>\n\n<span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">refl_lemma</span><span class=\"o\">]</span> <span class=\"n\">X</span><span class=\"bp\">.</span><span class=\"n\">R_refl&#39;</span> <span class=\"n\">X</span><span class=\"bp\">.</span><span class=\"n\">R_refl</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"n\">t</span> <span class=\"n\">t</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">refl</span><span class=\"o\">,</span> <span class=\"c1\">-- fails</span>\n<span class=\"kn\">end</span>\n\n\n<span class=\"kn\">end</span> <span class=\"n\">X</span>\n</pre></div>\n\n\n<p>I'm trying to make <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mo>≤</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a\\leq a</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span></span></span></span> provable by <code>refl</code> in level 5-1 of the natural number game, and my incantation does not cut it, as has been pointed out to me.</p>",
        "id": 179539597,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572534138
    },
    {
        "content": "<p><code>_refl_lemma</code> is only for lemmas whose proof is <code>rfl</code>. <code>dsimp</code> uses it</p>",
        "id": 179539873,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1572534280
    },
    {
        "content": "<p>Kevin, you're looking for <code>@[refl]</code></p>",
        "id": 179540037,
        "sender_full_name": "Reid Barton",
        "timestamp": 1572534374
    }
]