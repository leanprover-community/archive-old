[
    {
        "content": "<p>Is there anyone familiar with <a href=\"https://github.com/leanprover-community/doc-gen/\">https://github.com/leanprover-community/doc-gen/</a> and CI that would like to make sure every matlib docs build generates a publicly available file giving the url (relative to <a href=\"https://leanprover-community.github.io/mathlib_docs/\">https://leanprover-community.github.io/mathlib_docs/</a>) corresponding to each declaration fully qualified name? That would be very helpful, in particular for the sphere eversion project. Any file format would do, this is really a list of pairs. One pair per line separated by a space would be enough.</p>",
        "id": 199937314,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591393263
    },
    {
        "content": "<p>That sounds pretty doable. If no one beats me to it, I'll try to do it this weekend.</p>",
        "id": 199937504,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591393434
    },
    {
        "content": "<p>Amazing, thanks.</p>",
        "id": 199937648,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591393529
    },
    {
        "content": "<p>I think the scripts may already be generating such a JSON file, but it's not published to the website.</p>",
        "id": 199937660,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591393548
    },
    {
        "content": "<p>Yes the lean file generates some json.</p>",
        "id": 199937736,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591393589
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/doc-gen/blob/master/print_docs.py#L701\">https://github.com/leanprover-community/doc-gen/blob/master/print_docs.py#L701</a></p>",
        "id": 199937758,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591393611
    },
    {
        "content": "<p>which probably consumes the output of <a href=\"https://github.com/leanprover-community/doc-gen/blob/master/gen_docs#L40\">https://github.com/leanprover-community/doc-gen/blob/master/gen_docs#L40</a></p>",
        "id": 199937802,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591393649
    },
    {
        "content": "<p>On a second look, that JSON still needs to be processed. It contains the Lean filenames, but not the final HTML filenames + anchor links.</p>",
        "id": 199938066,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591393825
    },
    {
        "content": "<p>This is easy enough to do. The catch is: it should also include the type of the declaration. This is slightly trickier just because of how auxiliary things are handled in the docs right now. If you have a top level declaration, the arguments are stored in a list, with names and binder types. This is so we can print them left of the colon. For structure fields, inductive constructors, etc, we don't print them as top level decls but as part of the corresponding main decl. Their type info isn't stored with the same level of granularity, I think it's just a string. So either this needs to be refactored or we have a non-uniform export.</p>",
        "id": 199969108,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591441225
    },
    {
        "content": "<p>This can get done soon enough. The type export is needed for the Freek 100 page. But that part of it is a little more than trivial.</p>",
        "id": 199969200,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591441324
    },
    {
        "content": "<p>In the meantime, if you're in a hurry, the location info you need can be scraped from the raw html at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/manifold\">https://leanprover-community.github.io/mathlib_docs/find/manifold</a> . The redirect link gives you the url you want.</p>",
        "id": 199969241,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591441427
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/doc-gen/pull/28\">https://github.com/leanprover-community/doc-gen/pull/28</a></p>",
        "id": 199973178,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591447075
    },
    {
        "content": "<p>I guess I missed the conversation this week, but I really hate the blue links in the docs :(</p>",
        "id": 199973243,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591447151
    },
    {
        "content": "<p>Thanks Rob! I think the blue links was a compromise to make you happy. My opinion is there should be no decoration at all.</p>",
        "id": 199973632,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591447705
    },
    {
        "content": "<p>The blue is not meant to be permanent, just better than the underlines from before. Please feel free to submit a PR!</p>",
        "id": 199973874,
        "sender_full_name": "Reid Barton",
        "timestamp": 1591448110
    },
    {
        "content": "<p>What about making it a slightly lighter grey than the surrounding non-linked text?</p>",
        "id": 199975009,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591450092
    },
    {
        "content": "<p>It's a hint that the links are different, without being intrusive</p>",
        "id": 199975018,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591450113
    },
    {
        "content": "<p>Sounds good to me. Note that the arguments of a theorem that come before the colon are already a slightly lighter color than the rest--so slight that I didn't notice it until I started looking at how to change the underlines.</p>",
        "id": 199975225,
        "sender_full_name": "Reid Barton",
        "timestamp": 1591450446
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 199975341,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1591450671
    },
    {
        "content": "<p>Did your cat jump on your keyboard?</p>",
        "id": 199975382,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591450684
    },
    {
        "content": "<p>my laptop fell on my keyboard... sorry</p>",
        "id": 199975409,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1591450775
    },
    {
        "content": "<p>I hope your laptop and your keyboard are ok...</p>",
        "id": 199975420,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591450792
    },
    {
        "content": "<p>they are!</p>",
        "id": 199975422,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1591450801
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/A9u9PtSUqw55FEfqQ1z7aOS2/image.png\">image.png</a> ? The links get a little lighter (and underlined) when you mouse over.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/A9u9PtSUqw55FEfqQ1z7aOS2/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/A9u9PtSUqw55FEfqQ1z7aOS2/image.png\"></a></div>",
        "id": 199977289,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591453399
    },
    {
        "content": "<p>Now in <code>nat.cases_succ</code> you can't see (at least I can't) that the <code>\\N</code>s are links but the rest is not.</p>",
        "id": 199977366,
        "sender_full_name": "Reid Barton",
        "timestamp": 1591453489
    },
    {
        "content": "<p>I think getting rid of the separate color for arguments before the colon would be fine.</p>",
        "id": 199977379,
        "sender_full_name": "Reid Barton",
        "timestamp": 1591453526
    },
    {
        "content": "<p>How about we underline everything that is not a link? [/jk]</p>",
        "id": 199977434,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591453580
    },
    {
        "content": "<p>Oh, I see what you mean there.</p>",
        "id": 199977442,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591453610
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/-VLbMKUeqYz2OYow5FSgBHfm/image.png\">image.png</a> ?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/-VLbMKUeqYz2OYow5FSgBHfm/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/-VLbMKUeqYz2OYow5FSgBHfm/image.png\"></a></div>",
        "id": 199977460,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591453661
    },
    {
        "content": "<p>Should all the arguments be bold?</p>",
        "id": 199977521,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591453724
    },
    {
        "content": "<p>Or only <code>lemma/theorem/def the_name</code></p>",
        "id": 199977524,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591453737
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/Cvass13gx9m3788vT9h7d-Wn/image.png\">image.png</a> ?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Cvass13gx9m3788vT9h7d-Wn/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/Cvass13gx9m3788vT9h7d-Wn/image.png\"></a></div>",
        "id": 199977612,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591453891
    },
    {
        "content": "<p>I think I like that.</p>",
        "id": 199977687,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591453982
    },
    {
        "content": "<p>These colors are too subtle for me to see clearly, and I don't think my eyesight is below average</p>",
        "id": 199978755,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1591455473
    },
    {
        "content": "<p>what was wrong with the blue?</p>",
        "id": 199978810,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1591455506
    },
    {
        "content": "<p>some more saturation would be good to distinguish it from the various shades of grey in the text itself (especially with things like blackboard bold which have their own effective color)</p>",
        "id": 199978910,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1591455623
    },
    {
        "content": "<p>oh wait, is it literally gray? No wonder it looks desaturated</p>",
        "id": 199979036,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1591455801
    },
    {
        "content": "<p>The blue was really glaring, since a lot of decls were almost completely blue. I think it's much easier on the eyes with a more subtle color for the links. Yes, it's literally gray, hopefully just enough to slightly distinguish it from the surrounding black. If you mouse over it changes more.</p>",
        "id": 199982813,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591460968
    },
    {
        "content": "<p>It's live now btw.</p>",
        "id": 199982817,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591460975
    },
    {
        "content": "<p>The docs export is nice, but it would even nicer if there could be a version containing only what I asked for. Here I'm downloading a 37Mo file and then do</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">&#39;test&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">test</span><span class=\"p\">:</span>\n     <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n         <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">k</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"n\">v</span><span class=\"p\">[</span><span class=\"s1\">&#39;docs_link&#39;</span><span class=\"p\">][</span><span class=\"mi\">52</span><span class=\"p\">:]</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n\n\n<p>to get down to a 3.5Mo that zip then compresses to 705Ko.</p>",
        "id": 199986598,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591466875
    },
    {
        "content": "<p>I mean, I can zip it if the size is a problem, but it seems unnecessary to generate a bunch of custom maps when they're all subsets of this big one.</p>",
        "id": 199987012,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591467533
    },
    {
        "content": "<p>The download size is the issue.</p>",
        "id": 199987309,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591467997
    },
    {
        "content": "<p>What does it cost to generate the basic info? You're not even keeping old versions, right?</p>",
        "id": 199987316,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591468022
    },
    {
        "content": "<p>Just future proofing mostly. What if you decide in the future that you want links to GH source too? It's less effort to strip info from the big database now than to add it to the small one later.</p>",
        "id": 199988225,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591469608
    },
    {
        "content": "<p>Links to the GH source can also be reconstructed from what I extract above.</p>",
        "id": 199988284,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591469698
    },
    {
        "content": "<p>Can they? You need line numbers and Lean and mathlib versions (to make sure you direct to the right commits), no?</p>",
        "id": 199988358,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591469823
    },
    {
        "content": "<p>And this is running in CI, right? Does the extra 10 second download matter?</p>",
        "id": 199988364,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591469864
    },
    {
        "content": "<p>Indeed we don't get line number, only the file.</p>",
        "id": 199988502,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591470052
    },
    {
        "content": "<p>Right now there is no CI, but I should work on this.</p>",
        "id": 199988509,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591470067
    },
    {
        "content": "<p>It's now uploading <code>export_db.json.gz</code> which is ~4mb.</p>",
        "id": 200022227,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591533072
    }
]