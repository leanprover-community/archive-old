[
    {
        "content": "<p>I'm a bit disappointed that the new set notation doesn't seem to be defeq to <code>set.image</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">set</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"err\">∈</span> <span class=\"n\">f</span> <span class=\"err\">&#39;&#39;</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"n\">mem_image_of_mem</span> <span class=\"n\">f</span> <span class=\"n\">h</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"err\">∈</span> <span class=\"o\">{(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"n\">mem_image_of_mem</span> <span class=\"n\">f</span> <span class=\"n\">h</span> <span class=\"c1\">-- doesn&#39;t work</span>\n</code></pre></div>\n\n\n<p>Is this something that could be fixed? Or should we duplicate the whole <code>set.image</code> API?</p>",
        "id": 207399817,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597839486
    },
    {
        "content": "<p>Maybe it's time to redefine <code>image</code>?</p>",
        "id": 207400279,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597839891
    },
    {
        "content": "<p>I think you should just live with the difference. The new notation also gives something different when you use more binders, i.e. <code>{(f x y) | x y ∈ s}</code> doesn't express anything that can be defined in terms of <code>image</code> or the 1D notation, so if we try to make a library around the notation version our work would never be done</p>",
        "id": 207445365,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597862335
    },
    {
        "content": "<p>We could have a tactic (a simp proc - gasp!) to rewrite the new notation into an appropriate application of <code>image</code></p>",
        "id": 207445624,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597862452
    },
    {
        "content": "<p><code>{(f x y) | x y ∈ s}</code> is very similar to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.image2\">docs#set.image2</a></p>",
        "id": 207488871,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1597899547
    },
    {
        "content": "<p>BTW, Lean doesn't use new notation for pretty-printing.</p>",
        "id": 207488895,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1597899591
    }
]