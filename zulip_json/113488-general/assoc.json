[
    {
        "content": "<p>Is there a good reason why <code>add_assoc</code> is <code>a + b + c = a + (b + c)</code> and not <code>a + (b + c) = a + b + c</code>? It makes expressions very hard to read after <code>simp [add_assoc]</code></p>",
        "id": 200121878,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1591633186
    },
    {
        "content": "<p>I asked this once and my impression was that <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> seemed to have some kind of argument as to why this was sensible</p>",
        "id": 200133762,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591639107
    },
    {
        "content": "<p>Does <code>simp</code> work as well with left associated lists as it does right associated lists? At the very least <code>simp only [add_assoc, add_right_comm, add_comm]</code> needs to be able to prove all AC goals</p>",
        "id": 200181472,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1591677021
    },
    {
        "content": "<p>I don't see any reason why it shouldn't work with right-associative lists.<br>\nSome proofs using <code>by simp [add_assoc, add_left_comm, add_comm, neg_add_cancel_left]</code> would likely break if switched to <code>left</code> though because with <code>right</code> the summands are shuffled around, and <code>neg_add_cancel_left</code> has more chance of applying.</p>",
        "id": 200194939,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1591691541
    },
    {
        "content": "<p>There's a <code>simp</code> loop if you go the other way round. To get around this the simplify would have to start putting the longest expressions first after <code>simp [add_comm]</code> instead of the shortest.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mi\">0</span><span class=\"bp\">.</span> <span class=\"o\">[</span><span class=\"n\">simplify</span><span class=\"bp\">.</span><span class=\"n\">rewrite</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm</span><span class=\"o\">]:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">==&gt;</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">)</span>\n<span class=\"mi\">0</span><span class=\"bp\">.</span> <span class=\"o\">[</span><span class=\"n\">simplify</span><span class=\"bp\">.</span><span class=\"n\">rewrite</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_assoc</span><span class=\"o\">]:</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">==&gt;</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"n\">b</span>\n<span class=\"mi\">0</span><span class=\"bp\">.</span> <span class=\"o\">[</span><span class=\"n\">simplify</span><span class=\"bp\">.</span><span class=\"n\">rewrite</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_right_comm</span><span class=\"o\">]:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"bp\">==&gt;</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"n\">c</span>\n</code></pre></div>",
        "id": 200551430,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1591885601
    }
]