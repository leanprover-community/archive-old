[
    {
        "content": "<p>Hi all,  I was wondering if anyone knows if anyone has worked on implementing the metis theorem prover in Lean similar to how it was implemented in Isabelle. Any info helps, thanks!</p>",
        "id": 242262628,
        "sender_full_name": "A. Stone Olguin",
        "timestamp": 1623355434
    },
    {
        "content": "<p>Some time back I wrote a superposition in Lean, which fills a similar niche as metis. <a href=\"https://github.com/leanprover/super\">https://github.com/leanprover/super</a><br>\nLean 3 was quite slow though, making this tool less useful than it could be.  Lean 4 is out now, so at some point I am going to revisit super and see if I can make it faster this time.</p>",
        "id": 242263755,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1623355899
    },
    {
        "content": "<p>On a related note, is there any ongoing projects at a Sledgehammer for Lean4?</p>",
        "id": 242472633,
        "sender_full_name": "Max",
        "timestamp": 1623532152
    },
    {
        "content": "<p>There are a lot of people who are at least thinking really seriously about whether this is the right question to ask.</p>",
        "id": 242473135,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623532755
    },
    {
        "content": "<p>see <a href=\"https://matryoshka-project.github.io/\">https://matryoshka-project.github.io/</a> in particular</p>",
        "id": 242473145,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623532793
    },
    {
        "content": "<p>Isnt Lean-GPTF basically developing into a sledgehammer?</p>",
        "id": 242487069,
        "sender_full_name": "Brandon Brown",
        "timestamp": 1623554659
    },
    {
        "content": "<blockquote>\n<p>Brandon Brown: Isnt Lean-GPTF basically developing into a sledgehammer?</p>\n</blockquote>\n<p>In the sense that both offer general purpose automation, yes, but the technology behind the scenes is very different. GPTF relies on neural networks, whereas sledgehammer calls first-order automated theorem provers, such as Vampire or E.</p>",
        "id": 242495047,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1623567301
    },
    {
        "content": "<p>Nice, gonna read through those sources! Thanks :)</p>",
        "id": 242509677,
        "sender_full_name": "Max",
        "timestamp": 1623589880
    }
]