[
    {
        "content": "<p>Here are my notes on setting Lean homework in CoCalc:</p>\n<p><a href=\"https://github.com/kbuzzard/xena/blob/master/CoCalc/CoCalc_notes.md\" target=\"_blank\" title=\"https://github.com/kbuzzard/xena/blob/master/CoCalc/CoCalc_notes.md\">https://github.com/kbuzzard/xena/blob/master/CoCalc/CoCalc_notes.md</a></p>\n<p>That link will be updated as people tell me better ways of getting round a kludgy hack with paths. Rather than go into details here, I will just hope that someone tells me a better way of doing it and then I'll update the link above. [The current issue is that when a student clicks on a <code>.lean</code> file CoCalc looks for <code>leanpkg.path</code> in their home directory, which my homework cannot access. <span class=\"user-mention\" data-user-id=\"116034\">@William Stein</span> any ideas on how to make this less hacky?]</p>\n<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span> I've got it working, and am optimistic that it will be working even better soon. Jeremy, you might well be happy with CoCalc's installation of mathlib which is at <code>path /ext/lean/lean-3.4.1-linux/mathlib/</code>, but I am greedy and want both bleeding edge mathlib and also a library of my own, which is why I had to work harder.</p>",
        "id": 148778475,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1543488143
    },
    {
        "content": "<p>Thanks for the info, Kevin. I'm going to look into using CoCalc for my course in April. Just to check -- are you using the standard or basic course plan? As an instructor, do you have write access to a subdirectory of students' home folders?</p>",
        "id": 148779171,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1543488996
    },
    {
        "content": "<p>I bought 4 months of Standard Medium Course (70 people). I am running an unconventional course in an unconventional way -- I have 250 students, but Lean is just an optional extra, so I did not need 250 people.</p>",
        "id": 148791090,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1543502899
    },
    {
        "content": "<p>So today I used the \"shared project\" functionality of CoCalc and we had multiple people working on one lean file. I thought it would be chaos but it worked fine, and was very funny. What happened was that completely coincidentally I found two groups of people independently trying to define dihedral groups in Lean, and because I'd spent several hours earlier today thinking about CoCalc I suggested that we tried to do it together. This was slightly brave on my part because I had not thought at all about how imports worked for group projects, and initially there was some confusion about which version of mathlib we needed. I hacked together a solution though, and it worked really smoothly. I guess I should add a description of how it all worked to my notes.</p>",
        "id": 148819746,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1543526029
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> do you have any update to <a href=\"https://github.com/kbuzzard/xena/blob/master/CoCalc/CoCalc_notes.md\" target=\"_blank\" title=\"https://github.com/kbuzzard/xena/blob/master/CoCalc/CoCalc_notes.md\">https://github.com/kbuzzard/xena/blob/master/CoCalc/CoCalc_notes.md</a>? Do you think we could easily get CoCalc to upgrade to Lean 3.4.2? I hope I'll be able to start using Lean in CoCalc with my students this week</p>",
        "id": 158081028,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1549932938
    },
    {
        "content": "<p>Oh! I'd forgotten about that. I could ask William. I know he told me that they would only consider upgrading once every 6 months or so, but it has been six months...</p>",
        "id": 158097385,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549955509
    },
    {
        "content": "<p>I've asked nicely.</p>",
        "id": 158098021,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549956492
    },
    {
        "content": "<p>Your CoCalc projects have got an internet connection, right? Can't you just ask William to install <code>elan</code>? Then you'll get the right Lean automatically?</p>",
        "id": 158098144,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1549956703
    },
    {
        "content": "<p>Or maybe if you have <code>elan</code> then it doesn't yet play nicely with their own Lean web editor?</p>",
        "id": 158098148,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1549956722
    },
    {
        "content": "<p>Cocalc sessions are not internet enabled by default</p>",
        "id": 158099798,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549958905
    },
    {
        "content": "<p>And I know from experience (running random old projects on the tube) that if you don't have an internet connection then elan just breaks</p>",
        "id": 158099834,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549958957
    },
    {
        "content": "<p>I know, so it would be nice to have both options. The updated-twice-a-year-lean and the hottest-and-newest-elan-enabled-lean. If you pay for internet, the second option works. Otherwise, fallback to the first option.</p>",
        "id": 158099839,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1549958971
    }
]