[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">polynomial</span> <span class=\"n\">field_theory</span><span class=\"bp\">.</span><span class=\"n\">subfield</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">group_ring_action</span> <span class=\"n\">field_theory</span><span class=\"bp\">.</span><span class=\"n\">minimal_polynomial</span>\n\n<span class=\"kn\">set_option</span> <span class=\"n\">profiler</span> <span class=\"n\">true</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">mul_semiring_action</span> <span class=\"n\">G</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">fixed</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">F</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"bp\">∀</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"err\">•</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">fixed</span><span class=\"bp\">.</span><span class=\"n\">is_subfield</span> <span class=\"o\">:</span> <span class=\"n\">is_subfield</span> <span class=\"o\">(</span><span class=\"n\">fixed</span> <span class=\"n\">G</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">fixed</span><span class=\"bp\">.</span><span class=\"n\">algebra</span> <span class=\"o\">:</span> <span class=\"n\">algebra</span> <span class=\"o\">(</span><span class=\"n\">fixed</span> <span class=\"n\">G</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"n\">F</span> <span class=\"o\">:=</span>\n<span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">of_subring</span> <span class=\"bp\">_</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">F</span><span class=\"o\">)</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">is_integral_fixed</span> <span class=\"o\">:</span> <span class=\"n\">is_integral</span> <span class=\"o\">(</span><span class=\"n\">fixed</span> <span class=\"n\">G</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"bp\">@</span><span class=\"n\">minimal_polynomial</span> <span class=\"o\">(</span><span class=\"n\">fixed</span> <span class=\"n\">G</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">is_integral_fixed</span> <span class=\"n\">G</span> <span class=\"n\">F</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"bp\">@</span><span class=\"n\">minimal_polynomial</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">is_integral_fixed</span> <span class=\"n\">G</span> <span class=\"n\">F</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"c1\">-- very slow</span>\n</code></pre></div>",
        "id": 196038184,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1588403851
    },
    {
        "content": "<p>currently the first argument (the base field) is implicit</p>",
        "id": 196038189,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1588403867
    },
    {
        "content": "<p>but it seems that Lean cannot infer it</p>",
        "id": 196038192,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1588403877
    },
    {
        "content": "<p>I suppose type ascription also solves it:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"o\">(</span><span class=\"n\">minimal_polynomial</span> <span class=\"o\">(</span><span class=\"n\">is_integral_fixed</span> <span class=\"n\">G</span> <span class=\"n\">F</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"o\">(</span><span class=\"n\">fixed</span> <span class=\"n\">G</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"c1\">-- not slow</span>\n</code></pre></div>",
        "id": 196038248,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1588403915
    },
    {
        "content": "<p>I guess that most of the time this will not be slow, right?</p>",
        "id": 196039148,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588405686
    },
    {
        "content": "<p>BTW, why can't it infer <code>fixed G F</code> from <code>is_integral_fixed G F x : is_integral (fixed G F) x</code>?</p>",
        "id": 196040472,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1588407887
    },
    {
        "content": "<p>OTOH, if <code>A</code> is an algebra over two different rings, then <code>minimal_polynomial R x _</code> in pretty-printer output looks better than <code>minimal_polynomial x _</code>.</p>",
        "id": 196040535,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1588408022
    },
    {
        "content": "<p>Yes, that's right. I think that is a good argument for making it explicit.</p>",
        "id": 196040745,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588408335
    }
]