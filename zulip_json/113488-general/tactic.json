[
    {
        "content": "<p>Hello, </p>\n<p>in this post : <a href=\"#narrow/stream/113489-new-members/topic/make.20a.20group/near/191364753\" title=\"#narrow/stream/113489-new-members/topic/make.20a.20group/near/191364753\">here</a> Kevin &amp; Patrick show how to create a tactic. </p>\n<p>The example of the post is : </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">AGL_ring</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">one_a</span><span class=\"o\">,</span> <span class=\"n\">one_b</span><span class=\"o\">,</span> <span class=\"n\">a_comp</span><span class=\"o\">,</span> <span class=\"n\">b_comp</span><span class=\"o\">],</span> <span class=\"n\">ring</span><span class=\"o\">]</span>\n\n<span class=\"n\">run_cmd</span> <span class=\"n\">add_interactive</span> <span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"n\">AGL_ring</span><span class=\"o\">]</span>\n</pre></div>\n\n\n<p>In the same post \" make a group \"  there is also a question of  tag : <code> @ext </code> and <code> @simp </code>  ! </p>\n<p>So my question : is it possible to create a tactic  (my_tactic) and a new tag and add gradually new lemma in my tactic ? </p>\n<p>For example : add a new tag <code>AGL_ring </code> and gradualy add new lemma to my tactic ! </p>\n<p>Thx,</p>",
        "id": 193147825,
        "sender_full_name": "orlando",
        "timestamp": 1586243672
    },
    {
        "content": "<p>In this case you could use the builtin simp set feature.</p>",
        "id": 193150226,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586245305
    },
    {
        "content": "<p>The easiest way to do this would be with a custom simp attribute. <a href=\"https://leanprover-community.github.io/mathlib_docs/commands.html#mk_simp_attribute\" title=\"https://leanprover-community.github.io/mathlib_docs/commands.html#mk_simp_attribute\">https://leanprover-community.github.io/mathlib_docs/commands.html#mk_simp_attribute</a></p>",
        "id": 193150237,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1586245318
    },
    {
        "content": "<p>Oh nice, I was searching for this link and Rob posted it.</p>",
        "id": 193150297,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586245340
    },
    {
        "content": "<p><del>You write <code>run_cmd mk_simp_attribute AGL</code>.</del></p>",
        "id": 193150300,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1586245344
    },
    {
        "content": "<p>Perhaps my question is not clear  <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span>  </p>\n<p>I give my example : </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"kn\">structure</span> <span class=\"n\">R_exp</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">a_0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">a_e</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">R_exp</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">ext</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">ext</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">g1</span> <span class=\"n\">g2</span> <span class=\"o\">:</span> <span class=\"n\">R_exp</span> <span class=\"n\">R</span><span class=\"o\">},</span> <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">→</span>  <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">a_e</span>  <span class=\"bp\">→</span> <span class=\"n\">g1</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">g1</span> <span class=\"n\">g2</span><span class=\"o\">,</span>\n        <span class=\"k\">begin</span>\n            <span class=\"n\">intros</span> <span class=\"n\">h1</span><span class=\"o\">,</span>\n            <span class=\"n\">intros</span> <span class=\"n\">h2</span><span class=\"o\">,</span>\n            <span class=\"n\">cases</span> <span class=\"n\">g1</span><span class=\"o\">,</span>\n            <span class=\"n\">cases</span> <span class=\"n\">g2</span><span class=\"o\">,</span>\n            <span class=\"n\">congr</span> <span class=\"bp\">;</span> <span class=\"n\">try</span> <span class=\"o\">{</span> <span class=\"n\">assumption</span> <span class=\"o\">},</span>   <span class=\"c1\">---</span>\n        <span class=\"kn\">end</span>\n<span class=\"n\">local</span> <span class=\"kn\">notation</span> <span class=\"n\">R</span><span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">R_exp</span> <span class=\"n\">R</span>\n\n<span class=\"n\">def</span> <span class=\"n\">mod_ε</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">has_coe</span> <span class=\"o\">:</span>  <span class=\"n\">has_coe</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">mod_ε</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">⟩</span>  <span class=\"c1\">-- ? bof</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">a ↦ a+ 0 ε</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">of</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">}</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">of_ext_0</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"n\">r</span><span class=\"o\">)</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">of_ext_e</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">coe_of</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">element : ε qui va vérifier :   ε^2 = 0</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span>  <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">),</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)}</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">ε_ext_0</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">ε_ext_e</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">Element : one !</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">one</span>  <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_one</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">one</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">one_ext_0</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">one_ext_e</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">Element !: 0</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">zero</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_zero</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">zero</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">zero_ext_0</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">zero_ext_e</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">Addition :</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">add&#39;</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"bp\">→</span>  <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span>  <span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"o\">,</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_e</span><span class=\"o\">}</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_add</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">add&#39;</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">add_ext_0</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">add_ext_e</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span><span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">We want to show that add&#39; give to R[ε] abelian group structure</span>\n<span class=\"cm\">we print the axiom !</span>\n<span class=\"cm\">-/</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">add_group</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">There is a lot of axiom</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">neg&#39;</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"o\">,</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span><span class=\"o\">}</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_neg</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">neg&#39;</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">neg_ext_0</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">neg_ext_e</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">add_ring</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">neg_ext_0</span><span class=\"o\">,</span> <span class=\"n\">neg_ext_e</span><span class=\"o\">,</span> <span class=\"n\">add_ext_0</span><span class=\"o\">,</span><span class=\"n\">of_ext_0</span><span class=\"o\">,</span><span class=\"n\">of_ext_e</span><span class=\"o\">,</span> <span class=\"n\">add_ext_e</span><span class=\"o\">,</span><span class=\"n\">zero_ext_0</span><span class=\"o\">,</span><span class=\"n\">zero_ext_e</span><span class=\"o\">,</span><span class=\"n\">one_ext_0</span><span class=\"o\">,</span><span class=\"n\">one_ext_e</span><span class=\"o\">],</span> <span class=\"n\">ring</span><span class=\"o\">]</span>\n\n<span class=\"n\">run_cmd</span> <span class=\"n\">add_interactive</span> <span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"n\">add_ring</span><span class=\"o\">]</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">add_assoc&#39;</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"bp\">+</span><span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n<span class=\"n\">ext</span><span class=\"o\">,</span>\n<span class=\"n\">add_ring</span><span class=\"o\">,</span>\n<span class=\"n\">add_ring</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>The problem is : i want next to define multiplication and there is new lemma to add to my tatic !</p>",
        "id": 193150307,
        "sender_full_name": "orlando",
        "timestamp": 1586245350
    },
    {
        "content": "<p>Then you can tag lemmas with <code>@[AGL] lemma foo ...</code></p>",
        "id": 193150314,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1586245360
    },
    {
        "content": "<p>Ah i don't see the answers ! Thx i read !</p>",
        "id": 193150334,
        "sender_full_name": "orlando",
        "timestamp": 1586245383
    },
    {
        "content": "<p>and your tactic can say <code>simp only with AGL</code></p>",
        "id": 193150338,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1586245389
    },
    {
        "content": "<p>He also wanted to tack <code>ring</code> at the end, hence the Kevin-style tactic.</p>",
        "id": 193150405,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586245443
    },
    {
        "content": "<p>Note, I misread my own documentation. You should write <code>mk_simp_attribute AGL \"describe what these rules are here\"</code></p>",
        "id": 193150721,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1586245671
    },
    {
        "content": "<p>Rob : i thinck i understand  i add ring as Patrick mention ! </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"kn\">structure</span> <span class=\"n\">R_exp</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">a_0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">a_e</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">R_exp</span>\n<span class=\"n\">run_cmd</span> <span class=\"n\">mk_simp_attr</span> <span class=\"bp\">`</span><span class=\"n\">AGL</span>\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">AGL_ring</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"k\">with</span> <span class=\"n\">AGL</span><span class=\"o\">,</span> <span class=\"n\">ring</span><span class=\"o\">]</span>\n\n<span class=\"n\">run_cmd</span> <span class=\"n\">add_interactive</span> <span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"n\">AGL_ring</span><span class=\"o\">]</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">ext</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">ext</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">g1</span> <span class=\"n\">g2</span> <span class=\"o\">:</span> <span class=\"n\">R_exp</span> <span class=\"n\">R</span><span class=\"o\">},</span> <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">→</span>  <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">a_e</span>  <span class=\"bp\">→</span> <span class=\"n\">g1</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">g1</span> <span class=\"n\">g2</span><span class=\"o\">,</span>\n        <span class=\"k\">begin</span>\n            <span class=\"n\">intros</span> <span class=\"n\">h1</span><span class=\"o\">,</span>\n            <span class=\"n\">intros</span> <span class=\"n\">h2</span><span class=\"o\">,</span>\n            <span class=\"n\">cases</span> <span class=\"n\">g1</span><span class=\"o\">,</span>\n            <span class=\"n\">cases</span> <span class=\"n\">g2</span><span class=\"o\">,</span>\n            <span class=\"n\">congr</span> <span class=\"bp\">;</span> <span class=\"n\">try</span> <span class=\"o\">{</span> <span class=\"n\">assumption</span> <span class=\"o\">},</span>   <span class=\"c1\">---</span>\n        <span class=\"kn\">end</span>\n<span class=\"n\">local</span> <span class=\"kn\">notation</span> <span class=\"n\">R</span><span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">R_exp</span> <span class=\"n\">R</span>\n\n<span class=\"n\">def</span> <span class=\"n\">mod_ε</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">has_coe</span> <span class=\"o\">:</span>  <span class=\"n\">has_coe</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">mod_ε</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">⟩</span>  <span class=\"c1\">-- ? bof</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">a ↦ a+ 0 ε</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">of</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">}</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">of_ext_0</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"n\">r</span><span class=\"o\">)</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">of_ext_e</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">coe_of</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">element : ε qui va vérifier :   ε^2 = 0</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span>  <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">),</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)}</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">ε_ext_0</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">ε_ext_e</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">Element : one !</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">one</span>  <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_one</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">one</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">one_ext_0</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">one_ext_e</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">Element !: 0</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">zero</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_zero</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">zero</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">zero_ext_0</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">zero_ext_e</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">Addition :</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">add&#39;</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"bp\">→</span>  <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span>  <span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"o\">,</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_e</span><span class=\"o\">}</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_add</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">add&#39;</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">add_ext_0</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">add_ext_e</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span><span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">We want to show that add&#39; give to R[ε] abelian group structure</span>\n<span class=\"cm\">we print the axiom !</span>\n<span class=\"cm\">-/</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">add_group</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">There is a lot of axiom</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">neg&#39;</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"o\">,</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span><span class=\"o\">}</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_neg</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">neg&#39;</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">neg_ext_0</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">AGL</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">neg_ext_e</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n\n<span class=\"kn\">lemma</span> <span class=\"n\">add_assoc&#39;</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"bp\">+</span><span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n<span class=\"n\">ext</span><span class=\"o\">,</span>\n<span class=\"n\">AGL_ring</span><span class=\"o\">,</span>\n<span class=\"n\">AGL_ring</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n\n<span class=\"kn\">instance</span> <span class=\"n\">has_repr</span> <span class=\"o\">[</span><span class=\"n\">has_repr</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">has_repr</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span>  <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"kn\">end</span>\n\n\n<span class=\"kn\">end</span> <span class=\"n\">R_exp</span>\n</pre></div>",
        "id": 193151182,
        "sender_full_name": "orlando",
        "timestamp": 1586246013
    },
    {
        "content": "<p>Looks good! But it's better style if you replace the line</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">run_cmd</span> <span class=\"n\">mk_simp_attr</span> <span class=\"bp\">`</span><span class=\"n\">AGL</span>\n</pre></div>\n\n\n<p>with</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">mk_simp_attribute</span> <span class=\"n\">AGL</span> <span class=\"s2\">&quot;description&quot;</span>\n</pre></div>\n\n\n<p>where you describe what the set of AGL rules are supposed to do.</p>",
        "id": 193151478,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1586246222
    },
    {
        "content": "<p>This isn't very important though. :)</p>",
        "id": 193151526,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1586246251
    },
    {
        "content": "<p>Hum little change ! Thx Rob ! That's very good ! </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">mk_simp_attribute</span> <span class=\"n\">R_exp_</span> <span class=\"s2\">&quot;trivial simplification&quot;</span>\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">R_exp__ring</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">iterate</span> <span class=\"mi\">2</span> <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"k\">with</span> <span class=\"n\">R_exp_</span><span class=\"o\">,</span> <span class=\"n\">ring</span><span class=\"o\">}]</span>\n</pre></div>",
        "id": 193152461,
        "sender_full_name": "orlando",
        "timestamp": 1586246813
    },
    {
        "content": "<p>Another little question : it's possible to simplify all this stuff ! I mean all the axiom result from the same command <code>begin ext, R_exp__ring, end </code>  Is it possible to \" factorise \" all ? </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"kn\">structure</span> <span class=\"n\">R_exp</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">a_0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">a_e</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">R_exp</span>\n<span class=\"n\">mk_simp_attribute</span> <span class=\"n\">R_exp_</span> <span class=\"s2\">&quot;trivial simplification&quot;</span>\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">R_exp__ring</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">iterate</span> <span class=\"mi\">2</span> <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"k\">with</span> <span class=\"n\">R_exp_</span><span class=\"o\">,</span> <span class=\"n\">ring</span><span class=\"o\">}]</span>\n\n<span class=\"n\">run_cmd</span> <span class=\"n\">add_interactive</span> <span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"n\">R_exp__ring</span><span class=\"o\">]</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">ext</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">ext</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">g1</span> <span class=\"n\">g2</span> <span class=\"o\">:</span> <span class=\"n\">R_exp</span> <span class=\"n\">R</span><span class=\"o\">},</span> <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">→</span>  <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">a_e</span>  <span class=\"bp\">→</span> <span class=\"n\">g1</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">g1</span> <span class=\"n\">g2</span><span class=\"o\">,</span>\n        <span class=\"k\">begin</span>\n            <span class=\"n\">intros</span> <span class=\"n\">h1</span><span class=\"o\">,</span>\n            <span class=\"n\">intros</span> <span class=\"n\">h2</span><span class=\"o\">,</span>\n            <span class=\"n\">cases</span> <span class=\"n\">g1</span><span class=\"o\">,</span>\n            <span class=\"n\">cases</span> <span class=\"n\">g2</span><span class=\"o\">,</span>\n            <span class=\"n\">congr</span> <span class=\"bp\">;</span> <span class=\"n\">try</span> <span class=\"o\">{</span> <span class=\"n\">assumption</span> <span class=\"o\">},</span>   <span class=\"c1\">---</span>\n        <span class=\"kn\">end</span>\n<span class=\"n\">local</span> <span class=\"kn\">notation</span> <span class=\"n\">R</span><span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">R_exp</span> <span class=\"n\">R</span>\n\n<span class=\"n\">def</span> <span class=\"n\">mod_ε</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">has_coe</span> <span class=\"o\">:</span>  <span class=\"n\">has_coe</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">mod_ε</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">⟩</span>  <span class=\"c1\">-- ? bof</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">a ↦ a+ 0 ε</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">of</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">}</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">of_ext_0</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"n\">r</span><span class=\"o\">)</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">of_ext_e</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">coe_of</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">element : ε qui va vérifier :   ε^2 = 0</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span>  <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">),</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)}</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">ε_ext_0</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">ε_ext_e</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">Element !: 0</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">zero</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_zero</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">zero</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">zero_ext_0</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">zero_ext_e</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">Addition :</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">add&#39;</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"bp\">→</span>  <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span>  <span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"o\">,</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_e</span><span class=\"o\">}</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_add</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">add&#39;</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">add_ext_0</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">add_ext_e</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span><span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">We want to show that add&#39; give to R[ε] abelian group structure</span>\n<span class=\"cm\">we print the axiom !</span>\n<span class=\"cm\">-/</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">add_comm_group</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">There is a lot of axiom</span>\n<span class=\"cm\">add_comm_group.add : Π {α : Type u} [c : add_comm_group α], α → α → α</span>\n<span class=\"cm\">add_comm_group.add_assoc : ∀ {α : Type u} [c : add_comm_group α] (a b c_1 : α), a + b + c_1 = a + (b + c_1)</span>\n<span class=\"cm\">add_comm_group.zero : Π (α : Type u) [c : add_comm_group α], α</span>\n<span class=\"cm\">add_comm_group.zero_add : ∀ {α : Type u} [c : add_comm_group α] (a : α), 0 + a = a</span>\n<span class=\"cm\">add_comm_group.add_zero : ∀ {α : Type u} [c : add_comm_group α] (a : α), a + 0 = a</span>\n<span class=\"cm\">add_comm_group.neg : Π {α : Type u} [c : add_comm_group α], α → α</span>\n<span class=\"cm\">add_comm_group.add_left_neg : ∀ {α : Type u} [c : add_comm_group α] (a : α), -a + a = 0</span>\n<span class=\"cm\">add_comm_group.add_comm : ∀ {α : Type u} [c : add_comm_group α] (a b : α), a + b = b + a</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">neg&#39;</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"o\">,</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span><span class=\"o\">}</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_neg</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">neg&#39;</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">neg_ext_0</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">neg_ext_e</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n\n<span class=\"kn\">lemma</span> <span class=\"n\">add_assoc&#39;</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"bp\">+</span><span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">R_exp__ring</span><span class=\"o\">,</span> <span class=\"kn\">end</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">zero_add&#39;</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">R_exp__ring</span><span class=\"o\">,</span> <span class=\"kn\">end</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">add_zero&#39;</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">+</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">R_exp__ring</span><span class=\"o\">,</span> <span class=\"kn\">end</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">add_left_neg&#39;</span>  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span>  <span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"o\">,</span><span class=\"n\">R_exp__ring</span><span class=\"o\">,</span> <span class=\"kn\">end</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">add_comm&#39;</span>   <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span>  <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"o\">:=</span><span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"o\">,</span><span class=\"n\">R_exp__ring</span><span class=\"o\">,</span><span class=\"kn\">end</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">comm_ring</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">structure comm_ring : Type u → Type u</span>\n<span class=\"cm\">fields:</span>\n<span class=\"cm\">comm_ring.add : Π {α : Type u} [c : comm_ring α], α → α → α</span>\n<span class=\"cm\">comm_ring.add_assoc : ∀ {α : Type u} [c : comm_ring α] (a b c_1 : α), a + b + c_1 = a + (b + c_1)</span>\n<span class=\"cm\">comm_ring.zero : Π (α : Type u) [c : comm_ring α], α</span>\n<span class=\"cm\">comm_ring.zero_add : ∀ {α : Type u} [c : comm_ring α] (a : α), 0 + a = a</span>\n<span class=\"cm\">comm_ring.add_zero : ∀ {α : Type u} [c : comm_ring α] (a : α), a + 0 = a</span>\n<span class=\"cm\">comm_ring.neg : Π {α : Type u} [c : comm_ring α], α → α</span>\n<span class=\"cm\">comm_ring.add_left_neg : ∀ {α : Type u} [c : comm_ring α] (a : α), -a + a = 0</span>\n<span class=\"cm\">comm_ring.add_comm : ∀ {α : Type u} [c : comm_ring α] (a b : α), a + b = b + a</span>\n<span class=\"cm\">comm_ring.mul : Π {α : Type u} [c : comm_ring α], α → α → α</span>\n<span class=\"cm\">comm_ring.mul_assoc : ∀ {α : Type u} [c : comm_ring α] (a b c_1 : α), a * b * c_1 = a * (b * c_1)</span>\n<span class=\"cm\">comm_ring.one : Π (α : Type u) [c : comm_ring α], α</span>\n<span class=\"cm\">comm_ring.one_mul : ∀ {α : Type u} [c : comm_ring α] (a : α), 1 * a = a</span>\n<span class=\"cm\">comm_ring.mul_one : ∀ {α : Type u} [c : comm_ring α] (a : α), a * 1 = a</span>\n<span class=\"cm\">comm_ring.left_distrib : ∀ {α : Type u} [c : comm_ring α] (a b c_1 : α), a * (b + c_1) = a * b + a * c_1</span>\n<span class=\"cm\">comm_ring.right_distrib : ∀ {α : Type u} [c : comm_ring α] (a b c_1 : α), (a + b) * c_1 = a * c_1 + b * c_1</span>\n<span class=\"cm\">comm_ring.mul_comm : ∀ {α : Type u} [c : comm_ring α] (a b : α), a * b = b * a</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">mul&#39;</span>  <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"bp\">→</span>  <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span><span class=\"k\">begin</span> <span class=\"n\">exact</span>\n<span class=\"o\">{</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"o\">,</span> <span class=\"n\">a_e</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_e</span><span class=\"bp\">+</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_0</span><span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_mul</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">mul&#39;</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">mul_ext_0</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">mul_ext_e</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span><span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_e</span><span class=\"bp\">+</span> <span class=\"n\">a</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">mul_assoc&#39;</span> <span class=\"o\">(</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">R_exp__ring</span><span class=\"o\">,</span> <span class=\"kn\">end</span>\n\n<span class=\"n\">def</span> <span class=\"n\">one</span>  <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_one</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">]</span> <span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">one</span> <span class=\"n\">R</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">one_ext_0</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">R_exp_</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">one_ext_e</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">one_mul&#39;</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">R_exp__ring</span><span class=\"o\">,</span><span class=\"kn\">end</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">mul_one&#39;</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">R_exp__ring</span><span class=\"o\">,</span><span class=\"kn\">end</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">left_distrib&#39;</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span>  <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span>  <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">R_exp__ring</span><span class=\"o\">,</span><span class=\"kn\">end</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">right_distrib&#39;</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span>  <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">R_exp__ring</span><span class=\"o\">,</span><span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">mul_comm&#39;</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:</span>  <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">R_exp__ring</span><span class=\"o\">,</span> <span class=\"kn\">end</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">comm_ring</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"n\">add</span>                  <span class=\"o\">:=</span> <span class=\"n\">add&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">add_assoc</span>            <span class=\"o\">:=</span> <span class=\"n\">add_assoc&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">zero</span>                 <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n    <span class=\"n\">zero_add</span>             <span class=\"o\">:=</span> <span class=\"n\">zero_add&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">add_zero</span>             <span class=\"o\">:=</span> <span class=\"n\">add_zero&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">neg</span>                  <span class=\"o\">:=</span> <span class=\"n\">neg&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">add_left_neg</span>         <span class=\"o\">:=</span> <span class=\"n\">add_left_neg&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">add_comm</span>             <span class=\"o\">:=</span> <span class=\"n\">add_comm&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">mul</span>                  <span class=\"o\">:=</span> <span class=\"n\">mul&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">mul_assoc</span>            <span class=\"o\">:=</span> <span class=\"n\">mul_assoc&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">one</span>                  <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"n\">one_mul</span>              <span class=\"o\">:=</span> <span class=\"n\">one_mul&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">mul_one</span>              <span class=\"o\">:=</span> <span class=\"n\">mul_one&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">left_distrib</span>         <span class=\"o\">:=</span> <span class=\"n\">left_distrib&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">right_distrib</span>        <span class=\"o\">:=</span> <span class=\"n\">right_distrib&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"n\">mul_comm</span>             <span class=\"o\">:=</span> <span class=\"n\">mul_comm&#39;</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n    <span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">has_repr</span> <span class=\"o\">[</span><span class=\"n\">has_repr</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">has_repr</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span>  <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"kn\">end</span>\n\n\n<span class=\"kn\">end</span> <span class=\"n\">R_exp</span>\n</pre></div>",
        "id": 193156358,
        "sender_full_name": "orlando",
        "timestamp": 1586249203
    },
    {
        "content": "<p>These proofs look fine, but probably in mathlib you would not see it done like this; they would make the <code>comm_ring</code> structure by something like <code>refine_struct (something); by ext; R_exp__ring</code> and it would try this proof on all of the fields at once</p>",
        "id": 193156632,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586249389
    },
    {
        "content": "<p>i mean i would write </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">comm_ring</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">R_exp__ring</span><span class=\"o\">,</span>\n</pre></div>\n\n\n<p>Or something like that, without writing all the lemma just defining <code> mul  add one zero </code>   <span aria-label=\"yum\" class=\"emoji emoji-1f60b\" role=\"img\" title=\"yum\">:yum:</span></p>",
        "id": 193156754,
        "sender_full_name": "orlando",
        "timestamp": 1586249427
    },
    {
        "content": "<p>For example see</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"n\">to_complex</span><span class=\"bp\">.</span><span class=\"n\">is_ring_hom</span> <span class=\"o\">:</span> <span class=\"n\">is_ring_hom</span> <span class=\"n\">to_complex</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">refine_struct</span> <span class=\"o\">{</span><span class=\"bp\">..</span><span class=\"o\">}</span><span class=\"bp\">;</span> <span class=\"n\">intros</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">complex</span><span class=\"bp\">.</span><span class=\"n\">ext</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">sub_eq_add_neg</span><span class=\"o\">,</span> <span class=\"n\">to_complex</span><span class=\"o\">]</span>\n</pre></div>\n\n\n<p>in <code>data.zsqrtd.gaussian_int</code></p>",
        "id": 193156821,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586249469
    },
    {
        "content": "<p>ok Kevin !!! thx i take a look  <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 193156865,
        "sender_full_name": "orlando",
        "timestamp": 1586249496
    },
    {
        "content": "<p>It is the same as your situation: they need to check 10 things, but it's always the same proof -- \"ext, then automation\"</p>",
        "id": 193156867,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586249497
    },
    {
        "content": "<p>so they do not even name the lemmas, they use this semicolon <code>;</code> trick</p>",
        "id": 193156927,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586249523
    },
    {
        "content": "<p>Why don't you use a quotient ring?</p>",
        "id": 193159083,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586250905
    },
    {
        "content": "<p>hum good question Patrick, because i don't understand how to deal  with 'mathlib quotient ring',  i try to use but  i think i loose all the control ! Probably i miss-understand something <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 193159445,
        "sender_full_name": "orlando",
        "timestamp": 1586251152
    },
    {
        "content": "<p>In the long run I think you'll be much better with mathlib quotient rings.</p>",
        "id": 193159481,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586251183
    },
    {
        "content": "<p>I think it's a good exercise to do it like this, but of course quotient rings would be a much quicker way. But quotients are quite intimidating for beginners.</p>",
        "id": 193159800,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586251329
    },
    {
        "content": "<p>Also quotient ring won't give you a nice structure with two fields.</p>",
        "id": 193159883,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586251382
    },
    {
        "content": "<p>I explain my problem with mathlib tool  : For example the next step with my <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">[</mo><mi>ε</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\"> R[ \\varepsilon ]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">ε</span><span class=\"mclose\">]</span></span></span></span> is to create a functor <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>R</mi><mi>i</mi><mi>n</mi><mi>g</mi><mo>→</mo><mi>C</mi><mi>o</mi><mi>m</mi><mi>m</mi><mi>R</mi><mi>i</mi><mi>n</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\"> CommRing  \\to CommRing </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\">m</span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span></span></span></span> sendind <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo>↦</mo><mi>R</mi><mo stretchy=\"false\">[</mo><mi>ε</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\"> R \\mapsto R[\\varepsilon]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">ε</span><span class=\"mclose\">]</span></span></span></span>, with my construction if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ψ</mi><mo>:</mo><mi>R</mi><mo>→</mo><msup><mi>R</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\"> \\psi : R \\to R' </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>, the action on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a,b)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span></span></span></span>  is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>ψ</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mi>ψ</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">( \\psi(a),\\psi(b))</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ψ</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span> . If i use, quotient, the problem is that i spent hours dealing with 'mathlib construction'  quotient map etc , tensor product etc ! </p>\n<p>Is that i mean by : i loose control.  But i thinck i don't use mathlib in a good maner for the moment <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 193160450,
        "sender_full_name": "orlando",
        "timestamp": 1586251737
    },
    {
        "content": "<p>If you don't define it as a quotient, then you will probably at some stage have to prove that given <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi>R</mi><mo stretchy=\"false\">[</mo><mi>X</mi><mo stretchy=\"false\">]</mo><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">f:R[X]\\to A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><msup><mi>X</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">f(X^2)=0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>, there is an induced map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mo stretchy=\"false\">[</mo><mi>ϵ</mi><mo stretchy=\"false\">]</mo><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">R[\\epsilon]\\to A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mopen\">[</span><span class=\"mord mathdefault\">ϵ</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span>.</p>",
        "id": 193161295,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586252238
    },
    {
        "content": "<p>With the quotient definition you get this for free. But I agree, your approach has the advantage of being more concrete.</p>",
        "id": 193161336,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586252272
    },
    {
        "content": "<p>Yes Kevin ! The good stuff is to use the concret description and the mathlib construction via quotient ! Also, it's a good exercice  for beginner,  as you tell <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 193163492,
        "sender_full_name": "orlando",
        "timestamp": 1586253559
    },
    {
        "content": "<p>I add i little thing : </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"n\">has_repr</span> <span class=\"o\">[</span><span class=\"n\">has_repr</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">has_repr</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">ε</span><span class=\"o\">])</span>  <span class=\"o\">:=</span> <span class=\"bp\">⟨λ</span> <span class=\"n\">x</span><span class=\"o\">,</span>   <span class=\"n\">repr</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">a_0</span> <span class=\"bp\">++</span> <span class=\"s2\">&quot;+&quot;</span> <span class=\"bp\">++</span> <span class=\"n\">repr</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">a_e</span> <span class=\"bp\">++</span> <span class=\"s2\">&quot;ε&quot;</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">#</span><span class=\"kn\">eval</span> <span class=\"o\">(</span><span class=\"mi\">8</span><span class=\"bp\">+</span><span class=\"n\">ε</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span><span class=\"err\">^</span><span class=\"mi\">7</span> <span class=\"c1\">-- result  : 2097152+1835008ε</span>\n</pre></div>\n\n\n<p>Is It possible to do the calculus with 'mathlib quotient'   ?</p>",
        "id": 193164691,
        "sender_full_name": "orlando",
        "timestamp": 1586254250
    },
    {
        "content": "<p>no</p>",
        "id": 193164892,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586254355
    },
    {
        "content": "<p>Mario would say don't use quotient</p>",
        "id": 193164938,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586254377
    },
    {
        "content": "<p>Kevin would say use pari/gp for computations not Lean</p>",
        "id": 193164971,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586254393
    },
    {
        "content": "<p>yes !</p>",
        "id": 193164993,
        "sender_full_name": "orlando",
        "timestamp": 1586254407
    }
]