[
    {
        "content": "<p>Should <code>monotone</code> theorems always have <code>antitone</code> versions as well?</p>\n<p>It seems wrong to write everything twice, but there are quite a few definitions in <code>monotone.lean</code> <a href=\"https://github.com/leanprover-community/mathlib/blob/ccbb84878130b1ebb3b5dc4f7283fdd8fc9ec0a7/src/order/monotone.lean#L613-L619\">that have both versions</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">monotone_nat_of_le_succ</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">monotone</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n<span class=\"n\">nat.rel_of_forall_rel_succ_of_le</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)</span> <span class=\"n\">hf</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">antitone_nat_of_succ_le</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">antitone</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n<span class=\"bp\">@</span><span class=\"n\">monotone_nat_of_le_succ</span> <span class=\"o\">(</span><span class=\"n\">order_dual</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">hf</span>\n</code></pre></div>\n<p>Specifically, I need an antitone version of <a href=\"https://github.com/leanprover-community/mathlib/blob/ccbb84878130b1ebb3b5dc4f7283fdd8fc9ec0a7/src/topology/algebra/ordered/monotone_convergence.lean#L240\">this lemma</a>. I could write one with<code>@monotone.ge_of_tendsto (order_dual α)</code>. Also, <a href=\"https://github.com/leanprover-community/mathlib/compare/ecstatic/antitone-bound-of-tendsto\">inference seems to work</a>, so I could write it without the <code>@</code> and the underscores.</p>",
        "id": 270103945,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1643662869
    },
    {
        "content": "<p>I was also <a href=\"https://github.com/leanprover-community/mathlib/pull/11689#discussion_r795880890\">asked</a> to add some version of the following, which would be weird without a monotone version:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">antitone.covariant</span>\n  <span class=\"o\">[</span><span class=\"n\">covariant_class</span> <span class=\"n\">α</span> <span class=\"n\">α</span> <span class=\"n\">μ</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)]</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">antitone</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a₀</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">antitone</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"bp\">$</span> <span class=\"n\">μ</span> <span class=\"n\">a₀</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 270104842,
        "sender_full_name": "Dylan MacKenzie (ecstatic-morse)",
        "timestamp": 1643663243
    },
    {
        "content": "<p>Yes please. We are looking into ways to avoid manual duplication, but nothing ready yet. So manual duplication it is.</p>",
        "id": 270105177,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643663371
    }
]