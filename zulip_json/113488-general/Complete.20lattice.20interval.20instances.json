[
    {
        "content": "<p>As <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> has identified, there is a diamond issue adding <code>complete_lattice</code> instances for the intervals <code>Iic</code> and <code>Ici</code> : see  <a href=\"https://github.com/leanprover-community/mathlib/pull/15135\">#15135</a> . The problem is that the <code>Sup/Inf</code> fields for these instances disagree with <code>subset_has_Sup</code>, which is in turn needed to provide  conditionally complete order instances on <code>ord_connected</code> subsets via <code>ord_connected_subset_conditionally_complete_linear_order</code>.  The function <code>subset_has_Sup</code> needs to use <code>default</code> in places where no Sup exists, whereas for <code>Ici</code>, it will always exist; this is why they're different. </p>\n<p>See <a href=\"https://leanprover-community.github.io/mathlib_docs/order/complete_lattice_intervals.html#subset_has_Sup\">https://leanprover-community.github.io/mathlib_docs/order/complete_lattice_intervals.html#subset_has_Sup</a></p>\n<p>I don't fully understand the design issues involved here, but not having global <code>complete_lattice</code> instances on <code>Iic</code> and <code>Ici</code> is quite a pain (I am using them in an upcoming sequence of PRs to add matroids to mathlib). </p>\n<p>Is there is a good resolution to this?</p>",
        "id": 288660522,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1657109661
    },
    {
        "content": "<p>Can't you just use the <code>if</code>-based definition of <code>Sup</code> in both places?</p>",
        "id": 288668717,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657113657
    },
    {
        "content": "<p>Yes, one branch of the if is unreachable in the case you describe, but that doesn't matter</p>",
        "id": 288668753,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657113681
    },
    {
        "content": "<p>Although I now notice that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/subset_has_Sup\">docs#subset_has_Sup</a> is not an instance; so is there actually a diamond here?</p>",
        "id": 288680178,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657118302
    },
    {
        "content": "<p>I'm likely out of my depth here, so I'll leave Yury to comment. One disadvantage of defining <code>Sup</code> on an interval with <code>dite</code> is that the instance becomes noncomputable, whereas <code>Sup (S : set (Ici a)) := a âŠ” Sup (coe '' S)</code> is computable.</p>",
        "id": 288685832,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1657120624
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> , does the fact that the conditional objects aren't global instances mitigate this problem?</p>",
        "id": 288847284,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1657218708
    },
    {
        "content": "<p>The instance on an <code>ord_connected</code> set is a global instance.</p>",
        "id": 288887872,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1657245436
    },
    {
        "content": "<p>See <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ord_connected_subset_conditionally_complete_linear_order\">docs#ord_connected_subset_conditionally_complete_linear_order</a></p>",
        "id": 288887933,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1657245484
    }
]