[
    {
        "content": "<p>Is it possible to make a linter or code formatter which enforces (some of) mathlib's style, for instance adding braces so that there's only one goal at a time in a completed proof?</p>",
        "id": 200823596,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1592152593
    },
    {
        "content": "<p>I could add it to nng and force mathematicians to code properly :-)</p>",
        "id": 200823677,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592152764
    },
    {
        "content": "<p>Actually what I want is kind of the opposite of that - when I'm writing lean hastily I somehow avoid all indentation and braces, so it'd be great if there was some magical button I could press which auto-formats the code</p>",
        "id": 200823755,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1592152887
    },
    {
        "content": "<p>Such things exist in other domains, see e.g. <a href=\"https://black.readthedocs.io/en/stable/\">black</a>, an auto-formatter for python. I don't know how hard they are to write.</p>",
        "id": 200824351,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592153890
    },
    {
        "content": "<p>See also <a href=\"https://github.com/tweag/ormolu\">ormolu</a> for Haskell</p>",
        "id": 200824384,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1592153952
    },
    {
        "content": "<p>I remember some discussions about this (but not where they took place, sadly). My takeaway was that this would become much easier in Lean 4.</p>",
        "id": 200824558,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1592154173
    },
    {
        "content": "<p>It's very hard to write something that's aware of both Lean 3 semantics (e.g. number of goals at a given line) and input syntax. I think the closest things that exist right now are format_lean (or am I mixing names here?) that query a Lean server for information at each line. It would take a lot of work to turn this into what you're after, but I think it's the only approach, Lean 3 metaprograms can't really understand input syntax. As Bryan says, I understand the Lean 4 picture will be different.</p>",
        "id": 200824858,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592154630
    }
]