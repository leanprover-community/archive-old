[
    {
        "content": "<p>Suppose I want to build a slick machine to move back and forth between <code>mv_polynomial unit</code> and <code>polynomial</code>. Does it make sense to start with</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">rel_unit</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">unit</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">unit</span><span class=\"bp\">.</span><span class=\"n\">star</span> <span class=\"bp\">=</span> <span class=\"n\">x</span>\n</pre></div>\n\n\n<p>More generally, what goes into building a \"transfer API\"?</p>",
        "id": 133275790,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536003460
    },
    {
        "content": "<p>I thought about this a bit, and I think the function should take an element of an indexing type as an argument. I think this makes it easier if I want to multiply two univariate polynomials together to get a MV poly in two variables.</p>",
        "id": 133277005,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536005421
    },
    {
        "content": "<p>I think the transfer API just has all the lemmas about preserving evaluation, degree, multiplication etc.</p>",
        "id": 133277077,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536005569
    }
]