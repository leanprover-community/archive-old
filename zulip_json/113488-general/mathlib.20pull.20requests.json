[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> and <span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span>: There are a lot of pending <a href=\"https://github.com/leanprover/mathlib/pulls\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pulls\">PRs</a>. What would you like to do with them?</p>\n<p>I understand you were busy in Hanoi for a while. And perhaps you're still busy with other things. This is just a friendly ping to see what your status is.</p>\n<p>Every now and then, something comes up that I want to contribute to mathlib, but then I see the list of pending PRs, and I get a bit discouraged, thinking that it might not be worth it. Some pretty simple PRs have not seen any response to indicate what will happen to them.</p>\n<p>That said, if you need help managing contributions, I can volunteer some time. I can do commenting, labeling, and merging of simple PRs, while leaving the more interesting ones to you. (Of course, it's <code>git</code>, so things can always be changed later.)</p>",
        "id": 128290679,
        "sender_full_name": "Sean Leather",
        "timestamp": 1529392215
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Thanks for all your recent PR merges and comments. Just so you know, if you'd like more help with mathlib maintenance, my offer stands.</p>",
        "id": 128301673,
        "sender_full_name": "Sean Leather",
        "timestamp": 1529410913
    },
    {
        "content": "<p>I did all the easy stuff. I'm still a bit busy with Tom Hales' conference this week, but some organization or prioritization of existing PRs would be a thing third parties could do to make it easier. Unfortunately in many of the remaining PRs there is something I see a problem with but I haven't found the time to write about it, so for those you may have to just wait or guess (or ask).</p>",
        "id": 128301799,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1529411090
    },
    {
        "content": "<p>Anything I should be doing for <code>refine_struct</code>?</p>",
        "id": 128301866,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1529411178
    },
    {
        "content": "<p>I'd rather not merge conflicts from github, could you do that? Otherwise it's okay (the conversation and travis failure made it look more complicated than it is, but I see it's ready for merge now.)</p>",
        "id": 128301943,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1529411358
    },
    {
        "content": "<p>Cool, sure thing</p>",
        "id": 128301948,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1529411384
    },
    {
        "content": "<blockquote>\n<p>some organization or prioritization of existing PRs would be a thing third parties could do to make it easier.</p>\n</blockquote>\n<p>Yeah, that's basically what I was thinking: triage with labels, assign issues and reviewers, ping the various parties every now and then, and update statuses. If it's an easy/obvious PR, merge it.</p>\n<blockquote>\n<p>Unfortunately in many of the remaining PRs there is something I see a problem with but I haven't found the time to write about it, so for those you may have to just wait or guess (or ask).</p>\n</blockquote>\n<p>Yep.</p>",
        "id": 128302469,
        "sender_full_name": "Sean Leather",
        "timestamp": 1529412169
    },
    {
        "content": "<p>The build time for mathlib is truly incredible. I wonder if we could minimize the rebuild size on every change</p>",
        "id": 128307611,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1529418671
    },
    {
        "content": "<p>This is where a lint tool would be very useful: we could find dead code and spurious dependencies</p>",
        "id": 128307764,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1529418862
    },
    {
        "content": "<p>The <code>refine_struct</code> in mathlib seems to be misbehaving. Here's my MWE:</p>\n<div class=\"codehilite\"><pre><span></span>import tactic.interactive\n\nvariable (α : Type)\ndef foo : semigroup α :=\nbegin\n  refine_struct ({ .. } : semigroup α),\nend\n</pre></div>",
        "id": 128347867,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1529476069
    },
    {
        "content": "<p>Which just says <code>failed</code> on the <code>refine_struct</code>. It seems that it's failing at the very first line <code>str ← e.get_structure_instance_info,</code> of <code>refine_struct</code>.</p>",
        "id": 128347907,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1529476107
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span>)</p>",
        "id": 128347909,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1529476115
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Would you mind creating a <a href=\"https://github.com/leanprover/mathlib/issues/new\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/issues/new\">new GitHub issue</a> with this information? It will make tracking the problem and its solution easier.</p>",
        "id": 128347969,
        "sender_full_name": "Sean Leather",
        "timestamp": 1529476216
    },
    {
        "content": "<p>Can do! I thought that since it was such a basic thing I might be doing something stupid, and should ask here first. :-)</p>",
        "id": 128347984,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1529476283
    },
    {
        "content": "<blockquote>\n<p>Can do! I thought that since it was such a basic thing I might be doing something stupid, and should ask here first. :-)</p>\n</blockquote>\n<p>Even if it is something stupid, others might run into it, too. And it's still easier to search GitHub than Zulip. <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>",
        "id": 128348032,
        "sender_full_name": "Sean Leather",
        "timestamp": 1529476368
    },
    {
        "content": "<p>(That's my personal experience, anyway. Others may have different thoughts.)</p>",
        "id": 128348046,
        "sender_full_name": "Sean Leather",
        "timestamp": 1529476414
    },
    {
        "content": "<p>Of course, you can always check here first and put it there later, I suppose. But I think that creates extra work for you.</p>",
        "id": 128348091,
        "sender_full_name": "Sean Leather",
        "timestamp": 1529476476
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/mathlib/issues/160\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/issues/160\">https://github.com/leanprover/mathlib/issues/160</a></p>",
        "id": 128348372,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1529477045
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 128358661,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1529495336
    }
]