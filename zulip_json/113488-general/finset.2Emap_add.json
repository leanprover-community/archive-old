[
    {
        "content": "<p>In the <code>list.Ico</code>, <code>multiset.Ico</code> and <code>finset.Ico</code> namespaces, we have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">map_add</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Ico</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">((</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Ico</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>This looks a bit distasteful to me, because if I've understood the map correctly, it's <code>\\lam x, k + x</code> and the conclusion involves <code>x + k</code>. I find myself in a situation where I need <code>k + x</code> so I am proposing changing these names to <code>map_add_left</code> and <code>map_add_right</code>. I have several questions:</p>\n<p>1) What is the idiomatic way to write <code>\\lam x, x + k</code>?<br>\n2) Are the names good, and if so, which is <code>map_add_left</code> and which is <code>map_add_right</code>?<br>\n3) There is also</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">map_sub</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">Ico</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">Ico</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>I think there's space for a <code>map_sub_left</code> and <code>map_sub_right</code> (under appropriate inequality hypotheses). Are these appropriate names (in some order) for <code>\\lam x, x - k</code> and <code>\\lam x, k - x</code>? And the latter maps <code>Ico a b</code> to <code>Ico (k + 1 - b) (k + 1 - a)</code>, or is it <code>k  - b + 1</code> or <code>1 + k - b</code> or ... ? Are any of these choices clearly \"better\" than any other?</p>",
        "id": 217241622,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605775647
    },
    {
        "content": "<p>Probably not idiomatic, but I think <code>\\lam x, x + k</code> is <code>(+ k)</code> (without the parens of <code>((+) k)</code>)</p>",
        "id": 217242041,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1605776014
    },
    {
        "content": "<p>I assume the left / right thing can be resolved by looking at <code>add_left_cancel</code> style lemma namse?</p>",
        "id": 217242144,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1605776078
    },
    {
        "content": "<p>1) I would vote for <code>λ x, x + k</code> just because it's clearest on which side the <code>+</code> sign stands.<br>\n2) I agree that we should have <code>map_add_left</code> and <code>map_add_right</code> with the correct direction of addition. Isn't the rule based on which argument is fixed, so <code>λ x, x + k</code> is called <code>add_right</code>?<br>\n3) If you can write them easily, it would be good to have. But at the moment I'm refactoring the whole of <code>finset.range</code>/<code>list.range</code>/<code>list.Ico</code>, so don't invest too much time. Again, I believe the order of <code>left</code> and <code>right</code> should be swapped.</p>",
        "id": 217242163,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1605776093
    },
    {
        "content": "<p>Version of <code>map_add</code> after the refactor: <a href=\"https://github.com/leanprover-community/mathlib/blob/fin_range/src/data/list/enum.lean#L515\">https://github.com/leanprover-community/mathlib/blob/fin_range/src/data/list/enum.lean#L515</a></p>",
        "id": 217242266,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1605776163
    },
    {
        "content": "<p>With instantiation for ℕ here: <a href=\"https://github.com/leanprover-community/mathlib/blob/fin_range/src/data/list/enum.lean#L605\">https://github.com/leanprover-community/mathlib/blob/fin_range/src/data/list/enum.lean#L605</a></p>",
        "id": 217242336,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1605776201
    },
    {
        "content": "<p>OK maybe I'll hold back on this. I was responding to <a href=\"https://github.com/leanprover-community/mathlib/pull/4956#discussion_r520234899\">this comment</a> on a recent PR of mine which is somehow getting bigger and bigger and should probably be closed and broken up.</p>",
        "id": 217243886,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605777184
    }
]