[
    {
        "content": "<p>I managed to write a mini <code>norm_num</code> using computational reflection in only a few basic tactics:</p>\n<div class=\"codehilite\"><pre><span></span>import data.num.lemmas\nexample : 12402536340 * 2356324602 = 29224401505141036680 :=\nbegin\n  rw ‚Üê num.of_nat_inj,\n  simp [num.bit0_of_bit0, num.bit1_of_bit1],\n  refl\nend\n</pre></div>",
        "id": 128590733,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1529917832
    },
    {
        "content": "<p>(The original theorem is on <code>nat</code>, so a straight <code>rfl</code> proof times out)</p>",
        "id": 128590737,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1529917855
    },
    {
        "content": "<p>That is very cool :-)</p>",
        "id": 128590887,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1529918111
    },
    {
        "content": "<p>Cool! Now we can start porting Sage to Lean!</p>",
        "id": 128594312,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1529924214
    },
    {
        "content": "<p>Do some serious algebraic number theory.</p>",
        "id": 128594317,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1529924227
    }
]