[
    {
        "content": "<p>Should this be in scope for <code>linarith</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.nnreal</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">nnreal</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hba</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hcb</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hd0</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">d</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hdc</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">linarith</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 213030108,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602505030
    },
    {
        "content": "<p>Changing <code>nnreal</code> to <code>real</code> makes <code>linarith</code> solve it</p>",
        "id": 213030361,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602505201
    },
    {
        "content": "<p><code>linarith</code> only looks at typeclasses, right?</p>",
        "id": 213035833,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602508375
    },
    {
        "content": "<p>There is a <code>linear_ordered_semiring</code> instance for <code>nnreal</code>. But maybe <code>linarith</code> doesn't like the <code>semi</code>?</p>",
        "id": 213036025,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602508459
    },
    {
        "content": "<p><code>linarith</code> wants to subtract.</p>",
        "id": 213040423,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1602510571
    }
]