[
    {
        "content": "<p>maybe you'll find this useful:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">max</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">foldr</span> <span class=\"n\">max</span> <span class=\"o\">(</span><span class=\"n\">inhabited</span><span class=\"bp\">.</span><span class=\"n\">default</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"n\">L</span>\n\n<span class=\"n\">def</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">min</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">foldr</span> <span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">inhabited</span><span class=\"bp\">.</span><span class=\"n\">default</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"n\">L</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">le_max</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">L</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">L</span><span class=\"bp\">.</span><span class=\"n\">max</span> <span class=\"o\">:=</span>\n<span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">rec_on</span> <span class=\"n\">L</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"bp\">.</span><span class=\"n\">elim</span><span class=\"o\">)</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">hd</span> <span class=\"n\">tl</span> <span class=\"n\">ih</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n<span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">cases_on</span> <span class=\"n\">hx</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">hd</span><span class=\"o\">,</span> <span class=\"n\">H</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">▸</span> <span class=\"n\">le_max_left</span> <span class=\"n\">hd</span> <span class=\"n\">tl</span><span class=\"bp\">.</span><span class=\"n\">max</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">tl</span><span class=\"o\">,</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">ih</span> <span class=\"n\">x</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">le_max_right</span> <span class=\"n\">hd</span> <span class=\"n\">tl</span><span class=\"bp\">.</span><span class=\"n\">max</span><span class=\"o\">))</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">min_le</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">L</span><span class=\"o\">,</span> <span class=\"n\">L</span><span class=\"bp\">.</span><span class=\"n\">min</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">rec_on</span> <span class=\"n\">L</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"bp\">.</span><span class=\"n\">elim</span><span class=\"o\">)</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">hd</span> <span class=\"n\">tl</span> <span class=\"n\">ih</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n<span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">cases_on</span> <span class=\"n\">hx</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">hd</span><span class=\"o\">,</span> <span class=\"n\">H</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">▸</span> <span class=\"n\">min_le_left</span> <span class=\"n\">hd</span> <span class=\"n\">tl</span><span class=\"bp\">.</span><span class=\"n\">min</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">tl</span><span class=\"o\">,</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">min_le_right</span> <span class=\"n\">hd</span> <span class=\"n\">tl</span><span class=\"bp\">.</span><span class=\"n\">min</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih</span> <span class=\"n\">x</span> <span class=\"n\">H</span><span class=\"o\">))</span>\n</pre></div>",
        "id": 125938032,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1525169388
    },
    {
        "content": "<p>I'll take look. First it's lunch time...</p>",
        "id": 125938092,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1525169481
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span>  That doesn't take the max, it takes the max of the list and the default value. You won't be able to prove <code>L.max \\in L</code> You should define it as default for nil, and then list.foldr max L.head otherwise.</p>",
        "id": 126002895,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1525280775
    },
    {
        "content": "<p>aha</p>",
        "id": 126003001,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1525280892
    }
]