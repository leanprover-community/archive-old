[
    {
        "content": "<p>Is there some way to easily turn a repo of Lean files into a hyperlinked bunch of HTML files? If we want to showcase some code to mathematicians, we should take into account that they have never heard of git or github before. Also, on github you can't click on an imported file, or a token, to go somewhere else. And we can't expect people who want to read some source files to install VScode before they are able to really use it.</p>",
        "id": 133246061,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535960710
    },
    {
        "content": "<p>So basically, I would like a read-only VScode that can easily be hosted somewhere. Just a bunch of static files.</p>",
        "id": 133246070,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535960745
    },
    {
        "content": "<p>I mean, for other languages (like Java) the corresponding website is grepcode</p>",
        "id": 133246129,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1535960805
    },
    {
        "content": "<p>so I don't think things like this is very common</p>",
        "id": 133246132,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1535960814
    },
    {
        "content": "<p>I think what <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> has in mind is closer to Javadoc, Haddock, or <code>agda --html</code>.</p>",
        "id": 133246315,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535961080
    },
    {
        "content": "<p>this has been a dream for some time</p>",
        "id": 133246374,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961153
    },
    {
        "content": "<p>My <code>#explode</code> command was actually working toward that goal</p>",
        "id": 133246379,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961172
    },
    {
        "content": "<p>So, why is it easy in VScode?</p>",
        "id": 133246384,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961192
    },
    {
        "content": "<p>Currently it's a bit tough to get good data on what exists in a file</p>",
        "id": 133246386,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961197
    },
    {
        "content": "<p>If VScode can figure out where to take me, if I <code>Ctrl-click</code> on something, can't it export a bunch of html files?</p>",
        "id": 133246428,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961250
    },
    {
        "content": "<p>Actually what you are describing sounds a bit different - the plan has been to show some abbreviated or expandable or indexed form of the file to make browsing easier</p>",
        "id": 133246443,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961323
    },
    {
        "content": "<p>Ok, I guess that is harder.</p>",
        "id": 133246446,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961339
    },
    {
        "content": "<p>I just figure that if Kevin publishes a paper, then he want to include a URL with a static view of his files that is easy to navigate.</p>",
        "id": 133246487,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961368
    },
    {
        "content": "<p>GitHub isn't good enough.</p>",
        "id": 133246490,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961378
    },
    {
        "content": "<p>It should be possible to dump source code into plain HTML files and then modify or hook into <code>vscode-lean</code> (I think) to use its symbol table to turn identifiers into links.</p>",
        "id": 133246495,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535961402
    },
    {
        "content": "<p>I think Mizar has a pretty similar display to what you are suggesting, Coq too to some degree</p>",
        "id": 133246496,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961406
    },
    {
        "content": "<p>See, for example: <a href=\"http://www.mizar.org/version/current/html/polynom5.html#T74\" target=\"_blank\" title=\"http://www.mizar.org/version/current/html/polynom5.html#T74\">http://www.mizar.org/version/current/html/polynom5.html#T74</a></p>",
        "id": 133246513,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961473
    },
    {
        "content": "<p><a href=\"https://agda.github.io/agda-stdlib/README.html\" target=\"_blank\" title=\"https://agda.github.io/agda-stdlib/README.html\">https://agda.github.io/agda-stdlib/README.html</a><br>\nJust to be clear, <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>, does this look like what you want?</p>",
        "id": 133246515,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535961477
    },
    {
        "content": "<p>Yeah, or that</p>",
        "id": 133246555,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535961484
    },
    {
        "content": "<p>Right, those are both good examples.</p>",
        "id": 133246571,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961535
    },
    {
        "content": "<p>Althought the Agda one only has a bunch of comments and imports...</p>",
        "id": 133246579,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961550
    },
    {
        "content": "<p>You can click on the imports to get to more interesting files.</p>",
        "id": 133246587,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535961572
    },
    {
        "content": "<p>Like this: <a href=\"https://agda.github.io/agda-stdlib/Category.Monad.html\" target=\"_blank\" title=\"https://agda.github.io/agda-stdlib/Category.Monad.html\">https://agda.github.io/agda-stdlib/Category.Monad.html</a></p>",
        "id": 133246588,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535961581
    },
    {
        "content": "<p>I have very little fu in this regard. But it seems to me that it shouldn't be too hard to hack such a thing together, right?</p>",
        "id": 133246652,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961647
    },
    {
        "content": "<p>I really hope there is a more effective way to locate tokens than asking lean at each position what token is at that location (and where is it defined)</p>",
        "id": 133246677,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961715
    },
    {
        "content": "<p>otherwise this could take a really long time</p>",
        "id": 133246719,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961728
    },
    {
        "content": "<p>Not longer then <code>lean --make</code>, right?</p>",
        "id": 133246735,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961756
    },
    {
        "content": "<p>And this is something that you'll run only occasionaly.</p>",
        "id": 133246736,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961766
    },
    {
        "content": "<p>So I really don't care about runtime.</p>",
        "id": 133246744,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961774
    },
    {
        "content": "<p>yes longer than lean --make</p>",
        "id": 133246745,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961776
    },
    {
        "content": "<p>Ooh, hmmm</p>",
        "id": 133246750,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961787
    },
    {
        "content": "<p>I'm talking about asking lean at each character what is there, basically the software version of clicking everywhere to see what happens</p>",
        "id": 133246755,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961815
    },
    {
        "content": "<p>But Lean stores this data already, right? We saw it sitting somewhere in some <code>expr</code>.</p>",
        "id": 133246804,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961854
    },
    {
        "content": "<p>How does VScode figure this out? Only at runtime, when I click somewhere?</p>",
        "id": 133246815,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961879
    },
    {
        "content": "<p>Through the lean server API</p>",
        "id": 133246818,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961888
    },
    {
        "content": "<p>you click, VSCode sends lean a message asking \"what is here\", lean responds</p>",
        "id": 133246830,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961910
    },
    {
        "content": "<p>I see. And that is going to be slow.</p>",
        "id": 133246833,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535961920
    },
    {
        "content": "<p>if that is the only message you can send, then we are in trouble, but maybe there is a saner data structure being sent</p>",
        "id": 133246841,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961942
    },
    {
        "content": "<p>Hm, isn't there a lexer/parser/AST-generator for Lean that we can hook into?</p>",
        "id": 133246843,
        "sender_full_name": "Soham Chowdhury",
        "timestamp": 1535961951
    },
    {
        "content": "<p>see lean 4</p>",
        "id": 133246844,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961957
    },
    {
        "content": "<p>this is why many of the leandoc plans are waiting on lean 4</p>",
        "id": 133246890,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535961993
    },
    {
        "content": "<p>/me proposes <span class=\"emoji emoji-1f340\" title=\"four leaf clover\">:four_leaf_clover:</span> as the default emoji for marking dreams and wishes that will be trivially realizable when Lean 4 emerges <span class=\"emoji emoji-1f61c\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 133246918,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535962037
    },
    {
        "content": "<p>maybe we should make a list</p>",
        "id": 133246924,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535962082
    },
    {
        "content": "<p>Voila: <a href=\"#narrow/search/.22lean.204.22\" title=\"#narrow/search/.22lean.204.22\">https://leanprover.zulipchat.com/#narrow/search/.22lean.204.22</a></p>",
        "id": 133246973,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535962132
    },
    {
        "content": "<p>Apropos Lean 4: Leo gave a new talk at Galois inc. You find the slides on <a href=\"http://leanprover.github.io\" target=\"_blank\" title=\"http://leanprover.github.io\">leanprover.github.io</a>: <a href=\"http://leanprover.github.io/talks/LeanAtGalois.pdf\" target=\"_blank\" title=\"http://leanprover.github.io/talks/LeanAtGalois.pdf\">http://leanprover.github.io/talks/LeanAtGalois.pdf</a> Some new information about Lean4!</p>",
        "id": 133248804,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1535964856
    },
    {
        "content": "<p>local constants are now called free variables :)</p>",
        "id": 133248820,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1535964889
    },
    {
        "content": "<p>My <a href=\"https://github.com/leanprover-community/leancrawler\" target=\"_blank\" title=\"https://github.com/leanprover-community/leancrawler\">Lean crawler</a> does get access to some information. With more work we could maybe get something like what you want.</p>",
        "id": 133248821,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535964890
    },
    {
        "content": "<p>That would be really nice, Patrick!</p>",
        "id": 133249002,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535965125
    },
    {
        "content": "<p>I'm not sure it's worth the effort to fight Lean 3 here, but everyone should feel free to try</p>",
        "id": 133249148,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535965280
    },
    {
        "content": "<p>I have a mostly working \"API documentation\" generator although I'm not sure yet that it is more useful than just reading the source files.</p>",
        "id": 133273389,
        "sender_full_name": "Reid Barton",
        "timestamp": 1535998852
    },
    {
        "content": "<p>I was hoping to look into how the editor integration works to see whether I could also produce hyperlinked source but I haven't gotten that far yet.</p>",
        "id": 133273545,
        "sender_full_name": "Reid Barton",
        "timestamp": 1535999103
    },
    {
        "content": "<p>Cool! Please let us know if you get hyperlinking working!</p>",
        "id": 133273678,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535999307
    },
    {
        "content": "<p>I do think probably the clearest use of such a tool is to advertise what we are doing in a way which is somewhat more transparent to people who are not already Lean users.</p>",
        "id": 133274063,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536000125
    },
    {
        "content": "<p>Right, and it might not be unthinkable that demand for such usage will increase in the next months. When the word spreads about the perfectoid project, and when more senior mathematicians hear about the teaching that Kevin and Patrick are doing.</p>",
        "id": 133274134,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536000261
    }
]