[
    {
        "content": "<p>I'm not sure if this is an instance of the type class diamond problem, but what do you do when you have <code>has_add</code> from <code>add_comm_monoid</code> and need <code>has_add</code> from <code>distrib</code>, given that you have <code>[add_comm_monoid α] [distrib α]</code>? One solution seems to be to use <code>[semiring α]</code> instead, but that seems to me to add unnecessary constraints, since <code>semiring</code> also extends <code>monoid</code> and <code>mul_zero_class</code>. I'm guessing there is another, better way.</p>",
        "id": 133430283,
        "sender_full_name": "Sean Leather",
        "timestamp": 1536224746
    },
    {
        "content": "<p>I think you should avoid being in that situation in the first place.<br>\nBut I don't understand why there isn't a problem with <code>semiring</code> itself.<br>\nMaybe old_structure_cmd magic?</p>",
        "id": 133430751,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536225407
    },
    {
        "content": "<p>Maybe you could make your own \"old structure\" containing just what you need?</p>",
        "id": 133430881,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536225594
    },
    {
        "content": "<p>Sorry, Reid, I haven't used <code>old_structure_cmd</code> and don't know what you mean.</p>",
        "id": 133430955,
        "sender_full_name": "Sean Leather",
        "timestamp": 1536225656
    }
]