[
    {
        "content": "<p>What is the best file for</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">cast_nat_abs</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">n.nat_abs</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">abs</span> <span class=\"n\">n</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">int.nat_abs_of_nat</span><span class=\"o\">,</span> <span class=\"n\">int.cast_coe_nat</span><span class=\"o\">,</span> <span class=\"n\">nat.abs_cast</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"bp\">-</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">+</span><span class=\"n\">n</span><span class=\"o\">]</span>  <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">int.nat_abs</span><span class=\"o\">,</span> <span class=\"n\">int.cast_neg_succ_of_nat</span><span class=\"o\">,</span> <span class=\"n\">abs_neg</span><span class=\"o\">,</span>\n                           <span class=\"bp\">←</span> <span class=\"n\">nat.cast_succ</span><span class=\"o\">,</span> <span class=\"n\">nat.abs_cast</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>It needs <code>linear_ordered_ring</code>, <code>nat.cast</code> and <code>int.cast</code>.</p>\n<p>But those casts are not yet available in <code>algebra/ordered_ring.lean</code>.</p>",
        "id": 244300101,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624980422
    },
    {
        "content": "<p>Probably <code>data.int.cast</code>, like the lemmas in <code>data.nat.cast</code></p>",
        "id": 244301237,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1624980857
    },
    {
        "content": "<p>Hmm, of course, that makes sense.</p>",
        "id": 244301495,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624980966
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 244301541,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624980988
    },
    {
        "content": "<p>Does it already import <code>linear_ordered_ring</code>? I guess yes</p>",
        "id": 244301567,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1624981003
    }
]