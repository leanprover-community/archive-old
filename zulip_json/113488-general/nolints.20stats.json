[
    {
        "content": "<p>I thought it might be nice to see how the nolints file grows/shrinks over time. Here is a plot that starts with the first commit that <code>scripts/nolints.txt</code> existed, and walks through every commit until todays <code>master</code>.<br>\n<a href=\"/user_uploads/3121/qRkMpF7XyeDYJuanjWszyEoq/nolints_stats.png\" title=\"nolints_stats.png\">nolints_stats.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/qRkMpF7XyeDYJuanjWszyEoq/nolints_stats.png\" title=\"nolints_stats.png\"><img src=\"/user_uploads/3121/qRkMpF7XyeDYJuanjWszyEoq/nolints_stats.png\"></a></div>",
        "id": 193164936,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586254375
    },
    {
        "content": "<p>Script (generates the data in reverse chronological order):</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"ch\">#!/bin/bash</span>\n\n<span class=\"k\">while</span> <span class=\"o\">[</span> -f scripts/nolints.txt <span class=\"o\">]</span>\n<span class=\"k\">do</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">&quot;</span><span class=\"k\">$(</span>git rev-parse HEAD<span class=\"k\">)</span><span class=\"s2\">:</span><span class=\"k\">$(</span>wc -l scripts/nolints.txt<span class=\"k\">)</span><span class=\"s2\">&quot;</span> &gt;&gt; nolint_stats.txt\n        git checkout HEAD^\n<span class=\"k\">done</span>\n</pre></div>",
        "id": 193165008,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586254423
    },
    {
        "content": "<p>What is the new linter that caused the huge jump up?</p>",
        "id": 193165103,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586254473
    },
    {
        "content": "<p>I have not yet investigated</p>",
        "id": 193165120,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586254485
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>0fc45dcd16b7042179efb36a8e62f908bf0bd0e9:4086\n32b32ad912406254ac7ddb7100d50f00b86e46f5:3210\n</pre></div>",
        "id": 193165193,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586254521
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/commit/0fc45dcd16b7042179efb36a8e62f908bf0bd0e9\" title=\"https://github.com/leanprover-community/mathlib/commit/0fc45dcd16b7042179efb36a8e62f908bf0bd0e9\">https://github.com/leanprover-community/mathlib/commit/0fc45dcd16b7042179efb36a8e62f908bf0bd0e9</a><br>\nfeat(tactic/lint): support @[nolint unused_arguments] (<a href=\"https://github.com/leanprover-community/mathlib/issues/2041\" title=\"https://github.com/leanprover-community/mathlib/issues/2041\">#2041</a>)</p>",
        "id": 193165295,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586254574
    },
    {
        "content": "<p>Yeah, the big jump was just a restructuring of the file to have headers and whitespace. A slightly better measure would be number of non-whitespace, non-comment lines.</p>",
        "id": 193166250,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1586255179
    },
    {
        "content": "<p>Still a nice graph!</p>",
        "id": 193166369,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1586255271
    },
    {
        "content": "<p>Ok, let me try again (-;</p>",
        "id": 193166376,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586255277
    },
    {
        "content": "<p>I'll have lunch first</p>",
        "id": 193166627,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586255433
    },
    {
        "content": "<p>You can also get a sense of the change from leanprover-community-bot's commits. It's removed 345 lines since Feb 14.</p>",
        "id": 193166654,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1586255466
    },
    {
        "content": "<p>Update:<br>\n<a href=\"/user_uploads/3121/jGM7uBax0WJLVEJqCMPMraPl/nolints_stats.png\" title=\"nolints_stats.png\">nolints_stats.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/jGM7uBax0WJLVEJqCMPMraPl/nolints_stats.png\" title=\"nolints_stats.png\"><img src=\"/user_uploads/3121/jGM7uBax0WJLVEJqCMPMraPl/nolints_stats.png\"></a></div>",
        "id": 193170527,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586257941
    },
    {
        "content": "<p>Script:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"ch\">#!/bin/bash</span>\n\ngit checkout -q master\n\n<span class=\"k\">while</span> <span class=\"o\">[</span> -f scripts/nolints.txt <span class=\"o\">]</span>\n<span class=\"k\">do</span>\n        <span class=\"nb\">echo</span> <span class=\"s2\">&quot;</span><span class=\"k\">$(</span>git rev-parse HEAD<span class=\"k\">)</span><span class=\"s2\">:</span><span class=\"k\">$(</span>grep . scripts/nolints.txt <span class=\"p\">|</span> grep -v <span class=\"s1\">&#39;^--&#39;</span> <span class=\"p\">|</span> wc -l<span class=\"k\">)</span><span class=\"s2\">&quot;</span>\n        git checkout -q HEAD^\n<span class=\"k\">done</span> <span class=\"p\">|</span> tac <span class=\"p\">|</span> sed <span class=\"s1\">&#39;s/ script.*//&#39;</span>\n\ngit checkout -q master\n</pre></div>",
        "id": 193170735,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586258059
    },
    {
        "content": "<p>Then I ran <code>cut -f2 -d:</code> on the output of that script, and saved it in <code>rev_stats.txt</code>.<br>\nFinally, the following gnuplot script made the graph:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">#!/usr/bin/gnuplot -persist</span>\n\n<span class=\"k\">set</span> <span class=\"nb\">title</span> <span class=\"s\">&quot;Lines in scripts/nolints.txt&quot;</span>\n<span class=\"k\">set</span> <span class=\"nb\">xlabel</span> <span class=\"s\">&quot;git commit&quot;</span>\n<span class=\"k\">set</span> <span class=\"nb\">ylabel</span> <span class=\"s\">&quot;#lines&quot;</span>\n<span class=\"k\">plot</span> <span class=\"s\">&quot;rev_stats.txt&quot;</span> <span class=\"nb\">u</span> <span class=\"p\">(</span><span class=\"nf\">column</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">))</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"nf\">xtic</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"nb\">w</span> <span class=\"n\">l</span> <span class=\"nb\">title</span> <span class=\"s\">&quot;&quot;</span>\n</pre></div>",
        "id": 193170829,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586258125
    },
    {
        "content": "<p>Nice. This is one curve we don't want to flatten.</p>",
        "id": 193170959,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1586258193
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/2352\" title=\"https://github.com/leanprover-community/mathlib/issues/2352\">#2352</a> has been merged. 37 lines less in <code>nolints.txt</code>.</p>",
        "id": 193365064,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1586372902
    },
    {
        "content": "<p>I can no longer find the autogenerated graph of nolints statistics on the website...</p>",
        "id": 200281859,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591732805
    },
    {
        "content": "<p>I guess I should bookmark it...</p>",
        "id": 200281882,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591732815
    },
    {
        "content": "<p>Took me a sec to find it too: <a href=\"https://leanprover-community.github.io/mathlib_stats/nolints.png\">https://leanprover-community.github.io/mathlib_stats/nolints.png</a></p>\n<div class=\"message_inline_image\"><a href=\"https://leanprover-community.github.io/mathlib_stats/nolints.png\"><img src=\"https://leanprover-community.github.io/mathlib_stats/nolints.png\"></a></div>",
        "id": 200283278,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591733399
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> Thanks!</p>",
        "id": 200287540,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591735403
    },
    {
        "content": "<p>This graph is not automatically updated, is it?</p>",
        "id": 202965032,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594024605
    },
    {
        "content": "<p>Or maybe it is, but Zulip is also updating the image in Bryan's post.</p>",
        "id": 202965203,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594024749
    },
    {
        "content": "<p>It is updated, yeah.</p>",
        "id": 202971553,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1594029772
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>mathlib/scripts$ cat nolints_summary.sh\n<span class=\"c1\">#!/bin/bash</span>\n\n<span class=\"nv\">input</span><span class=\"o\">=</span>nolints.txt\n\n<span class=\"nv\">fn</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>\n<span class=\"nv\">cnt</span><span class=\"o\">=</span><span class=\"m\">0</span>\n\n<span class=\"k\">while</span> <span class=\"nb\">read</span> -r line\n<span class=\"k\">do</span>\n        <span class=\"k\">case</span> <span class=\"s2\">&quot;</span><span class=\"nv\">$line</span><span class=\"s2\">&quot;</span> in\n                <span class=\"s1\">&#39;-- &#39;</span>*<span class=\"o\">)</span>\n                        <span class=\"nv\">cnt</span><span class=\"o\">=</span><span class=\"m\">0</span>\n                        <span class=\"nv\">fn</span><span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">line</span><span class=\"p\">:</span><span class=\"nv\">3</span><span class=\"si\">}</span>\n                        <span class=\"p\">;;</span>\n                apply*<span class=\"o\">)</span>\n                        <span class=\"nv\">cnt</span><span class=\"o\">=</span><span class=\"k\">$((</span><span class=\"nv\">$cnt</span><span class=\"o\">+</span><span class=\"m\">1</span><span class=\"k\">))</span>\n                        <span class=\"p\">;;</span>\n                <span class=\"s1\">&#39;&#39;</span><span class=\"o\">)</span>\n                        <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"nv\">$cnt</span> -gt <span class=\"m\">0</span> <span class=\"o\">]</span>\n                        <span class=\"k\">then</span>\n                                <span class=\"nb\">echo</span> <span class=\"s2\">&quot;</span><span class=\"nv\">$cnt</span><span class=\"s2\"> </span><span class=\"nv\">$fn</span><span class=\"s2\">&quot;</span>\n                        <span class=\"k\">fi</span>\n                        <span class=\"p\">;;</span>\n        <span class=\"k\">esac</span>\n<span class=\"k\">done</span> &lt; <span class=\"s2\">&quot;</span><span class=\"nv\">$input</span><span class=\"s2\">&quot;</span>\n\n<span class=\"nb\">echo</span> <span class=\"k\">$((</span><span class=\"nv\">$cnt</span><span class=\"o\">+</span><span class=\"m\">1</span><span class=\"k\">))</span> <span class=\"nv\">$fn</span>\n</code></pre></div>",
        "id": 202987632,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594041891
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>mathlib/scripts$ ./nolints_summary.sh <span class=\"p\">|</span> sort -n <span class=\"p\">|</span> tail -30\n<span class=\"m\">15</span> tactic/explode.lean\n<span class=\"m\">16</span> deprecated/subgroup.lean\n<span class=\"m\">16</span> tactic/monotonicity/basic.lean\n<span class=\"m\">17</span> data/fintype/basic.lean\n<span class=\"m\">17</span> data/matrix/basic.lean\n<span class=\"m\">17</span> group_theory/perm/sign.lean\n<span class=\"m\">17</span> tactic/converter/interactive.lean\n<span class=\"m\">19</span> data/list/defs.lean\n<span class=\"m\">19</span> linear_algebra/tensor_product.lean\n<span class=\"m\">21</span> control/monad/cont.lean\n<span class=\"m\">21</span> tactic/converter/binders.lean\n<span class=\"m\">21</span> tactic/interactive.lean\n<span class=\"m\">21</span> tactic/rewrite.lean\n<span class=\"m\">22</span> data/pnat/xgcd.lean\n<span class=\"m\">22</span> group_theory/coset.lean\n<span class=\"m\">23</span> category_theory/equivalence.lean\n<span class=\"m\">23</span> control/traversable/derive.lean\n<span class=\"m\">23</span> meta/coinductive_predicates.lean\n<span class=\"m\">25</span> control/fold.lean\n<span class=\"m\">25</span> set_theory/ordinal.lean\n<span class=\"m\">26</span> tactic/local_cache.lean\n<span class=\"m\">27</span> data/mllist.lean\n<span class=\"m\">28</span> data/fp/basic.lean\n<span class=\"m\">29</span> category_theory/limits/cones.lean\n<span class=\"m\">29</span> tactic/abel.lean\n<span class=\"m\">33</span> tactic/rcases.lean\n<span class=\"m\">38</span> tactic/converter/old_conv.lean\n<span class=\"m\">42</span> data/num/bitwise.lean\n<span class=\"m\">53</span> tactic/monotonicity/interactive.lean\n<span class=\"m\">64</span> data/num/basic.lean\n</code></pre></div>",
        "id": 202987693,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594041925
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">io</span>\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">&quot;../scripts/nolints.txt&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;r&quot;</span><span class=\"p\">,</span><span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n<span class=\"n\">freq</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">line</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;-&quot;</span><span class=\"p\">:</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">line</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n        <span class=\"n\">freq</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">))</span>\n    <span class=\"k\">elif</span> <span class=\"n\">freq</span><span class=\"p\">:</span>\n        <span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">freq</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">freq</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">count</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"n\">freq</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">freq</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">count</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span> <span class=\"k\">break</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 203111119,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594132845
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>algebra/group/defs 1\nalgebraic_geometry/prime_spectrum 1\ncontrol/traversable/lemmas 1\ndata/W 1\ndata/buffer/basic 1\ndata/dlist/basic 1\ndata/dlist/instances 1\ndata/fin 1\ndata/hash_map 1\ndata/int/modeq 1\ndata/int/parity 1\ndata/list/range 1\ndata/list/tfae 1\ndata/multiset/functor 1\ndata/multiset/pi 1\ndata/nat/enat 1\ndata/nat/prime 1\ndata/nat/sqrt 1\ndata/nat/totient 1\ndata/padics/padic_norm 1\ndata/quot 1\ndata/real/ereal 1\ndata/real/nnreal 1\ndata/set/enumerate 1\ndata/string/basic 1\nfield_theory/subfield 1\ngroup_theory/presented_group 1\ngroup_theory/sylow 1\nlogic/unique 1\nmeasure_theory/category/Meas 1\nmeasure_theory/measurable_space 1\nmeasure_theory/measure_space 1\norder/bounded_lattice 1\norder/galois_connection 1\norder/lexicographic 1\nring_theory/integral_closure 1\nring_theory/maps 1\nring_theory/multiplicity 1\nring_theory/subring 1\nset_theory/cofinality 1\ntactic/core 1\ntactic/generalize_proofs 1\ntactic/localized 1\ntactic/monotonicity/lemmas 1\ntactic/norm_num 1\ntactic/omega/int/form 1\ntactic/omega/nat/form 1\ntactic/omega/nat/neg_elim 1\ntactic/scc 1\ntactic/subtype_instance 1\ntactic/wlog 1\ntopology/algebra/ring 1\ntopology/algebra/uniform_ring 1\ntopology/category/TopCommRing 1\ntopology/homeomorph 1\ntopology/metric_space/isometry 1\ntopology/metric_space/premetric_space 1\ntopology/opens 1\ntopology/sheaves/stalks 1\ntopology/uniform_space/uniform_embedding 1\n</code></pre></div>",
        "id": 203111168,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594132870
    },
    {
        "content": "<p>What exactly is this measuring?</p>",
        "id": 203111390,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594132981
    },
    {
        "content": "<p>instead of showing the hardest goals I've decided to show the easiest goals</p>",
        "id": 203112391,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594133436
    },
    {
        "content": "<p>Ooh, you could have taken my script and piped it through <code>tac</code></p>",
        "id": 203112564,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594133522
    },
    {
        "content": "<p>Or <code>sort -rn</code></p>",
        "id": 203112590,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594133534
    },
    {
        "content": "<p>but i like python</p>",
        "id": 203112648,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594133571
    }
]