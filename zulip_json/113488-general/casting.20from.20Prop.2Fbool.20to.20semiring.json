[
    {
        "content": "<p>Do we have a function that sends a prop/bool to 1 if it is true and 0 if it is false?</p>",
        "id": 166632236,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1558959605
    },
    {
        "content": "<p>There is no instance for <code>semiring bool</code> in mathlib I think</p>",
        "id": 166632544,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1558959883
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">discrete_field</span> <span class=\"n\">bool</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n <span class=\"n\">refine_struct</span> <span class=\"o\">{</span>\n  <span class=\"n\">zero</span> <span class=\"o\">:=</span> <span class=\"n\">ff</span><span class=\"o\">,</span> <span class=\"n\">one</span> <span class=\"o\">:=</span> <span class=\"n\">tt</span><span class=\"o\">,</span>\n  <span class=\"n\">neg</span> <span class=\"o\">:=</span> <span class=\"n\">id</span><span class=\"o\">,</span> <span class=\"n\">inv</span> <span class=\"o\">:=</span> <span class=\"n\">id</span><span class=\"o\">,</span>\n  <span class=\"n\">add</span> <span class=\"o\">:=</span> <span class=\"n\">bxor</span><span class=\"o\">,</span> <span class=\"n\">mul</span> <span class=\"o\">:=</span> <span class=\"n\">band</span><span class=\"o\">,</span>\n  <span class=\"n\">zero_ne_one</span> <span class=\"o\">:=</span> <span class=\"bp\">Î»</span> <span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"o\">{</span><span class=\"n\">cases</span> <span class=\"n\">e</span><span class=\"o\">},</span>\n  <span class=\"n\">has_decidable_eq</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">apply_instance</span> <span class=\"o\">}</span>\n <span class=\"o\">}</span><span class=\"bp\">;</span>\n <span class=\"n\">try</span> <span class=\"o\">{</span> <span class=\"n\">repeat</span> <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">a</span> <span class=\"o\">}</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">dec_trivial</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 166632829,
        "sender_full_name": "Neil Strickland",
        "timestamp": 1558960151
    }
]