[
    {
        "content": "<p>In the Bonn meeting in January I spoke with Makarius, and I asked him about why Isabelle uses a custom encoding of special characters rather than something like Unicode. He brought up the issue with <a href=\"https://en.wikipedia.org/wiki/Unicode_equivalence#Normalization\">Unicode normalization</a>, and I didn't really have a good response. The basic problem is that Unicode allows for multiple encodings of characters that are nevertheless to be treated as equal in all contexts; the main example of this is a letter followed by a combining mark like <code>e  + ◌́ = e◌́ = é</code>. Should lean be aware of this process? That is, if I make a definition <code>étale</code> and later use <code>e◌́tale</code> should these be considered the same constant? I am curious what community consensus is on issues like this.</p>",
        "id": 198850901,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590557627
    },
    {
        "content": "<p>They should be equal iff <code>NFC(x) = NFC(y)</code>, where <code>NFC</code> is unicode normal form C</p>",
        "id": 198851628,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1590558618
    },
    {
        "content": "<p>however for maximum laziness we could just do whatever Lean 4 does when it compares symbols for equality</p>",
        "id": 198851809,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1590558889
    },
    {
        "content": "<p>I assume that is the same thing as what lean 3 currently does which is nothing</p>",
        "id": 198851834,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590558922
    },
    {
        "content": "<p>Unicode has a pretty unambiguous answer to what the correct thing to do is here. The question is mostly about the tradeoff between implementation complexity and accurate handling of unicode characters</p>",
        "id": 198851923,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590559019
    },
    {
        "content": "<p>I vote for inaccurate handling and simple implementation complexity because it doesn't seem like a pressing problem right now</p>",
        "id": 198852089,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1590559221
    },
    {
        "content": "<p>hashtag procrastinate issue until next major version</p>",
        "id": 198852104,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1590559251
    },
    {
        "content": "<p>most unicode is entered using vscode short codes so it's unlikely to be a big issue. If it can't be entered using a short code I don't think most people bother</p>",
        "id": 198852205,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1590559381
    },
    {
        "content": "<p>there are lots of people with ascii keyboards and making people type graves and accents when there's perfectly good romanization / ascii schemes lying around...</p>",
        "id": 198852283,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1590559461
    },
    {
        "content": "<p>To be fair, I think in isabelle they also use short codes for input</p>",
        "id": 198852476,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590559695
    },
    {
        "content": "<p>My personal stance is that unicode causes more problems than it solves, but it is an easy way to achieve okayish results in a variety of viewing media (vscode, html docs, github)</p>",
        "id": 198852690,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590559819
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110025\">Andrew Ashworth</span> <a href=\"#narrow/stream/113488-general/topic/Unicode.20normalization/near/198852283\">said</a>:</p>\n<blockquote>\n<p>there are lots of people with ascii keyboards and making people type graves and accents when there's perfectly good romanization / ascii schemes lying around...</p>\n</blockquote>\n<p>This is just an argument for straight ASCII though, not the current halfsie unicode used in lean 3/4</p>",
        "id": 198852800,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590559995
    },
    {
        "content": "<p>it's also kind of english-centric</p>",
        "id": 198852826,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590560034
    },
    {
        "content": "<p>爲什麽代碼都是用英文來寫的，將來會有中文寫代碼的那天嗎？</p>",
        "id": 198853323,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1590560512
    },
    {
        "content": "<p>I wouldn't get hung up on preferring Latin-ascii  for most code. Just by choosing the latin alphabet to represent words you're excluding a lot of the world</p>",
        "id": 198853507,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1590560698
    },
    {
        "content": "<p>I saw a demo of that once from some CMU student</p>",
        "id": 198853522,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590560710
    },
    {
        "content": "<p>it was made up to look like a traditional chinese text</p>",
        "id": 198853539,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590560730
    },
    {
        "content": "<blockquote>\n<p>Unicode allows for multiple encodings of characters that are nevertheless to be treated as equal in all contexts</p>\n</blockquote>\n<p>I don't remember this ever being an issue in practice (and Lean doesn't do any kind of Unicode normalization as far as I'm aware of).  I think the appropriate response is \"identifiers are byte strings, equality is byte string equality\".  This is also how file names are handled on sane operating systems (and windows).</p>",
        "id": 198855740,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590562823
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110025\">Andrew Ashworth</span> <a href=\"#narrow/stream/113488-general/topic/Unicode.20normalization/near/198853323\">said</a>:</p>\n<blockquote>\n<p>爲什麽代碼都是用英文來寫的，將來會有中文寫代碼的那天嗎？</p>\n</blockquote>\n<p>I can't tell if this is translated. the translations engines are getting scarily stronger day by day</p>",
        "id": 198856209,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590563268
    },
    {
        "content": "<p>but I'll go with yes just because people who speak Chinese are statistically more likely to use Simplified Chinese (because Simplified Chinese is used in China)</p>",
        "id": 198856370,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590563343
    },
    {
        "content": "<p>The related problem of many visually indistinguishable but distinct definitions is definitely an issue though</p>",
        "id": 198857146,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590563981
    },
    {
        "content": "<p>but I as a Hongkonger appreciate the representation of Traditional Chinese</p>",
        "id": 198857267,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590564061
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110025\">Andrew Ashworth</span> <a href=\"#narrow/stream/113488-general/topic/Unicode.20normalization/near/198853323\">said</a>:</p>\n<blockquote>\n<p>爲什麽代碼都是用英文來寫的，將來會有中文寫代碼的那天嗎？</p>\n</blockquote>\n<p><a href=\"https://en.wikipedia.org/wiki/Easy_Programming_Language\">https://en.wikipedia.org/wiki/Easy_Programming_Language</a></p>\n<p>這個算嗎？</p>",
        "id": 198857293,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1590564093
    },
    {
        "content": "<p>we need Google to translate Cantonese</p>",
        "id": 198857392,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590564178
    },
    {
        "content": "<p>a proprietary programming language? Eww</p>",
        "id": 198857415,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590564206
    },
    {
        "content": "<p>In case anybody wonders how it looks like:<br>\n<a href=\"/user_uploads/3121/4pXVrNvcIUaypDPx1zpnHcV6/etx_9.jpg\">etx_9.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/4pXVrNvcIUaypDPx1zpnHcV6/etx_9.jpg\" title=\"etx_9.jpg\"><img src=\"/user_uploads/3121/4pXVrNvcIUaypDPx1zpnHcV6/etx_9.jpg\"></a></div>",
        "id": 198857765,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590564479
    },
    {
        "content": "<p>Why do they use those foreign <code>{ }</code> characters?</p>",
        "id": 198857862,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590564528
    },
    {
        "content": "<p>Why is it a proportional font? This is doubly baffling considering that the language is already monospace</p>",
        "id": 198857932,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590564568
    },
    {
        "content": "<p>I guess \"祖國你好\" is like the Chinese equivalent of  \"Hello World\"?</p>",
        "id": 198858059,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1590564652
    },
    {
        "content": "<p>not sure about the shades of meaning here but it sounds very nationalistic</p>",
        "id": 198858224,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590564752
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Unicode.20normalization/near/198857932\">said</a>:</p>\n<blockquote>\n<p>Why is it a proportional font? This is doubly baffling considering that the language is already monospace</p>\n</blockquote>\n<p>There are two sets of punctuation used in Chinese computer text. Full width which is monospace (全角) so <code>，</code> for example, and Half width (半角), <code>,</code>. And they made the design decision to use the half width set (ie. the ASCII set of punctuation).</p>\n<p>Dunno why they used a proportional font though</p>",
        "id": 198858284,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1590564798
    },
    {
        "content": "<p>The code looks like they are using ascii, not halfwidth, for the ascii characters</p>",
        "id": 198858342,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590564841
    },
    {
        "content": "<p>Ascii is half-width.</p>",
        "id": 198858454,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590564920
    },
    {
        "content": "<p>Half width doesn't mean half the width of a normal character. It just means ASCII. It's a term (I think) borrowed from Japanese, and is from typesetting prior to computers.</p>",
        "id": 198858475,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1590564937
    },
    {
        "content": "<p>it's a bit more than halfwidth in most fonts. Isn't there a dedicated halfwidth section of unicode?</p>",
        "id": 198858497,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590564952
    },
    {
        "content": "<p>which is literally a half moji wide</p>",
        "id": 198858578,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590564984
    },
    {
        "content": "<p>But it is exactly the half width in monospace fonts.</p>",
        "id": 198858625,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590565026
    },
    {
        "content": "<p>thank goodness for that, I suppose. I guess they just chose not to use such a font in the snippet</p>",
        "id": 198858654,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590565063
    },
    {
        "content": "<p>Terminals would be hell otherwise.  It's already a problem that half-widthness changes with new Unicode versions...</p>",
        "id": 198858716,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590565093
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Unicode.20normalization/near/198853539\">said</a>:</p>\n<blockquote>\n<p>it was made up to look like a traditional chinese text</p>\n</blockquote>\n<p>You're probably thinking of <a href=\"https://github.com/wenyan-lang/wenyan/blob/master/README.md\">https://github.com/wenyan-lang/wenyan/blob/master/README.md</a>. It's beautiful.</p>",
        "id": 198862236,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1590567532
    },
    {
        "content": "<p>But as for the topic at hand, I agree with Gabriel. I'd much rather have a linter that <em>forbids</em> non-normalized/deceptive input than adding slow normalization to the parser itself.</p>",
        "id": 198862435,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1590567672
    },
    {
        "content": "<p>\"unicode normalization is an editor feature\" — Ancient eastern wisdom</p>",
        "id": 198863029,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590568089
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Unicode.20normalization/near/198852690\">said</a>:</p>\n<blockquote>\n<p>My personal stance is that unicode causes more problems than it solves, but it is an easy way to achieve okayish results in a variety of viewing media (vscode, html docs, github)</p>\n</blockquote>\n<p>I am convinced that unicode is one of the reasons that undergraduate mathematicians are interested. It has only dawned on me recently that computer scientists are not all familiar with notation like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∃</mi><mo separator=\"true\">,</mo><mo>∧</mo><mo separator=\"true\">,</mo><mo>∨</mo><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">¬</mi></mrow><annotation encoding=\"application/x-tex\">\\forall, \\exists, \\land, \\lor, \\lnot</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">∀</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∃</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∧</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∨</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">¬</span></span></span></span>. In maths degrees this notation is introduced literally on day 1 (by me, at Imperial, for example, in lectures 1 and 2) and it makes Lean code more readable for us.</p>",
        "id": 198872122,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590574179
    },
    {
        "content": "<p>Weren't you the one who explained to me that most mathematicians never get exposed to logic?</p>",
        "id": 198872244,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590574242
    },
    {
        "content": "<p>They get exposed to precisely the truth tables for and, or, not in classical logic, and modus ponens, and contrapositive, and that's it.</p>",
        "id": 198872284,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590574287
    },
    {
        "content": "<p>but once they are out of that class they never use those symbols again</p>",
        "id": 198872299,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590574311
    },
    {
        "content": "<p>except maybe the quantifiers</p>",
        "id": 198872304,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590574317
    },
    {
        "content": "<p>You're right I don't see much and, or, not, but the quantifiers are everywhere in the analysis scripts I'm marking right now</p>",
        "id": 198872369,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590574350
    },
    {
        "content": "<p>in the questions as well as the student scripts</p>",
        "id": 198872382,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590574363
    },
    {
        "content": "<p>Anyway I'm not saying using symbols is bad, I'm saying that unicode is not a very good solution</p>",
        "id": 198872439,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590574415
    },
    {
        "content": "<p>Probably after a while you don't see many of the quantifiers either, but they are just used as part of the vernacular, e.g. some people use the symbols in English sentences if they're taking notes</p>",
        "id": 198872445,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590574420
    },
    {
        "content": "<p>I'm not proposing ascii art as an alternative</p>",
        "id": 198872451,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590574430
    },
    {
        "content": "<p>I'm saying symbols is essential for readability by mathematicians which is one of the many problems which the area had 5 years ago</p>",
        "id": 198872522,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590574468
    },
    {
        "content": "<p>unicode is a specific implementation of the idea of symbols in code, and it's not a very good one</p>",
        "id": 198872536,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590574480
    },
    {
        "content": "<p>I can't comment on other possibilities, we don't care what is going on under the hood</p>",
        "id": 198872563,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590574502
    },
    {
        "content": "<p>isabelle has a different implementation of the same idea</p>",
        "id": 198872571,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590574506
    },
    {
        "content": "<p>isabelle doesn't use unicode but you still see all the fancy symbols when you pull it up in the various media</p>",
        "id": 198872609,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590574539
    },
    {
        "content": "<p>and more besides - things that don't exist in unicode</p>",
        "id": 198872676,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590574564
    },
    {
        "content": "<p>LaTeX is yet another implementation of symbols in code (well, typeset text) that is not related to unicode</p>",
        "id": 198872785,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590574679
    },
    {
        "content": "<p>and frankly I think LaTeX addresses the symbolic needs of mathematicians far better than unicode, which is primarily aimed at representing international scripts</p>",
        "id": 198872872,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590574730
    },
    {
        "content": "<p>I agree that LaTeX would be better. There have been times when writing instructional Lean code where I have wished for LaTeX over what unicode can offer me.</p>",
        "id": 198874066,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590575629
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Unicode.20normalization/near/198872122\">said</a>:</p>\n<blockquote>\n<p>It has only dawned on me recently that computer scientists are not all familiar with notation like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∃</mi><mo separator=\"true\">,</mo><mo>∧</mo><mo separator=\"true\">,</mo><mo>∨</mo><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">¬</mi></mrow><annotation encoding=\"application/x-tex\">\\forall, \\exists, \\land, \\lor, \\lnot</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">∀</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∃</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∧</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∨</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">¬</span></span></span></span>. In maths degrees this notation is introduced literally on day 1 (by me, at Imperial, for example, in lectures 1 and 2) and it makes Lean code more readable for us.</p>\n</blockquote>\n<p>These certainly appear very early in any CS degree. It's not like we do literally no math. ;) Unicode remains unpopular in programming languages because programmers like to use a variety of editors, not all of which can comfortably input Unicode. (Also, entrenched ASCII prejudice imo.)</p>",
        "id": 198879880,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1590579908
    },
    {
        "content": "<p>In practice, Isabelle's symbols can be a <em>huge</em> pain in the neck - they are pretty when you're in JEdit, but turn into an unreadable and unmanageable mess when you look at them with any other tool or on Github or...</p>",
        "id": 198883383,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1590582485
    },
    {
        "content": "<p>And people post lean code on discord now</p>",
        "id": 198883794,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590582746
    },
    {
        "content": "<p>And It Just Works</p>",
        "id": 198883833,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590582765
    },
    {
        "content": "<p>Oh wow, looks like this comes up in Python, where they use a fairly aggressive normalization: <a href=\"https://stackoverflow.com/questions/62256014/does-python-forbid-two-similarly-looking-unicode-identifiers\">https://stackoverflow.com/questions/62256014/does-python-forbid-two-similarly-looking-unicode-identifiers</a></p>",
        "id": 200183387,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1591680424
    }
]