[
    {
        "content": "<p>I have this instance:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"n\">Xplus</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"n\">Xplus</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span><span class=\"n\">Xplus_rel</span><span class=\"o\">,</span> <span class=\"n\">Xplus_rel</span><span class=\"bp\">.</span><span class=\"n\">refl</span><span class=\"o\">,</span> <span class=\"n\">Xplus_rel</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span> <span class=\"n\">Xplus_rel</span><span class=\"bp\">.</span><span class=\"n\">trans</span><span class=\"bp\">⟩</span>\n</pre></div>\n\n\n<p>How can I use a tactic to rewrite <code>a ≈ b</code> somewhere in the goal to <code>Xplus_rel a b</code>?</p>",
        "id": 127602788,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528208326
    },
    {
        "content": "<p>Is there some name I can pass to <code>rw</code> or <code>simp</code>?</p>",
        "id": 127602900,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528208461
    },
    {
        "content": "<p><code>set_option pp.notations false</code></p>",
        "id": 127602930,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1528208511
    },
    {
        "content": "<p>Does <code>change Xplus_rel a b</code> do it for you?</p>",
        "id": 127602986,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528208553
    },
    {
        "content": "<p><code>simp [(≈)]</code> should do it</p>",
        "id": 127603021,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1528208616
    },
    {
        "content": "<p><code>change</code> works if I write out the whole new goal (which isn't bad at all using copious <code>_</code>s)</p>",
        "id": 127603023,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528208617
    },
    {
        "content": "<p><code>simp [(≈)]</code> turned it into <code>setoid.r</code>, not <code>Xplus_rel</code></p>",
        "id": 127603087,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528208661
    },
    {
        "content": "<p>Oh, but <code>[(≈), setoid.r]</code> worked</p>",
        "id": 127603093,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528208674
    },
    {
        "content": "<p><code>≈</code> is literally <code>setoid.r</code></p>",
        "id": 127603099,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1528208685
    },
    {
        "content": "<p>No, it's literally <code>has_equiv.equiv</code></p>",
        "id": 127603112,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528208704
    },
    {
        "content": "<p>oh</p>",
        "id": 127603118,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1528208710
    },
    {
        "content": "<p>Great, this is better than what I had before. I feel like I run into this a lot</p>",
        "id": 127603181,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528208787
    },
    {
        "content": "<p>I often use <code>show Xplus_rel a b</code> in these situtations.</p>",
        "id": 127604658,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1528210460
    },
    {
        "content": "<p>That's similar to <code>change</code> but <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> pointed out that that only works if there's nothing else in your goal.</p>",
        "id": 127604971,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528210868
    },
    {
        "content": "<p><code>show Xplus_rel _ _</code></p>",
        "id": 127605892,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1528212016
    },
    {
        "content": "<p>That doesn't work if the goal is <code>p ∧ Xplus_rel a b</code></p>",
        "id": 127606006,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528212182
    },
    {
        "content": "<p><code>split</code></p>",
        "id": 127606012,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1528212192
    },
    {
        "content": "<p>This is an ad hoc response to it. <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> Is looking for one solution that will work for a variety of goals</p>",
        "id": 127606149,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528212414
    },
    {
        "content": "<p>And won't get longer the longer my goal is</p>",
        "id": 127606159,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528212445
    }
]