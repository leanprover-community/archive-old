[
    {
        "content": "<p>I've never understood what <code>unfreezeI</code> was for. But I know that we needed it because of \"core\". Now that \"core\" is no longer a reason... can we get rid of <code>unfreezeI</code>?</p>",
        "id": 195285944,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1587822838
    },
    {
        "content": "<p>The \"core\" reason is deeply buried in type class resolution.  IIRC, calling <code>unfreezeI</code> (partly) disables caching for type class resolution.  <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> tried to remove this caching mechanism, but apparently it's not entirely trivial.</p>",
        "id": 195286505,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1587823802
    },
    {
        "content": "<p>But the caching was actually broken for the longest time in such a way that <code>unfreezeI</code> etc wasn't necessary, until Leo fixed it. Can't that fix just be reverted? I don't remember anyone noticing any actual benefits such as better performance from the fix.</p>",
        "id": 195295594,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1587837407
    },
    {
        "content": "<p>I have a more relevant question (I think). Do we know what will be the situation in Lean 4? We don't want to unlearn our instance cache management habits in Lean 3 only to relearn them when we'll switch to Lean 4? I don't expect Leo will change his mind on this question, but maybe the question itself will become irrelevant in Lean 4.</p>",
        "id": 195296042,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1587838058
    },
    {
        "content": "<p>I believe the plan is that all surface-level binders automatically reset the cache. Only tactics introducing instances internally have to worry about it.</p>",
        "id": 195296501,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1587838735
    },
    {
        "content": "<p>I'm afraid I don't understand this whole story well enough to parse this answer.</p>",
        "id": 195296585,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1587838892
    },
    {
        "content": "<p>Does it mean we won't need <code>haveI</code> and <code>letI</code>?</p>",
        "id": 195296591,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1587838910
    },
    {
        "content": "<p>Yes, unless you're a tactic writer and care about that level of optimization.</p>",
        "id": 195296852,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1587839289
    }
]