[
    {
        "content": "<p>Why doesn't <code>#reduce expr.pis [expr.local_const  ` A `A binder_info.default `(Sort 1)] `(Sort 1)</code>terminate?</p>",
        "id": 123711391,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1521047060
    },
    {
        "content": "<p>In an ideal world you would go to the set_option docs and look at the section \"how do I track down an excessive memory consumption error?\"</p>",
        "id": 123711636,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1521047382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110789\">@Jakob von Raumer</span> You should use <code>#eval</code> since <code>expr.pis</code> is meta.</p>",
        "id": 123711953,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1521047766
    },
    {
        "content": "<p>And I think the following should explain why kernel reduction fails on this example:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">set_option</span> <span class=\"n\">pp</span><span class=\"bp\">.</span><span class=\"n\">all</span> <span class=\"n\">true</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">raw</span> <span class=\"bp\">`</span><span class=\"n\">A</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">name.mk_string</span>\n<span class=\"cm\">  (string.str string.empty</span>\n<span class=\"cm\">     (char.of_nat</span>\n<span class=\"cm\">        (@bit1.{0} nat nat.has_one nat.has_add</span>\n<span class=\"cm\">           (@bit0.{0} nat nat.has_add</span>\n<span class=\"cm\">              (@bit0.{0} nat nat.has_add</span>\n<span class=\"cm\">                 (@bit0.{0} nat nat.has_add</span>\n<span class=\"cm\">                    (@bit0.{0} nat nat.has_add (@bit0.{0} nat nat.has_add (@has_one.one.{0} nat nat.has_one)))))))))</span>\n<span class=\"cm\">  name.anonymous</span>\n<span class=\"cm\">-/</span>\n</pre></div>",
        "id": 123712203,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1521048108
    },
    {
        "content": "<p>(I just tried all subterms of the example, and already <code>#reduce `A</code> fails.)</p>",
        "id": 123712256,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1521048148
    },
    {
        "content": "<p>Thanks :)</p>",
        "id": 123712261,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1521048160
    },
    {
        "content": "<p>But for <code>#eval</code> I'm getting a \"result type does not have an instance of type class 'has_repr', dumping internal representation\"?</p>",
        "id": 123712357,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1521048280
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">meta</span> <span class=\"kn\">instance</span><span class=\"o\">:</span> <span class=\"n\">has_repr</span> <span class=\"n\">expr</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">to_string</span><span class=\"bp\">⟩</span>\n</pre></div>\n\n\n<p><span class=\"emoji emoji-1f604\" title=\"smile\">:smile:</span> I'm not sure if Leo would like a PR though...</p>",
        "id": 123712411,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1521048352
    }
]