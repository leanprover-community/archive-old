[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span>, <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>, what is the dual lemma to</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[priority 100]</span>\n<span class=\"kd\">instance</span> <span class=\"n\">is_filtered_or_empty_of_directed_order</span>\n  <span class=\"o\">(</span><span class=\"n\">Œ±</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">directed_order</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">is_filtered_or_empty</span> <span class=\"n\">Œ±</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">cocone_objs</span> <span class=\"o\">:=</span> <span class=\"bp\">Œª</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">,</span> <span class=\"k\">let</span> <span class=\"o\">‚ü®</span><span class=\"n\">Z</span><span class=\"o\">,</span><span class=\"n\">h1</span><span class=\"o\">,</span><span class=\"n\">h2</span><span class=\"o\">‚ü©</span> <span class=\"o\">:=</span> <span class=\"n\">directed_order.directed</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"k\">in</span>\n    <span class=\"o\">‚ü®</span><span class=\"n\">Z</span><span class=\"o\">,</span> <span class=\"n\">hom_of_le</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"n\">hom_of_le</span> <span class=\"n\">h2</span><span class=\"o\">,</span> <span class=\"n\">trivial</span><span class=\"o\">‚ü©,</span>\n  <span class=\"n\">cocone_maps</span> <span class=\"o\">:=</span> <span class=\"bp\">Œª</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"o\">‚ü®</span><span class=\"n\">Y</span><span class=\"o\">,</span> <span class=\"mi\">ùüô</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">‚ü©</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>you were hinting at? I'm in a position to prove it at <a href=\"https://github.com/leanprover-community/mathlib/tree/directed_mixin\">branch#directed_mixin</a>.</p>",
        "id": 266817557,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1641308361
    },
    {
        "content": "<p>Mostly, I don't know where you want the duals/opposites to be inserted.</p>",
        "id": 266817850,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1641308461
    },
    {
        "content": "<p><code>is_cofiltered_of_empty_of_codirected_order</code> ?</p>",
        "id": 266821476,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1641310230
    },
    {
        "content": "<p>(sorry)</p>",
        "id": 266821485,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1641310234
    },
    {
        "content": "<p>Oh, <code>is_cofiltered</code> is a thing!</p>",
        "id": 266821537,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1641310276
    },
    {
        "content": "<p>Sorry, category theory newbie <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 266821570,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1641310291
    },
    {
        "content": "<p>At some point, I (and some other people) tried dualizing these results with bad results: <a href=\"https://github.com/leanprover-community/mathlib/pull/7980\">#7980</a><br>\nI hope the mixin approach will resolve these issues -- I guess we'll see!</p>",
        "id": 266821616,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1641310317
    },
    {
        "content": "<p>Directed orders are barely used (less than 40 times) and they don't neatly fit in the hierarchy. Further, the mixin is Prop-valued. So I think it's all benef!</p>",
        "id": 266821735,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1641310382
    },
    {
        "content": "<p>Yeah, the full history is <a href=\"https://github.com/leanprover-community/mathlib/pull/7163\">#7163</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/7980\">#7980</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/9200\">#9200</a> I think.</p>",
        "id": 266821818,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1641310428
    },
    {
        "content": "<p>Looks like a graveyard of abandoned PRs...</p>",
        "id": 266821942,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1641310475
    },
    {
        "content": "<p>What's the point of this lemma? It seems to encourage using 'wrong' definitions. The 'correct' definition of directed order should include <code>nonempty Œ±</code> (then every finset has an upper bound, not only nonempty finsets), just like <code>is_filtered</code> does</p>",
        "id": 266822468,
        "sender_full_name": "David W√§rn",
        "timestamp": 1641310690
    },
    {
        "content": "<p>Are you suggesting that the definition <a href=\"https://leanprover-community.github.io/mathlib_docs/find/directed_order\">docs#directed_order</a> should be changed?</p>",
        "id": 266823158,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1641311038
    },
    {
        "content": "<p><code>directed_order Œ±</code> wasn't including <code>nonempty Œ±</code>, so I'm playing it conservative. My point with <a href=\"https://github.com/leanprover-community/mathlib/pull/11238\">#11238</a> is really to turn from an extends to a mixin.</p>",
        "id": 266823344,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1641311143
    },
    {
        "content": "<p>If you really want <code>is_directed Œ±</code> to include <code>nonempty Œ±</code>, we can consider this in a followup PR. But I'm already noting that this would break away from the other unbundled relation classes.</p>",
        "id": 266823530,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1641311236
    },
    {
        "content": "<p>Ok, I guess my question is orthogonal to this PR. I don't know if the definition of <code>directed_order</code> needs to change (you can still use it as <code>[directed_order A] [nonempty A]</code>), but it could maybe be renamed to 'predirected' in line with <code>is_preconnected</code>.</p>",
        "id": 266824276,
        "sender_full_name": "David W√§rn",
        "timestamp": 1641311580
    },
    {
        "content": "<p>Yes, this sounds more reasonable already <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 266824483,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1641311678
    },
    {
        "content": "<p>This change is really doomed. There is random stuff breaking...</p>",
        "id": 266947088,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1641395647
    },
    {
        "content": "<p>Which pair of lemmas do you prefer?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">exists_ge_ge</span> <span class=\"o\">[</span><span class=\"n\">has_le</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_directed</span> <span class=\"n\">Œ±</span> <span class=\"o\">(</span><span class=\"bp\">‚â§</span><span class=\"o\">)]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">‚â§</span> <span class=\"n\">c</span> <span class=\"bp\">‚àß</span> <span class=\"n\">b</span> <span class=\"bp\">‚â§</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">exists_le_le</span> <span class=\"o\">[</span><span class=\"n\">has_le</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_directed</span> <span class=\"n\">Œ±</span> <span class=\"o\">(</span><span class=\"n\">swap</span> <span class=\"o\">(</span><span class=\"bp\">‚â§</span><span class=\"o\">))]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">‚â§</span> <span class=\"n\">a</span> <span class=\"bp\">‚àß</span> <span class=\"n\">c</span> <span class=\"bp\">‚â§</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"c1\">-- or</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">exists_ge_ge</span> <span class=\"o\">[</span><span class=\"n\">has_le</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_directed</span> <span class=\"n\">Œ±</span> <span class=\"o\">(</span><span class=\"bp\">‚â§</span><span class=\"o\">)]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">‚â§</span> <span class=\"n\">c</span> <span class=\"bp\">‚àß</span> <span class=\"n\">b</span> <span class=\"bp\">‚â§</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">exists_le_le</span> <span class=\"o\">[</span><span class=\"n\">has_le</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_directed</span> <span class=\"n\">Œ±</span> <span class=\"o\">(</span><span class=\"bp\">‚â•</span><span class=\"o\">)]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">‚â§</span> <span class=\"n\">a</span> <span class=\"bp\">‚àß</span> <span class=\"n\">c</span> <span class=\"bp\">‚â§</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 266965047,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1641404021
    }
]