[
    {
        "content": "<p>Here is what I think is a bug in norm_num:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">norm_num</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">real</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"mi\">8</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">9</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">norm_num</span>\n</pre></div>\n\n\n<p>\"tactic failed\"</p>",
        "id": 147321656,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1541704303
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> is norm_num supposed to handle coercions?</p>",
        "id": 147389627,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1541787959
    },
    {
        "content": "<p>no, or at least it has not been extended to coercions</p>",
        "id": 147393172,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541790816
    },
    {
        "content": "<p>That could be a nice feature</p>",
        "id": 147448343,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1541884615
    },
    {
        "content": "<p>In the mean time, following the tips at <a href=\"https://github.com/leanprover/mathlib/blob/master/docs/extras/casts.md\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/docs/extras/casts.md\">https://github.com/leanprover/mathlib/blob/master/docs/extras/casts.md</a>, you can always do this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">norm_num</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">real</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"mi\">8</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">9</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"o\">((</span><span class=\"mi\">8</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">8</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"k\">by</span> <span class=\"n\">simp</span><span class=\"o\">),</span>\n  <span class=\"n\">norm_num</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 147448668,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541885349
    },
    {
        "content": "<p>I once made a stupid tactic to do exactly this: <a href=\"https://github.com/MonoidMusician/MATH361/blob/lean-3.4.1/src/naturally.lean\" target=\"_blank\" title=\"https://github.com/MonoidMusician/MATH361/blob/lean-3.4.1/src/naturally.lean\">https://github.com/MonoidMusician/MATH361/blob/lean-3.4.1/src/naturally.lean</a></p>",
        "id": 147475448,
        "sender_full_name": "Nicholas Scheel",
        "timestamp": 1541938475
    },
    {
        "content": "<p>you can also do the same with <code>rat</code></p>",
        "id": 147475536,
        "sender_full_name": "Nicholas Scheel",
        "timestamp": 1541938645
    }
]