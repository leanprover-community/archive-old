[
    {
        "content": "<p>So it turns out that using <code>opt_param</code> is not the same as using <code>(x : X := default)</code> in a structure; defaults specified by <code>opt_param</code> are used in angle bracket syntax and by direct calls to <code>mk</code>, while defaults specified with <code>:=</code> are used in <code>{}</code> syntax:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">am_i_from_a_literal</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">val</span> <span class=\"o\">:</span> <span class=\"n\">opt_param</span> <span class=\"n\">bool</span> <span class=\"n\">ff</span> <span class=\"o\">:=</span> <span class=\"n\">tt</span><span class=\"o\">)</span>\n\n<span class=\"k\">#eval</span> <span class=\"o\">({}</span> <span class=\"o\">:</span> <span class=\"n\">am_i_from_a_literal</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">val</span>  <span class=\"c1\">-- tt</span>\n<span class=\"k\">#eval</span> <span class=\"o\">(⟨⟩</span> <span class=\"o\">:</span> <span class=\"n\">am_i_from_a_literal</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">val</span>  <span class=\"c1\">-- ff</span>\n<span class=\"k\">#eval</span> <span class=\"n\">am_i_from_a_literal.mk.val</span>  <span class=\"c1\">-- ff</span>\n</code></pre></div>\n<p>(<code>set_option old_structure_cmd true</code> makes no difference)</p>",
        "id": 289095412,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657449525
    },
    {
        "content": "<p>Is this how <code>opt_param</code> is supposed to work?</p>",
        "id": 289095416,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657449536
    },
    {
        "content": "<p>Can someone try this with Lean4's <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=optParam#doc\">docs4#optParam</a>?</p>",
        "id": 289095606,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657449773
    }
]