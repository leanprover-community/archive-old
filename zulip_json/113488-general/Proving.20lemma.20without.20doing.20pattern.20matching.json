[
    {
        "content": "<div class=\"codehilite\"><pre><span></span>lemma eq.subst&#39; {α : Sort u} {a b : α} {P : Π (m: α), (m = a) ∨ (m = b) → Prop}\n    (h₁ : a = b) (h₂ : P a (or.inl rfl)) : P b (or.inr rfl) := by cases h₁; assumption\n</pre></div>\n\n\n<p>Is it possible to prove this lemma with eliminators without doing pattern matching?</p>",
        "id": 155091905,
        "sender_full_name": "petercommand",
        "timestamp": 1547479918
    },
    {
        "content": "<p>In this example, I am trying to prove a variant of the traditional Leibniz equality (subst)</p>",
        "id": 155091997,
        "sender_full_name": "petercommand",
        "timestamp": 1547480005
    },
    {
        "content": "<p>Of course it's possible, this is what Lean does in the end. You can <code>#print eq.subst'</code>. Or am I missing something?</p>",
        "id": 155092468,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1547480438
    },
    {
        "content": "<p>You are right, it's just that I need to <code>set_option pp.implicit true</code> before <code>#print eq.subst'</code></p>",
        "id": 155094669,
        "sender_full_name": "petercommand",
        "timestamp": 1547482352
    },
    {
        "content": "<p>I thought the generated program doesn't typecheck</p>",
        "id": 155094961,
        "sender_full_name": "petercommand",
        "timestamp": 1547482579
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 155271925,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1547660129
    }
]