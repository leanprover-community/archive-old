[
    {
        "content": "<p>I would really like to unify <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/order/basic.lean#L127\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/order/basic.lean#L127\"><code>order_dual</code></a> in <code>order/basic.lean</code> with <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/category_theory/opposites.lean#L35\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/category_theory/opposites.lean#L35\"><code>opposite</code></a> in <code>category_theory/opposites.lean</code>.</p>",
        "id": 163257782,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1555147958
    },
    {
        "content": "<p>They are talking about exactly the same thing, and to do presheafs and sheafs nicely I think we'll want to reflect a lot of the order structure on open sets up in category theoretic language. On the category theory side we'll be talking about <code>(opens X)\\op</code>, and it's very sad at the moment there isn't just a <code>complete_lattice</code> immediately available, precisely because <code>order_dual</code> and <code>opposite</code> are not identical.</p>",
        "id": 163257839,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1555148088
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span>, <span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span>, any ideas about how to proceed?</p>",
        "id": 163257852,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1555148120
    },
    {
        "content": "<p>That sounds difficult... You would have to have <code>preorder</code> be the same thing as <code>category</code></p>",
        "id": 163257899,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1555148175
    },
    {
        "content": "<p>Why is that?</p>",
        "id": 163257901,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1555148194
    },
    {
        "content": "<p>I was just thinking to move the definition <code>def opposite (C : Sort u₁) : Sort u₁ := C</code> (but nothing else) way down the import tree, and then search and replace <code>order_dual</code> for <code>opposite</code>.</p>",
        "id": 163257912,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1555148235
    },
    {
        "content": "<p>You could equip <code>opposite</code> with a preorder separate from its category, although you then have a diamond</p>",
        "id": 163257915,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1555148242
    },
    {
        "content": "<p>oh, I see, a diamond</p>",
        "id": 163257917,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1555148273
    },
    {
        "content": "<p>there would be two ways to get <code>category (opens X)\\op</code></p>",
        "id": 163257961,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1555148286
    },
    {
        "content": "<p>either make the opposite preorder, then build a category from that</p>",
        "id": 163257963,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1555148299
    },
    {
        "content": "<p>or make the category from the preorder, and take the opposite category</p>",
        "id": 163257965,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1555148313
    },
    {
        "content": "<p>... tedious</p>",
        "id": 163257966,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1555148324
    },
    {
        "content": "<p>if you are lucky it might be defeq</p>",
        "id": 163257967,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1555148337
    },
    {
        "content": "<p>Rather bizarrely I was experimenting with this stuff on the way home from AITP yesterday -- I decided that I could try to prove that the categories built in these two ways were equivalent -- it certainly didn't occur to me to try and make them defeq :-)</p>",
        "id": 163262143,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1555156035
    }
]