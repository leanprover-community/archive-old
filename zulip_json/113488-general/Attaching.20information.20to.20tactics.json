[
    {
        "content": "<p>I’m experimenting with some stuff, and I’d like to know if it is possible to attach arbitrary information (say a list of natural numbers) to the tactic state, so that later tactics can read it.  (I see the tactic state has some sort of user data so maybe it is possible with that.  It might also be magically possible with meta variables.)</p>",
        "id": 212199356,
        "sender_full_name": "Jason Rute",
        "timestamp": 1601774526
    },
    {
        "content": "<p>Also, I’m doing something hacky here (for proof recording), so (1) I have to use the built in tactic state instead of passing information in the usual tactic way, and (2) this isn’t something that is supposed to be PRed.</p>",
        "id": 212199468,
        "sender_full_name": "Jason Rute",
        "timestamp": 1601774777
    },
    {
        "content": "<p>This isn't exactly what you're asking for, but there are some examples of custom tactic modes linked in <a href=\"#narrow/stream/239415-metaprogramming-.2F.20tactics/topic/tactic.20modes%28.3F%29/near/210552702\">this thread</a>, including some where you can store extra data with the tactic state; in particular, <a href=\"https://github.com/leanprover-community/lean/blob/ec1613aef1eee72e601f192b16740629c6d49690/tests/lean/interactive/rb_map_ts.lean\">rb_map_ts</a> from the Lean tests seems relevant.</p>",
        "id": 212199877,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1601775495
    },
    {
        "content": "<p>Yeah, I trying to avoid that.  I want to work with the current tactics (slightly modifying some library code like <code>istep</code>).  I want to see some information about what has been run before in that proof.</p>",
        "id": 212200217,
        "sender_full_name": "Jason Rute",
        "timestamp": 1601776092
    },
    {
        "content": "<p>Actually, I think I can do it with <code>tactic.get_options</code>/<code>tactic.set_options</code>.  I can store <code>nat</code>, <code>bool</code>, or <code>string</code> associated with names.  I think that should work for my use case.  (But I still need to test it out.)</p>",
        "id": 212200227,
        "sender_full_name": "Jason Rute",
        "timestamp": 1601776140
    },
    {
        "content": "<p>Yes, that works exactly as I want.  (Or at least good enough.  I can't directly store a list, but I can make a linked list using names as pointers, or serialize a list into a string.)</p>",
        "id": 212200834,
        "sender_full_name": "Jason Rute",
        "timestamp": 1601777232
    }
]