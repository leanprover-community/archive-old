[
    {
        "content": "<p>What's the right way to declare an empty class (i.e., one with no fields) and an instance of it? I found that this works:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">class</span> <span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">unit</span>\n</pre></div>\n\n\n<p>but it seems oddly non-uniform that <code>C.mk</code> takes an explicit argument, and I'd prefer not to repeat it. I guess I could define</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">mkC</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">α</span>\n</pre></div>\n\n\n<p>but I figured I'd ask here</p>",
        "id": 125597374,
        "sender_full_name": "Reid Barton",
        "timestamp": 1524532346
    },
    {
        "content": "<p>Try</p>\n<div class=\"codehilite\"><pre><span></span>class C (α : Type) :=\n mk {} ::\ninstance : C unit := C.mk\n</pre></div>",
        "id": 125597567,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1524532738
    },
    {
        "content": "<p>That worked, thanks. Also the <code>::</code> isn't needed.</p>",
        "id": 125597691,
        "sender_full_name": "Reid Barton",
        "timestamp": 1524532925
    },
    {
        "content": "<p>(But I also don't know what it does, so maybe I am missing something?)</p>",
        "id": 125597697,
        "sender_full_name": "Reid Barton",
        "timestamp": 1524532936
    },
    {
        "content": "<p>Thanks for the tip!</p>",
        "id": 125597725,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1524533025
    },
    {
        "content": "<p>It's just a degenerate case of a notation for structure definition that allows you to pick a different name than <code>mk</code> for the constructor:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">structure</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span>\n  <span class=\"n\">my_cons</span> <span class=\"bp\">::</span>\n    <span class=\"o\">(</span><span class=\"n\">field1</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">field2</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 125597771,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1524533081
    }
]