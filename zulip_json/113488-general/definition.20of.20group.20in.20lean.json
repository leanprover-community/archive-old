[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- `left_mul g` denotes left multiplication by `g` -/</span>\n<span class=\"kd\">@[to_additive \"`left_add g` denotes left addition by `g`\"]</span>\n<span class=\"kd\">def</span> <span class=\"n\">left_mul</span> <span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">→</span> <span class=\"n\">G</span> <span class=\"bp\">→</span> <span class=\"n\">G</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"bp\">*</span> <span class=\"n\">x</span>\n</code></pre></div>\n<p>I've been trying to understand the definition of a group, and I think I'm a little confused about what the commas mean here and what <code>G -&gt; G -&gt; G</code> means. Intuitively I feel like this is a function of two elements in G</p>",
        "id": 220019850,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1608056222
    },
    {
        "content": "<p>A function of two elements producing a third, hence the three <code>G</code>s</p>",
        "id": 220020460,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608056489
    },
    {
        "content": "<p>the syntax <code>λ g, bla</code> creates a function where <code>bla</code> can depend on <code>g</code>. Functions with more than one argument are constructed by iterating lambda, meaning that you have a function that takes <code>g</code> and returns a function which takes <code>x</code> and returns <code>g * x</code></p>",
        "id": 220021059,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608056726
    },
    {
        "content": "<p>this is called <a href=\"https://en.wikipedia.org/wiki/Currying\">currying</a></p>",
        "id": 220021189,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608056765
    },
    {
        "content": "<p>OK the thing that's confusing me is the commas</p>",
        "id": 220022611,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1608057361
    },
    {
        "content": "<p><code>λ g : G, λ x : G, y</code> is the same as <code>λ (g : G) (x : G), y</code></p>",
        "id": 220022695,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608057393
    },
    {
        "content": "<p>AHHHHHHHHHHHHHH ok</p>",
        "id": 220022725,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1608057416
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"340109\">Abhishek Cherath</span> <a href=\"#narrow/stream/113488-general/topic/definition.20of.20group.20in.20lean/near/220022611\">said</a>:</p>\n<blockquote>\n<p>OK the thing that's confusing me is the commas</p>\n</blockquote>\n<p>If you are a mathematician, just read them as <code>\\mapsto</code>.</p>",
        "id": 220022727,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1608057417
    },
    {
        "content": "<p>yea i was reading it as a tuple</p>",
        "id": 220022745,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1608057431
    },
    {
        "content": "<p>ehehehe</p>",
        "id": 220022756,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1608057437
    },
    {
        "content": "<p>thanks</p>",
        "id": 220022794,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1608057459
    },
    {
        "content": "<p>another question, what's the @ doing here, also where exactly can I find syntax documentation for the community version?</p>",
        "id": 220025096,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1608058587
    },
    {
        "content": "<p><code>@[foo]</code> is an attribute, it goes immediately before a definition to annotate it for use by tactics, or in some cases call a tactic to perform some on the spot processing. In this case, <code>@[to_additive]</code> is an attribute that will make a copy of the definition (which is about multiplicative groups) that talks about additive groups instead.</p>",
        "id": 220032484,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608061821
    },
    {
        "content": "<p>If you want the complete(-ish) syntax reference, see <a href=\"https://leanprover.github.io/reference/lean_reference.pdf\">https://leanprover.github.io/reference/lean_reference.pdf</a>, which has not been significantly changed in the community edition</p>",
        "id": 220032728,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608061947
    },
    {
        "content": "<p>You can read some more documentation on <code>to_additive</code> here: <a href=\"https://leanprover-community.github.io/mathlib_docs/attributes.html#to_additive\">attr#to_additive</a></p>",
        "id": 220033602,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1608062342
    }
]