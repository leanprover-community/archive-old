[
    {
        "content": "<p>I've been trying to prove things using acc.rec, and I'm finding it difficult to deal with. Of these three lemmas, only the first compiled. Definitional equality doesn't always seem to work. I'm particularly surprised that the third lemma doesn't reduce, given that the two terms differ only by a proof with the same type.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">acc</span><span class=\"bp\">.</span><span class=\"n\">rec_1</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Sort</span> <span class=\"n\">v</span><span class=\"o\">}</span>\n<span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"n\">y</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"n\">acc</span> <span class=\"n\">r</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"n\">y</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"n\">C</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">C</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n<span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"n\">y</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">acc</span> <span class=\"n\">r</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"bp\">@</span><span class=\"n\">acc</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"n\">α</span> <span class=\"n\">r</span> <span class=\"n\">C</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"n\">acc</span><span class=\"bp\">.</span><span class=\"n\">intro</span> <span class=\"n\">b</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n<span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">y</span> <span class=\"n\">hyb</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">acc</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"n\">α</span> <span class=\"n\">r</span> <span class=\"n\">C</span> <span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"n\">y</span> <span class=\"n\">hyb</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">acc</span><span class=\"bp\">.</span><span class=\"n\">rec_2</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Sort</span> <span class=\"n\">v</span><span class=\"o\">}</span>\n<span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"n\">y</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"n\">acc</span> <span class=\"n\">r</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"n\">y</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"n\">C</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">C</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n<span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"n\">y</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">acc</span> <span class=\"n\">r</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">acc</span> <span class=\"n\">r</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"bp\">@</span><span class=\"n\">acc</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"n\">α</span> <span class=\"n\">r</span> <span class=\"n\">C</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"n\">h₁</span> <span class=\"bp\">=</span>\n<span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">y</span> <span class=\"n\">hyb</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">acc</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"n\">α</span> <span class=\"n\">r</span> <span class=\"n\">C</span> <span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"n\">y</span> <span class=\"n\">hyb</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">acc</span><span class=\"bp\">.</span><span class=\"n\">rec_3</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Sort</span> <span class=\"n\">v</span><span class=\"o\">}</span>\n<span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"n\">y</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"n\">acc</span> <span class=\"n\">r</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"n\">y</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"n\">C</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">C</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n<span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"n\">y</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">acc</span> <span class=\"n\">r</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">acc</span> <span class=\"n\">r</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"bp\">@</span><span class=\"n\">acc</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"n\">α</span> <span class=\"n\">r</span> <span class=\"n\">C</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"n\">h₁</span> <span class=\"bp\">=</span>\n<span class=\"bp\">@</span><span class=\"n\">acc</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"n\">α</span> <span class=\"n\">r</span> <span class=\"n\">C</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"n\">acc</span><span class=\"bp\">.</span><span class=\"n\">intro</span> <span class=\"n\">b</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</pre></div>",
        "id": 123928942,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1521485663
    },
    {
        "content": "<p>heh, I was just discussing how acc.rec is the root of all evil...</p>",
        "id": 123929213,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1521486027
    },
    {
        "content": "<p><code>(show acc.intro b h = h₁, from rfl) ▸ rfl</code> works for the second two proofs</p>",
        "id": 123929240,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1521486071
    },
    {
        "content": "<p>suffice it to say, yes this happens. Probably <code>congr rfl rfl</code> will also work</p>",
        "id": 123929323,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1521486179
    },
    {
        "content": "<p>Might be worth putting this in docs, since it is very weird behaviour.</p>",
        "id": 123929578,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1521486513
    },
    {
        "content": "<p>See end of section 3.7 in the reference manual: <a href=\"https://leanprover.github.io/reference/expressions.html#computation\" target=\"_blank\" title=\"https://leanprover.github.io/reference/expressions.html#computation\">https://leanprover.github.io/reference/expressions.html#computation</a></p>",
        "id": 123936259,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1521497232
    },
    {
        "content": "<p>There is a problem with definitional equality, in that there is provably no algorithm which checks to see that two things are definitionally equal!</p>",
        "id": 123936268,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1521497277
    },
    {
        "content": "<p>Lean's algorithm is an algorithm :-) so it can't be doing definitional equality correctly.</p>",
        "id": 123936316,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1521497307
    },
    {
        "content": "<p>See Mario's Masters thesis <a href=\"https://github.com/digama0/lean-type-theory/releases/download/v0.1/main.pdf\" target=\"_blank\" title=\"https://github.com/digama0/lean-type-theory/releases/download/v0.1/main.pdf\">https://github.com/digama0/lean-type-theory/releases/download/v0.1/main.pdf</a> for some more info -- section 3.1.</p>",
        "id": 123936399,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1521497510
    }
]