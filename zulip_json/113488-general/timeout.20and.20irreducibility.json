[
    {
        "content": "<p>I don't have much time for careful Zulip reading those days. Could someone write a summary of what has been learned about slow elaboration and also about irreducible definitions? Are there approximate rules one could list?</p>",
        "id": 166038456,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1558297134
    },
    {
        "content": "<p>We should be better about sealing off definitions by marking them as irreducible after the interface is finished. Irreducible doesn't mean completely opaque, you can always explicitly unfold it. But we're finding slow proofs that are caused by the elaborator doing way too much unfolding. If you run into a proof that seems like it should be fast, but isn't, see if tagging something as irreducible helps it along. This can show up especially when using tactics like <code>assumption</code>, which try to unify lots of things with the goal and depend on that failing quickly.</p>",
        "id": 166040086,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1558299720
    },
    {
        "content": "<p>I remember a while ago when people decided that the reals were better off irreducible, and I was thinking \"yeah, I mean, do I even care if they're Cauchy sequences of rationals or Dedekind cuts? Why would anyone ever care about that ever?\". Is it the same sort of phenomenon?</p>",
        "id": 166040166,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1558299838
    },
    {
        "content": "<p>Yes, it's exactly that.</p>",
        "id": 166040216,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1558299856
    },
    {
        "content": "<p>For some things, the definitional reduction is useful and shouldn't be hidden.</p>",
        "id": 166040220,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1558299877
    },
    {
        "content": "<p>But lots of things have an interface that, once it's there, removes the need to know how the thing is actually defined.</p>",
        "id": 166040238,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1558299904
    },
    {
        "content": "<p>And we still mark things as irreducible when we do care about the definition (we care that exp is a power series), because I guess we don't care about it often enough, and there's an equation lemma we can still use.</p>",
        "id": 166040508,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1558300322
    },
    {
        "content": "<p>Would it make sense to mark <code>polynomial</code> and <code>mv_polynomial</code> as irreducible? Would that speed up things that use them?</p>",
        "id": 166845917,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1559156381
    },
    {
        "content": "<p>I don't understand enough about <code>irreducible</code> to even make an educated guess of whether this would be a reasonable move.</p>",
        "id": 166846035,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1559156411
    },
    {
        "content": "<p>(Btw... I've written <code>coeff</code> for <code>mv_polynomial</code>, I'll PR it soonish. That should help having a good API for <code>mv_polynomial</code> if we indeed make it irreducible.)</p>",
        "id": 166846132,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1559156466
    },
    {
        "content": "<p>I think probably not but possibly. I think the main reason they are slow is because of type class inference. I would do it anyway though, since they shouldn't really be unfolded.</p>",
        "id": 166846141,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1559156474
    }
]