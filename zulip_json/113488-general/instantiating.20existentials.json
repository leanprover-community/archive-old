[
    {
        "content": "<p>If I have a hypothesis <code>h : \\exists (a : A) (b : B), (P a b)</code>, how do I get <code>a</code> <code>b</code> and <code>P a b</code> into the context?  <code>cases h</code> works kinda, but it plucks off the arguments one at a time and loses their parameter names.</p>",
        "id": 211623804,
        "sender_full_name": "Hunter Freyer",
        "timestamp": 1601387709
    },
    {
        "content": "<p><code>obtain ⟨a, b, hP⟩ := h</code></p>",
        "id": 211623990,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1601387765
    },
    {
        "content": "<p>phew, alright! Thanks! How does one find out about these tactics without harassing you helpful people??</p>",
        "id": 211624501,
        "sender_full_name": "Hunter Freyer",
        "timestamp": 1601387977
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#obtain\">https://leanprover-community.github.io/mathlib_docs/tactics.html#obtain</a></p>",
        "id": 211624788,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1601388079
    },
    {
        "content": "<p>Hunter, did you explore <a href=\"https://leanprover-community.github.io/learn.html\">this webpage</a>?</p>",
        "id": 211625401,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601388337
    },
    {
        "content": "<p>Some of it, yes, but it's a bit of a \"kitchen sink\" of docs so it's hard to know how deep to dig into each doc...</p>",
        "id": 211626272,
        "sender_full_name": "Hunter Freyer",
        "timestamp": 1601388693
    },
    {
        "content": "<p>I hadn't seen the mathlib tactics docs, that should be helpful.</p>",
        "id": 211626300,
        "sender_full_name": "Hunter Freyer",
        "timestamp": 1601388707
    },
    {
        "content": "<p>The answer to your question is in the tutorial project for instance.</p>",
        "id": 211626371,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601388726
    },
    {
        "content": "<p>aha, I'd sort of glossed over that because it takes a very number-theory/equality-based style, when I'm doing more of a dependent-types/inductive-data style, so last time I looked it wasn't so useful. But I should remember to consult that again in the future</p>",
        "id": 211626662,
        "sender_full_name": "Hunter Freyer",
        "timestamp": 1601388868
    },
    {
        "content": "<p>Number theory? <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> did you read that?</p>",
        "id": 211627825,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601389416
    },
    {
        "content": "<p>Anyway, you seem to be a computer scientist, so the good resource for your is probably <a href=\"https://github.com/blanchette/logical_verification_2020/raw/master/hitchhikers_guide.pdf\">https://github.com/blanchette/logical_verification_2020/raw/master/hitchhikers_guide.pdf</a></p>",
        "id": 211627954,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601389463
    },
    {
        "content": "<p>all that topological ring theory must have converted you</p>",
        "id": 211628257,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1601389577
    }
]