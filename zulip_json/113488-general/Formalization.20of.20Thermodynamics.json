[
    {
        "content": "<p>I have formalized some of the bases of thermodynamics with Lean. You can see it on <a href=\"https://github.com/Youjack/thermodynamics.lean\">Github</a>.</p>\n<p>The main goal of the project is to precisely state the axioms that are essential to building up the thermodynamics we want. The stuff I have already formalized can be summarized as</p>\n<ul>\n<li>The zeroth law</li>\n<li>Thermodynamic cycles and the first law</li>\n<li>Kelvin-Plank statement, Clausius statement, and Carnot theorem</li>\n<li>The construction of thermodynamic temperature</li>\n</ul>\n<p>Is there anybody interested in this? This is actually my first project in both formalization and Lean. Any suggestion of improving my code will be valuable to me.</p>",
        "id": 305304665,
        "sender_full_name": "Youjack",
        "timestamp": 1666341612
    },
    {
        "content": "<p>Are you aware of <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/Formalizing.20Chemical.20Theory\">#general &gt; Formalizing Chemical Theory</a> and <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/Formalizing.20Chemical.20Theory.20.20pt.2E.202\">#general &gt; Formalizing Chemical Theory  pt. 2</a> ?  Seems very similar in spirit.</p>",
        "id": 305312670,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666344583
    },
    {
        "content": "<p>Conversely, <span class=\"user-mention\" data-user-id=\"424214\">@Tyler Josephson ⚛️</span> and <span class=\"user-mention\" data-user-id=\"474115\">@Max Bobbin</span> would be interested in your work on Thermodynamics in Lean.</p>",
        "id": 305313516,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666344952
    },
    {
        "content": "<p>I haven’t really thought how to formalize science, but adding axioms doesn’t seem like a good approach.  Either you are really just defining something, in which that is why Lean has definitions, or you are opening your system up to be inconsistent.  Maybe someone who has thought about this more can chime in.</p>",
        "id": 305315819,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666345861
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"115715\">Jason Rute</span> <a href=\"#narrow/stream/113488-general/topic/Formalization.20of.20Thermodynamics/near/305315819\">said</a>:</p>\n<blockquote>\n<p>I haven’t really thought how to formalize science, but adding axioms doesn’t seem like a good approach.  Either you are really just defining something, in which that is why Lean has definitions, or you are opening your system up to be inconsistent.  Maybe someone who has thought about this more can chime in.</p>\n</blockquote>\n<p>I think he means \"axioms\" in the sense that we might talk about the \"axioms\" of a ring. Looking briefly at the Lean code that seems to be the way it is setup, there is a <code>structure</code> called <code>cycle</code> for instance which is a function satisfying some properties that have something to do with the first law of thermodynamics.</p>",
        "id": 305317941,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1666346726
    },
    {
        "content": "<p>I'm definitely interested in thermodynamics but I haven't done anything yet. At some point I would like to formalize/automate computations in the book <a href=\"https://www.degruyter.com/document/doi/10.1515/9783110350951/html?lang=en\">Multi Scale Thermodynamics</a>. For that I might find your formalization of basic thermodynamics useful.</p>",
        "id": 305319974,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1666347540
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110044\">Chris Hughes</span> <a href=\"#narrow/stream/113488-general/topic/Formalization.20of.20Thermodynamics/near/305317941\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"115715\">Jason Rute</span> <a href=\"#narrow/stream/113488-general/topic/Formalization.20of.20Thermodynamics/near/305315819\">said</a>:</p>\n<blockquote>\n<p>I haven’t really thought how to formalize science, but adding axioms doesn’t seem like a good approach.  Either you are really just defining something, in which that is why Lean has definitions, or you are opening your system up to be inconsistent.  Maybe someone who has thought about this more can chime in.</p>\n</blockquote>\n<p>I think he means \"axioms\" in the sense that we might talk about the \"axioms\" of a ring. Looking briefly at the Lean code that seems to be the way it is setup, there is a <code>structure</code> called <code>cycle</code> for instance which is a function satisfying some properties that have something to do with the first law of thermodynamics.</p>\n</blockquote>\n<p>I’m referring to their use of the axiom keyword, e.g. <a href=\"https://github.com/Youjack/thermodynamics.lean/blob/4af0748a97e6cb89aef0c87425872d1a901e8c55/src/zeroth_law.lean#L30\">https://github.com/Youjack/thermodynamics.lean/blob/4af0748a97e6cb89aef0c87425872d1a901e8c55/src/zeroth_law.lean#L30</a></p>",
        "id": 305327575,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666350385
    },
    {
        "content": "<p>Here is a good example: The definition of <a href=\"https://github.com/Youjack/thermodynamics.lean/blob/4af0748a97e6cb89aef0c87425872d1a901e8c55/src/second_law.lean#L37\"><code>possible</code> cycle</a> is given as a constant and a list of axioms.  Instead it can be rewritten as an inductively defined prop, without constant or axioms.</p>",
        "id": 305332928,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666352337
    },
    {
        "content": "<p>For example, look at the definition of even and odd given in <a href=\"https://leanprover.github.io/theorem_proving_in_lean/inductive_types.html#mutual-and-nested-inductive-types\">TPiL</a>.  (You don’t need the mutual inductive in your case.  A regular <code>inductive</code> will do since you are just defining one inductive definition.)</p>",
        "id": 305333887,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666352706
    },
    {
        "content": "<p>Another common use case of axioms in this library is <a href=\"https://github.com/Youjack/thermodynamics.lean/blob/4af0748a97e6cb89aef0c87425872d1a901e8c55/src/second_law.lean#L92\">asserting that something exists</a> just to prove something else exists.  It seems that replacing the axiom with a variable would be better.  (If you use a variable, it behaves like an axiom in the section, but the theorem adds that as an assumption.)  If writing that assumption every time seems too long, you could make a definition for the statement, then the assumption would be something like <code>(exists_possible : exists_possible_stmt)</code>.  Alternately, taking inspiration from the “axioms” of groups or the “axioms” of geometry, you can probably use a <code>structure</code> (or <code>class</code>) to package axioms.</p>",
        "id": 305336536,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666353543
    },
    {
        "content": "<p>Another alternative to all these existence theorems would be to just make a function which takes in, say, an <code>usual_engine_cycle</code> And a proof it is possible, and outputs a usual_engine_cycle with the property you want.  Then you can have a corresponding theorem stating the output of this function has this property.  But this gets into library design, which others here have much more experience with than me.</p>",
        "id": 305340313,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666354689
    },
    {
        "content": "<p>The constant <a href=\"https://github.com/Youjack/thermodynamics.lean/blob/4af0748a97e6cb89aef0c87425872d1a901e8c55/src/zeroth_law.lean#L22\"><code>equil_system</code></a> can again be rewritten as an inductive type with one constructor <code>water_triple_point</code>.  (Constants are just as bad as axioms.)</p>",
        "id": 305341817,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666355242
    },
    {
        "content": "<p>Rather than have an axiomatically defined canonical <code>mutual_equiv</code>quasi linear order (or whatever a linear order without anti-symmetry  is called), you can just have an <code>mutual_equiv</code> structure or class.  (This is like having a structure for a group instead of axiomatically fixing a single canvonival group.)</p>",
        "id": 305344593,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666356073
    },
    {
        "content": "<p>Also I’m pretty sure your equiv_system axioms aren’t correct.  You say transitivity in the comments, but you axiomitize equivalence so it also has symmetry, which means the quotient is going to be a set where the relation is removed.  Further, by axiomitizing a linear order instance, you don’t even state how the linear order has anything to do with the set (and this is likely a mistake since you want the linear order to be related to the transitive relation, right?)  This is where axioms can get you into trouble. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 305346144,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666356594
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"115715\">@Jason Rute</span> thank you for your advice.</p>\n<p>I state the first law of thermodynamics as a field in the structure <code>cycle</code>, as <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span>  said. But the other laws are stated as <code>axiom</code>s. I agree that adding axioms may result in inconsistency, and stating all those axioms as definitions or variables may be a more appropriate approach. I will consider this later. But I would like to justify the use of <code>axiom</code>a little bit.</p>\n<p>I think formalizing a physical theory can have two layers of meaning. One is like formalizing special relativity by defining the spacetime as four dimensional Minkowski space, and then derive theorems from this definition. The other is like deriving the Minkowski space from the principle of relativity and the invariance of the speed of light. I think the former approach is more suitable for writing a library for practical use, and the later approach is more suitable for academic purposes. And what I am doing to formalize thermodynamics is like the later approach. I use <code>axiom</code>s as global <code>variables</code>, expect them to hold across the library, and want to know what theorems can these axioms deduce. And these theorems could be restated as definitions in another library which is designed to be of practical use.</p>",
        "id": 305349408,
        "sender_full_name": "Youjack",
        "timestamp": 1666357583
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"115715\">Jason Rute</span> <a href=\"#narrow/stream/113488-general/topic/Formalization.20of.20Thermodynamics/near/305346144\">said</a>:</p>\n<blockquote>\n<p>Also I’m pretty sure your equiv_system axioms aren’t correct.  You say transitivity in the comments, but you axiomitize equivalence so it also has symmetry, which means the quotient is going to be a set where the relation is removed.  Further, by axiomitizing a linear order instance, you don’t even state how the linear order has anything to do with the set (and this is likely a mistake since you want the linear order to be related to the transitive relation, right?)  This is where axioms can get you into trouble. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>No, <code>mutual_equil</code> is certainly an equivalence relation. The zeroth law of thermodynamics can be stated as if system A and system B are in mutual equilibrium, and system B and system C are also in mutual equilibrium, then system A and system C will be in mutual equlibrium. This is the transitivity of \"mutual equilibrium\". But reflexivity and symmetry are also wanted for such a relation, though not stated explicitly in the zeroth law.</p>\n<p>I think many physics theories have such implicit hypotheses, and part of my job is to state them explicitly. In fact, axioms like <code>usual_engine_cycle.exists_possible</code> in my code are of this kind.</p>",
        "id": 305371591,
        "sender_full_name": "Youjack",
        "timestamp": 1666363472
    },
    {
        "content": "<p>Good to meet a fellow thermodynamics enthusiast on Zulip! As Jason mentioned, we've been posting our proofs and manuscript draft here on Zulip  - the arxiv-ready version will be coming today, as we've gotten this ready to submit!</p>",
        "id": 305373738,
        "sender_full_name": "Tyler Josephson ⚛️",
        "timestamp": 1666364068
    },
    {
        "content": "<p>Also as Jason mentioned, definitions, structures, and classes are good ways to start holding information about physical systems and encoding relationships between scientific concepts - something we learned as we've been exploring the formalization of science.</p>",
        "id": 305373840,
        "sender_full_name": "Tyler Josephson ⚛️",
        "timestamp": 1666364094
    },
    {
        "content": "<p>Philosophically, what should formalization of science look like? I think there are two paradigms here:<br>\nFirst is Hilbert's 6th problem: can physics (or science) be axiomatized? The idea is to write down axioms for physics like we have axioms for math, and then derive the rest of physics from that. This sounds like how you're thinking about it - it's an approach that many have worked on over the years, but is still an unsolved problems.<br>\nBut second is to think of scientific theory as a collection of proofs (see attached paper). In this paradigm, you're not so much concerned about precisely nailing down the axioms that will hold true forever, but instead simply writing valid proofs, and organizing them into a collection. Another way to frame this is a \"model-oriented\" formalization - scientists and engineers pose models to describe parts of the world, and they aren't concerned if two models are inconsistent with each other. Each model can be proved to rigorously follow from its specification. We can build up scientific theories without waiting for a \"grand unified theory\" to hold everything together. If the axiomatization project is successful in the future, such auxilliary theories could be associated with the \"grand\" one, but in the meantime, we can move forward without defining those axioms.</p>\n<p><a href=\"/user_uploads/3121/_VezYwddwbT6vwdeRsHaO73Y/Paleo-2012-Physics-and-proof-theory.pdf\">Paleo-2012-Physics-and-proof-theory.pdf</a></p>",
        "id": 305375916,
        "sender_full_name": "Tyler Josephson ⚛️",
        "timestamp": 1666364732
    },
    {
        "content": "<p>Good point <span class=\"user-mention\" data-user-id=\"424214\">@Tyler Josephson ⚛️</span> .  Although one thing I'd add to that this topic isn't specific to physics.  For example, how does one in Lean follow say Euclid's axioms of mathematics (ok, maybe that isn't a great example, but there are further formalizations of Euclid which are purely symbolic)?  I can see a number of approaches both using and not using Lean's <code>axiom</code>:</p>\n<ul>\n<li>Using <code>constant</code> and <code>axiom</code>:<ul>\n<li>add the axioms as Lean <code>axiom</code>s and <code>constants</code> whenever they come up</li>\n<li>package the axioms as an \"axiom system\" structure/class, and then use Lean's <code>axiom</code> to assert the existence of a canonical axiom system.  (This has the advantage of keeping the axioms more organized, but it is harder to add new axioms in a gradual way doing this, compared to where each axiom is a separate Lean <code>axiom</code>) </li>\n</ul>\n</li>\n<li>Avoiding using <code>constant</code> and <code>axiom</code>:<ul>\n<li>just use the axioms as assumptions in each theorem (possibly by naming the assumptions, or using local variables to make them easier to work with).</li>\n<li>package the axioms as an \"axiom system\" structure/class and then work within that structure (like working within the theory of groups)</li>\n<li>package the axioms as an \"axiom system\" structure/class, prove they are consistent by showing that the structure has at least one example, and then use choice to choose a canonical version.  (This behaves like the second option using Lean's <code>axiom</code>, but replaces Lean's <code>axiom</code> with Lean's <code>choice</code>.  Since you use <code>choice</code>, you can only use the axioms, and nothing about the particular example given.</li>\n</ul>\n</li>\n</ul>",
        "id": 305391347,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666368178
    },
    {
        "content": "<p>I don't see why you would need choice in the last case. Can't you just write down a model?</p>",
        "id": 305394213,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666368990
    },
    {
        "content": "<p>But then you would have available to use the particulars of that model which maybe isn't what you want.  I guess you could make it irreducible or something, but I wanted to capture the purity of just using the axioms that the OP is looking for.</p>",
        "id": 305394511,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666369094
    },
    {
        "content": "<p>For example, maybe your model is the most trivial example where there is only one element in the whole system or something like that.  You don't want to accidentally use that fact to prove later theorems.</p>",
        "id": 305394913,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666369209
    },
    {
        "content": "<p>Ah sure, but using <code>classical.some</code> is even worse! because you're using a particular and don't know which. Probably what you want is make it a local instance.</p>",
        "id": 305394973,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666369231
    },
    {
        "content": "<p>But most likely I expect that there's only one model if you give enough parameters to the typeclass.</p>",
        "id": 305395066,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666369272
    },
    {
        "content": "<p>Many thanks to <span class=\"user-mention\" data-user-id=\"115715\">@Jason Rute</span> and <span class=\"user-mention\" data-user-id=\"424214\">@Tyler Josephson ⚛️</span> .</p>\n<p>I think I still have a lot to learn about formalizing and axiomatizing physics. I will reconsider the goal of my project and may rewrite some code.</p>",
        "id": 305484061,
        "sender_full_name": "Youjack",
        "timestamp": 1666415551
    }
]