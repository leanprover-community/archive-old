[
    {
        "content": "<p><a href=\"https://github.com/jasonrute/annotated_lean\" title=\"https://github.com/jasonrute/annotated_lean\">I made a project which annotates Lean files</a> with all of the information from the Lean server shown graphically for every file in Lean core init and mathlib.</p>\n<p><a href=\"/user_uploads/3121/e2N_zfIuDELBESK1rskK6t9q/Screen-Shot-2020-04-28-at-8.04.08-AM.png\" title=\"Screen-Shot-2020-04-28-at-8.04.08-AM.png\">Screen-Shot-2020-04-28-at-8.04.08-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/e2N_zfIuDELBESK1rskK6t9q/Screen-Shot-2020-04-28-at-8.04.08-AM.png\" title=\"Screen-Shot-2020-04-28-at-8.04.08-AM.png\"><img src=\"/user_uploads/3121/e2N_zfIuDELBESK1rskK6t9q/Screen-Shot-2020-04-28-at-8.04.08-AM.png\"></a></div>",
        "id": 195553127,
        "sender_full_name": "Jason Rute",
        "timestamp": 1588075534
    },
    {
        "content": "<p>I don't know that this is of interest to anyone, but I made it as a way to debug the information I was extracting from the Lean server in <a href=\"https://github.com/jasonrute/lean_info_scrapper\" title=\"https://github.com/jasonrute/lean_info_scrapper\">this project</a>.</p>",
        "id": 195553316,
        "sender_full_name": "Jason Rute",
        "timestamp": 1588075627
    },
    {
        "content": "<p>If you are interested in using the Lean server programmatically (for example, through the new <a href=\"https://github.com/leanprover-community/lean-client-python\" title=\"https://github.com/leanprover-community/lean-client-python\">Lean client for Python</a>) it is an easy way to see what information is available (and how messy it is).</p>",
        "id": 195553519,
        "sender_full_name": "Jason Rute",
        "timestamp": 1588075724
    },
    {
        "content": "<p>This isn't meant to compete with useful tools like <a href=\"https://github.com/leanprover-community/format_lean\" title=\"https://github.com/leanprover-community/format_lean\">Format Lean</a>.</p>",
        "id": 195553755,
        "sender_full_name": "Jason Rute",
        "timestamp": 1588075883
    },
    {
        "content": "<p>I did find a weird quirk.  Sometimes the last letter in a projection (if I'm using the right term) doesn't have any information.  I don't know that this matters for vs code, but it is worth mentioning.  For example, here is an example in <a href=\"https://htmlpreview.github.io/?https://github.com/jasonrute/annotated_lean/blob/master/html/algebra__archimedean.html\" title=\"https://htmlpreview.github.io/?https://github.com/jasonrute/annotated_lean/blob/master/html/algebra__archimedean.html\">algebra/archimedean.lean</a>.<br>\n<a href=\"/user_uploads/3121/7VrDNHuh6aGapmmoSGdmRnjF/Screen-Shot-2020-04-28-at-8.18.57-AM.png\" title=\"Screen-Shot-2020-04-28-at-8.18.57-AM.png\">Screen-Shot-2020-04-28-at-8.18.57-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/7VrDNHuh6aGapmmoSGdmRnjF/Screen-Shot-2020-04-28-at-8.18.57-AM.png\" title=\"Screen-Shot-2020-04-28-at-8.18.57-AM.png\"><img src=\"/user_uploads/3121/7VrDNHuh6aGapmmoSGdmRnjF/Screen-Shot-2020-04-28-at-8.18.57-AM.png\"></a></div>",
        "id": 195554640,
        "sender_full_name": "Jason Rute",
        "timestamp": 1588076375
    },
    {
        "content": "<p>I'm curious what that looks like if you throw some unicode in there</p>",
        "id": 195554940,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588076538
    },
    {
        "content": "<p>What do you mean?  If you have a file in mind, you can look at <a href=\"https://github.com/jasonrute/annotated_lean/blob/master/index.md\" title=\"https://github.com/jasonrute/annotated_lean/blob/master/index.md\">them all here</a>.  Many of the unicode characters show up.  Some with better fixed width than others.  (Fonts are hard!)</p>",
        "id": 195555154,
        "sender_full_name": "Jason Rute",
        "timestamp": 1588076652
    },
    {
        "content": "<p>I was thinking more of mocking up a small test file, rather than looking for good examples in mathlib</p>",
        "id": 195555309,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588076749
    },
    {
        "content": "<p>I am wondering if it is still off by 1 character if the name of the projection has a unicode character in it</p>",
        "id": 195555399,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588076791
    },
    {
        "content": "<p>because this is probably an off by one error in the accounting</p>",
        "id": 195555425,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588076808
    },
    {
        "content": "<p>I don't think mathlib has any projections with unicode names</p>",
        "id": 195555497,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588076852
    },
    {
        "content": "<p>Oh, I see.</p>",
        "id": 195555517,
        "sender_full_name": "Jason Rute",
        "timestamp": 1588076863
    },
    {
        "content": "<p>actually <code>.\\alpha</code> might be in use somewhere</p>",
        "id": 195555598,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588076885
    },
    {
        "content": "<p>Also it isn't always that way.  If you look at <a href=\"https://htmlpreview.github.io/?https://github.com/jasonrute/annotated_lean/blob/master/html/algebra__archimedean.html\" title=\"https://htmlpreview.github.io/?https://github.com/jasonrute/annotated_lean/blob/master/html/algebra__archimedean.html\">algebra/archimedean.lean</a>, you will see that sometimes the final p in <code>.imp</code> is missing information and sometimes it is not.</p>",
        "id": 195555709,
        "sender_full_name": "Jason Rute",
        "timestamp": 1588076949
    },
    {
        "content": "<p>Also, for those that just want to browse, if you hover over the annotations, you can see the information they display.  (I used pp.all=true for the data by the way).<br>\n<a href=\"/user_uploads/3121/BN3NC8RsQ-nytepFro1Y5xID/Screen-Shot-2020-04-28-at-8.31.51-AM.png\" title=\"Screen-Shot-2020-04-28-at-8.31.51-AM.png\">Screen-Shot-2020-04-28-at-8.31.51-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/BN3NC8RsQ-nytepFro1Y5xID/Screen-Shot-2020-04-28-at-8.31.51-AM.png\" title=\"Screen-Shot-2020-04-28-at-8.31.51-AM.png\"><img src=\"/user_uploads/3121/BN3NC8RsQ-nytepFro1Y5xID/Screen-Shot-2020-04-28-at-8.31.51-AM.png\"></a></div>",
        "id": 195556120,
        "sender_full_name": "Jason Rute",
        "timestamp": 1588077177
    },
    {
        "content": "<p>I notice also in algebra/archimedean.lean that all the spans are messed up on L85-90</p>",
        "id": 195557016,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588077633
    },
    {
        "content": "<p>how so?</p>",
        "id": 195557543,
        "sender_full_name": "Jason Rute",
        "timestamp": 1588077895
    },
    {
        "content": "<p>besides all being useless things talking about the <code>exact</code> tactic, they are mostly pointing at whitespace</p>",
        "id": 195557603,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588077929
    },
    {
        "content": "<p>This is a nice project! At some point I think we should have a way to produce the <a href=\"https://leanprover-community.github.io/mathlib_docs/\" title=\"https://leanprover-community.github.io/mathlib_docs/\">API docs</a> including the full annotated source (hidden by default of course).</p>",
        "id": 195557632,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588077948
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> This is a quite common occurrence.  The behavior seems to be that if it is inside of a tactic parser (terminology?) for, say, the exact tactic.  Then every character which is not associated with something else is coded for that tactic.  Since this is designed as a language server, I don't know if this enables certain behavior in vs code and emacs or if it is a bug.</p>",
        "id": 195558098,
        "sender_full_name": "Jason Rute",
        "timestamp": 1588078160
    },
    {
        "content": "<p>It even gets weirder when you have tactics inside tactics inside terms inside tactics. <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 195558203,
        "sender_full_name": "Jason Rute",
        "timestamp": 1588078203
    },
    {
        "content": "<p>I expect that you are the first person to try to visualize the data like this, and doubtless you will find many bugs</p>",
        "id": 195558219,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588078212
    },
    {
        "content": "<p>We should ping <span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span> who seems to be related to Lean 4 server mode.</p>",
        "id": 195558490,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588078360
    },
    {
        "content": "<p>don't worry, i read pretty much everything on here! unfortunately i can't exactly say much about the server mode yet since i'm still working on getting the necessary glue code in place to get some very basic functionality (ideally so i can at least transition from emacs to vscode ...)</p>",
        "id": 195558761,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1588078504
    }
]