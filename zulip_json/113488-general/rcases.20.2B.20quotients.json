[
    {
        "content": "<p>I just saw this a moment ago but I think this commit by Johannes needs to be advertised: <a href=\"https://github.com/leanprover/mathlib/commit/5613d2ecc92ce8fae9555745bd94756dec61a323\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/commit/5613d2ecc92ce8fae9555745bd94756dec61a323\">https://github.com/leanprover/mathlib/commit/5613d2ecc92ce8fae9555745bd94756dec61a323</a></p>",
        "id": 133602376,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536486312
    },
    {
        "content": "<p>I look at that commit and I see (1) a commit (2) a title which I don't quite understand and no examples (3) 11 changed files so it's very difficult for me to see the wood from the trees. I find this with many commits to be honest -- things have changed a bit, I don't really know what has happened, I don't have time to look in detail and don't even know whether I will understand what I find. So many commits happen and I get emails about them all but this is not a viable system for me, I need something more digestible. I propose a new thread \"this week's commits in mathlib\" in the #maths stream, where people can summarise things which they think the community might find useful. I'm not suggesting that people should post to this thread when they make a commit -- on the contrary -- in fact I think I'm suggesting that every few days when I delete a bunch more emails I post myself to the thread trying to summarise what happened and then people who know better correct me. Do you think this sounds workable? I don't see any harm in trying.</p>",
        "id": 133604475,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536490546
    },
    {
        "content": "<p>In this case most of those changed files are the examples. I was going to copy an example diff here, but it was hard to find one which would be immediately understandable without context. The basic idea is that you can use <code>rcases</code> (instead of <code>quot.induction_on</code> and its variants) to extract a representative from a value of a quotient type (as long as you're proving a Prop).<br>\nI do agree that some kind of periodical \"what's new\" announcements would be great to have--maybe not restricted to mathlib, but also other projects going on in the community like perfectoid spaces.</p>",
        "id": 133604818,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536491286
    },
    {
        "content": "<p>In this case I hoped it would be enough to just look into the changes to the documentation. The idea is very simple: We see quotient types as type you can do cases on, like datatypes. A quotient types only stores one element from the base type, this is what you match on.</p>\n<p>Now instead of writing:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">assume</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"k\">assume</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">...</span>\n</pre></div>\n\n\n<p>you just write</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">by</span> <span class=\"n\">rintro</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"bp\">⟩;</span> <span class=\"n\">exact</span> <span class=\"bp\">...</span>\n</pre></div>\n\n\n<p>(or even shorter if you stay in tactic mode.</p>\n<p>The biggest difference to usual the usual case on datatypes is that this only works in proofs.</p>",
        "id": 133605832,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1536493558
    },
    {
        "content": "<p>And of course it gets much more important when you have multiple variables:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">assume</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">x</span> <span class=\"err\">$</span> <span class=\"k\">assume</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">y</span> <span class=\"err\">$</span> <span class=\"k\">assume</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">z</span> <span class=\"err\">$</span> <span class=\"k\">assume</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"bp\">...</span>\n</pre></div>\n\n\n<p>is just</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">by</span> <span class=\"n\">rintro</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">b</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">c</span><span class=\"bp\">⟩;</span> <span class=\"n\">exact</span> <span class=\"bp\">...</span>\n</pre></div>",
        "id": 133605888,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1536493630
    },
    {
        "content": "<p>I'm sure it's easy to find out what's going on if you know where to look. One issue with the system is that whilst I get email notifications for all PR's, I don't think I get notifications when you or Mario make commits (and if memory serves I think I raised this issue before and I don't think anyone knew how to make this happen). So in practice I find these things easy to miss. </p>\n<p>Thanks for the summary Johannes!</p>",
        "id": 133605932,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536493701
    },
    {
        "content": "<p>Hm, yeah direct commits are hard to follow. The announcement channel you just started is a good idea, I will try to announce stuff there.</p>",
        "id": 133606111,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1536493992
    },
    {
        "content": "<p>Let's see how it goes. Reid's comment about perfectoids made me realise that I am not the only one who realises that they can't see the big picture. There has been no chat in the perfectoid stream for a while but all my recent work on Noetherian stuff is all related and I didn't even mention that my first non-trivial PR had been accepted because currently the direct link to the perfectoid stuff is weak -- what we are aiming for is integral closure of a ring and there's still some way to go.</p>",
        "id": 133606375,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536494416
    },
    {
        "content": "<p>Re email notifications, RSS has basically emerged as a standard for this kind of thing. I have an RSS reader installed in my browser, and just about every website offers RSS, including github projects. There are also RSS to email services available on the internet</p>",
        "id": 133617771,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1536512174
    }
]