[
    {
        "content": "<p>I have the following problem. I would like to recognise the type <code>set X</code> by pattern matching in some tactic, like</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">private</span> <span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">analyse_expr_step</span>  <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">string</span> <span class=\"o\">:=</span>\n<span class=\"k\">match</span> <span class=\"n\">e</span> <span class=\"k\">with</span>\n<span class=\"bp\">|</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"err\">%%</span><span class=\"n\">X</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>But since I am in a tactic.interactive namespace, Lean thinks that <code>set</code>is the tactic <code>tactic.interactive set</code>. How can I refer to plain <code>set</code>in a tactic.interactive namespace ??</p>",
        "id": 201316992,
        "sender_full_name": "Frédéric Le Roux",
        "timestamp": 1592509699
    },
    {
        "content": "<p><code>_root_.set</code></p>",
        "id": 201317181,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1592509788
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 201318422,
        "sender_full_name": "Frédéric Le Roux",
        "timestamp": 1592510313
    },
    {
        "content": "<p>What do people think of editing the error reporting for ambiguous overload in lean now to print the <code>_root_</code> namespace? I've also forgotten this many times and don't see any reason not to do this.</p>",
        "id": 201319748,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1592510937
    }
]