[
    {
        "content": "<p>Can I not have tensor products in ring theory and tensor products in monoidal categories at the same time?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.noetherian</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.category.Module.monoidal</span>\n\n<span class=\"c1\">-- uncommenting the next line fixes something and breaks something else</span>\n<span class=\"c1\">-- open_locale tensor_product</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">N</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">N</span><span class=\"o\">]</span>\n\n<span class=\"c1\">-- works iff locale open</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">fg_of_pseudoinvertible</span> <span class=\"o\">:</span>\n  <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"n\">linear_equiv</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">‚äó</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">submodule.fg</span> <span class=\"o\">(</span><span class=\"bp\">‚ä§</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n\n<span class=\"c1\">-- works iff locale not open</span>\n<span class=\"kd\">def</span> <span class=\"n\">pseudoinvertible</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">Module.</span><span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">‚àÉ</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">‚äó</span> <span class=\"n\">B</span> <span class=\"bp\">‚âÖ</span> <span class=\"mi\">ùüô</span><span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">Module</span> <span class=\"n\">R</span><span class=\"o\">))</span>\n</code></pre></div>\n<p>I can live without not being allowed both, I was just a bit surprised.</p>",
        "id": 247962490,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1627933610
    },
    {
        "content": "<p><code>category_theory.monoidal.category</code> redefines the notation, which is probably the issue</p>",
        "id": 247964624,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1627934722
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> why do you need both? The (monoidal) tensor product in <code>Module R</code> is the usual tensor product.</p>",
        "id": 247964896,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1627934866
    },
    {
        "content": "<p>Because I was experimenting?</p>",
        "id": 247964961,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1627934884
    },
    {
        "content": "<p>You can always create a tiny section around each lemma and open the locale within than section</p>",
        "id": 247965041,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627934940
    },
    {
        "content": "<p>Or use the non-notation spelling for one of them</p>",
        "id": 247965077,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627934963
    },
    {
        "content": "<p>Notation overloading is supposed to be better in lean4, right?</p>",
        "id": 247965257,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1627935058
    },
    {
        "content": "<p>There is no locale for the monoidal one, and they have different binding powers too!</p>",
        "id": 247965441,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1627935158
    }
]