[
    {
        "content": "<p>Another small patch release that fixes a segfault and an endless loop, and adds some very uncontroversial features.</p>\n<p>Features:</p>\n<ul>\n<li>Add comment-like string blocks (<a href=\"https://github.com/leanprover-community/lean/issues/352\">lean#352</a>)</li>\n<li>Add widgets to trace messages (<a href=\"https://github.com/leanprover-community/lean/issues/355\">lean#355</a>)</li>\n<li>Show case tags in goal widget (<a href=\"https://github.com/leanprover-community/lean/issues/357\">lean#357</a>)</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>Handle exceptions in <code>ts_clone</code> (<a href=\"https://github.com/leanprover-community/lean/issues/350\">lean#350</a>)</li>\n<li>Support <code>sorry #</code> (<a href=\"https://github.com/leanprover-community/lean/issues/356\">lean#356</a>)</li>\n</ul>\n<p>Server protocol changes:</p>\n<ul>\n<li>The (Lean error) messages returned by the server may now contain an additional <code>\"widget\"</code> field.</li>\n</ul>",
        "id": 201968951,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1593091961
    },
    {
        "content": "<blockquote>\n<p>some very <code>/-\"uncontroversial\"-/</code> features</p>\n</blockquote>",
        "id": 201969129,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1593092043
    },
    {
        "content": "<p>I think he meant that you'll miss the equatilies error message.</p>",
        "id": 201969286,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593092133
    },
    {
        "content": "<p>Oh no! Have the equatilies gone??</p>",
        "id": 201970631,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593092757
    },
    {
        "content": "<p>Yeah, it's a broken concept anyway... so it's been ripped out of core</p>",
        "id": 201970848,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593092844
    },
    {
        "content": "<p>I'm sorry about that. I got overexcited about this idea of contributing to Lean's C++ code.</p>",
        "id": 201970877,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593092860
    },
    {
        "content": "<p>Move fast, break things?</p>",
        "id": 201970985,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593092905
    },
    {
        "content": "<p>So that was what you were talking about in the DM to me the other day when you were proudly telling me you'd made a PR to core Lean changing the C++??</p>",
        "id": 201972073,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593093399
    },
    {
        "content": "<p>If only it would have been a PR...</p>",
        "id": 201972157,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1593093441
    },
    {
        "content": "<p>I'm sorry.</p>",
        "id": 201972209,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593093467
    },
    {
        "content": "<p>It's okay.</p>",
        "id": 201972236,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1593093479
    },
    {
        "content": "<p>Out of curiosity, how does the release process work?  It's not manually uploading the zip files right?</p>",
        "id": 202189320,
        "sender_full_name": "Jiekai",
        "timestamp": 1593269338
    },
    {
        "content": "<p>When someone with write privileges to <code>leanprover-community/lean</code> pushes a git tag to the repo, <a href=\"https://github.com/leanprover-community/lean/blob/master/.github/workflows/on-push.yml#L33\">these lines in the github actions script</a> (and the other similar ones) get triggered. That then uses <a href=\"https://github.com/softprops/action-gh-release\">the <code>softprops/action-gh-release</code> action</a> to upload files to that github release.</p>",
        "id": 202192819,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1593273741
    }
]