[
    {
        "content": "<p>I have</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">ghost_map</span><span class=\"bp\">.</span><span class=\"n\">zero</span> <span class=\"o\">:</span>\n  <span class=\"bp\">‚àÄ</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"bp\">‚Ñï</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">inst_3</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">prime</span> <span class=\"n\">p</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_6</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">inst_4</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">inst_5</span> <span class=\"o\">:</span> <span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">],</span>\n    <span class=\"n\">ghost_map</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n</pre></div>\n\n\n<p>And when I apply <code>ghost_map.zero</code> I get the following error:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">comm_ring_of_injective</span> <span class=\"n\">ghost_map</span> <span class=\"err\">?</span><span class=\"n\">m_12</span> <span class=\"n\">ghost_map</span><span class=\"bp\">.</span><span class=\"n\">zero</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">ghost_map</span><span class=\"bp\">.</span><span class=\"n\">zero</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">@</span><span class=\"n\">ghost_map</span> <span class=\"err\">?</span><span class=\"n\">m_2</span> <span class=\"err\">?</span><span class=\"n\">m_3</span> <span class=\"err\">?</span><span class=\"n\">m_1</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"err\">?</span><span class=\"n\">m_1</span><span class=\"o\">),</span> <span class=\"err\">?</span><span class=\"n\">m_4</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"err\">?</span><span class=\"n\">m_5</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"bp\">@</span><span class=\"n\">ghost_map</span> <span class=\"err\">?</span><span class=\"n\">m_2</span> <span class=\"err\">?</span><span class=\"n\">m_3</span> <span class=\"err\">?</span><span class=\"n\">m_1</span> <span class=\"err\">?</span><span class=\"n\">m_4</span> <span class=\"err\">?</span><span class=\"n\">m_5</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n</pre></div>\n\n\n<p>I don't understand what's going on.</p>",
        "id": 168141463,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1560523768
    },
    {
        "content": "<p>what's the type of <code>ghost_map</code>?</p>",
        "id": 168142490,
        "sender_full_name": "Reid Barton",
        "timestamp": 1560524479
    },
    {
        "content": "<p>I worked around it by using lots of <code>@</code> and filling in a lot of underscores.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">comm_ring</span> <span class=\"o\">(</span><span class=\"err\">ùïé</span> <span class=\"n\">p</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">@</span><span class=\"n\">comm_ring_of_surjective</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span>\n  <span class=\"o\">(</span><span class=\"k\">have</span> <span class=\"n\">hom</span> <span class=\"o\">:</span> <span class=\"n\">is_ring_hom</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"n\">coe</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">R</span> <span class=\"bp\">‚Ñ§</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">R</span> <span class=\"n\">‚Ñö</span><span class=\"o\">),</span> <span class=\"k\">by</span> <span class=\"n\">apply_instance</span><span class=\"o\">,</span>\n    <span class=\"bp\">@</span><span class=\"n\">comm_ring_of_injective</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span>\n      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring_of_injective</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span>\n        <span class=\"o\">(</span><span class=\"n\">ghost_map</span><span class=\"o\">)</span> <span class=\"n\">sorry</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ghost_map</span><span class=\"bp\">.</span><span class=\"n\">zero</span> <span class=\"n\">p</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">R</span> <span class=\"n\">‚Ñö</span><span class=\"o\">)</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span>\n        <span class=\"o\">(</span><span class=\"n\">ghost_map</span><span class=\"bp\">.</span><span class=\"n\">one</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ghost_map</span><span class=\"bp\">.</span><span class=\"n\">add</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ghost_map</span><span class=\"bp\">.</span><span class=\"n\">mul</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ghost_map</span><span class=\"bp\">.</span><span class=\"n\">neg</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"err\">$</span> <span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">coe</span> <span class=\"o\">:</span> <span class=\"bp\">‚Ñ§</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">‚Ñö</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">map_injective</span> <span class=\"bp\">_</span> <span class=\"err\">$</span> <span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">coe_int_rat_map_injective</span> <span class=\"bp\">_</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">map_zero</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"n\">hom</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">map_one</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"n\">hom</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">map_add</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"n\">hom</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">map_mul</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"n\">hom</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">map_neg</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"n\">hom</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"err\">$</span> <span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">counit</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">map_surjective</span> <span class=\"bp\">_</span> <span class=\"err\">$</span> <span class=\"n\">counit_surjective</span> <span class=\"bp\">_</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">map_zero</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">counit</span><span class=\"bp\">.</span><span class=\"n\">is_ring_hom</span> <span class=\"n\">R</span><span class=\"o\">))</span>\n  <span class=\"bp\">_</span>\n  <span class=\"c1\">-- (@map_one _ _ _ _ _ _ _ _ _ (mv_polynomial.counit.is_ring_hom R))</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">map_add</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">counit</span><span class=\"bp\">.</span><span class=\"n\">is_ring_hom</span> <span class=\"n\">R</span><span class=\"o\">))</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">map_mul</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">counit</span><span class=\"bp\">.</span><span class=\"n\">is_ring_hom</span> <span class=\"n\">R</span><span class=\"o\">))</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">map_neg</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">counit</span><span class=\"bp\">.</span><span class=\"n\">is_ring_hom</span> <span class=\"n\">R</span><span class=\"o\">))</span>\n</pre></div>",
        "id": 168145425,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1560526428
    },
    {
        "content": "<p>We almost know that witt vectors are a ring</p>",
        "id": 168145442,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1560526438
    },
    {
        "content": "<p>For some reason that <code>map_one</code> line doesn't work. Even though it is completely analogous to its siblings.</p>",
        "id": 168145533,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1560526468
    }
]