[
    {
        "content": "<p>oh my goodness there are so many long names in that file</p>",
        "id": 270328670,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643772956
    },
    {
        "content": "<p>Do you have better suggestions?</p>",
        "id": 270328726,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643772973
    },
    {
        "content": "<p>I would try something like <code>cauchy_thm_rect</code></p>",
        "id": 270328785,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643773035
    },
    {
        "content": "<p>it's a little hard to tell what the distinguishing characteristics of these theorems are, they are all pretty hard to read</p>",
        "id": 270328820,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643773072
    },
    {
        "content": "<p>I assumed that this goes against our naming convention.</p>",
        "id": 270328951,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643773185
    },
    {
        "content": "<p>let's just not use the symbol reading convention for named lemmas then, like I have suggested many times before</p>",
        "id": 270329155,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643773349
    },
    {
        "content": "<p>it has some clear failure modes for theorems like this</p>",
        "id": 270329171,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643773370
    },
    {
        "content": "<p>I'll make a PR that renames lemmas after <a href=\"https://github.com/leanprover-community/mathlib/pull/11770\">#11770</a> will be either accepted or rejected.</p>",
        "id": 270329384,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643773527
    },
    {
        "content": "<p>And I'll request your review.</p>",
        "id": 270329393,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643773534
    },
    {
        "content": "<p>Mario I remember telling you in 2018 that this silly computer science idea of having a naming convention would never work because beyond some point it gets really complicated. This was back when I knew nothing and was naming things <code>lemma37</code> (on the basis that this approach had worked for centuries). I must be honest and say that the naming convention idea has scaled far far better than I could ever have imagined.</p>",
        "id": 270354180,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1643793414
    },
    {
        "content": "<p>As a beginner it still feels weird to see all these long names, but it seems possible to shorten the names while keeping the naming convention by naming more things (after all you do use <code>differentiable</code> as part of the names and not <code>has_limit_minus_div_minus_along_whatever_filter_or_other</code>). So I guess, say that <code>f</code> is <code>cauchy</code> if it satisfies the Cauchy integral formula and then have <code>cauchy_of_differentiable_off_countable</code> or something? It might be running towards failure in exactly the way that is taken care of by the naming conventions though.</p>",
        "id": 270356541,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1643794590
    },
    {
        "content": "<p>This works so far as you don't have too many similar lemmas. Consider for example <a href=\"https://tqft.net/mathlib/algebra/order/rearrangement\">file#algebra/order/rearrangement</a>. We had to make the names rather explicit to differentiate all variants.</p>",
        "id": 270356782,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1643794709
    }
]