[
    {
        "content": "<p>If I allow a constant <code>C : false</code> then I can prove anything in term mode using <code>false.elim</code> and I won't get warnings every time I want to skip a proof.</p>",
        "id": 198306751,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590057370
    },
    {
        "content": "<p>have you tried it?</p>",
        "id": 198306766,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590057392
    },
    {
        "content": "<p>Can I have an analogous <code>constant</code> tactic which closes any goal without triggering a warning that I'm using <code>sorry</code>?</p>",
        "id": 198306770,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590057396
    },
    {
        "content": "<p>That's what I want. I am trying to write some teaching material and I don't want to enter term mode</p>",
        "id": 198306793,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590057424
    },
    {
        "content": "<p>I just want to write <code>nlinarith</code> and the goal is closed and no warning about cheating, but I used a constant somehow.</p>",
        "id": 198306831,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590057470
    },
    {
        "content": "<p><code> `[exact C]</code>?</p>",
        "id": 198307090,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590057679
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">constant</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">false</span>\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">cheat</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">≥</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cheat</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>my first tactic, but it does not feel like a great achievement</p>",
        "id": 198338161,
        "sender_full_name": "Matt Earnshaw",
        "timestamp": 1590076525
    },
    {
        "content": "<p>can we ban this tactic?</p>",
        "id": 198379797,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590096587
    },
    {
        "content": "<p>in the competitive international Lean speedruns preferably</p>",
        "id": 198379808,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590096598
    },
    {
        "content": "<p>I'd rather ban the constant</p>",
        "id": 198379917,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590096659
    },
    {
        "content": "<p>You can always check to see which axioms a proof used</p>",
        "id": 198385486,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590100186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"247064\">@Matt Earnshaw</span> many thanks! I'll drop it in tomorrow</p>",
        "id": 198385560,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590100215
    },
    {
        "content": "<p>I would say no worries, but this tactic concerns me :+)</p>",
        "id": 198386045,
        "sender_full_name": "Matt Earnshaw",
        "timestamp": 1590100450
    },
    {
        "content": "<p><a href=\"http://inutile.club/estatis/falso/\">http://inutile.club/estatis/falso/</a></p>",
        "id": 198386050,
        "sender_full_name": "Matt Earnshaw",
        "timestamp": 1590100456
    },
    {
        "content": "<p>OMG, I know the author of this piece :^)</p>",
        "id": 198390998,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590103517
    },
    {
        "content": "<p>(and even the whole club itself…)</p>",
        "id": 198391006,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590103524
    },
    {
        "content": "<p>a bit off-topic, but from the same author: <a href=\"https://github.com/a3nm/academia/blob/master/CONTRIBUTING.md\">https://github.com/a3nm/academia/blob/master/CONTRIBUTING.md</a></p>",
        "id": 198391238,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590103730
    }
]