[
    {
        "content": "<p>For the recent commits topics on <a class=\"stream\" data-stream-id=\"116290\" href=\"/#narrow/stream/116290-rss\">#rss</a>, would it be possible to include the commit author? I think it would be some nice information to more easily keep up with who is doing what.</p>\n<p>(Right now, we can see who coauthors are, but that can be sort of random -- sometimes it's just a reviewer whose 1-line suggestion was included.)</p>",
        "id": 271178794,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644348588
    },
    {
        "content": "<p>(or, if you use the Github web stuff, sometimes yourself again!)</p>",
        "id": 271178880,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1644348610
    },
    {
        "content": "<p>It would also be nice to fix the links so links with brackets don't break so much, and also so that repos that aren't <code>mathlib</code> have clickable <code>#</code> numbers - does anyone know where the source is?</p>",
        "id": 271178953,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1644348646
    },
    {
        "content": "<p>I think it's a script running on <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span>'s infrastructure.</p>",
        "id": 271179224,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1644348769
    },
    {
        "content": "<p>Yes. Since it really is just GitHub's RSS feed, I don't see a straightforward way to customize it.</p>",
        "id": 271181472,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644349903
    },
    {
        "content": "<p>Can't you make it fetch the details with the URL / number when it gets received?</p>",
        "id": 271181723,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1644350025
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/commits/master.atom\">https://github.com/leanprover-community/mathlib/commits/master.atom</a> seems to contain the user information</p>",
        "id": 271182766,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644350474
    },
    {
        "content": "<p>Is that not the feed you're using?</p>",
        "id": 271182789,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644350482
    },
    {
        "content": "<p>And the #-numbers should be fixable with a regex.</p>",
        "id": 271182999,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1644350565
    },
    {
        "content": "<p>The implementation is at <a href=\"https://github.com/zulip/python-zulip-api/blob/main/zulip/integrations/rss/rss-bot\">https://github.com/zulip/python-zulip-api/blob/main/zulip/integrations/rss/rss-bot</a>. I'm not planning to fiddle with it, but I'm happy to switch to a fork or something.</p>",
        "id": 271187279,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644352651
    },
    {
        "content": "<p>If we change <a href=\"https://github.com/zulip/python-zulip-api/blob/main/zulip/integrations/rss/rss-bot#L173\">this statement</a> to this:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code>    <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Authored-by: [</span><span class=\"si\">{}</span><span class=\"s2\">](</span><span class=\"si\">{}</span><span class=\"s2\">)</span><span class=\"se\">\\n</span><span class=\"s2\">[Commit](</span><span class=\"si\">{}</span><span class=\"s2\">)\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"n\">strip_tags</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">),</span>\n        <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">author</span><span class=\"p\">,</span>\n        <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">author_detail</span><span class=\"o\">.</span><span class=\"n\">href</span><span class=\"p\">,</span>\n        <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">link</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>  <span class=\"c1\"># type: str</span>\n</code></pre></div>\n<p>then the rss-bot messages would look like this:</p>\n<blockquote>\n<p>feat(*): localized <code>R[X]</code> notation for <code>polynomial R</code> (<a href=\"https://github.com/leanprover-community/mathlib/pull/11895\">#11895</a>)</p>\n<p>I did not change <code>polynomial (complex_term_here taking args)</code> in many places because I thought it would be more confusing. Also, in some files that prove things about polynomials incidentally, I also did not include the notation and change the files.</p>\n<p>Co-authored-by: Johan Commelin &lt;<a href=\"mailto:johan@commelin.net\">johan@commelin.net</a>&gt;</p>\n<p>Authored-by: <a href=\"https://github.com/pechersky\">pechersky</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib/commit/85d9f2189d9489f9983c0d01536575b0233bd305\">Commit</a></p>\n</blockquote>",
        "id": 271196483,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644357189
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113488-general/topic/rss.20bot.2C.20include.20author.3F/near/271178953\">said</a>:</p>\n<blockquote>\n<p>It would also be nice to fix the links so links with brackets don't break so much</p>\n</blockquote>\n<p>One solution to this (reflected above) is to not include the entry title, which is redundant anyway. It comes from github truncated with an ellipsis, like <code>feat(model_theory/substructures): More operations on substructures (#â€¦</code></p>",
        "id": 271196696,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644357293
    },
    {
        "content": "<p>I assume we're not using <a href=\"https://zulip.com/integrations/doc/github\">https://zulip.com/integrations/doc/github</a> due to it being inferior in some other regard?</p>",
        "id": 271197280,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644357594
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113488-general/topic/rss.20bot.2C.20include.20author.3F/near/271178953\">said</a>:</p>\n<blockquote>\n<p>and also so that repos that aren't <code>mathlib</code> have clickable <code>#</code> numbers</p>\n</blockquote>\n<p>One solution I thought of is to take the <code>#</code> in the first line and prefix it with the repo name from the feed name, but it's a real hack. On the Zulip side we could then make sure each possibility linkifies correctly.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>    <span class=\"n\">body</span> <span class=\"bp\">=</span> <span class=\"n\">strip_tags</span><span class=\"o\">(</span><span class=\"n\">body</span><span class=\"o\">)</span>\n\n    <span class=\"kn\">import</span> <span class=\"n\">re</span>\n    <span class=\"n\">repo</span> <span class=\"bp\">=</span> <span class=\"n\">re.search</span><span class=\"o\">(</span><span class=\"n\">r</span><span class=\"s2\">\"(</span><span class=\"err\">\\</span><span class=\"s2\">w+):</span><span class=\"err\">\\</span><span class=\"s2\">w\"</span><span class=\"o\">,</span> <span class=\"n\">feed_name</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">group</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n    <span class=\"n\">body</span> <span class=\"bp\">=</span> <span class=\"n\">re.sub</span><span class=\"o\">(</span><span class=\"n\">r</span><span class=\"s2\">\"#</span><span class=\"err\">\\</span><span class=\"s2\">d+\"</span><span class=\"o\">,</span> <span class=\"n\">lambda</span> <span class=\"n\">m</span><span class=\"o\">:</span> <span class=\"n\">repo</span> <span class=\"bp\">+</span> <span class=\"n\">m.group</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"n\">body</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n    <span class=\"n\">content</span> <span class=\"bp\">=</span> <span class=\"s2\">\"{}</span><span class=\"se\">\\n\\n</span><span class=\"s2\">Authored-by: [{}]({})</span><span class=\"se\">\\n</span><span class=\"s2\">[Commit]({})\"</span><span class=\"bp\">.</span><span class=\"n\">format</span><span class=\"o\">(</span>\n        <span class=\"n\">body</span><span class=\"o\">,</span>\n        <span class=\"n\">entry.author</span><span class=\"o\">,</span>\n        <span class=\"n\">entry.author_detail.href</span><span class=\"o\">,</span>\n        <span class=\"n\">entry.link</span><span class=\"o\">,</span>\n    <span class=\"o\">)</span>  <span class=\"bp\">#</span> <span class=\"n\">type</span><span class=\"o\">:</span> <span class=\"n\">str</span>\n</code></pre></div>\n<p>This gives</p>\n<blockquote>\n<p>feat(*): localized <code>R[X]</code> notation for <code>polynomial R</code> (<a href=\"https://github.com/leanprover-community/mathlib/pull/11895\">mathlib#11895</a>)</p>\n<p>I did not change <code>polynomial (complex_term_here taking args)</code> in many places because I thought it would be more confusing. Also, in some files that prove things about polynomials incidentally, I also did not include the notation and change the files.</p>\n<p>Co-authored-by: Johan Commelin &lt;<a href=\"mailto:johan@commelin.net\">johan@commelin.net</a>&gt;</p>\n<p>Authored-by: <a href=\"https://github.com/pechersky\">pechersky</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib/commit/85d9f2189d9489f9983c0d01536575b0233bd305\">Commit</a></p>\n</blockquote>",
        "id": 271198196,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644357968
    },
    {
        "content": "<p>Another example of that:</p>\n<blockquote>\n<p>feat(library/init/meta): import unfreezing tactic from mathlib (<a href=\"https://github.com/leanprover-community/lean/pull/667\">lean#667</a>)</p>\n<p>And remove misleading mentions of <code>unfreeze_local_instances</code> from error messages.</p>\n<p>Authored-by: <a href=\"https://github.com/gebner\">gebner</a><br>\n<a href=\"https://github.com/leanprover-community/lean/commit/6f1b5639005a358db19f183c2d7296cebcb12b39\">Commit</a></p>\n</blockquote>",
        "id": 271198317,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644358043
    },
    {
        "content": "<p>I've made a fork <a href=\"https://github.com/kmill/python-zulip-api\">https://github.com/kmill/python-zulip-api</a> and <a href=\"https://github.com/kmill/python-zulip-api/commit/05bac854cd1768a7bcc39bed323b1e9bcb045859\">here is the change</a></p>\n<p>I've only been able to test this using a mock environment and I can't be sure it actually works -- I've tried to program it defensively, and it falls back to the original behavior for messages that aren't obviously commits.</p>",
        "id": 271473436,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644517635
    },
    {
        "content": "<p>I've updated to your fork. Let's see what happens.</p>",
        "id": 271692492,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644677915
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> Hmm, it doesn't seem to be doing anything different. The most recent commit, according to my mock environment, should look like</p>\n<blockquote>\n<p>chore(measure_theory/function/ae_eq_fun): replace topological assumptions by measurability assumptions (<a href=\"https://github.com/leanprover-community/mathlib/pull/11981\">mathlib#11981</a>)</p>\n<p>Since the introduction of the <code>has_measurable_*</code> typeclasses, the topological assumptions in that file are only used to derive the measurability assumptions. This PR removes that step.</p>\n<p>Co-authored-by: RÃ©my Degenne &lt;<a href=\"mailto:remydegenne@gmail.com\">remydegenne@gmail.com</a>&gt;</p>\n<p>Authored-by: <a href=\"https://github.com/RemyDegenne\">RemyDegenne</a><br>\n<a href=\"https://github.com/leanprover-community/mathlib/commit/5f70cd95e9797d171453652c4c1b913951deae26\">Commit</a></p>\n</blockquote>\n<p>but it's still doing the old behavior:<br>\n<span class=\"user-mention silent\" data-user-id=\"112165\">rss-bot</span> <a href=\"#narrow/stream/116290-rss/topic/Recent.20Commits.20to.20mathlib.3Amaster/near/271705502\">said</a>:</p>\n<blockquote>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/commit/5f70cd95e9797d171453652c4c1b913951deae26\">chore(measure_theory/function/ae_eq_fun): replace topological assumptâ€¦</a></strong><br>\nchore(measure_theory/function/ae_eq_fun): replace topological assumptions by measurability assumptions (<a href=\"https://github.com/leanprover-community/mathlib/pull/11981\">#11981</a>)</p>\n<p>Since the introduction of the <code>has_measurable_*</code> typeclasses, the topological assumptions in that file are only used to derive the measurability assumptions. This PR removes that step.</p>\n<p>Co-authored-by: RÃ©my Degenne &lt;<a href=\"mailto:remydegenne@gmail.com\">remydegenne@gmail.com</a>&gt;<br>\n<a href=\"https://github.com/leanprover-community/mathlib/commit/5f70cd95e9797d171453652c4c1b913951deae26\">https://github.com/leanprover-community/mathlib/commit/5f70cd95e9797d171453652c4c1b913951deae26</a></p>\n</blockquote>",
        "id": 271706346,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644695079
    },
    {
        "content": "<p>Yeah, I had to revert for now because of Python version troubles</p>",
        "id": 271706376,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644695151
    },
    {
        "content": "<p>Was it this line? </p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code>    <span class=\"k\">if</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"s2\">\"Recent Commits to (\\w+):\"</span><span class=\"p\">,</span> <span class=\"n\">feed_name</span><span class=\"p\">):</span>\n</code></pre></div>",
        "id": 271706439,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644695214
    },
    {
        "content": "<p>(You need a <code>r\"\"</code> there, or to write <code>\\\\w</code>, though not having it should just be a warning)</p>",
        "id": 271707273,
        "sender_full_name": "Julian Berman",
        "timestamp": 1644696338
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> Thanks, <a href=\"https://github.com/kmill/python-zulip-api/commit/6802cad42777bc755b014de16a26ea7205755156\">changed it</a> (though Python seems to be happy to have \"\\w\" mean \"\\\\w\"), and also switched from the walrus operator in case the problem is that the interpreter is older than version 3.8.</p>",
        "id": 271707607,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644696831
    },
    {
        "content": "<p>Yeah -- Python will take invalid escape sequences and just drop the <code>\\\\</code>, but it emits a deprecation warning (one that's hidden by default because we're bad). I just mentioned it given Sebastian said he reverted on the off chance that whatever is running this app is running with a different setting for <code>PYTHONWARNINGS</code> (one where they get turned into errors). I didn't notice the walrus operator but that's way more likely to be useful.</p>",
        "id": 271707764,
        "sender_full_name": "Julian Berman",
        "timestamp": 1644697080
    },
    {
        "content": "<p>I thought 3.10 raised errors for that type of escape sequence?</p>",
        "id": 271708919,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644698778
    },
    {
        "content": "<p>Not yet -- they can't make up their minds yet I think -- <a href=\"https://bugs.python.org/issue32912\">https://bugs.python.org/issue32912</a></p>",
        "id": 271709376,
        "sender_full_name": "Julian Berman",
        "timestamp": 1644699520
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113488-general/topic/rss.20bot.2C.20include.20author.3F/near/271706439\">said</a>:</p>\n<blockquote>\n<p>Was it this line? </p>\n<p><div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code>    <span class=\"k\">if</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"s2\">\"Recent Commits to (\\w+):\"</span><span class=\"p\">,</span> <span class=\"n\">feed_name</span><span class=\"p\">):</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>There are other changes (by other people) that require at least Python 3.6 - but Debian LTS is still on 3.5...</p>",
        "id": 271755296,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644771951
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> Would it be possible to also fix issue references in the commit message?  So, if the commit message says \"fixes <a href=\"https://github.com/leanprover-community/mathlib/pull/1234\">#1234</a>\", that it gets replaced by \"fixes <a href=\"https://github.com/leanprover/lean4/pull/1234\">lean4#1234</a>\"?</p>",
        "id": 273062177,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1645693201
    },
    {
        "content": "<p>I would rather it be replaced by an explicit markdown link so that it still looks like <a href=\"https://github.com/leanprover/lean4/pull/1234\">#1234</a></p>",
        "id": 273063214,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1645693824
    },
    {
        "content": "<p>On the topic of rss-bot; could we replace its profile picture in the zulip settings with something like <a href=\"https://cdn-icons-png.flaticon.com/512/124/124033.png\">https://cdn-icons-png.flaticon.com/512/124/124033.png</a> so that it's easy to tell from the \"recent topics\" view whether the posts in RSS are from humans without a profile picture, or from the bot?</p>\n<div class=\"message_inline_image\"><a href=\"https://cdn-icons-png.flaticon.com/512/124/124033.png\"><img src=\"https://uploads.zulipusercontent.net/91e4da86c2576db0ce6707299ea99b996ae811c2/68747470733a2f2f63646e2d69636f6e732d706e672e666c617469636f6e2e636f6d2f3531322f3132342f3132343033332e706e67\"></a></div>",
        "id": 283861149,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653472629
    },
    {
        "content": "<p>Same for the new bots on Github, pretty please!</p>",
        "id": 283862004,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1653473141
    },
    {
        "content": "<p>... and the community account</p>",
        "id": 283862157,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1653473207
    },
    {
        "content": "<p>I think a Lean logo would make sense to all of them. We can have fun and give them to different logos to help differentiate.</p>",
        "id": 283862225,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1653473242
    },
    {
        "content": "<p>Which logo should we use? <img alt=\":lean:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/17579.png\" title=\"lean\">?</p>",
        "id": 283862266,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1653473260
    },
    {
        "content": "<p>How about <a href=\"/user_uploads/3121/sryMp_PdkoQL5xdONH5VgJuH/image.png\">image.png</a> ?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/sryMp_PdkoQL5xdONH5VgJuH/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/sryMp_PdkoQL5xdONH5VgJuH/image.png\"></a></div>",
        "id": 283863499,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1653473988
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/113488-general/topic/rss.20bot.2C.20include.20author.3F/near/283863499\">said</a>:</p>\n<blockquote>\n<p>How about <a href=\"/user_uploads/3121/sryMp_PdkoQL5xdONH5VgJuH/image.png\">image.png</a> ?</p>\n</blockquote>\n<p>Using the zulip images feels like it might be confusing, as the bots aren't managed by zulip. Not a big deal though.<br>\nNote also the zulip welcome and notification bots have different colored backgrounds.</p>",
        "id": 283867175,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653476460
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@YaÃ«l Dillies</span>, <del>can I suggest you split your thread about github profile pictures?</del> I've split your tangent about github avatars to a new thread. Can you update the first message to give more context?</p>",
        "id": 283867204,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653476492
    },
    {
        "content": "<p>Yes you can, indeed you did <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 283867309,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1653476556
    }
]