[
    {
        "content": "<p>I know the most common setup for Lean is to have the following three sources of lean files</p>\n<ul>\n<li>lean core library (from <code>elan</code>)</li>\n<li>mathlib (in <code>_target</code> directory)</li>\n<li>current project <code>src</code> directory</li>\n</ul>\n<p>Is there a natural way to have another dependency as follows?  </p>\n<ul>\n<li>lean core library (from <code>elan</code>)</li>\n<li>mathlib (in <code>_target</code> directory)</li>\n<li><strong>some 3rd party library of lean files from another repo</strong></li>\n<li>current project <code>src</code> directory</li>\n</ul>\n<p>Let's say someone (like me) makes a library of lean tools, but for certain reasons these shouldn't go in mathlib (maybe they require tensorflow).  Is there a way for a user to use those tools in their current project alongside mathlib?  Is this doable with <code>leanproject</code>?</p>",
        "id": 199270902,
        "sender_full_name": "Jason Rute",
        "timestamp": 1590865316
    },
    {
        "content": "<p>Add to <code>[dependencies]</code> in <code>leanpkg.toml</code>?</p>",
        "id": 199271045,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590865520
    },
    {
        "content": "<p>Yeah <code>leanpkg add</code> should do this for you, putting the repo in _target.</p>",
        "id": 199271103,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1590865600
    },
    {
        "content": "<p>I don't remember if I wrapped that <code>leanpkg</code> feature in <code>leanproject</code> (I've never used it).</p>",
        "id": 199271286,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590865823
    },
    {
        "content": "<p>Is it safe to modify <code>leanpkg.toml</code>?  Does it interfere with <code>leanproject</code>?  <a href=\"#narrow/stream/113488-general/topic/modifying.20lean.20core.20library.20code/near/194610729\">I've been told in the past that it is not safe to modify <code>leanpkg.path</code>.</a></p>",
        "id": 199271463,
        "sender_full_name": "Jason Rute",
        "timestamp": 1590865984
    },
    {
        "content": "<p>It is safe</p>",
        "id": 199271473,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590866023
    },
    {
        "content": "<p>I hope</p>",
        "id": 199271478,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590866031
    },
    {
        "content": "<p>leanpkg.path definitely isn't</p>",
        "id": 199271517,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590866045
    },
    {
        "content": "<p>Ok, I might test it later.</p>",
        "id": 199271522,
        "sender_full_name": "Jason Rute",
        "timestamp": 1590866057
    },
    {
        "content": "<p>I mean it should be safe but it's totally untested since nobody has project depending on something which is not mathlib</p>",
        "id": 199271593,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590866124
    },
    {
        "content": "<p>In the old days before leanproject, people used to update their mathlib dependency by pulling a new mathlib in _target, compiling it, and then editing their leanpkg.toml. Then there was some <code>cache-olean</code> program (which may or may not still work) which meant that you might not have to compile mathlib when you updated it. Of course if you're prepared to compile mathlib while you're sleeping, then you can just do it the old days way (2018)</p>",
        "id": 199273249,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590868263
    },
    {
        "content": "<p>Nowadays I can compile mathlib again during my coffee break...</p>",
        "id": 199273322,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590868389
    },
    {
        "content": "<p>I'd rather not.  (I didn't think about <code>.olean</code>s and compiling, but right now, everything I have in my library will compile fast.)</p>",
        "id": 199273328,
        "sender_full_name": "Jason Rute",
        "timestamp": 1590868401
    },
    {
        "content": "<p>One thing I used to do with a project which I kept up to date with mathlib in the old days, was that when I updated mathlib I just recompiled the project, rather than recompiling mathlib. That way only the bits of mathlib which I needed got recompiled.</p>",
        "id": 199273627,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590868849
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/support.20for.20libraries.20other.20than.20mathlib/near/199273249\">said</a>:</p>\n<blockquote>\n<p>In the old days before leanproject, people used to update their mathlib dependency by pulling a new mathlib in _target, compiling it, and then editing their leanpkg.toml.</p>\n</blockquote>\n<p>Or just edit <code>leanpkg.toml</code> and <code>leanpkg</code> will do the other things for you.</p>",
        "id": 199274250,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590869870
    }
]