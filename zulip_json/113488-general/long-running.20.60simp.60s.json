[
    {
        "content": "<p>Thoughts on turning long-running <code>simp</code>s into <code>simp only</code>s even if they are terminating? I've noticed that they often crop up unrelatedly when adding <code>simp</code> lemmata, such as in <a href=\"https://github.com/leanprover-community/mathlib/issues/7692\">#7692</a> and <a href=\"https://github.com/leanprover-community/mathlib/issues/7416\">#7416</a> (note commit 3d1c124, which had to change a mostly unrelated file for <code>simp</code> speedups). They also lead to the exact same issues we wanted to avoid with non-terminating <code>simp</code>s, which is having to roll back to an old version, run <code>squeeze_simp</code> (if it can even run without timing out! if not, even <em>more</em> manual fiddling) and swapping that into the new commit. Furthermore, it should speedup mathlib compilation a fair bit.</p>\n<p>I get that they look a <em>lot</em> uglier, and I wonder if in the future, we could instead \"cache\" what simp lemmas are used in some \"simp file\", so that <code>simp</code> doesn't have to go digging for lemmas every time, which takes centuries</p>",
        "id": 240593578,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622202924
    },
    {
        "content": "<p>Turning <code>simp</code> into <code>simp only</code> if they take too long is an accepted practice. I believe the hope is that the switch to Lean 4's discrimination trees will speed up the situation enough that the technical solutions like a separate \"<code>simp</code> lemma cache\" are not needed yet and we accept the inconvenience of replacing the <code>simp</code>s.</p>",
        "id": 240593928,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1622203183
    },
    {
        "content": "<p>Woah, just scrolled through the Lean4 presentation; that's amazing, hopefully we can get switched to that in some not-too-far-off-point! It seems far more scalable than the current system seems to be</p>",
        "id": 240595138,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622203924
    }
]