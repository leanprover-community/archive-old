[
    {
        "content": "<p>Can we generate histograms about how long PRs are ope?. And/or how long PRs have to wait for a review after being labeled <code>awaiting-review</code>? Because those are metrics we care about. The length of <a href=\"https://bit.ly/3AZk1Qk\">#queue</a> is just a proxy. Any GitHub API experts around who know how to do this?</p>",
        "id": 290109413,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658241985
    },
    {
        "content": "<p>Working on it</p>",
        "id": 290123958,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658247497
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/XZ4GDPoknEddF-BQYY9QVq5l/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/XZ4GDPoknEddF-BQYY9QVq5l/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/XZ4GDPoknEddF-BQYY9QVq5l/image.png\"></a></div>",
        "id": 290125623,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658248224
    },
    {
        "content": "<p>I don't know about how to track label-change events, so I don't know how to answer your second question</p>",
        "id": 290125684,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658248249
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">gh</span> <span class=\"n\">pr</span> <span class=\"n\">list</span> <span class=\"c1\">--state all --limit 5000 --json number,createdAt,closedAt,labels &gt; prs.json</span>\n<span class=\"n\">python</span> <span class=\"n\">pres.py</span> <span class=\"n\">prs.json</span> <span class=\"n\">prs.csv</span>\n</code></pre></div>",
        "id": 290125724,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658248266
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">sys</span>\n<span class=\"kn\">import</span> <span class=\"n\">csv</span>\n<span class=\"kn\">import</span> <span class=\"n\">json</span>\n\n<span class=\"n\">entries</span> <span class=\"bp\">=</span> <span class=\"o\">[]</span>\n<span class=\"n\">labels</span> <span class=\"bp\">=</span> <span class=\"n\">set</span><span class=\"o\">()</span>\n<span class=\"n\">for</span> <span class=\"n\">entry</span> <span class=\"k\">in</span> <span class=\"n\">json.load</span><span class=\"o\">(</span><span class=\"kn\">open</span><span class=\"o\">(</span><span class=\"n\">sys.argv</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">])):</span>\n  <span class=\"n\">entry</span><span class=\"o\">[</span><span class=\"s2\">\"labels\"</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"n\">label</span><span class=\"o\">[</span><span class=\"s2\">\"name\"</span><span class=\"o\">]</span> <span class=\"n\">for</span> <span class=\"n\">label</span> <span class=\"k\">in</span> <span class=\"n\">entry</span><span class=\"o\">[</span><span class=\"s2\">\"labels\"</span><span class=\"o\">]]</span>\n  <span class=\"n\">labels.update</span><span class=\"o\">(</span><span class=\"n\">entry</span><span class=\"o\">[</span><span class=\"s2\">\"labels\"</span><span class=\"o\">])</span>\n  <span class=\"n\">entries.append</span><span class=\"o\">(</span><span class=\"n\">entry</span><span class=\"o\">)</span>\n<span class=\"n\">for</span> <span class=\"n\">entry</span> <span class=\"k\">in</span> <span class=\"n\">entries</span><span class=\"o\">:</span>\n  <span class=\"n\">for</span> <span class=\"n\">label</span> <span class=\"k\">in</span> <span class=\"n\">labels</span><span class=\"o\">:</span>\n    <span class=\"n\">entry</span><span class=\"o\">[</span><span class=\"n\">label</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">label</span> <span class=\"k\">in</span> <span class=\"n\">entry</span><span class=\"o\">[</span><span class=\"s2\">\"labels\"</span><span class=\"o\">]</span>\n  <span class=\"n\">del</span> <span class=\"n\">entry</span><span class=\"o\">[</span><span class=\"s2\">\"labels\"</span><span class=\"o\">]</span>\n\n<span class=\"n\">writer</span> <span class=\"bp\">=</span> <span class=\"n\">csv.DictWriter</span><span class=\"o\">(</span><span class=\"kn\">open</span><span class=\"o\">(</span><span class=\"n\">sys.argv</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">],</span> <span class=\"s2\">\"w\"</span><span class=\"o\">),</span> <span class=\"n\">fieldnames</span><span class=\"bp\">=</span><span class=\"o\">[</span><span class=\"s2\">\"number\"</span><span class=\"o\">,</span> <span class=\"s2\">\"closedAt\"</span><span class=\"o\">,</span> <span class=\"s2\">\"createdAt\"</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"n\">sorted</span><span class=\"o\">(</span><span class=\"n\">labels</span><span class=\"o\">))</span>\n\n<span class=\"n\">writer.writeheader</span><span class=\"o\">()</span>\n<span class=\"n\">writer.writerows</span><span class=\"o\">(</span><span class=\"n\">entries</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 290125742,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658248276
    },
    {
        "content": "<p>Excuse the sloppy python code, just trying to crank something out fast</p>",
        "id": 290125770,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658248288
    },
    {
        "content": "<p>This plot indicates that our PR creation flux has been pretty constant over the past 5K PRs<br>\n<a href=\"/user_uploads/3121/2xVdRNmuomHX1X8iuGBwKBUq/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/2xVdRNmuomHX1X8iuGBwKBUq/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/2xVdRNmuomHX1X8iuGBwKBUq/image.png\"></a></div>",
        "id": 290125950,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658248362
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/R1Npr1pm-FA7L6ktL2pu0TAo/prs.csv\">prs.csv</a> <a href=\"/user_uploads/3121/un14GmGt_60WusERqKx5MgcJ/prs.json\">prs.json</a></p>",
        "id": 290126015,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658248394
    },
    {
        "content": "<p>Here's the code to get the label changes -- but I have now hit my GH API limit, and am barred from making more requests for idk how long:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">sys</span>\n<span class=\"kn\">import</span> <span class=\"n\">csv</span>\n<span class=\"kn\">import</span> <span class=\"n\">json</span>\n<span class=\"kn\">import</span> <span class=\"n\">requests</span>\n<span class=\"k\">from</span> <span class=\"n\">requests.adapters</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPAdapter</span><span class=\"o\">,</span> <span class=\"n\">Retry</span>\n\n\n<span class=\"n\">events</span> <span class=\"bp\">=</span> <span class=\"o\">[]</span>\n\n<span class=\"n\">writer</span> <span class=\"bp\">=</span> <span class=\"n\">csv.DictWriter</span><span class=\"o\">(</span><span class=\"kn\">open</span><span class=\"o\">(</span><span class=\"n\">sys.argv</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">],</span> <span class=\"s2\">\"w\"</span><span class=\"o\">),</span>\n  <span class=\"n\">fieldnames</span><span class=\"bp\">=</span><span class=\"o\">[</span><span class=\"s2\">\"action\"</span><span class=\"o\">,</span> <span class=\"s2\">\"created_at\"</span><span class=\"o\">,</span> <span class=\"s2\">\"number\"</span><span class=\"o\">,</span> <span class=\"s2\">\"label\"</span><span class=\"o\">])</span>\n<span class=\"n\">writer.writeheader</span><span class=\"o\">()</span>\n\n<span class=\"n\">session</span> <span class=\"bp\">=</span> <span class=\"n\">requests.Session</span><span class=\"o\">()</span>\n<span class=\"n\">retries</span> <span class=\"bp\">=</span> <span class=\"n\">Retry</span><span class=\"o\">(</span><span class=\"n\">total</span><span class=\"bp\">=</span><span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"n\">backoff_factor</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">status_forcelist</span><span class=\"bp\">=</span><span class=\"o\">[</span><span class=\"mi\">500</span><span class=\"o\">,</span> <span class=\"mi\">403</span><span class=\"o\">])</span>\n<span class=\"n\">session.mount</span><span class=\"o\">(</span><span class=\"s2\">\"https://\"</span><span class=\"o\">,</span> <span class=\"n\">HTTPAdapter</span><span class=\"o\">(</span><span class=\"n\">max_retries</span><span class=\"bp\">=</span><span class=\"n\">retries</span><span class=\"o\">))</span>\n\n<span class=\"n\">per_page</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span>\n<span class=\"n\">pages</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span> <span class=\"bp\">//</span> <span class=\"n\">per_page</span>\n<span class=\"n\">for</span> <span class=\"n\">page</span> <span class=\"k\">in</span> <span class=\"n\">range</span><span class=\"o\">(</span><span class=\"n\">pages</span><span class=\"o\">):</span>\n  <span class=\"n\">resp</span> <span class=\"bp\">=</span> <span class=\"n\">session.get</span><span class=\"o\">(</span>\n    <span class=\"s2\">\"https://api.github.com/repos/leanprover-community/mathlib/issues/events\"</span><span class=\"o\">,</span>\n    <span class=\"n\">headers</span><span class=\"bp\">=</span><span class=\"o\">{</span><span class=\"s2\">\"Accept\"</span><span class=\"o\">:</span> <span class=\"s2\">\"application/vnd.github+json\"</span><span class=\"o\">},</span>\n    <span class=\"n\">params</span><span class=\"bp\">=</span><span class=\"o\">{</span><span class=\"s2\">\"per_page\"</span><span class=\"o\">:</span> <span class=\"n\">per_page</span><span class=\"o\">,</span> <span class=\"s2\">\"page\"</span><span class=\"o\">:</span> <span class=\"n\">page</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">}</span>  <span class=\"bp\">#</span> <span class=\"n\">github</span> <span class=\"n\">starts</span> <span class=\"n\">at</span> <span class=\"mi\">1</span>\n  <span class=\"o\">)</span>\n  <span class=\"n\">print</span><span class=\"o\">(</span><span class=\"n\">resp</span><span class=\"o\">)</span>\n  <span class=\"n\">for</span> <span class=\"n\">event</span> <span class=\"k\">in</span> <span class=\"n\">resp.json</span><span class=\"o\">():</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"o\">[</span><span class=\"s2\">\"event\"</span><span class=\"o\">]</span> <span class=\"n\">not</span> <span class=\"k\">in</span> <span class=\"o\">[</span><span class=\"s2\">\"unlabeled\"</span><span class=\"o\">,</span> <span class=\"s2\">\"labeled\"</span><span class=\"o\">]:</span>\n      <span class=\"n\">continue</span>\n    <span class=\"n\">mini_event</span> <span class=\"bp\">=</span> <span class=\"o\">{}</span>\n    <span class=\"n\">mini_event</span><span class=\"o\">[</span><span class=\"s2\">\"action\"</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">event</span><span class=\"o\">[</span><span class=\"s2\">\"event\"</span><span class=\"o\">]</span>\n    <span class=\"n\">mini_event</span><span class=\"o\">[</span><span class=\"s2\">\"created_at\"</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">event</span><span class=\"o\">[</span><span class=\"s2\">\"created_at\"</span><span class=\"o\">]</span>\n    <span class=\"n\">mini_event</span><span class=\"o\">[</span><span class=\"s2\">\"number\"</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">event</span><span class=\"o\">[</span><span class=\"s2\">\"issue\"</span><span class=\"o\">][</span><span class=\"s2\">\"number\"</span><span class=\"o\">]</span>\n    <span class=\"n\">mini_event</span><span class=\"o\">[</span><span class=\"s2\">\"label\"</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">event</span><span class=\"o\">[</span><span class=\"s2\">\"label\"</span><span class=\"o\">][</span><span class=\"s2\">\"name\"</span><span class=\"o\">]</span>\n    <span class=\"n\">events.append</span><span class=\"o\">(</span><span class=\"n\">mini_event</span><span class=\"o\">)</span>\n    <span class=\"n\">writer.writerow</span><span class=\"o\">(</span><span class=\"n\">mini_event</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 290130311,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658250134
    },
    {
        "content": "<p>That's based on <a href=\"https://docs.github.com/en/rest/issues/events\">https://docs.github.com/en/rest/issues/events</a></p>",
        "id": 290130339,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658250144
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> Thanks! What is the <code>y</code>-axis in that diagram 2 posts up?</p>",
        "id": 290130410,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658250171
    },
    {
        "content": "<p>the tiny bar chart?</p>",
        "id": 290130452,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658250186
    },
    {
        "content": "<p>Just the count of PRs for each bin</p>",
        "id": 290130481,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658250202
    },
    {
        "content": "<p>Aha. So it doesn't yet tell us how long PRs are open on average.</p>",
        "id": 290130632,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658250261
    },
    {
        "content": "<p>That was the other bar chart</p>",
        "id": 290130671,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658250278
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/fOb9O8ODNyBkBZ7OwWtzl9d-/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/fOb9O8ODNyBkBZ7OwWtzl9d-/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/fOb9O8ODNyBkBZ7OwWtzl9d-/image.png\"></a></div>",
        "id": 290130691,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658250288
    },
    {
        "content": "<p>Ooh, I see. And that is \"number of days\" along the y-axis?</p>",
        "id": 290130768,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658250325
    },
    {
        "content": "<p>The y axis is binning -- there is a hypothesis that the <code>closedAt - createdAt</code> delta has changed over time</p>",
        "id": 290130919,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658250393
    },
    {
        "content": "<p>The y axis is, for each bin, the median of that delta over that bin</p>",
        "id": 290130958,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658250410
    },
    {
        "content": "<p>Separating out PRs labeled with <code>easy</code> (at time of close)</p>",
        "id": 290130977,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658250422
    },
    {
        "content": "<p>Here it is more clearly:<br>\n<a href=\"/user_uploads/3121/Ih37eTo1JWsf5MVKijyE7EVP/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Ih37eTo1JWsf5MVKijyE7EVP/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/Ih37eTo1JWsf5MVKijyE7EVP/image.png\"></a></div>",
        "id": 290131633,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658250686
    },
    {
        "content": "<p>I've hidden the outliers on the top</p>",
        "id": 290131652,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658250692
    },
    {
        "content": "<p>So what does <code>median</code> mean exactly? Does it mean that in February the median was 81 days for a PR to be merged?</p>",
        "id": 290132522,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658251092
    },
    {
        "content": "<p>Sorry, the most recent plot was in hours</p>",
        "id": 290132907,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658251315
    },
    {
        "content": "<p>That in february, the median time for a PR to go from created to closed was 81 hrs if it is not labeled as <code>easy</code>, and 6 hrs if <code>easy</code></p>",
        "id": 290133051,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658251360
    },
    {
        "content": "<p>I haven't differentiated \"closed due to bors merge\" and \"closed due to user closing it without merge\". My expectation is that the latter are way fewer than former. But that is why I am using median and not mean</p>",
        "id": 290133118,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658251394
    },
    {
        "content": "<p>Because I assume the latter are not distributed in the way the former are</p>",
        "id": 290133155,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658251409
    },
    {
        "content": "<p>I guess you didn't auth with github in your example? That probably leads to the rate limit being hit sooner</p>",
        "id": 290134222,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658251935
    },
    {
        "content": "<p>I was hitting 200 for a while, then 500 (set up retry), but then started to hit 403. I guess I am not passing the token that is in my shell, you're right</p>",
        "id": 290134400,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658252031
    },
    {
        "content": "<p>Aah, 81 hrs makes a lot more sense.</p>",
        "id": 290134911,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658252271
    },
    {
        "content": "<p>I think this is a very useful chart! Thanks for building it!</p>",
        "id": 290135089,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658252347
    },
    {
        "content": "<p>Thanks to Eric's comment, I got the labelling events out. An example of a viz:<br>\n<a href=\"/user_uploads/3121/c-p8mHEqrGX6IKe_-AWA9bn3/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/c-p8mHEqrGX6IKe_-AWA9bn3/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/c-p8mHEqrGX6IKe_-AWA9bn3/image.png\"></a></div>",
        "id": 290141043,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658255274
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/-IoxDneud6JhrUUpS2ju13aF/labels.csv\">labels.csv</a></p>",
        "id": 290141057,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658255281
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">from</span> <span class=\"n\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"kn\">import</span> <span class=\"n\">sys</span>\n<span class=\"kn\">import</span> <span class=\"n\">csv</span>\n<span class=\"kn\">import</span> <span class=\"n\">json</span>\n<span class=\"kn\">import</span> <span class=\"n\">requests</span>\n<span class=\"k\">from</span> <span class=\"n\">requests.adapters</span> <span class=\"kn\">import</span> <span class=\"n\">HTTPAdapter</span><span class=\"o\">,</span> <span class=\"n\">Retry</span>\n\n<span class=\"n\">writer</span> <span class=\"bp\">=</span> <span class=\"n\">csv.DictWriter</span><span class=\"o\">(</span><span class=\"kn\">open</span><span class=\"o\">(</span><span class=\"n\">sys.argv</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">],</span> <span class=\"s2\">\"w\"</span><span class=\"o\">),</span>\n  <span class=\"n\">fieldnames</span><span class=\"bp\">=</span><span class=\"o\">[</span><span class=\"s2\">\"action\"</span><span class=\"o\">,</span> <span class=\"s2\">\"created_at\"</span><span class=\"o\">,</span> <span class=\"s2\">\"number\"</span><span class=\"o\">,</span> <span class=\"s2\">\"label\"</span><span class=\"o\">])</span>\n<span class=\"n\">writer.writeheader</span><span class=\"o\">()</span>\n\n<span class=\"n\">session</span> <span class=\"bp\">=</span> <span class=\"n\">requests.Session</span><span class=\"o\">()</span>\n<span class=\"n\">retries</span> <span class=\"bp\">=</span> <span class=\"n\">Retry</span><span class=\"o\">(</span><span class=\"n\">total</span><span class=\"bp\">=</span><span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"n\">backoff_factor</span><span class=\"bp\">=</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">status_forcelist</span><span class=\"bp\">=</span><span class=\"o\">[</span><span class=\"mi\">500</span><span class=\"o\">])</span>\n<span class=\"n\">session.mount</span><span class=\"o\">(</span><span class=\"s2\">\"https://\"</span><span class=\"o\">,</span> <span class=\"n\">HTTPAdapter</span><span class=\"o\">(</span><span class=\"n\">max_retries</span><span class=\"bp\">=</span><span class=\"n\">retries</span><span class=\"o\">))</span>\n\n<span class=\"n\">per_page</span> <span class=\"bp\">=</span> <span class=\"mi\">100</span>\n<span class=\"n\">page</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">in_range</span> <span class=\"bp\">=</span> <span class=\"n\">True</span>\n<span class=\"n\">while</span> <span class=\"n\">in_range</span><span class=\"o\">:</span>\n  <span class=\"n\">page</span> <span class=\"bp\">+=</span> <span class=\"mi\">1</span>\n  <span class=\"n\">resp</span> <span class=\"bp\">=</span> <span class=\"n\">session.get</span><span class=\"o\">(</span>\n    <span class=\"s2\">\"https://api.github.com/repos/leanprover-community/mathlib/issues/events\"</span><span class=\"o\">,</span>\n    <span class=\"n\">headers</span><span class=\"bp\">=</span><span class=\"o\">{</span><span class=\"s2\">\"Accept\"</span><span class=\"o\">:</span> <span class=\"s2\">\"application/vnd.github+json\"</span><span class=\"o\">,</span> <span class=\"s2\">\"Authorization\"</span><span class=\"o\">:</span> <span class=\"n\">f</span><span class=\"s2\">\"token {token}\"</span><span class=\"o\">},</span>\n    <span class=\"n\">params</span><span class=\"bp\">=</span><span class=\"o\">{</span><span class=\"s2\">\"per_page\"</span><span class=\"o\">:</span> <span class=\"n\">per_page</span><span class=\"o\">,</span> <span class=\"s2\">\"page\"</span><span class=\"o\">:</span> <span class=\"n\">page</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">}</span>  <span class=\"bp\">#</span> <span class=\"n\">github</span> <span class=\"n\">starts</span> <span class=\"n\">at</span> <span class=\"mi\">1</span>\n  <span class=\"o\">)</span>\n  <span class=\"n\">for</span> <span class=\"n\">event</span> <span class=\"k\">in</span> <span class=\"n\">resp.json</span><span class=\"o\">():</span>\n    <span class=\"n\">print</span><span class=\"o\">(</span><span class=\"n\">resp</span><span class=\"o\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">event</span><span class=\"o\">[</span><span class=\"s2\">\"event\"</span><span class=\"o\">]</span> <span class=\"n\">not</span> <span class=\"k\">in</span> <span class=\"o\">[</span><span class=\"s2\">\"unlabeled\"</span><span class=\"o\">,</span> <span class=\"s2\">\"labeled\"</span><span class=\"o\">]:</span>\n      <span class=\"n\">continue</span>\n    <span class=\"n\">mini_event</span> <span class=\"bp\">=</span> <span class=\"o\">{}</span>\n    <span class=\"n\">mini_event</span><span class=\"o\">[</span><span class=\"s2\">\"action\"</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">event</span><span class=\"o\">[</span><span class=\"s2\">\"event\"</span><span class=\"o\">]</span>\n    <span class=\"n\">mini_event</span><span class=\"o\">[</span><span class=\"s2\">\"created_at\"</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">event</span><span class=\"o\">[</span><span class=\"s2\">\"created_at\"</span><span class=\"o\">]</span>\n    <span class=\"n\">mini_event</span><span class=\"o\">[</span><span class=\"s2\">\"number\"</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">event</span><span class=\"o\">[</span><span class=\"s2\">\"issue\"</span><span class=\"o\">][</span><span class=\"s2\">\"number\"</span><span class=\"o\">]</span>\n    <span class=\"n\">mini_event</span><span class=\"o\">[</span><span class=\"s2\">\"label\"</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"n\">event</span><span class=\"o\">[</span><span class=\"s2\">\"label\"</span><span class=\"o\">][</span><span class=\"s2\">\"name\"</span><span class=\"o\">]</span>\n    <span class=\"n\">writer.writerow</span><span class=\"o\">(</span><span class=\"n\">mini_event</span><span class=\"o\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">datetime.fromisoformat</span><span class=\"o\">(</span><span class=\"n\">mini_event</span><span class=\"o\">[</span><span class=\"s2\">\"created_at\"</span><span class=\"o\">][:</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">])</span> <span class=\"bp\">&lt;</span> <span class=\"n\">datetime</span><span class=\"o\">(</span><span class=\"mi\">2022</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">):</span>\n      <span class=\"n\">in_range</span> <span class=\"bp\">=</span> <span class=\"n\">False</span>\n</code></pre></div>",
        "id": 290141111,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658255292
    },
    {
        "content": "<p>Johan, are you sure you want the \"when's the earliest <code>awaiting-review</code>\"? It's like minutes between PR creating to labeling as <code>awaiting-review</code></p>",
        "id": 290143213,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658256296
    },
    {
        "content": "<p>As viz'd here, separate bins per month and whether <code>(earliest-awaiting-review-label - PR-creation) &lt; 5</code> <a href=\"/user_uploads/3121/xrSUBh85qITO47hUWQ7isv26/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/xrSUBh85qITO47hUWQ7isv26/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/xrSUBh85qITO47hUWQ7isv26/image.png\"></a></div>",
        "id": 290143640,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658256491
    },
    {
        "content": "<p>If you haven't done it already, something that would be nice to see is time between <code>awaiting-review</code> and any change in status (label change or closure). Individual PRs might have multiple of these intervals.</p>",
        "id": 290146292,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1658257647
    },
    {
        "content": "<p>Earliest <code>awaiting-review</code> or the latest?</p>",
        "id": 290146402,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658257688
    },
    {
        "content": "<p>for every <code>awaiting-review</code>, what's the time to the first change in status?</p>",
        "id": 290146505,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1658257746
    },
    {
        "content": "<p>Unfortunately, that's all the time I had today for these analyses. Given the csvs I attached earlier, I hope that they're enough to answer</p>",
        "id": 290147707,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1658258319
    },
    {
        "content": "<p>Thanks! That's already very useful!</p>",
        "id": 290150006,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658259392
    },
    {
        "content": "<p>Here's an attempt at visualizing lengths of review cycles, which is an interval of time when 'awaiting-review' is present, starting after the last 'awaiting-author', 'blocked-by-other-PR', 'awaiting-CI', 'CI', 'merge-conflict', 'help wanted', or 'WIP' was removed, ending when either 'awaiting-review' is removed or 'ready-to-merge' or 'ready-for-bors' are added.</p>\n<p>To get a sense of distributions, for each month in Yakov's data (<code>labels.csv</code>) I have the review cycles in sorted order, and the y-axis is in days. (So the x-axis is just the index of a given review cycle in sorted order.) A review cycle is recorded in the month it ends.</p>\n<p><a href=\"/user_uploads/3121/v87ltegtChGRqM6f7bQcf-6m/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/v87ltegtChGRqM6f7bQcf-6m/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/v87ltegtChGRqM6f7bQcf-6m/image.png\"></a></div>",
        "id": 290164456,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1658266663
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>code</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">csv</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"n\">datetime</span><span class=\"p\">,</span> <span class=\"n\">timedelta</span>\n\n<span class=\"n\">prs</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"labels.csv\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fin</span><span class=\"p\">:</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">reader</span><span class=\"p\">(</span><span class=\"n\">fin</span><span class=\"p\">)</span>\n    <span class=\"n\">header</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">entry</span> <span class=\"ow\">in</span> <span class=\"n\">r</span><span class=\"p\">:</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">header</span><span class=\"p\">,</span> <span class=\"n\">entry</span><span class=\"p\">))</span>\n        <span class=\"n\">pr</span> <span class=\"o\">=</span> <span class=\"n\">prs</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'number'</span><span class=\"p\">],</span> <span class=\"p\">{</span><span class=\"s1\">'actions'</span> <span class=\"p\">:</span> <span class=\"p\">[]})</span>\n        <span class=\"n\">pr</span><span class=\"p\">[</span><span class=\"s1\">'actions'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'action'</span><span class=\"p\">],</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'label'</span><span class=\"p\">],</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">fromisoformat</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'created_at'</span><span class=\"p\">][:</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">])))</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">yield_reviews</span><span class=\"p\">(</span><span class=\"n\">pr</span><span class=\"p\">):</span>\n    <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"k\">for</span> <span class=\"n\">action</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">time</span> <span class=\"ow\">in</span> <span class=\"n\">pr</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">action</span> <span class=\"o\">==</span> <span class=\"s1\">'labeled'</span> <span class=\"ow\">and</span> <span class=\"n\">label</span> <span class=\"o\">==</span> <span class=\"s1\">'awaiting-review'</span><span class=\"p\">:</span>\n            <span class=\"c1\"># begin review</span>\n            <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span>\n        <span class=\"k\">elif</span> <span class=\"n\">action</span> <span class=\"o\">==</span> <span class=\"s1\">'unlabeled'</span> <span class=\"ow\">and</span> <span class=\"n\">label</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">'awaiting-author'</span><span class=\"p\">,</span> <span class=\"s1\">'blocked-by-other-PR'</span><span class=\"p\">,</span> <span class=\"s1\">'awaiting-CI'</span><span class=\"p\">,</span> <span class=\"s1\">'CI'</span><span class=\"p\">,</span> <span class=\"s1\">'merge-conflict'</span><span class=\"p\">,</span> <span class=\"s1\">'help wanted'</span><span class=\"p\">,</span> <span class=\"s1\">'WIP'</span><span class=\"p\">):</span>\n            <span class=\"k\">if</span> <span class=\"n\">start</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"c1\"># in review, but this is actual start of review cycle</span>\n                <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span>\n        <span class=\"k\">elif</span> <span class=\"p\">(</span><span class=\"n\">action</span> <span class=\"o\">==</span> <span class=\"s1\">'unlabeled'</span> <span class=\"ow\">and</span> <span class=\"n\">label</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">'awaiting-review'</span><span class=\"p\">,))</span> \\\n             <span class=\"ow\">or</span> <span class=\"p\">(</span><span class=\"n\">action</span> <span class=\"o\">==</span> <span class=\"s1\">'labeled'</span> <span class=\"ow\">and</span> <span class=\"n\">label</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">'ready-to-merge'</span><span class=\"p\">,</span> <span class=\"s1\">'ready-for-bors'</span><span class=\"p\">)):</span>\n            <span class=\"k\">if</span> <span class=\"n\">start</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"c1\"># in review, end of review cycle</span>\n                <span class=\"k\">yield</span> <span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">time</span> <span class=\"o\">-</span> <span class=\"n\">start</span>\n                <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">elif</span> <span class=\"p\">(</span><span class=\"n\">action</span> <span class=\"o\">==</span> <span class=\"s1\">'unlabeled'</span> <span class=\"ow\">and</span> <span class=\"n\">label</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">'ready-to-merge'</span><span class=\"p\">,</span> <span class=\"s1\">'ready-for-bors'</span><span class=\"p\">))</span> \\\n             <span class=\"ow\">or</span> <span class=\"p\">(</span><span class=\"n\">action</span> <span class=\"o\">==</span> <span class=\"s1\">'labeled'</span> <span class=\"ow\">and</span> <span class=\"n\">label</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">'awaiting-author'</span><span class=\"p\">,</span> <span class=\"s1\">'blocked-by-other-PR'</span><span class=\"p\">,</span> <span class=\"s1\">'awaiting-CI'</span><span class=\"p\">,</span> <span class=\"s1\">'CI'</span><span class=\"p\">,</span> <span class=\"s1\">'merge-conflict'</span><span class=\"p\">,</span> <span class=\"s1\">'help wanted'</span><span class=\"p\">,</span> <span class=\"s1\">'WIP'</span><span class=\"p\">)):</span>\n            <span class=\"c1\"># no change to state</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">elif</span> <span class=\"n\">label</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"s1\">'RFC'</span><span class=\"p\">,</span><span class=\"s1\">'meta'</span><span class=\"p\">,</span><span class=\"s1\">'modifies-tactic-syntax'</span><span class=\"p\">,</span><span class=\"s1\">'delegated'</span><span class=\"p\">,</span><span class=\"s1\">'easy'</span><span class=\"p\">,</span><span class=\"s1\">'please-adopt'</span><span class=\"p\">,</span><span class=\"s1\">'feature-request'</span><span class=\"p\">,</span><span class=\"s1\">'docs'</span><span class=\"p\">,</span><span class=\"s1\">'needs-documentation'</span><span class=\"p\">,</span><span class=\"s1\">'good-first-project'</span><span class=\"p\">,</span><span class=\"s1\">'review-in-progress'</span><span class=\"p\">,</span><span class=\"s1\">'maybe-later'</span><span class=\"p\">,</span><span class=\"s1\">'not-ready-to-merge'</span><span class=\"p\">,</span><span class=\"s1\">'duplicate'</span><span class=\"p\">,</span><span class=\"s1\">'lintfix'</span><span class=\"p\">,</span><span class=\"s1\">'linter'</span><span class=\"p\">,</span><span class=\"s1\">'bug'</span><span class=\"p\">,</span><span class=\"s1\">'undergrad'</span><span class=\"p\">,</span><span class=\"s1\">'medium'</span><span class=\"p\">,</span><span class=\"s1\">'new-import'</span><span class=\"p\">,</span><span class=\"s1\">'imo'</span><span class=\"p\">,</span><span class=\"s1\">'enhancement'</span><span class=\"p\">,</span><span class=\"s1\">'mathport'</span><span class=\"p\">):</span>\n            <span class=\"c1\"># ignored labels</span>\n            <span class=\"c1\"># note: we ignore 'delegated' since it's usually still part of the review</span>\n            <span class=\"k\">pass</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"p\">)</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">Exception</span>\n    <span class=\"k\">if</span> <span class=\"n\">start</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"c1\"># note that if we get here, then this is still an open PR</span>\n        <span class=\"k\">pass</span>\n\n<span class=\"n\">review_times</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">pr</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">prs</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()):</span>\n    <span class=\"k\">for</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">length</span> <span class=\"ow\">in</span> <span class=\"n\">yield_reviews</span><span class=\"p\">(</span><span class=\"n\">pr</span><span class=\"p\">[</span><span class=\"s1\">'actions'</span><span class=\"p\">]):</span>\n        <span class=\"k\">if</span> <span class=\"n\">length</span> <span class=\"o\">&gt;</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">seconds</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">):</span>\n            <span class=\"n\">review_times</span><span class=\"o\">.</span><span class=\"n\">setdefault</span><span class=\"p\">((</span><span class=\"n\">start</span><span class=\"o\">.</span><span class=\"n\">year</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">.</span><span class=\"n\">month</span><span class=\"p\">),</span> <span class=\"p\">[])</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"o\">/</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n\n<span class=\"k\">for</span> <span class=\"n\">times</span> <span class=\"ow\">in</span> <span class=\"n\">review_times</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">():</span> <span class=\"n\">times</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"review_times.csv\"</span><span class=\"p\">,</span> <span class=\"s2\">\"w\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fout</span><span class=\"p\">:</span>\n    <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">csv</span><span class=\"o\">.</span><span class=\"n\">writer</span><span class=\"p\">(</span><span class=\"n\">fout</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">date</span> <span class=\"ow\">in</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">review_times</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()):</span>\n        <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">writerow</span><span class=\"p\">((</span><span class=\"s2\">\"date\"</span><span class=\"p\">,)</span> <span class=\"o\">+</span> <span class=\"n\">date</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">review_times</span><span class=\"p\">[</span><span class=\"n\">date</span><span class=\"p\">]):</span>\n            <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">writerow</span><span class=\"p\">((</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">t</span><span class=\"p\">))</span>\n        <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">writerow</span><span class=\"p\">(())</span>\n</code></pre></div>\n<p>The graphics were done with LibreOffice Calc</p>\n</div></div>",
        "id": 290164540,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1658266698
    },
    {
        "content": "<p>Can you replot with the same y axis on each graph, and maybe a log y scale?</p>",
        "id": 290165055,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658266983
    },
    {
        "content": "<p>I just used LibreOffice Calc -- I tried to figure out how to do any of that with it, but didn't find it with some clicking around.</p>\n<p>Here's the CSV in a silly format: <a href=\"/user_uploads/3121/iubePPOtLgaDl5xza1hpriZ3/review_times.csv\">review_times.csv</a></p>\n<p>Each month starts with \"date, 2022, 2\" (for example), then there are idx/days pairs, and then a blank line.</p>",
        "id": 290165432,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1658267187
    },
    {
        "content": "<p>Here's a less silly format if you want to do some processing of your own. It has year/month/day of the end of a review cycle and its duration in days. <a href=\"/user_uploads/3121/nR9FYQ7f7KLhnnPi1rRO60MD/review_times_full.csv\">review_times_full.csv</a></p>",
        "id": 290165922,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1658267458
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> Thanks! That clearly shows that review times have been increasing!<br>\nI guess the y-axis is still in hours? And has some outliers chopped off?</p>",
        "id": 290195697,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658295251
    },
    {
        "content": "<p>The ratio of PR submitters to number of distinct PR reviewers (and/or reviews per reviewer) is also possibly something interesting to look at over time. Lots of larger projects I think run into cases where the rate of growth of the former outpaces the latter either because submitting is more fun than reviewing or because it takes active encouragement to get people to think they're good enough to review stuff.</p>",
        "id": 290195781,
        "sender_full_name": "Julian Berman",
        "timestamp": 1658295370
    },
    {
        "content": "<p>Nice idea. If we can autogenerate a bunch of such plots, I think that would be really useful.</p>",
        "id": 290195810,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658295461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> The y-axes are in days, and no outliers have been removed. What I'm seeing is that reviewing times have gotten longer, but there has simultaneously been fewer review cycles overall. These are only a few months though so it's hard to say what's going on.</p>",
        "id": 290196641,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1658296635
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113488-general/topic/Queue.20histograms/near/290196641\">said</a>:</p>\n<blockquote>\n<p>there has simultaneously been fewer review cycles overall</p>\n</blockquote>\n<p>That's an interesting point! Could that be correlated with there being a lot more PRs that are 20 - 50 lines long? Or even &lt; 20 lines, adding just 1 lemma?</p>",
        "id": 290196996,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658297045
    },
    {
        "content": "<p>I suspected it was more of a cultural thing. Given that there are more PRs, you cannot spend as much time reviewing each.</p>",
        "id": 290213021,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1658310190
    }
]