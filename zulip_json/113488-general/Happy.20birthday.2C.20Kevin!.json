[
    {
        "content": "<p><a href=\"https://github.com/semorrison/kbb\" target=\"_blank\" title=\"https://github.com/semorrison/kbb\">https://github.com/semorrison/kbb</a></p>",
        "id": 134343927,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1537485033
    },
    {
        "content": "<p>Happy birthday, <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>!</p>",
        "id": 134343955,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1537485082
    },
    {
        "content": "<p>We made a little present for you.</p>",
        "id": 134343966,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1537485100
    },
    {
        "content": "<p>?!</p>",
        "id": 134344025,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537485127
    },
    {
        "content": "<p>I don't take birthdays at all seriously</p>",
        "id": 134344028,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537485139
    },
    {
        "content": "<p>but this is pretty awesome!</p>",
        "id": 134344030,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537485146
    },
    {
        "content": "<p>Are there modular forms??</p>",
        "id": 134344035,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537485154
    },
    {
        "content": "<p>You mean examples, or just the definition? :-)</p>",
        "id": 134344083,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1537485222
    },
    {
        "content": "<p>who cares about examples :-)</p>",
        "id": 134344133,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537485249
    },
    {
        "content": "<p>I'm no expert, but I think that modular forms were among the projects done here</p>",
        "id": 134344229,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537485364
    },
    {
        "content": "<p>If only we had a number theorist to help out :)</p>",
        "id": 134344252,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537485390
    },
    {
        "content": "<p>I mentioned on the chat earlier today that I was going to have a day off work, but I didn't say why. I am 50 today (I have been for ten minutes in fact), which some people think is a big deal. I've spent so much time over the last few months just doing basic number theory / topology with random undergraduates many of whom do not even speak on this forum, I've had a really good time, it's meant that I've got behind on so many things but honestly Lean has changed my life for the better and I'm so pleased to be involved. Oh wow so much stuff I didn't know about!</p>",
        "id": 134344275,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537485429
    },
    {
        "content": "<p>There are char polys?</p>",
        "id": 134344359,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537485543
    },
    {
        "content": "<p>This is just ridiculous, there is stuff here. It should all go in the \"what's new in Lean maths\" thread.</p>",
        "id": 134344374,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537485574
    },
    {
        "content": "<p>oh what a complete surprise!</p>",
        "id": 134344438,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537485640
    },
    {
        "content": "<p>I think Johan is pretty competent at modular forms :-)</p>",
        "id": 134344453,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537485679
    },
    {
        "content": "<p>I am stunned.</p>",
        "id": 134344835,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537486179
    },
    {
        "content": "<p>Nobody ever gives me anything for my birthday, it is not taken at all seriously around here. I just get a new pair of trousers from my partner and that's it :-)</p>",
        "id": 134344897,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537486213
    },
    {
        "content": "<p>This year I got modular forms!</p>",
        "id": 134344910,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537486229
    },
    {
        "content": "<p>My birthday present is a bit late, but I should have that refactor out today</p>",
        "id": 134345000,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537486331
    },
    {
        "content": "<p>rofl</p>",
        "id": 134345029,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537486397
    },
    {
        "content": "<p>I would never dream of hurrying you. Sometimes people have to wait. Patrick really wants perfectoids done but I was talking to Chris over lunch and confessing that I was skipping lemmas about valuations because even though they \"should be there\", I wasn't going to put them there until we needed them. Chris said that this wasn't really the way to write Lean code. But if I write it properly Patrick will have to wait even longer. That's why ultimately I decided to start at the top to find out how many sorrys there are. Maybe I can even estimate how much work is left, in some sense. But as you once said, it's an open source project, people work on it when they can.</p>",
        "id": 134345111,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537486559
    },
    {
        "content": "<p>Oh it's no hurry, it's timing :)</p>",
        "id": 134345161,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537486595
    },
    {
        "content": "<p>There are differentiable functions!</p>",
        "id": 134345416,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537486949
    },
    {
        "content": "<p>About time!</p>",
        "id": 134345421,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537486956
    },
    {
        "content": "<p>Happy birthday Kevin! <span class=\"emoji emoji-1f382\" title=\"birthday\">:birthday:</span> <span class=\"emoji emoji-1f603\" title=\"smiley\">:smiley:</span></p>",
        "id": 134356287,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1537505485
    },
    {
        "content": "<p>Happy birthday! <span class=\"emoji emoji-1f389\" title=\"tada\">:tada:</span></p>",
        "id": 134357749,
        "sender_full_name": "Sean Leather",
        "timestamp": 1537508389
    },
    {
        "content": "<p>Happy birthday! <span class=\"emoji emoji-1f382\" title=\"birthday\">:birthday:</span> <span class=\"emoji emoji-1f386\" title=\"fireworks\">:fireworks:</span> <span class=\"emoji emoji-1f38a\" title=\"confetti\">:confetti:</span></p>",
        "id": 134360122,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537512297
    },
    {
        "content": "<p>people keep finding more exciting emoji</p>",
        "id": 134360137,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537512317
    },
    {
        "content": "<p><span class=\"emoji emoji-1f382\" title=\"birthday\">:birthday:</span> <span class=\"emoji emoji-1f382\" title=\"birthday\">:birthday:</span> <span class=\"emoji emoji-1f382\" title=\"birthday\">:birthday:</span> <span class=\"emoji emoji-1f382\" title=\"birthday\">:birthday:</span> <span class=\"emoji emoji-1f382\" title=\"birthday\">:birthday:</span> <span class=\"emoji emoji-1f382\" title=\"birthday\">:birthday:</span> <span class=\"emoji emoji-1f382\" title=\"birthday\">:birthday:</span> <span class=\"emoji emoji-1f382\" title=\"birthday\">:birthday:</span> <span class=\"emoji emoji-1f382\" title=\"birthday\">:birthday:</span> <span class=\"emoji emoji-1f382\" title=\"birthday\">:birthday:</span></p>",
        "id": 134360146,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1537512361
    },
    {
        "content": "<p><span class=\"emoji emoji-0035-20e3\" title=\"five\">:five:</span> <span class=\"emoji emoji-0030-20e3\" title=\"zero\">:zero:</span> <span class=\"emoji emoji-203c\" title=\"double exclamation\">:double_exclamation:</span></p>",
        "id": 134360181,
        "sender_full_name": "Sean Leather",
        "timestamp": 1537512364
    },
    {
        "content": "<p><a href=\"http://www.wolframalpha.com/input/?i=50!!\" target=\"_blank\" title=\"http://www.wolframalpha.com/input/?i=50!!\">520469842636666622693081088000000</a></p>",
        "id": 134360199,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1537512400
    },
    {
        "content": "<p>not to be confused with <a href=\"http://www.wolframalpha.com/input/?i=50!+!\" target=\"_blank\" title=\"http://www.wolframalpha.com/input/?i=50!+!\">10^(10^66.28958573684642)</a></p>",
        "id": 134360266,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537512495
    },
    {
        "content": "<p>Thank you Johan for the post on the \"what's new\" stream and thank you all of you for the repo. I am overwhelmed. You inspired me to write this: <a href=\"https://mathoverflow.net/questions/311071/which-mathematical-definitions-should-be-formalised-in-lean\" target=\"_blank\" title=\"https://mathoverflow.net/questions/311071/which-mathematical-definitions-should-be-formalised-in-lean\">https://mathoverflow.net/questions/311071/which-mathematical-definitions-should-be-formalised-in-lean</a></p>",
        "id": 134373030,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537531050
    },
    {
        "content": "<p>It's a place for wishes.</p>",
        "id": 134373104,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537531108
    },
    {
        "content": "<p>I heard maybe we should try to formalize the Riemann zeta function</p>",
        "id": 134373727,
        "sender_full_name": "Reid Barton",
        "timestamp": 1537531861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Thanks for writing that question on mathoverflow. I am really excited and I look forward to the reactions.</p>",
        "id": 134373728,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1537531863
    },
    {
        "content": "<blockquote>\n<p>I heard maybe we should try to formalize the Riemann zeta function</p>\n</blockquote>\n<p>How much of that is already done in formal abstracts?</p>",
        "id": 134373748,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1537531894
    },
    {
        "content": "<p>That's a really good suggestion. I think Hales' definition had sorries. Oh -- the issue is the analytic continuation. Convergence shouldn't be hard for the experts <em>now we have exp</em> :-)</p>",
        "id": 134373913,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537532073
    },
    {
        "content": "<p><a href=\"https://github.com/thalesant/formalabstracts/blob/riemann_hypothesis/folklore/complex.lean#L246\" target=\"_blank\" title=\"https://github.com/thalesant/formalabstracts/blob/riemann_hypothesis/folklore/complex.lean#L246\">https://github.com/thalesant/formalabstracts/blob/riemann_hypothesis/folklore/complex.lean#L246</a></p>",
        "id": 134373928,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537532099
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>n</mi><mi>s</mi></msup><mo>:</mo><mo>=</mo><mi>exp</mi><mo>(</mo><mi>s</mi><mi>log</mi><mi>n</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">n^s := \\exp(s\\log n)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord\"><span class=\"mord mathit\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathit mtight\">s</span></span></span></span></span></span></span></span><span class=\"mrel\">:</span><span class=\"mrel\">=</span><span class=\"mop\">exp</span><span class=\"mopen\">(</span><span class=\"mord mathit\">s</span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mord mathit\">n</span><span class=\"mclose\">)</span></span></span></span> oh crap we need log too</p>",
        "id": 134373936,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537532104
    },
    {
        "content": "<p>But convergence is also not proved</p>",
        "id": 134373943,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537532108
    },
    {
        "content": "<p>Wait do we have <code>complex.pow</code>?</p>",
        "id": 134374015,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537532181
    },
    {
        "content": "<p>Does his definition compile?</p>",
        "id": 134374020,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537532191
    },
    {
        "content": "<p><a href=\"https://github.com/thalesant/formalabstracts/blob/riemann_hypothesis/folklore/complex.lean#L153\" target=\"_blank\" title=\"https://github.com/thalesant/formalabstracts/blob/riemann_hypothesis/folklore/complex.lean#L153\">https://github.com/thalesant/formalabstracts/blob/riemann_hypothesis/folklore/complex.lean#L153</a></p>",
        "id": 134374025,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537532202
    },
    {
        "content": "<p>nice to see pi there -- I heard we had that.</p>",
        "id": 134374035,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537532226
    },
    {
        "content": "<p>But this is just real log we need; complex exp but real log.</p>",
        "id": 134374042,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537532235
    },
    {
        "content": "<p>So we need that exp is strictly increasing and continuous, and enough analysis to show that it yields a bijection between the reals and the positive reals.</p>",
        "id": 134374059,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537532275
    },
    {
        "content": "<p>Yeah, this is an example of how it's tricky to say exactly what it means to define something. What Hales has done here is define a function <code>ζ</code> which, \"externally\", we can prove is equal to the usual zeta function.<br>\nActually he only did this assuming a couple axioms, but the axioms are easy to avoid--just define <code>ζ</code> in terms of the axioms if they are true, and define it to be 37 if they are false.<br>\nThis sort of thing already happened implicitly where he defined <code>exp</code> as a <code>tsum</code> and <code>real.log</code> as a <code>sup</code>--there are side conditions that you need here to make sure that you defined what you expected to define.</p>",
        "id": 134375090,
        "sender_full_name": "Reid Barton",
        "timestamp": 1537533660
    },
    {
        "content": "<p>So the first goal is to give a sorry-free definition of an explicit function from C -&gt; C which away from s = 1 agrees with the Riemann zeta function, possibly after invoking known mathematical theorems. Can we make it computable?</p>",
        "id": 134375890,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537534527
    },
    {
        "content": "<p>Can someone put Riemann Zeta Function on the MO thread?</p>",
        "id": 134375893,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537534539
    },
    {
        "content": "<p>I don't want to spam my own MO post with my own answers, this isn't an exercise in self-advertisement, it's a research proposal.</p>",
        "id": 134375950,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537534567
    },
    {
        "content": "<p>Collaborators wanted.</p>",
        "id": 134375955,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537534581
    },
    {
        "content": "<p>Right, I don't think you should spam it. But we shouldn't spam it either... I'dd be very interested in what \"tabula rasa\" mathematicians come up with. I might post something tomorrow.</p>",
        "id": 134385190,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1537543832
    },
    {
        "content": "<p>Chris had only just finished pi in time for the birthday surprise, but real log is almost there and complex log can be done with a bit more work. See <a href=\"#narrow/stream/141825-kbb/subject/sine.20and.20cosine.20and.20pi/near/134258931\" title=\"#narrow/stream/141825-kbb/subject/sine.20and.20cosine.20and.20pi/near/134258931\">https://leanprover.zulipchat.com/#narrow/stream/141825-kbb/subject/sine.20and.20cosine.20and.20pi/near/134258931</a></p>",
        "id": 134388458,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537547242
    },
    {
        "content": "<p>Could that stream be made public now that the birthday surprise has been revealed?</p>",
        "id": 134388523,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1537547317
    },
    {
        "content": "<p>look for kbb, it should be public (at least I don't see a lock anymore)</p>",
        "id": 134388758,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1537547632
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Wow, I think the response to your mathoverflow post is really positive! I expected a lot (a lot!) more skepticism from the community. Maybe mathoverflow isn't completely representative. But still, I really like this. Apart from the thing about Inter-Universal Teichmuller Theory all the other proposals are actually nice (somewhat ambitious) and realisable.</p>",
        "id": 134390215,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1537549205
    },
    {
        "content": "<p>The post has an immense rate of upvotes (a lot faster then your post about perfectoids in Lean). And the post doesn't even mention that you are turning 50 today <span class=\"emoji emoji-1f600\" title=\"grinning\">:grinning:</span></p>",
        "id": 134390367,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1537549338
    },
    {
        "content": "<p>Johan I would like to personally thank you for your idea about pi, and also Patrick for your suggestion about the T_2 project. I am still really flattered and stunned, and really touched. I think everyone should try to formalise one of their theorems. I don't understand formal abstracts. Are they waiting for Lean 4 or what? I don't have any unrealistic ambitions. I'm not thinking that in 1 year we will have Lean 4 with the global Langlands conjectures. But all this internet noise I'm trying to make today is because I want to train mathematicians <em>right now</em>, so we are ready to deal with what what might be the huge task of porting Mathlib to Lean 4. Johannes is leaving academia and Mario cannot do it alone. We need more volunteers and they need training. We have now seen that it takes one year to turn an incoming first year undergraduate into Chris Hughes or Kenny Lau. Let's make a few more of them with Lean 3.4.2 and worry about Lean 4 later. Let's see what we can do with a first year PhD student. There are plenty of other things to worry about before Lean 4. For example categories and canonical isomorphisms / transport de structure. Lean 4 is not magically going to solve those, or at least I don't think it is.</p>",
        "id": 134390810,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537549721
    },
    {
        "content": "<p>My pleasure! It was a lot of fun to work on these projects behind your back. But really <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> deserves an insane amount of credit. He did all the hard work on <code>exp</code> and <code>pi</code> all by himself.</p>",
        "id": 134390944,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1537549843
    },
    {
        "content": "<p>well that was eventful. Thank you all for the encouragement. If anyone wants to write a guest blog post just ask.</p>",
        "id": 134412318,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537573315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> What do you two think about the ideas <a href=\"https://mathoverflow.net/q/311071/91375\" target=\"_blank\" title=\"https://mathoverflow.net/q/311071/91375\">here</a>?</p>",
        "id": 134420409,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1537588386
    },
    {
        "content": "<p>Woo, Kevin's MO question just hit the HNQ list, which means it will be seen across all of stack overflow</p>",
        "id": 134716454,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538014472
    },
    {
        "content": "<p>Let's see what happens...</p>",
        "id": 134718397,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538017586
    },
    {
        "content": "<p>Kevin's question generated a noticeable bump in users on the stats page</p>",
        "id": 134721303,
        "sender_full_name": "Reid Barton",
        "timestamp": 1538022629
    },
    {
        "content": "<p>\"Locally presentable categories and combinatorial model categories please. Is it feasible ? I am actually discovering this thread and know nothing about Lean.\" says someone on the MO question, <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> ?</p>",
        "id": 134725596,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538030037
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> was talking about similar stuff in Orsay. This shouldn't be too far.</p>",
        "id": 134726463,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538031282
    },
    {
        "content": "<p>Yesterday I wrote about half of a detailed outline for model categories.<br>\nActually I wrote all of the parts up through constructing combinatorial model categories if you don't want any examples <span class=\"emoji emoji-263a\" title=\"smile\">:smile:</span></p>",
        "id": 134737921,
        "sender_full_name": "Reid Barton",
        "timestamp": 1538047311
    },
    {
        "content": "<p>Happy birthday, <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  <span aria-label=\"cake\" class=\"emoji emoji-1f370\" role=\"img\" title=\"cake\">:cake:</span></p>",
        "id": 176247308,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1569037695
    },
    {
        "content": "<p>rofl so I was expecting Galois cohomology and Tate-Shafarevich groups :-)</p>",
        "id": 176263814,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1569070714
    },
    {
        "content": "<p>Yeah, we were almost done with</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">fintype</span> <span class=\"o\">(</span><span class=\"n\">Sha</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</pre></div>\n\n\n<p>but gave up when we realised your birthday was today, and not tomorrow...</p>",
        "id": 176265174,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1569072968
    },
    {
        "content": "<p>Happy birthday, <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> <span aria-label=\"birthday\" class=\"emoji emoji-1f382\" role=\"img\" title=\"birthday\">:birthday:</span></p>",
        "id": 254151811,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632196062
    },
    {
        "content": "<p>Thank you! My birthday is traditionally a good Lean day, for example in 2019 it was the day that things like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span></span></span></span> and sine/cosine were formalised. This year is going to be no exception, but for more details we have to wait until the official announcement...(which might actually be tomorrow, at least in the UK, and because of Covid restrictions I'm even missing the canapés, but I can live with this). The community goes from strength to strength...</p>",
        "id": 254159136,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632203772
    },
    {
        "content": "<p>Happy birthday to you! Dear <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> <span aria-label=\"birthday\" class=\"emoji emoji-1f382\" role=\"img\" title=\"birthday\">:birthday:</span></p>",
        "id": 299880826,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663732860
    },
    {
        "content": "<p>Happy CPP deadline day too, to everyone who's celebrating that! Looking forward to reading the sphere eversion paper!</p>",
        "id": 299881195,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1663733193
    }
]