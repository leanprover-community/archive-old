[
    {
        "content": "<p>I'm curious why we have two nearly duplicate type class hierarchies – multiplicative and additive – in Lean. It seems like it would be better to have the type classes be parameterized by the binary operator instead of inheriting the operator. I suppose there are technical/practical problems here which led to the current design.</p>",
        "id": 135157838,
        "sender_full_name": "Sean Leather",
        "timestamp": 1538639589
    },
    {
        "content": "<p>Yes. You are right. I'll search for the discussion. 1 sec</p>",
        "id": 135157910,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538639675
    },
    {
        "content": "<p><a href=\"#narrow/stream/116395-maths/subject/additive.20group.20homs/near/127064577\" title=\"#narrow/stream/116395-maths/subject/additive.20group.20homs/near/127064577\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/subject/additive.20group.20homs/near/127064577</a></p>",
        "id": 135157995,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538639795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110045\">@Sean Leather</span> <span class=\"emoji emoji-2b06\" title=\"up\">:up:</span></p>",
        "id": 135157999,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538639804
    },
    {
        "content": "<p>Also <a href=\"https://github.com/leanprover/lean/wiki/Refactoring-structures\" target=\"_blank\" title=\"https://github.com/leanprover/lean/wiki/Refactoring-structures\">https://github.com/leanprover/lean/wiki/Refactoring-structures</a></p>",
        "id": 135158019,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1538639878
    },
    {
        "content": "<blockquote>\n<p>Also <a href=\"https://github.com/leanprover/lean/wiki/Refactoring-structures\" target=\"_blank\" title=\"https://github.com/leanprover/lean/wiki/Refactoring-structures\">https://github.com/leanprover/lean/wiki/Refactoring-structures</a></p>\n</blockquote>\n<p>I've tried to read that before and my eyes glazed over every time.</p>",
        "id": 135158491,
        "sender_full_name": "Sean Leather",
        "timestamp": 1538640519
    }
]