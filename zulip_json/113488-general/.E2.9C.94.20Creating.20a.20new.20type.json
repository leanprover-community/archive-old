[
    {
        "content": "<p>Alright, I finally have a ring I am happy with.  Thank y'all.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">ring</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"kd\">extends</span> <span class=\"n\">has_add</span> <span class=\"n\">α</span>\n  <span class=\"o\">,</span> <span class=\"n\">has_mul</span> <span class=\"n\">α</span>\n  <span class=\"o\">,</span> <span class=\"n\">has_one</span> <span class=\"n\">α</span>\n  <span class=\"o\">,</span> <span class=\"n\">has_zero</span> <span class=\"n\">α</span>\n  <span class=\"o\">,</span> <span class=\"n\">has_inv</span> <span class=\"n\">α</span>\n  <span class=\"o\">:=</span>\n    <span class=\"o\">(</span><span class=\"n\">add_assoc</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">mul_assoc</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">add_left_id</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">mul_left_id</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">mul_right_id</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">add_left_inv</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span>  <span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">left_distribute</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">right_distribute</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">ring</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">add_right_inv</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">add_left_id</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span><span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">add_left_inv</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span><span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">add_assoc</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span><span class=\"o\">),</span>\n  <span class=\"n\">conv</span> <span class=\"k\">in</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span><span class=\"o\">))</span>\n  <span class=\"kd\">begin</span>\n    <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">add_assoc</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">add_assoc</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">add_left_inv</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">add_left_id</span><span class=\"o\">,</span>\n  <span class=\"kd\">end</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 256128533,
        "sender_full_name": "É Olive",
        "timestamp": 1633379751
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"448275\">É Olive</span> has marked this topic as resolved.</p>",
        "id": 256128652,
        "sender_full_name": "Notification Bot",
        "timestamp": 1633379789
    },
    {
        "content": "<p><code>1+a=a</code> goes against the usual mathematical convention...</p>",
        "id": 256128811,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633379860
    },
    {
        "content": "<p>Whoops, that should really be <code>1*a</code>, what I have here is not even a ring.</p>",
        "id": 256128953,
        "sender_full_name": "É Olive",
        "timestamp": 1633379906
    },
    {
        "content": "<p>Similarly we usually use <code>inv</code> to mean multiplicative inverse. You might want to use <code>neg</code> for additive inverse</p>",
        "id": 256129042,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633379950
    },
    {
        "content": "<p>Your <code>add_left_inv</code> and <code>add_right_inv</code> seem to be the same (and should perhaps be renamed <code>add_left_neg</code> etc)</p>",
        "id": 256129323,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633380075
    },
    {
        "content": "<p>wooah cool, you marked the thread as resolved and now we magically have a new thread containining some of the messages from the old thread. This looks like a Zulip bug?</p>",
        "id": 256129879,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633380277
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110596\">Rob Lewis</span> has marked this topic as resolved.</p>",
        "id": 256132270,
        "sender_full_name": "Notification Bot",
        "timestamp": 1633381403
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/.E2.9C.94.20Creating.20a.20new.20type/near/256129879\">said</a>:</p>\n<blockquote>\n<p>wooah cool, you marked the thread as resolved and now we magically have a new thread containining some of the messages from the old thread. This looks like a Zulip bug?</p>\n</blockquote>\n<p>Marking a topic as resolved just edits the topic of all the posts to include the check mark... not the most intelligent feature</p>",
        "id": 256132430,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1633381469
    },
    {
        "content": "<p>And apparently the notification bot jumps in whenever a check mark is edited into a topic name. (I didn't use the \"resolve topic\" button there)</p>",
        "id": 256132542,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1633381535
    }
]