[
    {
        "content": "<p>On my local machine, the following works with <code>simp</code>, but gives a deterministic timeout with the <code>squeeze_simp</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">geometry.manifold.times_cont_mdiff</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">set</span> <span class=\"n\">charted_space</span> <span class=\"n\">smooth_manifold_with_corners</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">topological_space</span> <span class=\"n\">manifold</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"bp\">ùïú</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">nondiscrete_normed_field</span> <span class=\"bp\">ùïú</span><span class=\"o\">]</span>\n<span class=\"c1\">-- declare a smooth manifold `M` over the pair `(E, H)`.</span>\n<span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">normed_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"bp\">ùïú</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n<span class=\"o\">{</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">H</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">model_with_corners</span> <span class=\"bp\">ùïú</span> <span class=\"n\">E</span> <span class=\"n\">H</span><span class=\"o\">)</span>\n<span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">charted_space</span> <span class=\"n\">H</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">smooth_manifold_with_corners</span> <span class=\"n\">I</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n<span class=\"c1\">-- declare a smooth manifold `M'` over the pair `(E', H')`.</span>\n<span class=\"o\">{</span><span class=\"n\">E'</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">normed_group</span> <span class=\"n\">E'</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"bp\">ùïú</span> <span class=\"n\">E'</span><span class=\"o\">]</span>\n<span class=\"o\">{</span><span class=\"n\">H'</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">H'</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">I'</span> <span class=\"o\">:</span> <span class=\"n\">model_with_corners</span> <span class=\"bp\">ùïú</span> <span class=\"n\">E'</span> <span class=\"n\">H'</span><span class=\"o\">)</span>\n<span class=\"o\">{</span><span class=\"n\">M'</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">M'</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">charted_space</span> <span class=\"n\">H'</span> <span class=\"n\">M'</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">smooth_manifold_with_corners</span> <span class=\"n\">I'</span> <span class=\"n\">M'</span><span class=\"o\">]</span>\n<span class=\"c1\">-- declare functions, sets, points and smoothness indices</span>\n<span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">M'</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">M</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">with_top</span> <span class=\"n\">‚Ñï</span><span class=\"o\">}</span>\n\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span>\n  <span class=\"n\">times_cont_mdiff_on</span> <span class=\"n\">I</span> <span class=\"n\">I'</span> <span class=\"n\">n</span> <span class=\"n\">f</span> <span class=\"n\">s</span> <span class=\"bp\">‚Üî</span> <span class=\"n\">continuous_on</span> <span class=\"n\">f</span> <span class=\"n\">s</span> <span class=\"bp\">‚àß</span> <span class=\"bp\">‚àÄ</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">M'</span><span class=\"o\">),</span>\n    <span class=\"n\">times_cont_mdiff_on</span> <span class=\"n\">I</span> <span class=\"o\">(</span><span class=\"n\">model_with_corners_self</span> <span class=\"bp\">ùïú</span> <span class=\"n\">E'</span><span class=\"o\">)</span> <span class=\"n\">n</span> <span class=\"o\">((</span><span class=\"n\">ext_chart_at</span> <span class=\"n\">I'</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">‚àò</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">‚à©</span> <span class=\"n\">f</span> <span class=\"bp\">‚Åª¬π'</span> <span class=\"o\">(</span><span class=\"n\">ext_chart_at</span> <span class=\"n\">I'</span> <span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">source</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">inhabit</span> <span class=\"n\">E'</span><span class=\"o\">,</span>\n  <span class=\"n\">squeeze_simp</span> <span class=\"o\">[</span><span class=\"n\">times_cont_mdiff_on_iff</span><span class=\"o\">],</span>\n  <span class=\"n\">intros</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">refine</span> <span class=\"bp\">Œª</span> <span class=\"n\">h'</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"o\">‚ü®</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">Œª</span> <span class=\"n\">x</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">h'</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">‚ü©,</span>\n    <span class=\"k\">have</span> <span class=\"n\">h''</span> <span class=\"o\">:</span> <span class=\"n\">continuous_on</span> <span class=\"n\">_</span> <span class=\"n\">univ</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">model_with_corners.continuous</span> <span class=\"n\">I'</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">continuous_on</span><span class=\"o\">,</span>\n    <span class=\"n\">convert</span> <span class=\"o\">(</span><span class=\"n\">h''.comp'</span> <span class=\"o\">(</span><span class=\"n\">chart_at</span> <span class=\"n\">H'</span> <span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">continuous_to_fun</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comp'</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"bp\">Œª</span> <span class=\"n\">h'</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">h'</span> <span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">default</span> <span class=\"n\">E'</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>Is there a setting I can adjust to make the <code>squeeze_simp</code> work?</p>",
        "id": 221716157,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1609889477
    },
    {
        "content": "<p>I've run into this situation before. I don't know why it happens, but if you <code>set_option trace.simplify.rewrite true</code> then you should be able to see the lemmas which <code>simp</code> is using and maybe you can roll your own <code>simp only ...</code>.</p>",
        "id": 221718245,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609890859
    },
    {
        "content": "<p>PS I've just tried this. My you analysts are getting good at <code>simp</code>! That's quite a list!</p>",
        "id": 221718487,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609891018
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">times_cont_mdiff_on_iff</span><span class=\"o\">,</span><span class=\"n\">ext_chart_at.equations._eqn_1</span><span class=\"o\">,</span><span class=\"n\">local_equiv.coe_trans</span><span class=\"o\">,</span><span class=\"n\">model_with_corners.to_local_equiv_coe</span><span class=\"o\">,</span><span class=\"n\">local_homeomorph.coe_coe</span><span class=\"o\">,</span><span class=\"n\">ext_chart_at.equations._eqn_1</span><span class=\"o\">,</span><span class=\"n\">local_equiv.coe_trans_symm</span><span class=\"o\">,</span><span class=\"n\">local_homeomorph.coe_coe_symm</span><span class=\"o\">,</span><span class=\"n\">model_with_corners.to_local_equiv_coe_symm</span><span class=\"o\">,</span><span class=\"n\">local_equiv.trans_target</span><span class=\"o\">,</span><span class=\"n\">model_with_corners.target</span><span class=\"o\">,</span><span class=\"n\">local_equiv.trans_source</span><span class=\"o\">,</span><span class=\"n\">model_with_corners.source_eq</span><span class=\"o\">,</span><span class=\"n\">set.preimage_univ</span><span class=\"o\">,</span><span class=\"n\">set.inter_univ</span><span class=\"o\">,</span><span class=\"n\">set.preimage_inter</span><span class=\"o\">,</span><span class=\"n\">ext_chart_at.equations._eqn_1</span><span class=\"o\">,</span><span class=\"n\">local_equiv.coe_trans</span><span class=\"o\">,</span><span class=\"n\">local_homeomorph.coe_coe</span><span class=\"o\">,</span><span class=\"n\">local_equiv.trans_source</span><span class=\"o\">,</span><span class=\"n\">set.preimage_univ</span><span class=\"o\">,</span><span class=\"n\">set.inter_univ</span><span class=\"o\">,</span><span class=\"n\">times_cont_mdiff_on_iff</span><span class=\"o\">,</span><span class=\"n\">ext_chart_at.equations._eqn_1</span><span class=\"o\">,</span><span class=\"n\">chart_at_self_eq</span><span class=\"o\">,</span><span class=\"n\">local_homeomorph.refl_local_equiv</span><span class=\"o\">,</span><span class=\"n\">model_with_corners_self_local_equiv</span><span class=\"o\">,</span><span class=\"n\">local_equiv.refl_trans</span><span class=\"o\">,</span><span class=\"n\">local_equiv.refl_coe</span><span class=\"o\">,</span><span class=\"n\">ext_chart_at.equations._eqn_1</span><span class=\"o\">,</span><span class=\"n\">local_equiv.coe_trans_symm</span><span class=\"o\">,</span><span class=\"n\">local_homeomorph.coe_coe_symm</span><span class=\"o\">,</span><span class=\"n\">function.comp.left_id</span><span class=\"o\">,</span><span class=\"n\">local_equiv.trans_target</span><span class=\"o\">,</span><span class=\"n\">local_equiv.refl_source</span><span class=\"o\">,</span><span class=\"n\">set.preimage_univ</span><span class=\"o\">,</span><span class=\"n\">set.inter_univ</span><span class=\"o\">,</span><span class=\"n\">set.preimage_inter</span><span class=\"o\">,</span><span class=\"n\">and.congr_right_iff</span><span class=\"o\">],</span>\n</code></pre></div>\n<p>works fine for me</p>",
        "id": 221718824,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609891214
    },
    {
        "content": "<p>Thanks, Kevin!!</p>",
        "id": 221720353,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1609892536
    }
]