[
    {
        "content": "<p>It would be useful to generalize our theory of localizations of commutative monoids to localizations of arbitrary monoids at a <em>central</em> submonoid. This is nicely written up in <a href=\"https://ncatlab.org/nlab/show/commutative+localization\">this nlab page</a>.<br>\nHow should we manage the \"central\" hypothesis though? Do we have anything like this already, perhaps in the context of polynomials?</p>",
        "id": 209498983,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599651121
    },
    {
        "content": "<p>Possibilities include using bundled central submonoids (but this sounds sort of annoying in the common case of a commutative ring?) or a type class <code>is_central {M : Type*} [monoid M] (S : submonoid M)</code>  (but we always seem to change our minds about using type classes eventually?)</p>",
        "id": 209499524,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599651507
    },
    {
        "content": "<p>We bundled normal subgroups as well as subgroups when we made the group theory game</p>",
        "id": 209499851,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599651802
    },
    {
        "content": "<p>OK, good example because every subgroup of an abelian group is also normal.</p>",
        "id": 209499870,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599651833
    },
    {
        "content": "<p>I was expecting it to be annoying but it wasn't too bad</p>",
        "id": 209499920,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599651857
    },
    {
        "content": "<p>so currently in <code>group_theory.quotient_group</code> I see</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">nN</span> <span class=\"o\">:</span> <span class=\"n\">N</span><span class=\"bp\">.</span><span class=\"n\">normal</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 209499929,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599651867
    },
    {
        "content": "<p>yeah</p>",
        "id": 209499940,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599651878
    },
    {
        "content": "<p>where <code>normal</code> is apparently a structure-class</p>",
        "id": 209499952,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599651890
    },
    {
        "content": "<p>but over the summer some students and I proved Sylow 1 from scratch</p>",
        "id": 209499958,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599651895
    },
    {
        "content": "<p>like literally our own definition of group</p>",
        "id": 209499966,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599651902
    },
    {
        "content": "<p>with an instance <code>lemma normal_of_comm {G : Type*} [comm_group G] (H : subgroup G) : H.normal</code></p>",
        "id": 209499983,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599651917
    },
    {
        "content": "<p><a href=\"https://github.com/ImperialCollegeLondon/group-theory-game\">https://github.com/ImperialCollegeLondon/group-theory-game</a></p>",
        "id": 209499989,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599651920
    },
    {
        "content": "<p>and in that repo we bundled normal subgroups.</p>",
        "id": 209500000,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599651936
    },
    {
        "content": "<p>ah, I see</p>",
        "id": 209500003,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599651945
    },
    {
        "content": "<p>and so we could have <code>subgroup.comap</code> and <code>normal.comap</code></p>",
        "id": 209500058,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599651964
    },
    {
        "content": "<p>For that matter, I wonder what the odd order formalization did here</p>",
        "id": 209500156,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599652065
    },
    {
        "content": "<p>It could be that there are very few places currently where we actually build a submonoid that will end up getting passed to <code>localization</code></p>",
        "id": 209500594,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599652358
    },
    {
        "content": "<p>Probably in the construction of fraction fields, localisation at a prime, ..., and that's it?</p>",
        "id": 209500954,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1599652630
    },
    {
        "content": "<p>There's also inverting a single element. That one would need the element to be central, and I guess the two you mentioned need a commutative ring to be sensible.</p>",
        "id": 209501517,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599652993
    },
    {
        "content": "<p>OK, so the bundled option seems painless enough...</p>",
        "id": 209501991,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599653304
    },
    {
        "content": "<p>Is it worth doing <a href=\"https://ncatlab.org/nlab/show/Ore+localization\">https://ncatlab.org/nlab/show/Ore+localization</a>? I don't have any use for it currently but I was vaguely aware of its existence (it's somewhat related to homotopy categories).</p>",
        "id": 209506955,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599656545
    },
    {
        "content": "<p>It shows up in non-abelian Iwasawa theory as well</p>",
        "id": 209511396,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599658856
    }
]