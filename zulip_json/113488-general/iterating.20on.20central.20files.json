[
    {
        "content": "<p>What workflows do people use for working on changes to files in mathlib that lots of other things depend on?</p>\n<p>I just tried adding a small definition to <code>src/algebra/group/hom.lean</code>, and the VS Code extension promptly stopped being able to show any information while the Lean server started doing a bunch of work, presumably recompiling everything else.</p>",
        "id": 233044564,
        "sender_full_name": "Greg Price",
        "timestamp": 1617497283
    },
    {
        "content": "<p>Sometimes for milder versions of this it's seemed to help if I go do <code>leanproject build</code>, producing a bunch of olean files, and then restart the server. So I tried that... but the build took:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">time</span><span class=\"o\">:</span> <span class=\"mi\">2071</span><span class=\"bp\">.</span><span class=\"mi\">967</span><span class=\"n\">s</span> <span class=\"n\">wall</span> <span class=\"o\">(</span><span class=\"mi\">22081</span><span class=\"bp\">.</span><span class=\"mi\">312</span><span class=\"n\">s</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"mi\">29</span><span class=\"bp\">.</span><span class=\"mi\">687</span><span class=\"n\">s</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>about 35 minutes before it was done. (And total CPU time of 6 hours -- I'm quite grateful for Lean's parallel compilation.)</p>",
        "id": 233044593,
        "sender_full_name": "Greg Price",
        "timestamp": 1617497296
    },
    {
        "content": "<p>Experimenting a bit more, it looks like the VS Code extension is successful at getting fresh information quickly about the file I just edited itself.</p>\n<p>The trouble is when I'm making a change there and I want to see the effect it has in some other file. I don't need to build the whole of mathlib just yet -- that can wait until a PR is nearly ready -- but just the very central file A that I just touched, and file B that I'm otherwise working in, and I guess the files that are between them in the import graph. Is there a way to do that?</p>",
        "id": 233044958,
        "sender_full_name": "Greg Price",
        "timestamp": 1617497705
    },
    {
        "content": "<p>After changing a bunch of low level files, the usual workflow is</p>\n<ul>\n<li>create a new branch, </li>\n<li>push it to the remote repository (<code>leanprover-community/mathlib</code>)</li>\n<li>wait 0.5-3 hours (you can checkout other branches and work there)</li>\n<li><code>leanproject get-cache</code> (on the commit you pushed) will download the compiled olean files generated by Github Actions. If there is an error in a later file, it will have compiled mathlib partially (but at least enough to compile the file that has an error).</li>\n</ul>",
        "id": 233048092,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1617501496
    },
    {
        "content": "<p>If you want to do it locally, you can do <code>lean --make src/path/to/file.lean</code> which will compile that file and everything it depends on</p>",
        "id": 233048199,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1617501621
    },
    {
        "content": "<p>in either case, run <code>Lean: Restart</code> in VSCode in order for the Lean server to use the newly generated olean files.</p>",
        "id": 233048250,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1617501690
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"111080\">Floris van Doorn</span> <a href=\"#narrow/stream/113488-general/topic/iterating.20on.20central.20files/near/233048199\">said</a>:</p>\n<blockquote>\n<p>If you want to do it locally, you can do <code>lean --make src/path/to/file.lean</code> which will compile that file and everything it depends on</p>\n</blockquote>\n<p>That sounds like what I want, thanks!</p>",
        "id": 233056360,
        "sender_full_name": "Greg Price",
        "timestamp": 1617512101
    },
    {
        "content": "<p>The workflow using CI is also interesting. I guess it doesn't take any less time than my desktop can do it in, but could still be helpful when I want to be building something else at the same time.</p>",
        "id": 233056675,
        "sender_full_name": "Greg Price",
        "timestamp": 1617512476
    },
    {
        "content": "<p>That <code>lean --make src/path/to/file.lean</code> command has been very helpful already. Thanks again!</p>",
        "id": 233066471,
        "sender_full_name": "Greg Price",
        "timestamp": 1617525235
    },
    {
        "content": "<p>Often reduces the build time to just a few minutes.</p>",
        "id": 233066516,
        "sender_full_name": "Greg Price",
        "timestamp": 1617525254
    }
]