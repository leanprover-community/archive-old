[
    {
        "content": "<p>Is there a tactic whose purpose is to drop the value of a hypothesis, keeping only its type? e.g. to replace <code>x : nat := 5</code> with <code>x : nat</code>?</p>",
        "id": 209085733,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1599221390
    },
    {
        "content": "<p>(I am experiencing a <code>rfl</code> which times out, even though the goal is a safe looking <code>f x = f x</code>. Usually the fix here is to make something irreducible. Here <code>f</code> is some interesting function constructed with a <code>let</code> earlier in the tactic block. I was thinking if I could drop the value that might be like making it irreducible.)</p>",
        "id": 209085920,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1599221488
    },
    {
        "content": "<p>oh, it is not actually the <code>rfl</code> that causes the timeout... <code>sorry</code> causes the same timeout. false alarm</p>",
        "id": 209086024,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1599221536
    },
    {
        "content": "<p>Out of curiosity: would this work?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">let</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">â„•</span> <span class=\"o\">:=</span> <span class=\"mi\">5</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">x&#39;</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">clear</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 209086183,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1599221647
    },
    {
        "content": "<p>Nope, because <code>clear</code> doesn't work if the goal depends on <code>x</code>.</p>",
        "id": 209086280,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1599221719
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#clear_value\">tactic#clear_value</a></p>",
        "id": 209086612,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1599221934
    }
]