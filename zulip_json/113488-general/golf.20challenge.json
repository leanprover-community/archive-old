[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">equiv</span><span class=\"bp\">.</span><span class=\"n\">basic</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">polynomial</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">multivariate_polynomial</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">w</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">mv_polynomial</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">option_ring_equiv_aux11</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">polynomial</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">β</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">C</span> <span class=\"err\">∘</span> <span class=\"n\">C</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">option_ring_equiv_aux12</span> <span class=\"o\">:</span> <span class=\"n\">ring</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">β</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"bp\">@</span><span class=\"n\">comm_ring</span><span class=\"bp\">.</span><span class=\"n\">to_ring</span> <span class=\"bp\">_</span> <span class=\"err\">$</span> <span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">comm_ring</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">option_ring_equiv_aux13</span> <span class=\"o\">:</span> <span class=\"n\">is_ring_hom</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">β</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">polynomial</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">β</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">apply</span> <span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">is_ring_hom</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">option_ring_equiv_aux14</span> <span class=\"o\">:</span> <span class=\"n\">is_ring_hom</span> <span class=\"o\">(</span><span class=\"n\">option_ring_equiv_aux11</span> <span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">is_ring_hom</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">option_ring_equiv_aux15</span> <span class=\"o\">:</span> <span class=\"n\">is_semiring_hom</span> <span class=\"o\">(</span><span class=\"n\">option_ring_equiv_aux11</span> <span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">is_ring_hom</span><span class=\"bp\">.</span><span class=\"n\">is_semiring_hom</span> <span class=\"bp\">_</span>\n\n<span class=\"n\">def</span> <span class=\"n\">option_ring_equiv_aux1</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"o\">(</span><span class=\"n\">option</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">polynomial</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">β</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">eval₂</span> <span class=\"o\">(</span><span class=\"n\">option_ring_equiv_aux11</span> <span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">option</span><span class=\"bp\">.</span><span class=\"n\">rec_on</span> <span class=\"n\">x</span> <span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">X</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">C</span> <span class=\"err\">∘</span> <span class=\"n\">X</span><span class=\"o\">))</span>\n\n<span class=\"n\">def</span> <span class=\"n\">option_ring_equiv_aux21</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">β</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">mv_polynomial</span> <span class=\"o\">(</span><span class=\"n\">option</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"n\">eval₂</span> <span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"err\">∘</span> <span class=\"n\">some</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">option_ring_equiv_aux22</span> <span class=\"o\">:</span> <span class=\"n\">is_ring_hom</span> <span class=\"o\">(</span><span class=\"n\">option_ring_equiv_aux21</span> <span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">convert</span> <span class=\"n\">eval₂</span><span class=\"bp\">.</span><span class=\"n\">is_ring_hom</span> <span class=\"bp\">_</span> <span class=\"bp\">_;</span> <span class=\"n\">apply_instance</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">option_ring_equiv_aux23</span> <span class=\"o\">:</span> <span class=\"n\">is_semiring_hom</span> <span class=\"o\">(</span><span class=\"n\">option_ring_equiv_aux21</span> <span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">is_ring_hom</span><span class=\"bp\">.</span><span class=\"n\">is_semiring_hom</span> <span class=\"bp\">_</span>\n\n<span class=\"n\">def</span> <span class=\"n\">option_ring_equiv_aux2</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">β</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">mv_polynomial</span> <span class=\"o\">(</span><span class=\"n\">option</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">eval₂</span> <span class=\"o\">(</span><span class=\"n\">option_ring_equiv_aux21</span> <span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">none</span><span class=\"o\">)</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">}</span>\n<span class=\"kn\">set_option</span> <span class=\"n\">class</span><span class=\"bp\">.</span><span class=\"n\">instance_max_depth</span> <span class=\"mi\">5</span>\n<span class=\"kn\">theorem</span> <span class=\"n\">option_ring_equiv_aux3</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"o\">(</span><span class=\"n\">option</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">option_ring_equiv_aux2</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">(</span><span class=\"n\">option_ring_equiv_aux1</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n<span class=\"n\">induction_on</span> <span class=\"n\">f</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"k\">calc</span> <span class=\"n\">option_ring_equiv_aux2</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">(</span><span class=\"n\">option_ring_equiv_aux1</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">))</span>\n           <span class=\"bp\">=</span> <span class=\"n\">option_ring_equiv_aux2</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">(</span><span class=\"n\">option_ring_equiv_aux11</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">congr&#39;</span> <span class=\"mi\">1</span><span class=\"bp\">;</span> <span class=\"n\">convert</span> <span class=\"n\">eval₂_C</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_;</span> <span class=\"n\">convert</span> <span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">option_ring_equiv_aux15</span> <span class=\"n\">α</span> <span class=\"n\">β</span>\n       <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">option_ring_equiv_aux21</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">convert</span> <span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">eval₂_C</span> <span class=\"bp\">_</span> <span class=\"bp\">_;</span> <span class=\"n\">apply_instance</span>\n       <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">C</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">convert</span> <span class=\"n\">eval₂_C</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_;</span> <span class=\"n\">apply_instance</span><span class=\"o\">)</span>\n  <span class=\"n\">sorry</span>\n  <span class=\"n\">sorry</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">mv_polynomial</span>\n</pre></div>",
        "id": 157091599,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1548753343
    },
    {
        "content": "<p>challenge: shorten this code, but keep the compiling time low</p>",
        "id": 157091612,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1548753357
    },
    {
        "content": "<p>(yes, the <code>set_option class.instance_max_depth 5</code> line is there to keep the compiling time low)</p>",
        "id": 157091663,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1548753370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span></p>",
        "id": 157091668,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1548753385
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span></p>",
        "id": 157101129,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1548765107
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span>  I think we have a problem either with the ring homomorphisms, or some of the mv_polynomial instances... I changed the proof to <code>mv_polynomial (β ⊕ γ) α ≃r mv_polynomial β (mv_polynomial γ α)</code>, allowing also the symmetric variant.</p>",
        "id": 157194471,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1548861489
    },
    {
        "content": "<p>are you planning to put this into mathlib? I'm about to prove the same theorem</p>",
        "id": 157194503,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1548861543
    },
    {
        "content": "<p>its already in master</p>",
        "id": 157194621,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1548861606
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/mathlib/commit/f7b9d6b43e478661eb87fef36c75e8e4ffc08499\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/commit/f7b9d6b43e478661eb87fef36c75e8e4ffc08499\">https://github.com/leanprover/mathlib/commit/f7b9d6b43e478661eb87fef36c75e8e4ffc08499</a></p>",
        "id": 157194636,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1548861619
    },
    {
        "content": "<p>oh nice!</p>",
        "id": 157194647,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1548861633
    },
    {
        "content": "<p>Aah, using <code>rename</code> we might be able to slightly cleanup the <code>mv_polynomial</code> adjunction that I PR'd a while ago.</p>",
        "id": 157194863,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1548861805
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">polynomial</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">polynomial</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">nat_degree_le_nat_degree</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hfg</span> <span class=\"o\">:</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">degree</span> <span class=\"bp\">≤</span> <span class=\"n\">g</span><span class=\"bp\">.</span><span class=\"n\">degree</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">nat_degree</span> <span class=\"bp\">≤</span> <span class=\"n\">g</span><span class=\"bp\">.</span><span class=\"n\">nat_degree</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">nat_degree_zero</span><span class=\"o\">],</span> <span class=\"n\">exact</span> <span class=\"n\">zero_le</span> <span class=\"bp\">_</span> <span class=\"o\">},</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hg</span><span class=\"o\">,</span> <span class=\"n\">degree_zero</span><span class=\"o\">,</span> <span class=\"n\">le_bot_iff</span><span class=\"o\">,</span> <span class=\"n\">degree_eq_bot</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hfg</span><span class=\"o\">,</span> <span class=\"n\">cc</span> <span class=\"o\">},</span>\n  <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">degree_eq_nat_degree</span> <span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">degree_eq_nat_degree</span> <span class=\"n\">hg</span><span class=\"o\">,</span> <span class=\"n\">with_bot</span><span class=\"bp\">.</span><span class=\"n\">coe_le_coe</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hfg</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">nat_degree_div_by_monic</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">g</span><span class=\"bp\">.</span><span class=\"n\">monic</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">nat_degree</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">nat_degree</span> <span class=\"n\">f</span> <span class=\"bp\">-</span> <span class=\"n\">nat_degree</span> <span class=\"n\">g</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">h01</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">haveI</span> <span class=\"o\">:=</span> <span class=\"n\">subsingleton_of_zero_eq_one</span> <span class=\"n\">h01</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">subsingleton</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">subsingleton</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"n\">f</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">subsingleton</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"n\">g</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n        <span class=\"n\">nat_degree_zero</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">haveI</span> <span class=\"o\">:</span> <span class=\"n\">nonzero</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">h01</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">hfg</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hfg</span><span class=\"o\">,</span> <span class=\"n\">nat_degree_zero</span><span class=\"o\">],</span> <span class=\"n\">rw</span> <span class=\"n\">div_by_monic_eq_zero_iff</span> <span class=\"n\">hg</span> <span class=\"n\">hg</span><span class=\"bp\">.</span><span class=\"n\">ne_zero</span> <span class=\"n\">at</span> <span class=\"n\">hfg</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">sub_eq_zero_of_le</span> <span class=\"o\">(</span><span class=\"n\">nat_degree_le_nat_degree</span> <span class=\"err\">$</span> <span class=\"n\">le_of_lt</span> <span class=\"n\">hfg</span><span class=\"o\">)</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hgf</span> <span class=\"o\">:=</span> <span class=\"n\">hfg</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">div_by_monic_eq_zero_iff</span> <span class=\"n\">hg</span> <span class=\"n\">hg</span><span class=\"bp\">.</span><span class=\"n\">ne_zero</span> <span class=\"n\">at</span> <span class=\"n\">hgf</span><span class=\"o\">,</span> <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">hgf</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">degree_add_div_by_monic</span> <span class=\"n\">hg</span> <span class=\"n\">hgf</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">hfg</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">zero_div_by_monic</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">degree_eq_nat_degree</span> <span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">degree_eq_nat_degree</span> <span class=\"n\">hg</span><span class=\"bp\">.</span><span class=\"n\">ne_zero</span><span class=\"o\">,</span> <span class=\"n\">degree_eq_nat_degree</span> <span class=\"n\">hfg</span><span class=\"o\">,</span>\n      <span class=\"err\">←</span> <span class=\"n\">with_bot</span><span class=\"bp\">.</span><span class=\"n\">coe_add</span><span class=\"o\">,</span> <span class=\"n\">with_bot</span><span class=\"bp\">.</span><span class=\"n\">coe_eq_coe</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">add_sub_cancel_left</span><span class=\"o\">]</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 202664453,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1593680390
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">mv_polynomial</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">determinant</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">n</span><span class=\"o\">]</span>\n\n<span class=\"n\">noncomputable</span> <span class=\"n\">def</span> <span class=\"n\">det_poly</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">×</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">ℤ</span> <span class=\"o\">:=</span>\n<span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">X</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">n</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">eval_det_poly</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">det_poly</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">eval₂</span> <span class=\"n\">coe</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">M</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n</code></pre></div>",
        "id": 203496360,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594381198
    },
    {
        "content": "<p>golf challenge</p>",
        "id": 203496406,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594381212
    },
    {
        "content": "<p><a href=\"https://github.com/rwbarton/swan/blob/lean-3.4.2/src/for_mathlib/determinant.lean\">https://github.com/rwbarton/swan/blob/lean-3.4.2/src/for_mathlib/determinant.lean</a></p>",
        "id": 203496456,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594381278
    },
    {
        "content": "<p>lol</p>",
        "id": 203496470,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594381295
    },
    {
        "content": "<p>It might use simp lemmas that weren't in mathlib at the time</p>",
        "id": 203496614,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594381423
    },
    {
        "content": "<p>my solution:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">mv_polynomial</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">determinant</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">n</span><span class=\"o\">]</span>\n\n<span class=\"n\">noncomputable</span> <span class=\"n\">def</span> <span class=\"n\">det_poly</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">×</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">ℤ</span> <span class=\"o\">:=</span>\n<span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">X</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">j</span><span class=\"o\">)</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">n</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">mv_polynomial</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">eval₂_int_cast</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">is_ring_hom</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">eval₂</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"n\">eval₂_zero</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span> <span class=\"n\">ih</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">cast_add</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">cast_add</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">cast_one</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">cast_one</span><span class=\"o\">,</span> <span class=\"n\">eval₂_add</span><span class=\"o\">,</span> <span class=\"n\">ih</span><span class=\"o\">,</span> <span class=\"n\">eval₂_one</span><span class=\"o\">])</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span> <span class=\"n\">ih</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">cast_sub</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">cast_sub</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">cast_one</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">cast_one</span><span class=\"o\">,</span> <span class=\"n\">eval₂_sub</span><span class=\"o\">,</span> <span class=\"n\">ih</span><span class=\"o\">,</span> <span class=\"n\">eval₂_one</span><span class=\"o\">])</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">mv_polynomial</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">mv_polynomial</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">eval_det_poly</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">det_poly</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">eval₂</span> <span class=\"n\">coe</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">M</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">det_poly</span> <span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">det</span><span class=\"o\">,</span>\n  <span class=\"n\">haveI</span> <span class=\"o\">:</span> <span class=\"n\">is_semiring_hom</span> <span class=\"o\">(</span><span class=\"n\">coe</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">cast_zero</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">cast_one</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">cast_add</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">cast_mul</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">haveI</span> <span class=\"o\">:</span> <span class=\"n\">is_ring_hom</span> <span class=\"o\">(</span><span class=\"n\">coe</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">is_ring_hom</span><span class=\"bp\">.</span><span class=\"n\">of_semiring</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">eval₂_sum</span><span class=\"o\">,</span> <span class=\"n\">eval₂_mul</span><span class=\"o\">,</span> <span class=\"n\">eval₂_int_cast</span><span class=\"o\">,</span> <span class=\"n\">eval₂_prod</span><span class=\"o\">,</span> <span class=\"n\">eval₂_X</span><span class=\"o\">]</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 203498007,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594382511
    },
    {
        "content": "<p>Dont we know that eval2 is a ring hom?</p>",
        "id": 203498127,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594382576
    },
    {
        "content": "<p>I would expect something like <code>(eval2_hom f g).map_int_cast n</code> as proof term.</p>",
        "id": 203498393,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594382761
    },
    {
        "content": "<p>like this? <a href=\"https://github.com/rwbarton/swan/blob/lean-3.4.2/src/for_mathlib/ring_hom_coe.lean\">https://github.com/rwbarton/swan/blob/lean-3.4.2/src/for_mathlib/ring_hom_coe.lean</a></p>",
        "id": 203498458,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594382781
    },
    {
        "content": "<p>but this is from ye olden days of 2019</p>",
        "id": 203498486,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594382816
    },
    {
        "content": "<p>Is it planned to get this stuff into mathlib?</p>",
        "id": 203499064,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594383207
    },
    {
        "content": "<p>Zulip lacks <code>:swan:</code>...</p>",
        "id": 203499103,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594383239
    },
    {
        "content": "<p>this is about all the stuff there is here</p>",
        "id": 203499173,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594383270
    },
    {
        "content": "<p>if only mv_polynomial were computable</p>",
        "id": 203506620,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594387982
    },
    {
        "content": "<p>then we can have explicit formulas of determinants easily</p>",
        "id": 203506647,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594387999
    },
    {
        "content": "<p><code>simp</code> should be able to make it easy nonetheless.</p>",
        "id": 203506699,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594388033
    }
]