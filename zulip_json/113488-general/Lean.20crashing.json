[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">nat</span>\n\n<span class=\"kn\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span>\n<span class=\"n\">def</span> <span class=\"n\">vec</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span>\n<span class=\"bp\">|</span> <span class=\"n\">A</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">punit</span>\n<span class=\"bp\">|</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">A</span> <span class=\"bp\">×</span> <span class=\"n\">vec</span> <span class=\"n\">A</span> <span class=\"n\">k</span>\n\n<span class=\"kn\">inductive</span> <span class=\"n\">dfin</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">fz</span> <span class=\"o\">{</span><span class=\"n\">n</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">dfin</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">fs</span> <span class=\"o\">{</span><span class=\"n\">n</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">dfin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">dfin</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">kth_projn</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">vec</span> <span class=\"n\">α</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">dfin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">dfin</span><span class=\"bp\">.</span><span class=\"n\">fz</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"c1\">-- crashes lean</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span><span class=\"n\">xs</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">dfin</span><span class=\"bp\">.</span><span class=\"n\">fs</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">kth_projn</span> <span class=\"n\">n</span> <span class=\"n\">xs</span> <span class=\"n\">k</span>\n</pre></div>\n\n\n<p>The above piece of code crashes Lean for me...</p>",
        "id": 167582186,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1559918216
    },
    {
        "content": "<p>This might also be something fixed in 3.5.0c. I get these errors instead:</p>\n<div class=\"codehilite\"><pre><span></span>14:0: error:\nequation compiler failed (use &#39;set_option trace.eqn_compiler.elim_match true&#39; for additional details)\nnested exception message:\ncases tactic failed, it is not applicable to the given hypothesis\n14:4: error:\nequation compiler failed (use &#39;set_option trace.eqn_compiler.elim_match true&#39; for additional details)\nnested exception message:\ncases tactic failed, it is not applicable to the given hypothesis\n</pre></div>\n\n\n<p><a href=\"https://bryangingechen.github.io/lean/lean-web-editor/#code=universe%20u%0A%0Aopen%20nat%0A%0Avariable%20%7B%CE%B1%20%3A%20Type%20u%7D%0Adef%20vec%20%3A%20Type%20u%20%E2%86%92%20%E2%84%95%20%E2%86%92%20Type*%0A%7C%20A%200%20%3A%3D%20punit%0A%7C%20A%20(succ%20k)%20%3A%3D%20A%20%C3%97%20vec%20A%20k%0A%0Ainductive%20dfin%20%3A%20%E2%84%95%20%E2%86%92%20Type%0A%7C%20fz%20%7Bn%7D%20%3A%20dfin%20(n%2B1)%0A%7C%20fs%20%7Bn%7D%20%3A%20dfin%20n%20%E2%86%92%20dfin%20(n%2B1)%0A%0Adef%20kth_projn%20%3A%20%CE%A0%20n%2C%20vec%20%CE%B1%20n%20%E2%86%92%20dfin%20n%20%E2%86%92%20%CE%B1%0A%7C%20(_)%20x%20dfin.fz%20%3A%3D%20x.fst%20--%20crashes%20lean%0A%7C%20(succ%20n)%20(x%2Cxs)%20(dfin.fs%20k)%20%3A%3D%20kth_projn%20n%20xs%20k\" target=\"_blank\" title=\"https://bryangingechen.github.io/lean/lean-web-editor/#code=universe%20u%0A%0Aopen%20nat%0A%0Avariable%20%7B%CE%B1%20%3A%20Type%20u%7D%0Adef%20vec%20%3A%20Type%20u%20%E2%86%92%20%E2%84%95%20%E2%86%92%20Type*%0A%7C%20A%200%20%3A%3D%20punit%0A%7C%20A%20(succ%20k)%20%3A%3D%20A%20%C3%97%20vec%20A%20k%0A%0Ainductive%20dfin%20%3A%20%E2%84%95%20%E2%86%92%20Type%0A%7C%20fz%20%7Bn%7D%20%3A%20dfin%20(n%2B1)%0A%7C%20fs%20%7Bn%7D%20%3A%20dfin%20n%20%E2%86%92%20dfin%20(n%2B1)%0A%0Adef%20kth_projn%20%3A%20%CE%A0%20n%2C%20vec%20%CE%B1%20n%20%E2%86%92%20dfin%20n%20%E2%86%92%20%CE%B1%0A%7C%20(_)%20x%20dfin.fz%20%3A%3D%20x.fst%20--%20crashes%20lean%0A%7C%20(succ%20n)%20(x%2Cxs)%20(dfin.fs%20k)%20%3A%3D%20kth_projn%20n%20xs%20k\">web editor</a></p>",
        "id": 167589559,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1559923408
    },
    {
        "content": "<p>Oh wait, nevermind. Somehow it works in the web editor but crashes lean 3.5.0 in vscode...</p>\n<p><strong>Edit</strong>: I opened an <a href=\"https://github.com/leanprover-community/lean/issues/52\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/issues/52\">issue</a> for this.</p>",
        "id": 167589920,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1559923643
    }
]