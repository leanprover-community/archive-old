[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">set_theory</span><span class=\"bp\">.</span><span class=\"n\">cardinal</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"err\">↑</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">cardinal</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"err\">↑</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"c1\">-- works fine</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"err\">↑</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">cardinal</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"err\">↑</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">H</span><span class=\"o\">]</span> <span class=\"c1\">-- fails</span>\n</pre></div>\n\n\n<p>Is there a way of getting the second example to work which doesn't involve (a) reverting H or (b) looking up the name of the lemma which <code>simp</code> is using to do the cast [i guess it's going to be <code>cardinal.nat_cast_inj</code>, maybe I'm supposed to know that]. Neither (a) nor (b) look \"idiomatic\" to me (is that the right word?)</p>",
        "id": 132631368,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535022855
    },
    {
        "content": "<p><code>simpa using H</code>?</p>",
        "id": 132631720,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1535023435
    },
    {
        "content": "<p>why are you doing cardinals? <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span></p>",
        "id": 132631805,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1535023517
    },
    {
        "content": "<p>Richard Thomas asked a question about the number 3</p>",
        "id": 132631817,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535023539
    },
    {
        "content": "<p>but then complained when I assumed it was finite</p>",
        "id": 132631823,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535023548
    }
]