[
    {
        "content": "<p>I'm planning to make a (localized?) notation for the cardinalities of sets and types, and I was thinking of using | and ‖ (kind of like what is currently used in <code>card_embedding.lean</code>. Does anyone have any objections to this, anything to watch out for? Should I make a notation class for either of these? Not sure whether they are used much elsewhere in Lean</p>",
        "id": 241448833,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622752462
    },
    {
        "content": "<p>We have this I think, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cardinal\">docs#cardinal</a></p>",
        "id": 241450986,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1622753462
    },
    {
        "content": "<p>And for finite types and sets, fintype.card and finset.card</p>",
        "id": 241451112,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1622753510
    },
    {
        "content": "<p>Finally, for set cardinality where you want a regular old nat, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.card\">docs#nat.card</a></p>",
        "id": 241451238,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1622753544
    },
    {
        "content": "<p>Perhaps we could introduce <code>#ᶠ</code> for <code>fintype.card</code> since <code>#</code> is <code>cardinal.mk</code>?</p>",
        "id": 241451459,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622753620
    },
    {
        "content": "<p>that seems reasonable, and what about for finsets?</p>",
        "id": 241455532,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622755050
    },
    {
        "content": "<p>maybe <code>#^s</code>? (I can't find superscript s - does it exist?)</p>",
        "id": 241456276,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622755304
    },
    {
        "content": "<p>Why not just use projection notation for finset? Similarly, rename nat.card to set.card?</p>",
        "id": 241464028,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1622758936
    },
    {
        "content": "<p>in my experience, it's been really annoying mixing up fintype and finset cards</p>",
        "id": 241464241,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622759070
    },
    {
        "content": "<p>this is why I liked the <code>|set|</code> and <code>‖type‖</code> idea but think the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"normal\">#</mi><mi>f</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\#^f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.043548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord\">#</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span></span></span></span></span></span></span> seems reasonable for mathlib consistency</p>",
        "id": 241464299,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622759108
    },
    {
        "content": "<p>Can you share where they're confusing?</p>",
        "id": 241465640,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1622760071
    },
    {
        "content": "<p>Most places where they have been I've made it local notation, but for example I've got a big proof in <a href=\"https://github.com/ericrbg/HatGames\">https://github.com/ericrbg/HatGames</a> and that would be illegible without it I think, the <code>.card</code>s end up being sprinkled everywhere and ruining the flow</p>",
        "id": 241472189,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622765403
    }
]