[
    {
        "content": "<p>Hello,<br>\nI am looking for a function from multisets to lists that repeats each element x as needed.<br>\nI see to_list, but this is noncomputable definition using choice. <br>\nAlternately, if I can get a list of unique elements of the multiset, I can do something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"n\">lift_multiset</span> <span class=\"o\">:</span> <span class=\"n\">has_lift</span> <span class=\"o\">(</span><span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">list</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">join</span> <span class=\"bp\">$</span> <span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">list.repeat</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"n\">count</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">uniq_elems</span> <span class=\"n\">m</span><span class=\"o\">)⟩</span>\n</code></pre></div>",
        "id": 230949882,
        "sender_full_name": "Scott Viteri",
        "timestamp": 1616108293
    },
    {
        "content": "<p>Are you looking for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset.sort\">docs#multiset.sort</a>?</p>",
        "id": 230952082,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1616109659
    },
    {
        "content": "<p><code>to_list</code> is noncomputable because it doesn't specify an order</p>",
        "id": 230952143,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1616109688
    },
    {
        "content": "<p>Yes this is what I was looking for, thanks!</p>",
        "id": 230952598,
        "sender_full_name": "Scott Viteri",
        "timestamp": 1616109981
    }
]