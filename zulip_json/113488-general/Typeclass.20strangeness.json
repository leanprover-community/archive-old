[
    {
        "content": "<p>Can anyone suggest how to fix this?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">namespace</span> <span class=\"n\">lattice</span>\n<span class=\"kn\">open</span> <span class=\"n\">lattice</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_bot</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_top</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">bounded_lattice</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"o\">{</span>\n   <span class=\"n\">top</span>          <span class=\"o\">:=</span> <span class=\"n\">order_top</span><span class=\"bp\">.</span><span class=\"n\">top</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n   <span class=\"n\">bot</span>          <span class=\"o\">:=</span> <span class=\"n\">order_bot</span><span class=\"bp\">.</span><span class=\"n\">bot</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n   <span class=\"n\">le_top</span>       <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">order_top</span><span class=\"bp\">.</span><span class=\"n\">le_top</span> <span class=\"n\">α</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n   <span class=\"n\">bot_le</span>       <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">order_bot</span><span class=\"bp\">.</span><span class=\"n\">bot_le</span> <span class=\"n\">α</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n   <span class=\"bp\">..</span> <span class=\"o\">(</span><span class=\"n\">lattice</span><span class=\"bp\">.</span><span class=\"n\">lattice_of_decidable_linear_order</span><span class=\"o\">)</span>\n  <span class=\"o\">}</span>\n</pre></div>\n\n\n<p>The definitions of <code>le_top</code> and <code>bot_le</code> are rejected, with rather complex error messages.  The problem seems to be that Lean is pushing around order relations through some complicated pattern of typeclass inferences involving <code>lattice</code>, <code>partial_order</code>, <code>preorder</code>, <code>order_top</code> and so on, and it has decided that <code>@order_top.le_top α _</code> refers to a different order relation than the one that is needed for the <code>le_top</code> field, although in fact there is only one order relation on <code>α</code> that could possibly be relevant.  I have not been able to work out what to do about that.</p>\n<p>I only care immediately about the case <code>α = with_bot (with_top (fin n))</code>, but it seems best to do the general thing.</p>",
        "id": 159241177,
        "sender_full_name": "Neil Strickland",
        "timestamp": 1550948485
    },
    {
        "content": "<p>The order in <code>[decidable_linear_order \\a]</code> and the order in <code>[order_bot \\a]</code> and the order in <code>[order_top \\a]</code> are not the same</p>",
        "id": 159241245,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550948569
    },
    {
        "content": "<p>OK, I see that I was confused: the <code>order_bot</code> instance is not dependent on the <code>decidable_linear_order</code> instance and contains its own order relation that is completely independent of the previous one.  So I'm not sure what's the best thing to do about that.  One could define a <code>bounded_decidable_linear_order</code> class extending  <code>decidable_linear_order</code>, and then define an instance to convert one of those to a <code>bounded_distrib_lattice</code>.  But this seems to be asking for diamond problems, and I am sure that other people know better than me how to think about that.</p>",
        "id": 159242204,
        "sender_full_name": "Neil Strickland",
        "timestamp": 1550949957
    },
    {
        "content": "<p>I think <code>order_bot</code> should be modified, to be an additional property of a given <code>preorder</code> instead of containing an order by itself. Then the current theorems about <code>order_bot</code> would have a slightly more complicated statement since they would need two assumptions <code>[preorder α] [order_bot α]</code>, but on the other hand it would be much more convenient to define new properties of orders.</p>",
        "id": 159243625,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1550952331
    }
]