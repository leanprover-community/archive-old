[
    {
        "content": "<p>Why is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/eq.subst\">docs#eq.subst</a> only for <code>Prop</code>?</p>",
        "id": 257607159,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1634246116
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/eq.rec\">docs#eq.rec</a></p>",
        "id": 257611948,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634248417
    },
    {
        "content": "<p>See also <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cast\">docs#cast</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/eq.mp\">docs#eq.mp</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/eq.mpr\">docs#eq.mpr</a></p>",
        "id": 257611984,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634248441
    },
    {
        "content": "<p>I suspect <code>eq.subst</code> exists because of its mysterious <code>subst</code> attribute (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/eq.subst\">docs#eq.subst</a>)</p>",
        "id": 257612088,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634248485
    },
    {
        "content": "<p>What does the <code>subst</code> attribute do?</p>\n<p>(Another somewhat mysterious attribute is <code>congr</code>.  When updating the <code>simp</code> documentation I ran into it, and I have some idea of what it does, but it shows up in some surprising places.)</p>",
        "id": 257655123,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1634281644
    },
    {
        "content": "<p>I think some attributes are historical artifacts that never got turned into features. The one I really wish was a thing was the one on <code>funext</code>, which is <code>intro! </code>. I really like the idea of combining intro and ext</p>",
        "id": 257658328,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1634283781
    },
    {
        "content": "<p>Doesn't <code>ext</code> do that? Or do you mean combining them another way?</p>",
        "id": 257683901,
        "sender_full_name": "Reid Barton",
        "timestamp": 1634297975
    },
    {
        "content": "<p>I mean yes, I just wish I didn't have to write <code>intro...,ext...</code>, or even with some hyperadvanced lambda we could just do <code>\\lam [...], by simp</code>instead of the standard <code>ext;simp</code></p>",
        "id": 257686510,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1634299424
    }
]