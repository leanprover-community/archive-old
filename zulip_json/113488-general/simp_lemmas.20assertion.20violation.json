[
    {
        "content": "<p>I'm getting several dozen assertion violations like this in recent versions of lean + mathlib:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">LEAN</span> <span class=\"n\">ASSERTION</span> <span class=\"n\">VIOLATION</span>\n<span class=\"n\">File</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">mario</span><span class=\"bp\">/</span><span class=\"n\">Documents</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">simp_lemmas.cpp</span>\n<span class=\"n\">Line</span><span class=\"o\">:</span> <span class=\"mi\">853</span>\n<span class=\"n\">Task</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">mario</span><span class=\"bp\">/</span><span class=\"n\">Documents</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">fin.lean</span><span class=\"o\">:</span> <span class=\"n\">fin.val_eq_coe</span>\n<span class=\"n\">is_eq</span><span class=\"o\">(</span><span class=\"n\">type</span><span class=\"o\">,</span> <span class=\"n\">lhs</span><span class=\"o\">,</span> <span class=\"n\">rhs</span><span class=\"o\">)</span>\n<span class=\"n\">LEAN</span> <span class=\"n\">ASSERTION</span> <span class=\"n\">VIOLATION</span>\n<span class=\"n\">File</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">mario</span><span class=\"bp\">/</span><span class=\"n\">Documents</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">simp_lemmas.cpp</span>\n<span class=\"n\">Line</span><span class=\"o\">:</span> <span class=\"mi\">853</span>\n<span class=\"n\">Task</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">mario</span><span class=\"bp\">/</span><span class=\"n\">Documents</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">fin.lean</span><span class=\"o\">:</span> <span class=\"n\">fin.zero_succ_above</span>\n<span class=\"n\">is_eq</span><span class=\"o\">(</span><span class=\"n\">type</span><span class=\"o\">,</span> <span class=\"n\">lhs</span><span class=\"o\">,</span> <span class=\"n\">rhs</span><span class=\"o\">)</span>\n<span class=\"n\">LEAN</span> <span class=\"n\">ASSERTION</span> <span class=\"n\">VIOLATION</span>\n<span class=\"n\">File</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">mario</span><span class=\"bp\">/</span><span class=\"n\">Documents</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">tactic</span><span class=\"bp\">/</span><span class=\"n\">simp_lemmas.cpp</span>\n<span class=\"n\">Line</span><span class=\"o\">:</span> <span class=\"mi\">853</span>\n<span class=\"n\">Task</span><span class=\"o\">:</span> <span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">mario</span><span class=\"bp\">/</span><span class=\"n\">Documents</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">finset</span><span class=\"bp\">/</span><span class=\"n\">basic.lean</span><span class=\"o\">:</span> <span class=\"n\">finset.attach_val</span>\n<span class=\"n\">is_eq</span><span class=\"o\">(</span><span class=\"n\">type</span><span class=\"o\">,</span> <span class=\"n\">lhs</span><span class=\"o\">,</span> <span class=\"n\">rhs</span><span class=\"o\">)</span>\n<span class=\"bp\">...</span>\n</code></pre></div>\n<p>I'm juggling multiple versions of lean though so it might be a configuration problem on my end, so I would like to know if anyone else has seen such errors recently.</p>",
        "id": 249275290,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1628793610
    },
    {
        "content": "<p>This is super weird.  It complains that the type of <code>fin.val_eq_coe</code> is not <code>âˆ€ ..., ... = ...</code>.  If you get a chance to hook up a debugger and look at the value of <code>type</code>, it should be pretty clear what the problem is.</p>",
        "id": 249276449,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1628794227
    }
]