[
    {
        "content": "<p>I'm creating a recursor for a type that I defined and I'd like <code>match</code> and <code>cases</code> to pick it instead of what Lean generated. Is there a way to do that?</p>",
        "id": 123198503,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1520021433
    },
    {
        "content": "<p>instead of cases, why not use <code>induction</code>where you can specify the recursor?</p>",
        "id": 123198843,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1520022039
    },
    {
        "content": "<p>No, that's not really possible. You can use the <code>using</code>clause of <code>induction</code>, but it's not particularly reliable in my experience. I don't really consider it supported</p>",
        "id": 123198918,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1520022234
    },
    {
        "content": "<p>For <code>cases</code> on coinductive types, I can make my own tactics but it would be great if the same tactic could cover both inductive and coinductive types</p>",
        "id": 123199074,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1520022486
    },
    {
        "content": "<p>Maybe I should just add that to my wish list</p>",
        "id": 123199079,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1520022499
    }
]