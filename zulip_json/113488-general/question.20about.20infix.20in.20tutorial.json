[
    {
        "content": "<p>So I was going through the lean tutorial and I came across this line of code<br>\n<code>infix ` is_a_max_of `:55 := is_max</code></p>\n<p>What's the 55 mean?</p>",
        "id": 215941746,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604731812
    },
    {
        "content": "<p>It's a precedence number specifying the order of the notation over others.<br>\n<a href=\"https://leanprover.github.io/theorem_proving_in_lean/interacting_with_lean.html#notation\">https://leanprover.github.io/theorem_proving_in_lean/interacting_with_lean.html#notation</a></p>",
        "id": 215941867,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1604732072
    },
    {
        "content": "<p>Thanks! im still a bit confused though, does that mean if I redefine is_a_max_of but with priority 50 it'll use the older definition instead? or does it affect the order of  reductions?</p>",
        "id": 215941980,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604732309
    },
    {
        "content": "<p>Its only about the order of operations.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">is_max</span> <span class=\"o\">(</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span><span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"kd\">def</span> <span class=\"n\">is_max'</span> <span class=\"o\">(</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span><span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"kd\">infix</span> <span class=\"bp\">`</span> <span class=\"n\">is_a_max_of</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">55</span> <span class=\"o\">:=</span> <span class=\"n\">is_max</span>\n<span class=\"kd\">infix</span> <span class=\"bp\">`</span> <span class=\"n\">is_a_max_of</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"o\">:=</span> <span class=\"n\">is_max'</span>\n<span class=\"k\">#print</span> <span class=\"n\">is_a_max_of</span> <span class=\"c1\">-- we can see that is_max' is used</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">pp.notation</span> <span class=\"n\">false</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"n\">is_a_max_of</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">})</span> <span class=\"c1\">-- we can see that is_max' is used</span>\n<span class=\"k\">#check</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"n\">is_a_max_of</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"c1\">-- this works as the priority of + is 65, #print +</span>\n<span class=\"kd\">infix</span> <span class=\"bp\">`</span> <span class=\"n\">is_a_max_of</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">160</span> <span class=\"o\">:=</span> <span class=\"n\">is_max'</span>\n<span class=\"k\">#check</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"n\">is_a_max_of</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"c1\">-- error because now it tries to add 1 to the proposition that 2 is a max</span>\n</code></pre></div>",
        "id": 215942492,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1604733348
    },
    {
        "content": "<p>It's priority in the following sense: <a href=\"https://xenaproject.wordpress.com/2019/01/20/a-word-on-bidmas/\">https://xenaproject.wordpress.com/2019/01/20/a-word-on-bidmas/</a></p>",
        "id": 215942549,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1604733472
    },
    {
        "content": "<p>The proper term is \"precedence\" (parenthesis binding strength), not \"priority\" (preference of use in case of clashes)</p>",
        "id": 215943289,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1604734979
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113488-general/topic/question.20about.20infix.20in.20tutorial/near/215942492\">said</a>:</p>\n<blockquote>\n<p>Its only about the order of operations.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">is_max</span> <span class=\"o\">(</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span><span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"kd\">def</span> <span class=\"n\">is_max'</span> <span class=\"o\">(</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span><span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"kd\">infix</span> <span class=\"bp\">`</span> <span class=\"n\">is_a_max_of</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">55</span> <span class=\"o\">:=</span> <span class=\"n\">is_max</span>\n<span class=\"kd\">infix</span> <span class=\"bp\">`</span> <span class=\"n\">is_a_max_of</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"o\">:=</span> <span class=\"n\">is_max'</span>\n<span class=\"k\">#print</span> <span class=\"n\">is_a_max_of</span> <span class=\"c1\">-- we can see that is_max' is used</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">pp.notation</span> <span class=\"n\">false</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"n\">is_a_max_of</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">})</span> <span class=\"c1\">-- we can see that is_max' is used</span>\n<span class=\"k\">#check</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"n\">is_a_max_of</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"c1\">-- this works as the priority of + is 65, #print +</span>\n<span class=\"kd\">infix</span> <span class=\"bp\">`</span> <span class=\"n\">is_a_max_of</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">160</span> <span class=\"o\">:=</span> <span class=\"n\">is_max'</span>\n<span class=\"k\">#check</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"n\">is_a_max_of</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"c1\">-- error because now it tries to add 1 to the proposition that 2 is a max</span>\n</code></pre></div>\n</blockquote>\n<p>AHHHHHHHHHH i get it</p>",
        "id": 215955226,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604756042
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113488-general/topic/question.20about.20infix.20in.20tutorial/near/215942492\">said</a>:</p>\n<p>i get it! thanks!</p>",
        "id": 215955276,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604756076
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/question.20about.20infix.20in.20tutorial/near/215943289\">said</a>:</p>\n<blockquote>\n<p>The proper term is \"precedence\" (parenthesis binding strength), not \"priority\" (preference of use in case of clashes)</p>\n</blockquote>\n<p>yea that's what I was confused about.</p>",
        "id": 215955295,
        "sender_full_name": "Abhishek Cherath",
        "timestamp": 1604756129
    }
]