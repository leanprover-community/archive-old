[
    {
        "content": "<p>I have a theorem that I would like to add to the ring_theory/unique_factorization_domain.lean file, but the <code>decidable_classical</code> linter complains with</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">The</span> <span class=\"n\">following</span> <span class=\"bp\">`</span><span class=\"n\">decidable</span><span class=\"bp\">`</span> <span class=\"n\">hypotheses</span> <span class=\"n\">should</span> <span class=\"n\">be</span> <span class=\"n\">replaced</span> <span class=\"k\">with</span>\n                      <span class=\"bp\">`</span><span class=\"n\">classical</span><span class=\"bp\">`</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"k\">proof</span><span class=\"bp\">.</span> <span class=\"n\">argument</span> <span class=\"mi\">4</span><span class=\"o\">:</span> <span class=\"o\">[</span><span class=\"n\">dec</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"o\">(</span><span class=\"n\">associates</span> <span class=\"n\">Î±</span><span class=\"o\">)]</span>\n</code></pre></div>\n\n\n<p>There are many other theorems that have the exact same hypothesis, but without a complaint. Why is that? Also, how do I fix this case?</p>",
        "id": 208458187,
        "sender_full_name": "Paul van Wamelen",
        "timestamp": 1598741921
    },
    {
        "content": "<p>As long as the hypothesis is referenced directly in the statement (usually invisibly because it is a type class argument), the linter will not complain</p>",
        "id": 208458416,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1598742317
    },
    {
        "content": "<p>You can fix it by removing the decidable_eq instance from the theorem, and then starting the proof with <code>classical,</code></p>",
        "id": 208458429,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1598742357
    },
    {
        "content": "<p>I see in ring_theory/unique_factorization_domain.lean that the <code>dec</code> hypothesis is added on L305, included in the definition <code>factors</code> (meaning that all theorems directly about <code>factors</code> will need this assumption), and later explicitly omitted in theorems <code>eq_of_prod_eq_prod</code> and <code>prod_le</code>, by putting <code>omit dec</code> before the theorem and <code>include dec</code> after. You can do that for your theorem as well</p>",
        "id": 208458625,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1598742630
    },
    {
        "content": "<p>Thanks Mario, I'll try that!</p>",
        "id": 208459228,
        "sender_full_name": "Paul van Wamelen",
        "timestamp": 1598743677
    }
]