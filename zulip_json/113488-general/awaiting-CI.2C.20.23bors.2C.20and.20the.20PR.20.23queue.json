[
    {
        "content": "<p>(wanna rename to \"awaiting-CI, <a href=\"https://app.bors.tech/repositories/24316\">#bors</a>, and the PR <a href=\"https://bit.ly/3zVLgqR\">#queue</a>\"? <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span>)</p>",
        "id": 255707294,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1633076340
    },
    {
        "content": "<p>For the status failure, is there any way to discriminate between between a CI failure and a bors failure? It happened to one of my PRs a while back to be put off the queue after a failed batch which means it subsequently got forgotten as it wasn't showing up on the queue.</p>",
        "id": 255707568,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1633076490
    },
    {
        "content": "<p>This is indeed frustrating. But I'm not aware of fine-grained control over these failures. It would be good if GH allowed us to do <code>cases</code> on the failure status.</p>",
        "id": 255708606,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633077035
    },
    {
        "content": "<p>You can also vote up my <a href=\"https://github.com/bors-ng/bors-ng/issues/1227\">issue</a> on the bors repository. :-)</p>",
        "id": 255710394,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633077931
    },
    {
        "content": "<p>Until that bors issue is fixed, could we have a tiny github action that overwrites these <span aria-label=\"cross mark\" class=\"emoji emoji-274c\" role=\"img\" title=\"cross mark\">:cross_mark:</span> generated by bors?</p>",
        "id": 255710783,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633078120
    },
    {
        "content": "<p>I'm thinking of adding some steps to the CI to keep \"awaiting-CI\" updated as well as adding a label \"oleans-up-to-date\" (naming suggestions welcome) which indicates whether there are up-to-date oleans available via <code>leanproject</code>. Here's what I have in mind:</p>\n<ul>\n<li>when a new CI job starts, remove \"oleans-up-to-date\"</li>\n<li>when \"Build mathlib\" succeeds, add a label \"oleans-up-to-date\"</li>\n<li>when all jobs have finished, remove \"awaiting-CI\" (here we could also have leanprover-community-bot add \"bors r+\" to a PR with \"ready-for-bors\" or another label; the downside is that anyone with push access could add that label and trigger a merge.)</li>\n</ul>",
        "id": 255754196,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1633099025
    },
    {
        "content": "<p>what about \"has-oleans\"?</p>",
        "id": 255757804,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1633100495
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/9491\">#9491</a></p>",
        "id": 255791053,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1633114405
    },
    {
        "content": "<p>Whoops, this is trickier than I thought it would be. The issue is that our CI runs on every pushed <strong>commit</strong>, whereas labels are associated to a <strong>PR</strong> and there isn't a 1 to 1 association between commits and PRs. Would it make sense to perform the above-listed actions on all PRs whose branches contain the pushed commit or are there some cases where that's undesirable?</p>",
        "id": 255792964,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1633115267
    },
    {
        "content": "<p>The has-oleans one should only apply if the commit is the tip of the branch, no?</p>",
        "id": 255793787,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1633115655
    },
    {
        "content": "<p>Yes, that's right. We have a job which auto-cancels workflows running on out-of-date commits which I think should catch that, although I should think a little bit more about whether there are any weird race conditions.</p>",
        "id": 255794431,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1633115988
    },
    {
        "content": "<p>OK, I'm stuck on the following. Right now, as long as <code>leanpkg build</code> has started,  the job will upload oleans even if the build fails. The proposed behavior would be that \"has-oleans\" gets applied as well, which I think is reasonable. </p>\n<p>Now consider the following sequence of events:</p>\n<ol>\n<li>Commit 1 is pushed to a branch, triggering build 1</li>\n<li>Commit 2 gets pushed to the same branch, triggering build 2 </li>\n<li>Build 2 cancels build 1.</li>\n</ol>\n<p>Because it takes time for build 1 to get canceled and for it to finish uploading oleans, etc., the following is difficult to avoid:</p>\n<ol start=\"4\">\n<li>Build 2 removes \"has-oleans\" from the PR</li>\n<li>Build 1 uploads oleans and then applies \"has-oleans\" to the PR</li>\n</ol>\n<p>Now the PR \"has-oleans\", but not up-to-date ones (at least until build 2 uploads its oleans).</p>",
        "id": 255800372,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1633118764
    },
    {
        "content": "<p>Is has-oleans actually that useful?</p>",
        "id": 255817606,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1633128005
    },
    {
        "content": "<p>Stale oleans in a leaf file are often just as good as fresh ones</p>",
        "id": 255818167,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1633128411
    },
    {
        "content": "<p>I think with the recent changes to <code>leanproject get-cache</code> it's no longer so essential to mark <code>has-oleans</code>. (Or, if we do want to mark it, no longer essential that we get it perfectly right!)</p>",
        "id": 255819436,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633129272
    },
    {
        "content": "<p>OK, I'll drop <code>has-oleans</code> for now and see if I can get something just to remove <code>awaiting-CI</code>.</p>",
        "id": 255822223,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1633131051
    }
]