[
    {
        "content": "<p>whenever I open vscode, lean seems to re-check all imported files... wasn't this better some time ago?</p>",
        "id": 135554082,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539190742
    },
    {
        "content": "<p>(my issue here is that I need to close all other programs, to check some imports from the hott3 library, they use up almost all of my RAM)</p>",
        "id": 135554225,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539190886
    },
    {
        "content": "<p>Did you run <code>leanpkg build</code> in the appropriate directory?</p>",
        "id": 135554646,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1539191394
    },
    {
        "content": "<p>Nope, shame on my, kind of assumed that vscode would somehow invoke that... <span class=\"emoji emoji-1f601\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 135555511,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539192279
    },
    {
        "content": "<p>Uhm, and <code>leanpkg build</code> also doesn't eat all of my RAMs <span class=\"emoji emoji-1f40f\" title=\"ram\">:ram:</span></p>",
        "id": 135555567,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539192346
    },
    {
        "content": "<p>But unfortunately it doesn't change the fact that vscode checks everything at startup, even after a successful <code>leanpkg build</code>...</p>",
        "id": 135555870,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539192649
    },
    {
        "content": "<p>Are you using <code>elan</code>? Did you run <code>leanpkg build</code> in the root of your project, or in a subdir?</p>",
        "id": 135555902,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539192684
    },
    {
        "content": "<p>In the root dir... What is <code>elan</code>?</p>",
        "id": 135556008,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539192801
    },
    {
        "content": "<p>Ok, you are not using <code>elan</code>.</p>",
        "id": 135556127,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539192922
    },
    {
        "content": "<p>Kevin wrote this page today: <a href=\"https://xenaproject.wordpress.com/installing-lean-and-mathlib/\" target=\"_blank\" title=\"https://xenaproject.wordpress.com/installing-lean-and-mathlib/\">https://xenaproject.wordpress.com/installing-lean-and-mathlib/</a></p>",
        "id": 135556135,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539192933
    },
    {
        "content": "<p>Jakob, how did you install lean and mathlib?</p>",
        "id": 135556149,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539192959
    },
    {
        "content": "<p>Lean: Using the sources</p>",
        "id": 135556619,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539193501
    },
    {
        "content": "<p>Mathlib: Not sure if I have it at all... but hott3 doesn't depend on it, does it?</p>",
        "id": 135556643,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539193535
    },
    {
        "content": "<p>Oh, there's a global installation of mathlib at <code>~/.lean/_target/deps</code></p>",
        "id": 135556718,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539193614
    },
    {
        "content": "<p>Hmmm... I don't really know enough to help you here.</p>",
        "id": 135557237,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539194057
    },
    {
        "content": "<p>You have fresh .olean files in your Lean root directory, right? What exactly are you opening in VS Code?</p>",
        "id": 135557629,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1539194457
    },
    {
        "content": "<p>What's my lean root directory? I'm opening the folder of a project of mine in VS, which references <code>hott3</code> in its <code>.toml</code></p>",
        "id": 135559479,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539196298
    },
    {
        "content": "<p>Wherever you built the executable. If the executable lies in <code>lean/bin/</code>, then you should also have <code>lean/library/</code> with the core lib. The <code>.lean</code> files there should have fresh <code>.olean</code> files. In your project folder, do you have <code>_target/deps/hott3</code>? Are there <code>olean</code> files in there?</p>",
        "id": 135560271,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1539197045
    },
    {
        "content": "<p>And are there compilation errors when you run <code>leanpkg build</code>?</p>",
        "id": 135560283,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1539197062
    },
    {
        "content": "<p>Yes there's <code>.olean</code> files in <code>_target/deps/hott3</code> and not so fresh ones in <code>lean/library</code>... <code>leanpkg buid</code> goes through with warning but no errors.</p>",
        "id": 135561866,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539198540
    },
    {
        "content": "<p>Hm, but if I run <code>leanpkg build</code> in <code>~/.lean</code>, I get loads of errors</p>",
        "id": 135562001,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539198667
    },
    {
        "content": "<p>Oh, that's because stuff is not in <code>LEAN_PATH</code></p>",
        "id": 135562103,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539198752
    },
    {
        "content": "<p>Hu, but <code>lean --path</code> gives all I would expect...</p>",
        "id": 135562473,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539199119
    },
    {
        "content": "<p>Should <code>leanpkg build</code> build all the deps or just the files needed?</p>",
        "id": 135563098,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539199799
    },
    {
        "content": "<p>only needed</p>",
        "id": 135563180,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539199851
    },
    {
        "content": "<p>Thanks.</p>",
        "id": 135563290,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539199965
    },
    {
        "content": "<p>And should it build files that haven't changed since the last build?</p>",
        "id": 135563297,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539199983
    },
    {
        "content": "<p>If there's only deps and no actual content in <code>~/.lean</code>, how come <code>leanpkg build</code> does anything at all, if I execute it there? <span class=\"emoji emoji-1f615\" title=\"confused\">:confused:</span></p>",
        "id": 135563570,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539200363
    },
    {
        "content": "<p>Forget about <code>~/.lean</code>, it's independent and not used in this case (check <code>lean -p</code>, if it doesn't appear you don't need to worry about it).<br>\nThe easiest way to ensure all olean files are built is to run <code>lean --make</code> in the project folder.<br>\n(You should also open the project folder in vscode (not a subfolder or superfolder), but I don't think that's the problem here.)</p>",
        "id": 135564693,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1539201622
    },
    {
        "content": "<p>Now it works <span class=\"emoji emoji-1f937\" title=\"shrug\">:shrug:</span> Not sure what was wrong. I did a rebuild of lean itself</p>",
        "id": 135565841,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539202829
    },
    {
        "content": "<p>Why do you build Lean?</p>",
        "id": 135565898,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539202890
    },
    {
        "content": "<p>I noticed it's been a while since I last built it</p>",
        "id": 135565994,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539203005
    },
    {
        "content": "<p>Why building it at all? What's wrong with the distributed binaries? Are you modifying Lean?</p>",
        "id": 135566068,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539203113
    },
    {
        "content": "<p>I used to,  ages ago. Before most of the library was moved to <code>mathlib</code>... I guess I could as well use the binaries now.</p>",
        "id": 135566172,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1539203277
    },
    {
        "content": "<p>Yeah, while Lean itself is stable at the moment, all the instructions people are giving assume you're using a binary (ideally provided by elan). <code>lean --make</code> in the <code>library/</code> directory of a built-from-sources copy of Lean can help with the issue you were experiencing.</p>",
        "id": 135571392,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1539209328
    }
]