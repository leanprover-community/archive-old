[
    {
        "content": "<p>Hello everyone! Is there any Coq-to-Lean transpiler?</p>\n<p>I would like to reuse some libraries written in Coq but I would ideally like to continue working in Lean.</p>",
        "id": 248226227,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1627999977
    },
    {
        "content": "<p>No there is no such thing.</p>",
        "id": 248227008,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1628000299
    },
    {
        "content": "<p>OK. Thanks for the info.</p>",
        "id": 248228048,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1628000743
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 248228054,
        "sender_full_name": "Notification Bot",
        "timestamp": 1628000745
    },
    {
        "content": "<p>There's not even (yet) a robust Lean to Lean transpiler! cf all the <a class=\"stream\" data-stream-id=\"287929\" href=\"/#narrow/stream/287929-mathlib4\">#mathlib4</a> stream</p>",
        "id": 248229166,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1628001223
    },
    {
        "content": "<p>What exactly are you looking ofr? Maybe we have that, or something close enough that writing it wouldn't be too hard.</p>",
        "id": 248229430,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1628001353
    },
    {
        "content": "<p>Complexity theory; in particular, NP-completeness. To the best of my knowledge, there is nothing like this library in Lean.</p>\n<p><a href=\"https://github.com/uds-psl/cook-levin/tree/paper-cook-levin/theories\">https://github.com/uds-psl/cook-levin/tree/paper-cook-levin/theories</a></p>",
        "id": 248229639,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1628001458
    },
    {
        "content": "<p>i think this is probably the closest you get, and not only is it in the other direction, it's also probably impossible to do much more than to typecheck with it: <a href=\"https://coq.discourse.group/t/alpha-announcement-coq-is-a-lean-typechecker/581\">https://coq.discourse.group/t/alpha-announcement-coq-is-a-lean-typechecker/581</a></p>",
        "id": 248230441,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1628001784
    },
    {
        "content": "<p>I used to have a regex that did coq-to-lean that I used for porting parts of compcert but it's long lost</p>",
        "id": 248277342,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1628023195
    },
    {
        "content": "<p>If I was to do that today I would do something more like mathport</p>",
        "id": 248277435,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1628023228
    },
    {
        "content": "<p>a coq-to-lean regex sounds magnificent and also <a href=\"https://stackoverflow.com/a/1732454\">terrifying</a></p>",
        "id": 248277529,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1628023279
    }
]