[
    {
        "content": "<p>Here are five lines of code:, a short version of the Hello World of Lean, suitable as a first example for even new undergraduate students. The problem pedagogically is that  the result of  #eval is a cryptic message about no typeclass instance,  the dumping of an internal representation, and some #1s and other stuff. I understand what's going on here; the question is whether I can get Lean to show results in a readable form without defining typeclass instances. Coq's good in this regard, for example. How might I get the same effect in Lean. </p>\n<p>inductive day <br>\n| monday: day<br>\n| tuesday: day</p>\n<p>def id_day (d: day): day := d</p>\n<p>#eval id_day day.monday</p>",
        "id": 130789249,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1533228820
    },
    {
        "content": "<p>#reduce</p>",
        "id": 130789325,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1533228878
    },
    {
        "content": "<blockquote>\n<p>#reduce</p>\n</blockquote>\n<p>Of course, thanks.</p>",
        "id": 130789982,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1533229660
    }
]