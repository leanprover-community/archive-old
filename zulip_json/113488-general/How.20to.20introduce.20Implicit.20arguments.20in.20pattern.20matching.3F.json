[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"557291\">Erika Su</span> has marked this topic as resolved.</p>",
        "id": 318109215,
        "sender_full_name": "Notification Bot",
        "timestamp": 1672152425
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"557291\">Erika Su</span> has marked this topic as unresolved.</p>",
        "id": 318109228,
        "sender_full_name": "Notification Bot",
        "timestamp": 1672152431
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"557291\">Erika Su</span> has marked this topic as resolved.</p>",
        "id": 318109292,
        "sender_full_name": "Notification Bot",
        "timestamp": 1672152456
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"557291\">Erika Su</span> has marked this topic as unresolved.</p>",
        "id": 318109348,
        "sender_full_name": "Notification Bot",
        "timestamp": 1672152479
    },
    {
        "content": "<p>If you know it is a palindrome you can always get the last element by returning the first element. The pattern matching you are trying here wont work because what you are doing is not a pattern match in the Lean sense.</p>",
        "id": 318110943,
        "sender_full_name": "Henrik BÃ¶ving",
        "timestamp": 1672153096
    }
]