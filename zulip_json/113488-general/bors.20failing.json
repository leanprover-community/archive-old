[
    {
        "content": "<p>bors has been failing recently due to some instance search becoming slow. I'll fix it by adjusting locally the priorities, but for the record here is the instance search it tries to solve:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">?</span><span class=\"n\">x_0</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">is_scalar_tower</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">smul_with_zero.to_has_scalar</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_class.to_has_zero</span> <span class=\"n\">R</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_one_class.to_mul_zero_class</span> <span class=\"n\">R</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">monoid_with_zero.to_mul_zero_one_class</span> <span class=\"n\">R</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_monoid_with_zero</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)))))</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_monoid.to_add_zero_class</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_comm_monoid.to_add_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                 <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">))))))))</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_action_with_zero.to_smul_with_zero</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_monoid_with_zero</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">))</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_monoid.to_add_zero_class</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_comm_monoid.to_add_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                 <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">))))))))</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">module.to_mul_action_with_zero</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                 <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">)))))</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.module</span> <span class=\"n\">R</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"n\">_inst_1</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_module</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">))))))</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">smul_with_zero.to_has_scalar</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_one_class.to_mul_zero_class</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">monoid_with_zero.to_mul_zero_one_class</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_monoid_with_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                 <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">))))))</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_monoid.to_add_zero_class</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_comm_monoid.to_add_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                 <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">))))))))</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_action_with_zero.to_smul_with_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_monoid_with_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">)))</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_monoid.to_add_zero_class</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_comm_monoid.to_add_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                 <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">))))))))</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">module.to_mul_action_with_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">))</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                 <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">)))))</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_module</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                 <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">))))))</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">smul_with_zero.to_has_scalar</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_class.to_has_zero</span> <span class=\"n\">R</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_one_class.to_mul_zero_class</span> <span class=\"n\">R</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">monoid_with_zero.to_mul_zero_one_class</span> <span class=\"n\">R</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_monoid_with_zero</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)))))</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_monoid.to_add_zero_class</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_comm_monoid.to_add_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                 <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">))))))))</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_action_with_zero.to_smul_with_zero</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_monoid_with_zero</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">))</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_monoid.to_add_zero_class</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_comm_monoid.to_add_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                 <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">))))))))</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">module.to_mul_action_with_zero</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                 <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">S₁</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n                       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.comm_semiring</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"n\">_inst_1</span><span class=\"o\">)))))</span>\n           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial.module</span> <span class=\"n\">R</span> <span class=\"n\">R</span> <span class=\"n\">S₁</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"n\">_inst_1</span>\n              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_module</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">))))))</span>\n</code></pre></div>\n<p>The chain of reductions has become longer since the inclusion of <code>non_unital_non_assoc_semiring</code> and <code>non_assoc_semiring</code> in our main spine of typeclass inclusions. Together with old type classes, this is not surprising it is getting slow to handle. May I suggest that, in Lean 4, we keep the main spine as short as possible (to make sure that most mainstream applications are as fast as possible), and register instances from more exotic classes with just slightly lower priority, to make sure this doesn't bite us again?</p>",
        "id": 241874140,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1623132394
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/7840\">#7840</a>. Might be worth merging with priority 37 once the current batch is finished.</p>",
        "id": 241874372,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1623132721
    },
    {
        "content": "<p>(goes down from 13s to 144ms on my computer)</p>",
        "id": 241874423,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1623132756
    },
    {
        "content": "<p>The current batch just failed. <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> , <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> , what about merging <a href=\"https://github.com/leanprover-community/mathlib/issues/7840\">#7840</a> now?</p>",
        "id": 241875491,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1623133986
    },
    {
        "content": "<p>In what way are they part of the \"main spine\"?</p>",
        "id": 241875768,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1623134246
    },
    {
        "content": "<p>Is there a simple priority change that would eject them from that spine?</p>",
        "id": 241875772,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1623134260
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> thanks for debugging this!</p>",
        "id": 241875833,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1623134291
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/bors.20failing/near/241875772\">said</a>:</p>\n<blockquote>\n<p>Is there a simple priority change that would eject them from that spine?</p>\n</blockquote>\n<p>I am not sure how Lean manages things for old style structures. The definition of a semiring is that it extends <code>non_unital_semiring α, non_assoc_semiring α, monoid_with_zero α</code>, so if you're looking for the addition in a semiring you will have to pass through either <code>non_unital_semiring</code> or <code>non_assoc_semiring</code>. It's in this sense that I am saying they are part of the main spine. But we shouldn't add a shortcut from <code>semiring</code> to <code>has_add</code>, because we have already seen that adding shortcuts only makes things worse most of the time.</p>",
        "id": 241876400,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1623134826
    },
    {
        "content": "<p>Things will be completely different in Lean 4 since we can't extend things in all directions at the same time because of new style structures. Hopefully, this will lean to a cleaner design.</p>",
        "id": 241876504,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1623134900
    },
    {
        "content": "<p><del>I didn't think we used extends there</del></p>",
        "id": 241877837,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1623135937
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/semiring/src\">src#semiring</a></p>",
        "id": 241877852,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1623135948
    },
    {
        "content": "<p>It's the second time that bors fails to merge <a href=\"https://github.com/leanprover-community/mathlib/issues/9706\">#9706</a> without any apparent reason. Any idea?</p>",
        "id": 257564605,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634229087
    },
    {
        "content": "<p>I tried clearing the temp files as some of the runners were running out of space: <a href=\"#narrow/stream/113538-CI/topic/CI.20runner.20status/near/257562907\">https://leanprover.zulipchat.com/#narrow/stream/113538-CI/topic/CI.20runner.20status/near/257562907</a> </p>\n<p>Hopefully that will fix things...</p>",
        "id": 257565944,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1634229612
    },
    {
        "content": "<p>Note that other PRs went through in the meantime without problems <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 257566066,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634229670
    },
    {
        "content": "<p>I don't understand the latest failure in the \"export as low-level text file\" step: <a href=\"https://github.com/leanprover-community/mathlib/runs/3897800798#step:11:4\">https://github.com/leanprover-community/mathlib/runs/3897800798#step:11:4</a></p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Run lean --recursive --export=mathlib.txt src/\n&lt;unknown&gt;:1:1: error: unknown declaration '_private.2353234301.add'\nError: Process completed with exit code 1.\n</code></pre></div>",
        "id": 257581529,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1634235738
    }
]