[
    {
        "content": "<p>Does anyone know whether <a href=\"https://hal.inria.fr/hal-01859964\" target=\"_blank\" title=\"https://hal.inria.fr/hal-01859964\">https://hal.inria.fr/hal-01859964</a> is something Lean should care about? It's a paper about \"Definitional Proof-Irrelevance without K\" which explicitly mentions Lean's type theory.</p>",
        "id": 151624464,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1544722306
    },
    {
        "content": "<p>Their typesetting ate the → symbols. <span class=\"emoji emoji-2639\" title=\"sad\">:sad:</span> Maybe I'm missing something, but the results are not very exciting to me.  In summary, they add a universe <code>sProp u</code> of squashed types, whose elements are then made definitionally equal.  They don't have any good ideas for the problems with <code>acc</code> that make type-checking undecidable in Lean.  They just disallow subsingleton elimination completely, so you can't even cast along equations...</p>",
        "id": 151721652,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1544725659
    },
    {
        "content": "<p>only some of them... the Agda code also has some missing → symbols, but also some visible ones</p>",
        "id": 151722715,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1544726564
    },
    {
        "content": "<p>(By exciting I mean exciting for math/programming in Lean.  The idea of using squash types with definitional equality could be nice in HoTT (I guess we could even squash in Lean by going into <code>Prop</code>).)</p>",
        "id": 151722732,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1544726576
    },
    {
        "content": "<p>also the lambdas</p>",
        "id": 151722733,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1544726577
    },
    {
        "content": "<p>what is the intuition behind these squash types?</p>",
        "id": 151722777,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1544726614
    },
    {
        "content": "<p>are they like HoTT propositions or lean propositions?</p>",
        "id": 151722793,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1544726631
    },
    {
        "content": "<p>They're essentially just <del>quotients with the universal relation</del> + definitional equality.  The rules are on page 10.  Edit: no they're even less---you can't eliminate into Type at all from squash types.</p>",
        "id": 151722889,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1544726713
    },
    {
        "content": "<p>I think the moral of the story is that everything you can do with sType is already possible in lean, this paper just describes how</p>",
        "id": 151724356,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1544727939
    }
]