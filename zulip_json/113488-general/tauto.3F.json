[
    {
        "content": "<p>Suppose I have an assumption</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">n</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>and a goal</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">n</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"n\">ball</span> <span class=\"n\">x</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>The goal is a trivial consequence of <code>h</code> (there are more assumptions in the goal than in <code>h</code>). I can prove it by hand doing the <code>intros</code>/<code>rcases</code> dance, but I did not find a tactic that would do it out of the box. Did I miss something?</p>",
        "id": 136135863,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1539980004
    },
    {
        "content": "<p><code>tidy</code> can do these sometimes</p>",
        "id": 136136157,
        "sender_full_name": "Reid Barton",
        "timestamp": 1539980361
    },
    {
        "content": "<p>Also, there's <code>rintros</code> now <span class=\"emoji emoji-263a\" title=\"smile\">:smile:</span></p>",
        "id": 136136222,
        "sender_full_name": "Reid Barton",
        "timestamp": 1539980428
    },
    {
        "content": "<p>Poor <code>tidy</code> is completely lost when there are real numbers: it unfolds the Cauchy sequences definition, and asks for new goals looking like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">quot</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">setoid</span><span class=\"bp\">.</span><span class=\"n\">r</span> <span class=\"bp\">⟨</span><span class=\"n\">ε_val</span><span class=\"o\">,</span> <span class=\"n\">ε_property</span><span class=\"bp\">⟩</span>\n</pre></div>",
        "id": 136136571,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1539980825
    },
    {
        "content": "<p>I don't see why one can't just prove it by hand. It isn't like it's very complicated</p>",
        "id": 136136596,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539980858
    },
    {
        "content": "<p>but yes, I agree there should be a tactic that doesn't only take <code>iff</code> things as argument</p>",
        "id": 136136609,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1539980872
    },
    {
        "content": "<p>Because proving things by hand don't scale</p>",
        "id": 136136655,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539980892
    },
    {
        "content": "<p>We want thousands of those trivial proofs</p>",
        "id": 136136663,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539980905
    },
    {
        "content": "<p>Isabelle proof: <code>using h by blast</code> :)</p>",
        "id": 136136894,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1539981133
    },
    {
        "content": "<p>That still two words of noise, but it's getting close to acceptable</p>",
        "id": 136136930,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539981181
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 136136964,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539981240
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 136137144,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1539981390
    }
]