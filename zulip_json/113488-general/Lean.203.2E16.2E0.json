[
    {
        "content": "<p>It's been almost two weeks, which means it's about time for a new release!  The latest version of the community edition of Lean has been released, say welcome to Lean 3.16.0!  Thanks to <span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span>, Mos√® Giordano, and <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span>!</p>\n<p>Features:</p>\n<ul>\n<li>Add docstrings for <code>cc_state</code> primitives (<a href=\"https://github.com/leanprover-community/lean/issues/295\">lean#295</a>)</li>\n<li>Use <code>BUILD_TESTING</code> to enable or disable building tests (<a href=\"https://github.com/leanprover-community/lean/issues/292\">lean#292</a>)</li>\n<li>Additional meta constants (<a href=\"https://github.com/leanprover-community/lean/issues/294\">lean#294</a>)</li>\n<li>Add <code>@[pp_nodot]</code> (<a href=\"https://github.com/leanprover-community/lean/issues/297\">lean#297</a>)</li>\n<li>Make widget look more like current tactic state (<a href=\"https://github.com/leanprover-community/lean/issues/303\">lean#303</a>)</li>\n<li>Show term-proof goals as widgets (<a href=\"https://github.com/leanprover-community/lean/issues/304\">lean#304</a>, <a href=\"https://github.com/leanprover-community/lean/issues/306\">lean#306</a>)</li>\n<li>Add holes for underscores (<a href=\"https://github.com/leanprover-community/lean/issues/307\">lean#307</a>)</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>Fix case of header files for building on case-sensitive filesystems (<a href=\"https://github.com/leanprover-community/lean/issues/290\">lean#290</a>)</li>\n<li>Remove useless setting of <code>_GLIBCXX_USE_CXX11_ABI</code> with MinGW (<a href=\"https://github.com/leanprover-community/lean/issues/293\">lean#293</a>)</li>\n<li>Fix guards to make it possible to build for BSD systems (<a href=\"https://github.com/leanprover-community/lean/issues/291\">lean#291</a>)</li>\n<li>Rename <code>tactic.tactic.run_simple</code> -&gt; <code>tactic.run_simple</code> (<a href=\"https://github.com/leanprover-community/lean/issues/298\">lean#298</a>)</li>\n<li>Use instance instead of semireducible transparency in type-class synthesis (<a href=\"https://github.com/leanprover-community/lean/issues/300\">lean#300</a>)</li>\n<li>Widget events contain position (<a href=\"https://github.com/leanprover-community/lean/issues/301\">lean#301</a>)</li>\n<li>Server: do not cancel info queries, etc. (<a href=\"https://github.com/leanprover-community/lean/issues/308\">lean#308</a>)</li>\n</ul>\n<p>Changes:</p>\n<ul>\n<li>Lower precedence of unary <code>-</code> (<a href=\"https://github.com/leanprover-community/lean/issues/287\">lean#287</a>)</li>\n</ul>\n<p>Server protocol changes:</p>\n<ul>\n<li>The widget field in the info response has now two new fields: <code>line</code> and <code>column</code>.  You need to use these in the <code>update_widget</code> request.</li>\n</ul>\n<p>Mathlib PR:</p>\n<ul>\n<li>already queued: <a href=\"https://github.com/leanprover-community/mathlib/issues/3016\">#3016</a></li>\n</ul>",
        "id": 200419887,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1591797800
    },
    {
        "content": "<p>So, I've never seen a widget before. Have I forgotten to update something or are they not in production yet? The demo looked super cool and I'd love to play around with them sometime.</p>",
        "id": 200421880,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591798747
    },
    {
        "content": "<p>There's a lot of work in progress on <a href=\"https://github.com/leanprover/vscode-lean/issues/159\">leanprover/vscode-lean#159</a>.</p>",
        "id": 200422104,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591798858
    },
    {
        "content": "<p>Rob, if you want to play with widgets you need to ask Ed to send you a test build of the VScode extension.</p>",
        "id": 200422486,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591799031
    },
    {
        "content": "<p>Ah, I see. I can be patient :)</p>",
        "id": 200422715,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1591799138
    },
    {
        "content": "<p>Not necessarily, it seems Ed is connected right now.</p>",
        "id": 200423373,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591799406
    },
    {
        "content": "<p>Maybe he already sent you a link. I got one last week.</p>",
        "id": 200423403,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591799420
    },
    {
        "content": "<p>Patrick was the only one who got a vsix, sorry if anyone else got FOMO.</p>",
        "id": 200426458,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1591800626
    },
    {
        "content": "<p>They're easy enough to create though. Here's one assuming the flurry of commits to the PR are done for today: <a href=\"/user_uploads/3121/n6kKNz1blWyDwwOZc_ihfMwJ/lean-0.15.15.vsix\">lean-0.15.15.vsix</a></p>",
        "id": 200427033,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1591800853
    },
    {
        "content": "<p>I'm still seeing duplicated information as in<br>\n<a href=\"/user_uploads/3121/E5kwGZi6inbQ1wtbcE-IwZZs/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/E5kwGZi6inbQ1wtbcE-IwZZs/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/E5kwGZi6inbQ1wtbcE-IwZZs/image.png\"></a></div>",
        "id": 200464927,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591817332
    },
    {
        "content": "<p>The tactic should be collapsed by default now.</p>",
        "id": 200471683,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1591820690
    },
    {
        "content": "<p>Maybe it would be better to have a button/checkbox to switch between the two so that you don't see both at the same time.</p>",
        "id": 200471758,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1591820740
    },
    {
        "content": "<p>Clicking on Tactic state to uncollapse it is very tempting.</p>",
        "id": 200472742,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591821262
    },
    {
        "content": "<p>highlighting persistence is still totally random too</p>",
        "id": 200472847,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591821333
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/7YZ23anYpt2K3F9_khn76s48/Peek.gif\">Peek.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/7YZ23anYpt2K3F9_khn76s48/Peek.gif\" title=\"Peek.gif\"><img src=\"/user_uploads/3121/7YZ23anYpt2K3F9_khn76s48/Peek.gif\"></a></div>",
        "id": 200472998,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591821406
    },
    {
        "content": "<p>This gif would be really good with a banging techno soundtrack</p>",
        "id": 200474186,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1591822065
    },
    {
        "content": "<p>Are these trippy effects on 3.16? I haven't seen them lately.</p>",
        "id": 200476735,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1591823230
    },
    {
        "content": "<p>Ok, I just tried again and I see the trippy effects as well.  I'll let <span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> look into this.</p>",
        "id": 200479211,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1591824455
    },
    {
        "content": "<p>New bug report: I frequently loose tactic state while typing.<br>\n<a href=\"/user_uploads/3121/_ul1RKPpG8toTkuHgFRJAiSp/Peek.gif\">Peek.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/_ul1RKPpG8toTkuHgFRJAiSp/Peek.gif\" title=\"Peek.gif\"><img src=\"/user_uploads/3121/_ul1RKPpG8toTkuHgFRJAiSp/Peek.gif\"></a></div>",
        "id": 200647793,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591952371
    },
    {
        "content": "<p>Note how I finish typing a line with <code>t,</code> and don't get tactic state before wiggling the cursor.</p>",
        "id": 200647882,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591952411
    },
    {
        "content": "<p>Oh we also lost the \"click Try this\" feature</p>",
        "id": 200648016,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1591952507
    },
    {
        "content": "<p>Oh yeah, the current info view auto-updates while the server is updating:</p>\n<div class=\"codehilite\"><pre><span></span><code>            <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">statusChanged</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"nx\">async</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n                <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">displayMode</span> <span class=\"o\">===</span> <span class=\"nx\">DisplayMode</span><span class=\"p\">.</span><span class=\"nx\">OnlyState</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"kr\">const</span> <span class=\"nx\">changed</span> <span class=\"o\">=</span> <span class=\"nx\">await</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">updateGoal</span><span class=\"p\">();</span>\n                    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">changed</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">rerender</span><span class=\"p\">();</span> <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}),</span>\n</code></pre></div>",
        "id": 200652641,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1591956108
    },
    {
        "content": "<p>We've just had another patch release after two days (3.16.2):</p>\n<p>Bug fixes:</p>\n<ul>\n<li>Stop scanning after <code>#exit</code> (<a href=\"https://github.com/leanprover-community/lean/issues/318\">lean#318</a>, fixes <a href=\"https://github.com/leanprover-community/lean/issues/309\">lean#309</a>)</li>\n<li>Allow <code>variables (A B : Type*)</code> (<a href=\"https://github.com/leanprover-community/lean/issues/319\">lean#319</a>, fixes <a href=\"https://github.com/leanprover-community/lean/issues/29\">lean#29</a>)</li>\n<li>Escape names using French quotes by default (<a href=\"https://github.com/leanprover-community/lean/issues/320\">lean#320</a>, fixes <a href=\"https://github.com/leanprover-community/lean/issues/114\">lean#114</a>)</li>\n<li>Fix <code>lean --deps</code> (<a href=\"https://github.com/leanprover-community/lean/issues/323\">lean#323</a>)</li>\n<li>Selection disco issue in tactic state widget (<a href=\"https://github.com/leanprover-community/lean/issues/324\">lean#324</a>)</li>\n</ul>\n<p>Features:</p>\n<ul>\n<li>Add <code>get_widget</code> server request (<a href=\"https://github.com/leanprover-community/lean/issues/314\">lean#314</a>)</li>\n<li>Allow namespaces inside sections (<a href=\"https://github.com/leanprover-community/lean/issues/317\">lean#317</a>, fixes <a href=\"https://github.com/leanprover-community/lean/issues/315\">lean#315</a>)</li>\n</ul>\n<p>Server protocol changes:</p>\n<ul>\n<li>The <code>info</code> request no longer returns the widget HTML.  Instead it returns an <code>id</code> field in addition to <code>line</code> and <code>column</code>.  The <code>get_widget</code> request now returns the HTML.  The <code>widget_event</code> request also requires an <code>id</code> argument. (<a href=\"https://github.com/leanprover-community/lean/issues/314\">lean#314</a>)</li>\n</ul>\n<p>Mathlib PR:</p>\n<ul>\n<li>submitted by <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> (<a href=\"https://github.com/leanprover-community/mathlib/issues/3053\">#3053</a>)</li>\n</ul>",
        "id": 200689056,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1591977823
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/rHVR0SCAjFYEVcYBWu9SFCFD/lean-0.15.15.vsix\">lean-0.15.15.vsix</a></p>",
        "id": 200779108,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592073108
    },
    {
        "content": "<p>Does it assume a very recent Lean?</p>",
        "id": 200779179,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592073231
    },
    {
        "content": "<p>It should work well with 3.16.2. Still some issues with older versions.</p>",
        "id": 200779248,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592073334
    },
    {
        "content": "<p>With older versions it sometimes gives 'interupted' errors when it shows the info view. Hopefully <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> can swoop in.</p>",
        "id": 200779336,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592073464
    },
    {
        "content": "<p>Ok, I'll try (I removed the previous version yesterday because the tactic state disappearances really made it unusable)</p>",
        "id": 200779339,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592073474
    },
    {
        "content": "<p>It's still a bit disorienting that you can keep clicking forever to display more and more identical popups</p>",
        "id": 200779465,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592073658
    },
    {
        "content": "<p>It also seems that the big red background is coming back.</p>",
        "id": 200779474,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592073689
    },
    {
        "content": "<p>It can't be right that indicating where the tactic state is looking at looks much more error-like than the squiggly underline that indicate actual errors.</p>",
        "id": 200779535,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592073772
    },
    {
        "content": "<p>Yeah should I change the decoration or just remove it?</p>",
        "id": 200779545,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592073796
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E16.2E0/near/200779465\">said</a>:</p>\n<blockquote>\n<p>It's still a bit disorienting that you can keep clicking forever to display more and more identical popups</p>\n</blockquote>\n<p>Do you mean identical in terms of decoration appearance? They should have different content in right? Eg you can click up a type hierarchy.</p>",
        "id": 200779699,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592074062
    },
    {
        "content": "<p>I would remove it, but making it a soft blue of something like this would already be much better (I don't know how to handle the diversity of color themes however).</p>",
        "id": 200779704,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592074076
    },
    {
        "content": "<p>Ok I've just removed it</p>",
        "id": 200779749,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592074107
    },
    {
        "content": "<p>I mean <br>\n<a href=\"/user_uploads/3121/2PWyuQKHFm_TrCnZcaqfYhMh/Peek.gif\">Peek.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/2PWyuQKHFm_TrCnZcaqfYhMh/Peek.gif\" title=\"Peek.gif\"><img src=\"/user_uploads/3121/2PWyuQKHFm_TrCnZcaqfYhMh/Peek.gif\"></a></div>",
        "id": 200779840,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592074231
    },
    {
        "content": "<p>And I still see a lot of <code>no info found at</code> while typing proofs (in tactic mode of course).</p>",
        "id": 200779931,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592074427
    },
    {
        "content": "<p>I'm sorry to disappoint you.</p>",
        "id": 200780000,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592074519
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Can you point me to a concrete example where the current vscode-lean version shows a tactic state, but the widget edition doesn't?</p>",
        "id": 200780061,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1592074584
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E16.2E0/near/200779840\">said</a>:</p>\n<blockquote>\n<p>I mean...</p>\n</blockquote>\n<p>ok so my opinion on this is that is correct and desirable behaviour, because each time you are getting information on the same term</p>",
        "id": 200780135,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592074698
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E16.2E0/near/200780061\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> Can you point me to a concrete example where the current vscode-lean version shows a tactic state, but the widget edition doesn't?</p>\n</blockquote>\n<p>I think that it happens just after typing a new character when the parser hasn't finished yet, so the info response is just empty.</p>",
        "id": 200780314,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592074970
    },
    {
        "content": "<p>Of course now it behaves correctly.</p>",
        "id": 200780425,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592075151
    },
    {
        "content": "<p>Something very disappointing that should be very easy to fix: <code>goals accomplished</code> is written in tiny font size.</p>",
        "id": 200780476,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592075178
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/Eo-vwTALlqSF0ODv40JBZYse/lean-0.15.15.vsix\">lean-0.15.15.vsix</a></p>",
        "id": 200780655,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592075500
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E16.2E0/near/200780476\">said</a>:</p>\n<blockquote>\n<p>Something very disappointing that should be very easy to fix: <code>goals accomplished</code> is written in tiny font size.</p>\n</blockquote>\n<p>This needs a change to the widget in lean core.  I'll bump up the size and make it bold</p>",
        "id": 200780745,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592075628
    },
    {
        "content": "<p>maybe the win message should be customisable</p>",
        "id": 200780824,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592075742
    },
    {
        "content": "<p>This UI bikeshedding does not necessarily need to happen in core.  All of the expression (and tactic state) rendering happens in a single, 200-line long file---<code>interactive_expr.lean</code>---which we can copy to mathlib today and use <code>vm_override</code> to override the version in core.  I think it's faster to iterate this in mathlib than waiting for a core release for every font size tweak.</p>",
        "id": 200781147,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1592076193
    },
    {
        "content": "<p>Ah yes that's a good idea</p>",
        "id": 200781214,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592076284
    },
    {
        "content": "<p>I forgot you could override an override.</p>",
        "id": 200781241,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592076335
    },
    {
        "content": "<p>IIRC the functions <code>tactic_state_widget</code> and <code>term_goal_widget</code> are not overriden anywhere.</p>",
        "id": 200781565,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1592076743
    },
    {
        "content": "<p>I think to do it you would override <code>tactic.save_info</code> again</p>",
        "id": 200788561,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592087370
    },
    {
        "content": "<p>I'm getting periodic segfaults that I can't reproduce. Using<br>\n<span class=\"user-mention silent\" data-user-id=\"121918\">Edward Ayers</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E16.2E0/near/200780655\">said</a>:</p>\n<blockquote>\n<p><a href=\"/user_uploads/3121/Eo-vwTALlqSF0ODv40JBZYse/lean-0.15.15.vsix\">lean-0.15.15.vsix</a></p>\n</blockquote>\n<p>if it's relevant. Is anyone else experiencing this? Sorry for the unhelpful bug report, but I can't consistently trigger the problem.</p>",
        "id": 201128909,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592393584
    },
    {
        "content": "<p>Hi Rob, thanks for reporting this, could you try again with this newer version and see if you still get the issue? Thanks. <a href=\"/user_uploads/3121/A2XkKSo0znbZ-xTnbkdGeXiB/lean-0.15.15.vsix\">lean-0.15.15.vsix</a></p>",
        "id": 201154433,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592406356
    },
    {
        "content": "<p>Can I play with this bleeding edge stuff? Does it involve losing access to mathlib?</p>",
        "id": 201155486,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592406752
    },
    {
        "content": "<p>Okay, I've switched, will let you know if I still see it happening!</p>",
        "id": 201156662,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592407249
    },
    {
        "content": "<p>I was getting lots of crashes too, and reverted back to the mainline VS Code extension.</p>",
        "id": 201157607,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1592407618
    },
    {
        "content": "<p>What platforms are you using?</p>",
        "id": 201158484,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592407961
    },
    {
        "content": "<p>I'm on Ubuntu.</p>",
        "id": 201159395,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592408332
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E16.2E0/near/201155486\">said</a>:</p>\n<blockquote>\n<p>Can I play with this bleeding edge stuff? Does it involve losing access to mathlib?</p>\n</blockquote>\n<p>Hi Kevin, you can install the above extension by going to the extensions panel in vscode and clicking the '...' and then 'install from VSIX'. Since the underlying version of lean and mathlib doesn't change it should all keep working (mod these segfaults) and you should be able to revert back to the mainline extension by right clicking on the lean extension in the extensions panel and clicking 'install another version'. Switching back and forth should be as painless as a vscode reload.</p>",
        "id": 201159649,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592408381
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110596\">Rob Lewis</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E16.2E0/near/201159395\">said</a>:</p>\n<blockquote>\n<p>I'm on Ubuntu.</p>\n</blockquote>\n<p>Ok I'm on linux too so I'm a bit worried that I'm not seeing these segfaults...<br>\nWhen do you typically get the segfaults? Is it when working on mathlib? Is it while typing a lot or clicking on the infoview etc?</p>",
        "id": 201160204,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592408572
    },
    {
        "content": "<p>Speaking generally and not specifically about the extension, the segfault that I run into most frequently is <a href=\"https://github.com/leanprover-community/lean/issues/85\">lean#85</a>.</p>",
        "id": 201160525,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1592408731
    },
    {
        "content": "<p>I don't think I'm doing anything abnormal. Maybe I'm typing a lot? Nothing special with the infoview.</p>",
        "id": 201165167,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592410896
    },
    {
        "content": "<p>Pretty certain it's not <a href=\"https://github.com/leanprover-community/lean/issues/85\">lean#85</a>, but not 100% sure...</p>",
        "id": 201165301,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592410954
    },
    {
        "content": "<p>Bug <a href=\"https://github.com/leanprover-community/lean/issues/85\">lean#85</a> is not a segfault, at least for me it's just error messages in the output tab.  (Oh, that's because I'm running a debug build.)</p>",
        "id": 201165526,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1592411066
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> Are you also running a debug build?</p>",
        "id": 201166278,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592411424
    },
    {
        "content": "<p>I'm running release 3.16.2 and I get the <a href=\"https://github.com/leanprover-community/lean/issues/85\">lean#85</a> segfaults. But I don't see segfaults with the new extension when I'm just leaning.</p>",
        "id": 201166365,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592411487
    },
    {
        "content": "<p>I haven't seen any segfaults yet since switching to the new version you posted!</p>",
        "id": 201199511,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592427434
    },
    {
        "content": "<p>But, I'm seeing bad behavior with hole commands. (Not sure this is new with the new extension.)</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interactive</span>\n<span class=\"kn\">structure</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">‚Ñï</span><span class=\"o\">)</span>\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span>\n<span class=\"bp\">_</span>\n</code></pre></div>\n\n\n<p>Clicking on \"generate a skeleton for the structure under construction\" gives me an error \"unknown hole command.\"</p>",
        "id": 201199635,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592427489
    },
    {
        "content": "<p>Also, I can't see any error without unfolding the All messages part, and there are very distracting oscillations like in <a href=\"/user_uploads/3121/2G4IBjxf6X__vb5atcPwydR9/Peek-18-06-2020-00-43.gif\">Peek-18-06-2020-00-43.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/2G4IBjxf6X__vb5atcPwydR9/Peek-18-06-2020-00-43.gif\" title=\"Peek-18-06-2020-00-43.gif\"><img src=\"/user_uploads/3121/2G4IBjxf6X__vb5atcPwydR9/Peek-18-06-2020-00-43.gif\"></a></div>",
        "id": 201209963,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592433884
    },
    {
        "content": "<p>Basically the Error updating: Try again is always flickering.</p>",
        "id": 201210071,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592433964
    },
    {
        "content": "<p>And of course I meant <code>x ‚àà closure t</code>, for those who try to follow the math in the above GIF.</p>",
        "id": 201210230,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592434087
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/_Sf-fpXNnlPrDmqhbS6r6elQ/lean-0.15.15.vsix\">lean-0.15.15.vsix</a></p>",
        "id": 201246367,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592473045
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110596\">Rob Lewis</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E16.2E0/near/201199635\">said</a>:</p>\n<blockquote>\n<p>But, I'm seeing bad behavior with hole commands. (Not sure this is new with the new extension.)</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interactive</span>\n<span class=\"kn\">structure</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">‚Ñï</span><span class=\"o\">)</span>\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span>\n<span class=\"bp\">_</span>\n</code></pre></div>\n\n\n<p>Clicking on \"generate a skeleton for the structure under construction\" gives me an error \"unknown hole command.\"</p>\n</blockquote>\n<p>I get this problem on the older version of vscode as well :/</p>",
        "id": 201246692,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592473234
    },
    {
        "content": "<p>Is it also there if you use <code>{!!}</code> for the hole?</p>",
        "id": 201246717,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1592473255
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E16.2E0/near/201246717\">said</a>:</p>\n<blockquote>\n<p>Is it also there if you use <code>{!!}</code> for the hole?</p>\n</blockquote>\n<p>Yep.</p>",
        "id": 201246773,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592473316
    },
    {
        "content": "<p>Ok, then it's not a regression on any dimension.</p>",
        "id": 201246855,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1592473352
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E16.2E0/near/201209963\">said</a>:</p>\n<blockquote>\n<p>Also, I can't see any error without unfolding the All messages part, and there are very distracting oscillations like in <a href=\"/user_uploads/3121/2G4IBjxf6X__vb5atcPwydR9/Peek-18-06-2020-00-43.gif\">Peek-18-06-2020-00-43.gif</a></p>\n</blockquote>\n<p>Sorry about this Patrick this should be fixed now in the version I posted above</p>",
        "id": 201246860,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1592473357
    },
    {
        "content": "<p>Oh, I know what happened with the holes.</p>",
        "id": 201247111,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1592473531
    },
    {
        "content": "<p>I mean, I've used this hole command before, so something regressed at some point.</p>",
        "id": 201247113,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592473533
    },
    {
        "content": "<p>But probably not recently.</p>",
        "id": 201247133,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592473554
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/issues/343\">lean#343</a></p>",
        "id": 201247730,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1592474032
    },
    {
        "content": "<p>7^3</p>",
        "id": 201250724,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592476176
    },
    {
        "content": "<p>Also <code>342 + 1</code>... <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 201275089,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592490392
    }
]