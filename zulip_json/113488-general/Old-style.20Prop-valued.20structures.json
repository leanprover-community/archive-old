[
    {
        "content": "<p>I want to set up some structures like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.nat.basic</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">zero_lt</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">bar</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">foo</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">even</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">%</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n\n<span class=\"k\">#print</span> <span class=\"n\">bar.to_foo</span> <span class=\"c1\">-- We see it's a `def` rather than a `lemma`</span>\n</code></pre></div>",
        "id": 302849557,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1665148626
    },
    {
        "content": "<p>The two important points are:</p>\n<ul>\n<li>Using <code>set_option old_structure_cmd true</code></li>\n<li>These are <code>Prop</code>-valued structures</li>\n</ul>",
        "id": 302849660,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1665148658
    },
    {
        "content": "<p>However (thanks to the linter) I discovered that the above code makes the projection <code>bar.to_foo</code> a <code>def</code> rather than a <code>lemma</code>.</p>",
        "id": 302849854,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1665148711
    },
    {
        "content": "<p>I'm not sure what to do about this. Does it matter?</p>",
        "id": 302850012,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1665148757
    },
    {
        "content": "<p>That's weird, but I expect no bad effects beyond linter warning and a little bit of useless code generation. The more dangerous direction would be a <code>lemma</code> that should be a <code>def</code>.</p>",
        "id": 302994724,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1665224782
    }
]