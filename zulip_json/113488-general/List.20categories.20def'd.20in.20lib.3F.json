[
    {
        "content": "<p>For my app, I would like to list common categories like <code>Set</code>, etc. using Lean.   Is there a simple script that can loop through a list of imports and do that?  Find all definitions of type category (or something) within a namespace.</p>",
        "id": 174391717,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1567018890
    },
    {
        "content": "<p>If not that, then at least some of the commonly used categories</p>",
        "id": 174391779,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1567018922
    },
    {
        "content": "<p>I don't know any such script so you might have to write one that generates a Lean file that imports all the category theory modules and list the instances of <code>category</code></p>",
        "id": 174392304,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1567019348
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span>  that is a brilliant idea.  I will do that right now in order to learn some more Lean coding.</p>",
        "id": 174392933,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1567019772
    },
    {
        "content": "<p>Is there a way to find out what all libs have category theory stuff in them or is that another scripting question (scriping in python)?</p>",
        "id": 174392994,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1567019830
    },
    {
        "content": "<p>I believe <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> did something similar recently for his sanity check tool. His solution was to simply generate a file that imports everything in mathlib. That might be good enough for you as well</p>",
        "id": 174393043,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1567019882
    },
    {
        "content": "<p>I will do that right now.  I'll learn more about importing from mathlib and the <code>list</code> feature</p>",
        "id": 174393317,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1567020081
    },
    {
        "content": "<p>Isn't Floris's script now in the <code>scripts/</code> subfolder?</p>",
        "id": 174393399,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1567020129
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  I didn't see anything with sanity check in it ;)</p>",
        "id": 174393660,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1567020359
    },
    {
        "content": "<p>Have a look at:</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib/commit/2e76f36444942e98d2fa59bbbbe03ed739bd9e68\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/commit/2e76f36444942e98d2fa59bbbbe03ed739bd9e68\">https://github.com/leanprover-community/mathlib/commit/2e76f36444942e98d2fa59bbbbe03ed739bd9e68</a></p>",
        "id": 174393986,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1567020570
    },
    {
        "content": "<p>This is where it is introduced. But the scripts that imports everything is <code>scripts/mk_all.sh</code></p>",
        "id": 174394099,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1567020652
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span>  thx.  I will bookmark this.</p>",
        "id": 174394134,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1567020687
    },
    {
        "content": "<p>One more thing about this.   Should include <a href=\"http://mk_all.sh\" target=\"_blank\" title=\"http://mk_all.sh\">mk_all.sh</a> into bananacats or just simply have a Lean template .txt file that lists the output as I have just generated it using <code>sh mk_all.sh</code>?</p>",
        "id": 174395567,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1567021790
    },
    {
        "content": "<p>Does <code>sh</code> come with every install of VSCode by default?</p>",
        "id": 174395680,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1567021841
    },
    {
        "content": "<p>Surely I can just use the .sh file one way or another, so that's my aim.</p>",
        "id": 174396203,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1567022347
    },
    {
        "content": "<p>I recommend you have your program call <code>mk_all.sh</code> when it needs information because the <code>all.lean</code> file will be obsolete fast</p>",
        "id": 174397712,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1567023634
    },
    {
        "content": "<p>Otoh, for now you could just hardcode the 5 examples that we have: <code>Type</code>, <code>Top</code>, <code>CommRing</code>...</p>",
        "id": 174397938,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1567023830
    },
    {
        "content": "<p>Or add some more. :-)</p>",
        "id": 174410254,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1567035015
    }
]