[
    {
        "content": "<p>If I have some variables in my scope:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span>\n</code></pre></div>\n\n<p>and I then much further down the file I declare a lemma with a new variable</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">nat</span> <span class=\"bp\">→</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n<p>how can I tell lean to make the signature of foo be <code>(f : nat → nat) (a : nat) : f a = 0</code> instead of <code>(a : nat) (f : nat → nat) : f a = 0</code>, without having to redeclare <code>a</code> locally (and all of its dependent type classes)?</p>",
        "id": 213397904,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1602753035
    },
    {
        "content": "<p>I think that's not possible. <br>\nI tend to use variables only/mostly for implicit argument, where the order doesn't matter too much. When needing to make a variable explicit, I like to redeclare them locally (this means it is also easy to see which arguments are explicit, just by looking at the source file.<br>\nIt seems you have a bunch of typeclasses depending on an explicit variable, which makes this approach not ideal...</p>",
        "id": 213475005,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1602789672
    }
]