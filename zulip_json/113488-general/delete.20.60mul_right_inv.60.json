[
    {
        "content": "<p>There's a function called <code>mul_right_inv</code> in the root namespace, defined in core. I am writing a teaching file where I develop the basics of group theory from scratch, so I have my own definition of <code>group</code> -- a class, in a namespace <code>mygroup</code>. If I make the instance <code>mygroup.group G -&gt; group G</code> then this causes mayhem because I am trying to get my users to prove things like <code>theorem mygroup.group.mul_right_inv (a : G) : a * a⁻¹ = 1</code> so they can use it later, but if our home-rolled groups are known to be Lean groups then all these theorems are automatically available so the user can apply them in the wrong order to make the API.</p>\n<p>My current crappy fix is not to make the instance, so <code>mul_right_inv</code> doesn't actually apply for my groups, but then when the user wants to rewrite it they have to put something like <code>rw group.mul_right_inv</code> (they're always in the <code>mygroup</code> namespace). I can get Lean to complain about an ambiguity in <code>mul_right_inv</code> but I would rather just locally make that function private in my repo so that the user can't possibly be confused about it, because I know it is never what they want to use. Is this possible?</p>",
        "id": 187075194,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1580470170
    },
    {
        "content": "<p>If you declare that name inside <code>mygroup</code> (<code>abbrev mul_right_inv := @group.mul_right_inv</code>), it will shadow the root declaration instead of overloading it</p>",
        "id": 187075416,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1580470409
    },
    {
        "content": "<p>Huh, if you don't make the instance, then <code>rw group.mul_right_inv</code> won't work right?</p>",
        "id": 187075606,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580470652
    },
    {
        "content": "<p>I'm confused about what your problem is.</p>",
        "id": 187075615,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580470664
    },
    {
        "content": "<p>That <code>group</code> is <code>mygroup.group</code>, I assume</p>",
        "id": 187076056,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1580471083
    },
    {
        "content": "<p>Aha. That makes sense</p>",
        "id": 187076465,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580471554
    }
]