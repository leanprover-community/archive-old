[
    {
        "content": "<p>Could we have a subtype instead of an existential here, as the data is lost in the latter?</p>",
        "id": 125285727,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524108371
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 125285728,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524108373
    },
    {
        "content": "<p>the data isn't lost, you can recover it by dropping the first <code>n</code> elements of the larger list</p>",
        "id": 125285742,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524108431
    },
    {
        "content": "<p>where <code>n</code> is the length of the smaller list</p>",
        "id": 125285743,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524108443
    },
    {
        "content": "<p>right, but has this been done in mathlib?</p>",
        "id": 125285744,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524108447
    },
    {
        "content": "<p>The existential is used because I want it to be a prop</p>",
        "id": 125285745,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524108469
    },
    {
        "content": "<p>I mean, the choice function for this existential isn't in mathlib</p>",
        "id": 125285784,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524108497
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>theorem prefix_iff_eq_append (l₁ l₂ : list α) : l₁ &lt;+: l₂ ↔ l₁ ++ drop (length l₁) l₂ = l₂ :=\n⟨λ h, let ⟨r, e⟩ := h in begin\n  rwa append_inj_right ((take_append_drop (length l₁) l₂).trans e.symm) _,\n  simp [min_eq_left, length_le_of_sublist (sublist_of_prefix h)],\nend, λ e, ⟨_, e⟩⟩\n\ntheorem suffix_iff_eq_append (l₁ l₂ : list α) : l₁ &lt;:+ l₂ ↔ take (length l₂ - length l₁) l₂ ++ l₁ = l₂ :=\n⟨λ ⟨r, e⟩, begin\n  rwa append_inj_left ((take_append_drop (length l₂ - length l₁) l₂).trans e.symm) _,\n  simp [min_eq_left, nat.sub_le, e.symm],\n  apply nat.add_sub_cancel_left\nend, λ e, ⟨_, e⟩⟩\n</pre></div>",
        "id": 125286245,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524109424
    }
]