[
    {
        "content": "<p>I just discovered that this parses:</p>\n<div class=\"codehilite\"><pre><span></span>#printnat\n-- inductive nat : Type\n-- constructors:\n-- nat.zero : ℕ\n-- nat.succ : ℕ → ℕ\n</pre></div>\n\n\n<p>I guess spaces are optional?</p>",
        "id": 126782270,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1526703106
    },
    {
        "content": "<p>So what happens when one command happens to be a prefix of another one? What are all the commands? <code>#print #exit #check #eval #reduce</code></p>",
        "id": 126796448,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1526737397
    },
    {
        "content": "<p><code>#eval1+1 -- 2</code></p>",
        "id": 126796490,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1526737447
    },
    {
        "content": "<p><code>#help</code></p>",
        "id": 126796501,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1526737527
    },
    {
        "content": "<p><code>#helpoptions</code> works</p>",
        "id": 126796502,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1526737530
    },
    {
        "content": "<p>aah bingo <code>#helpcommands</code></p>",
        "id": 126796503,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1526737553
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">definition</span> <span class=\"n\">er_has_run_out_of_ink</span> <span class=\"o\">:=</span> <span class=\"mi\">4</span>\n\n<span class=\"bp\">#</span><span class=\"n\">printer_has_run_out_of_ink</span>\n</pre></div>",
        "id": 126796698,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1526737927
    },
    {
        "content": "<p>well there you go</p>",
        "id": 126796699,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1526737931
    },
    {
        "content": "<p>lol</p>",
        "id": 126796700,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1526737936
    },
    {
        "content": "<p>I think it's possible to define new commands, because sometimes I can import something and then magically use <code>#find</code>. If I define <code>#che</code> then maybe this breaks <code>#check</code>. Can I just define <code>#</code> and break everything?</p>",
        "id": 126797263,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1526739278
    },
    {
        "content": "<p>No, the longest match wins</p>",
        "id": 126797466,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1526739798
    }
]