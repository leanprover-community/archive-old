[
    {
        "content": "<p>Is it part of the known limitations of <code>linarith</code> that I can't do better than</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span>  <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">m</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">sub_lt</span> <span class=\"bp\">;</span>\n  <span class=\"n\">linarith</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>I would like to get rid of the first line?</p>",
        "id": 152434102,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545583086
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span></p>",
        "id": 152434103,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545583095
    },
    {
        "content": "<p>To <code>linarith</code>, <code>m - n</code> is some arbitrary constant with type <code>nat</code> that it knows no extra information about. So no, it shouldn't be expected to solve that.</p>",
        "id": 152436375,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1545587797
    }
]