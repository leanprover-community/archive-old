[
    {
        "content": "<p>Why is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/orthonormal_basis_index\">docs#orthonormal_basis_index</a> a thing? It can safely be replaced by <code>fin (finrank 𝕜 E)</code>, right?</p>",
        "id": 301385544,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1664437680
    },
    {
        "content": "<p>In fact, that would let us unify <a href=\"https://leanprover-community.github.io/mathlib_docs/find/std_orthonormal_basis\">docs#std_orthonormal_basis</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin_std_orthonormal_basis\">docs#fin_std_orthonormal_basis</a>.</p>",
        "id": 301385735,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1664437777
    },
    {
        "content": "<p>Modulo DTT issues about <code>fin n</code> and <code>fin (finrank K E)</code> not being defeq for <code>n = finrank K E</code>.</p>",
        "id": 301385930,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1664437862
    },
    {
        "content": "<p>Not quite sure what purpose that serves, because you should never need defeq on an indexing type. What you could need is its size but having it <code>fin (finrank 𝕜 E)</code> gives it anyway.</p>",
        "id": 301386465,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1664438066
    },
    {
        "content": "<p>One examply where it might matter is in induction arguments.</p>",
        "id": 301386585,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1664438127
    },
    {
        "content": "<p>But I think that in 99% of the cases, I agree with your claim that the precise defeqs of an indexing type shouldn't matter.</p>",
        "id": 301386717,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1664438180
    },
    {
        "content": "<p>Currently <code>fin_orthonormal_std_basis</code> is only used twice (in the same file as it's defined in) and in both cases it could be replaced by a <code>rw</code> +  <code>orthonormal_std_basis</code>. I'm happy to leave it as is but it is quite weird to have such a specific construction when nothing uses it.</p>",
        "id": 301386955,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1664438292
    },
    {
        "content": "<p>No, I think you can certainly unify the two.</p>",
        "id": 301387012,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1664438322
    },
    {
        "content": "<p>Watch out for the <a href=\"https://bit.ly/3AZk1Qk\">#queue</a> then <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 301387095,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1664438361
    },
    {
        "content": "<p>If someone needs a more generic <code>fin n</code>, then <code>generalize</code> or some <code>fin.congr</code> can probably make that work without too much effort.</p>",
        "id": 301387097,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1664438362
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16698\">#16698</a></p>",
        "id": 301391588,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1664440254
    }
]