[
    {
        "content": "<p>We have recently switched to github actions instead of Travis. Now, even on my fork, all branches get built. If I understand correctly, this is because the file <code>build.yml</code> got copied when I updated master.</p>\n<p>I often push work in progress to github, to save it. Now, github tries to build this work in progress, which a crazy waste of processor time. Moreover, it tries to build it both on 3.4.2 and nightlies, which is a double waste. I tried to use commit messages with <code>[ci skip]</code>, but to no avail.</p>\n<p>Do you see a way I could improve my workflow?</p>",
        "id": 186671658,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1580122944
    },
    {
        "content": "<p>If you don't want your branches to be built, you can disable github actions (for your repository) at <a href=\"https://github.com/sgouezel/mathlib/settings/actions\" target=\"_blank\" title=\"https://github.com/sgouezel/mathlib/settings/actions\">https://github.com/sgouezel/mathlib/settings/actions</a></p>",
        "id": 186674754,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580125984
    },
    {
        "content": "<p>I can't comment on the \"waste of resources\" part.  The mathlib build only takes a fraction of the time limit set by github, they clearly seem to expect this usage.  Are there any downsides to building mathlib with multiple lean versions?  Do you get inundated with emails?</p>",
        "id": 186674958,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580126164
    },
    {
        "content": "<blockquote>\n<p>Are there any downsides to building mathlib with multiple lean versions?</p>\n</blockquote>\n<p>Doesn't it harm the environment or something?</p>",
        "id": 186677013,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1580128212
    },
    {
        "content": "<p>It probably does. I don't think GitHub Actions is COâ‚‚-neutral</p>",
        "id": 186677026,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580128247
    },
    {
        "content": "<p>Yes, that's my point. Thanks <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> , I have desactivated actions on my fork.</p>",
        "id": 186677607,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1580128798
    },
    {
        "content": "<p>Also, mathlib master is currently broken (error in <code>\\archive\\cubing_a_cube.lean</code>). I guess the new building tools do not test <code>archive</code> properly...</p>",
        "id": 186677837,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1580129025
    },
    {
        "content": "<p>Ouch... that happened quickly (-;</p>",
        "id": 186677893,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580129055
    },
    {
        "content": "<p>Anyway, better discover it now instead of 3 months from now</p>",
        "id": 186677920,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580129078
    },
    {
        "content": "<p>If you go to <a href=\"https://github.com/leanprover-community/mathlib/runs/409812707\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/runs/409812707\">https://github.com/leanprover-community/mathlib/runs/409812707</a> for instance, the <code>test</code> step seems to succeed, but if you open it you will see an error.</p>",
        "id": 186678100,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1580129263
    },
    {
        "content": "<p>Also:</p>\n<div class=\"codehilite\"><pre><span></span>leanpkg build                          1h 16m 7s\n&gt; lean --make src\nRun leanpkg build | python scripts/detect_errors.py\n\nWARNING: Lean version mismatch: installed version is nightly-2020-01-12, but package requires 3.4.2\n\nconfiguring mathlib 0.1\n\nWARNING: Lean version mismatch: installed version is nightly-2020-01-12, but package requires 3.4.2\n\n&gt; lean --make src\n</pre></div>",
        "id": 186678204,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580129354
    },
    {
        "content": "<p>Re: broken archive file.  See <a href=\"https://github.com/leanprover-community/mathlib/pull/1911\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/1911\">https://github.com/leanprover-community/mathlib/pull/1911</a></p>",
        "id": 186679528,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580130549
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> Are you worried about the warnings? Right now 3.5c should be backward compatible and we want to test with both. Once we officially bump mathlib we'll drop the 3.4.2 test (and package requirement).</p>",
        "id": 186679546,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580130584
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/1912\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1912\">#1912</a> to fix the archive.</p>",
        "id": 186680929,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580131725
    },
    {
        "content": "<p>Ok, if the warnings are deliberately ignored, I'm fine with that. <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 186686554,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580135581
    },
    {
        "content": "<p>More pressing is the fact that there is some authentication issue causing pushes to mathlib-nightly to fail, so that <code>update-mathlib</code> is fetching a commit that's a few days out of date. I also had a question <a href=\"https://github.com/leanprover-community/mathlib/pull/1909\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/1909\">here</a> about why each PR commit triggers 4 github actions runs.</p>",
        "id": 186698575,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1580142571
    },
    {
        "content": "<p>We're working on the authentication thing.</p>",
        "id": 186698686,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580142611
    },
    {
        "content": "<p>I briefly looked around and didn't see an easy fix for the duplicated builds on a PR from a branch.</p>",
        "id": 186698775,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580142678
    },
    {
        "content": "<p>We could disable branch builds. But once we're storing build artifacts, we might want them.</p>",
        "id": 186698812,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580142710
    },
    {
        "content": "<p>We're failing later than ever before: <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <a href=\"https://github.com/leanprover-community/mathlib/runs/413414692\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/runs/413414692\">https://github.com/leanprover-community/mathlib/runs/413414692</a></p>",
        "id": 186814678,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580237603
    },
    {
        "content": "<p>Now we get:</p>\n<div class=\"codehilite\"><pre><span></span>++ git push mathlib HEAD:refs/heads/lean-3.4.2\nremote: Permission to leanprover-community/mathlib.git denied to leanprover-community-bot.\n</pre></div>",
        "id": 186814730,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580237627
    },
    {
        "content": "<p>As well as:</p>\n<div class=\"codehilite\"><pre><span></span>++ git push nightly HEAD:mathlib-master\nTo https://github.com/leanprover-community/mathlib-nightly.git\n ! [rejected]          HEAD -&gt; mathlib-master (non-fast-forward)\nerror: failed to push some refs to &#39;***github.com/leanprover-community/mathlib-nightly.git&#39;\nhint: Updates were rejected because a pushed branch tip is behind its remote\nhint: counterpart. Check out this branch and integrate the remote changes\nhint: (e.g. &#39;git pull ...&#39;) before pushing again.\nhint: See the &#39;Note about fast-forwards&#39; in &#39;git push --help&#39; for details.\n</pre></div>",
        "id": 186814854,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580237688
    },
    {
        "content": "<p>And:</p>\n<div class=\"codehilite\"><pre><span></span>++ git push nightly tag nightly-2020-01-28\nTo https://github.com/leanprover-community/mathlib-nightly.git\n ! [remote rejected]   nightly-2020-01-28 -&gt; nightly-2020-01-28 (shallow update not allowed)\n</pre></div>",
        "id": 186814912,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580237721
    },
    {
        "content": "<p>The 3.4.2 failure is because of a branch protection rule, I just added leanprover-community-bot to the access list.</p>",
        "id": 186815628,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580238035
    },
    {
        "content": "<p>Absolutely no idea about the others. I guess we need to add a <code>git log</code> to see what it's trying to push?</p>",
        "id": 186815775,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580238108
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/1919\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/1919\">https://github.com/leanprover-community/mathlib/pull/1919</a> &lt;-- this should fix the rest</p>",
        "id": 186815778,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580238108
    },
    {
        "content": "<p>That fixes the \"branch tip is behind its remote\" error?</p>",
        "id": 186815911,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580238162
    },
    {
        "content": "<p>Okay, yeah, I guess it sounds plausible.</p>",
        "id": 186816005,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580238209
    },
    {
        "content": "<p>I'm not sure either.</p>",
        "id": 186816036,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580238227
    },
    {
        "content": "<p>Well, fingers crossed once again.</p>",
        "id": 186816262,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580238341
    },
    {
        "content": "<p>Damn, almost there. Can anybody please delete the <code>nightly-2020-01-28</code> tag in the nightlies repo (ideally within 60 minutes)?  The script managed to create the tag but didn't upload the tarballs.  <span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span></p>",
        "id": 186825849,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580243755
    },
    {
        "content": "<p>Done.</p>",
        "id": 186826120,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580243883
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 186826152,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580243907
    },
    {
        "content": "<p>It looks like there's still some kind of branch protection problem though?</p>",
        "id": 186826157,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580243911
    },
    {
        "content": "<p>I've already fixed it.</p>",
        "id": 186826201,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580243940
    },
    {
        "content": "<p>Ah, cool.</p>",
        "id": 186826227,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580243959
    },
    {
        "content": "<p>Oops, forgot to click \"save changes\".  Thanks for making me look at the settings page again.</p>",
        "id": 186826338,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1580244007
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 186832675,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580247992
    },
    {
        "content": "<p>Thanks Gabriel!</p>",
        "id": 186832694,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580248007
    },
    {
        "content": "<p>What's the purpose of the <code>install olean-rs</code> state of the build script? I don't see where it's being used.</p>",
        "id": 186984745,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580390285
    },
    {
        "content": "<p>I guess it's related to <a href=\"https://github.com/leanprover-community/mathlib/issues/687\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/687\">#687</a>. It was present in the Travis script but doesn't seem to be used there either.</p>",
        "id": 186988190,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580392731
    },
    {
        "content": "<p>There was a time where it was used to check mathlib but the error messages irritated people more than it helped them so it got disabled.</p>",
        "id": 187007276,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1580403825
    },
    {
        "content": "<p>Maybe turn it on again to see if it is broken?</p>",
        "id": 187018948,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1580410901
    },
    {
        "content": "<p>I'll run it locally to see what it says. Probably better to remove it completely from CI for now.</p>",
        "id": 187027211,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580416110
    },
    {
        "content": "<p>Should we remove the 3.5c nightly build from CI? I think this is asking for trouble if/when breaking changes make it into 3.5c. We should be following a release schedule there and updating mathlib to be compatible with each release.</p>",
        "id": 187902766,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1581419674
    },
    {
        "content": "<p><a href=\"https://developer.github.com/v3/actions/artifacts/\" target=\"_blank\" title=\"https://developer.github.com/v3/actions/artifacts/\">There's now an API for downloading GitHub Actions Artifacts</a>. I think it should be possible now to use this to make <code>cache-olean --fetch</code> work with PR branches. Does anyone (else) want to take a shot at it?</p>",
        "id": 188446037,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1582028682
    },
    {
        "content": "<p>Oh, wow, that happened a lot sooner than I expected.</p>",
        "id": 188446642,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582029316
    },
    {
        "content": "<p>I was planning to look into external hosting for olean caches in the next few weeks. But if this works it could be easier.</p>",
        "id": 188446676,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582029361
    },
    {
        "content": "<p>Not sure how much trouble the API rate limiting will cause.</p>",
        "id": 188446743,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582029402
    },
    {
        "content": "<p>Can't we use GitHub authentication to have a higher rate?</p>",
        "id": 188446777,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1582029446
    },
    {
        "content": "<p>If you want to try it out, feel free, I don't think I'll have time this week.</p>",
        "id": 188446782,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582029451
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/github.20actions/near/188446777\" title=\"#narrow/stream/113488-general/topic/github.20actions/near/188446777\">said</a>:</p>\n<blockquote>\n<p>Can't we use GitHub authentication to have a higher rate?</p>\n</blockquote>\n<p>Maybe, no idea.</p>",
        "id": 188446792,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582029463
    },
    {
        "content": "<p>Yeah, please go for it.</p>",
        "id": 188446800,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1582029470
    },
    {
        "content": "<p>I'll try to find time for the bundle thing, so I'll leave cache-olean to Bryan. Note that any work on this should probably start with fixing the huge UX bug in cache-olean and update-mathlib that we talk to GitHub before trying to find a local archive.</p>",
        "id": 188447049,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1582029649
    },
    {
        "content": "<p>It looks like Github authentication is required to use any of the Github actions API endpoints, so <code>cache-olean</code> users who want to download artifacts will have to supply a <a href=\"https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line\" target=\"_blank\" title=\"https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line\">personal access token</a> somehow.</p>",
        "id": 188448574,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1582031051
    },
    {
        "content": "<p>What about trying to do what elan does to avoid using this API?</p>",
        "id": 188448957,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1582031426
    },
    {
        "content": "<p>In the case of mathlib nightlies we can even directly use the url which is predictable</p>",
        "id": 188448988,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1582031461
    },
    {
        "content": "<p>As far as I can tell the github artifact URLs for each PR are not really predictable.</p>",
        "id": 188449333,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1582031833
    },
    {
        "content": "<p>The alternative would be to upload all generated olean files to some server that we control. I believe this was the original plan when it was still unclear whether / when an official github artifact API would become available.</p>",
        "id": 188449526,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1582031999
    },
    {
        "content": "<p>I guess cache-olean and update-mathlib could ask the user to give a token during installation? It could be optional, and if there's no token they could default to the current behavior.</p>",
        "id": 188450390,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582032731
    },
    {
        "content": "<p>It would probably be asking for trouble to generate a default PAT ourselves, right?</p>",
        "id": 188450435,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582032767
    },
    {
        "content": "<p>What is a PAT?</p>",
        "id": 188450564,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1582032897
    },
    {
        "content": "<p>An acronym I made up because I didn't want to type personal access token.</p>",
        "id": 188450709,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582033035
    },
    {
        "content": "<p>This all sounds a bit silly. It may be faster to work on other hosting solutions.</p>",
        "id": 188450833,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1582033085
    },
    {
        "content": "<p>Looks like a reference to Curry-Howard (Proof As Terms, Propositions As Types).</p>",
        "id": 188497840,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1582064787
    }
]