[
    {
        "content": "<p>I have this proof, and for the second line, library_search suggested <code>exact singleton_injective,</code> and it closed off the whole proof, and I looked at the definition, and wasn't able to understand why</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">cantor_theorem</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">#</span> <span class=\"n\">α</span> <span class=\"bp\">≤</span> <span class=\"bp\">#</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">mk_le_of_injective</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">singleton_injective</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 281097731,
        "sender_full_name": "Joseph O",
        "timestamp": 1651624622
    },
    {
        "content": "<p>It seems pretty straightforward. Perhaps you could try describing (in English) the type signatures of <code>mk_le_of_injective</code> and <code>singleton_injective</code>, and see if by the time you've done that it makes sense?</p>",
        "id": 281097992,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651624877
    },
    {
        "content": "<p>Have you looked at the goal after the <code>apply</code> statement?</p>",
        "id": 281098001,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651624888
    },
    {
        "content": "<p>Also, please try to post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> (that is a clickable link). You're much more likely to get helpful answers if others can copy and paste your code block into a new file and have it work immediately.</p>",
        "id": 281098054,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651624932
    },
    {
        "content": "<p>Didn't you already ask this <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20set.20questions/near/280702077\">here</a>?</p>",
        "id": 281098055,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651624933
    },
    {
        "content": "<p>(Here you are missing an import statement, and open_locale, and two opens.)</p>",
        "id": 281098059,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651624943
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/How.20does.20this.20proof.20work.3F/near/281098055\">said</a>:</p>\n<blockquote>\n<p>Didn't you already ask this <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20set.20questions/near/280702077\">here</a>?</p>\n</blockquote>\n<p>No?</p>",
        "id": 281098214,
        "sender_full_name": "Joseph O",
        "timestamp": 1651625069
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/How.20does.20this.20proof.20work.3F/near/281097992\">said</a>:</p>\n<blockquote>\n<p>It seems pretty straightforward. Perhaps you could try describing (in English) the type signatures of <code>mk_le_of_injective</code> and <code>singleton_injective</code>, and see if by the time you've done that it makes sense?</p>\n</blockquote>\n<p>wait is <code>single_injective</code> a singleton map?</p>",
        "id": 281098228,
        "sender_full_name": "Joseph O",
        "timestamp": 1651625084
    },
    {
        "content": "<p>Is it describing this? <br>\nThere exists an injection from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">P</mi><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{P}S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.08222em;\">P</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>, given by the singleton map.</p>",
        "id": 281098276,
        "sender_full_name": "Joseph O",
        "timestamp": 1651625152
    },
    {
        "content": "<p>Why don't you look at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.singleton_injective\">docs#set.singleton_injective</a> to find out?</p>",
        "id": 281098430,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651625298
    },
    {
        "content": "<p>And if you don't understand the statement, then click on the pieces of it (recursively) until you do</p>",
        "id": 281098448,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651625330
    },
    {
        "content": "<p>Maybe post here your attempts at translating the type signature of <code>singleton_injective</code> into English (=informal maths)...</p>",
        "id": 281098465,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651625353
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/How.20does.20this.20proof.20work.3F/near/281098430\">said</a>:</p>\n<blockquote>\n<p>Why don't you look at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.singleton_injective\">docs#set.singleton_injective</a> to find out?</p>\n</blockquote>\n<p>Yeah and it seems exactly like that statement.</p>",
        "id": 281098473,
        "sender_full_name": "Joseph O",
        "timestamp": 1651625362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/How.20does.20this.20proof.20work.3F/near/281098465\">said</a>:</p>\n<blockquote>\n<p>Maybe post here your attempts at translating the type signature of <code>singleton_injective</code> into English (=informal maths)...</p>\n</blockquote>\n<p><code>singleton_injective</code> says the function from a an element of a set <code>a</code> to a subset is injective. Or, in other words, there exists an injective function from a set to its powerset</p>",
        "id": 281098567,
        "sender_full_name": "Joseph O",
        "timestamp": 1651625426
    },
    {
        "content": "<p>No</p>",
        "id": 281098576,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651625438
    },
    {
        "content": "<p>Or at least, what do you mean by \"the function\".</p>",
        "id": 281098586,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651625457
    },
    {
        "content": "<p>It's certainly not an existential statement.</p>",
        "id": 281098592,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651625463
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/How.20does.20this.20proof.20work.3F/near/281098586\">said</a>:</p>\n<blockquote>\n<p>Or at least, what do you mean by \"the function\".</p>\n</blockquote>\n<p>Let me try again: the singleton map from a set and its poweset is injective</p>",
        "id": 281098911,
        "sender_full_name": "Joseph O",
        "timestamp": 1651625775
    }
]