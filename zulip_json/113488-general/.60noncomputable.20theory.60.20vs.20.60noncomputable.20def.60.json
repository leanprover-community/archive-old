[
    {
        "content": "<p>Do we have a style guide whether to prefer <code>noncomputable theory</code> or <code>noncomputable def</code>?  Mathlib seems somewhat split on this question: 465 files use <code>noncomputable theory</code>, and 263 use <code>noncomputable def</code>.  As you probably know, Lean 4 doesn't have <code>noncomputable theory</code> yet, so I'm wondering if it's important.</p>",
        "id": 264734753,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1639414172
    },
    {
        "content": "<p>Maybe use <code>noncomputable theory</code> when several noncomputable defs will follow? But I'm not sure about the scope <code>noncomputable theory</code>. Is it effective within a section?</p>",
        "id": 264738834,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1639415749
    },
    {
        "content": "<p>There's some pedagogical value to <code>noncomputable theory</code> outside of mathlib. If you're doing something where computability doesn't matter and don't want to explain it to your audience, you can put one line at the top of your file and then nobody gets distracted by the weird long word before every <code>def</code>.</p>",
        "id": 264739550,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1639416052
    },
    {
        "content": "<p>That was the plan. When Leo first implemented \"noncomputable def\" years ago, I told him that mathematicians would have a fit if they had to write \"noncomputable\" every time they wrote a definition. I was looking out for you guys.</p>",
        "id": 264759769,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1639424815
    }
]