[
    {
        "content": "<p>I guess most people on this zulip will be interested in reading this: <a href=\"https://gowers.wordpress.com/2022/04/28/announcing-an-automatic-theorem-proving-project/\">https://gowers.wordpress.com/2022/04/28/announcing-an-automatic-theorem-proving-project/</a></p>",
        "id": 280480079,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651146214
    },
    {
        "content": "<p>\" That last formalization [LTE] was carried out in Lean by the exciting group that is led by Kevin Buzzard. \" <span aria-label=\"unamused\" class=\"emoji emoji-1f612\" role=\"img\" title=\"unamused\">:unamused:</span>  You should hire a social media manager</p>",
        "id": 280480752,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1651146605
    },
    {
        "content": "<p>Clearly Kevin doesn't need one <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 280481220,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1651146870
    },
    {
        "content": "<p>The social media manager in me thinks livestreaming the last few hours of the project (working on the last few sorries, that is) would be very trendy <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> Andy Kelley did livestreams for the Zig self-hosting project where he'd just fix bugs for hours at a time and they were surprisingly entertaining.</p>",
        "id": 280481306,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1651146920
    },
    {
        "content": "<p>I took a quick look at their texts trying to find cues about the tooling they're planning to use and I couldn't find any <span aria-label=\"surprise\" class=\"emoji emoji-1f62e\" role=\"img\" title=\"surprise\">:surprise:</span></p>",
        "id": 280481752,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1651147162
    },
    {
        "content": "<p>Finally! Bhavik told me three months ago that Tim would announce it two weeks later.</p>",
        "id": 280490864,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651151469
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/113488-general/topic/Gowers.20ATP.20Project/near/280481306\">said</a>:</p>\n<blockquote>\n<p>The social media manager in me thinks livestreaming the last few hours of the project (working on the last few sorries, that is) would be very trendy</p>\n</blockquote>\n<p>There we go, it's a revenue stream for mathlib to fund more build bots! We just need to set up a Twitch stream and get people to host it every few days! <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 280509630,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1651159082
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/113488-general/topic/Gowers.20ATP.20Project/near/280480752\">said</a>:</p>\n<blockquote>\n<p>\" That last formalization [LTE] was carried out in Lean by the exciting group that is led by Kevin Buzzard. \" <span aria-label=\"unamused\" class=\"emoji emoji-1f612\" role=\"img\" title=\"unamused\">:unamused:</span>  You should hire a social media manager</p>\n</blockquote>\n<p>I think this isn't funny at all.</p>",
        "id": 280512699,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1651160327
    },
    {
        "content": "<p>I didn't want to say it is funny, and I think it is a real problem. Let me stress that I know that Kevin never claimed to be the project's leader, it isn't his fault by any means.</p>",
        "id": 280516523,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1651161834
    },
    {
        "content": "<p>Actually was answering the reactions to your message, not your message.</p>",
        "id": 280523920,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1651164914
    },
    {
        "content": "<p>Just to be clear, since I am one of those reactions, I'm not laughing at the lack of credit where credit is due to Johan. I completely agree that's a serious issue, and one that has already been addressed in the comments on Tim's post (and now in the post itself).</p>\n<p>I'm laughing because, no matter how much Kevin may emphasize that he is not somehow the leader of the Lean community, that message never seems to register with people outside the community. Somehow people still think \"any Lean project whatsoever = that thing Kevin is leading.\" I'm laughing at the apparent futility of trying to communicate this idea. (And obviously, Kevin <em>has</em> led and participated in some important Lean projects as well, which I guess adds fuel to this particular fire.)</p>",
        "id": 280525214,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1651165475
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 280527074,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1651166283
    },
    {
        "content": "<p>It was corrected in the text to something that's still not accurate:</p>\n<blockquote>\n<p>That last formalization was carried out in Lean by a team led by Johan Commelin, which is part of the more general and exciting Lean group spearheaded by Kevin Buzzard.</p>\n</blockquote>",
        "id": 280543560,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1651173867
    },
    {
        "content": "<p>Maybe it should read \"lean group that everyone keeps mistaking Kevin Buzzard for leading\"</p>",
        "id": 280544759,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651174524
    },
    {
        "content": "<p>Maybe it's better to be explicit and tell them how the community would like it to be said. I sense an urge from the author to bring up Kevin's name there somehow</p>",
        "id": 280545519,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1651174946
    },
    {
        "content": "<p>Hello. I absolutely agree with Patrick that this is not good. I really don't know what to do about it.</p>",
        "id": 280559368,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651182022
    },
    {
        "content": "<p>Perhaps the thing to do is for you to comment directly on Tim's post. That should send him the message, and then anyone else who reads your comment may also get the idea?</p>",
        "id": 280559760,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1651182296
    },
    {
        "content": "<p>Also it may be worth setting a clear separation between the Lean team and the mathlib team, thus making sure Leo gets the credit he deserves (I recall Quanta mentioned him as « a computer scientist at MC Research »)</p>",
        "id": 280560027,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1651182454
    },
    {
        "content": "<p>Towards a concrete suggestion for Tim that's brief but close to the original text, I guess maybe this might do the trick?</p>\n<blockquote>\n<p>That last formalization was carried out in Lean by a team led by Johan Commelin and Patrick Massot; and you may also have heard of Lean in the context of Kevin Buzzard's exciting <a href=\"https://www.ma.imperial.ac.uk/~buzzard/xena/\">Xena project</a> to popularise formalization among undergraduates.</p>\n</blockquote>\n<p>(Sorry if I've misattributed anything here - I follow what's going on, but not assiduously.)</p>",
        "id": 280563110,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1651184376
    },
    {
        "content": "<p>(While I am perpetually in awe at the speed and correctness with which Leo and friends manage to pump out a truly innovative language, that aspect doesn't really seem to fit in the context of the rest of Tim's paragraph.)</p>",
        "id": 280563784,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1651184783
    },
    {
        "content": "<p>Yeah in that situation they’re really talking about the community, I was thinking about other cases</p>",
        "id": 280565379,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1651185908
    },
    {
        "content": "<p>maybe we also want to add some details to <a href=\"https://leanprover-community.github.io/meet.html\">https://leanprover-community.github.io/meet.html</a></p>",
        "id": 280566294,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1651186663
    },
    {
        "content": "<p>Just for the record: if we want to attach two names to the Lean side of LTE, that would be me and <span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span>.</p>",
        "id": 280580984,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651201330
    },
    {
        "content": "<p>Just for more record: Kevin posted a comment on Tim's blog: <a href=\"https://gowers.wordpress.com/2022/04/28/announcing-an-automatic-theorem-proving-project/#comment-476405\">https://gowers.wordpress.com/2022/04/28/announcing-an-automatic-theorem-proving-project/#comment-476405</a></p>",
        "id": 280581016,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651201414
    },
    {
        "content": "<p>I agree with Johan's assessment of the main drivers behind LTE. </p>\n<p>Patrick is right to call this sort of thing out and as some of us know, it's not the first time that this sort of thing has happened. I'm very happy to try and correct errors which appear online.</p>",
        "id": 280590426,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651212795
    },
    {
        "content": "<p>Re the separation of lean and mathlib: this is something else which the \"general math public\" also do not get for the most part. In fact in the past things were even worse: when I moved into this area I started a blog called the Xena Project which is a slightly nebulous concept driven by the idea that we should be getting young mathematicians to use theorem provers (something I still believe very deeply). By about 2019 it seemed that most casual observers in the maths community couldn't tell the difference between Xena, Lean and mathlib and it was at around this point that Patrick told me that more of an effort was needed on my part to start distinguishing between them. Apparently the current state of play is that now people in the maths community can't tell the difference between Kevin Buzzard, Lean and mathlib which is in some sense even worse. Perhaps it's time for some kind of Xena blog post attempting to put this thing to bed once and for all.</p>",
        "id": 280591294,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651213709
    },
    {
        "content": "<p>Everything concerning the Lean=Kevin or the LTE=Kevin problems has been perfectly addressed and I have nothing to add, I just want to say a word about the <code>mathlib</code>=Lean issue. I think our community has some true responsibility here, not only \"the press\": going <a href=\"https://leanprover-community.github.io/index.html\">here</a> I am on the webpage of the \"Lean Community\"; and the title is \"Lean and its Mathematical LIbrary\", already presenting them as a whole. Moreover, clicking on <code>GitHub</code> on the left panel, the link redirects to the <code>mathlib</code> repository, not to the <a href=\"https://leanprover.github.io/\">one</a> containing the Lean code. Finally, further below, there is a \"Library overview\" (clearly pointing to <code>mathlib</code>) but presenting is as the <em>only</em> library that matters in <code>Lean</code>. I think that it is completely normal that nobody sees a difference between Lean and <code>mathlib</code>: I am not claiming this is right, but if we want this to change (and probably we should more honestly ask ourselves whether this is the case), something must be done from our side.</p>",
        "id": 280597317,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1651218583
    },
    {
        "content": "<p>It clouds the matter further that mathlib uses a community fork of Lean, which is now developed only by people who aren't Leo</p>",
        "id": 280597630,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651218757
    },
    {
        "content": "<p>I believe some of this change should come automatically once  Lean 4 becomes the mainly used version, we already have some regular programming going on and I'd hope it will only increase from now on so one would expect more and more non mathlib (in fact even non mathematical) Lean libraries to pop up.</p>",
        "id": 280597963,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1651219018
    },
    {
        "content": "<p><a href=\"https://drive.google.com/file/d/1-FFa6nMVg18m1zPtoAQrFalwpx2YaGK4/view\">The document</a> too needs updating.</p>",
        "id": 280616547,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651230012
    },
    {
        "content": "<p>You're right. I need to email Tim about an unrelated matter; I'll mention it.</p>",
        "id": 280624717,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651235210
    },
    {
        "content": "<p>I guess most people on this zulip will be interested in reading this: <a href=\"https://gowers.wordpress.com/2022/04/28/announcing-an-automatic-theorem-proving-project/\">https://gowers.wordpress.com/2022/04/28/announcing-an-automatic-theorem-proving-project/</a></p>",
        "id": 280650020,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651246990
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/A.20random.20discussion.20about.20Gowers's.20ATP.20Project/near/280647642\">said</a>:</p>\n<blockquote>\n<p>I'd be far more interested in hearing from the AI/ML people about how feasible Tim's project is.</p>\n</blockquote>\n<p>In reading the manifesto one thought that was constant in my mind was, <br>\nIs anyone aware of <a href=\"https://www.swi-prolog.org/pldoc/man?section=chr-intro\">CHR</a> and/or using CHR for theorem proving?</p>\n<p>.&gt; Constraint Handling Rules (CHR) is a committed-choice rule-based language embedded in Prolog. It is designed for writing constraint solvers.</p>\n<p>So the way I am thinking is that CHR would be a meta language used to construct several constraint solvers and those could be used for certain areas of math.  For getting the solvers to communicate, I only have guesses at present.</p>\n<p>As for defining cheating I was expecting to see something asking for a pedigree.</p>\n<p>Anyway, those are some thoughts I had and hopefully this will break the ice so that others might toss up their thoughts.</p>",
        "id": 280663375,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1651253125
    },
    {
        "content": "<p>FYI <br>\nI am not an expert in CHR but keep it in my toolbox for problem solving if ever there be a need.<br>\nFound this paper which might let others see why some of us like CHR.  It gives a nice run down of ways in which CHR has/is being used with references.</p>\n<p>Constraint Handling Rules - What Else? (<a href=\"https://arxiv.org/pdf/1701.02668.pdf\">pdf</a>)<br>\nThom Fruhwirth<br>\nUniversity of Ulm, Germany</p>",
        "id": 280680749,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1651262211
    },
    {
        "content": "<p>Let me make sure that <span class=\"user-mention\" data-user-id=\"230999\">@Daniel Selsam</span> saw this thread.</p>",
        "id": 280682134,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1651262940
    }
]