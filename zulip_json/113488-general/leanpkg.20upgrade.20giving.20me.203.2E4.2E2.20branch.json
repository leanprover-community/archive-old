[
    {
        "content": "<p>I use elan. In a project I have, which I want to keep up to date with mathlib head, <code>leanpkg upgrade</code> gives me the lean-3.4.2 branch of mathlib. Why is this happening? My <code>leanpkg.toml</code> contains the line <code>lean_version = \"3.4.2\"</code>. Is that the problem? If so, what should it say?</p>",
        "id": 157935869,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549729322
    },
    {
        "content": "<p>the mathlib <code>lean-3.4.2</code> branch is currently 9 days behind HEAD.</p>",
        "id": 157935900,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549729360
    },
    {
        "content": "<p>Changing <code>3.4.2</code> to <code>master</code> in my <code>leanpkg.toml</code> gives me</p>\n<div class=\"codehilite\"><pre><span></span>$ leanpkg upgrade\nerror: override toolchain &#39;master&#39; is not installed\ninfo: caused by: the toolchain file at &#39;/home/buzzard/Encfs/Computer_languages/Lean/lean-projects/M1P1-lean/leanpkg.toml&#39; specifies an uninstalled toolchain\nbuzzard@bob:~/Lean/lean-projects/M1P1-lean$\n</pre></div>",
        "id": 157935917,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549729430
    },
    {
        "content": "<p>With <code>3.4.2</code> I get</p>\n<div class=\"codehilite\"><pre><span></span>$ leanpkg upgrade\nmathlib: trying to update _target/deps/mathlib to revision 50a03f76bb89ee5cf9d9703f78e1eb2139d9b609\n&gt; git checkout --detach 50a03f76bb89ee5cf9d9703f78e1eb2139d9b609    # in directory _target/deps/mathlib\nHEAD is now at 50a03f7 chore(test): fix test directory structure\nconfiguring M1P1-lean 0.1\nmathlib: trying to update _target/deps/mathlib to revision 50a03f76bb89ee5cf9d9703f78e1eb2139d9b609\n&gt; git checkout --detach 50a03f76bb89ee5cf9d9703f78e1eb2139d9b609    # in directory _target/deps/mathlib\nHEAD is now at 50a03f7 chore(test): fix test directory structure\nbuzzard@bob:~/Lean/lean-projects/M1P1-lean$\n</pre></div>\n\n\n<p>which is precisely <a href=\"https://github.com/leanprover-community/mathlib/tree/lean-3.4.2\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/tree/lean-3.4.2\">https://github.com/leanprover-community/mathlib/tree/lean-3.4.2</a></p>",
        "id": 157936038,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549729594
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>buzzard@bob:~/.elan/toolchains$ ls\n3.3.0  3.4.2  nightly-2018-06-21  stable\n</pre></div>\n\n\n<p>Hmm....</p>",
        "id": 157936057,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549729664
    },
    {
        "content": "<p><code>lean_version = \"stable\"</code></p>\n<p>...</p>\n<div class=\"codehilite\"><pre><span></span>$ leanpkg upgrade\n\nWARNING: Lean version mismatch: installed version is 3.4.2, but package requires stable\n\nmathlib: trying to update _target/deps/mathlib to revision 50a03f76bb89ee5cf9d9703f78e1eb2139d9b609\n&gt; git checkout --detach 50a03f76bb89ee5cf9d9703f78e1eb2139d9b609    # in directory _target/deps/mathlib\nHEAD is now at 50a03f7 chore(test): fix test directory structure\nFrom https://github.com/leanprover-community/mathlib\n * [new tag]         bin-20190209-162751-484d864 -&gt; bin-20190209-162751-484d864\n\nWARNING: Lean version mismatch: installed version is 3.4.2, but package requires stable\n\nconfiguring M1P1-lean 0.1\nmathlib: trying to update _target/deps/mathlib to revision 50a03f76bb89ee5cf9d9703f78e1eb2139d9b609\n&gt; git checkout --detach 50a03f76bb89ee5cf9d9703f78e1eb2139d9b609    # in directory _target/deps/mathlib\nHEAD is now at 50a03f7 chore(test): fix test directory structure\n</pre></div>\n\n\n<p>GAARGH</p>",
        "id": 157936119,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549729738
    },
    {
        "content": "<p>I think I can push to lean-3.4.2 but I am scared I'll screw up.</p>",
        "id": 157936273,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549730030
    },
    {
        "content": "<p>If I do (within my clone of <code>leanprover-community/mathlib</code>)</p>\n<div class=\"codehilite\"><pre><span></span>$ git checkout master\n$ git pull\n$ git checkout lean-3.4.2\n$ git pull\n$ git merge master\n$ git push\n</pre></div>\n\n\n<p>will that be a good thing or will something bad happen?</p>",
        "id": 157937052,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549731214
    },
    {
        "content": "<p>There's a chance it will solve my problem, at least temporarily</p>",
        "id": 157937062,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549731236
    },
    {
        "content": "<p>It should be ok</p>",
        "id": 157938442,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1549733605
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span> ! [remote rejected] lean-3.4.2 -&gt; lean-3.4.2 (protected branch hook declined)\nerror: failed to push some refs to &#39;git@github.com:leanprover-community/mathlib.git&#39;\n</pre></div>\n\n\n<p>Rotten luck. OK so I'm out of ideas.</p>",
        "id": 157953386,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549760904
    },
    {
        "content": "<p>why are you trying to push the changes to the remote</p>",
        "id": 157953464,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549761119
    },
    {
        "content": "<p>because leanpkg upgrade is downgrading me</p>",
        "id": 157953508,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761142
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/leanpkg.20upgrade.20giving.20me.203.2E4.2E2.20branch/near/157935869\" title=\"#narrow/stream/113488-general/topic/leanpkg.20upgrade.20giving.20me.203.2E4.2E2.20branch/near/157935869\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/leanpkg.20upgrade.20giving.20me.203.2E4.2E2.20branch/near/157935869</a></p>",
        "id": 157953510,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761157
    },
    {
        "content": "<p>that's even if you move up your local branch?</p>",
        "id": 157953512,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549761181
    },
    {
        "content": "<p>I don't have a local branch in my repo with mathlib as a dependency. I just have a mathlib with a detached head.</p>",
        "id": 157953565,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761250
    },
    {
        "content": "<p>I don't want to be copying commit hashes into my leanpkg.toml manually, I just want leanpkg upgrade to do everything for me. I am in my own project with mathlib as a dependency and leanpkg upgrade drags me back to the lagging-behind 3.4.2. I just want to track HEAD</p>",
        "id": 157953587,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761324
    },
    {
        "content": "<p>Can't I track master?</p>",
        "id": 157953592,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761344
    },
    {
        "content": "<p>I recall Sebastian giving some reasons for why it shouldn't be done, and me being skeptical</p>",
        "id": 157953638,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549761371
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ more leanpkg.toml\n[package]\nname = &quot;M1P1-lean&quot;\nversion = &quot;0.1&quot;\nlean_version = &quot;3.4.2&quot;\npath = &quot;src&quot;\n\n[dependencies]\nmathlib = {git = &quot;https://github.com/leanprover-community/mathlib&quot;, rev = &quot;50a03f7\n6bb89ee5cf9d9703f78e1eb2139d9b609&quot;}\nbuzzard@bob:~/Lean/lean-projects/M1P1-lean$\n</pre></div>\n\n\n<p>Whenever I type leanpkg upgrade my toml is pulled back to this</p>",
        "id": 157953642,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761391
    },
    {
        "content": "<p>But now we have control of the repo in a better way, can we just write a hook to make 3.4.2 track master?</p>",
        "id": 157953646,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761419
    },
    {
        "content": "<p>This was what we couldn't do before, right?</p>",
        "id": 157953653,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761429
    },
    {
        "content": "<p>Does the change to leanprover-community make all this easier to handle?</p>",
        "id": 157953656,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761464
    },
    {
        "content": "<p>Do we want <code>lean-3.4.2</code> to point to the latest nightly (which I'm setting up now)?</p>",
        "id": 157953696,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1549761484
    },
    {
        "content": "<p>I vote yes</p>",
        "id": 157953700,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761494
    },
    {
        "content": "<p>Why would anyone vote no?</p>",
        "id": 157953703,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761508
    },
    {
        "content": "<p>The benefit is that tracking <code>lean-3.4.2</code> should always give you access to binary releases</p>",
        "id": 157953706,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1549761524
    },
    {
        "content": "<p>ultimately I want leanpkg upgrade to take me to master</p>",
        "id": 157953708,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761527
    },
    {
        "content": "<p>Oh I see</p>",
        "id": 157953710,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761538
    },
    {
        "content": "<p>I have no idea why not to do it but the other developers have more imagination than me</p>",
        "id": 157953753,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1549761563
    },
    {
        "content": "<p>I think I'd rather have today's commit and then spend 10 minutes compiling</p>",
        "id": 157953754,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761566
    },
    {
        "content": "<p>I vote yes for auto update</p>",
        "id": 157953755,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549761571
    },
    {
        "content": "<p>especially with the new olean releases</p>",
        "id": 157953757,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549761584
    },
    {
        "content": "<p>actually I think Id rather have yesterday's commit and not compile</p>",
        "id": 157953759,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761590
    },
    {
        "content": "<p>but I don't think I want to be 66 commits behind -- some of those commits are mine and I want them in my repo</p>",
        "id": 157953803,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761608
    },
    {
        "content": "<p>But make sure we only run this stuff on master branch</p>",
        "id": 157953805,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549761627
    },
    {
        "content": "<p>PRs and other things also trigger travis but shouldn't release oleans or move lean-3.4.2</p>",
        "id": 157953812,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549761658
    },
    {
        "content": "<p>That won't be hard</p>",
        "id": 157953828,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1549761711
    },
    {
        "content": "<p>What we're talking about here is basically the perfect solution for me. I want to keep moving my repos along with master as they are developed, so I quickly see when an update breaks things.</p>",
        "id": 157953872,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761761
    },
    {
        "content": "<p>(or even better, fixes things)</p>",
        "id": 157953882,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549761786
    },
    {
        "content": "<p>How do you get leanpkg to track <code>lean-3.4.2</code>?</p>",
        "id": 157954535,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1549762995
    },
    {
        "content": "<p>it does it by default as far as I can see</p>",
        "id": 157954539,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549763012
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>lean_version = &quot;3.4.2&quot;\n</pre></div>\n\n\n<p>in <code>leanpkg.toml</code></p>",
        "id": 157954541,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549763035
    },
    {
        "content": "<p>if I understood correctly</p>",
        "id": 157954569,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549763043
    },
    {
        "content": "<p>Cool! Do you have to call <code>leanpkg upgrade</code> or does it upgrade its packages automatically?</p>",
        "id": 157954589,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1549763068
    },
    {
        "content": "<p>When I type <code>leanpkg upgrade</code> (which I do occasionally, if I am interested in a recent commit, or if I feel like I want to check my project still compiles against mathlib head), it pulls mathlib and switches to the commit corresponding to the lean_version, as far as I can see</p>",
        "id": 157954654,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549763166
    },
    {
        "content": "<p>This is in a project with mathlib as a dependency</p>",
        "id": 157954658,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549763180
    },
    {
        "content": "<p>i.e. where I am 99% of the time</p>",
        "id": 157954659,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549763189
    },
    {
        "content": "<p>If I understand correctly, it is not recommended that there be a way to track master</p>",
        "id": 157954671,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549763254
    },
    {
        "content": "<p>but that's what I want to do.</p>",
        "id": 157954674,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549763272
    },
    {
        "content": "<p>With this new nightly system, we could in principle coordinate dependent packages so that they affix the <code>lean-3.4.2</code> only when it works with the <code>lean-3.4.2</code> version of mathlib.</p>",
        "id": 157954731,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1549763392
    },
    {
        "content": "<p>I am not clear what the solution to my problem is yet. The docs for <code>leanpkg</code> say that <code>leanpkg upgrade</code> will update all dependencies to the latest upstream version. Currently they don't because of the existence of the lean-3.4.2 tag whose behaviour seems to be undefined. What do I do as an end user if I simply want to do the very natural thing of updating my dependencies because they just got a commit I want for my project?</p>",
        "id": 157968982,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549793243
    },
    {
        "content": "<p>Obviously I can just go into <code>_target</code> and fix things up myself, but then my <code>leanpkg.toml</code> becomes an unreliable witness to the situation, and this won't work for my clients anyway.</p>",
        "id": 157970271,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549795710
    },
    {
        "content": "<p>What I do in practice is just edit the commit IDs in <code>leanpkg.toml</code> manually. Sometimes you want to do this anyways, because for example the latest commit of mathlib doesn't build, or when updating to the latest mathlib would cause a lot of breakage and you'd rather take smaller steps.</p>",
        "id": 157977627,
        "sender_full_name": "Reid Barton",
        "timestamp": 1549809636
    },
    {
        "content": "<p>I know I can do this but then when I change the toml how do people like Patrick and Johan update their clones? They have to do the same sort of thing too, right? And what about the undergraduates who don't know what git is but clone my undergraduate analysis repo?</p>",
        "id": 157980017,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549813912
    },
    {
        "content": "<p><code>leanpkg.toml</code> is included in the repository, so users who use <code>git pull</code> to get the latest version get this file. And then <code>leanpkg build</code> updates mathlib if needed</p>",
        "id": 157980067,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1549813994
    },
    {
        "content": "<p>Oh! So I just avoid using <code>upgrade</code> and my problems go away??</p>",
        "id": 157980233,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549814334
    }
]