[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</pre></div>",
        "id": 127145665,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527380871
    },
    {
        "content": "<p>I would do <code>by_cases m = 0</code> and <code>eq_of_mul_eq_mul_left</code></p>",
        "id": 127146413,
        "sender_full_name": "Nicholas Scheel",
        "timestamp": 1527382695
    },
    {
        "content": "<p>(after <code>mul_one</code>)</p>",
        "id": 127146414,
        "sender_full_name": "Nicholas Scheel",
        "timestamp": 1527382709
    },
    {
        "content": "<p>or maybe even <code>by_cases n = 1</code> and <code>eq_zero_of_mul_eq_self_right</code></p>",
        "id": 127146464,
        "sender_full_name": "Nicholas Scheel",
        "timestamp": 1527382832
    },
    {
        "content": "<p>(both of those long theorems are from integral domains <a href=\"https://github.com/leanprover/lean/blob/master/library/init/algebra/ring.lean#L290\" target=\"_blank\" title=\"https://github.com/leanprover/lean/blob/master/library/init/algebra/ring.lean#L290\">https://github.com/leanprover/lean/blob/master/library/init/algebra/ring.lean#L290</a> )</p>",
        "id": 127146473,
        "sender_full_name": "Nicholas Scheel",
        "timestamp": 1527382877
    },
    {
        "content": "<p>but they don't apply to natural numbers</p>",
        "id": 127146560,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527383052
    },
    {
        "content": "<p>oh whoops, you’re right ... rings and all</p>",
        "id": 127146567,
        "sender_full_name": "Nicholas Scheel",
        "timestamp": 1527383100
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean/blob/master/library/init/data/nat/lemmas.lean#L332\" target=\"_blank\" title=\"https://github.com/leanprover/lean/blob/master/library/init/data/nat/lemmas.lean#L332\">https://github.com/leanprover/lean/blob/master/library/init/data/nat/lemmas.lean#L332</a></p>",
        "id": 127146620,
        "sender_full_name": "Nicholas Scheel",
        "timestamp": 1527383220
    },
    {
        "content": "<p>thanks</p>",
        "id": 127146625,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527383233
    }
]