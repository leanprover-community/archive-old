[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">Y</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"c1\">--(f⁻¹&#39;)&#39;&#39; S -- doesn&#39;t work</span>\n<span class=\"c1\">-- set.image (set.preimage f) S -- works</span>\n<span class=\"c1\">-- (set.preimage f) &#39;&#39; S -- works</span>\n<span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>I can't get the <code>set.preimage</code> notation to work with this set-up, even with type ascriptions: <code>set.image ((f⁻¹') : (set Y → set X)) S</code> doesn't work for me. What am I doing wrong?</p>",
        "id": 203817322,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594721851
    },
    {
        "content": "<p>This just came up with the <a href=\"#narrow/stream/113489-new-members/topic/Haskell-like.20section.20notation/near/203769020\">conversation</a> about sections. Use <code>(⁻¹') f '' S</code></p>",
        "id": 203817429,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1594721928
    },
    {
        "content": "<p>although I personally find <code>set.preimage f '' S</code> easier to follow</p>",
        "id": 203817460,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1594721971
    },
    {
        "content": "<p>and even easier with parentheses</p>",
        "id": 203818600,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1594722962
    },
    {
        "content": "<p>I guess I'm used to application having higher precedence than binary operators <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 203818728,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1594723080
    }
]