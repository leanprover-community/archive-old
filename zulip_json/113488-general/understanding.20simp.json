[
    {
        "content": "<p>I'm baffled. I added</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">with_zero</span><span class=\"bp\">.</span><span class=\"n\">coe_one</span> <span class=\"o\">[</span><span class=\"n\">has_one</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">with_zero</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</pre></div>\n\n\n<p>to <code>algebra/group.lean</code> and suddenly there is breakage in <code>algebra/ordered_ring.lean</code> because <code>simp</code> is applying that lemma in the context of <code>with_top α</code>. What's going on?</p>",
        "id": 159435015,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551197110
    },
    {
        "content": "<p>I thought that this simp-lemma wouldn't apply because of the <code>((1 : α) : with_zero α)</code> on the right-hand-side.</p>",
        "id": 159435727,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551197671
    },
    {
        "content": "<p>Is this a bad simp-lemma, because the <code>with_zero</code> somehow gets hidden inside a <code>has_coe</code>, and then <code>with_zero</code> and <code>with_top</code> are both defined as <code>option</code>, so they turn out to be defeq, and hence the simp-lemma applies?</p>",
        "id": 159435789,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551197735
    }
]