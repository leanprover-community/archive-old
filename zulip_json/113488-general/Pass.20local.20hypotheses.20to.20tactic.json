[
    {
        "content": "<p>Is this how I make a tactic that requires a local hypothesis (represented variously by <code>p</code>, <code>e</code>, and <code>H1</code>)?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">normed_space</span>\n<span class=\"kn\">open</span> <span class=\"n\">lean</span> <span class=\"n\">lean</span><span class=\"bp\">.</span><span class=\"n\">parser</span> <span class=\"n\">tactic</span> <span class=\"n\">interactive</span> <span class=\"n\">interactive</span><span class=\"bp\">.</span><span class=\"n\">types</span> <span class=\"n\">expr</span>\n\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">unfold_eps_del_1</span> <span class=\"o\">(</span><span class=\"n\">fε</span> <span class=\"n\">fδ</span> <span class=\"n\">fx</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">p1</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"n\">texpr</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"n\">do</span> <span class=\"n\">e</span> <span class=\"err\">←</span> <span class=\"n\">i_to_expr</span> <span class=\"n\">p1</span><span class=\"o\">,</span> <span class=\"k\">let</span> <span class=\"n\">H1</span> <span class=\"o\">:=</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">get_app_fn</span> <span class=\"n\">e</span><span class=\"o\">,</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto_nhds_of_metric</span><span class=\"o\">,</span> <span class=\"n\">dist</span><span class=\"o\">],</span> <span class=\"n\">rw</span> <span class=\"n\">sub_zero</span><span class=\"o\">}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto_punctured</span><span class=\"o\">]}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto_nhds_of_metric</span><span class=\"o\">,</span> <span class=\"n\">dist</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">H1</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">sub_zero</span> <span class=\"n\">at</span> <span class=\"n\">H1</span><span class=\"o\">}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto_punctured</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">H1</span><span class=\"o\">}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">intros</span> <span class=\"n\">ε</span> <span class=\"n\">ε0</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"k\">have</span> <span class=\"n\">H11</span> <span class=\"o\">:=</span> <span class=\"n\">H1</span> <span class=\"o\">(</span><span class=\"n\">fε</span> <span class=\"n\">ε</span><span class=\"o\">)</span> <span class=\"bp\">_</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">cases</span> <span class=\"n\">H11</span> <span class=\"k\">with</span> <span class=\"n\">δ</span> <span class=\"n\">H12</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">cases</span> <span class=\"n\">H12</span> <span class=\"k\">with</span> <span class=\"n\">Hδ</span> <span class=\"n\">H13</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">existsi</span> <span class=\"o\">(</span><span class=\"n\">fδ</span> <span class=\"n\">δ</span><span class=\"o\">)],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">existsi</span> <span class=\"bp\">_</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">xd</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">intro</span> <span class=\"n\">x0</span><span class=\"o\">}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"k\">have</span> <span class=\"n\">H14</span> <span class=\"o\">:=</span> <span class=\"n\">H13</span> <span class=\"o\">(</span><span class=\"n\">fx</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">_</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"k\">have</span> <span class=\"n\">H15</span> <span class=\"o\">:=</span> <span class=\"n\">H14</span> <span class=\"bp\">_</span><span class=\"o\">}]</span>\n</pre></div>\n\n\n<p>I'm basing this on the code for <code>meta def specialize</code> in <code>library/init/meta/interactive.lean</code> but not sure how it works.</p>",
        "id": 156794252,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1548354466
    },
    {
        "content": "<p>Is this right?</p>",
        "id": 156795651,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1548355565
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">normed_space</span>\n<span class=\"kn\">open</span> <span class=\"n\">lean</span> <span class=\"n\">lean</span><span class=\"bp\">.</span><span class=\"n\">parser</span> <span class=\"n\">tactic</span> <span class=\"n\">interactive</span> <span class=\"n\">interactive</span><span class=\"bp\">.</span><span class=\"n\">types</span> <span class=\"n\">expr</span>\n\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">unfold_eps_del_1</span> <span class=\"o\">(</span><span class=\"n\">fε</span> <span class=\"n\">fδ</span> <span class=\"n\">fx</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"n\">ident</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"n\">do</span> <span class=\"n\">H1</span> <span class=\"err\">←</span> <span class=\"n\">resolve_name</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto_nhds_of_metric</span><span class=\"o\">,</span> <span class=\"n\">dist</span><span class=\"o\">],</span> <span class=\"n\">rw</span> <span class=\"n\">sub_zero</span><span class=\"o\">}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto_punctured</span><span class=\"o\">]}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto_nhds_of_metric</span><span class=\"o\">,</span> <span class=\"n\">dist</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">H1</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">sub_zero</span> <span class=\"n\">at</span> <span class=\"n\">H1</span><span class=\"o\">}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto_punctured</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">H1</span><span class=\"o\">}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">intros</span> <span class=\"n\">ε</span> <span class=\"n\">ε0</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"k\">have</span> <span class=\"n\">H11</span> <span class=\"o\">:=</span> <span class=\"n\">H1</span> <span class=\"o\">(</span><span class=\"n\">fε</span> <span class=\"n\">ε</span><span class=\"o\">)</span> <span class=\"bp\">_</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">cases</span> <span class=\"n\">H11</span> <span class=\"k\">with</span> <span class=\"n\">δ</span> <span class=\"n\">H12</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">cases</span> <span class=\"n\">H12</span> <span class=\"k\">with</span> <span class=\"n\">Hδ</span> <span class=\"n\">H13</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">existsi</span> <span class=\"o\">(</span><span class=\"n\">fδ</span> <span class=\"n\">δ</span><span class=\"o\">)],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">existsi</span> <span class=\"bp\">_</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">xd</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">intro</span> <span class=\"n\">x0</span><span class=\"o\">}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"k\">have</span> <span class=\"n\">H14</span> <span class=\"o\">:=</span> <span class=\"n\">H13</span> <span class=\"o\">(</span><span class=\"n\">fx</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">_</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"k\">have</span> <span class=\"n\">H15</span> <span class=\"o\">:=</span> <span class=\"n\">H14</span> <span class=\"bp\">_</span><span class=\"o\">}]</span>\n</pre></div>",
        "id": 156795653,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1548355567
    },
    {
        "content": "<p>It seems right, but when I try to actually use the tactic by giving it the name of a hypothesis, it fails saying <code>unknown identifier 'a'</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">has_derivative_at</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f&#39;x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">x0</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f&#39;x0</span> <span class=\"bp\">*</span> <span class=\"n\">h</span><span class=\"o\">)</span><span class=\"bp\">/</span><span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">has_derivative_at_iff_eps_del</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f&#39;x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">:</span> <span class=\"n\">has_derivative_at</span> <span class=\"n\">f</span> <span class=\"n\">x0</span> <span class=\"n\">f&#39;x0</span> <span class=\"bp\">↔</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">δ</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">abs</span> <span class=\"n\">h</span> <span class=\"bp\">&lt;</span> <span class=\"n\">δ</span> <span class=\"bp\">→</span> <span class=\"n\">abs</span> <span class=\"o\">((</span><span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">x0</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f&#39;x0</span> <span class=\"bp\">*</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span>\n  <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">has_derivative_at</span><span class=\"o\">,</span> <span class=\"n\">tendsto_nhds_of_metric</span><span class=\"o\">,</span> <span class=\"n\">dist</span><span class=\"o\">]</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">has_derivative_at_iff_eps_del&#39;</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f&#39;x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">:</span> <span class=\"n\">has_derivative_at</span> <span class=\"n\">f</span> <span class=\"n\">x0</span> <span class=\"n\">f&#39;x0</span> <span class=\"bp\">↔</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">δ</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">abs</span> <span class=\"n\">h</span> <span class=\"bp\">&lt;</span> <span class=\"n\">δ</span> <span class=\"bp\">→</span> <span class=\"n\">abs</span> <span class=\"o\">((</span><span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">x0</span><span class=\"o\">))</span><span class=\"bp\">/</span><span class=\"n\">h</span> <span class=\"bp\">-</span> <span class=\"n\">f&#39;x0</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">has_derivative_at_iff_eps_del</span> <span class=\"n\">at</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n    <span class=\"n\">unfold_eps_del_1</span> <span class=\"n\">id</span> <span class=\"n\">id</span> <span class=\"n\">id</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>And when I try this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">has_derivative_at_iff_eps_del&#39;</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f&#39;x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">:</span> <span class=\"n\">has_derivative_at</span> <span class=\"n\">f</span> <span class=\"n\">x0</span> <span class=\"n\">f&#39;x0</span> <span class=\"bp\">↔</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">δ</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">abs</span> <span class=\"n\">h</span> <span class=\"bp\">&lt;</span> <span class=\"n\">δ</span> <span class=\"bp\">→</span> <span class=\"n\">abs</span> <span class=\"o\">((</span><span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">x0</span><span class=\"o\">))</span><span class=\"bp\">/</span><span class=\"n\">h</span> <span class=\"bp\">-</span> <span class=\"n\">f&#39;x0</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">has_derivative_at_iff_eps_del</span> <span class=\"n\">at</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n    <span class=\"n\">unfold_eps_del_1</span> <span class=\"n\">id</span> <span class=\"n\">id</span> <span class=\"n\">id</span> <span class=\"s2\">&quot;a&quot;</span><span class=\"o\">,</span>\n  <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>I get <code>unknown identifier 'H1'</code>, so I must be doing something wrong.</p>",
        "id": 156795855,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1548355772
    },
    {
        "content": "<p>Did you read <a href=\"https://github.com/leanprover/mathlib/blob/master/docs/extras/tactic_writing.md\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/docs/extras/tactic_writing.md\">https://github.com/leanprover/mathlib/blob/master/docs/extras/tactic_writing.md</a>?</p>",
        "id": 156802384,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1548360775
    },
    {
        "content": "<p>I hadn't seen that -- so I guess <code>get_local</code> is the right command (as opposed to <code>resolve_name</code>)? But this doesn't work either:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">normed_space</span>\n<span class=\"kn\">open</span> <span class=\"n\">lean</span> <span class=\"n\">tactic</span> <span class=\"n\">interactive</span><span class=\"bp\">.</span><span class=\"n\">types</span> <span class=\"n\">expr</span>\n<span class=\"kn\">open</span> <span class=\"n\">interactive</span> <span class=\"o\">(</span><span class=\"n\">parse</span><span class=\"o\">)</span>\n<span class=\"kn\">open</span> <span class=\"n\">lean</span><span class=\"bp\">.</span><span class=\"n\">parser</span> <span class=\"o\">(</span><span class=\"n\">ident</span><span class=\"o\">)</span>\n\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">unfold_eps_del_1</span> <span class=\"o\">(</span><span class=\"n\">fε</span> <span class=\"n\">fδ</span> <span class=\"n\">fx</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"n\">ident</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"n\">do</span> <span class=\"n\">H1</span> <span class=\"err\">←</span> <span class=\"n\">get_local</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto_nhds_of_metric</span><span class=\"o\">,</span> <span class=\"n\">dist</span><span class=\"o\">],</span> <span class=\"n\">rw</span> <span class=\"n\">sub_zero</span><span class=\"o\">}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto_punctured</span><span class=\"o\">]}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto_nhds_of_metric</span><span class=\"o\">,</span> <span class=\"n\">dist</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">H1</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">sub_zero</span> <span class=\"n\">at</span> <span class=\"n\">H1</span><span class=\"o\">}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto_punctured</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">H1</span><span class=\"o\">}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">intros</span> <span class=\"n\">ε</span> <span class=\"n\">ε0</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"k\">have</span> <span class=\"n\">H11</span> <span class=\"o\">:=</span> <span class=\"n\">H1</span> <span class=\"o\">(</span><span class=\"n\">fε</span> <span class=\"n\">ε</span><span class=\"o\">)</span> <span class=\"bp\">_</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">cases</span> <span class=\"n\">H11</span> <span class=\"k\">with</span> <span class=\"n\">δ</span> <span class=\"n\">H12</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">cases</span> <span class=\"n\">H12</span> <span class=\"k\">with</span> <span class=\"n\">Hδ</span> <span class=\"n\">H13</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">existsi</span> <span class=\"o\">(</span><span class=\"n\">fδ</span> <span class=\"n\">δ</span><span class=\"o\">)],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">existsi</span> <span class=\"bp\">_</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">xd</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"n\">intro</span> <span class=\"n\">x0</span><span class=\"o\">}],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"k\">have</span> <span class=\"n\">H14</span> <span class=\"o\">:=</span> <span class=\"n\">H13</span> <span class=\"o\">(</span><span class=\"n\">fx</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">_</span><span class=\"o\">],</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">try</span> <span class=\"o\">{</span><span class=\"k\">have</span> <span class=\"n\">H15</span> <span class=\"o\">:=</span> <span class=\"n\">H14</span> <span class=\"bp\">_</span><span class=\"o\">}]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">has_derivative_at</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f&#39;x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">x0</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f&#39;x0</span> <span class=\"bp\">*</span> <span class=\"n\">h</span><span class=\"o\">)</span><span class=\"bp\">/</span><span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">has_derivative_at_iff_eps_del</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f&#39;x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">:</span> <span class=\"n\">has_derivative_at</span> <span class=\"n\">f</span> <span class=\"n\">x0</span> <span class=\"n\">f&#39;x0</span> <span class=\"bp\">↔</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">δ</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">abs</span> <span class=\"n\">h</span> <span class=\"bp\">&lt;</span> <span class=\"n\">δ</span> <span class=\"bp\">→</span> <span class=\"n\">abs</span> <span class=\"o\">((</span><span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">x0</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f&#39;x0</span> <span class=\"bp\">*</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span>\n  <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">has_derivative_at</span><span class=\"o\">,</span> <span class=\"n\">tendsto_nhds_of_metric</span><span class=\"o\">,</span> <span class=\"n\">dist</span><span class=\"o\">]</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">has_derivative_at_iff_eps_del&#39;</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f&#39;x0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">:</span> <span class=\"n\">has_derivative_at</span> <span class=\"n\">f</span> <span class=\"n\">x0</span> <span class=\"n\">f&#39;x0</span> <span class=\"bp\">↔</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">δ</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">abs</span> <span class=\"n\">h</span> <span class=\"bp\">&lt;</span> <span class=\"n\">δ</span> <span class=\"bp\">→</span> <span class=\"n\">abs</span> <span class=\"o\">((</span><span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">x0</span><span class=\"o\">))</span><span class=\"bp\">/</span><span class=\"n\">h</span> <span class=\"bp\">-</span> <span class=\"n\">f&#39;x0</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">has_derivative_at_iff_eps_del</span> <span class=\"n\">at</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n    <span class=\"n\">unfold_eps_del_1</span> <span class=\"n\">id</span> <span class=\"n\">id</span> <span class=\"n\">id</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 156804100,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1548362177
    },
    {
        "content": "<p>None of the expressions you have enclosed in <code> `[...] </code> refer to the <code>fε fδ fx</code> arguments to <code>unfold_eps_del_1</code>, nor to <code>p</code> or <code>H1</code>. When you write a tactic using this notation and then apply it in a proof, you can imagine that the text inside <code> `[...] </code> just gets copied literally into that point in the proof.</p>",
        "id": 156804492,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1548362484
    },
    {
        "content": "<p>This notation is useful for very small tactic scripts. But if you want to write a tactic that takes parameters, you really need to learn \"non-interactive\" tactic mode.</p>",
        "id": 156804584,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1548362531
    }
]