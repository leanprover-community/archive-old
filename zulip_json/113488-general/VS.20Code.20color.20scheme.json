[
    {
        "content": "<p>Do you have a recommendation for a good color scheme for Lean in VS Code?</p>\n<p>About a month ago, my VS Code spontaneously decided to color pairs of brackets in addition to highlighting the keywords by colors. It is a bit distracting for me since it is too much colors. What is your preferred setting?</p>",
        "id": 289951244,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1658143268
    },
    {
        "content": "<p>I'm no expert but I <em>think</em> VS Code changed the default for bracket pair colorization. If it's just that that bothers you, the setting is Preferences &gt; Settings &gt; Bracket Pair Colorization (and untick the box)</p>",
        "id": 289951540,
        "sender_full_name": "Julian Berman",
        "timestamp": 1658143479
    },
    {
        "content": "<p>I'm considering keeping the bracket pair colorization but turning off the keyword colorization. However, I would then like to change the color scheme so that all bracket pairs are noticeably different from black. Currently, the brown color doesn't do for me.</p>",
        "id": 289953183,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1658144368
    },
    {
        "content": "<p>Will anyone share what their favorite color scheme is? I have some ideas about what I might like but I don't know whether it will be good for my productivity in the long term.</p>",
        "id": 290065293,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1658217583
    },
    {
        "content": "<p>Well this is very personal, and I don't know if it actually changes productivity but I use Jellybeams from \"Jellybeams Theme\" in the extensions tab, <code>gerane.Theme-Jellybeams</code>.<br>\nI also have it set up in the settings json file to make <code>sorry</code> a very bright red with the following:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"w\">    </span><span class=\"nt\">\"editor.tokenColorCustomizations\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"textMateRules\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">                </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">\"scope\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"invalid.illegal.lean\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"nt\">\"settings\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"nt\">\"foreground\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"#FF0000\"</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 290088084,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1658232038
    },
    {
        "content": "<p>I think the best choice for productivity is \"Light+ (default light)\".  The less time you spend choosing a color, the more time you can spend on Lean! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 290088929,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1658232531
    },
    {
        "content": "<p>Personally I like Quiet Light (also because I'm colorblind).</p>",
        "id": 290088985,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1658232564
    },
    {
        "content": "<p>My default colourscheme is Solarized light, although I agree with Gabriel that productivity generally doesn't involve choosing the colour of a bike shed :)</p>",
        "id": 290089291,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1658232780
    },
    {
        "content": "<p>I use \"Dark+\", but that's just because I personally tend to find light-themes eye burning</p>",
        "id": 290090178,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1658233323
    },
    {
        "content": "<p>Thanks for your answers!</p>",
        "id": 290091265,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1658233902
    },
    {
        "content": "<p>I believe that the color scheme influences my productivity because most of the working time is spent on reading the code. And if colors hint meaningful information, I can skip over the unimportant parts faster.</p>",
        "id": 290091434,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1658233994
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113488-general/topic/VS.20Code.20color.20scheme/near/290090178\">said</a>:</p>\n<blockquote>\n<p>I use \"Dark+\", but that's just because I personally tend to find light-themes eye burning</p>\n</blockquote>\n<p>Oh. I wasn't talking about Color themes originally. I was interested in configuring the syntax highlighter.</p>",
        "id": 290091602,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1658234073
    },
    {
        "content": "<p>The syntax highlighting unfortunately doesn't have access to much semantic information in lean3; it's all heuristic, and since lean lets you define arbitrary syntax every heuristic is guaranteed to fail somewhere</p>",
        "id": 290092590,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658234538
    },
    {
        "content": "<p>Lean 4's language server has a fundamentally different design that largely avoids this issue</p>",
        "id": 290092671,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658234588
    },
    {
        "content": "<p>In fact, <span class=\"user-mention\" data-user-id=\"112857\">@Leonardo de Moura</span> found out that many color schemes more or less ignore the semantic information sent from the Lean 4 language server. So there the choice becomes more meaningful again.</p>",
        "id": 290092912,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1658234727
    },
    {
        "content": "<p>How can we check whether our theme is affected?</p>",
        "id": 290093069,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1658234810
    },
    {
        "content": "<p>I think there's a similar problem with C++ in vscode, where they ship special C++ versions of color schemes (in a separate extension) because the built-in ones don't respect that info.</p>\n<p>Edit: <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools-themes\">https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools-themes</a></p>",
        "id": 290093076,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658234815
    },
    {
        "content": "<p>Correct. The good news is that we can provide our own customization for an existing color scheme.<br>\nHere is the configuration I use:</p>\n<div class=\"codehilite\" data-code-language=\"TypeScript\"><pre><span></span><code><span class=\"w\">    </span><span class=\"s2\">\"workbench.colorTheme\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Solarized Light\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s2\">\"editor.semanticHighlighting.enabled\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s2\">\"workbench.colorCustomizations\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"s2\">\"[Solarized Light]\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"s2\">\"editor.selectionHighlightBackground\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"#e9dcc5\"</span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"s2\">\"editor.semanticTokenColorCustomizations\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"s2\">\"[Solarized Light]\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"s2\">\"rules\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"s2\">\"function\"</span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"s2\">\"#c1892f\"</span><span class=\"p\">}}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 290093245,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1658234911
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/VS.20Code.20color.20scheme/near/290092590\">said</a>:</p>\n<blockquote>\n<p>The syntax highlighting unfortunately doesn't have access to much semantic information in lean3; it's all heuristic, and since lean lets you define arbitrary syntax every heuristic is guaranteed to fail somewhere</p>\n</blockquote>\n<p>Yes but I doubt we will redefine which bracket closes which bracket. Hence this type of syntax coloring might be still useful.</p>",
        "id": 290093397,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1658234995
    },
    {
        "content": "<p>It's not too uncommon to write <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[0, 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> on paper...</p>",
        "id": 290095353,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658235890
    },
    {
        "content": "<p>True. Is it idiomatic in Lean/mathlib as well?</p>",
        "id": 290096003,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1658236202
    },
    {
        "content": "<p>No, we write out <code>Ico</code>.</p>",
        "id": 290096210,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1658236298
    },
    {
        "content": "<p>It would be <em>possible</em> to robustly define this notation using whitespace sensitivity in Lean 4, but it's probably still a very bad idea because it will definitely confuse editors</p>",
        "id": 290096350,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1658236350
    },
    {
        "content": "<p>Does <code>\"editor.semanticHighlighting.enabled\": true</code> do anything for Lean?</p>",
        "id": 290267237,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1658337506
    }
]