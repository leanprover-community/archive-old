[
    {
        "content": "<p>Did you know it is not possible (or rather, I wasn't able) to run doc-gen on windows because of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/con\">docs#con</a> and the fact that you can't create a directory named <code>con</code>?</p>",
        "id": 225962082,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1613033449
    },
    {
        "content": "<p>C'est trop con.</p>",
        "id": 225962104,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1613033476
    },
    {
        "content": "<p>I thought only French people could get the additional joke :-)</p>",
        "id": 225962153,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1613033521
    },
    {
        "content": "<p>I wanted to experiment on my computer to understand why mathjax doesn't like the latex block just before <a href=\"https://leanprover-community.github.io/mathlib_docs/find/formal_multilinear_series.radius_right_inv_pos_of_radius_pos_aux1\">docs#formal_multilinear_series.radius_right_inv_pos_of_radius_pos_aux1</a>, while it looks good in <a href=\"https://observablehq.com/@bryangingechen/github-lean-doc-preview?url=%22https%3A%2F%2Fgithub.com%2Fleanprover-community%2Fmathlib%2Fblob%2Fmaster%2Fsrc%2Fanalysis%2Fanalytic%2Finverse.lean%22#docs\">https://observablehq.com/@bryangingechen/github-lean-doc-preview?url=%22https%3A%2F%2Fgithub.com%2Fleanprover-community%2Fmathlib%2Fblob%2Fmaster%2Fsrc%2Fanalysis%2Fanalytic%2Finverse.lean%22#docs</a></p>\n<p>I wonder if it is due to the <code>\\\\&amp;</code>, which latex parses as: go to next line, and then insert the spacing character <code>&amp;</code> for the <code>align</code> block, but that the mathjax seems to parse in a different order, as: use the second backslash to escape the <code>&amp;</code>, and then be confused by the remaining first backslash. I have pushed a branch <code>mathjax</code> with this change, but I don't know if I have a way to check the resulting documentation without building it locally (and I won't PR it to mathlib if I don't know whether it fixes the issue...)</p>",
        "id": 225963885,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1613034487
    },
    {
        "content": "<p>I thought I fixed this: <a href=\"https://github.com/leanprover-community/doc-gen/blob/91815a109b73629324adad72355f9c83c510e417/print_docs.py#L482\">https://github.com/leanprover-community/doc-gen/blob/91815a109b73629324adad72355f9c83c510e417/print_docs.py#L482</a></p>",
        "id": 225964352,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613034756
    },
    {
        "content": "<p>Looks like the problem comes from doc-gen, not mathjax: the html source code is</p>\n<div class=\"codehilite\" data-code-language=\"HTML\"><pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>$$\n\\begin{align<span class=\"p\">&lt;</span><span class=\"nt\">em</span><span class=\"p\">&gt;</span>}\nQ(z) <span class=\"ni\">&amp;amp;</span> := \\sum Q_n z^n = Q_1 z + C' \\sum_{2 \\leq k \\leq n} \\sum_{i_1 + \\dotsc + i_k = n}\n  (r z^{i_1} Q_{i_1}) \\dotsm (r z^{i_k} Q_{i_k})\n\\<span class=\"ni\">&amp;amp;</span> = Q_1 z + C' \\sum_{k = 2}^\\infty (\\sum_{i_1 \\geq 1} r z^{i_1} Q_{i_1})\n  \\dotsm (\\sum_{i_k \\geq 1} r z^{i_k} Q_{i_k})\n\\<span class=\"ni\">&amp;amp;</span> = Q_1 z + C' \\sum_{k = 2}^\\infty (r Q(z))^k\n= Q_1 z + C' (r Q(z))^2 / (1 - r Q(z)).\n\\end{align<span class=\"p\">&lt;/</span><span class=\"nt\">em</span><span class=\"p\">&gt;</span>}\n$$<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n</code></pre></div>\n<p>so it is not surprising mathjax can't do anything out of it.</p>",
        "id": 225964722,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1613034967
    },
    {
        "content": "<p>Replace <code>align*</code> with <code>align</code>?</p>",
        "id": 225964893,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613035076
    },
    {
        "content": "<p>Oh right, i missed the <code>\\\\</code> issue you describe too</p>",
        "id": 225965046,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613035148
    },
    {
        "content": "<p>Yes, changing <code>align*</code> to <code>align</code> may help also. Hopefully, the <code>mathjax</code> branch should work fine, but to check this I will need to understand why your fix to <code>con</code> files doesn't work on my computer.</p>",
        "id": 225965487,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1613035402
    },
    {
        "content": "<p>I could fix the build on my machine, see <a href=\"https://github.com/leanprover-community/doc-gen/pull/109\">https://github.com/leanprover-community/doc-gen/pull/109</a>. </p>\n<p>Still, I can't get my latex block to show up as I want it to. Or rather, I can, but it means replacing <code>\\\\</code> with <code>\\\\\\\\</code> in the source so that it gets converted to <code>\\\\</code> in the html file. But this is ugly in the source file. I'd much rather adapt the docs generation, but I can't tell where the translation to html takes place (the one that changes <code>*</code> to <code>&lt;em&gt;</code> in <code>\\begin{align*}</code>, and <code>\\\\&amp;</code> to <code>\\&amp;amp;</code>) so I can' try to tweak it.</p>",
        "id": 225975025,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1613041431
    },
    {
        "content": "<p>I think this is a quirk in the markdown parser</p>",
        "id": 225976099,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613042090
    }
]