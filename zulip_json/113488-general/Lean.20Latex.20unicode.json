[
    {
        "content": "<p>Hi,  I'm trying to present some Lean code in a Latex document. In particular, I have the following code </p>\n<div class=\"codehilite\" data-code-language=\"TeX\"><pre><span></span><code><span class=\"k\">\\documentclass</span><span class=\"nb\">{</span>article<span class=\"nb\">}</span>\n\n<span class=\"k\">\\usepackage</span><span class=\"na\">[utf8x]</span><span class=\"nb\">{</span>inputenc<span class=\"nb\">}</span>\n<span class=\"k\">\\usepackage</span><span class=\"nb\">{</span>amssymb, upgreek<span class=\"nb\">}</span>\n\n<span class=\"k\">\\usepackage</span><span class=\"nb\">{</span>color<span class=\"nb\">}</span>\n<span class=\"k\">\\definecolor</span><span class=\"nb\">{</span>keywordcolor<span class=\"nb\">}{</span>rgb<span class=\"nb\">}{</span>0.7, 0.1, 0.1<span class=\"nb\">}</span>   <span class=\"c\">% red</span>\n<span class=\"k\">\\definecolor</span><span class=\"nb\">{</span>commentcolor<span class=\"nb\">}{</span>rgb<span class=\"nb\">}{</span>0.4, 0.4, 0.4<span class=\"nb\">}</span>   <span class=\"c\">% grey</span>\n<span class=\"k\">\\definecolor</span><span class=\"nb\">{</span>symbolcolor<span class=\"nb\">}{</span>rgb<span class=\"nb\">}{</span>0.0, 0.1, 0.6<span class=\"nb\">}</span>    <span class=\"c\">% blue</span>\n<span class=\"k\">\\definecolor</span><span class=\"nb\">{</span>sortcolor<span class=\"nb\">}{</span>rgb<span class=\"nb\">}{</span>0.1, 0.5, 0.1<span class=\"nb\">}</span>      <span class=\"c\">% green</span>\n<span class=\"k\">\\definecolor</span><span class=\"nb\">{</span>errorcolor<span class=\"nb\">}{</span>rgb<span class=\"nb\">}{</span>1, 0, 0<span class=\"nb\">}</span>           <span class=\"c\">% bright red</span>\n<span class=\"k\">\\definecolor</span><span class=\"nb\">{</span>stringcolor<span class=\"nb\">}{</span>rgb<span class=\"nb\">}{</span>0.5, 0.3, 0.2<span class=\"nb\">}</span>    <span class=\"c\">% brown</span>\n\n<span class=\"k\">\\usepackage</span><span class=\"nb\">{</span>listings<span class=\"nb\">}</span>\n<span class=\"k\">\\def\\lstlanguagefiles</span><span class=\"nb\">{</span>lstlean.tex<span class=\"nb\">}</span>\n<span class=\"k\">\\lstset</span><span class=\"nb\">{</span>language=lean<span class=\"nb\">}</span>\n\n<span class=\"k\">\\begin</span><span class=\"nb\">{</span>document<span class=\"nb\">}</span>\n\n<span class=\"k\">\\begin</span><span class=\"nb\">{</span>lstlisting<span class=\"nb\">}</span>\n  lemma tendsto<span class=\"nb\">_</span>uniformly<span class=\"nb\">_</span>on<span class=\"nb\">_</span>of<span class=\"nb\">_</span>ae<span class=\"nb\">_</span>tendsto' [is<span class=\"nb\">_</span>finite<span class=\"nb\">_</span>measure Œº]\n  (hf : ‚àÄ n, measurable (f n)) (hg : measurable g)\n  (hfg : ‚àÄ·µê x ‚àÇŒº, tendsto (Œª n, f n x) at<span class=\"nb\">_</span>top (ùìù (g x))) <span class=\"nb\">{</span>Œµ : ‚Ñù<span class=\"nb\">}</span> (hŒµ : 0 &lt; Œµ) :\n  ‚àÉ t, measurable<span class=\"nb\">_</span>set t ‚àß Œº t ‚â§ ennreal.of<span class=\"nb\">_</span>real Œµ ‚àß tendsto<span class=\"nb\">_</span>uniformly<span class=\"nb\">_</span>on f g at<span class=\"nb\">_</span>top t·∂ú :=\n<span class=\"k\">\\end</span><span class=\"nb\">{</span>lstlisting<span class=\"nb\">}</span>\n\n<span class=\"k\">\\end</span><span class=\"nb\">{</span>document<span class=\"nb\">}</span>\n</code></pre></div>\n<p>in the same directory as the <code>lstlean.tex</code> file from <a href=\"https://github.com/leanprover-community/lean/blob/master/extras/latex/lstlean.tex\">https://github.com/leanprover-community/lean/blob/master/extras/latex/lstlean.tex</a></p>\n<p>However, when I compile with XeLaTeX all of the unicode is gone. Is there a way to fix this? <br>\nUsing pdfLaTeX works but I would like to use some packages which is not compatible with pdfLaTeX.</p>",
        "id": 269034871,
        "sender_full_name": "Jason KY.",
        "timestamp": 1642966202
    },
    {
        "content": "<p>I can reproduce -- seems to work fine with pdflatex, \\foralls and \\Rs missing with lualatex and xelatex</p>",
        "id": 269035152,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642966598
    },
    {
        "content": "<p>If using xelatex you probably need to remove the <code>\\usepackage[utf8x]{inputenc}</code> line at least</p>",
        "id": 269035239,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1642966696
    },
    {
        "content": "<p>still compiles but still no unicode</p>",
        "id": 269035265,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642966762
    },
    {
        "content": "<p>and still compiles with pdflatex and looks fine</p>",
        "id": 269035278,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642966792
    },
    {
        "content": "<p>Yeah this seems quite tricky. For Lean 4 it seems minted is recommended to use XeLaTeX <a href=\"https://leanprover.github.io/lean4/doc/syntax_highlight_in_latex.html\">https://leanprover.github.io/lean4/doc/syntax_highlight_in_latex.html</a> but I don't know if there are corresponding instructions / python files for Lean 3</p>",
        "id": 269036275,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1642967962
    },
    {
        "content": "<p>Ah actually maybe these instructions will work then<br>\n<a href=\"https://github.com/leanprover-community/lean/blob/master/doc/syntax_highlight_in_latex.md\">https://github.com/leanprover-community/lean/blob/master/doc/syntax_highlight_in_latex.md</a></p>",
        "id": 269036551,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1642968273
    },
    {
        "content": "<p>Im able to get: <br>\n<a href=\"/user_uploads/3121/kF3XRQNPHhLHmlr3Ga7UmNSZ/image.png\">image.png</a> <br>\nwith the following: </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/kF3XRQNPHhLHmlr3Ga7UmNSZ/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/kF3XRQNPHhLHmlr3Ga7UmNSZ/image.png\"></a></div><div class=\"codehilite\" data-code-language=\"TeX\"><pre><span></span><code><span class=\"k\">\\documentclass</span><span class=\"nb\">{</span>article<span class=\"nb\">}</span>\n<span class=\"k\">\\usepackage</span><span class=\"nb\">{</span>fontspec<span class=\"nb\">}</span>\n<span class=\"c\">% switch to a monospace font supporting more Unicode characters</span>\n<span class=\"k\">\\setmonofont</span><span class=\"nb\">{</span>FreeMono<span class=\"nb\">}</span>\n<span class=\"k\">\\usepackage</span><span class=\"nb\">{</span>minted<span class=\"nb\">}</span>\n<span class=\"c\">% instruct minted to use our local theorem.py</span>\n<span class=\"k\">\\newmintinline</span><span class=\"na\">[lean]</span><span class=\"nb\">{</span>lean4.py:Lean4Lexer -x<span class=\"nb\">}{</span>bgcolor=white<span class=\"nb\">}</span>\n<span class=\"k\">\\newminted</span><span class=\"na\">[leancode]</span><span class=\"nb\">{</span>lean4.py:Lean4Lexer -x<span class=\"nb\">}{</span>fontsize=<span class=\"k\">\\footnotesize</span><span class=\"nb\">}</span>\n<span class=\"k\">\\usepackage</span><span class=\"nb\">{</span>newunicodechar<span class=\"nb\">}</span>\n<span class=\"k\">\\newfontfamily</span><span class=\"nb\">{</span><span class=\"k\">\\freeserif</span><span class=\"nb\">}{</span>DejaVu Sans<span class=\"nb\">}</span>\n<span class=\"k\">\\newunicodechar</span><span class=\"nb\">{</span>ùìù<span class=\"nb\">}{</span><span class=\"k\">\\ensuremath</span><span class=\"nb\">{</span><span class=\"k\">\\mathcal</span><span class=\"nb\">{</span>N<span class=\"nb\">}}}</span>\n<span class=\"k\">\\newunicodechar</span><span class=\"nb\">{</span>·µê<span class=\"nb\">}{</span><span class=\"k\">\\ensuremath</span><span class=\"nb\">{^</span>m<span class=\"nb\">}}</span>\n<span class=\"k\">\\newunicodechar</span><span class=\"nb\">{</span>·∂ú<span class=\"nb\">}{</span><span class=\"k\">\\ensuremath</span><span class=\"nb\">{^</span>c<span class=\"nb\">}}</span>\n\n\n<span class=\"k\">\\begin</span><span class=\"nb\">{</span>document<span class=\"nb\">}</span>\n<span class=\"c\">% some example options</span>\n<span class=\"k\">\\begin</span><span class=\"nb\">{</span>minted<span class=\"nb\">}</span>[mathescape,\n               linenos,\n               numbersep=5pt,\n               frame=lines,\n               framesep=2mm]<span class=\"nb\">{</span>Lean<span class=\"nb\">}</span>\nlemma tendsto<span class=\"nb\">_</span>uniformly<span class=\"nb\">_</span>on<span class=\"nb\">_</span>of<span class=\"nb\">_</span>ae<span class=\"nb\">_</span>tendsto' [is<span class=\"nb\">_</span>finite<span class=\"nb\">_</span>measure Œº]\n  (hf : ‚àÄ n, measurable (f n)) (hg : measurable g)\n  (hfg : ‚àÄ·µê x ‚àÇŒº, tendsto (Œª n, f n x) at<span class=\"nb\">_</span>top (ùìù (g x)))\n  <span class=\"nb\">{</span>Œµ : ‚Ñù<span class=\"nb\">}</span> (hŒµ : 0 &lt; Œµ) :\n‚àÉ t, measurable<span class=\"nb\">_</span>set t ‚àß Œº t ‚â§ ennreal.of<span class=\"nb\">_</span>real Œµ ‚àß\n  tendsto<span class=\"nb\">_</span>uniformly<span class=\"nb\">_</span>on f g at<span class=\"nb\">_</span>top t·∂ú\n<span class=\"k\">\\end</span><span class=\"nb\">{</span>minted<span class=\"nb\">}</span>\n<span class=\"k\">\\end</span><span class=\"nb\">{</span>document<span class=\"nb\">}</span>\n</code></pre></div>\n<p>and the <code>lean4.py</code> from that lean4 page</p>",
        "id": 269036565,
        "sender_full_name": "Jason KY.",
        "timestamp": 1642968287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113488-general/topic/Lean.20Latex.20unicode/near/269036551\">said</a>:</p>\n<blockquote>\n<p>Ah actually maybe these instructions will work then<br>\n<a href=\"https://github.com/leanprover-community/lean/blob/master/doc/syntax_highlight_in_latex.md\">https://github.com/leanprover-community/lean/blob/master/doc/syntax_highlight_in_latex.md</a></p>\n</blockquote>\n<p>Great! I will give it a try</p>",
        "id": 269036592,
        "sender_full_name": "Jason KY.",
        "timestamp": 1642968338
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/-pZ_5CZmh-ogc3EwrDylEtTH/image.png\">image.png</a> <br>\nIt seems that some of the unicode is not declared as with the lean 4 version. I think I will just declare manually for now. <br>\nThanks for the help!</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/-pZ_5CZmh-ogc3EwrDylEtTH/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/-pZ_5CZmh-ogc3EwrDylEtTH/image.png\"></a></div>",
        "id": 269036763,
        "sender_full_name": "Jason KY.",
        "timestamp": 1642968541
    },
    {
        "content": "<p>Yeah that looks pretty good, it looks like there is lean support in pygments version 2 by default so maybe additional files aren't needed</p>",
        "id": 269036765,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1642968542
    },
    {
        "content": "<p>Yeah, it seems to work the same way without adding <code>lean4.py</code> or <code>minted.sty</code></p>",
        "id": 269037450,
        "sender_full_name": "Jason KY.",
        "timestamp": 1642969541
    }
]