[
    {
        "content": "<p>There is tension in the import tree between <a href=\"https://tqft.net/mathlib/order/boolean_algebra\">file#order/boolean_algebra</a>, <a href=\"https://tqft.net/mathlib/order/hom/basic\">file#order/hom/basic</a> and <a href=\"https://tqft.net/mathlib/data/set/basic\">file#data/set/basic</a>, because each wants to import the next:</p>\n<ul>\n<li><a href=\"https://leanprover-community.github.io/mathlib_docs/find/compl\">docs#compl</a> is an order isomorphism to the order dual (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/order_iso.compl\">docs#order_iso.compl</a>), and this provides many lemmas. For example, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/compl_antitone\">docs#compl_antitone</a></li>\n<li>We bundle set equivalences as order isos. For example, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/order_iso.set.univ\">docs#order_iso.set.univ</a></li>\n<li><a href=\"https://leanprover-community.github.io/mathlib_docs/find/set\">docs#set</a> is a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/boolean_algebra\">docs#boolean_algebra</a></li>\n</ul>\n<p>At the moment, it works somehow, but any tweak (<a href=\"https://github.com/leanprover-community/mathlib/pull/14809\">#14809</a> or <a href=\"https://github.com/leanprover-community/mathlib/tree/heyting_algebra\">branch#heyting_algebra</a>) makes the tower of cards collapse.</p>",
        "id": 286737789,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655684992
    },
    {
        "content": "<p>/poll What should we do?</p>\n<ul>\n<li>Move the set equivalences to <code>data.set.basic</code></li>\n<li>Split a new file <code>order.hom.set</code> off <code>order.hom.basic</code> for the set equivalences</li>\n<li>Split a new file <code>data.set.order</code> off <code>data.set.basic</code> for the order properties</li>\n<li>Keep adding the lemmas derived from <code>order_iso.compl</code> to <code>order.hom.basic</code></li>\n<li>Pray for content-addressing</li>\n</ul>",
        "id": 286737925,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655685202
    },
    {
        "content": "<p>I would like to emphasize that these options are not mutually exclusive. I think 1 and 3 would make a great combo, by greatly reducing import stress <strong>and</strong> shrinking <code>data.set.basic</code> (which is one of mathlib's biggest files).</p>",
        "id": 286738016,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655685350
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"329425\">@Peter Nelson</span> because this will very soon block your matroid work (I was rewriting your branch in the style of your first PR and I hit this)</p>",
        "id": 286738070,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655685427
    },
    {
        "content": "<p>I like 1 and 3 as well. Thanks for all the thought you’ve given to this!</p>",
        "id": 286743642,
        "sender_full_name": "Peter Nelson",
        "timestamp": 1655692301
    },
    {
        "content": "<p>What does 3 even mean? I don't think lemmas about <code>⊆</code> like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.subset_union_left\">docs#set.subset_union_left</a> should go outside <code>data.set.basic</code>?</p>",
        "id": 286760538,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1655711176
    },
    {
        "content": "<p>I think we could go even further than 2, and move <code>order_iso</code> out of <code>order.hom.basic</code> to <code>order.hom.equiv</code> or something.</p>",
        "id": 286760630,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1655711267
    },
    {
        "content": "<p>(oh, but I guess that doesn't solve this particular problem)</p>",
        "id": 286760768,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1655711346
    },
    {
        "content": "<p>It would be moving the material about complements, which is what requires <code>order.boolean_algebra</code> in <code>data.set.basic</code>. But I agree that not moving the other order instances is somewhat dissatisfactory.</p>",
        "id": 286762826,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655712733
    },
    {
        "content": "<p>I am now trying to implement 2 and I can't keep thinking that it would be easier to move <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.range\">docs#set.range</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.image\">docs#set.image</a> to move to a new file <code>data.set.defs</code>.</p>",
        "id": 286853830,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655774514
    },
    {
        "content": "<p>The order files use <code>set</code> for its basic constructions, not for its order structure, but <code>data.set.basic</code> is a mix of it all.</p>",
        "id": 286853892,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655774558
    },
    {
        "content": "<p>For reference, implementing 1 or 2 means moving stuff from <a href=\"https://tqft.net/mathlib/logic/embedding\">file#logic/embedding</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/order\">docs#order</a>/rel_iso, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/order\">docs#order</a>/hom/basic to either one (or three?) new file(s) or dumping it into <a href=\"https://leanprover-community.github.io/mathlib_docs/find/data\">docs#data</a>/set/basic.</p>",
        "id": 286854047,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655774724
    },
    {
        "content": "<p>I'm definitely also happy with <code>data.set.defs</code>. I'm a bit surprised that all those files use constructions on sets, but no basic lemmas.</p>",
        "id": 286872939,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1655794566
    },
    {
        "content": "<p>I see e.g. <code>function.injective.image_injective</code> in <a href=\"https://tqft.net/mathlib/logic/embedding\">file#logic/embedding</a>. That should definitely not go in <code>data.set.defs</code>.</p>",
        "id": 286872997,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1655794627
    },
    {
        "content": "<p>If the name <code>defs</code> is putting you off, this brings me back to proposition 3.</p>",
        "id": 286879196,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655798862
    },
    {
        "content": "<p>I think it would be good to keep the <code>boolean_algebra</code> instance in <code>data.set.basic</code>. I think it would be confusing if all binary set operations are defined in <code>data.set.basic</code>, but the complement is in another file.<br>\nI think it's good to follow the example of <code>equiv</code>, which also has <a href=\"https://tqft.net/mathlib/logic/equiv/set\">file#logic/equiv/set</a> separately. So we can separate <code>embedding</code>/<code>rel_iso</code>/<code>order_hom</code> interactions with <code>set</code> to separate files (i.e. option 2). If you don't want to create 3 new files, maybe you can do with moving <code>embedding</code> stuff into <code>data.set.function</code> (if that doesn't create issues) and have a single new file <code>order.hom.set</code>.</p>",
        "id": 286905377,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1655814647
    },
    {
        "content": "<p>But what if I also move the binary set operations to the new file <code>data.set.order</code>?</p>",
        "id": 286905687,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655814806
    },
    {
        "content": "<p>Apparently it's <a href=\"https://tqft.net/mathlib/logic/equiv/set\">file#logic/equiv/set</a> now BTW</p>",
        "id": 286905853,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1655814882
    },
    {
        "content": "<p>Thanks, fixed</p>",
        "id": 286906138,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1655815023
    },
    {
        "content": "<p>But if it makes your life a lot easier, I can live with a file <code>data.set.compl</code> where you move <code>compl</code> and <code>diff</code>. I think it would make the findability of some lemmas harder (e.g. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.image_compl_eq\">docs#set.image_compl_eq</a> for a random example), so I would prefer a different solution.</p>",
        "id": 286906556,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1655815231
    }
]