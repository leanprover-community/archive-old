[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">u₁</span> <span class=\"n\">v₁</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"n\">class</span> <span class=\"n\">biproduct</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">N</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">N</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u₁</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">P</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">P</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">inl</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">P</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">inr</span> <span class=\"o\">:</span> <span class=\"n\">N</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">P</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">fst</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">snd</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">fst_inl</span> <span class=\"o\">:</span> <span class=\"n\">fst</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">inl</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">snd_inr</span> <span class=\"o\">:</span> <span class=\"n\">snd</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">inr</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">fst_inl_fst</span> <span class=\"o\">:</span> <span class=\"n\">fst</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">inl</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">fst</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">fst</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">snd_inr_snd</span> <span class=\"o\">:</span> <span class=\"n\">snd</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">inr</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">snd</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">snd</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">inl_fst_add_inr_snd</span> <span class=\"o\">:</span> <span class=\"n\">inl</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">fst</span> <span class=\"bp\">+</span> <span class=\"n\">inr</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">snd</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">N</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">N</span><span class=\"o\">]</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">biproduct_prod</span> <span class=\"o\">:</span> <span class=\"n\">biproduct</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">×</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">inl</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">,</span>\n  <span class=\"n\">inr</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">,</span>\n  <span class=\"n\">fst</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">,</span>\n  <span class=\"n\">snd</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">snd</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">,</span>\n  <span class=\"n\">fst_inl</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"n\">snd_inr</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"n\">fst_inl_fst</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"n\">snd_inr_snd</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"n\">inl_fst_add_inr_snd</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"bp\">⟨</span><span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">n</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"o\">(</span><span class=\"n\">add_zero</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">zero_add</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">biproduct_prod_swap</span> <span class=\"o\">:</span> <span class=\"n\">biproduct</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"bp\">×</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">inl</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"n\">R</span> <span class=\"n\">N</span> <span class=\"n\">M</span><span class=\"o\">,</span>\n  <span class=\"n\">inr</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">R</span> <span class=\"n\">N</span> <span class=\"n\">M</span><span class=\"o\">,</span>\n  <span class=\"n\">fst</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">snd</span> <span class=\"n\">R</span> <span class=\"n\">N</span> <span class=\"n\">M</span><span class=\"o\">,</span>\n  <span class=\"n\">snd</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"n\">R</span> <span class=\"n\">N</span> <span class=\"n\">M</span><span class=\"o\">,</span>\n  <span class=\"n\">fst_inl</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"n\">snd_inr</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"n\">fst_inl_fst</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"n\">snd_inr_snd</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"n\">inl_fst_add_inr_snd</span> <span class=\"o\">:=</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"bp\">⟨</span><span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">n</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">prod</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"o\">(</span><span class=\"n\">zero_add</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">add_zero</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u₁</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">P</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">P</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">biproduct</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">P</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v₁</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">Q</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">Q</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">rec&#39;</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">N</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span>\n<span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">g</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">snd</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">P</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">corec&#39;</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Q</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Q</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Q</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">P</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">P</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">f</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">P</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">g</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">eq_rec</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">rec&#39;</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">P</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">P</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">rec&#39;</span><span class=\"o\">,</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">comp_assoc</span><span class=\"o\">,</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">comp_assoc</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">sorry</span> <span class=\"c1\">-- missing comp_add</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">eq_corec</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Q</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">corec&#39;</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">((</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">P</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">snd</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">P</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">corec&#39;</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">comp_assoc</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">comp_assoc</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">sorry</span> <span class=\"c1\">-- missing add_comp</span>\n\n<span class=\"n\">def</span> <span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">equiv_prod</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"err\">≃ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">M</span> <span class=\"bp\">×</span> <span class=\"n\">N</span> <span class=\"o\">:=</span>\n<span class=\"n\">linear_equiv</span><span class=\"bp\">.</span><span class=\"n\">of_linear</span>\n  <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">rec&#39;</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"bp\">_</span><span class=\"o\">))</span>\n  <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">corec&#39;</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">snd</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"bp\">_</span><span class=\"o\">))</span>\n  <span class=\"n\">sorry</span>\n  <span class=\"n\">sorry</span>\n</pre></div>",
        "id": 160390410,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552177024
    },
    {
        "content": "<p>anyone wanna continue?</p>",
        "id": 160390415,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552177033
    },
    {
        "content": "<p>goal: a functor F:R-Mod=&gt;S-Mod is additive iff it preserves biproduct</p>",
        "id": 160390464,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552177118
    },
    {
        "content": "<p>There's some cool endomorphism of A + B that you get from a map from A to B, presumably.</p>",
        "id": 160390472,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1552177164
    },
    {
        "content": "<p>the \"cone\", i.e. the matrix <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><mo fence=\"true\">[</mo><mtable><mtr><mtd><mstyle displaystyle=\"false\" scriptlevel=\"0\"><mrow><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle displaystyle=\"false\" scriptlevel=\"0\"><mrow><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle displaystyle=\"false\" scriptlevel=\"0\"><mrow><mi>f</mi></mrow></mstyle></mtd><mtd><mstyle displaystyle=\"false\" scriptlevel=\"0\"><mrow><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\begin{bmatrix}1&amp;0\\\\f&amp;1\\end{bmatrix}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:1.45em;\"></span><span class=\"strut bottom\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"base\"><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">1</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.10764em;\">f</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">0</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span></span></span> right</p>",
        "id": 160390555,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552177219
    },
    {
        "content": "<p>Weibel was all for it</p>",
        "id": 160390559,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552177245
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">mk_end</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">N</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">N</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">P</span> <span class=\"o\">:=</span>\n<span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">corec&#39;</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">rec&#39;</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">biproduct</span><span class=\"bp\">.</span><span class=\"n\">rec&#39;</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">N</span> <span class=\"n\">c</span> <span class=\"n\">d</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 160390679,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552177485
    },
    {
        "content": "<blockquote>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span><span class=\"n\">fst_inl</span> <span class=\"o\">:</span> <span class=\"n\">fst</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">inl</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">snd_inr</span> <span class=\"o\">:</span> <span class=\"n\">snd</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">inr</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">fst_inl_fst</span> <span class=\"o\">:</span> <span class=\"n\">fst</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">inl</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">fst</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">fst</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">snd_inr_snd</span> <span class=\"o\">:</span> <span class=\"n\">snd</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">inr</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">snd</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">snd</span><span class=\"o\">)</span>\n</pre></div>\n\n\n</blockquote>\n<p>Don't the last two follow from the first two? I guess <code>1</code> is <code>id</code></p>",
        "id": 160390873,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1552177827
    },
    {
        "content": "<p>there is something wrong with me</p>",
        "id": 160390961,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552178015
    },
    {
        "content": "<p>you're right</p>",
        "id": 160390965,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552178041
    }
]