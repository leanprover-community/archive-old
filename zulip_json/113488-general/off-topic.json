[
    {
        "content": "<p>or you could have an off-topic topic, very meta</p>",
        "id": 123008244,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1519671135
    },
    {
        "content": "<p>Now we're flooding the topic list.</p>",
        "id": 123008251,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519671158
    },
    {
        "content": "<p>up and down is j and k, feels very vi-like</p>",
        "id": 123008401,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1519671438
    },
    {
        "content": "<p>I'm here. I'm also confused.</p>",
        "id": 123008468,
        "sender_full_name": "Sean Leather",
        "timestamp": 1519671533
    },
    {
        "content": "<p>I'm here. I'm also confused. Doubly confused. Because I didn't know my message was at the bottom!</p>",
        "id": 123008487,
        "sender_full_name": "Sean Leather",
        "timestamp": 1519671557
    },
    {
        "content": "<p>That's okay, the topic list seems to be a most-recently-used cache</p>",
        "id": 123009814,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1519673561
    },
    {
        "content": "<p>is there a way to give a friendly name to a metavariable while inside a proof?</p>",
        "id": 123011839,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1519676838
    },
    {
        "content": "<p>how did you create that meta variable?</p>",
        "id": 123011904,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1519676915
    },
    {
        "content": "<p>i haven't yet, I'm still in term mode, haha. in tactic mode it'd be from using <code>apply</code>, <code>refine</code>, and friends</p>",
        "id": 123012009,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1519677113
    },
    {
        "content": "<p>What you can try is: </p>\n<div class=\"codehilite\"><pre><span></span>let my_mvar, tactic.swap,\nrefine (my_fun my_mvar),\n</pre></div>\n\n\n<p>instead of</p>\n<div class=\"codehilite\"><pre><span></span>refine (my_fun _),\n</pre></div>",
        "id": 123012224,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1519677384
    },
    {
        "content": "<p>that looks like what i'd do in term mode with <code>suffices</code>, nice</p>",
        "id": 123012248,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1519677451
    },
    {
        "content": "<p><code>suffices</code> works in tactic mode as well</p>",
        "id": 123012293,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1519677486
    },
    {
        "content": "<p>How do I view the automatically generated name of an instance?</p>",
        "id": 123012589,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1519678013
    },
    {
        "content": "<p>You could <code>#print instances</code> and check that way, I guess?</p>",
        "id": 123012659,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1519678124
    },
    {
        "content": "<p>wrong topic</p>",
        "id": 123012677,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1519678201
    },
    {
        "content": "<p>That's the real test: will the stream and topic stuff be useful or irritating?</p>",
        "id": 123012744,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519678287
    },
    {
        "content": "<p>I don't think I have the mental fortitude to carefully tag every message I type :(.</p>",
        "id": 123012749,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1519678314
    },
    {
        "content": "<p>I think it would be great if you suggest a different topic for a given post</p>",
        "id": 123012752,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1519678321
    },
    {
        "content": "<blockquote>\n<p>I don't think I have the mental fortitude to carefully tag every message I type :(.</p>\n</blockquote>\n<p>If you click on the message you want to respond to, you're going to respond in the right topic</p>",
        "id": 123012820,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1519678412
    },
    {
        "content": "<p>That would mean I have to touch the rodent.</p>",
        "id": 123012826,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1519678431
    },
    {
        "content": "<p>I sit on a fitball and my furry friend is a little bit too far usually.</p>",
        "id": 123012870,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1519678468
    },
    {
        "content": "<p>You can also press <code>r</code> or Enter to respond</p>",
        "id": 123012871,
        "sender_full_name": "Reid Barton",
        "timestamp": 1519678470
    },
    {
        "content": "<p>Can <code>r</code> read my mind as to which message I am replying to?</p>",
        "id": 123012877,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1519678501
    },
    {
        "content": "<p>you can use j and k to move up and down, ? displays keyboard shortcuts</p>",
        "id": 123012891,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1519678533
    },
    {
        "content": "<p>Great!</p>",
        "id": 123012895,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1519678554
    },
    {
        "content": "<p>(Or the up and down keys)</p>",
        "id": 123012919,
        "sender_full_name": "Reid Barton",
        "timestamp": 1519678563
    },
    {
        "content": "<p>Nice! Why does j go down o_O?</p>",
        "id": 123012938,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1519678575
    },
    {
        "content": "<p>j moves the cursor down in vim</p>",
        "id": 123012949,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1519678609
    },
    {
        "content": "<p><a href=\"http://www.catonmat.net/blog/why-vim-uses-hjkl-as-arrow-keys/\" target=\"_blank\" title=\"http://www.catonmat.net/blog/why-vim-uses-hjkl-as-arrow-keys/\">http://www.catonmat.net/blog/why-vim-uses-hjkl-as-arrow-keys/</a></p>",
        "id": 123012969,
        "sender_full_name": "Reid Barton",
        "timestamp": 1519678639
    },
    {
        "content": "<p>It's a little bit fiddle-ey I have to say.</p>",
        "id": 123013037,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1519678688
    },
    {
        "content": "<p>help you keep your fingers on the home row</p>",
        "id": 123013052,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519678720
    },
    {
        "content": "<p>i always end up installing nano whenever i have to work on the terminal</p>",
        "id": 123013055,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1519678724
    },
    {
        "content": "<p>I mean the whole reply-to thing with selecting what exactly it is I am replying to. Might be a bit more work than I would like, perhaps?</p>",
        "id": 123013066,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1519678751
    },
    {
        "content": "<p><em>shrug</em></p>",
        "id": 123013072,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1519678775
    },
    {
        "content": "<p>probably just fine to post whatever into general, if something deserves more in depth discussion, someone can always quote and reply to break it off into its own topic</p>",
        "id": 123013075,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1519678798
    },
    {
        "content": "<p>for starting conversations, that's good but in the middle of a conversation, commenting on the wrong topic means that some people will see it and others will not</p>",
        "id": 123013426,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1519679301
    },
    {
        "content": "<p>Everyone sees messages to all topics on the streams they're subscribed to (unless they've explicitly muted a particular topic, which isn't the common case).<br>\nAn analogy that might be helpful is that streams are like mailing lists while topics are like the subjects of threads on a particular list. Streams are relatively static and stream membership determines what you receive. Topics are ephemeral and clarify the context of a message. If there is a conversation about affine schemes and another conversation about mathlib failing to build, then you can reply to one of the conversations with \"it didn't work\" and it won't be misunderstood as relating to the other conversation.<br>\nYou can also choose to view one topic at a time or all topics on a stream (or on all streams) mixed together, but the expectation is that you'll eventually see all messages on a stream regardless of their topics.</p>",
        "id": 123013745,
        "sender_full_name": "Reid Barton",
        "timestamp": 1519679838
    },
    {
        "content": "<p>For now, there's little enough traffic (here and on the gitter) that it probably doesn't make sense to create additional streams, but if, say, the stacks project grows to the point where not all lean users want to see all the discussion about the project, that's when having a separate stream would be useful.</p>",
        "id": 123013910,
        "sender_full_name": "Reid Barton",
        "timestamp": 1519680015
    }
]