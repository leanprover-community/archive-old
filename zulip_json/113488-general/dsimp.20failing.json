[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"o\">(</span><span class=\"n\">list</span> <span class=\"n\">A</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">join</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">::</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">++</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">join</span> <span class=\"n\">L</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">dsimp</span> <span class=\"c1\">-- fails</span>\n</pre></div>\n\n\n<p><code>rfl</code> works. Does this mean that this example has not been tagged with <code>[simp]</code>? I don't even know if this theorem has a name -- <code>library_search</code> tells me the proof is <code>exact rfl</code>. I couldn't get <code>#find</code> to give any output at all:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">find</span>\n\n<span class=\"n\">def</span> <span class=\"n\">find_bug_workaround</span> <span class=\"o\">:=</span> <span class=\"mi\">37</span>\n\n<span class=\"bp\">#</span><span class=\"n\">find</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">join</span> <span class=\"o\">(</span><span class=\"bp\">_</span> <span class=\"bp\">::</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">_</span> <span class=\"bp\">++</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">join</span> <span class=\"bp\">_</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"o\">(</span><span class=\"n\">list</span> <span class=\"n\">A</span><span class=\"o\">))</span>\n\n<span class=\"bp\">#</span><span class=\"n\">find</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">join</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">::</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">++</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">join</span> <span class=\"n\">L</span>\n</pre></div>\n\n\n<p>Is it a bad <code>simp</code> lemma?</p>",
        "id": 175497930,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568262335
    },
    {
        "content": "<p>Sounds like a good simp lemma to me!</p>",
        "id": 175498338,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1568262882
    },
    {
        "content": "<p>Maybe we should tag <code>list.join</code> with <code>@[simp]</code></p>",
        "id": 175498606,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1568263205
    },
    {
        "content": "<p>Yes.</p>",
        "id": 175498661,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1568263266
    }
]