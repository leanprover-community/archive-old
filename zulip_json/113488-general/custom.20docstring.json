[
    {
        "content": "<p>Hi, I want to adjust <code>to_additive</code> user tag to allow something like</p>\n<div class=\"codehilite\"><pre><span></span>/-- Multiplicative docstring -/\n@[to_additive add_lemma &quot;Additive docstring&quot;]\nlemma mul_lemma : true := sorry\n</pre></div>\n\n\n<p>Do we have a parser for something like \"quoted string\" in Lean?</p>",
        "id": 172912142,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1565418817
    },
    {
        "content": "<p>Another approach is to turn <code>tactic.add_doc_string</code> into an interactive command, but it needs a similar parser.</p>",
        "id": 172912184,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1565418888
    },
    {
        "content": "<p>If you know the name of the additive lemma, <code>run_cmd tactic.add_doc_string `add_lemma \"Additive docstring\" </code> should work.</p>",
        "id": 172967595,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1565527497
    },
    {
        "content": "<p>The issue is that we'd like to do the whole thing in one go</p>",
        "id": 172970000,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1565531778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> to parse the quoted string just use the <code>texpr</code> parser, then <code>eval_expr</code> to string</p>",
        "id": 172988463,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1565567211
    }
]