[
    {
        "content": "<p>Hi folks, I have been following Logic &amp; Proof (<a href=\"https://leanprover.github.io/logic_and_proof/logic_and_proof.pdf\" target=\"_blank\" title=\"https://leanprover.github.io/logic_and_proof/logic_and_proof.pdf\">https://leanprover.github.io/logic_and_proof/logic_and_proof.pdf</a>) and in Chapter 12, it says to use <code>import data.set</code>, but I get an error that that path doesn't exist. However, I am still able to use set membership operators, etc. On the other hand, the book mentions theorems like <code>mem_inter</code>, but those aren't in scope. Have they moved to another library? How do I import them? Thanks.</p>",
        "id": 130252632,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532489529
    },
    {
        "content": "<p>It got renamed recently to <code>data.set.basic</code></p>",
        "id": 130252817,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532489994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span> This would be worth updating I believe</p>",
        "id": 130252860,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532490052
    },
    {
        "content": "<p>Ah, thanks, that doesn't seem to work either. Maybe my Lean installation is old.</p>",
        "id": 130252868,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532490070
    },
    {
        "content": "<p>I'm using the Lean extension in VS Code, also.</p>",
        "id": 130252871,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532490082
    },
    {
        "content": "<p>Can you bring up your project's leanpkg.toml and check that you have mathlib in your dependencies?</p>",
        "id": 130252916,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532490134
    },
    {
        "content": "<p>Yeah, I don't seem to have that. It's in <code>$HOME/lean-3.3.0-darwin/lib/lean/leanpkg/leanpkg.toml</code> and it just has:</p>\n<div class=\"codehilite\"><pre><span></span>[package]\nname = &quot;leanpkg&quot;\nversion = &quot;0.1&quot;\n</pre></div>",
        "id": 130252976,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532490257
    },
    {
        "content": "<p>I guess that's a global <code>leanpkg.toml</code> file? I don't have one for my project. I'm just creating individual <code>.lean</code> files.</p>",
        "id": 130252989,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532490313
    },
    {
        "content": "<p>What should I add to the <code>leanpkg.toml</code> file?</p>",
        "id": 130253038,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532490382
    },
    {
        "content": "<p>Or maybe I need to run the <code>leanpkg</code> command to add a library?</p>",
        "id": 130253047,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532490430
    },
    {
        "content": "<p>I really know nothing about lean package management. Just did the minimal amount to get Lean and the VS Code extension installed.</p>",
        "id": 130253109,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532490553
    },
    {
        "content": "<p>Sorry i stepped away</p>",
        "id": 130253850,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532492115
    },
    {
        "content": "<p>go in your project's directory with a terminal and call <code>leanpkg init my_project</code> (feel free to pick a better name)</p>",
        "id": 130253895,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532492170
    },
    {
        "content": "<p>Then call <code>leanpkg add leanprover/mathlib</code></p>",
        "id": 130253898,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532492190
    },
    {
        "content": "<p>then <code>leanpkg build</code></p>",
        "id": 130253899,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532492205
    },
    {
        "content": "<p>By default, leanpkg sets <code>src</code> as the directory where all your sources are located</p>",
        "id": 130253905,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532492233
    },
    {
        "content": "<p>Thanks! The <code>leanpkg init my_project</code> worked, but:</p>\n<div class=\"codehilite\"><pre><span></span>$ leanpkg add leanprover/mathlib\nmathlib: using local path ./leanprover/mathlib\nfailed to open file &#39;./leanprover/mathlib/leanpkg.toml&#39;\n</pre></div>",
        "id": 130254066,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532492572
    },
    {
        "content": "<p>sometimes you have to be more explicit: <code>leanpkg add https://github.com/leanprover/mathlib</code></p>",
        "id": 130254125,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532492685
    },
    {
        "content": "<p>Btw, this might help: <a href=\"https://github.com/leanprover/mathlib/blob/master/docs/elan.md\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/docs/elan.md\">https://github.com/leanprover/mathlib/blob/master/docs/elan.md</a></p>",
        "id": 130254175,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532492763
    },
    {
        "content": "<p>That add command seemed to work, thanks. I'm doing the build.</p>",
        "id": 130254181,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532492796
    },
    {
        "content": "<p>It's funny, I just recently added a similar feature to the Haskell build tool Stack, to be able to download templates from different github users without having to specify the full path.</p>",
        "id": 130254188,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532492833
    },
    {
        "content": "<p>The Elan tool looks helpful, thanks. Sounds a bit like Stack actually, letting you use different versions of the compiler.</p>",
        "id": 130254246,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532492968
    },
    {
        "content": "<p>Well, the <code>leanpkg build</code> ran successfully. And I restarted the editor, and now the <code>import data.set.basic</code> shows no error. But <code>univ</code>, <code>mem_inter</code>, and those other theorems are still redlined. Maybe I need to <code>open</code> some namespace?</p>",
        "id": 130254360,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532493195
    },
    {
        "content": "<p>To be fair <code>elan</code> and <code>leanpkg</code> share some the functions of <code>stack</code> but we still don't have curated package collections.</p>",
        "id": 130254413,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532493317
    },
    {
        "content": "<p>Wasn't it already possible to link to github in your <code>stack.yaml</code> file, in the <code>packages</code> section?</p>",
        "id": 130254415,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532493349
    },
    {
        "content": "<p>Ah, right. Well that's a pretty unique feature to <code>stack</code>.</p>",
        "id": 130254416,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532493354
    },
    {
        "content": "<p>I'm hoping to see that happen eventually. I find it pretty useful. But mathlib changes so much that we keep upgrading.</p>",
        "id": 130254457,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532493402
    },
    {
        "content": "<p>This is about templates for new projects. There's a set of templates under the <code>commercialstack</code> user on github. This was so you could install templates from a different github user by writing <code>stack new username/template_name</code>. Instead of having to write the whole URL.</p>",
        "id": 130254464,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532493464
    },
    {
        "content": "<p>In VS code, there may be a command to let you find definitions.</p>",
        "id": 130254465,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532493478
    },
    {
        "content": "<p>Yeah, \"no definition found for univ\"</p>",
        "id": 130254508,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532493545
    },
    {
        "content": "<p>I might have misled you. Try also importing <code>data.set</code></p>",
        "id": 130254514,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532493562
    },
    {
        "content": "<p>OK, added that. Still can't find <code>univ</code>.</p>",
        "id": 130254517,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532493590
    },
    {
        "content": "<blockquote>\n<p>This is about templates for new projects. There's a set of templates under the <code>commercialstack</code> user on github. This was so you could install templates from a different github user by writing <code>stack new username/template_name</code>. Instead of having to write the whole URL.</p>\n</blockquote>\n<p>Nice!</p>",
        "id": 130254518,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532493593
    },
    {
        "content": "<p>What version of Lean is written in your <code>leanpkg.toml</code>?</p>",
        "id": 130254560,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532493614
    },
    {
        "content": "<p>You can also install templates from gitlab or bitbucket, e.g. <code>stack new gitlab:username/template_name</code></p>",
        "id": 130254563,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532493636
    },
    {
        "content": "<p>Lean version 3.3.0</p>",
        "id": 130254565,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532493656
    },
    {
        "content": "<p>Ok, that makes sense. Let's set it to <code>3.4.1</code> to have the most recent stuff.</p>",
        "id": 130254574,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532493691
    },
    {
        "content": "<p>OK, I changed it and ran <code>leanpkg build</code> but got the error <code>WARNING: Lean version mismatch: installed version is 3.3.0, but package requires 3.4.1\n</code>. Maybe I need to install elan.</p>",
        "id": 130254626,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532493763
    },
    {
        "content": "<p>Yes, that makes things much easier</p>",
        "id": 130254672,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532493843
    },
    {
        "content": "<p>Thing is, I'm leading a study group tomorrow night where we're supposed to go over the exercises for Chapter 12. And I just got around to working on them tonight, and now I realize probably nobody else is going to be able to work them either. Will have to post instructions for folks.</p>",
        "id": 130254679,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532493900
    },
    {
        "content": "<p>That would be good. I think this might be a good start: <a href=\"https://github.com/leanprover/mathlib/blob/master/docs/elan.md\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/docs/elan.md\">https://github.com/leanprover/mathlib/blob/master/docs/elan.md</a></p>",
        "id": 130254741,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532494035
    },
    {
        "content": "<p>I wonder how I installed Lean the first time - probably just downloaded the binary package. Looks like it's on homebrew and that has 3.4.1 - might have been another simple way to keep it up to date.</p>",
        "id": 130254743,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532494039
    },
    {
        "content": "<p>Got it, thanks!</p>",
        "id": 130254745,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532494056
    },
    {
        "content": "<p>Maybe we should remove it from homebrew and put elan instead</p>",
        "id": 130254747,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532494075
    },
    {
        "content": "<p>Nah. Both ghc and stack are on homebrew. People can choose what they want. But it would be helpful if this page said anything about elan: <a href=\"https://leanprover.github.io/download/\" target=\"_blank\" title=\"https://leanprover.github.io/download/\">https://leanprover.github.io/download/</a></p>",
        "id": 130254809,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532494172
    },
    {
        "content": "<p>Yeah that's true. The thing with ghc though is that there are many options for build systems. Some people use cabal, others nix. But with Lean, I think it's too easy to get started the wrong way and there aren't that many different ways of using the tool.</p>",
        "id": 130254915,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532494361
    },
    {
        "content": "<p>OK, good point</p>",
        "id": 130254972,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532494462
    },
    {
        "content": "<p>Any luck with elan so far?</p>",
        "id": 130254978,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532494494
    },
    {
        "content": "<p>I should go, my bed is calling to me. I hope it works out for your study session</p>",
        "id": 130255092,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532494761
    },
    {
        "content": "<p>Sorry, just biked home because the coffee shop closed. Will try elan now. Thanks and take care.</p>",
        "id": 130255488,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532495529
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"113073\">@Lyle Kopnicky</span>  I think the missing step is <code>open set</code>. Assuming you got <code>import data.set.basic</code> working, the name of the univ set is <code>set.univ</code> or just <code>univ</code> if <code>set</code> is open.</p>",
        "id": 130260428,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532504716
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, but I am even further back now. I installed Elan and did <code>leanpkg install leanprover/mathlib</code> and that seemed to work fine. Then did <code>leanpkg build</code> and it crashed with <code>&lt;unknown&gt;:1:1: error: file 'data/list/basic' not found in the LEAN_PATH</code>. How do I install that? I tried <code>leanpkg install data/list/basic</code> but it says that path is not found.</p>",
        "id": 130284056,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532534206
    },
    {
        "content": "<p>Here is my <code>leanpkg.toml</code>:</p>\n<div class=\"codehilite\"><pre><span></span>[package]\nname = &quot;logic_and_proof&quot;\nversion = &quot;0.1&quot;\nlean_version = &quot;3.4.1&quot;\n\n[dependencies]\n</pre></div>\n\n\n<p>Do I need to manually add something to <code>dependencies</code>?</p>",
        "id": 130284080,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532534251
    },
    {
        "content": "<p>I though running <code>leanpkg install leanprover/mathlib</code> would add something to <code>dependencies</code> but it didn't.</p>",
        "id": 130284140,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532534302
    },
    {
        "content": "<p>You need some version of <code>leanpkg add</code></p>",
        "id": 130284155,
        "sender_full_name": "Reid Barton",
        "timestamp": 1532534329
    },
    {
        "content": "<p>Which will add to that dependencies section for you.</p>",
        "id": 130284209,
        "sender_full_name": "Reid Barton",
        "timestamp": 1532534394
    },
    {
        "content": "<p>(or you can edit that section manually)</p>",
        "id": 130284312,
        "sender_full_name": "Reid Barton",
        "timestamp": 1532534465
    },
    {
        "content": "<p>Ah, that seemed to do the trick. Thanks!</p>",
        "id": 130284339,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532534500
    },
    {
        "content": "<p><code>leanpkg install</code> is analogous to <code>cabal install</code> I think. Not sure I have ever used it.</p>",
        "id": 130284391,
        "sender_full_name": "Reid Barton",
        "timestamp": 1532534531
    },
    {
        "content": "<p>OK. Up until yesterday I hadn't used <code>leanpkg</code> at all. Have just been using individual <code>.lean</code> files but that didn't work anymore when I needed some of these set theorems.</p>",
        "id": 130284460,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532534603
    },
    {
        "content": "<p>Yay, finally have it working, following the <code>leanpkg build</code>. In the code, <code>import data.set</code> followed by <code>open set</code> works.</p>",
        "id": 130294885,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532545109
    },
    {
        "content": "<p>How many seconds have you now got to do all the exercises? :-)</p>",
        "id": 130295045,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1532545300
    },
    {
        "content": "<p>Haha... I didn't manage to do the exercise beforehand. But others in the group did, so they presented their solutions. It was awesome. One person had already installed Elan, I guess, and another was using the online Lean, so they were both able to do the exercises.</p>",
        "id": 130385489,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532661422
    },
    {
        "content": "<p>But during the meeting, I was able to paste their code into my editor and everything checked out fine. I was projecting it on the whiteboard and they could underline things and draw around them.</p>",
        "id": 130385550,
        "sender_full_name": "Lyle Kopnicky",
        "timestamp": 1532661488
    }
]