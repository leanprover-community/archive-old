[
    {
        "content": "<p>We had a few discussions last week about documentation, resulting in this PR: <a href=\"https://github.com/leanprover-community/mathlib/pull/1229\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/1229\">https://github.com/leanprover-community/mathlib/pull/1229</a></p>\n<p>It has a proposal for required documentation for all future additions to mathlib. This is a first draft, and we're very interested to get feedback here!</p>",
        "id": 170877938,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1563183827
    },
    {
        "content": "<p>Thanks for all your efforts! I made some small comments/suggestions/questions on the PR page.</p>",
        "id": 170882914,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563188859
    },
    {
        "content": "<p>Are there any further comments about this PR? In particular, do people have opinions about requiring doc strings on all public-facing lemmas, instead of just \"major theorems\"?</p>",
        "id": 171439262,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1563808602
    },
    {
        "content": "<p>I tried doing this for all public-facing lemmas in my recent power series PR. I got bored very quickly. Many stupid silly lemmas didn't seem to have a nice description apart from repeating their name.</p>",
        "id": 171439375,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563808693
    },
    {
        "content": "<p>I don't think a docstring would offer more than what the hover-text shows by default: the type of the term.</p>",
        "id": 171439427,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563808727
    },
    {
        "content": "<p>So I am leaning towards \"doc strings on major theorems\" and there is no clear definition of what is a major theorem, but \"we know it when we see it\".</p>",
        "id": 171439511,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563808794
    },
    {
        "content": "<p>On the other hand, if and when there's some kind of doc generation tool, having natural language statements of these lemmas would be helpful.</p>",
        "id": 171439590,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1563808814
    },
    {
        "content": "<p>For the record, these were things like <code>coeff_zero</code> and <code>coeff_add</code> etc...</p>",
        "id": 171439657,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563808869
    },
    {
        "content": "<p>There is still surely an argument which says that newcomers would definitely prefer a line of English to having to read the Lean. I think it's easy to forget how intimidating the style is for beginners.</p>",
        "id": 171440641,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563809534
    },
    {
        "content": "<p>This is bordering on CNLs, but perhaps in the doc generation some documentation could be generated directly from Lean theorem names provided they stick to the conventions like <code>prop2_of_prop1</code>, <code>add_comm</code> etc.</p>",
        "id": 171445887,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1563813292
    },
    {
        "content": "<p>I'm not sure how to address this, but for me a big problem with the readability of Lean files is that everything has to be in logical order, unlike in informal mathematics. In any decently written paper or book, the introduction states the major theorem(s). Then in each section, some text addresses the purpose of the section. Proofs are often longer, and incorporate many \"Lean lemmas\" directly into the body of the proof, so that they don't have to be state ahead of time, without clear motivation. And finally very often proofs of highly technical facts are deferred to appendixes (or even \"forthcoming\" other papers).</p>\n<p>I think it would be great if we could aspire to better section-level commenting. (And more use of <code>section</code>, especially using a name.) Or, for that matter, moving in the direction of splitting developments in more, smaller files.</p>\n<p>Awesome (but requiring lots of language support), would be something like a \"deferred\" keyword:</p>\n<div class=\"codehilite\"><pre><span></span>theorem my_awesome_theorem : 196884 = 1 + 196883 := deferred\n\n... lots of lemmas and definitions here ...\n\nproof of my_awesome_theorem :=\nbegin\n  ...\nend\n</pre></div>",
        "id": 171468844,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563830116
    },
    {
        "content": "<p>The obvious solution is to not read lean files like you would a book</p>",
        "id": 171469348,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563830601
    },
    {
        "content": "<p>You first read <code>my_awesome_theorem</code> because that's what you care about, then when you see an interesting lemma that seems to do most of the work you follow that, and so on until you believe the result</p>",
        "id": 171469432,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563830655
    },
    {
        "content": "<p>Yes, this puts more power and responsibility on the reader to read lemmas in the right order, but I think that being able to follow links according to the reader's interest rather than having to determine this in advance as in a math textbook is a strength</p>",
        "id": 171469607,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563830853
    },
    {
        "content": "<p>I'm also in favor of documenting only important lemmas. A lot of the lemmas, especially <code>simp</code> lemmas, don't even need to be used explicitly. They might deserve an explanation but more as a set of lemma rather than individually. For instance, it might be worth explaining that they try to rewrite a formula into a canonical form and describe that form.</p>",
        "id": 171469729,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1563830962
    },
    {
        "content": "<p>Also I don't think that more documentation is better than less. More documentation is more work to keep up to date and outdated documentation is worse than no documentation. Let's make sure that the comments we require have value</p>",
        "id": 171469867,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1563831054
    },
    {
        "content": "<p>My usual problem when opening a Lean file is that I can't find <code>my_awesome_theorem</code> (or guess which are the awesome theorems I should be looking for...) Of course, good file-level comments solve this.</p>",
        "id": 171469891,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563831071
    },
    {
        "content": "<p>It might be worth adding a rule that the important theorems be listed at the beginning.</p>",
        "id": 171470148,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1563831278
    },
    {
        "content": "<p>There still seems to be a big argument for some sort of overview of the file at the beginning. This could contain pointers to main sections and theorems.</p>",
        "id": 171471035,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563832145
    },
    {
        "content": "<p>A bit like the last paragraph of a paper's introduction?</p>",
        "id": 171471430,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1563832502
    },
    {
        "content": "<p>Yes maybe. Just saying what's in the file. I think this is a fine idea</p>",
        "id": 171473230,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563834138
    },
    {
        "content": "<p>So it sounds like there's a general consensus not to require every lemma to have a docstring, which is what the current proposal says. So let's stick with that for now. It will be up to reviewers to enforce a strict enough notion of \"important theorem\" to require docstrings.</p>",
        "id": 171500742,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1563872072
    },
    {
        "content": "<p>As for an overview at the beginning, that's already in the proposal, isn't it? We ask for a summary of the content of the file, followed by</p>\n<ul>\n<li><em>Main definitions</em> (optional, can be covered in the summary)</li>\n<li><em>Main statements</em> (optional, can be covered in the summary)</li>\n</ul>",
        "id": 171500764,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1563872111
    },
    {
        "content": "<p>Explaining the intent behind a collection of simp lemmas seems to fall under \"<em>Implementation notes</em> (description of important design decisions or interface features).\" But I think it's a good idea to mention explicitly that simp normal form is an important interface feature.</p>",
        "id": 171500858,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1563872196
    },
    {
        "content": "<p>Right now, the files probably mostly meet your rules. How do you suggest you bring those files up to code?</p>",
        "id": 171528493,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1563895316
    },
    {
        "content": "<blockquote>\n<p>Right now, the files probably mostly meet your rules. </p>\n</blockquote>\n<p>What files? I think almost nothing in mathlib meets these standards. The idea is that future PRs should be held to these requirements, and should update what they touch (within reason). It's a long term effort to document existing files, of course, but I hope the community will pitch in.</p>",
        "id": 171546140,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1563907462
    },
    {
        "content": "<p>I think file level comments is a lot to tack onto every PR that casually touches it. You may want to create a specific issue for the file level comments</p>",
        "id": 171558856,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1563916747
    },
    {
        "content": "<p>Yes, this is why I write \"within reason.\" A PR that adds one lemma about <code>list</code> shouldn't have to document the whole file. But if someone understands a file enough to reorganize half of it, it seems reasonable to ask them to write documentation. Creating an issue for adding these seems fine.</p>",
        "id": 171595531,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1563965366
    },
    {
        "content": "<p>Does anyone else have thoughts about the proposed requirements? If not, let's merge the PR and enact the rules.</p>",
        "id": 171595797,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1563965625
    },
    {
        "content": "<p>Can we make the <code>doc_blame</code> (without <code>!</code>!! <span aria-label=\"double exclamation\" class=\"emoji emoji-203c\" role=\"img\" title=\"double exclamation\">:double_exclamation:</span> <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span> ) some part of the Travis checks? Or is this going to cause lots of griefs because there are always tiny exceptions to these iron rules?</p>",
        "id": 171611375,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563978994
    },
    {
        "content": "<p>It would be very hard to integrate into the Travis workflow and there will indeed be lots of exceptions.</p>",
        "id": 171613197,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1563980252
    },
    {
        "content": "<p>I think there's been enough time for people to voice objections. Can someone approve the PR?</p>",
        "id": 171672216,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1564042746
    },
    {
        "content": "<p>Done (-;</p>",
        "id": 171672480,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1564043059
    },
    {
        "content": "<p>Maybe we should have a competition for who can update the most files. What's the prize?</p>",
        "id": 171676961,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1564047914
    },
    {
        "content": "<p>Free copy of mathlib</p>",
        "id": 171677678,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1564048569
    }
]