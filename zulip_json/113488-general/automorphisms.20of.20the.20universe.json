[
    {
        "content": "<p>Golfing challenge. See also <a href=\"https://mathoverflow.net/questions/350553/is-prod-x-mathcalu-x-to-x-cong-1-admissible-in-type-theory\" target=\"_blank\" title=\"https://mathoverflow.net/questions/350553/is-prod-x-mathcalu-x-to-x-cong-1-admissible-in-type-theory\">https://mathoverflow.net/questions/350553/is-prod-x-mathcalu-x-to-x-cong-1-admissible-in-type-theory</a></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"n\">noncomputable</span> <span class=\"n\">theory</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"n\">def</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">),</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"k\">if</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">=</span> <span class=\"bp\">ℕ</span> <span class=\"k\">then</span> <span class=\"k\">by</span> <span class=\"o\">{</span><span class=\"n\">subst</span> <span class=\"n\">h</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"n\">id</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">claim</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">,</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"err\">≃</span> <span class=\"n\">unit</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">let</span> <span class=\"n\">bar</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">,</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"n\">id</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">oops</span> <span class=\"o\">:</span> <span class=\"n\">foo</span> <span class=\"bp\">=</span> <span class=\"n\">bar</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">claim</span><span class=\"bp\">.</span><span class=\"n\">injective</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">subsingleton</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">oops_nat_zero</span> <span class=\"o\">:</span> <span class=\"n\">foo</span> <span class=\"bp\">ℕ</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">bar</span> <span class=\"bp\">ℕ</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">oops</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">foo</span><span class=\"o\">,</span> <span class=\"n\">bar</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n  <span class=\"n\">contradiction</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 185817491,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1579183754
    },
    {
        "content": "<p>It can't be done constructively though.</p>",
        "id": 185817776,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1579183996
    },
    {
        "content": "<p>Yup, that's what I'm trying to celebrate (-;</p>",
        "id": 185817891,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1579184088
    }
]