[
    {
        "content": "<p>I'm writing lecture notes for my undergraduates. I don't like linking to raw code in the github lean and mathlib repos in these notes, because some students have no interest in Lean and don't want to click on a link in good faith and be taken to something intimidating. Now we have the docs though, so I'm upgrading my notes and adding links.</p>\n<p>A lot of what I'm doing in my notes is super-foundational stuff though, so in core, and I'm noticing that the link I have for e.g. <a href=\"https://leanprover-community.github.io/mathlib_docs/core/init/logic.html#transitive\">transitive</a> is kind of hopeless, as it doesn't have a docstring. I'm sure there all sorts of ways of adding docstrings to core defs but rather than launching in I thought I'd ask here as to what the preferred form of a PR would take. Ideally I'd only like to add about ten docstrings I suspect, but one might argue that they're important for mathematicians.</p>",
        "id": 209412707,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599583302
    },
    {
        "content": "<p>If they're normal doc strings on declarations, and they don't forward-reference things in mathlib, you can PR them to core just like you would to mathlib.</p>",
        "id": 209412940,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1599583435
    },
    {
        "content": "<p>All at once or as you write them, doesn't really matter. If there are certain people you want to review them it's a good idea to tag them though. Not everyone watches core PRs very closely.</p>",
        "id": 209413072,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1599583490
    },
    {
        "content": "<p>If I PR them to core then they may not appear in the docs immediately though, am I correct?</p>",
        "id": 209413320,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599583620
    },
    {
        "content": "<p>I kind of want them there by 5th October</p>",
        "id": 209413363,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599583652
    },
    {
        "content": "<p>Right, but I think we're due for a release soonish, since <code>nat.pow</code> is finally dead. And a docs-only release would be very easy.</p>",
        "id": 209413492,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1599583702
    },
    {
        "content": "<p>OK I will make some PR's to core. Thanks.</p>",
        "id": 209413579,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599583745
    },
    {
        "content": "<p>My memory was that this was not how we documented core tactics.</p>",
        "id": 209413631,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599583772
    },
    {
        "content": "<p>The tactic docs are different because they're not just doc strings. You added a bunch of <code>tactic_doc_entry</code>s which are defined in mathlib.</p>",
        "id": 209413945,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1599583906
    },
    {
        "content": "<p>By the way, if you're linking to the docs from your notes, you should consider linking to <a href=\"http://leanprover-community.github.io/mathlib_docs/find/transitive\">http://leanprover-community.github.io/mathlib_docs/find/transitive</a> instead of the direct link. This is the pattern <a href=\"https://leanprover-community.github.io/mathlib_docs/find/transitive\">docs#transitive</a> uses. It will be more robust if declarations change files, which isn't likely to happen for <code>transitive</code>, but maybe for others</p>",
        "id": 209414314,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1599584087
    },
    {
        "content": "<p>It's relatively easy to make a new release of community Lean. If anyone feels like we're due for one, feel free to ping me and I can put one together within a few hours. (It's reviewing that's the hard part, and Gabriel's been doing a great job of keeping up with that.)</p>",
        "id": 209421701,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1599587760
    },
    {
        "content": "<p>I'd be ready now, to be honest, I'm actively fighting <code>nat.pow</code> and would love to have those changes go live.</p>",
        "id": 209422675,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1599588215
    },
    {
        "content": "<p>Now or whenever you have time, of course!</p>",
        "id": 209422697,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1599588227
    },
    {
        "content": "<p>There are two open PRs which have been active recently: <a href=\"https://github.com/leanprover-community/lean/issues/458\">lean#458</a> and <a href=\"https://github.com/leanprover-community/lean/issues/462\">lean#462</a>. From what I can tell they're both fairly close to being merged (?), so I'll wait a bit longer for those.</p>",
        "id": 209429040,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1599591472
    },
    {
        "content": "<p>I'd be just as happy to have a release happen before <a href=\"https://github.com/leanprover-community/lean/issues/458\">lean#458</a>--it's not urgent for me, and both it and the <code>nat.pow</code> change will require fairly large changes to mathlib, which might be easier to deal with separately.</p>",
        "id": 209429796,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599591839
    },
    {
        "content": "<p>I just made a small core branch and tried to push to github and I get a permissions error. Do I have write access to non-master branches of leanprover-community/lean? I am <code>kbuzzard</code> on github.</p>",
        "id": 209446328,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599600285
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I've just sent you an invitation.</p>",
        "id": 209447119,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1599600741
    },
    {
        "content": "<p>Since <a href=\"https://github.com/leanprover-community/lean/issues/462\">lean#462</a> has been merged, I'm planning to release 3.20.0c later today (unless <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> beats me to it).</p>",
        "id": 209518075,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1599661574
    },
    {
        "content": "<p>Thanks Bryan!</p>",
        "id": 209518451,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1599661718
    },
    {
        "content": "<p>Maybe we can sneak <a href=\"https://github.com/leanprover-community/lean/issues/463\">lean#463</a> in for Kevin</p>",
        "id": 209520491,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1599662612
    },
    {
        "content": "<p>Yes, I promise not to start working on this before <time datetime=\"2020-09-09T23:00:00Z\">2020-09-09T19:00:00-04:00</time> so any other PRs that managed to get merged before then will make it into 3.20.0c as well.</p>",
        "id": 209521834,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1599663138
    }
]