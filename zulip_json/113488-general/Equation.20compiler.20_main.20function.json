[
    {
        "content": "<p>Hello everyone,<br>\nI am defining a recursive property on <code>expr</code>(precisely, containing something as a subexpression) and want to show it is <code>decidable</code>. In a simplified (dysfunctional) version:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">expr</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">app</span> <span class=\"n\">fn</span> <span class=\"n\">arg</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"n\">fn</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"n\">arg</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"n\">false</span>\n\n<span class=\"n\">meta</span> <span class=\"kn\">instance</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">decidable_contains</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">app</span> <span class=\"n\">fn</span> <span class=\"n\">arg</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">match</span> <span class=\"o\">(</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">decidable_contains</span> <span class=\"n\">fn</span><span class=\"o\">,</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">decidable_contains</span> <span class=\"n\">arg</span><span class=\"o\">)</span> <span class=\"k\">with</span>\n                  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">is_true</span> <span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">is_true</span> <span class=\"o\">(</span><span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">h₁</span><span class=\"o\">)</span>\n                  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">is_true</span> <span class=\"n\">h₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">is_true</span> <span class=\"o\">(</span><span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"n\">h₂</span><span class=\"o\">)</span>\n                  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">is_false</span> <span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"n\">is_false</span> <span class=\"n\">h₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">is_false</span> <span class=\"o\">(</span><span class=\"n\">not_or</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span><span class=\"o\">)</span>\n                  <span class=\"kn\">end</span>\n<span class=\"bp\">|</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"n\">is_false</span> <span class=\"n\">not_false</span>\n</pre></div>\n\n\n<p>This gives the following error:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">h₁</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">h₁</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"n\">x</span> <span class=\"n\">fn</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">fn</span>\n</pre></div>\n\n\n<p>What is the mistake? It seems to me that the function <code>_main</code> defined by the equation compiler should not leak through at this point, should it?</p>",
        "id": 189710687,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1583340832
    },
    {
        "content": "<p>This seems suspiciously like <a href=\"#narrow/stream/113488-general/topic/Missing.20.CE.B7\" title=\"#narrow/stream/113488-general/topic/Missing.20.CE.B7\">the issue I'm debugging</a>. Could you write the following lines above your definition and paste the output?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">set_option</span> <span class=\"n\">trace</span><span class=\"bp\">.</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">smart_unfolding</span> <span class=\"n\">true</span>\n<span class=\"kn\">set_option</span> <span class=\"n\">trace</span><span class=\"bp\">.</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">is_def_eq_detail</span> <span class=\"n\">true</span>\n</pre></div>",
        "id": 189710998,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1583340991
    },
    {
        "content": "<p>For smart_unfolding:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">smart_unfolding</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">simple</span> <span class=\"n\">unfolding</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"n\">opt_param</span> <span class=\"n\">bool</span> <span class=\"n\">tt</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">smart_unfolding</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">simple</span> <span class=\"n\">unfolding</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"n\">x</span> <span class=\"n\">fn</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">smart_unfolding</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">simple</span> <span class=\"n\">unfolding</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span> <span class=\"n\">fn</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">smart_unfolding</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">simple</span> <span class=\"n\">unfolding</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">cases_on</span> <span class=\"n\">fn</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_unique</span> <span class=\"n\">a_pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_unique</span> <span class=\"n\">a_pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"o\">([</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">a_a</span> <span class=\"bp\">∨</span> <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">a_a_1</span><span class=\"o\">))</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_var_type</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_var_type</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"n\">a_assignment</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"o\">:</span> <span class=\"n\">macro_def</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">smart_unfolding</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">simple</span> <span class=\"n\">unfolding</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">app</span> <span class=\"n\">fn</span> <span class=\"n\">arg</span><span class=\"o\">)</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">smart_unfolding</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">simple</span> <span class=\"n\">unfolding</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span> <span class=\"o\">(</span><span class=\"n\">app</span> <span class=\"n\">fn</span> <span class=\"n\">arg</span><span class=\"o\">)</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">smart_unfolding</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">simple</span> <span class=\"n\">unfolding</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n<span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">cases_on</span> <span class=\"o\">(</span><span class=\"n\">app</span> <span class=\"n\">fn</span> <span class=\"n\">arg</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_unique</span> <span class=\"n\">a_pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_unique</span> <span class=\"n\">a_pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"o\">([</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">a_a</span> <span class=\"bp\">∨</span> <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">a_a_1</span><span class=\"o\">))</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_var_type</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_var_type</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"n\">a_assignment</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"o\">:</span> <span class=\"n\">macro_def</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n<span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"o\">]</span>\n</pre></div>",
        "id": 189711659,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1583341363
    },
    {
        "content": "<p>Aha, I think I see what is going on: <code>expr.contains x (app fn arg)</code> should be directly unfolded to <code>(expr.contains fn) ∨ (expr.contains arg)</code>, but instead it is unfolded with simple unfolding, going via <code>expr.contains._main</code>, so you end up with <code>(expr.contains._main fn)</code>. And <code>expr.contains fn</code> does not match any of the cases, so it is not unfolded any further.</p>",
        "id": 189712101,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1583341623
    },
    {
        "content": "<p>The problem here is that <code>expr.contains</code> is a meta definition, and that for meta definitions, the right equations are not generated.</p>\n<p>If I write this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">meta</span> <span class=\"kn\">instance</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">decidable_contains</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">app</span> <span class=\"n\">fn</span> <span class=\"n\">arg</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">match</span> <span class=\"o\">(</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">decidable_contains</span> <span class=\"n\">fn</span><span class=\"o\">,</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">decidable_contains</span> <span class=\"n\">arg</span><span class=\"o\">)</span> <span class=\"k\">with</span>\n                  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">is_true</span> <span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">is_true</span> <span class=\"k\">begin</span> <span class=\"n\">unfold</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"o\">,</span> <span class=\"kn\">end</span>\n                  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">is_true</span> <span class=\"n\">h₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">is_true</span> <span class=\"o\">(</span><span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"n\">h₂</span><span class=\"o\">)</span>\n                  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">is_false</span> <span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"n\">is_false</span> <span class=\"n\">h₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">is_false</span> <span class=\"o\">(</span><span class=\"n\">not_or</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span><span class=\"o\">)</span>\n                  <span class=\"kn\">end</span>\n<span class=\"bp\">|</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"n\">is_false</span> <span class=\"n\">not_false</span>\n</pre></div>\n\n\n<p>then we see the error message</p>\n<div class=\"codehilite\"><pre><span></span>unfold tactic failed, expr.contains does not have equational lemmas nor is a projection\n</pre></div>\n\n\n<p>If I make everything non-meta, then the error disappears.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">inductive</span> <span class=\"n\">my_expr</span>\n<span class=\"bp\">|</span> <span class=\"n\">var</span>      <span class=\"o\">{}</span> <span class=\"o\">:</span> <span class=\"n\">nat</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span>\n<span class=\"bp\">|</span> <span class=\"n\">mvar</span>        <span class=\"o\">:</span> <span class=\"n\">name</span> <span class=\"bp\">→</span> <span class=\"n\">name</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span>\n<span class=\"bp\">|</span> <span class=\"n\">local_const</span> <span class=\"o\">:</span> <span class=\"n\">name</span> <span class=\"bp\">→</span> <span class=\"n\">name</span> <span class=\"bp\">→</span> <span class=\"n\">binder_info</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span>\n<span class=\"bp\">|</span> <span class=\"n\">app</span>         <span class=\"o\">:</span> <span class=\"n\">my_expr</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span>\n<span class=\"bp\">|</span> <span class=\"n\">lam</span>         <span class=\"o\">:</span> <span class=\"n\">name</span> <span class=\"bp\">→</span> <span class=\"n\">binder_info</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span>\n<span class=\"bp\">|</span> <span class=\"n\">pi</span>          <span class=\"o\">:</span> <span class=\"n\">name</span> <span class=\"bp\">→</span> <span class=\"n\">binder_info</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span>\n<span class=\"bp\">|</span> <span class=\"n\">elet</span>        <span class=\"o\">:</span> <span class=\"n\">name</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span> <span class=\"bp\">→</span> <span class=\"n\">my_expr</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">my_expr</span>\n\n<span class=\"n\">def</span> <span class=\"n\">my_expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">my_expr</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">my_expr</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">app</span> <span class=\"n\">fn</span> <span class=\"n\">arg</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">my_expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"n\">fn</span> <span class=\"bp\">∨</span> <span class=\"n\">my_expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"n\">arg</span>\n<span class=\"bp\">|</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"n\">false</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">my_expr</span><span class=\"bp\">.</span><span class=\"n\">decidable_contains</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">my_expr</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">my_expr</span><span class=\"o\">),</span> <span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">my_expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">app</span> <span class=\"n\">fn</span> <span class=\"n\">arg</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">match</span> <span class=\"o\">(</span><span class=\"n\">my_expr</span><span class=\"bp\">.</span><span class=\"n\">decidable_contains</span> <span class=\"n\">fn</span><span class=\"o\">,</span> <span class=\"n\">my_expr</span><span class=\"bp\">.</span><span class=\"n\">decidable_contains</span> <span class=\"n\">arg</span><span class=\"o\">)</span> <span class=\"k\">with</span>\n                  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">is_true</span> <span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">is_true</span> <span class=\"o\">(</span><span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">h₁</span><span class=\"o\">)</span>\n                  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">is_true</span> <span class=\"n\">h₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">is_true</span> <span class=\"o\">(</span><span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"n\">h₂</span><span class=\"o\">)</span>\n                  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">is_false</span> <span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"n\">is_false</span> <span class=\"n\">h₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">is_false</span> <span class=\"o\">(</span><span class=\"n\">not_or</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span><span class=\"o\">)</span>\n                  <span class=\"kn\">end</span>\n<span class=\"bp\">|</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"n\">is_false</span> <span class=\"n\">sorry</span>\n</pre></div>\n\n\n<p>Lean doesn't really support proving anything about meta defs.</p>",
        "id": 189712234,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1583341683
    },
    {
        "content": "<p>The Coq users will say you should just write <code>meta def expr.contains (x : expr) : expr -&gt; bool</code> in the first place</p>",
        "id": 189712401,
        "sender_full_name": "Reid Barton",
        "timestamp": 1583341787
    },
    {
        "content": "<p>For is_def_eq_detail:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]:</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"n\">x</span> <span class=\"n\">fn</span> <span class=\"bp\">=</span><span class=\"err\">?</span><span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">fn</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">unfold</span> <span class=\"n\">left</span><span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">]:</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span> <span class=\"n\">fn</span> <span class=\"bp\">=</span><span class=\"err\">?</span><span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">fn</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">unfold</span> <span class=\"n\">left</span><span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]:</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">cases_on</span> <span class=\"n\">fn</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_unique</span> <span class=\"n\">a_pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_unique</span> <span class=\"n\">a_pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"o\">([</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">a_a</span> <span class=\"bp\">∨</span> <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">a_a_1</span><span class=\"o\">))</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_var_type</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_var_type</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"n\">a_assignment</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"o\">:</span> <span class=\"n\">macro_def</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"bp\">=</span><span class=\"err\">?</span><span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">fn</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">after</span> <span class=\"n\">whnf_core</span><span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"n\">a_1</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">unique</span> <span class=\"n\">pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">type</span><span class=\"o\">),</span>\n     <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_unique</span> <span class=\"n\">a_pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">unique</span> <span class=\"n\">pretty</span> <span class=\"n\">type</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">unique</span> <span class=\"n\">pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">type</span><span class=\"o\">),</span>\n     <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_unique</span> <span class=\"n\">a_pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">unique</span> <span class=\"n\">pretty</span> <span class=\"n\">bi</span> <span class=\"n\">type</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">a_1</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih_a</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih_a</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">a_1</span><span class=\"o\">),</span>\n     <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"o\">([</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">a_a</span> <span class=\"bp\">∨</span> <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">a_a_1</span><span class=\"o\">))</span> <span class=\"n\">a</span> <span class=\"n\">a_1</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">var_type</span> <span class=\"n\">body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih_var_type</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">var_type</span><span class=\"o\">)</span>\n   <span class=\"o\">(</span><span class=\"n\">ih_body</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">body</span><span class=\"o\">),</span>\n     <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_var_type</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">var_name</span> <span class=\"n\">bi</span> <span class=\"n\">var_type</span>\n       <span class=\"n\">body</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">var_type</span> <span class=\"n\">body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih_var_type</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">var_type</span><span class=\"o\">)</span>\n   <span class=\"o\">(</span><span class=\"n\">ih_body</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">body</span><span class=\"o\">),</span>\n     <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_var_type</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">var_name</span> <span class=\"n\">bi</span> <span class=\"n\">var_type</span>\n       <span class=\"n\">body</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">type</span> <span class=\"n\">assignment</span> <span class=\"n\">body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih_type</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">type</span><span class=\"o\">)</span>\n   <span class=\"o\">(</span><span class=\"n\">ih_assignment</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">assignment</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih_body</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">body</span><span class=\"o\">),</span>\n     <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"n\">a_assignment</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">var_name</span> <span class=\"n\">type</span> <span class=\"n\">assignment</span> <span class=\"n\">body</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">macro_def</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"o\">:</span> <span class=\"n\">macro_def</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"n\">a_1</span><span class=\"o\">)</span>\n  <span class=\"n\">fn</span> <span class=\"bp\">=</span><span class=\"err\">?</span><span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">fn</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"o\">]:</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"bp\">=</span><span class=\"err\">?</span><span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">on</span> <span class=\"n\">failure</span><span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"bp\">=</span><span class=\"err\">?</span><span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">type_context</span><span class=\"bp\">.</span><span class=\"n\">is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">on</span> <span class=\"n\">failure</span><span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">level</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"n\">a_1</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">unique</span> <span class=\"n\">pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">type</span><span class=\"o\">),</span>\n     <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_unique</span> <span class=\"n\">a_pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">unique</span> <span class=\"n\">pretty</span> <span class=\"n\">type</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">unique</span> <span class=\"n\">pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">type</span><span class=\"o\">),</span>\n     <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_unique</span> <span class=\"n\">a_pretty</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">unique</span> <span class=\"n\">pretty</span> <span class=\"n\">bi</span> <span class=\"n\">type</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">a_1</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih_a</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih_a</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">a_1</span><span class=\"o\">),</span>\n     <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"o\">([</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">a_a</span> <span class=\"bp\">∨</span> <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">a_a_1</span><span class=\"o\">))</span> <span class=\"n\">a</span> <span class=\"n\">a_1</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">var_type</span> <span class=\"n\">body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih_var_type</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">var_type</span><span class=\"o\">)</span>\n   <span class=\"o\">(</span><span class=\"n\">ih_body</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">body</span><span class=\"o\">),</span>\n     <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_var_type</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">var_name</span> <span class=\"n\">bi</span> <span class=\"n\">var_type</span>\n       <span class=\"n\">body</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">var_type</span> <span class=\"n\">body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih_var_type</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">var_type</span><span class=\"o\">)</span>\n   <span class=\"o\">(</span><span class=\"n\">ih_body</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">body</span><span class=\"o\">),</span>\n     <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_bi</span> <span class=\"o\">:</span> <span class=\"n\">binder_info</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_var_type</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">var_name</span> <span class=\"n\">bi</span> <span class=\"n\">var_type</span>\n       <span class=\"n\">body</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">type</span> <span class=\"n\">assignment</span> <span class=\"n\">body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih_type</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">type</span><span class=\"o\">)</span>\n   <span class=\"o\">(</span><span class=\"n\">ih_assignment</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">assignment</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ih_body</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"n\">body</span><span class=\"o\">),</span>\n     <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_var_name</span> <span class=\"o\">:</span> <span class=\"n\">name</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_type</span> <span class=\"n\">a_assignment</span> <span class=\"n\">a_body</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">var_name</span> <span class=\"n\">type</span> <span class=\"n\">assignment</span> <span class=\"n\">body</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">macro_def</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a_a</span> <span class=\"o\">:</span> <span class=\"n\">macro_def</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_a_1</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">expr</span><span class=\"o\">),</span> <span class=\"n\">id_rhs</span> <span class=\"kt\">Prop</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"n\">a_1</span><span class=\"o\">)</span>\n  <span class=\"n\">fn</span> <span class=\"bp\">=</span><span class=\"err\">?</span><span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span><span class=\"o\">]</span> <span class=\"n\">fn</span>\n<span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"o\">]</span>\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>\n</pre></div>",
        "id": 189712525,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1583341834
    },
    {
        "content": "<p>If I understand the elaborator correctly, you might still be able make your original definition work by first rewriting using a lemma of the form</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">meta</span> <span class=\"kn\">lemma</span> <span class=\"n\">trick_the_unfolder</span> <span class=\"o\">:</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span> <span class=\"bp\">=</span> <span class=\"n\">expr</span><span class=\"bp\">.</span><span class=\"n\">contains</span><span class=\"bp\">._</span><span class=\"n\">main</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</pre></div>\n\n\n<p>(since non-applied recursive definitions don't use the smart rewriter)</p>",
        "id": 189712568,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1583341865
    },
    {
        "content": "<p>I see, thank you all</p>",
        "id": 189712688,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1583341930
    },
    {
        "content": "<p>So I assume if I want to use <code>list.any</code>on this, I will directly make it a <code>-&gt; bool</code> function instead of proving decidabilty (like the Coq user says :D ).</p>",
        "id": 189712969,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1583342108
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/113488-general/topic/Equation.20compiler.20_main.20function/near/189712401\" title=\"#narrow/stream/113488-general/topic/Equation.20compiler.20_main.20function/near/189712401\">said</a>:</p>\n<blockquote>\n<p>The <del>Coq</del> Lean 4 users will say you should just write <code>meta def expr.contains (x : expr) : expr -&gt; bool</code> in the first place</p>\n</blockquote>\n<p>I fixed your quote. I think the stance on this has changed in lean 4</p>",
        "id": 189731832,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1583353774
    }
]