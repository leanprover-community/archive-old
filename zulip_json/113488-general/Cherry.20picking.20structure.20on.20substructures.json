[
    {
        "content": "<p>I'm defining what is a smooth map between locally convex spaces. The space of all smooth maps <code>X↠Y</code> is a linear subspace of the space of all functions <code>X→Y</code> and I would like to inherit all the algebraic structure but I get also get all the topology, because <code>X→Y</code> is <code>pi.topological_space</code> if <code>Y</code> is a topological space.  I do not want this topology because <code>X↠Y</code> should be equipped with a different topology. This prevents me from defining <code>X↠Y</code> as a <code>submodule ℝ (X→Y)</code>.</p>\n<p>Is there an easy way to inherit all the algebraic structure? Or do I have to manually write down all the  instances  of<code>has_zero</code> <code>has_add</code> <code>add_comm_group</code> ... ?</p>",
        "id": 215002562,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1603993269
    },
    {
        "content": "<p>I had a look at <code>continuous_linear_map</code> and there all the algebraic structure is spelled out again manually. Isn't there a better way?</p>",
        "id": 215002813,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1603993396
    },
    {
        "content": "<p>You don't need to write instances that will be implied by \"later\" ones, e.g., if you write an instance for <code>add_comm_group</code>, you can skip <code>has_zero</code> and <code>has_add</code></p>",
        "id": 215002814,
        "sender_full_name": "Reid Barton",
        "timestamp": 1603993396
    },
    {
        "content": "<p>(though in some other situations the <code>has_add</code> instance might have more general hypotheses than <code>add_comm_group</code> in which case you would need to write it explicitly)</p>",
        "id": 215002901,
        "sender_full_name": "Reid Barton",
        "timestamp": 1603993439
    },
    {
        "content": "<p>You might like to not write this as a literal subtype of <code>X→Y</code>.  Instead, define a new \"bundled\" object consisting of a map <code>X→Y</code> plus some hypotheses (smoothness).</p>",
        "id": 215003068,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1603993514
    },
    {
        "content": "<p>Then you won't have the pesky other topological space structure.  (I think.). Have a look at continuous linear maps, for an idea of what I mean: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_linear_map\">docs#continuous_linear_map</a></p>",
        "id": 215003267,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1603993594
    },
    {
        "content": "<p>and one gets, eg, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_linear_map.to_normed_space\">docs#continuous_linear_map.to_normed_space</a></p>",
        "id": 215003404,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1603993658
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113488-general/topic/Cherry.20picking.20structure.20on.20substructures/near/215003267\">said</a>:</p>\n<blockquote>\n<p>Then you won't have the pesky other topological space structure.  (I think.). Have a look at continuous linear maps, for an idea of what I mean: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_linear_map\">docs#continuous_linear_map</a></p>\n</blockquote>\n<p>Ok, I will probably do it similarly as <code>continuous_linear_map</code>.</p>",
        "id": 215005403,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1603994504
    },
    {
        "content": "<p>By the way, did you see that mathlib has the notion of a smooth function?  <a href=\"https://leanprover-community.github.io/mathlib_docs/find/times_cont_diff\">docs#times_cont_diff</a></p>\n<p>But this is between normed spaces, I don't know how you define smooth between locally convex spaces?</p>",
        "id": 215010572,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1603996991
    },
    {
        "content": "<p>A smooth map transforms smooth curve to a smooth curve. To define smooth curve you just need topological vector space. Definition of  <a href=\"https://en.wikipedia.org/wiki/Convenient_vector_space#Smooth_mappings\">smooth map on wiki</a></p>",
        "id": 215033428,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1604008433
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"346070\">@Tomas Skrivan</span> you might be interested to see that <span class=\"user-mention\" data-user-id=\"132889\">@Jean Lo</span> has just updated the old PR on local convexity to a new version <a href=\"https://github.com/leanprover-community/mathlib/issues/4827\">#4827</a> that will hopefully join mathlib soon.  Anyone is welcome to make comments on an open PR, and I am sure yours would be useful!</p>",
        "id": 215097085,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1604066157
    }
]