[
    {
        "content": "<p>If I wanted to import code into Lean using some data format like OMDoc/MMT (do there exist others?), does Lean 4 support importing of this format?  Ideally there would be a format that you can convert to/from any proof assistant language in a faithful way.  If there are a total of N proof assistant languages that you wanted to share knowledge between, then a universal data format for doing this gives you O(N) conversion scripts to write instead of O(N^2).</p>",
        "id": 262884975,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1638035363
    },
    {
        "content": "<p>At the moment, I don't think so. But just to spice it up, consider that different languages have different expressing powers.</p>",
        "id": 262889373,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1638042041
    },
    {
        "content": "<p>I don't think there's even that many, if any, conversion scripts at all at the moment. When it happens, porting is done by hand.</p>",
        "id": 262889475,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1638042178
    },
    {
        "content": "<p>Best example of that is that people are spending months to translate from Lean... to Lean. The Lean 4 port is already quite a big thing, so I dare not imagine when it's between properly different languages.</p>",
        "id": 262889638,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1638042367
    },
    {
        "content": "<p>However, I assume that an AST is a close first-order approximation of the universal language you're looking for.</p>",
        "id": 262889827,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1638042653
    },
    {
        "content": "<p>See <a href=\"https://deducteam.github.io/\">https://deducteam.github.io/</a> however</p>",
        "id": 262890581,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1638043649
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Does.20there.20exist.20a.20universal.20data.20format.20for.20Lean.2C.20Coq.2C.20etc.3F/near/262890581\">said</a>:</p>\n<blockquote>\n<p>See <a href=\"https://deducteam.github.io/\">https://deducteam.github.io/</a> however</p>\n</blockquote>\n<p>Says unicorns have taken over the github servers for now.</p>",
        "id": 262892964,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1638047148
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/Does.20there.20exist.20a.20universal.20data.20format.20for.20Lean.2C.20Coq.2C.20etc.3F/near/262889827\">said</a>:</p>\n<blockquote>\n<p>However, I assume that an AST is a close first-order approximation of the universal language you're looking for.</p>\n</blockquote>\n<p>Can you provide a link to the type of AST needed that would be sufficient for encoding faithfully Lean?</p>",
        "id": 262893026,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1638047229
    },
    {
        "content": "<p>I'd encourage you to look in stream#lean4.</p>",
        "id": 262893039,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1638047272
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>  Okay, I see #lean4 on the left in Zulip.  But looks like a lean4 Q&amp;A to me</p>",
        "id": 262893081,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1638047293
    },
    {
        "content": "<p>There's some information about the port.</p>",
        "id": 262893114,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1638047365
    },
    {
        "content": "<p>I don't know much more.</p>",
        "id": 262893122,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1638047378
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathport\">https://github.com/leanprover-community/mathport</a> may be of interest to you.</p>",
        "id": 262895592,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1638051022
    }
]