[
    {
        "content": "<p>Did you ever notice the space in <code>#check nat</code> is optional?</p>",
        "id": 195212507,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1587745733
    },
    {
        "content": "<p>Clearly a bug with the syntax highlighting of <code>#checknat</code>.</p>",
        "id": 195213576,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1587746213
    },
    {
        "content": "<p>Yes, Lean is more lenient than the VScode plugin syntax highlighting...</p>",
        "id": 195213934,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1587746382
    },
    {
        "content": "<p>Of course there is nothing specific to nat here. You can check other things.</p>",
        "id": 195214018,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1587746412
    },
    {
        "content": "<p>Oh wow, this approach generalizes to other commands as well:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">#</span><span class=\"n\">printnat</span>\n<span class=\"bp\">#</span><span class=\"n\">eval0</span>\n</pre></div>",
        "id": 195217035,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1587747835
    },
    {
        "content": "<p>Unlocking mysteries of Lean...</p>",
        "id": 195217140,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1587747869
    },
    {
        "content": "<p>I'd noticed the <code>#eval0</code> example but I had no idea we could put <code>nat</code> there...</p>",
        "id": 195217231,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1587747915
    },
    {
        "content": "<p>what if I define a user-command <code>#chec</code></p>",
        "id": 195217283,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587747943
    },
    {
        "content": "<p>We said Lean is white-space sensitive only in import, right?</p>",
        "id": 195217360,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1587747964
    },
    {
        "content": "<p>Why are we using all those white spaces?</p>",
        "id": 195217396,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1587747976
    },
    {
        "content": "<p>With all the spaces we saved at the beginning of this thread, did you know we could do things like:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"bp\">@</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">rec</span>\n</code></pre></div>\n\n\n<p>Combining both tricks:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">#</span><span class=\"kn\">check</span><span class=\"bp\">@</span>    <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">rec</span>\n</code></pre></div>",
        "id": 203431162,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1594324134
    },
    {
        "content": "<p>We should use </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">101</span><span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>more too, gotta reduce those git download times.</p>",
        "id": 203432357,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1594324707
    },
    {
        "content": "<p>You mean</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span><span class=\"o\">)(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"bp\">ℕ→ℕ→ℕ</span><span class=\"o\">):</span><span class=\"n\">f</span> <span class=\"mi\">101</span><span class=\"n\">n</span><span class=\"bp\">=</span><span class=\"mi\">0</span><span class=\"o\">:=</span><span class=\"n\">sorry</span>\n</code></pre></div>",
        "id": 203435291,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594326145
    },
    {
        "content": "<p>Haha yes but then maybe people would miss the trick <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 203435485,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1594326251
    },
    {
        "content": "<p>Reminds me of good ol' <code>\\frac12</code>...</p>",
        "id": 203435922,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1594326483
    }
]