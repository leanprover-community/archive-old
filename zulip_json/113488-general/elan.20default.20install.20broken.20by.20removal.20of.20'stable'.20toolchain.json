[
    {
        "content": "<p>When I run the <code>elan</code> install script and select the default installation, I get the following output:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>info: downloading installer\n\nWelcome to Lean!\n\nThis will download and install Elan, a tool for managing different Lean\nversions used in packages you create or download. It will also install a\ndefault version of Lean and its package manager, leanpkg, for editing files not\nbelonging to any package.\n\nIt will add the leanpkg, lean, and elan commands to Elan's bin directory,\nlocated at:\n\n  /home/jannis/.elan/bin\n\nThis path will then be added to your PATH environment variable by modifying the\nprofile file located at:\n\n  /home/jannis/.profile\n\nYou can uninstall at any time with elan self uninstall and these changes will\nbe reverted.\n\nCurrent installation options:\n\n     default toolchain: stable\n  modify PATH variable: yes\n\n1) Proceed with installation (default)\n2) Customize installation\n3) Cancel installation\n\n\ninfo: syncing channel updates for 'stable'\ninfo: latest update on stable, lean version drop\ninfo: downloading component 'lean'\nError(Download(HttpStatus(404)), State { next_error: None, backtrace: None })\nerror: could not download nonexistent lean version `stable`\ninfo: caused by: could not download file from 'https://github.com/leanprover-community/lean/releases/tag/drop' to '/home/jannis/.elan/tmp/wjh41qwqk8hh4pps_file'\ninfo: caused by: http request returned an unsuccessful status code: 404\n</code></pre></div>\n\n<p>I guess the  <code>stable</code> toolchain isn't a thing any more? If this is intentional, <code>elan</code> should be updated to avoid this error.</p>",
        "id": 214330525,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1603468284
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 214330849,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603468454
    },
    {
        "content": "<p>I don't think we did anything to remove the stable toolchain recently. My wild guess is that <code>elan</code> might not be dealing with the recent <a href=\"https://github.com/leanprover-community/lean/releases/tag/dropDLO\">custom \"dropDLO\" release</a> properly.</p>",
        "id": 214331025,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1603468551
    },
    {
        "content": "<p>Yeah, that's definitely not a release name elan excepts...</p>",
        "id": 214331310,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1603468691
    },
    {
        "content": "<p>Aha! That'll be the culprit.</p>",
        "id": 214331311,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1603468691
    },
    {
        "content": "<p>Would it help if this release were demoted to a mere tag?</p>",
        "id": 214331450,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1603468766
    },
    {
        "content": "<p>I think we can delete this release; if <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> needs it again he can re-create it (temporarily).</p>",
        "id": 214331745,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1603468923
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256311\">@Jannis Limperg</span> see if <code>elan</code> works now?</p>",
        "id": 214331866,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1603468969
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> You can also push to a tag on your own fork.</p>",
        "id": 214331910,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1603468995
    },
    {
        "content": "<p>Yes, <code>elan</code> default install works again. Thanks a lot!</p>",
        "id": 214331938,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1603469018
    },
    {
        "content": "<p>Sorry, I didn't mean to break elan.</p>",
        "id": 214335565,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603470853
    },
    {
        "content": "<p>What should I do? Push some tag to my fork? What names <code>elan</code> will accept?</p>",
        "id": 214335701,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603470930
    },
    {
        "content": "<p>My goal is to use this version of <code>lean</code> in the CI for <a href=\"https://github.com/leanprover-community/mathlib/tree/drop-DLO\">https://github.com/leanprover-community/mathlib/tree/drop-DLO</a></p>",
        "id": 214335889,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603471011
    },
    {
        "content": "<p>Do you need the CI? Perhaps you could build the <code>dropDLO</code> Lean tag locally and use it to build mathlib.</p>",
        "id": 214336302,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1603471206
    },
    {
        "content": "<p>I was going to ask for help from other people, and this would be much easier if it worked with<code>elan</code>.</p>",
        "id": 214336453,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603471298
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> I think you can push a <code>dropDLO</code> tag to your fork (with GitHub actions enabled) and then change <a href=\"https://github.com/leanprover-community/mathlib/blob/drop-DLO/leanpkg.toml#L4\">this line</a> to <code>urkud/lean:dropDLO</code>.</p>",
        "id": 214336544,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1603471327
    },
    {
        "content": "<p>Not 100% sure though, I haven't tried this myself before.</p>",
        "id": 214336576,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1603471343
    },
    {
        "content": "<p>I'll try it.</p>",
        "id": 214336637,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603471385
    }
]