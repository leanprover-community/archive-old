[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kd\">axiom</span> <span class=\"n\">Set</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"kd\">axiom</span> <span class=\"n\">mem</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"c1\">-- flipped ∈</span>\n<span class=\"kd\">axiom</span> <span class=\"n\">describe</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">mem</span> <span class=\"n\">s</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">contra</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n  <span class=\"k\">let</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">¬</span> <span class=\"n\">mem</span> <span class=\"n\">x</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">describe</span> <span class=\"n\">p</span> <span class=\"k\">with</span> <span class=\"n\">s</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">mem</span> <span class=\"n\">s</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">¬</span> <span class=\"n\">mem</span> <span class=\"n\">x</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">mem</span> <span class=\"n\">s</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"o\">,</span>\n  <span class=\"n\">finish</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I think 8th &amp; 9th lines are tediously long. How to improve that?</p>",
        "id": 296082143,
        "sender_full_name": "Jiatong Yang",
        "timestamp": 1661859240
    },
    {
        "content": "<p>You can zip the whole thing down to:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kd\">axiom</span> <span class=\"n\">Set</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"kd\">axiom</span> <span class=\"n\">mem</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"bp\">→</span> <span class=\"n\">Set</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"c1\">-- flipped ∈</span>\n<span class=\"kd\">axiom</span> <span class=\"n\">describe</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">Set</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">mem</span> <span class=\"n\">s</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">contra</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">describe</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">¬</span> <span class=\"n\">mem</span> <span class=\"n\">x</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">s</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span> <span class=\"n\">using</span> <span class=\"n\">congr_fun</span> <span class=\"n\">h</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 296116028,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1661868302
    }
]