[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.algebra.subalgebra</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">subring</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"bp\">‚ä•</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">trace.class_instances</span> <span class=\"n\">true</span>\n<span class=\"kd\">set_option</span> <span class=\"kd\">class</span><span class=\"bp\">.</span><span class=\"n\">instance_max_depth</span> <span class=\"mi\">4</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">apply_instance</span> <span class=\"o\">:</span> <span class=\"n\">algebra</span> <span class=\"o\">(</span><span class=\"n\">foo</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 213897891,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1603188516
    },
    {
        "content": "<p>This code times out (<strong>warning</strong>)</p>",
        "id": 213897912,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1603188524
    },
    {
        "content": "<p>with error message being the following repeated a million times:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"n\">cached</span> <span class=\"n\">failure</span> <span class=\"n\">for</span> <span class=\"bp\">@</span><span class=\"n\">is_subring</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_ring</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">foo</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_ring</span> <span class=\"n\">R</span> <span class=\"n\">_inst_1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">carrier</span>\n</code></pre></div>",
        "id": 213897930,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1603188539
    },
    {
        "content": "<p>What does \"cached failure\" mean?</p>",
        "id": 213897981,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1603188566
    },
    {
        "content": "<p>Cached failure means that the type class code couldn't find an instance for this type before, and now doesn't bother again.  (It has \"cached the failure\".)</p>",
        "id": 213898630,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1603188978
    },
    {
        "content": "<p>This looks like a bug tbh.</p>",
        "id": 213898637,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1603188985
    }
]