[
    {
        "content": "<p>I found this bug in 3.13, the MWE might need some small variation to work on earlier versions, but apparently <code>calc</code> doesn't pay attention to name scoping when using <code>@[trans]</code> theorems:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">class</span> <span class=\"n\">ring</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">mk</span>\n<span class=\"kn\">instance</span> <span class=\"n\">foo</span><span class=\"bp\">.</span><span class=\"n\">dvd</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">has_dvd</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">sorry</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">trans</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">dvd_trans</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"err\">∣</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">ring</span> <span class=\"bp\">ℤ</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"n\">def</span> <span class=\"n\">bar</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">bar</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">bar</span><span class=\"bp\">.</span><span class=\"n\">dvd</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">has_dvd</span> <span class=\"n\">bar</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">sorry</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">trans</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">dvd_trans</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">bar</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"err\">∣</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"err\">∣</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"k\">calc</span> <span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">h1</span>\n   <span class=\"bp\">...</span> <span class=\"err\">∣</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">h2</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">bar</span>\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">dvd_trans</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">a</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">ℤ</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">bar</span>\n</code></pre></div>",
        "id": 197839859,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589707905
    },
    {
        "content": "<p>Oh, actually in my original example <code>bar.dvd_trans</code> was not marked as <code>@[trans]</code>, but I see that the example depends on this. So maybe it's not bad name resolution but rather some kind of <code>@[trans]</code> shadowing</p>",
        "id": 197839995,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589708098
    },
    {
        "content": "<p>It seens that <code>calc</code> supports only one <code>@[trans]</code> per relation</p>",
        "id": 197842400,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589711822
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/.60subset.60.20on.20.60finset.60\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/.60subset.60.20on.20.60finset.60</a></p>",
        "id": 197842422,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589711880
    },
    {
        "content": "<p>I'm still not really sure what's happening here. The actual example is <code>pnat.dvd_trans</code>, which AFAICT is not marked <code>@[trans]</code>, yet it still interferes with the calc proof</p>",
        "id": 197842782,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589712508
    },
    {
        "content": "<p>making <code>pnat.dvd_trans</code> protected solves the issue</p>",
        "id": 197842793,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589712541
    }
]