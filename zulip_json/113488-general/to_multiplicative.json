[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>490,725 {# change these line numbers\n  /lemma/ { h\n    /@/ { s/@\\[\\(.*\\)\\] lemma \\([a-z_.&#39;]*\\).*/@[\\1, to_additive \\2]/;b goto }\n    s/lemma \\([a-z_.&#39;]*\\).*/@[to_additive \\1]/\n    : goto\n    p; x\n    s/@\\[.*\\] // }\n  s/nonneg/one_le/g\n  s/nonpos/le_one/g\n  s/pos/one_lt/g\n  s/neg/lt_one/g\n  s/add/mul/g\n  s/zero/one/g\n  s/+/*/g\n  s/0/1/g }\n</code></pre></div>",
        "id": 198869112,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590572069
    },
    {
        "content": "<p>This <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span> sed script might be helpful if you want to turn some additive file into a multiplicative file with <code>@[to_additive]</code> attributes.</p>",
        "id": 198869158,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590572105
    },
    {
        "content": "<p>Also, it doesn't understand <code>theorem</code>, at the moment.</p>",
        "id": 198869264,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590572174
    },
    {
        "content": "<p>How hard would it be to have a <code>to_multiplicative</code> attribute that is the inverse of <code>to_additive</code>. That way, users can determine in which \"language/notation\" they primarily want to develop a certain part of a theory, and automatically translate from <code>mul</code> to <code>add</code> using <code>to_additive</code> but alternatively also translate from <code>add</code> to <code>mul</code> using <code>to_multiplicative</code>.</p>\n<p>We recently had a PR on lattice groups where this would have been the more natural approach (only the additive story is presented in the informal literatue). I can imagine that certain argument about abelian groups are typically presented using additive notation, but are currently in multiplicative notation because that's how mathlib wants it.</p>",
        "id": 251194846,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630309780
    },
    {
        "content": "<p><del>How hard would it be to have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≥</mo></mrow><annotation encoding=\"application/x-tex\">\\geq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mrel\">≥</span></span></span></span>? Definitely possible, but a huge PITA for lots of reasons. Would it be as bad as this?</del></p>",
        "id": 251195671,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630310321
    },
    {
        "content": "<p>I guess not, because lean would generate the same code in both cases, just from different source</p>",
        "id": 251195904,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1630310436
    },
    {
        "content": "<p>Oh it's not the same as that at all is it, you're just asking for an <em>attribute</em> which makes a multiplicative lemma from an additive one? Then the CS people will complain about code duplication but actually to me as a mathematician this sounds like a lovely idea.</p>",
        "id": 251195964,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630310480
    },
    {
        "content": "<p>Which makes me wonder if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≥</mo></mrow><annotation encoding=\"application/x-tex\">\\ge</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mrel\">≥</span></span></span></span> could be notation for <code>has_le.le</code> with the arguments flipped, but that would probably be an actual bad idea</p>",
        "id": 251195987,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1630310501
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/to_multiplicative/near/251195964\">said</a>:</p>\n<blockquote>\n<p>Oh it's not the same as that at all is it, you're just asking for an <em>attribute</em> which makes a multiplicative lemma from an additive one? Then the CS people will complain about code duplication but actually to me as a mathematician this sounds like a lovely idea.</p>\n</blockquote>\n<p>I guess <code>to_additive</code> and <code>to_multiplicative</code> could even share quite a bit of code. So the code duplication shouldn't even be too bad, hopefully.</p>",
        "id": 251196925,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630311083
    },
    {
        "content": "<p>I think code duplication isn't too bad, but <code>to_additive</code> seems already brittle enough that you don't want to also maintain the reverse attribute.</p>",
        "id": 251197402,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1630311391
    }
]