[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">abs_pow</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_ordered_comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"err\">^</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">abs</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"err\">^</span><span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">rec_on</span> <span class=\"n\">n</span> <span class=\"n\">abs_one</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"n\">ih</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">abs_mul</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"err\">$</span> <span class=\"n\">congr_arg</span> <span class=\"bp\">_</span> <span class=\"n\">ih</span>\n</pre></div>",
        "id": 126016992,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1525299504
    },
    {
        "content": "<p>but we all know what the answer is</p>",
        "id": 126016994,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1525299515
    },
    {
        "content": "<p>this thing is in core</p>",
        "id": 126016995,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1525299519
    },
    {
        "content": "<p>Kenny, you need to work on making your issues more explicit. These code snippets don't speak for themselves</p>",
        "id": 126017097,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1525299719
    },
    {
        "content": "<p>oh sorry</p>",
        "id": 126017150,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1525299792
    },
    {
        "content": "<p>I mean, we should add this in our library</p>",
        "id": 126017152,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1525299800
    },
    {
        "content": "<p>I think it's called pow_abs in mathlib</p>",
        "id": 126034375,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1525335044
    },
    {
        "content": "<p>oh</p>",
        "id": 126034378,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1525335056
    },
    {
        "content": "<p>aha</p>",
        "id": 126034379,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1525335062
    },
    {
        "content": "<p>very consistent naming</p>",
        "id": 126034387,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1525335083
    }
]