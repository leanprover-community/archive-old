[
    {
        "content": "<p>In Lean 3 we have to write sets in this slightly funny (to me) way (AFAIK):</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">commutator</span> <span class=\"o\">:</span> <span class=\"n\">subgroup</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"n\">subgroup</span><span class=\"bp\">.</span><span class=\"n\">normal_closure</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"bp\">∃</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"bp\">*</span> <span class=\"n\">q</span> <span class=\"bp\">*</span> <span class=\"n\">p</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">q</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">}</span>\n</code></pre></div>\n\n\n<p>(<a href=\"https://github.com/leanprover-community/mathlib/blob/64335decde43b892374d2609f973ef8061a18e64/src/group_theory/abelianization.lean#L17\">link to mathlib source for MWE</a>). This is quite a neat trick: the fact that all the variables have type alpha is inferred. But I want more. In Lean 4, can we have</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"bp\">*</span> <span class=\"n\">q</span> <span class=\"bp\">*</span> <span class=\"n\">p</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">q</span><span class=\"bp\">⁻¹</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">X</span>\n</code></pre></div>\n\n\n<p>? In Lean 3??</p>\n<p>I didn't even know there was any other Lean 3 notation for sets <em>at all</em> in fact, until someone on the chat (let me know who) pointed out the existence of <code>[set.sep](https://github.com/leanprover-community/lean/blob/05d7184a6642e240e7bc659420267595893ad7bd/library/init/data/set.lean#L34)</code>, a notation typeclass making the notation <code>{ a ∈ c | p a }</code> work.</p>",
        "id": 204638139,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595403993
    }
]