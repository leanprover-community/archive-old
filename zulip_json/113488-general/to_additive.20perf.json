[
    {
        "content": "<p>Is <code>to_additive</code> super slow? I'm building mathlib locally and whenever it seems \"stuck\" for a second or two it's on a lemma with <code>to_additive</code> whose proof often looks otherwise totally trivial</p>",
        "id": 261802151,
        "sender_full_name": "Reid Barton",
        "timestamp": 1637163791
    },
    {
        "content": "<p>It could just be a matter of which files it's on currently I suppose</p>",
        "id": 261802179,
        "sender_full_name": "Reid Barton",
        "timestamp": 1637163804
    },
    {
        "content": "<p>right now the slow things it's working on are category theory files that have multiple <code>tidy</code> invocations per lemma, and <em>s l o w l y</em> crunching through <code>group_theory.subgroup.basic</code></p>",
        "id": 261802909,
        "sender_full_name": "Reid Barton",
        "timestamp": 1637164076
    },
    {
        "content": "<p>Uh oh... The changes I made to <code>to_additive</code> (a couple of months ago) could definitely have some performance issues.</p>",
        "id": 261803643,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1637164342
    },
    {
        "content": "<p>e.g. it just spent several seconds \"parsing\" at<br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/c7441af1c38511c70c05fb82029af4e1cb3d6275/src/deprecated/subgroup.lean#L187\">https://github.com/leanprover-community/mathlib/blob/c7441af1c38511c70c05fb82029af4e1cb3d6275/src/deprecated/subgroup.lean#L187</a></p>",
        "id": 261803671,
        "sender_full_name": "Reid Barton",
        "timestamp": 1637164355
    },
    {
        "content": "<p>I'll take a look</p>",
        "id": 261803813,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1637164411
    },
    {
        "content": "<p>I cannot reproduce:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>subgroup.lean:188:6\nparsing took 0.329ms\nsubgroup.lean:188:6\ntype checking of mem_norm_comm_iff took 0.0853ms\nsubgroup.lean:188:6\ndecl post-processing of mem_norm_comm_iff took 13.2ms\nsubgroup.lean:188:6\nelaboration of mem_norm_comm_iff took 1.78ms\n</code></pre></div>",
        "id": 261805965,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1637165234
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>vandoorn@pc93-178:~/projects/mathlib<span class=\"o\">((</span>HEAD detached at origin/master<span class=\"o\">))</span>$ <span class=\"nb\">time</span> lean --make src/deprecated/subgroup.lean\n\nreal    0m1.488s\nuser    0m1.342s\nsys 0m0.148s\n</code></pre></div>",
        "id": 261806143,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1637165304
    },
    {
        "content": "<p>Does the file (or individual declarations) compile more quickly if you remove <code>to_additive</code>?</p>",
        "id": 261806351,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1637165403
    },
    {
        "content": "<p>Hmm</p>",
        "id": 261807279,
        "sender_full_name": "Reid Barton",
        "timestamp": 1637165756
    },
    {
        "content": "<p>I don't really want to do experiments like that at the moment, but I can try later</p>",
        "id": 261807361,
        "sender_full_name": "Reid Barton",
        "timestamp": 1637165775
    }
]