[
    {
        "content": "<p>Just to see what's possible to do with it, I had a go at rearranging the content of <code>data/finsupp/basic</code> (<a href=\"https://github.com/leanprover-community/mathlib/pull/15699\">#15699</a>) to divide it up into parts that could potentially be split into separate files.  To be clear, this was just an experiment and I don't intend to try making drastic changes without consultation!</p>\n<p>On this first pass through the file I was able to arrange it into three major parts:</p>\n<ul>\n<li>about 1300 lines of more basic material</li>\n<li>about 400 lines on <code>sum</code> and <code>prod</code></li>\n<li>about 1300 lines of further lemmas</li>\n</ul>\n<p>There's no grand architectural philosophy behind this particular arrangement.  My main aim was just to group together the main lemmas about sums and products (since this seems like a natural candidate to become a separate file), and to move up any sections that can go before those lemmas.  I expect there are finer and more useful ways to carve up this file into still smaller coherent pieces.  But even if we did no more than to split the file into these three pieces, that might still be an improvement over the unwieldy 2900 line monster we currently have.</p>",
        "id": 290992307,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1658902020
    },
    {
        "content": "<p>So what do people think?  I <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/cyclic.20ring/near/289443143\">understand</a> that <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> and <span class=\"user-mention\" data-user-id=\"330967\">@Wrenna Robson</span> were interested in refactoring this file — did you get anywhere with this?</p>",
        "id": 290992408,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1658902126
    },
    {
        "content": "<p>I didn't, no, but once I'm awake and up I'll have a look at this.</p>",
        "id": 290992443,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1658902171
    },
    {
        "content": "<p>Do the further lemmas have any kind of theme?</p>",
        "id": 290992466,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1658902198
    },
    {
        "content": "<p>Lots of them are sections about ways to make new finsupps from old ones: for example, <code>filter p f</code> or <code>curry (f : (α × β) →₀ M) : α →₀ (β →₀ M)</code>.  But this is also true of many of the lemmas in the first block; the main difference is whether the sections also contain lemmas involving <code>sum</code> and <code>prod</code>.</p>",
        "id": 290992891,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1658902596
    },
    {
        "content": "<p>So we could plausibly, for example, move most of the lemmas about <code>filter</code> into the first block and then have lemmas like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finsupp.prod_filter_index\">docs#finsupp.prod_filter_index</a> coming later.</p>",
        "id": 290993103,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1658902790
    },
    {
        "content": "<p>I'd note that however we split finsupp, we should ideally have the dfinsupp file split along similar lines</p>",
        "id": 290997638,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658906310
    },
    {
        "content": "<p>I agree, with the caveat that it may be easier to find the right way to split finsupp first, and then use that as a model to divide dfinsupp as a separate project — we shouldn't necessarily be constrained to keep finsupp and dfinsupp in sync every step of the way.</p>",
        "id": 290999127,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1658907407
    },
    {
        "content": "<p>Note that I started such a split over at <a href=\"https://github.com/leanprover-community/mathlib/pull/11109\">#11109</a>, but it ended up conflicting with other stuff I was doing.</p>",
        "id": 291006827,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1658912685
    },
    {
        "content": "<p>It's a shame that the computability question seems intractable.</p>",
        "id": 291007676,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1658913204
    },
    {
        "content": "<p>Your spacing looks reasonably sensible to me.</p>",
        "id": 291007799,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1658913252
    },
    {
        "content": "<p>I nearly always approve of splitting files! Anything over 1000 lines is too big in my book.</p>",
        "id": 291010312,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1658914722
    },
    {
        "content": "<p>I'm aiming to keep this first move quite conservative, just to make some progress on making the files more manageable — there's lots of opportunity to get derailed by trying to work out the exact best way to arrange things, until nothing at all gets done.</p>\n<p>On the other hand, I'm also very aware that we don't want to keep making further splits and rearrangements in lots of subsequent PRs, since this introduces a series of merge conflicts for any other projects that touch finsupp.</p>\n<p>On the other other hand, if these subsequent tweaks are to the less used parts of the file then their potential for raising merge conflicts is correspondingly less.</p>",
        "id": 291011394,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1658915400
    },
    {
        "content": "<p>So we might start by splitting into <code>data.finsupp.basic</code>, <code>data.finsupp.prod</code> and <code>data.finsupp.everything_else</code>, where the stuff in the first two parts is the more commonly used material that we shouldn't have to revisit, and the stuff in the third part can be further subdivided later without causing too much pain.</p>",
        "id": 291012035,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1658915805
    },
    {
        "content": "<p>The material about <code>finsupp.sum</code> and <code>finsupp.prod</code> should go to <code>algebra.big_operators.finsupp</code>.</p>",
        "id": 291012110,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1658915857
    },
    {
        "content": "<p>The problem with this approach, as I experienced it, is that many <code>finsupp</code> constructions depend on <code>finsupp.sum</code>.</p>",
        "id": 291012215,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1658915900
    },
    {
        "content": "<p>That's one reason I started by internally rearranging <code>data.finsupp.basic</code>, to more easily see which parts don't depend on <code>sum</code> and <code>prod</code>.</p>",
        "id": 291012697,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1658916194
    },
    {
        "content": "<p>Ok, I've moved a couple of (seemingly less-used) sections out of block 1 down to block 3 to keep <code>data.finsupp.basic</code> down to about 1000 lines.  Then I've split off block 3 into a new <code>data.finsupp.misc</code> (temporary name) and moved the <code>prod</code> and <code>sum</code> lemmas into <code>algebra.big_operators.finsupp</code>.  Now let's see what breaks! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 291042874,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1658932341
    },
    {
        "content": "<p>This passes CI now.  Only four files import <code>data.finsupp.misc</code>, so if we want to further refactor that into smaller parts it should be possible to do it in a further PR without too much disruption.</p>",
        "id": 291106278,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1658953973
    },
    {
        "content": "<p>Could someone suggest a better name for <code>data.finsupp.misc</code>?</p>",
        "id": 291106401,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1658954029
    },
    {
        "content": "<p>Usually we have <code>.defs</code> and then <code>.basic</code>, rather than <code>.basic</code> and <code>.another_basic</code>.</p>",
        "id": 291123531,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1658964269
    },
    {
        "content": "<p>I've just renamed the files and set the PR to <code>awaiting-review</code>.  Once I'm happy that there's general consensus that this arrangement of material is right then I'll edit the docstrings of the three files and take out the temporary comments splitting up the <code>section</code>s.</p>",
        "id": 291163105,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1659002918
    },
    {
        "content": "<p>I'm going to go ahead and say that the absence of any objection suggests that the split is good. So please go ahead and take it out of temporary state.</p>",
        "id": 293688916,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1660645377
    },
    {
        "content": "<p>Can someone help me figure out how to resolve the merge conflict on this (<a href=\"https://github.com/leanprover-community/mathlib/pull/15699\">#15699</a>)?  I first made the edit to <code>data/finsupp/basic</code>, cutting out a load of material and moving it to two other files, about 3 weeks ago.  Now there's a merge conflict on <code>data/finsupp/basic</code> amounting to about 700 lines.  Some of this is perhaps due to changes that have been made to <code>data/finsupp/basic</code> in the past 3 weeks, such as <a href=\"https://github.com/leanprover-community/mathlib/pull/15443\">#15443</a>, so I want to be careful not to accidentally delete anything that was added in those PRs.  Is there a straightforward way to make sure I do this right without choring through 700 lines?</p>",
        "id": 293910071,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1660747172
    },
    {
        "content": "<p>Look at the history of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/data.finsupp.basic/src\">src#data.finsupp.basic</a></p>",
        "id": 293910686,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1660747330
    },
    {
        "content": "<p>I don't know an easy way if you did more complicated things than just move a big chunk of those lines. So for example, if in the middle of those 700 lines you just cut 500 and pasted in another file, then you can just find the endpoints and try again.</p>",
        "id": 293910705,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1660747336
    },
    {
        "content": "<p>But if a lot of adjacent definitions ended up in different places then you probably have to redo the splitting manually.</p>",
        "id": 293910895,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1660747384
    },
    {
        "content": "<p>From <a href=\"https://github.com/leanprover-community/mathlib/commits/master/src/data/finsupp/basic.lean\">https://github.com/leanprover-community/mathlib/commits/master/src/data/finsupp/basic.lean</a>, I'd say pay attention to <a href=\"https://github.com/leanprover-community/mathlib/pull/15443\">#15443</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/15642\">#15642</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/16017\">#16017</a>.</p>",
        "id": 293910947,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1660747398
    },
    {
        "content": "<p>Thanks</p>",
        "id": 293911801,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1660747622
    },
    {
        "content": "<p>It's 700 lines but the \"incoming change\" is empty... I guess you can just accept the \"current change\".</p>",
        "id": 293912833,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1660747878
    },
    {
        "content": "<p>No, it's not so straightforward, because the <code>&gt;&gt;&gt;&gt;&gt;&gt;&gt; master</code> side contains material that I've cut out and moved elsewhere, so I don't want to keep it here.</p>",
        "id": 293918175,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1660749584
    },
    {
        "content": "<p>I would maybe recommend splitting one part out at a time rather than all three or so new files at once</p>",
        "id": 293918338,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660749631
    },
    {
        "content": "<p>That way the conflicts are smaller</p>",
        "id": 293918370,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660749644
    },
    {
        "content": "<p>Oh, but I guess I could resolve the conflict by keeping everything, as <span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span> suggests, and then I'll get compilation errors where definition/lemma names are repeated, which will tell me what I should delete from <code>data/finsupp/basic</code>.</p>",
        "id": 293918643,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1660749740
    },
    {
        "content": "<p>That guarantees I don't delete anything I shouldn't in the merge conflict, and then gets the compiler to do the work of figuring out what I should delete rather than manually checking it all lemma by lemma.</p>",
        "id": 293919057,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1660749889
    },
    {
        "content": "<p>Ok, the merge conflict is resolved and I've edited the docstrings.  But I also moved one more lemma that I'd missed from <code>finsupp/basic</code> to <code>algebra/big_operators/finsupp</code>, so I'm waiting for CI to give it the all clear.</p>",
        "id": 294158391,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1660852199
    },
    {
        "content": "<p>Could I ask for a pause on changes to <code>data/finsupp/basic</code> until <a href=\"https://github.com/leanprover-community/mathlib/pull/15699\">#15699</a> is merged?  I just resolved another merge conflict that arose while I was waiting for the previously fixed version to compile.</p>",
        "id": 294338524,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1660932906
    },
    {
        "content": "<p>It's queued to build, delegated, and I've given the <code>bors r+</code> instruction, so hopefully it should merge in the next few hours.</p>",
        "id": 294339067,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1660933129
    },
    {
        "content": "<p>Stuart, it seems that my PR is building with yours!  I have not touched <code>finsupp.basic</code>, but am importing it: let's see how it plays out!</p>",
        "id": 294346738,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1660936187
    },
    {
        "content": "<p>(I had merged my PR with yours and everything worked earlier today.)</p>",
        "id": 294346896,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1660936229
    },
    {
        "content": "<p>... and it's done!</p>",
        "id": 294380700,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1660956689
    },
    {
        "content": "<p>The next project will be to split <code>dfinsupp</code> along similar lines, as discussed <a href=\"#narrow/stream/113488-general/topic/finsupp.20refactor/near/290997638\">above</a>.</p>",
        "id": 294381158,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1660957250
    },
    {
        "content": "<p>I already opened <a href=\"https://github.com/leanprover-community/mathlib/pull/16165\">#16165</a> to take advantage of the refactor!</p>",
        "id": 294382337,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1660958747
    },
    {
        "content": "<p>Thanks for this: small files are much better!</p>",
        "id": 294382383,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1660958773
    },
    {
        "content": "<p>I've started a simple refactor of <code>data/dfinsupp/basic</code> by moving ~560 lines about <code>dfinsupp.sum</code> and <code>dfinsupp.prod</code> to a new file, <code>algebra/big_operators/dfinsupp</code> (<a href=\"https://github.com/leanprover-community/mathlib/pull/16174\">#16174</a>).</p>",
        "id": 294479290,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1661026743
    },
    {
        "content": "<p>This now passes CI</p>",
        "id": 294533008,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1661081003
    }
]