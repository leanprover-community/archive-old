[
    {
        "content": "<p>Is there a C/C++ api bind to call out to Lean? Has anyone built such a project already?</p>",
        "id": 192102221,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1585364683
    },
    {
        "content": "<p>Lean 4 compiles in C++, so it obviously supports C/C++ bindings.</p>",
        "id": 192102421,
        "sender_full_name": "Uranus Testing",
        "timestamp": 1585365082
    },
    {
        "content": "<p>Does Lean 4 have documented bindings yet?</p>",
        "id": 192102488,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1585365160
    },
    {
        "content": "<p>Ah, found some python bindings to lean. <a href=\"https://github.com/dselsam/lean-python-bindings/blob/master/lean/lang/expr.py\" title=\"https://github.com/dselsam/lean-python-bindings/blob/master/lean/lang/expr.py\">https://github.com/dselsam/lean-python-bindings/blob/master/lean/lang/expr.py</a></p>",
        "id": 192102610,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1585365326
    },
    {
        "content": "<p>I have not seen such documentation, because Lean 4 is still in development, but you can look at mixed C++/Lean project here:  <a href=\"https://github.com/o89/n2o\" title=\"https://github.com/o89/n2o\">https://github.com/o89/n2o</a></p>",
        "id": 192102729,
        "sender_full_name": "Uranus Testing",
        "timestamp": 1585365489
    },
    {
        "content": "<p>There are useful headers in <a href=\"https://github.com/leanprover/lean4/tree/master/src/runtime\" title=\"https://github.com/leanprover/lean4/tree/master/src/runtime\">https://github.com/leanprover/lean4/tree/master/src/runtime</a> (for example, <a href=\"https://github.com/leanprover/lean4/blob/master/src/runtime/object.h\" title=\"https://github.com/leanprover/lean4/blob/master/src/runtime/object.h\">https://github.com/leanprover/lean4/blob/master/src/runtime/object.h</a>), these headers can be used as some kind of documentation.</p>",
        "id": 192103255,
        "sender_full_name": "Uranus Testing",
        "timestamp": 1585366389
    },
    {
        "content": "<p>In addition, you can look at the code generated by Lean 4: <code>LEAN_PATH=/path/to/lean4/src/Init:Test=. /path/to/lean4/bin/lean -c hello.cpp hello.lean</code>.</p>",
        "id": 192103439,
        "sender_full_name": "Uranus Testing",
        "timestamp": 1585366755
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197930\">@Uranus Testing</span> what are this n2o thing and other projects in o89? What are you trying to achieve here?</p>",
        "id": 192118770,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1585395160
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> </p>\n<blockquote>\n<p>what are this n2o thing and other projects in o89?</p>\n</blockquote>\n<p>N2O is application server, as described, which can be used to construct, for example, web applications (with NITRO).</p>\n<blockquote>\n<p>What are you trying to achieve here?</p>\n</blockquote>\n<p>I brought it just as an example of mixed C++/Lean application, because I do not know any other.</p>",
        "id": 192119126,
        "sender_full_name": "Uranus Testing",
        "timestamp": 1585395765
    },
    {
        "content": "<p>Did you use it for anything, or intend to use it for anything, or is it only the beginning of a proof of concept?</p>",
        "id": 192119211,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1585395929
    },
    {
        "content": "<blockquote>\n<p>Did you use it for anything</p>\n</blockquote>\n<p>Currently no, but this applies only to Lean 4 implementation (if interested, here is information about other implementations: <a href=\"https://n2o.tech/\" title=\"https://n2o.tech/\">https://n2o.tech/</a>, or you can ask <span class=\"user-mention\" data-user-id=\"198363\">@Namdak Tonpa</span>).</p>",
        "id": 192119620,
        "sender_full_name": "Uranus Testing",
        "timestamp": 1585396575
    },
    {
        "content": "<p>Thanks. It's still hard for me to understand what it's about, but I guess it means I don't need it.</p>",
        "id": 192119850,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1585396970
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/building.20bindings.20to.20lean/near/192119850\" title=\"#narrow/stream/113488-general/topic/building.20bindings.20to.20lean/near/192119850\">said</a>:</p>\n<blockquote>\n<p>Thanks. It's still hard for me to understand what it's about, but I guess it means I don't need it.</p>\n</blockquote>\n<p>You can think of this as an analogue to <code>coq.io</code> in Coq world. This is practical web framework/stack which is port of Nitrogen Web Framework, famous in ERP, CRM and banking industry. We are trying to bring pure dep-types development to industry (Agda /w MAlonzo, Coq /w <a href=\"http://coq.io\" title=\"http://coq.io\">coq.io</a>, Lean4 /w <a href=\"https://lean4.dev\" title=\"https://lean4.dev\">https://lean4.dev</a>). The full info about N2O stack is here <a href=\"https://n2o.dev\" title=\"https://n2o.dev\">https://n2o.dev</a>, you can find there 7 years history with books, manuals, etc.</p>",
        "id": 192121779,
        "sender_full_name": "Namdak Tonpa",
        "timestamp": 1585400091
    }
]