[
    {
        "content": "<p>is there a way to make lean infer a proof argument automatically using a tactic? i think i've read about it somewhere but... i can't find that page anymore <span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span></p>",
        "id": 259734208,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1635604513
    },
    {
        "content": "<p>this is what im trying to achieve:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">some_value_t</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">:</span> <span class=\"bp\">\\</span><span class=\"n\">N</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">proof</span> <span class=\"o\">:</span> <span class=\"n\">value</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">100</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>and i want lean to automatically infer the <code>proof</code> field with the <code>norm_num</code> tactic because i mostly instatiate the structure with a literal value, not a variable</p>",
        "id": 259734608,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1635605049
    },
    {
        "content": "<p>thanks in advance as usual</p>",
        "id": 259734616,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1635605083
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">some_value_t</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">:</span> <span class=\"bp\">\\</span><span class=\"n\">N</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">proof</span> <span class=\"o\">:</span> <span class=\"n\">value</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">100</span> <span class=\"bp\">.</span> <span class=\"n\">norm_num</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>I think</p>",
        "id": 259735468,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635606042
    },
    {
        "content": "<p>thanks for the answer. but i got <code>invalid auto_param, 'norm_num' must have type (tactic unit)</code></p>",
        "id": 259735489,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1635606093
    },
    {
        "content": "<p>I think it's a bit more complicated than that. The argument after the <code>.</code> has to be a <code>name</code> corresponding to a definition of type <code>tactic unit</code>. The following works</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">meta</span> <span class=\"kd\">def</span> <span class=\"n\">norm_num2</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">norm_num</span><span class=\"o\">]</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">some_value_t</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">proof</span> <span class=\"o\">:</span> <span class=\"n\">value</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">100</span> <span class=\"bp\">.</span> <span class=\"n\">norm_num2</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 259735549,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1635606166
    }
]