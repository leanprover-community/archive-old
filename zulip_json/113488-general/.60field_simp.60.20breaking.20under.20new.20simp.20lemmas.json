[
    {
        "content": "<p>Recently I added a new simp lemma to the mathlib ( PR <a href=\"https://github.com/leanprover-community/mathlib/pull/14456\">#14456</a> )</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">coe_int_div_eq_mk</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">/.</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Now this seems to work against <code>field_simp</code>, as would any other simp lemma of the form <code>a / b = ...</code>, for example <code>field_simp</code> excludes</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">one_div</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">inv_eq_one_div</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n</code></pre></div>\n<p>While one could simply manually exclude the above lemma in <code>field_simp</code> or not mark it as simp lemma in the first place, I wonder if there would be a way to either exclude such simp lemmas automatically in the tactic, or have a test/linter so that the CI would warn an inexperienced user like me from such a problem?</p>\n<p>Happy to give it a try myself, but I 'd like some expertise input on what would be a robust way</p>",
        "id": 286335027,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1655376942
    },
    {
        "content": "<p>I don't think this should be a <code>simp</code> lemma. I don't even know what <code>/.</code> is called.</p>",
        "id": 286335438,
        "sender_full_name": "Reid Barton",
        "timestamp": 1655377206
    }
]