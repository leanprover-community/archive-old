[
    {
        "content": "<p>Existential quantifier elimination is illustrated here: <a href=\"https://leanprover.github.io/logic_and_proof/natural_deduction_for_first_order_logic.html\" target=\"_blank\" title=\"https://leanprover.github.io/logic_and_proof/natural_deduction_for_first_order_logic.html\">https://leanprover.github.io/logic_and_proof/natural_deduction_for_first_order_logic.html</a>. It says we can prove <code>B</code> from  <code>∃xA(x)        B</code>, if be can be proved from a hypothesis <code>A(y)</code>. I'm wondering, if I have <code>¬∃xA(x)        B)</code>, can I prove <code>B</code> from a hypothesis <code>¬A(y)</code>? Is it valid to make the assumption <code>¬A(y)</code> here, from <code>¬∃xA(x)</code> ?</p>",
        "id": 158400566,
        "sender_full_name": "Dominic Farolino",
        "timestamp": 1550016962
    },
    {
        "content": "<p>What you want is actually: If we have <code>∃x ¬A(x)</code>, and <code>B</code> assuming <code>¬A(y)</code>, then we can deduce <code>B</code>. This is just the regular exists intro rule. If we use de Morgan on the first assumption, it says that if <code>¬∀x A(x)</code>, and <code>¬A(y)</code> implies <code>B</code>, then we can deduce <code>B</code>. To derive this, in classical logic, we can case on whether <code>∃x ¬A(x)</code> or not. If it's true, we use the first argument to conclude. If it's false then <code>¬ ∃x ¬A(x)</code>, so it suffices to derive <code>∀x A(x)</code> to get a contradiction with the assumption <code>¬∀x A(x)</code>. For any <code>x</code>, if <code>A(x)</code> is not true (proof by contradiction) then <code>¬A(x)</code>, so <code>∃x ¬A(x)</code> which contradicts the assumption. Thus <code>∀x A(x)</code> and <code>¬∀x A(x)</code>, so <code>B</code> holds by reductio ad absurdum.</p>",
        "id": 158404244,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550021251
    },
    {
        "content": "<blockquote>\n<p>If we have <code>∃x ¬A(x)</code>, and <code>B</code> assuming <code>¬A(y)</code>, then we can deduce <code>B</code>. This is just the regular exists intro rule.</p>\n</blockquote>\n<p>Ah, yeah I did know this, just wasn't sure exactly what I could do with the negation outside. Ultimately what I was actually trying to prove is <code>¬∃xA(x) -&gt; ∀x ¬A(x)</code>, and I bungled it and got stuck. I re-worked it, to get the image attached to this message. If it isn't to much trouble, would you migth checking it for correctness? (Haven't read chapter 9 of Logic and Proof yet, where first order logic is used in lean) <a href=\"/user_uploads/3121/v4nsUELOLzyKJPuvEjdDhCXr/IMG-1411.JPG\" target=\"_blank\" title=\"IMG-1411.JPG\">IMG-1411.JPG</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/v4nsUELOLzyKJPuvEjdDhCXr/IMG-1411.JPG\" target=\"_blank\" title=\"IMG-1411.JPG\"><img src=\"/user_uploads/3121/v4nsUELOLzyKJPuvEjdDhCXr/IMG-1411.JPG\"></a></div>",
        "id": 158407789,
        "sender_full_name": "Dominic Farolino",
        "timestamp": 1550025863
    }
]