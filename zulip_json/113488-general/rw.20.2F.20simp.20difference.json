[
    {
        "content": "<p>I just encountered a very weird behavior. I have at the end of a proof a line</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">written_in_ext_chart_at</span><span class=\"o\">,</span> <span class=\"n\">ext_chart_at</span><span class=\"o\">,</span> <span class=\"n\">local_equiv</span><span class=\"bp\">.</span><span class=\"n\">to_inv</span><span class=\"o\">,</span> <span class=\"n\">mem_some_chart_at_source</span><span class=\"o\">]</span>\n</pre></div>\n\n\n<p>With this line, the proof works, but I get red squiggles under the name of the theorem, with the error message</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"bp\">@</span><span class=\"n\">written_in_ext_chart_at</span> <span class=\"n\">k</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">tangent_space_at</span> <span class=\"n\">k</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"n\">E</span> <span class=\"bp\">_</span><span class=\"n\">inst_2</span> <span class=\"n\">H</span> <span class=\"bp\">_</span><span class=\"n\">inst_3</span> <span class=\"n\">I</span> <span class=\"n\">M</span> <span class=\"bp\">_</span><span class=\"n\">inst_4</span> <span class=\"bp\">_</span><span class=\"n\">inst_5</span> <span class=\"bp\">_</span><span class=\"n\">inst_6</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n    <span class=\"bp\">_</span><span class=\"n\">inst_2</span>\n    <span class=\"n\">H</span>\n    <span class=\"bp\">_</span><span class=\"n\">inst_3</span>\n    <span class=\"n\">I</span>\n    <span class=\"n\">M</span>\n    <span class=\"bp\">_</span><span class=\"n\">inst_4</span>\n    <span class=\"bp\">_</span><span class=\"n\">inst_5</span>\n    <span class=\"bp\">_</span><span class=\"n\">inst_6_1</span>\n    <span class=\"n\">E&#39;</span>\n    <span class=\"bp\">_</span><span class=\"n\">inst_7</span>\n    <span class=\"n\">H&#39;</span>\n    <span class=\"bp\">_</span><span class=\"n\">inst_8</span>\n    <span class=\"n\">I&#39;</span>\n    <span class=\"n\">M&#39;</span>\n    <span class=\"bp\">_</span><span class=\"n\">inst_9</span>\n    <span class=\"bp\">_</span><span class=\"n\">inst_10</span>\n    <span class=\"bp\">_</span><span class=\"n\">inst_11</span>\n<span class=\"n\">term</span>\n  <span class=\"bp\">_</span><span class=\"n\">inst_11</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">@</span><span class=\"n\">manifold</span><span class=\"bp\">.</span><span class=\"n\">smooth</span> <span class=\"mi\">1</span> <span class=\"n\">k</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"n\">E&#39;</span> <span class=\"bp\">_</span><span class=\"n\">inst_7</span> <span class=\"n\">H&#39;</span> <span class=\"bp\">_</span><span class=\"n\">inst_8</span> <span class=\"n\">I&#39;_1</span> <span class=\"n\">M&#39;</span> <span class=\"bp\">_</span><span class=\"n\">inst_9</span> <span class=\"bp\">_</span><span class=\"n\">inst_10</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"bp\">@</span><span class=\"n\">manifold</span><span class=\"bp\">.</span><span class=\"n\">smooth</span> <span class=\"mi\">1</span> <span class=\"n\">k</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"n\">E&#39;</span> <span class=\"bp\">_</span><span class=\"n\">inst_7</span> <span class=\"n\">H&#39;</span> <span class=\"bp\">_</span><span class=\"n\">inst_8</span> <span class=\"n\">I&#39;</span> <span class=\"n\">M&#39;</span> <span class=\"bp\">_</span><span class=\"n\">inst_9</span> <span class=\"bp\">_</span><span class=\"n\">inst_10</span>\n<span class=\"n\">types</span> <span class=\"n\">contain</span> <span class=\"n\">aliased</span> <span class=\"n\">name</span><span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">):</span> <span class=\"n\">I&#39;</span>\n<span class=\"n\">remark</span><span class=\"o\">:</span> <span class=\"n\">the</span> <span class=\"n\">tactic</span> <span class=\"bp\">`</span><span class=\"n\">dedup</span><span class=\"bp\">`</span> <span class=\"n\">can</span> <span class=\"n\">be</span> <span class=\"n\">used</span> <span class=\"n\">to</span> <span class=\"n\">rename</span> <span class=\"n\">aliases</span>\n</pre></div>\n\n\n<p>Except that I can't see any place where I would have introduced two different variables <code>I'</code>. What is funny is that if I replace my <code>simp</code> line with the two lines</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">rw</span> <span class=\"n\">written_in_ext_chart_at</span><span class=\"o\">,</span>\n<span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">written_in_ext_chart_at</span><span class=\"o\">,</span> <span class=\"n\">ext_chart_at</span><span class=\"o\">,</span> <span class=\"n\">local_equiv</span><span class=\"bp\">.</span><span class=\"n\">to_inv</span><span class=\"o\">,</span> <span class=\"n\">mem_some_chart_at_source</span><span class=\"o\">]</span>\n</pre></div>\n\n\n<p>then the error goes away. Highly non-minimal example at <a href=\"https://github.com/sgouezel/mathlib/blob/b87ee06fe4385c12fa2e53b867913b62feb609fb/src/geometry/manifolds/mderiv.lean#L599\" target=\"_blank\" title=\"https://github.com/sgouezel/mathlib/blob/b87ee06fe4385c12fa2e53b867913b62feb609fb/src/geometry/manifolds/mderiv.lean#L599\">https://github.com/sgouezel/mathlib/blob/b87ee06fe4385c12fa2e53b867913b62feb609fb/src/geometry/manifolds/mderiv.lean#L599</a></p>\n<p>I am afraid it indicates there is something fishy in the way I define stuff (or, at the very least, something that Lean doesn't like very much). The motivation for the definitions as they are is at <a href=\"https://github.com/sgouezel/mathlib/blob/b87ee06fe4385c12fa2e53b867913b62feb609fb/src/geometry/manifolds/mderiv.lean#L154\" target=\"_blank\" title=\"https://github.com/sgouezel/mathlib/blob/b87ee06fe4385c12fa2e53b867913b62feb609fb/src/geometry/manifolds/mderiv.lean#L154\">https://github.com/sgouezel/mathlib/blob/b87ee06fe4385c12fa2e53b867913b62feb609fb/src/geometry/manifolds/mderiv.lean#L154</a> (and I can explain here on Zulip if needed).</p>",
        "id": 166241320,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1558507086
    }
]