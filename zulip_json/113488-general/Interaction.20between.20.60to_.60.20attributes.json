[
    {
        "content": "<p>We have <code>to_additive</code> and we want <code>to_order_dual</code> and <code>to_right_action</code> (see <a href=\"#narrow/stream/116395-maths/topic/left.20vs.20right.20modules.20in.20tensor.20products\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/left.20vs.20right.20modules.20in.20tensor.20products</a>). Surely they will at some point be used concurrently. Do we already know a way to make them interact properly? Typically, if I tag something <code>@[to_additive, to_order_dual, to_right_action]</code> I want 7 lemmas to be automatically generated, not 3.</p>",
        "id": 263013696,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1638195494
    },
    {
        "content": "<p>I guess nobody has thought about this, after all these other tactics aren't written yet. That said it shouldn't be too hard to make this part of the spec, the second/third attributes should be able to see the resulting arguments of applying the first attribute and therefore be able to generate lemmas based on all of the already generated lemmas for the first attribute, it wouldn't be automatic however and some code would need to be added.<br>\nMaybe you should make a github issue for the creation of these other tactics (if there isn't one already), and add this to their spec?</p>",
        "id": 263023378,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1638199899
    },
    {
        "content": "<p>One usage might be <code>@[to[additive, dual]]</code> where all the <code>to_</code> tactics are plugins to some larger <code>to</code> tactic, which does the proper outer product.</p>",
        "id": 263028561,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1638201942
    },
    {
        "content": "<p>I was just thinking similar thoughts <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> Similar to how we have a linter framework, there can maybe be a <code>to_</code> framework.</p>",
        "id": 263029367,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1638202248
    }
]