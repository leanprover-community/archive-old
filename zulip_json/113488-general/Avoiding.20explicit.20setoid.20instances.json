[
    {
        "content": "<p>Below is my proof that quotient by a normal subgroup is a group. I can't do it without giving explicit setoid instances everywhere. Using <code>haveI</code> at the beginning of the proof just gives me the error that inferred and synthesized instances are not definitionally equal. Also, in my <code>begin</code> <code>end</code> tactics blocks, I have to use <code>assume</code> within tactics blocks, otherwise my goal is just a metavariable. Is there a way of doing this nicely?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">group_theory</span><span class=\"bp\">.</span><span class=\"n\">coset</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">normal_subgroup</span> <span class=\"n\">H</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">group</span> <span class=\"o\">(</span><span class=\"n\">left_cosets</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">one</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">),</span>\n  <span class=\"n\">mul</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on₂</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"n\">b</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">))</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a₁</span> <span class=\"n\">a₂</span> <span class=\"n\">b₁</span> <span class=\"n\">b₂</span> <span class=\"o\">(</span><span class=\"n\">hab₁</span> <span class=\"o\">:</span> <span class=\"n\">a₁</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">b₁</span> <span class=\"err\">∈</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hab₂</span> <span class=\"o\">:</span> <span class=\"n\">a₂</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">b₂</span> <span class=\"err\">∈</span> <span class=\"n\">H</span><span class=\"o\">),</span>\n    <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span>\n    <span class=\"o\">((</span><span class=\"n\">is_subgroup</span><span class=\"bp\">.</span><span class=\"n\">mul_mem_cancel_left</span> <span class=\"n\">H</span> <span class=\"o\">(</span><span class=\"n\">is_subgroup</span><span class=\"bp\">.</span><span class=\"n\">inv_mem</span> <span class=\"n\">hab₂</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n        <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_inv_rev</span><span class=\"o\">,</span> <span class=\"n\">mul_inv_rev</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">a₁</span><span class=\"bp\">⁻¹</span><span class=\"o\">),</span>\n          <span class=\"n\">mul_assoc</span> <span class=\"bp\">_</span> <span class=\"n\">b₂</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mul_assoc</span> <span class=\"n\">b₂</span><span class=\"o\">,</span> <span class=\"n\">mul_inv_self</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"bp\">⁻¹</span><span class=\"o\">)]</span><span class=\"bp\">;</span>\n          <span class=\"n\">exact</span> <span class=\"n\">normal_subgroup</span><span class=\"bp\">.</span><span class=\"n\">normal</span> <span class=\"bp\">_</span> <span class=\"n\">hab₁</span> <span class=\"bp\">_</span><span class=\"o\">))),</span>\n  <span class=\"n\">mul_assoc</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₃</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span>\n    <span class=\"bp\">_</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span>\n    <span class=\"k\">begin</span>\n      <span class=\"k\">assume</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n      <span class=\"k\">show</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)),</span>\n      <span class=\"n\">rw</span> <span class=\"n\">mul_assoc</span>\n    <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">one_mul</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"bp\">_</span> <span class=\"n\">a</span>\n    <span class=\"k\">begin</span>\n      <span class=\"k\">assume</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n      <span class=\"k\">show</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">one_mul</span>\n    <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_one</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"bp\">_</span> <span class=\"n\">a</span>\n    <span class=\"k\">begin</span>\n      <span class=\"k\">assume</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n      <span class=\"k\">show</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">mul_one</span>\n    <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">inv</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">⁻¹</span><span class=\"o\">))</span>\n    <span class=\"k\">begin</span>\n      <span class=\"k\">assume</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n      <span class=\"n\">refine</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n      <span class=\"k\">show</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"bp\">⁻¹</span> <span class=\"err\">∈</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">mul_inv_rev</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"n\">is_subgroup</span><span class=\"bp\">.</span><span class=\"n\">inv_mem</span> <span class=\"o\">(</span><span class=\"n\">is_subgroup</span><span class=\"bp\">.</span><span class=\"n\">mem_norm_comm</span> <span class=\"n\">hab</span><span class=\"o\">)</span>\n    <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_left_inv</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"bp\">_</span> <span class=\"n\">a</span>\n    <span class=\"k\">begin</span>\n      <span class=\"k\">assume</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n      <span class=\"k\">show</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">@</span><span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">left_rel</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">inv_mul_self</span>\n    <span class=\"kn\">end</span> <span class=\"o\">}</span>\n</pre></div>",
        "id": 127558107,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1528135915
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">left_rel</span>\n</pre></div>",
        "id": 127558202,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1528136023
    },
    {
        "content": "<p>Chris, did you check how they did quotient modules? It is probably hard to make it nicer than that...</p>",
        "id": 127558269,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1528136092
    },
    {
        "content": "<blockquote>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">left_rel</span>\n</pre></div>\n\n\n</blockquote>\n<p>I did try that</p>",
        "id": 127558431,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1528136289
    },
    {
        "content": "<p>All fixed. adding this line solved everything <code>\ninstance normal_to_subgroup (H : set G) [normal_subgroup H] : is_subgroup H := by apply_instance</code></p>",
        "id": 127558723,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1528136719
    },
    {
        "content": "<p>Much nicer proof below. Weirdly, marking <code>normal_subgroup.to_is_subgroup</code> as an instance solved the problem, even though it already is an instance. Not sure why this would happen.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">group_theory</span><span class=\"bp\">.</span><span class=\"n\">coset</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">normal_subgroup</span> <span class=\"n\">H</span><span class=\"o\">]</span>\n\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">left_rel</span> <span class=\"n\">normal_subgroup</span><span class=\"bp\">.</span><span class=\"n\">to_is_subgroup</span>\n\n<span class=\"kn\">instance</span><span class=\"o\">:</span> <span class=\"n\">group</span> <span class=\"o\">(</span><span class=\"n\">left_cosets</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">one</span> <span class=\"o\">:=</span> <span class=\"err\">⟦</span><span class=\"mi\">1</span><span class=\"err\">⟧</span><span class=\"o\">,</span>\n  <span class=\"n\">mul</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on₂</span> <span class=\"n\">a</span> <span class=\"n\">b</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"err\">⟦</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"err\">⟧</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a₁</span> <span class=\"n\">a₂</span> <span class=\"n\">b₁</span> <span class=\"n\">b₂</span> <span class=\"o\">(</span><span class=\"n\">hab₁</span> <span class=\"o\">:</span> <span class=\"n\">a₁</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">b₁</span> <span class=\"err\">∈</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hab₂</span> <span class=\"o\">:</span> <span class=\"n\">a₂</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">b₂</span> <span class=\"err\">∈</span> <span class=\"n\">H</span><span class=\"o\">),</span>\n    <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span>\n    <span class=\"o\">((</span><span class=\"n\">is_subgroup</span><span class=\"bp\">.</span><span class=\"n\">mul_mem_cancel_left</span> <span class=\"n\">H</span> <span class=\"o\">(</span><span class=\"n\">is_subgroup</span><span class=\"bp\">.</span><span class=\"n\">inv_mem</span> <span class=\"n\">hab₂</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n        <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_inv_rev</span><span class=\"o\">,</span> <span class=\"n\">mul_inv_rev</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">a₁</span><span class=\"bp\">⁻¹</span><span class=\"o\">),</span>\n          <span class=\"n\">mul_assoc</span> <span class=\"bp\">_</span> <span class=\"n\">b₂</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mul_assoc</span> <span class=\"n\">b₂</span><span class=\"o\">,</span> <span class=\"n\">mul_inv_self</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span> <span class=\"o\">(</span><span class=\"n\">a₂</span><span class=\"bp\">⁻¹</span><span class=\"o\">)]</span><span class=\"bp\">;</span>\n          <span class=\"n\">exact</span> <span class=\"n\">normal_subgroup</span><span class=\"bp\">.</span><span class=\"n\">normal</span> <span class=\"bp\">_</span> <span class=\"n\">hab₁</span> <span class=\"bp\">_</span><span class=\"o\">))),</span>\n  <span class=\"n\">mul_assoc</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₃</span>\n    <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"k\">show</span> <span class=\"err\">⟦</span><span class=\"bp\">_</span><span class=\"err\">⟧</span> <span class=\"bp\">=</span> <span class=\"err\">⟦</span><span class=\"bp\">_</span><span class=\"err\">⟧</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">mul_assoc</span><span class=\"o\">),</span>\n  <span class=\"n\">one_mul</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">a</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"k\">show</span> <span class=\"err\">⟦</span><span class=\"bp\">_</span><span class=\"err\">⟧</span> <span class=\"bp\">=</span> <span class=\"err\">⟦</span><span class=\"bp\">_</span><span class=\"err\">⟧</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">one_mul</span><span class=\"o\">),</span>\n  <span class=\"n\">mul_one</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">a</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"k\">show</span> <span class=\"err\">⟦</span><span class=\"bp\">_</span><span class=\"err\">⟧</span> <span class=\"bp\">=</span> <span class=\"err\">⟦</span><span class=\"bp\">_</span><span class=\"err\">⟧</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">mul_one</span><span class=\"o\">),</span>\n  <span class=\"n\">inv</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"err\">⟦</span><span class=\"n\">a</span><span class=\"bp\">⁻¹</span><span class=\"err\">⟧</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">hab</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span> <span class=\"k\">begin</span>\n      <span class=\"k\">show</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"bp\">⁻¹</span> <span class=\"err\">∈</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">mul_inv_rev</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"n\">is_subgroup</span><span class=\"bp\">.</span><span class=\"n\">inv_mem</span> <span class=\"o\">(</span><span class=\"n\">is_subgroup</span><span class=\"bp\">.</span><span class=\"n\">mem_norm_comm</span> <span class=\"n\">hab</span><span class=\"o\">)</span>\n    <span class=\"kn\">end</span><span class=\"o\">),</span>\n  <span class=\"n\">mul_left_inv</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on</span> <span class=\"n\">a</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"k\">show</span> <span class=\"err\">⟦</span><span class=\"bp\">_</span><span class=\"err\">⟧</span> <span class=\"bp\">=</span> <span class=\"err\">⟦</span><span class=\"bp\">_</span><span class=\"err\">⟧</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">inv_mul_self</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n</pre></div>",
        "id": 127559187,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1528137329
    }
]