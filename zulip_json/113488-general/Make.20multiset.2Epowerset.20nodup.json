[
    {
        "content": "<p>I was expecting <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset.powerset\">docs#multiset.powerset</a> to be nodup already, but it's not. I want the result that <code>m.powerset.card</code> is the product of the multiplicities of elements of <code>m</code> + 1:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.big_operators.basic</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"c1\">-- currently wrong but I want it to be right</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">multiset.card_powerset'</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">s.powerset.card</span> <span class=\"bp\">=</span> <span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s.to_finset</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">s.count</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">multiset.card_powerset_to_finset</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">s.powerset.to_finset.card</span> <span class=\"bp\">=</span> <span class=\"bp\">∏</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s.to_finset</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">s.count</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Which of the above ways should be the correct spelling?</p>",
        "id": 259089970,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635252257
    },
    {
        "content": "<p>I think <code>multiset.powerset</code> is deliberately not nodup.</p>",
        "id": 259090110,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1635252346
    },
    {
        "content": "<p>What's the motivation?</p>",
        "id": 259090210,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635252392
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 259090255,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1635252413
    },
    {
        "content": "<p>it doesn't depend on equality at all, it's a pure multiset operation</p>",
        "id": 259090339,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1635252458
    },
    {
        "content": "<p>Ah, because grinding it through <code>multiset.to_finset</code> would require decidable equality <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 259090421,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635252489
    },
    {
        "content": "<p>If you want to nodup it first, then why not use <code>s.to_finset.powerset</code>?</p>",
        "id": 259090462,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1635252513
    },
    {
        "content": "<p>Ah no that's not what I want!</p>",
        "id": 259090514,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635252538
    },
    {
        "content": "<p><code>s.powerset.to_finset</code> does, however.</p>",
        "id": 259090554,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635252552
    },
    {
        "content": "<p>I'm trying to define <code>locally_finite_order (multiset α)</code>.</p>",
        "id": 259090599,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635252570
    },
    {
        "content": "<p>I rather prefer the theorem <code>s.powerset.card = 2 ^ s.card</code></p>",
        "id": 259090687,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1635252604
    },
    {
        "content": "<p>Yeah, and I assume it makes <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.card_powerset\">docs#finset.card_powerset</a> quite direct.</p>",
        "id": 259090781,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635252645
    },
    {
        "content": "<p><code>multiset.powerset</code> is choosing from a bag without replacement. why would it be nodup?</p>",
        "id": 259098155,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1635255932
    }
]