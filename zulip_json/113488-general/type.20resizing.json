[
    {
        "content": "<p>Suppose I have a type <code>α : Type (u+1)</code> and I know <code>∃ β : Type u, nonempty (β ≃ α)</code>. Is there a \"canonical\" (= without choice, I guess?) way to obtain a type <code>α' : Type u</code> and an equivalence <code>α ≃ α'</code>?</p>",
        "id": 127424550,
        "sender_full_name": "Reid Barton",
        "timestamp": 1527870655
    },
    {
        "content": "<p>I think you would be able to prove the axiom of choice if you had that</p>",
        "id": 127424655,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1527870796
    },
    {
        "content": "<p>Sorry, I take it back, you could pick <code>α</code> and <code>α ≃ α'</code> as the identity equivalence</p>",
        "id": 127424744,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1527870899
    },
    {
        "content": "<p>You could use <code>ordinal</code> to give it a kind of canonicity, but that doesn't really avoid choice, it's nonconstructive all over the place.</p>",
        "id": 127425203,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527871529
    },
    {
        "content": "<p>Also that doesn't provide the equiv itself, just a proof of existence; only the type is canonical</p>",
        "id": 127425253,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527871566
    }
]