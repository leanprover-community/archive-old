[
    {
        "content": "<p>I propose a heresy: we map <code>\\(</code> and <code>\\)</code> to <code>⦇x,y,z⦈</code> and use this for anonymous constructors. This frees up <code>\\&lt;</code> and <code>\\&gt;</code> for inner products and such.</p>",
        "id": 198760618,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590499392
    },
    {
        "content": "<p>how about just using <code>⦇x,y⦈</code> for the inner product</p>",
        "id": 198760804,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590499467
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> Because it's less recognizable?</p>",
        "id": 198761826,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590499954
    },
    {
        "content": "<p>There's also <code>⦑dotted angle brackets⦒</code></p>",
        "id": 198761961,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590500016
    },
    {
        "content": "<p>OK, but changing <code>\\&lt;</code> and <code>\\&gt;</code> can't be a serious suggestion I hope.</p>",
        "id": 198761973,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590500020
    },
    {
        "content": "<p>Why not? Muscle memory?</p>",
        "id": 198761999,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590500033
    },
    {
        "content": "<p>We could keep <code>\\&lt;</code> and <code>\\&gt;</code> for the anonymous constructor, and <code>\\langle</code> and <code>\\rangle</code> for inner product notation</p>",
        "id": 198762118,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590500076
    },
    {
        "content": "<p>Also breaking basically every line of Lean source ever, as well as documentation, etc.</p>",
        "id": 198762254,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590500138
    },
    {
        "content": "<p>Maybe <code>❬medium angle bracket ornament❭</code> is good enough for inner products</p>",
        "id": 198762437,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590500226
    },
    {
        "content": "<p>Are <code>⟨</code> and <code>⟨</code> different?</p>",
        "id": 198762450,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590500233
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> How would I know? <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 198762480,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590500254
    },
    {
        "content": "<p>If there is a difference, it didn't survive being copied and pasted into emacs in a tmux session.</p>",
        "id": 198762606,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590500315
    },
    {
        "content": "<p>/me would prefer if Lean used 〈 LEFT-POINTING ANGLE BRACKET not ⟨ MATHEMATICAL LEFT ANGLE BRACKET for anonymous constructors leaving \"MATHEMATICAL\" part of Unicode to mathlib but I I think that breaking compatibility here is a bad idea.</p>",
        "id": 198770455,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590503631
    },
    {
        "content": "<p>/me vehemently agrees with <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span></p>",
        "id": 198770794,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590503765
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> Is this heresy still fixable in <span aria-label=\"four leaf clover\" class=\"emoji emoji-1f340\" role=\"img\" title=\"four leaf clover\">:four_leaf_clover:</span> ?</p>",
        "id": 198770827,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590503779
    },
    {
        "content": "<p>They look exactly the same in my editor...</p>",
        "id": 198771308,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1590503993
    },
    {
        "content": "<p>why not bra-ket notation?</p>",
        "id": 198772458,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1590504463
    },
    {
        "content": "<p>Is a syntax like<code>(x | y)</code> possible?</p>",
        "id": 198830211,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590532737
    },
    {
        "content": "<p>(in France, this is somewhat a classical notation for inner products, non-hermitian ones at least.)</p>",
        "id": 198830225,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590532754
    },
    {
        "content": "<p>Ah, I guess it is not because of the status of <code>|</code> in Lean…</p>",
        "id": 198830327,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590532815
    },
    {
        "content": "<p>Well, there are other unicode versions of <code>|</code></p>",
        "id": 198850162,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590556216
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/heresy/near/198850162\">said</a>:</p>\n<blockquote>\n<p>Well, there are other unicode versions of <code>|</code></p>\n</blockquote>\n<p>Let's not get into that :-D…</p>",
        "id": 198853400,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590560575
    }
]