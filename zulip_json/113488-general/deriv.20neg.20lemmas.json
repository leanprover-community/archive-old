[
    {
        "content": "<p>Why are <a href=\"https://leanprover-community.github.io/mathlib_docs/find/deriv_within.neg\">docs#deriv_within.neg</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/deriv.neg\">docs#deriv.neg</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fderiv_within_neg\">docs#fderiv_within_neg</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fderiv_neg\">docs#fderiv_neg</a> about <code>(λ y, -f y)</code> and not <code>-f</code>? Historical artifact?</p>",
        "id": 254683886,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632480096
    },
    {
        "content": "<p>I think it is more useful in practice</p>",
        "id": 254684247,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632480287
    },
    {
        "content": "<p>Hmm... right now I wanted to change <code>deriv (-f)</code> into <code>-deriv f</code> and had to use <code>convert</code>. Wouldn't call that useful.</p>",
        "id": 254684450,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632480395
    },
    {
        "content": "<p>why did you have <code>-f</code> though</p>",
        "id": 254684500,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632480428
    },
    {
        "content": "<p>The lemmas are designed to compute <code>deriv</code> of a lambda with a complicated body</p>",
        "id": 254684549,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632480464
    },
    {
        "content": "<p>You can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pi.neg_def\">docs#pi.neg_def</a> to rewrite</p>",
        "id": 254684574,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632480481
    },
    {
        "content": "<p>That's just how it is. See the proof of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/concave_on_of_deriv_antitone\">docs#concave_on_of_deriv_antitone</a></p>",
        "id": 254684631,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632480493
    },
    {
        "content": "<p>Or at least, you should be able to... seems it's missing unlike <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pi.add_def\">docs#pi.add_def</a> (edit: added in <a href=\"https://github.com/leanprover-community/mathlib/issues/9361\">#9361</a>)</p>",
        "id": 254684642,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632480499
    },
    {
        "content": "<p>Well anyways \"doesn't work for my specific use case\" doesn't contradict \"is more useful\".</p>",
        "id": 254684755,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632480577
    },
    {
        "content": "<p>Well I guess I can align.</p>",
        "id": 254684884,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632480632
    },
    {
        "content": "<p>The same reason it doesn't work for you is the reason that your version wouldn't work for the intended purposes of <code>deriv.neg</code></p>",
        "id": 254684885,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632480632
    },
    {
        "content": "<p>of course, we could have both!</p>",
        "id": 254684984,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632480688
    },
    {
        "content": "<p>If you want to compute <code>deriv (\\lam x, exp (- x^2))</code> or something, then after applying <a href=\"https://leanprover-community.github.io/mathlib_docs/find/deriv_exp\">docs#deriv_exp</a>, higher-order unification will leave you with <code>deriv (\\lam x, - x^2)</code> so that's the form we want <a href=\"https://leanprover-community.github.io/mathlib_docs/find/deriv.neg\">docs#deriv.neg</a> to match</p>",
        "id": 254685620,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632481050
    },
    {
        "content": "<p>Yeah okay. Thanks!</p>",
        "id": 254686094,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632481275
    }
]