[
    {
        "content": "<p>I'm trying to gather lemmas I needed for my IAS demo into a Lean PR. But I don't know where to put two lemmas. They require both linear ordered fields and group powers, neither of which imports the other.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"err\">ùïú</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">linear_ordered_field</span> <span class=\"err\">ùïú</span><span class=\"o\">]</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">pos_div_pow_pos</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"err\">ùïú</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">‚Ñï</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"bp\">/</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"n\">k</span> <span class=\"o\">:=</span>\n<span class=\"n\">div_pos</span> <span class=\"n\">ha</span> <span class=\"o\">(</span><span class=\"n\">pow_pos</span> <span class=\"n\">hb</span> <span class=\"n\">k</span><span class=\"o\">)</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">div_pow_le</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"err\">ùïú</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">‚â§</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">‚Ñï</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">/</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"n\">k</span> <span class=\"bp\">‚â§</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">div_le_iff</span> <span class=\"err\">$</span> <span class=\"n\">pow_pos</span> <span class=\"o\">(</span><span class=\"n\">lt_of_lt_of_le</span> <span class=\"n\">zero_lt_one</span> <span class=\"n\">hb</span><span class=\"o\">)</span> <span class=\"n\">k</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span>\n<span class=\"o\">(</span><span class=\"k\">calc</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">simp</span>\n   <span class=\"bp\">...</span>  <span class=\"bp\">‚â§</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">mul_le_mul_left</span> <span class=\"n\">ha</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"err\">$</span> <span class=\"n\">one_le_pow_of_one_le</span> <span class=\"n\">hb</span> <span class=\"bp\">_</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 200775647,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592068001
    },
    {
        "content": "<p>start a file <code>linear_ordered_field_power</code>?</p>",
        "id": 200775733,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592068150
    },
    {
        "content": "<p>This sounds a bit excessive.</p>",
        "id": 200776036,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592068651
    },
    {
        "content": "<p><code>algebra.field_power</code>?</p>",
        "id": 200776120,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592068770
    },
    {
        "content": "<p>I thought this was all about <code>fpow</code> but actually there are also <code>gpow</code> there.</p>",
        "id": 200776192,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592068874
    },
    {
        "content": "<p>Thanks.</p>",
        "id": 200776193,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592068877
    }
]