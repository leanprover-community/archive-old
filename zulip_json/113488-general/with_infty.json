[
    {
        "content": "<p>I am looking at Sebastien's PR for emetric spaces. And I'm wondering, we have <code>with_top</code>, <code>with_bot</code> and <code>with_zero</code>. Would it make sense to have <code>with_infty</code>, or is it not worth it?</p>",
        "id": 135383943,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538982097
    },
    {
        "content": "<p>that's <code>with_top</code></p>",
        "id": 135383952,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538982119
    },
    {
        "content": "<p>I know. But why do we have <code>with_zero</code>?</p>",
        "id": 135383993,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538982143
    },
    {
        "content": "<p>It is just <code>with_bot</code>.</p>",
        "id": 135383994,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538982149
    },
    {
        "content": "<p>I think there are some algebraic definitions on <code>with_top</code>, and they correspond to treating it like infinity</p>",
        "id": 135383999,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538982161
    },
    {
        "content": "<p><code>with_zero</code> and <code>with_bot</code> are not the same on algebra stuff</p>",
        "id": 135384003,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538982176
    },
    {
        "content": "<p>I see</p>",
        "id": 135384004,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538982182
    },
    {
        "content": "<p>So if someone wants to use <code>∞</code> notation, they should just introduce it locally?</p>",
        "id": 135384012,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538982202
    },
    {
        "content": "<p>Because that might be nice...</p>",
        "id": 135384016,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538982210
    },
    {
        "content": "<p>yes, <code>∞</code> is not a notation associated to any typeclass</p>",
        "id": 135384080,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538982324
    },
    {
        "content": "<p>indeed I was thinking of eliminating it from <code>ennreal</code> in favor of top everywhere</p>",
        "id": 135384086,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538982341
    },
    {
        "content": "<p>Hmmm, I would vote for keeping the notation.</p>",
        "id": 135384152,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538982462
    },
    {
        "content": "<p>I think I hit a dependency problem anyway</p>",
        "id": 135384210,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538982496
    },
    {
        "content": "<p>but it's a local notation, use what you like</p>",
        "id": 135384216,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538982506
    },
    {
        "content": "<p>Do you ever add both a bottom and a top? In what order do you add them? Or do you build it as a <code>sum bool a</code>?</p>",
        "id": 135416708,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1539018834
    },
    {
        "content": "<p>fyi: <code>∞</code> is only a local notation for top. <a href=\"https://github.com/leanprover/mathlib/blob/master/data/real/ennreal.lean#L19\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/data/real/ennreal.lean#L19\">https://github.com/leanprover/mathlib/blob/master/data/real/ennreal.lean#L19</a></p>",
        "id": 135555509,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1539192278
    },
    {
        "content": "<p>I don't think we currently have a case where we add a top and a bot. But we add top to structures which already have a bot, like ennreal, or enat.</p>",
        "id": 135555544,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1539192328
    }
]