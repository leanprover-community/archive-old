[
    {
        "content": "<p>I saw The Lean Reference Manual and I found a description of inductive type declaration which I could not understand.</p>\n<p><a href=\"https://leanprover.github.io/reference/declarations.html#inductive-types\" target=\"_blank\" title=\"https://leanprover.github.io/reference/declarations.html#inductive-types\">https://leanprover.github.io/reference/declarations.html#inductive-types</a></p>\n<p>This is a quote from 4.4 Inductive Types in the document.</p>\n<div class=\"codehilite\"><pre><span></span>Suppose the telescope (b : βᵢ) is (b₁ : βᵢ₁) ... (bᵤ : βᵢᵤ). Each argument in the telescope is either nonrecursive or recursive.\n\nAn argument (bⱼ : βᵢⱼ) is nonrecursive if βᵢⱼ does not refer to foo, the inductive type being defined. In that case, βᵢⱼ can be any type, so long as it does not refer to any nonrecursive arguments.\nAn argument (bⱼ : βᵢⱼ) is recursive if it βᵢⱼ of the form Π (d : δ), foo where (d : δ) is a telescope which does not refer to foo or any nonrecursive arguments.\n</pre></div>\n\n\n<p>This description says that each argument in the telescope is either nonrecursive or recursive.<br>\nI can not get from the following statements even whether or not nonrecursive and recursive arguments are mutually exclusive.<br>\nMy intuition tells <code>recursive argument</code> means that it refer to <code>foo</code> itself in some sense.<br>\nBut these statements seem to say that none of the arguments refer to <code>foo</code>.</p>",
        "id": 169516382,
        "sender_full_name": "Yasuaki MORITA",
        "timestamp": 1562099248
    },
    {
        "content": "<p>nonrecursive and recursive are mutually exclusive and exhaustive of the arguments to a constructor</p>",
        "id": 169516919,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562099667
    },
    {
        "content": "<p>Recursive means it has the form <code>Π (d : δ), foo</code>, so it clearly refers to <code>foo</code> and hence it cannot be nonrecursive</p>",
        "id": 169516961,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562099699
    },
    {
        "content": "<p>If an argument fits neither description (neither nonrecursive nor recursive), for example <code>foo -&gt; foo</code>, then it is not allowed as a constructor argument at all</p>",
        "id": 169517026,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562099753
    },
    {
        "content": "<p>The rule says that <code>(d : δ)</code> is a telescope that does not refer to foo, so the only appearance of <code>foo</code> in <code>Π (d : δ), foo</code> is the one at the end</p>",
        "id": 169517123,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562099842
    },
    {
        "content": "<blockquote>\n<p>so the only appearance of foo in Π (d : δ), foo is the one at the end</p>\n</blockquote>\n<p>Oh, I have missed <code>foo</code> in <code>Π (d : δ), foo</code> . I understood. Thank you!</p>",
        "id": 169517286,
        "sender_full_name": "Yasuaki MORITA",
        "timestamp": 1562099973
    }
]