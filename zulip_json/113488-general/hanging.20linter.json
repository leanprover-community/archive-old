[
    {
        "content": "<p>This hangs the linter for me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"sd\">/-- define a constant c to break the linter -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span> <span class=\"o\">:=</span> <span class=\"bp\">∑</span> <span class=\"n\">n</span> <span class=\"k\">in</span> <span class=\"n\">finset.range</span> <span class=\"mi\">1320</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">n</span>\n\n<span class=\"bp\">#</span><span class=\"n\">lint</span> <span class=\"c1\">-- hangs</span>\n</code></pre></div>\n<p>It's something to do with the 1320 -- if I change the number to something like 20, it takes ten seconds on my machine but it terminates. Unfortunately the number is not some random number, this is coming from an IMO question (it's approximately 2/3 of 1979).</p>",
        "id": 216994727,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605615075
    },
    {
        "content": "<p>If there isn't a fix immediately forthcoming, then to get unstuck you should create an issue on github and add a <code>@[nolint]</code> here (hopefully this is enough to make the timeout go away) with a comment referring to the issue.</p>",
        "id": 216995914,
        "sender_full_name": "Reid Barton",
        "timestamp": 1605615975
    },
    {
        "content": "<p>thanks</p>",
        "id": 216995933,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605616006
    },
    {
        "content": "<p>Slightly minimized:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"sd\">/-- define a constant c to break the linter -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span> <span class=\"o\">:=</span> <span class=\"bp\">∑</span> <span class=\"n\">n</span> <span class=\"k\">in</span> <span class=\"n\">finset.range</span> <span class=\"mi\">1320</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">n</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">tactic.is_class</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"c1\">-- hangs</span>\n</code></pre></div>",
        "id": 216998310,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1605617802
    },
    {
        "content": "<p>MWE (slightly different error though):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"k\">if</span> <span class=\"mi\">999999999</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">9999999999</span> <span class=\"k\">then</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"mi\">1</span>\n\n<span class=\"k\">#eval</span> <span class=\"n\">tactic.is_class</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 216999210,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1605618317
    },
    {
        "content": "<p>I tried @[nolint] and it asked which linter. I was in the process of finding out the names of the linters when my laptop battery gave up the ghost because I'd hammered it with the linting :-) Do you know which linter I should avoid?</p>",
        "id": 217000105,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605618866
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/issues/502\">lean#502</a></p>",
        "id": 217000128,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1605618880
    },
    {
        "content": "<p><code>@[nolint fails_quickly]</code></p>",
        "id": 217000186,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1605618915
    },
    {
        "content": "<p>Lol thanks</p>",
        "id": 217010881,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605624200
    }
]