[
    {
        "content": "<p>I have heard people (e.g. Reid) talking about bisecting. I have a problem. The schemes repo was written by <span class=\"user-mention\" data-user-id=\"132858\">@Ramon Fernandez Mir</span> and it compiled with June mathlib but doesn't compile with master right now. He is busy doing an MSc (in Amsterdam) and has offered to fix the code but I thought it might be nice to locate the commit of mathlib which broke the repo (and then get it compiling with that commit, and then repeating the process). The code seems very well-written to me and I'm hoping that isolating the breaking commits will make fixing things up easy.</p>\n<p>The question: can I just type one command on the command line and then go to bed tonight, and wake up tomorrow with the output saying \"it was this mathlib commit wot broke it\"? I am envisaging just pulling a mathlib commit, running update-mathlib or just compiling the schemes repo with uncompiled mathlib, and then choosing another commit depending on whether the compilation returns 0 or not. I can't be the first person to be in this situation (or does everyone fix all their repos immediately after they break?)</p>",
        "id": 180331493,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573333519
    },
    {
        "content": "<p><code>git bisect run xxx.sh</code> is what you need</p>",
        "id": 180331738,
        "sender_full_name": "Qian Hong (wechat: fracting)",
        "timestamp": 1573333835
    },
    {
        "content": "<p>you need to prepare a script first, let's call it <a href=\"http://compile.sh\" target=\"_blank\" title=\"http://compile.sh\">compile.sh</a></p>",
        "id": 180331753,
        "sender_full_name": "Qian Hong (wechat: fracting)",
        "timestamp": 1573333862
    },
    {
        "content": "<p>this <a href=\"http://compile.sh\" target=\"_blank\" title=\"http://compile.sh\">compile.sh</a> returns 0 if everything compiles, return non 0 otherwise.</p>",
        "id": 180331789,
        "sender_full_name": "Qian Hong (wechat: fracting)",
        "timestamp": 1573333918
    },
    {
        "content": "<p>Well that should be easy to write -- I hadn't realised it was going to be this easy. Sorry, I should have googled. Hmm wait though, I am a bit unclear about this. Mathlib is the upstream repo which broke my repo, so I should be running git bisect in _target/deps/mathlib? And should the script change the leanpkg.toml of my repo?</p>",
        "id": 180331931,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573334089
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> do you do this sort of thing on a regular basis?</p>",
        "id": 180331943,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573334108
    },
    {
        "content": "<p>sorry i forgot to mention <code>git bisect start</code>, <code>git bisect bad</code> and <code>git bisect start</code>, those are what you need to do before <code>git bisect run compile.sh</code></p>",
        "id": 180331950,
        "sender_full_name": "Qian Hong (wechat: fracting)",
        "timestamp": 1573334149
    },
    {
        "content": "<p>But are these to solve problems of the form \"my repo has stopped compiling, and I want to work out which commit broke it\"?</p>",
        "id": 180331999,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573334186
    },
    {
        "content": "<p>My problem is \"a dependency updated and this broke my repo\"</p>",
        "id": 180332004,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573334205
    },
    {
        "content": "<p>I have done it occasionally, but not in the context of a package using mathlib as a dependency. Rather I just have a standalone file (in my mathlib checkout) and I test whether it compiles after checking out each new version of mathlib.</p>",
        "id": 180332008,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573334217
    },
    {
        "content": "<p>I need to think about it, but I think it is possible</p>",
        "id": 180332018,
        "sender_full_name": "Qian Hong (wechat: fracting)",
        "timestamp": 1573334231
    },
    {
        "content": "<p>Though come to think of it, moving the contents of your package <code>src/</code> alongside mathlib's <code>src/</code> has a nonzero chance of just working</p>",
        "id": 180332020,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573334244
    },
    {
        "content": "<p>I can even do if for you, and you can just sleep and wait for my result :)</p>",
        "id": 180332023,
        "sender_full_name": "Qian Hong (wechat: fracting)",
        "timestamp": 1573334252
    },
    {
        "content": "<p>I just had that very same dirty thought</p>",
        "id": 180332025,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573334256
    },
    {
        "content": "<p>(about moving src)</p>",
        "id": 180332028,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573334269
    },
    {
        "content": "<p>Lemme try Reid's horrible approach first, it might work.</p>",
        "id": 180332073,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573334295
    },
    {
        "content": "<p>and yes, I agree in this case you should run git bisect in a mathlib git repo, then run some commands to: 1. delete  _target/deps/mathlib, 2. copy a new mathlib from the git repo to _target/deps/mathlib 3. compile again</p>",
        "id": 180332186,
        "sender_full_name": "Qian Hong (wechat: fracting)",
        "timestamp": 1573334499
    },
    {
        "content": "<p>Reid's approach seems simpler, if you happen to be able to simplify your problem to a standalone minimal test case</p>",
        "id": 180332242,
        "sender_full_name": "Qian Hong (wechat: fracting)",
        "timestamp": 1573334575
    },
    {
        "content": "<p>But if you use <code>leanpkg build</code> to build then it will go and check out the commit specified by the leanpkg.toml file. So if you try this approach be sure to run <code>lean --make src</code> directly</p>",
        "id": 180332251,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573334591
    },
    {
        "content": "<p>Will it be possible to massively save time by using cache-olean somehow?</p>",
        "id": 180332435,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573334871
    },
    {
        "content": "<p>The copying in from src seems safe to me, there are no duplicate file or directory names. I want to find out when <code>src/instances/affine-scheme.lean</code> stopped compiling, because this file compiles iff the repo compiles.</p>",
        "id": 180332498,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573334926
    },
    {
        "content": "<p>Okay, then you can use <code>git bisect</code> with <code>lean src/instances/affine-scheme.lean</code> as the command to test</p>",
        "id": 180332671,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573335203
    },
    {
        "content": "<p>what will happen with the olean files? Do I just not worry?</p>",
        "id": 180332681,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573335224
    },
    {
        "content": "<p>Should be fine</p>",
        "id": 180332764,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573335323
    },
    {
        "content": "<p>I don't know anything about using cache-olean</p>",
        "id": 180332767,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573335328
    },
    {
        "content": "<p>I'm going to go with something like <code>lean -M6000 --make src/instances/affine-scheme.lean</code>. Hmm, what is a minimum safe value for this? I don't want compilation to fail because of memory issues; conversely I don't want to freeze my machine.</p>",
        "id": 180332846,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573335439
    },
    {
        "content": "<p>oh this is great, I think hardly any of mathlib got compiled. Oh I think all my problems are solved, other than which commit broke the repo. Many thanks <span class=\"user-mention\" data-user-id=\"115180\">@Qian Hong (wechat: fracting)</span> and <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> ! I'll be back in the morning complaining that my house burnt down.</p>",
        "id": 180332905,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573335506
    },
    {
        "content": "<p>Yes, if you're lucky then you actually don't need to build much of mathlib and then it is much faster than you would otherwise expect.</p>",
        "id": 180332915,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573335541
    },
    {
        "content": "<p>And if you are unlucky, then there might be more than one commits broke the build, some of broken commits might be fixed by following commits, and then new broken commits introduced...  In that case there is no guarantee <code>git bisect</code> can return the \"right\" broken commit you want</p>",
        "id": 180333042,
        "sender_full_name": "Qian Hong (wechat: fracting)",
        "timestamp": 1573335712
    },
    {
        "content": "<p>I'm sure it's broken for multiple reasons, I just thought it might be interesting to find the first place where it broke.</p>",
        "id": 180333126,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573335821
    },
    {
        "content": "<p>You have no guarantee to find the first place, just some place</p>",
        "id": 180333216,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573335915
    },
    {
        "content": "<p>Let's assume that on no occasion did it break and then magically get fixed.</p>",
        "id": 180333230,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573335942
    }
]