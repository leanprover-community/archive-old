[
    {
        "content": "<p>Can I emulate the following equation compiler induction</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">theorem</span> <span class=\"n\">mythm</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">p</span> <span class=\"n\">l</span>\n<span class=\"bp\">|</span> <span class=\"o\">[]</span> <span class=\"o\">:=</span> <span class=\"n\">p0</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">p1</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">::</span><span class=\"n\">b</span><span class=\"bp\">::</span><span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">p2</span> <span class=\"o\">(</span><span class=\"n\">mythm</span> <span class=\"n\">l</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>using <code>induction</code> tactic? Or should I add a lemma <code>list.induction_on2 : ∀ l, C [] → C [a] → (∀ a b l, C l → C (a::b::l)) → C l</code>?</p>",
        "id": 196135757,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1588560929
    },
    {
        "content": "<p>In my specific example I get <code>l</code> as a result of <code>rcases</code> so I can't use equation compiler directly (or I don't know how to do it).</p>",
        "id": 196135803,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1588560997
    },
    {
        "content": "<p>You could do strong induction on the length of the list</p>",
        "id": 196137282,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1588563635
    }
]