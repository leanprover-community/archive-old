[
    {
        "content": "<p>Hey.<br>\nI'm trying to unfold my own definition which is only applied partially, e.g.<br>\nin a goal</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">my_function</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">something_else</span>\n</pre></div>\n\n\n<p>where</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">my_function</span> <span class=\"o\">:</span> <span class=\"n\">some_type</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">α</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">some_comm_monoid_type</span>\n</pre></div>\n\n\n<p>In that case, dunfold/unfold doesn't work and I need to specify</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">my_function</span> <span class=\"n\">b</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">something_else</span>\n</pre></div>\n\n\n<p>for the tactic to work. Is there a workaround for this to be done automatically ? Thanks.</p>",
        "id": 127766659,
        "sender_full_name": "Pablo Le Hénaff",
        "timestamp": 1528456726
    },
    {
        "content": "<p>You can define <code>my_function</code> with the second argument right of the colon</p>",
        "id": 127766782,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1528456925
    },
    {
        "content": "<p>i.e. write <code>my_function (s : some_type) : α -&gt; some_comm_monoid_type := λa, ...</code></p>",
        "id": 127766787,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1528456960
    },
    {
        "content": "<p>assuming you always want to unfold this function in such a partially applied environment</p>",
        "id": 127766794,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1528457001
    }
]