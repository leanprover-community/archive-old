[
    {
        "content": "<p>Hi, can we do typecheck under tactic mode, say</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span><span class=\"o\">,</span>\n  <span class=\"k\">#check</span> <span class=\"n\">eq.symm</span> <span class=\"n\">h₂</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">eq.trans</span> <span class=\"o\">(</span><span class=\"n\">eq.symm</span> <span class=\"n\">h₂</span><span class=\"o\">)</span> <span class=\"n\">h₁</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>thought it's useful for some beginners like me.</p>",
        "id": 312857410,
        "sender_full_name": "Xie Zejian",
        "timestamp": 1669732791
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#type_check\">tactic#type_check</a></p>",
        "id": 312857578,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669732827
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 312860394,
        "sender_full_name": "Xie Zejian",
        "timestamp": 1669733644
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"528629\">Xie Zejian</span> has marked this topic as resolved.</p>",
        "id": 312860410,
        "sender_full_name": "Notification Bot",
        "timestamp": 1669733649
    },
    {
        "content": "<p>I didn't know about <code>type_check</code>. What I usually do is <code>have :=</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">eq.symm</span> <span class=\"n\">h₂</span><span class=\"o\">,</span> <span class=\"c1\">-- adds this : c = a</span>\n  <span class=\"n\">exact</span> <span class=\"n\">eq.trans</span> <span class=\"o\">(</span><span class=\"n\">eq.symm</span> <span class=\"n\">h₂</span><span class=\"o\">)</span> <span class=\"n\">h₁</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 312862195,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1669734088
    },
    {
        "content": "<p>I only knew about <code>type_check</code> because I ported it to Lean 4 <span aria-label=\"lol\" class=\"emoji emoji-1f606\" role=\"img\" title=\"lol\">:lol:</span></p>",
        "id": 312870462,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1669736410
    }
]