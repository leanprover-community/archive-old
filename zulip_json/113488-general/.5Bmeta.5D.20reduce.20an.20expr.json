[
    {
        "content": "<p>So I have an <code>expr</code> of the form <code>not a</code>, can I evaluate this expr further? because <code>not</code> is defined as <code>\\lam a, (a -&gt; false)</code>.</p>",
        "id": 131968299,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1534020063
    },
    {
        "content": "<p><code>a</code> is of type <code>Prop</code>, BTW.</p>",
        "id": 131968352,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1534020141
    },
    {
        "content": "<p>When you say evaluate, do you mean simplify? if so, you can find rules about <code>not</code> in <code>logic.basic</code> (mathlib) and <code>init.logic</code> (core), then you can call <code>simp [...]</code> with those rules your expression.</p>",
        "id": 131968459,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1534020365
    },
    {
        "content": "<p>hmm, is it possible to do it without explicitly refering to the def of <code>not</code>?</p>",
        "id": 131968478,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1534020473
    },
    {
        "content": "<p>I'm not following you. My <code>simp</code> expression only lists lemmas to use with your reduction.</p>",
        "id": 131968606,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1534020685
    },
    {
        "content": "<p>I see what you are saying, thank you.</p>",
        "id": 131968653,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1534020779
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 132324576,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1534536483
    }
]