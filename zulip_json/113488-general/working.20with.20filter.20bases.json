[
    {
        "content": "<p>So I have a filter expression of the form:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">g</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">•</span> <span class=\"n\">filter.map</span> <span class=\"n\">m</span> <span class=\"bp\">↑</span><span class=\"n\">h</span> <span class=\"bp\">⊓</span> <span class=\"n\">map</span> <span class=\"n\">n</span> <span class=\"n\">f</span>\n</code></pre></div>\n<p>I need to  show that this filter is not <code>ne_bot</code>. I would like to prove this using filter bases, but it is not clear to me how to get a filter bases for this kind of filter expression easily. Any tips?</p>",
        "id": 290253032,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1658331690
    },
    {
        "content": "<p>Do you really mean \"not <code>ne_bot</code>\" or is it a typo ?</p>",
        "id": 290253541,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1658331864
    },
    {
        "content": "<p>Oops. That was a typo. I meant I need to prove <code>ne_bot</code>.</p>",
        "id": 290255900,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1658332737
    },
    {
        "content": "<p>Can you perhaps add a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> ?</p>",
        "id": 290484970,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1658483003
    },
    {
        "content": "<p>Oh sorry I wanted to answer but I forgot. Does <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.has_basis.inf_ne_bot_iff\">docs#filter.has_basis.inf_ne_bot_iff</a> help you ? I say that's easier than explicitely constructing the filter basis just to show that is does not contain <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∅</mi></mrow><annotation encoding=\"application/x-tex\">\\varnothing</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6633em;vertical-align:-0.0817em;\"></span><span class=\"mord amsrm\">∅</span></span></span></span></p>",
        "id": 290555268,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1658517426
    },
    {
        "content": "<p>filter.has_basis.inf_ne_bot_iff is great, but I need one for the whole of g⁻¹ • <a href=\"http://filter.map\">filter.map</a> m ↑h ⊓ map n f. I guess I can compose some of has_basis lemmas to get one for this whole expression. I will have to experiment. Thanks.</p>",
        "id": 290956381,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1658869641
    }
]