[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> In <a href=\"https://github.com/leanprover-community/mathlib/pull/1259#issuecomment-514792526\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/1259#issuecomment-514792526\">https://github.com/leanprover-community/mathlib/pull/1259#issuecomment-514792526</a> there are some problems mentioned (by Johannes) with structure notation. I have had these problems as well.<br>\nWill those be fixed in Lean 4? Currently this is quite painful, even though structure notation produces more readable code than the anonymous version.<br>\nQuotes:</p>\n<blockquote>\n<p>jcommelin:<br>\nI personally find the \"named constructor\"-version slightly more readable than the anonymous version.</p>\n<p>johoelzl:<br>\nTrue, but there are two problems:</p>\n<div class=\"codehilite\"><pre><span></span>Lean was crashing when writing down the structure syntax (some assertions), and\nthe auto-parameters took ages to fail\n</pre></div>\n\n\n<p>I can use the structure syntax again.</p>\n<p>semorrison:<br>\nI tend to:</p>\n<p>1. Write out all the fields, filled in with sorry (including the auto_param fields).<br>\n 2. Fill in the meaningful data fields.<br>\n 3. Try removing the auto_param fields one by one, to see which ones the tactic can handle.<br>\n 4. Write any remaining proofs.<br>\nIt's certainly an unfortunate problem that while the data fields are incomplete or broken, Lean wastes a lot of time running auto_param tactics.</p>\n<p>johoelzl:<br>\nA third problem I have with the structure notation:<br>\nSometimes I write down {field1 := _, field2 := _ }, but instead of showing me the type of field1, I get a type error at field2. I don't remember if there was a solution to this, was this related to the meta-universe problem?</p>\n</blockquote>",
        "id": 171657612,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1564020141
    },
    {
        "content": "<p>The structure notation parser is one of the hackiest and messiest parts of the lean 3 parser, and it is responsible for a lot of bug reports. My guess is it's been completely rewritten, and with any luck it's more reasonable now in lean 4</p>",
        "id": 171657707,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1564020308
    },
    {
        "content": "<p>Related to this, I (or someone) should put a test in <code>tidy</code> that fails quickly if it finds a <code>sorry</code> in the goal. I know that the <code>tidy</code> auto_params waste lots of CPU time on goals with embedded sorries.</p>",
        "id": 171659919,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1564024400
    },
    {
        "content": "<p>(This is obviously only relevant while coding, not for library compile times.)</p>",
        "id": 171659925,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1564024423
    }
]