[
    {
        "content": "<p>In <a href=\"https://leanprover.github.io/theorem_proving_in_lean/structures_and_records.html#declaring-structures\" target=\"_blank\" title=\"https://leanprover.github.io/theorem_proving_in_lean/structures_and_records.html#declaring-structures\">Chapter 9.1 of Theorem Proving in Lean</a>, it says:</p>\n<blockquote>\n<p>Recall that in Lean, <code>Type 0</code> is <code>Prop</code>, which is impredicative and proof irrelevant.</p>\n</blockquote>\n<p>But at least in Lean v3.5.c, <code>Prop</code> is <code>Sort 0</code> and <code>Type = Type 0 = Sort 1</code>. I suppose this is unintentional?</p>",
        "id": 188859766,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1582448463
    },
    {
        "content": "<p>That certainly looks like an error to me. </p>\n<div class=\"codehilite\"><pre><span></span>pprod : Sort u_1 → Sort u_2 → Sort (max 1 u_1 u_2)\n</pre></div>\n\n\n<p>Note \"Sort\" not \"Type\".</p>",
        "id": 188861326,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1582450838
    },
    {
        "content": "<p>Once upon a time, <code>Prop</code> was <code>Type 0</code> and <code>Type u</code> was just <code>Type u</code>; there was no <code>Sort u</code>.  Then early in Lean 3, we changed this to improve universe level inference.  Now <code>Type u</code> is <code>Sort (u+1)</code> and <code>Prop</code> is <code>Sort 0</code>.</p>",
        "id": 188861666,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1582451499
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> for providing the historical background, I suspected that that might have been the case.</p>",
        "id": 188861762,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1582451653
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span> TPIL bug report :)</p>",
        "id": 188862528,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1582452771
    },
    {
        "content": "<p>Thanks! I have fixed it.</p>",
        "id": 188891509,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1582505310
    }
]