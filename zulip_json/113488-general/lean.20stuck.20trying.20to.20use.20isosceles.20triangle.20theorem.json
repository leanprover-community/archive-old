[
    {
        "content": "<p>When I ask Lean to typecheck this program, it gets stuck for a very long time (maybe forever):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">geometry.euclidean.triangle</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">euclidean_geometry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">angles_equal</span>\n    <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">:</span> <span class=\"n\">euclidean_space</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">dist</span> <span class=\"n\">A</span> <span class=\"n\">D</span> <span class=\"bp\">=</span> <span class=\"n\">dist</span> <span class=\"n\">C</span> <span class=\"n\">D</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"bp\">∠</span> <span class=\"n\">D</span> <span class=\"n\">A</span> <span class=\"n\">C</span> <span class=\"bp\">=</span> <span class=\"bp\">∠</span> <span class=\"n\">D</span> <span class=\"n\">C</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">euclidean_geometry.angle_eq_angle_of_dist_eq</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>Am I doing something wrong? Is this a known bug?</p>",
        "id": 236091320,
        "sender_full_name": "David Renshaw",
        "timestamp": 1619382957
    },
    {
        "content": "<p>Hm... ok, so it works fine if I change the order of the points in the <code>H</code> hypothesis, like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">dist</span> <span class=\"n\">D</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">dist</span> <span class=\"n\">D</span> <span class=\"n\">C</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 236091952,
        "sender_full_name": "David Renshaw",
        "timestamp": 1619383646
    },
    {
        "content": "<p>but I'm still puzzled about why it behaves so badly when I get the order wrong</p>",
        "id": 236092045,
        "sender_full_name": "David Renshaw",
        "timestamp": 1619383769
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/euclidean_geometry.angle_eq_angle_of_dist_eq\">docs#euclidean_geometry.angle_eq_angle_of_dist_eq</a></p>",
        "id": 236097367,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1619388389
    },
    {
        "content": "<p>Lean is trying to construct a proof that A=C the first time, because you've fed H into a function which is expecting an input of the form <code>dist X Y = dist X Z</code>. Although why it doesn't give up is not a question I can answer.</p>",
        "id": 236097459,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1619388495
    },
    {
        "content": "<p>Maybe the types of A and C are really complicated if you unravel everything</p>",
        "id": 236097482,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1619388530
    },
    {
        "content": "<p>Yeah they're pretty complicated, <code>euclidean_space</code> is just a type synonym with a different metric on it than regular pi types.</p>",
        "id": 236097962,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1619389035
    }
]