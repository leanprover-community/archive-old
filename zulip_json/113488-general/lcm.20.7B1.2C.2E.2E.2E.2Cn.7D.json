[
    {
        "content": "<p>As a small side project, I'm trying to determine the exponent of the symmetric groups, which is the lcm of the first n positive integers. I wanted to start by writing this as a product of prime powers. So far, I haven't even figured out how to formulate the statement. The following is my current attempt after some iterations. I understand that Lean complains that I am giving it a set where it wants a finset. How can I change this? Are there other comments regarding my current attempt?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.list.range</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.int.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.big_operators</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.nat.log</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.gcd_monoid.multiset</span>\n\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">lcm_iota</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span>  <span class=\"n\">multiset.lcm</span> <span class=\"o\">(</span><span class=\"n\">coe</span> <span class=\"o\">(</span><span class=\"n\">list.iota</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"bp\">∏</span> <span class=\"n\">p</span> <span class=\"k\">in</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">|</span> <span class=\"n\">p.prime</span> <span class=\"bp\">∧</span> <span class=\"n\">p</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">},</span> <span class=\"n\">p</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">nat.log</span> <span class=\"n\">p</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 270066712,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1643648772
    },
    {
        "content": "<p>You may want <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset.Icc\">docs#multiset.Icc</a>?</p>",
        "id": 270067099,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643648920
    },
    {
        "content": "<p>And for the RHS you can write it as <code>(finset.Iic n).filter prime</code></p>",
        "id": 270067228,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643648976
    },
    {
        "content": "<p>I get that it is missing <code>decidable_pred prime</code>. Do I need an additional import for that?</p>",
        "id": 270067584,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1643649106
    },
    {
        "content": "<p>Otherwise, <code>open_locale classical</code> also seems to work.</p>",
        "id": 270067806,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1643649182
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.decidable_prime\">docs#nat.decidable_prime</a> should do its job.</p>",
        "id": 270067937,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643649235
    },
    {
        "content": "<p>It's weirdly not stated as <code>decidable_pred</code>, but that shouldn't matter.</p>",
        "id": 270068058,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643649271
    },
    {
        "content": "<p>Thanks. Unfortunately, I don't quite understand how to enable this def in my file?</p>",
        "id": 270068401,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1643649406
    },
    {
        "content": "<p>Isn't <code>import data.nat.prime</code> enough?</p>",
        "id": 270068531,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643649450
    },
    {
        "content": "<p>There are two decidability definitions of <code>nat.prime</code>, each of which has different pros and cons, kernel vs VM</p>",
        "id": 270069591,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1643649849
    }
]