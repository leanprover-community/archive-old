[
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.prime\">docs#nat.prime</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/prime\">docs#prime</a>. Should we redefine <code>nat.prime</code> in terms of <code>_root_.prime</code>?</p>",
        "id": 264423205,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639129604
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"422543\">@Stuart Presnell</span> , because you've been working with <code>nat.prime</code> a lot recently.</p>",
        "id": 264423230,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639129623
    },
    {
        "content": "<p>Do we even have the statement that the two notions are equivalent?</p>",
        "id": 264423433,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639129714
    },
    {
        "content": "<p>pretty sure</p>",
        "id": 264423452,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1639129724
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.prime_iff\">docs#nat.prime_iff</a></p>",
        "id": 264423520,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1639129768
    },
    {
        "content": "<p>Although, there is both <code>irreducible</code> and <code>prime</code> and neither one is a clear winner for the definition of <code>nat.prime</code></p>",
        "id": 264423610,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1639129809
    },
    {
        "content": "<p>I worry about dependency bloat, of course. It would be nice to make these kinds of things quantitative, for example, calculating the sum of the depths of all files before and after</p>",
        "id": 264423888,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1639129949
    },
    {
        "content": "<p>If we can split off the <code>big_operators</code> dependency from <a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/associated.html\"><code>algebra.associated</code></a>, the remainder is low-level definitions such as <code>group_with_zero</code> and <code>units</code>. So I'm in favour of unifying <code>nat.prime</code> with <code>_root_.prime</code> after such a split.</p>",
        "id": 264424323,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1639130182
    },
    {
        "content": "<p>Right, clearly <code>big_ops</code> shouldn't be a dependency.</p>",
        "id": 264424505,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639130293
    },
    {
        "content": "<p>But otherwise, I think it's quite mild.</p>",
        "id": 264424514,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639130301
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/nat.2Eprime/near/264423888\">said</a>:</p>\n<blockquote>\n<p>I worry about dependency bloat, of course. It would be nice to make these kinds of things quantitative, for example, calculating the sum of the depths of all files before and after</p>\n</blockquote>\n<p>Do the stats at <a href=\"https://eric-wieser.github.io/mathlib-import-graph/?highlight=mathlib%3Aring_theory.int.basic\">https://eric-wieser.github.io/mathlib-import-graph/?highlight=mathlib%3Aring_theory.int.basic</a> help? If you hover over the highlighted node, it tells you that 31285 declarations appear before that file, and 248 files consume it.</p>",
        "id": 264425284,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639130737
    },
    {
        "content": "<p>Oh, I think I broke that dependency at some point, but then didn't land that? It's just <code>exists_mem_finset_dvd</code> that needs it</p>",
        "id": 264425292,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1639130740
    },
    {
        "content": "<p>That was in <a href=\"https://github.com/leanprover-community/mathlib/issues/9606\">#9606</a> - that lemma isn't even used in mathlib</p>",
        "id": 264425365,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1639130770
    },
    {
        "content": "<p>I am strongly in favor of removing <code>nat.prime</code> and just using <code>prime</code> everywhere.</p>",
        "id": 265048990,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1639591088
    },
    {
        "content": "<p>I guess <code>p.prime</code> is no shorter than <code>prime p</code>.</p>",
        "id": 265085459,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639607411
    },
    {
        "content": "<p>That's not the point. The point is deduplicating all the lemmas.</p>",
        "id": 265116497,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639635622
    },
    {
        "content": "<p>Step 1: <a href=\"https://github.com/leanprover-community/mathlib/pull/10848\">#10848</a></p>",
        "id": 265195161,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1639677970
    },
    {
        "content": "<p>I started looking into this at <a href=\"https://github.com/leanprover-community/mathlib/tree/nat-prime-irreducible\">branch#nat-prime-irreducible</a> - I tried with <code>prime</code>, but it seems like the <code>nat.prime</code> &lt;-&gt; <code>prime</code> equivalence requires a fair amount of material. <code>irreducible</code> is essentially the current definition, so that seems to work better to build up the api.</p>\n<p>(Code is still a mess at this point)</p>",
        "id": 265801495,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1640177938
    },
    {
        "content": "<p>Thanks for taking this up!</p>",
        "id": 265803785,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1640179352
    },
    {
        "content": "<p>To my surprise, I seem to have made it back to a compiling mathlib with +108-105 changes</p>",
        "id": 265848993,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1640204869
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/11031\">#11031</a></p>",
        "id": 265995292,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1640344727
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 265997018,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1640346828
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Are you happy with this new state of affairs? It looks good to me</p>",
        "id": 265997643,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1640347493
    },
    {
        "content": "<p>Looks good, it looks like imports weren't affected too much</p>",
        "id": 266016826,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1640369861
    },
    {
        "content": "<p>I think it is confusing that <code>nat.min_fac_prime</code> does not make progress on <code>prime (nat.min_fac N)</code>.</p>",
        "id": 294795425,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1661222911
    }
]