[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"bp\">λ</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"err\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"bp\">ℤ</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"err\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"bp\">ℤ</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"mi\">0</span>\n<span class=\"c1\">-- maximum class-instance resolution depth has been reached (the limit can be increased by setting option &#39;class.instance_max_depth&#39;) (the class-instance resolution trace can be visualized by setting option &#39;trace.class_instances&#39;)</span>\n</pre></div>",
        "id": 170965735,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1563266508
    },
    {
        "content": "<p>I think the cause is the fact that the ideal is a module over Z in two ways</p>",
        "id": 170965784,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1563266532
    },
    {
        "content": "<p>in f, the module instance is the second one</p>",
        "id": 170965817,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1563266562
    },
    {
        "content": "<p>but when I want to coerce f to a function, Lean can only deal with the first one</p>",
        "id": 170965831,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1563266574
    },
    {
        "content": "<p>despite the fact that the module instances is already encoded in the type of f...</p>",
        "id": 170965848,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1563266591
    }
]