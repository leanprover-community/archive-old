[
    {
        "content": "<p>The thread <code>Verifying backtracking algorithms</code> reminded me of something I've been thinking. Would it be a good idea to have a server with centralized confirmed lean proofs? You submit your lean file, the server cleans it out and formats it, then runs it. if the entire file is accepted by Lean without sorries, store the file and emit a certificate link to the user and that certificate can be used to check whether that lean file contains correct proofs or not in O(1)</p>",
        "id": 258633430,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1634858780
    },
    {
        "content": "<p>Isn't that exactly what the oleans action of the mathlib github repo does?</p>",
        "id": 258633684,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1634858938
    },
    {
        "content": "<p>I don't think reading oleans is O(1) though</p>",
        "id": 258633752,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634858986
    },
    {
        "content": "<p>reading github is more like it</p>",
        "id": 258633842,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634859022
    },
    {
        "content": "<p>It's different though. I could submit my file without having someone else to look at it. the goal wouldn't be exactly to have a server of well-written proofs ready to be reused. But rather just so I can present something I've done and everyone can check on the link i provided that my proofs are correct</p>",
        "id": 258633955,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1634859112
    },
    {
        "content": "<p>A \"Lean Seal of Approval\"</p>",
        "id": 258634035,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1634859148
    },
    {
        "content": "<p>It's a little dangerous to give out CPU time like that</p>",
        "id": 258634105,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634859203
    },
    {
        "content": "<p>Charge for usage <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 258634204,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1634859249
    },
    {
        "content": "<p>it's also a little dangerous to open up a server to arbitrary code execution</p>",
        "id": 258634295,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634859316
    },
    {
        "content": "<p>lean is not sandboxed in any meaningful sense</p>",
        "id": 258634330,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634859342
    },
    {
        "content": "<p>Is there a situation you have in mind where pointing to your own github repository with a green CI checkmark isn't sufficient?</p>",
        "id": 258634397,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634859370
    },
    {
        "content": "<p>the runner can be, like a docker or something</p>",
        "id": 258634400,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1634859371
    },
    {
        "content": "<p>It's only like 10 lines of github setup that you'd have to check uses the right conditions for the checkmark</p>",
        "id": 258634476,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634859437
    },
    {
        "content": "<p>people would have to double check the tests I set, yeah</p>",
        "id": 258634516,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1634859476
    },
    {
        "content": "<p>Sure, but people also have to double-check your lean statement actually states the thing you say it does too</p>",
        "id": 258634621,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634859540
    },
    {
        "content": "<p>Very true. And it's easier to check the tests setup</p>",
        "id": 258634678,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1634859587
    },
    {
        "content": "<p>Here's an example of the \"tests\" that your reader would have to check: <a href=\"https://github.com/eric-wieser/lean-matrix-cookbook/actions/runs/1369033020/workflow\">https://github.com/eric-wieser/lean-matrix-cookbook/actions/runs/1369033020/workflow</a>. Note it allows sorry by default, but I'm sure we could change that to be opt-in.</p>",
        "id": 258634690,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634859596
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/113488-general/topic/Remotely.20trusted.20proofs/near/258634400\">said</a>:</p>\n<blockquote>\n<p>the runner can be, like a docker or something</p>\n</blockquote>\n<p>(Docker is not a security tool / sandbox, FWIW)</p>",
        "id": 258634750,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634859624
    },
    {
        "content": "<p>Security is a terrifying monster in these situations...</p>",
        "id": 258634940,
        "sender_full_name": "Cody Roux",
        "timestamp": 1634859773
    },
    {
        "content": "<p>Great inputs. Time to read about <code>oleans</code>. Thanks everyone <span aria-label=\"bow\" class=\"emoji emoji-1f647\" role=\"img\" title=\"bow\">:bow:</span></p>",
        "id": 258634977,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1634859803
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> has marked this topic as resolved.</p>",
        "id": 258635096,
        "sender_full_name": "Notification Bot",
        "timestamp": 1634859859
    },
    {
        "content": "<blockquote>\n<p>(Docker is not a security tool / sandbox, FWIW)</p>\n</blockquote>\n<p>I hear this claim being thrown around a lot, but I don't think there's much substance to it.  Linux user namespaces are roughly the same isolation level as users.  And that's a reasonable protection for most untrusted code (e.g. android uses linux users to sandbox the spyware on your phone).  Sure, VMs have a smaller attack surface than containers and air-gapped machines would be even better, but it's not like containers have a get-root-here button.  The docker privilege escalation bugs I've seen require mounting the host root fs into the container, exposing the docker daemon socket, and/or using the legacy root docker daemon (all of which are bad ideas in general).</p>",
        "id": 258673802,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634887644
    },
    {
        "content": "<p>There's a difference I think between \"I want to run a program I need and don't want to be bothered reading it carefully\" and \"I want to run a thing whose entire existence runs untrusted code over and over again\" -- it seemed in the tangent that this was more the latter -- there are orders of magnitude more container escape vulnerabilities than VM ones, yeah some requiring misconfig but some just requiring you to forget to update an old kernel in the container</p>",
        "id": 258700120,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634903385
    },
    {
        "content": "<blockquote>\n<p>update an old kernel in the container</p>\n</blockquote>\n<p>Not sure what you're getting at here, the container uses the same kernel as the host system, that's kind of the main difference to VMs.  But yeah it's less secure than vms, that's why azure etc. run everything in vms (and stay on top of zero days).</p>",
        "id": 258703172,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634905178
    },
    {
        "content": "<p>Sorry, indeed, that was an early morning typo for package -- sounds like we agree then, all I meant (and all I think that statement usually means) is to use VMs if you care about isolation</p>",
        "id": 258707018,
        "sender_full_name": "Julian Berman",
        "timestamp": 1634907178
    }
]