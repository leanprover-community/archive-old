[
    {
        "content": "<p>In my commit <a href=\"https://github.com/leanprover-community/mathlib/pull/10889\">#10889</a>, mathlib unexpectedly won't build. The breakage is at <code>set_theory/game/domineering</code>, (I presume) because of an unexpected <code>lex.decidable_eq</code> instance in line 98. Can someone help explain what happened here and how to fix this? Thanks</p>",
        "id": 265475701,
        "sender_full_name": "Mantas Baksys",
        "timestamp": 1639913456
    },
    {
        "content": "<p>To add more information, this PR adds an import of <code>order.lexicographic</code>, so I suspect it is a transparency problem of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/lex\">docs#lex</a> which happens to have gone unnoticed so far.</p>",
        "id": 265477520,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639916486
    },
    {
        "content": "<p>It would be good to add a <code>prod.to_lex</code> and <code>lex.to_prod</code> def somewhere, rather that relying on @s to convert between types</p>",
        "id": 265478255,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639917588
    },
    {
        "content": "<p>(out of scope for that PR, but worth doing at some point)</p>",
        "id": 265478301,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639917606
    },
    {
        "content": "<p>I was wondering whether switching to the architecture I use in <code>data.sigma.order</code> might be better. Another option is to have <code>lex α</code> a type synonym of <code>α</code> and put lexicographical instances on <code>lex (α × β)</code>, <code>lex (Σ i, α i)</code>, <code>lex (Σ' i, α i)</code>.</p>",
        "id": 265478475,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639917925
    },
    {
        "content": "<p>Which one do you prefer?</p>",
        "id": 265478480,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639917951
    },
    {
        "content": "<p>I quite like the single type synonym approach you're suggesting there</p>",
        "id": 265480497,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639920789
    },
    {
        "content": "<p>Me too. I'll refactor then. Where should the type synonym be defined? I think it could go in <code>order.lexicographic</code> (which I'm planning to rename in <code>data.prod.lex</code> or <code>data.prod.order</code> at some point).</p>",
        "id": 265480552,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639920898
    }
]