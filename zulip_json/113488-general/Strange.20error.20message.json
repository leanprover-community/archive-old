[
    {
        "content": "<p><code>code generation failed, VM does not have code for 'classical.choice'</code> seems to be Lean trying to tell me to stop considering examples and go back to work</p>",
        "id": 125639855,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524603263
    },
    {
        "content": "<p>you can't compute the <code>noncomputable</code></p>",
        "id": 125640036,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524603510
    },
    {
        "content": "<p>Yes I understand</p>",
        "id": 125640044,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524603523
    },
    {
        "content": "<p>funny part is I thought I wasn't using choice</p>",
        "id": 125640337,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524603883
    },
    {
        "content": "<p>Actually I used a small <code>#eval</code> to test something in the middle of a file I was working on. Of course this file begins the mathematical preamble, including <code>local attribute [instance] classical.prop_decidable</code></p>",
        "id": 125640531,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524604158
    },
    {
        "content": "<p>Removing that line makes eval to succeed</p>",
        "id": 125640537,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524604173
    },
    {
        "content": "<p>So the line can prevent computing even things which are actually computable. That's nice defense against constructivism</p>",
        "id": 125640685,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524604363
    },
    {
        "content": "<p>You can use <code>local attribute [instance, priority 0] classical.prop_decidable</code> to preserve computability when possible.</p>",
        "id": 125642446,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1524606770
    }
]