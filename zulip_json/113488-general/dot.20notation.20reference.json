[
    {
        "content": "<p>Is there any paper one can cite to explain dot notation to readers unfamiliar with Lean?</p>",
        "id": 299747231,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1663679851
    },
    {
        "content": "<p>I mean this in the context of an academic paper, not a tutorial.</p>",
        "id": 299747300,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1663679878
    },
    {
        "content": "<p>I guess I am to blame for the notation, but I don't know any papers explaining it</p>",
        "id": 299748505,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1663680221
    },
    {
        "content": "<p>Not even vaguely?</p>",
        "id": 299748544,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1663680237
    },
    {
        "content": "<p>Bhavik and I explain it quickly in <a href=\"https://drops.dagstuhl.de/opus/volltexte/2022/16718/\">our SRL paper</a>.</p>",
        "id": 299748705,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1663680273
    },
    {
        "content": "<p>Thanks, but it's indeed <em>very</em> quick. Citing that instead of including the sentence would be a bit weird.</p>",
        "id": 299748967,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1663680354
    },
    {
        "content": "<p>This is the only relevant mention of \"dot\" in the official Lean publications <a href=\"/user_uploads/3121/pRR-3HnC_w1hfhRyPCoIusLZ/image.png\">image.png</a> <a href=\"https://leanprover.github.io/papers/do.pdf\">https://leanprover.github.io/papers/do.pdf</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/pRR-3HnC_w1hfhRyPCoIusLZ/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/pRR-3HnC_w1hfhRyPCoIusLZ/image.png\"></a></div>",
        "id": 299749120,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1663680395
    },
    {
        "content": "<p>Citing a Lean 4 paper would also be weird. I guess it's too late to include this in a Lean 3 paper.</p>",
        "id": 299749549,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1663680560
    },
    {
        "content": "<p>But it reminds me that I think it's explained in Rob's Hensel lemma paper</p>",
        "id": 299749628,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1663680593
    },
    {
        "content": "<p>There is also <a href=\"https://leanprover.github.io/lean4/doc/struct.html?highlight=dot#structures\">https://leanprover.github.io/lean4/doc/struct.html?highlight=dot#structures</a>, which is a bit better than a tutorial, but still Lean 4</p>",
        "id": 299749728,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1663680613
    },
    {
        "content": "<p>Yes, Rob's paper has a full paragraph about it!</p>",
        "id": 299749821,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1663680652
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> has made dot notation more intelligent since that paper</p>",
        "id": 299783408,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1663686415
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/dot.20notation.20reference/near/299749549\">said</a>:</p>\n<blockquote>\n<p>Citing a Lean 4 paper would also be weird. I guess it's too late to include this in a Lean 3 paper.</p>\n</blockquote>\n<p>The extended field notation for Lean 3 is now (mostly) based on Lean 4's, so maybe this is not too weird?</p>\n<p>The \"mostly\" is because it is still slightly different in the way it handles implicit arguments, but it should eventually converge to Lean 4 here.</p>",
        "id": 299795306,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1663689824
    },
    {
        "content": "<p>I'm not completely sure what the official name of dot notation is. It seems to be called (generalized/extended) dot/field notation depending where you look.</p>",
        "id": 299797057,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1663690279
    },
    {
        "content": "<p>I would call it <a href=\"https://en.m.wikipedia.org/wiki/Uniform_Function_Call_Syntax\">uniform call syntax</a></p>",
        "id": 299819356,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1663697652
    },
    {
        "content": "<p>uniform call syntax is <code>@f ...</code></p>",
        "id": 299825041,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1663699605
    },
    {
        "content": "<p>generalized field notation sounds the most correct</p>",
        "id": 299825340,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1663699706
    },
    {
        "content": "<p>The wiki example on uniform function call syntax in D shows:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>    <span class=\"bp\">//</span> <span class=\"n\">all</span> <span class=\"n\">the</span> <span class=\"n\">following</span> <span class=\"n\">are</span> <span class=\"n\">correct</span> <span class=\"n\">and</span> <span class=\"n\">equivalent</span>\n    <span class=\"n\">int</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">first</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">;</span>\n    <span class=\"n\">int</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">a.first</span><span class=\"o\">()</span><span class=\"bp\">;</span>\n    <span class=\"n\">int</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">a.first</span><span class=\"bp\">;</span>\n</code></pre></div>\n<p>To me that looks like the dot notation</p>",
        "id": 299828990,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1663700804
    },
    {
        "content": "<p>based on the description, it's not type dependent. If by \"uniform function call syntax\" is meant \"a uniform syntax for calling functions\" that's <code>@f</code></p>",
        "id": 299829365,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1663700890
    },
    {
        "content": "<p>It might be that Lean uses the term uniform call syntax for <code>@f ...</code>. But for me, coming from C++/D, uniform function call syntax is than <code>f(x)</code> is the same as <code>x.f()</code> or <code>x.f</code>.</p>",
        "id": 299829974,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1663701074
    },
    {
        "content": "<p>The point is that it makes uniform syntax between functions and object's methods.</p>",
        "id": 299830245,
        "sender_full_name": "Tomas Skrivan",
        "timestamp": 1663701163
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306601\">Kyle Miller</span> <a href=\"#narrow/stream/113488-general/topic/dot.20notation.20reference/near/299797057\">said</a>:</p>\n<blockquote>\n<p>I'm not completely sure what the official name of dot notation is. It seems to be called (generalized/extended) dot/field notation depending where you look.</p>\n</blockquote>\n<p>I've seen some names like that in the C++ source code. But there are some more unusual names in the code that we don't use in practice so I vote for \"dot notation\".</p>",
        "id": 299830577,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1663701280
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"346070\">@Tomas Skrivan</span> I see the similarity to UFCS, but in Lean <code>f x</code> and <code>x.f</code> usually don't mean the same thing. There are mildly complicated rules for which namespaces are used to resolve <code>f</code> using the type of <code>x</code>, and this information is also used to determine which argument <code>x</code> will be used for.</p>",
        "id": 299836684,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1663703478
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> I think the error messages in both Lean 3 and 4 mention field notation. Maybe it would be good to go through the error messages sometime and make sure it's all using consistent terminology...</p>",
        "id": 299837767,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1663703800
    }
]