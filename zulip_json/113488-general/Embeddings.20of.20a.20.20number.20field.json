[
    {
        "content": "<p>I am currently working on defining and proving basic results on the embeddings of a number field <code>K</code>  into an algebraic closed field <code>A</code> of char. 0. There are two natural choices to define those: we can see them as plain ring homomorphisms <code> K →+* A</code> or as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span>-algebra homomorphisms <code>K →ₐ[ℚ] A</code>. Of course, these are equivalent  thanks to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ring_hom.equiv_rat_alg_hom\">docs#ring_hom.equiv_rat_alg_hom</a>.<br>\nThe goal of this thread is to discuss between these two choices and come up (hopefully) with a decision.</p>",
        "id": 286708377,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1655643236
    },
    {
        "content": "<p>I would go with plain ring homomorphisms. There are diamonds lurking here IIRC. Why not keep things as simple as possible? I would love to see a proof of the formula for the rank of the unit group of a number field btw!</p>",
        "id": 286708535,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1655643470
    },
    {
        "content": "<p>/poll Embeddings of a number field<br>\nRing hom. <code> K →+* A</code><br>\nAlg. hom.  <code>K →ₐ[ℚ] A</code></p>",
        "id": 286708536,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1655643475
    },
    {
        "content": "<p>I agree with Kevin. The <code>algebra_rat</code> diamond is really annoying.</p>",
        "id": 286708600,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1655643556
    },
    {
        "content": "<p>I would also guess that many of the basic things you can prove about these will work in any characteristic.</p>",
        "id": 286708604,
        "sender_full_name": "Reid Barton",
        "timestamp": 1655643561
    },
    {
        "content": "<p>Oh but then you would also want to work over the base field, which might not be a prime field.</p>",
        "id": 286712997,
        "sender_full_name": "Reid Barton",
        "timestamp": 1655649483
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/113488-general/topic/Embeddings.20of.20a.20.20number.20field/near/286708600\">said</a>:</p>\n<blockquote>\n<p>I agree with Kevin. The <code>algebra_rat</code> diamond is really annoying.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> did you get around to dealing with this diamond in the last days? Otherwise I'd like to take a shot at it this afternoon.</p>",
        "id": 286763923,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1655713471
    },
    {
        "content": "<p>No I didn't look at this one got too distracted by eta for structures type diamonds.</p>",
        "id": 286793968,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1655731357
    },
    {
        "content": "<p>Anyone assessed difficulty of backporting structure eta defeq?</p>",
        "id": 286802325,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1655735109
    },
    {
        "content": "<p>I am reviving this old thread to discuss the next step after embeddings of a number field that is places of a number field. </p>\n<p>For <code>K</code> a number field and <code>φ : K →+* A</code> an embedding into a <code>normed_division_ring A</code>, I define the place associated to <code>φ</code> by <code>place K φ := norm ∘ φ</code>. (I guess at some point I should prove that all the places of <code>K</code> - in the usual sense of equivalent classes of absolute values -, are obtained that way. I am not sure if Ostrowski theorem is in Lean yet.) I am interested to know if people agree with this definition or have some better ideas on how to proceed. </p>\n<p>For the moment, I am working on infinite places of <code>K</code>, that is the case <code>A = ℂ</code>. I have proved (with some difficulties) that two embeddings into <code>ℂ</code> define the same infinite place iff they are equal or complex conjugate (<a href=\"https://github.com/leanprover-community/mathlib/pull/17285\">#17285</a>, still WIP). My next step is to prove that the number of places defined by real embeddings is the number of real embeddings and the number of places defined by complex embeddings is half the number of complex embeddings. Well, in fact, I have an almost complete proof of these facts but it is pretty ugly and not satisfactory in many ways... </p>\n<p>I would like to get some advice / suggestions concerning the following points:</p>\n<ul>\n<li>\n<p>I need to work with the set of embeddings into <code>ℂ</code> and the set of infinite places and their cardinalities. Is it better to defined those as <code>fintype</code>, <code>finset</code> or <code>set.finite</code>? So far, I have worked with <code>fintype</code>.</p>\n</li>\n<li>\n<p>I think it would be useful for applications to be able to work with the set of embeddings into <code>ℂ</code> modulo the equivalence relation \"define the same place\" or a set of representatives of the embeddings modulo this relation. What is the best way to do that? Should I use <code>setoid</code>? Is there another / better way to do that? </p>\n</li>\n<li>\n<p>What would be the lemmas /methods I could use to prove that the number of places defined by complex embeddings is half the number of complex embeddings? I have been using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fintype.sum_fiberwise\">docs#fintype.sum_fiberwise</a>, but I find myself having to deal with quite a lot of technical difficulties so I am suspecting there is a better way to proceed.</p>\n</li>\n</ul>",
        "id": 309566399,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1668421107
    },
    {
        "content": "<p>Ostrowski's theorem is one of the projects people worked on during this september's Xena workshop. Students are still on it.</p>",
        "id": 309566839,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668421278
    },
    {
        "content": "<p>There's Ostrowski for Q somewhere, but not the function/number field Version AFAIK</p>",
        "id": 309567241,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1668421411
    },
    {
        "content": "<p>Concerning your first question, we have to think if it is better to have the embeddings as a new type or a (fin)set of type <code>K →+* ℂ</code>. Do you think usually one has a ring hom and at some point they want to consider is as an embedding or rather one starts with an embedding in the first place?</p>",
        "id": 309571365,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668422945
    },
    {
        "content": "<p>The second question is similar, we have to figure out if it's more common to say that two embedding are equivalent or to speak about the equivalence class. In my opinion the actual equivalence class will be less useful, since one cannot apply it to elements, but I am not sure. In any case we surely want the <code>setoid</code>.</p>",
        "id": 309571786,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668423098
    },
    {
        "content": "<p>Isn't proving that all the equivalence classes have cardinality <code>2</code> enough? Or maybe this is the difficult part?</p>",
        "id": 309572024,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668423185
    },
    {
        "content": "<p>The Xena Ostrowski is the general one.</p>",
        "id": 309574366,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668424031
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/113488-general/topic/Embeddings.20of.20a.20.20number.20field/near/309571365\">said</a>:</p>\n<blockquote>\n<p>Concerning your first question, we have to think if it is better to have the embeddings as a new type or a (fin)set of type <code>K →+* ℂ</code>. Do you think usually one has a ring hom and at some point they want to consider is as an embedding or rather one starts with an embedding in the first place?</p>\n</blockquote>\n<p>Embeddings are fine since they are exactly <code>(K→+* ℂ)</code> so they are naturally a type. For places, I am inclined to use type for the time being since I am more confortable with those. </p>\n<blockquote>\n<p>The second question is similar, we have to figure out if it's more common to say that two embedding are equivalent or to speak about the equivalence class. In my opinion the actual equivalence class will be less useful, since one cannot apply it to elements, but I am not sure. In any case we surely want the <code>setoid</code>.</p>\n</blockquote>\n<p>I agree that the equivalence class would be less useful. I'll define the <code>setoid</code></p>\n<blockquote>\n<p>Isn't proving that all the equivalence classes have cardinality <code>2</code> enough? Or maybe this is the difficult part?</p>\n</blockquote>\n<p>It is not that it is difficult but more that it is painful. I'll see if I can do it in a better way.</p>",
        "id": 309583286,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1668427294
    },
    {
        "content": "<p>Ah I see, you question is about places. Then I think having the <code>finset</code> would be nice.</p>",
        "id": 309586000,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668428269
    },
    {
        "content": "<p>Sorry, I already changed my mind. The type of (the elements of) this <code>finset</code> is less clear, so maybe let's just go with a <code>fintype</code>.</p>",
        "id": 309587303,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668428822
    },
    {
        "content": "<p>What did Maria Ines do in her work on adeles?</p>",
        "id": 309592018,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1668430580
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/Embeddings.20of.20a.20.20number.20field/near/309574366\">said</a>:</p>\n<blockquote>\n<p>The Xena Ostrowski is the general one.</p>\n</blockquote>\n<p>I think so far the students have been working on the rational case and the K(X) case, but they haven't yet thought about the general number/function field case.</p>",
        "id": 309911990,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1668446890
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Embeddings.20of.20a.20.20number.20field/near/309592018\">said</a>:</p>\n<blockquote>\n<p>What did Maria Ines do in her work on adeles?</p>\n</blockquote>\n<p>I didn't write a definition of infinite place for my work on adèles (I got the infinite part of the adèle ring as ℝ ⊗[ℚ] K).</p>",
        "id": 309912511,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1668447028
    },
    {
        "content": "<p>Ah sorry! I thought so</p>",
        "id": 309914248,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668447634
    }
]