[
    {
        "content": "<p>Hi, I'm trying to formalize <a href=\"https://en.wikipedia.org/wiki/M._Riesz_extension_theorem#Proof\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/M._Riesz_extension_theorem#Proof\">M. Riesz extension theorem</a>, and I have a few questions, see <a href=\"https://github.com/leanprover-community/mathlib/issues/2120\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/2120\">#2120</a></p>",
        "id": 190139143,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583810147
    },
    {
        "content": "<p>Two of them should probably go to <a class=\"stream\" data-stream-id=\"116395\" href=\"/#narrow/stream/116395-maths\">#maths</a> but Q3 \"Why elaboration of the step takes so long?\" probably should go here.</p>",
        "id": 190139205,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583810215
    },
    {
        "content": "<p>I will also ask a question about Q1 here... what do you mean with it? <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> <br>\nDo you want to replace the sorry with a proof, or do you want to add it as an assumption somehow?</p>",
        "id": 190256020,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1583912080
    },
    {
        "content": "<p>This <code>sorry</code> says that if you have a vector subspace <code>p</code>, a vector <code>x ∉ p</code>, a linear map <code>f : s → V</code>, and <code>y : V</code>, then you can extend <code>f</code> to linear a linear map <code>s ⊔ span {x} → V</code> such that <code>f x = y</code>.</p>",
        "id": 190256507,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583912645
    },
    {
        "content": "<p>Yes, I want to prove it.</p>",
        "id": 190256516,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583912653
    },
    {
        "content": "<p>I should've formulated this <code>sorry</code> in Q1.</p>",
        "id": 190256542,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583912698
    },
    {
        "content": "<p>We should probably resurrect the Hahn-Banach thread.</p>",
        "id": 190256758,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1583912933
    },
    {
        "content": "<p>We had a Hahn-Banach thread?</p>",
        "id": 190256763,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583912951
    },
    {
        "content": "<p>what's the problem? It seems llike you've stated the theorem just fine.</p>",
        "id": 190256773,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1583912965
    },
    {
        "content": "<p>(for Q1)</p>",
        "id": 190256775,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1583912971
    },
    {
        "content": "<p><a href=\"#narrow/stream/116395-maths/topic/Hahn-Banach\" title=\"#narrow/stream/116395-maths/topic/Hahn-Banach\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Hahn-Banach</a></p>",
        "id": 190256786,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1583912982
    },
    {
        "content": "<p>It's a very short thread, you should read it entirely</p>",
        "id": 190256838,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1583913018
    },
    {
        "content": "<p>I did hope that someone with a better knowledge of <code>linear_algebra/</code> directory will point me to a helpful lemma.</p>",
        "id": 190256840,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583913026
    },
    {
        "content": "<p>Oh I see, you want the Q to already have a solution in mathlib</p>",
        "id": 190256872,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1583913072
    },
    {
        "content": "<p>I think <code>constr</code> may do something similar to this</p>",
        "id": 190256886,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1583913089
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> I read the thread. I'll try to read the gist tomorrow.</p>",
        "id": 190257079,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583913327
    },
    {
        "content": "<p>It would be nice to have Hahn-Banach in mathlib as well. I'm not saying we should use this proof, which was mostly a SSReflect translation experiment, but we should have some proof.</p>",
        "id": 190257166,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1583913374
    },
    {
        "content": "<p>I was going to follow <a href=\"https://en.wikipedia.org/wiki/M._Riesz_extension_theorem\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/M._Riesz_extension_theorem\">https://en.wikipedia.org/wiki/M._Riesz_extension_theorem</a> both for M. Riesz extension theorem and Hahn-Banach theorem.</p>",
        "id": 190257503,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583913703
    },
    {
        "content": "<p>Sure, they are very much related, that's why I pointed out my old Hahn-Banach work.</p>",
        "id": 190257596,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1583913751
    },
    {
        "content": "<p>Because the extension and induction work is the main part of Marie's work.</p>",
        "id": 190257610,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1583913779
    },
    {
        "content": "<p>For the vector space lemma, could one make the following definition: if M,N are R-modules and V,W are submodules of M, and you have R-linear maps V -&gt; N and W -&gt; N which agree on V intersect W then you can get a map from V \\lub W to N. Maybe computer scientists have a name for this map? And then you show that it agrees with the given maps on V and W. You could first define a map from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi><mo>⊕</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">V\\oplus W</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⊕</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">W</span></span></span></span> to N by adding, and then show that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi><mo>∩</mo><mi>W</mi></mrow><annotation encoding=\"application/x-tex\">V\\cap W</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∩</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">W</span></span></span></span> embedded anti-diagonally is the kernel of the surjection to V \\lub W. This seems like the sort of lemma which should be in mathlib.</p>",
        "id": 190263956,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1583919476
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I made it only for the case of empty intersection. I'll see if I can generalize it.</p>",
        "id": 191161267,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1584644978
    },
    {
        "content": "<p>BTW, the proof works now (at least it worked before merging master).</p>",
        "id": 191161350,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1584645003
    },
    {
        "content": "<p>Nice! It's good to see maths I remember from UG appearing in Lean</p>",
        "id": 191161414,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1584645032
    }
]