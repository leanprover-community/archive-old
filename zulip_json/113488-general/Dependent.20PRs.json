[
    {
        "content": "<p>Is there written down somewhere the procedure for properly making a PR dependent on another in a way that will make Bors happy on merge? I want to build off one of mine.</p>\n<p>Also, can a PR be dependent on multiple PRs?</p>",
        "id": 296552577,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662026048
    },
    {
        "content": "<p>Yes and yes. See the default commit message when you open a PR on github.</p>",
        "id": 296560864,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1662029606
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Markdown\"><pre><span></span><code>&lt;!-- The text above the <span class=\"sb\">`---`</span> will become the commit message when your\nPR is merged. Please leave a blank newline before the <span class=\"sb\">`---`</span>, otherwise\nGitHub will format the text above it as a title.\n\nTo indicate co-authors, include lines at the bottom of the commit message\n(that is, before the <span class=\"sb\">`---`</span>) using the following format:\n\nCo-authored-by: Author Name &lt;author@email.com&gt;\n\nAny other comments you want to keep out of the PR commit should go\nbelow the <span class=\"sb\">`---`</span>, and placed outside this HTML comment, or else they\nwill be invisible to reviewers.\n\nIf this PR depends on other PRs, please list them below this comment,\nusing the following format:\n<span class=\"k\">- [ ]</span> depends on: <span class=\"ni\">#abc</span> [optional extra text]\n<span class=\"k\">- [ ]</span> depends on: <span class=\"ni\">#xyz</span> [optional extra text]\n--&gt;\n</code></pre></div>",
        "id": 296561054,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1662029674
    },
    {
        "content": "<p>I use this all the time and I am quite happy with the setup.  What I also find, though, is that once a dependent PR gets merged, there is no escaping having to merge master into the now-less-dependent PR to get the diff to change.  This applies regardless of whether there actually are further changes or not.</p>\n<p>This is a relatively painless step, but if you touch one file with one PR and a different one with the second one, once the first file is in, you will need to merge the updated master on the branch with the second file to get the diff to shrink.</p>\n<p>Writing it, it now sounds obvious, but it took me some time to realize what was going on!  And maybe someone will now tell me that there is a way to avoid the \"merge to shrink the diff\" step!</p>",
        "id": 296564954,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1662031134
    },
    {
        "content": "<p>It would be great if the merge step was automated somehow</p>",
        "id": 296568464,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1662032687
    },
    {
        "content": "<p>When I make the PR, should I used:<br>\n<code>leanproject pr foo</code><br>\nand then <code>git merge bar</code>, where <code>foo</code> depends on <code>bar</code>? Then, after <code>bar</code> has merged, use <code>git merge master</code>?</p>",
        "id": 296576233,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1662035617
    },
    {
        "content": "<p>Yes, you merge the master branch</p>",
        "id": 300248283,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1663881952
    },
    {
        "content": "<p>But you need to update it first (git pull)</p>",
        "id": 300248366,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1663881978
    }
]