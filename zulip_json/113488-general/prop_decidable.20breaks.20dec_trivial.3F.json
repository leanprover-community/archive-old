[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">prop_decidable</span>\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">dec_trivial</span> <span class=\"c1\">-- fails</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">exact tactic failed, type mismatch, given expression has type</span>\n<span class=\"cm\">  true</span>\n<span class=\"cm\">but is expected to have type</span>\n<span class=\"cm\">  as_true (-1 ≠ 0)</span>\n<span class=\"cm\">state:</span>\n<span class=\"cm\">⊢ as_true (-1 ≠ 0)</span>\n<span class=\"cm\">-/</span>\n</pre></div>\n\n\n<p>In practice this is in the middle of a big file which needs decidable props but occasionally also needs simple calculations like this. Is this expected behaviour?</p>",
        "id": 130351758,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1532618659
    },
    {
        "content": "<p>Did you try <code>local attribute [instance, priority 0] classical.prop_decidable</code>?</p>",
        "id": 130352293,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1532619132
    },
    {
        "content": "<p>Works! Thanks!</p>",
        "id": 130352343,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1532619195
    },
    {
        "content": "<p>What's happening here? Oh -- we have two instances</p>",
        "id": 130352372,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1532619217
    },
    {
        "content": "<p>We really need that <code>tips_and_tricks.md</code> in  mathlib docs</p>",
        "id": 130352384,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1532619232
    },
    {
        "content": "<p>I sometimes wonder why we can't solve diamond issues using priorities. \"now we have two instances of topological_space (X x Y) and they're equal but not defeq so we have rw problems\" -- \"well just make the one you want a higher priority\"</p>",
        "id": 130352766,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1532619574
    },
    {
        "content": "<p>Good question!</p>",
        "id": 130353004,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1532619786
    }
]