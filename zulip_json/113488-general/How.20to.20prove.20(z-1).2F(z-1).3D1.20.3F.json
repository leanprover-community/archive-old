[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">div_self</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>This <code>apply</code> tactic fails.</p>",
        "id": 290849182,
        "sender_full_name": "Jiatong Yang",
        "timestamp": 1658811004
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"478392\">@Jiatong Yang</span> You can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int.div_self\">docs#int.div_self</a> instead of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/div_self\">docs#div_self</a>.  The main <code>div_self</code> lemma requires that the type be a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/group_with_zero\">docs#group_with_zero</a>, which <code>ℤ</code> is not.</p>",
        "id": 290850530,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658812839
    },
    {
        "content": "<p>Thank you very much! I thought lean couldn't identify (z-1) with itself. <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span> <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 290851078,
        "sender_full_name": "Jiatong Yang",
        "timestamp": 1658813565
    },
    {
        "content": "<p>I find that in such cases where the expressions look the same but Lean fails to apply the lemma, it is helpful to use <code>@</code> and explicitly type out every single argument, leaving the typeclass arguments as <code>_</code>. Lean will tell you exactly which <code>_</code> cannot be synthesised.</p>",
        "id": 292041101,
        "sender_full_name": "Winston Yin",
        "timestamp": 1659633217
    }
]