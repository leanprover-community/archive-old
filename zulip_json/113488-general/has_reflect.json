[
    {
        "content": "<p>Shouldn't this return <code>T.t</code>?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">derive</span> <span class=\"n\">has_reflect</span><span class=\"o\">]</span> <span class=\"kn\">inductive</span> <span class=\"n\">T</span> <span class=\"bp\">|</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">T</span>\n\n<span class=\"n\">def</span> <span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">T</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"bp\">.</span><span class=\"n\">t</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">eval</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">trace</span> <span class=\"o\">(</span><span class=\"n\">reflect</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"c1\">-- u</span>\n</code></pre></div>",
        "id": 200823868,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1592153074
    },
    {
        "content": "<p>I think type class resolution has a special case for inferring <code>reflected t</code> instances when <code>t</code> is a ground term. You can work around this.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">derive</span> <span class=\"n\">has_reflect</span><span class=\"o\">]</span> <span class=\"kn\">inductive</span> <span class=\"n\">T</span> <span class=\"bp\">|</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">T</span>\n\n<span class=\"n\">def</span> <span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">T</span> <span class=\"o\">:=</span> <span class=\"n\">T</span><span class=\"bp\">.</span><span class=\"n\">t</span>\n\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">trace_reflected</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">trace</span> <span class=\"err\">$</span> <span class=\"n\">reflect</span> <span class=\"n\">v</span>\n\n<span class=\"n\">run_cmd</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">trace</span> <span class=\"o\">(</span><span class=\"n\">reflect</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"c1\">-- u</span>\n<span class=\"n\">run_cmd</span> <span class=\"n\">trace_reflected</span> <span class=\"n\">u</span> <span class=\"c1\">-- T.t</span>\n</code></pre></div>",
        "id": 200826329,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1592156942
    }
]