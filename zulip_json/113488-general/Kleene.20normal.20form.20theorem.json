[
    {
        "content": "<p>Yay, milestone achieved. The statement that I actually proved shows that <code>eval : code -&gt; N -&gt;. N</code> which evaluates a partial recursive function given by a code, is itself a partial recursive function. This is also known as a universal Turing machine in the language of Turing machines.</p>",
        "id": 126877954,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1526917680
    },
    {
        "content": "<p>Congratulations!</p>",
        "id": 126878601,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1526918451
    },
    {
        "content": "<p>Do you plan to return to maths now?</p>",
        "id": 126878604,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1526918460
    },
    {
        "content": "<p>Lol this is math</p>",
        "id": 126878738,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1526918655
    },
    {
        "content": "<p>I'm aiming for proper computability theory at the moment, with r.e. sets and such</p>",
        "id": 126878775,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1526918752
    },
    {
        "content": "<p>What is \"r.e. sets\"?</p>",
        "id": 126878826,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1526918776
    },
    {
        "content": "<p>recursively enumerable</p>",
        "id": 126878833,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1526918786
    },
    {
        "content": "<p>the set of turing machines that halt is a r.e. set</p>",
        "id": 126878851,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1526918818
    },
    {
        "content": "<p>but its complement isn't</p>",
        "id": 126878866,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1526918843
    },
    {
        "content": "<p>IOW the set of machines that reset is a r.e.set</p>",
        "id": 126878932,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1526918895
    },
    {
        "content": "<p>Thanks</p>",
        "id": 126878969,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1526918971
    },
    {
        "content": "<p>This looks like a really nice development. Though I have to wonder what we did wrong when building leanpkg to encourage putting everything in a single monolithic package <span class=\"emoji emoji-1f604\" title=\"smile\">:smile:</span> .</p>",
        "id": 126879054,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1526919036
    },
    {
        "content": "<p>I want to finish the MDRP theorem I started last year</p>",
        "id": 126879058,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1526919051
    },
    {
        "content": "<p>Sebastian: do you refer to mathlib here?</p>",
        "id": 126880128,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1526920519
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Yes. Not that it's a real issue until we start prebuilding dependencies on <code>leanpkg configure</code>.</p>",
        "id": 126888386,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1526931372
    },
    {
        "content": "<p>It seems it makes it easier for Mario and Johannes to guarantee a consistent mathlib</p>",
        "id": 126888402,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1526931424
    },
    {
        "content": "<p>But I think we really need precompiled mathlib nightlies</p>",
        "id": 126888415,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1526931444
    }
]