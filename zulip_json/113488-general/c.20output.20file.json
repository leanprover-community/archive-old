[
    {
        "content": "<p>I am trying to look at the C output file produced by lean4 compiler using the command </p>\n<p><code> ./lean --c=out.c test.lean </code></p>\n<p>However even with simple examples like this test.lean file : </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">main</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">String</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">IO</span> <span class=\"n\">UInt32</span> <span class=\"o\">:=</span>\n<span class=\"n\">do</span> <span class=\"n\">IO</span><span class=\"bp\">.</span><span class=\"n\">println</span> <span class=\"o\">(</span><span class=\"n\">toString</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">;</span>\n   <span class=\"n\">pure</span> <span class=\"mi\">0</span>\n</code></pre></div>\n\n\n<p>or </p>\n<p><code>def const(x : Nat) : Nat := x</code></p>\n<p>it merely displays \"cannot extract code, module name of input file is no known\", which I don't understand.</p>\n<p>Running --make or --run works no issue. Appreciate any advice!</p>",
        "id": 209403252,
        "sender_full_name": "Matthew Weingarten",
        "timestamp": 1599579053
    },
    {
        "content": "<p>I have not used lean 4, but I would start by trying to run some of the tests, mimicking the <code>test_single.sh</code> setup</p>",
        "id": 209404381,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1599579606
    },
    {
        "content": "<p>You might have to be in the right working directory</p>",
        "id": 209404450,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1599579646
    },
    {
        "content": "<p>I believe the officially \"supported\" way to build lean4 code is to use the new <code>leanmake</code> tool, which also requires a specific directory structure.  I don't believe there is any documentation (or even example projects) yet.</p>",
        "id": 209405436,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1599580088
    },
    {
        "content": "<p>the current server in the lean4 repo has a small compilation example: <a href=\"https://github.com/leanprover/lean4/tree/master/src/Lean/Server\">https://github.com/leanprover/lean4/tree/master/src/Lean/Server</a></p>",
        "id": 209405957,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1599580322
    },
    {
        "content": "<p>Thanks for the replies, I still don't quite understand what is going wrong.<br>\nAs far as I am aware the work in progress lean4 compiler generates a C file from a lean file.<br>\nin <code>lean4/tests/plugin/ running</code>  <code>bash test_single.sh Default.lean.c</code> does output a c file <code>Default.lean.c</code> after running , but I cant reproduce results for an arbitrary .lean file, showing : </p>\n<p><code>Cannot extract code, module name of input file not known</code></p>\n<p>What am I missing?</p>",
        "id": 209526715,
        "sender_full_name": "Matthew Weingarten",
        "timestamp": 1599665003
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"271913\">@Matthew Weingarten</span> Before trying to build anything at all manually, make sure that you've set up <code>elan</code> to automatically use Lean 4 like in <a href=\"https://github.com/leanprover/lean4/blob/master/doc/make/index.md#dev-setup-using-elan\">these instructions</a>. Then if you have <code>Blah.lean</code> in any child of the <code>lean4/</code> directory (since this subtree is where <code>elan</code> will auto-switch to Lean 4), you can use <code>leanmake +lean4 bin PKG=Blah LINK_OPTS=-rdynamic</code> to build it.</p>\n<p>As for the plugin, in <code>lean4/tests/plugin</code> <code>bash test_single.sh SnakeLinter.lean</code> works for me, but there doesn't seem to be any <code>Default</code>? Unless you added one?</p>",
        "id": 209581453,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1599694332
    }
]