[
    {
        "content": "<p>This is a thread to discuss <a href=\"https://github.com/leanprover-community/lean/issues/200\" title=\"https://github.com/leanprover-community/lean/issues/200\">lean#200</a>, which proposes linting the core library. I think it's a good idea. Should we have some guidelines for linting PRs? Also, any ideas for a good CI setup? <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span></p>",
        "id": 195738547,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588178820
    },
    {
        "content": "<p>We definitely should lint core, but it's a little tricky I think. Ideally it would be part of core CI. But do we want to move the linter framework and definitions to core?</p>",
        "id": 195738706,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588178888
    },
    {
        "content": "<p>I'm not sure that's a good idea.</p>",
        "id": 195738729,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588178903
    },
    {
        "content": "<p>We could expand mathlib CI to also lint core, but then new errors don't show up until the version upgrade PRs to mathlib.</p>",
        "id": 195738798,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588178945
    },
    {
        "content": "<p>What do you mean by guidelines for linting PRs? There's nothing of the kind in mathlib afaik, and the <a href=\"https://leanprover-community.github.io/mathlib_stats/nolints.png\" title=\"https://leanprover-community.github.io/mathlib_stats/nolints.png\">graph</a> shows we're doing a reasonable job of cleaning things up anyway.</p>\n<div class=\"message_inline_image\"><a href=\"https://leanprover-community.github.io/mathlib_stats/nolints.png\" title=\"graph\"><img src=\"https://leanprover-community.github.io/mathlib_stats/nolints.png\"></a></div>",
        "id": 195738979,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588179046
    },
    {
        "content": "<p>Yeah, I guess I'm not sure what such guidelines would look like. Maybe just some suggestions on which linting errors to prioritize?</p>",
        "id": 195739295,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588179232
    },
    {
        "content": "<p>I think the easy change is just making mathlib CI also lint core. It's low effort and seems uncontroversial.</p>",
        "id": 195739917,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588179515
    },
    {
        "content": "<p>For graphing purposes I'd rather keep the mathlib and core nolints files separate, but that's completely an aesthetic thing...</p>",
        "id": 195740007,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588179552
    },
    {
        "content": "<p>I've mentioned this in the issue already, but I think it is better to run the  linters in mathlib CI instead of core CI.  There are some linters where declarations in mathlib can cause linting errors in core, and I'd like to catch these as well.</p>",
        "id": 195740726,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588179936
    },
    {
        "content": "<p>Alternatively: core CI also checks mathlib...</p>",
        "id": 195740955,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588180033
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/linting.20the.20core.20library/near/195740955\" title=\"#narrow/stream/113488-general/topic/linting.20the.20core.20library/near/195740955\">said</a>:</p>\n<blockquote>\n<p>Alternatively: core CI also checks mathlib...</p>\n</blockquote>\n<p>We want to be able to make non-backward compatible changes in core though.</p>",
        "id": 195741138,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588180116
    },
    {
        "content": "<p>We can still manually overrule the complaints of CI, right?</p>",
        "id": 195741278,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588180188
    },
    {
        "content": "<p>But I get your point</p>",
        "id": 195741289,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588180193
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/lint-core\" title=\"https://github.com/leanprover-community/mathlib/tree/lint-core\">https://github.com/leanprover-community/mathlib/tree/lint-core</a></p>",
        "id": 195753884,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588186353
    },
    {
        "content": "<p>Question: is it possible that changes to mathlib will cause linter failures in core? These errors would be very annoying to fix.</p>",
        "id": 195754133,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588186461
    },
    {
        "content": "<p>(<a href=\"https://github.com/leanprover-community/mathlib/runs/630728620\" title=\"https://github.com/leanprover-community/mathlib/runs/630728620\">This</a> should be a successful run. The next commit will move some declarations to another file that will force it to recompile everything.)</p>",
        "id": 195754269,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588186537
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110596\">Rob Lewis</span> <a href=\"#narrow/stream/113488-general/topic/linting.20the.20core.20library/near/195754133\" title=\"#narrow/stream/113488-general/topic/linting.20the.20core.20library/near/195754133\">said</a>:</p>\n<blockquote>\n<p>Question: is it possible that changes to mathlib will cause linter failures in core?</p>\n</blockquote>\n<p>Yes.  That's precisely why I'd like the linter to be run in mathlib.  One concrete example: if you write a simp lemma that is already a simp lemma in core, then the duplicate lemma in core will get an linting error.  This kind of error is easy to fix, namely in mathlib.<br>\nAs a general policy I would suggest that it is OK to add declarations to <code>nolints.txt</code> as long as you open a PR to fix it in core.</p>",
        "id": 195755907,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588187261
    },
    {
        "content": "<p>I dunno, it doesn't really feel ergonomic. For one, it's best if people can ignore the <code>nolints</code> files completely just like they can ignore the rest of the CI stuff. It's confusing to tell people that the way to fix their PR is to edit some \"read-only\" file and make another PR to a different repo, no?</p>",
        "id": 195759009,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588188620
    }
]