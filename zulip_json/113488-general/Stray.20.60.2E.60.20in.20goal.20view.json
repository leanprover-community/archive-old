[
    {
        "content": "<p>What's going on here?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.finset.basic</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">m</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"o\">)},</span>\n  <span class=\"n\">X</span> <span class=\"bp\">∈</span> <span class=\"o\">({</span><span class=\"bp\">∅</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"o\">)))</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span> <span class=\"bp\">⊆</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span> <span class=\"bp\">∈</span> <span class=\"o\">({</span><span class=\"bp\">∅</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"o\">)))</span>\n<span class=\"bp\">|</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">rfl</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Y ⊆ .∅ → Y ∈ {∅}</span>\n</code></pre></div>\n<p>What's the <code>.∅</code> coming from?</p>",
        "id": 231842891,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1616693304
    },
    {
        "content": "<p>That's most likely a remnant of the inaccessible pattern in place of <code>X</code></p>",
        "id": 231843022,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1616693360
    },
    {
        "content": "<p>It goes away if I put <code>by</code> before <code>sorry</code></p>",
        "id": 231843110,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1616693398
    },
    {
        "content": "<p>But not if I use <code>id sorry</code></p>",
        "id": 231843184,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1616693414
    },
    {
        "content": "<p>Here's an example of using an inaccessible pattern:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">m</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"o\">)},</span>\n  <span class=\"n\">X</span> <span class=\"bp\">∈</span> <span class=\"o\">({</span><span class=\"bp\">∅</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"o\">)))</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span> <span class=\"bp\">⊆</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span> <span class=\"bp\">∈</span> <span class=\"o\">({</span><span class=\"bp\">∅</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"o\">)))</span>\n<span class=\"bp\">|</span> <span class=\"bp\">.</span><span class=\"o\">(</span><span class=\"bp\">∅</span><span class=\"o\">)</span> <span class=\"n\">Y</span> <span class=\"n\">rfl</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span> <span class=\"c1\">-- Y ⊆ .∅ → Y ∈ {∅}</span>\n</code></pre></div>",
        "id": 231843238,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1616693434
    },
    {
        "content": "<p>this looks like a side effect of the way the printing of the expected type works</p>",
        "id": 231843392,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1616693496
    }
]