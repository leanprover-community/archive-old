[
    {
        "content": "<p>Hi!</p>\n<p>I would like to find the lean 3 equivalent of <a href=\"https://leanprover.github.io/lean4/doc/\">https://leanprover.github.io/lean4/doc/</a> The reason for that is I'm using VS Code to work with this and VS Code only has an extension for lean 3. Could someone link me to a similar doc?</p>\n<p>Thanks,<br>\nDaniel</p>",
        "id": 224611755,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612049818
    },
    {
        "content": "<p>Or is there a way to make lean 4 work alongside VS Code in a similar way as it works in the Natural Number game? That's the only thing I really worked so far.</p>",
        "id": 224611874,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612050014
    },
    {
        "content": "<p>The lean 3 <a href=\"https://leanprover.github.io/reference/\">reference manual</a> is probably the nearest equivalent to that page</p>",
        "id": 224611886,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612050077
    },
    {
        "content": "<p>but there is a bunch of documentation from various perspectives that you can find here: <a href=\"https://leanprover-community.github.io/learn.html\">https://leanprover-community.github.io/learn.html</a></p>",
        "id": 224611952,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612050180
    },
    {
        "content": "<p>Lean 4 is still in alpha stage, most of the learning resources haven't been ported yet</p>",
        "id": 224611998,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612050253
    },
    {
        "content": "<p>Thanks Mario! I guess the reference manual was the thing I was looking for.</p>",
        "id": 224612020,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612050327
    },
    {
        "content": "<p>Note that there is a VS Code extension for <code>lean4</code>, though it's still work in progress: <a href=\"https://github.com/leanprover-community/vscode-lean4\">https://github.com/leanprover-community/vscode-lean4</a></p>",
        "id": 224612091,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1612050413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> Yep I just tried that. The thing is that it doesn't even provide the basic features like showing the current subgoals as of now.</p>",
        "id": 224612144,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612050496
    },
    {
        "content": "<p>I guess I stick with version 3 for the time being.</p>",
        "id": 224612149,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612050518
    },
    {
        "content": "<p>yes, it's not ready for general use yet</p>",
        "id": 224612153,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612050540
    },
    {
        "content": "<p>Yeah, there's a lot still missing, though for subgoals you sort of use underscores and the error messages.</p>",
        "id": 224612157,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1612050575
    },
    {
        "content": "<p>Is version 4 significantly different? Like does it have non backward compatible changes or just extensions to the language?</p>",
        "id": 224612200,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612050605
    },
    {
        "content": "<p>lots of non-backward compatible changes.</p>",
        "id": 224612211,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612050630
    },
    {
        "content": "<p>it's a complete rewrite of lean in lean</p>",
        "id": 224612214,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612050639
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> Yep but how do I make it show the error messages? I mean with  the lean 4 extension.</p>",
        "id": 224612233,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612050654
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Ah I see.</p>",
        "id": 224612238,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612050671
    },
    {
        "content": "<p>The error messages show up in the Problems panel: <a href=\"/user_uploads/3121/kDZy-rLarSV06E3mBbkw0-HP/Screen-Shot-2021-01-30-at-6.53.34-PM.png\">Screen-Shot-2021-01-30-at-6.53.34-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/kDZy-rLarSV06E3mBbkw0-HP/Screen-Shot-2021-01-30-at-6.53.34-PM.png\" title=\"Screen-Shot-2021-01-30-at-6.53.34-PM.png\"><img src=\"/user_uploads/3121/kDZy-rLarSV06E3mBbkw0-HP/Screen-Shot-2021-01-30-at-6.53.34-PM.png\"></a></div>",
        "id": 224612310,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1612050837
    },
    {
        "content": "<p>Hmm ok, I was expecting something like this in the info window. Let me give it another try using this.</p>",
        "id": 224612596,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612051306
    },
    {
        "content": "<p>Btw mathlib is compatible with lean 3 I guess.</p>",
        "id": 224612648,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612051340
    },
    {
        "content": "<p>Yeah, the Lean 4 extension doesn't have an info window yet.</p>",
        "id": 224612649,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1612051340
    },
    {
        "content": "<p>That's right. mathlib uses Lean 3.</p>",
        "id": 224612653,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1612051364
    },
    {
        "content": "<p>I guess it won't be ported to Lean 4 anytime soon.</p>",
        "id": 224612662,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612051388
    },
    {
        "content": "<p>Discussions about that are under way but I wouldn't expect it before the summer at absolute minimum</p>",
        "id": 224612685,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1612051429
    },
    {
        "content": "<p>I see.</p>",
        "id": 224612742,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612051538
    },
    {
        "content": "<p>Just one more question. Where/How do I download this python script called <code>leanproject</code>?</p>",
        "id": 224612784,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612051565
    },
    {
        "content": "<p>You should have gotten it by following your OS-specific instructions on this page: <a href=\"https://leanprover-community.github.io/get_started.html\">https://leanprover-community.github.io/get_started.html</a></p>",
        "id": 224612824,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1612051677
    },
    {
        "content": "<p>Thanks! Why do you use this tool called pipx instead of regular pip to install the package that contains the <code>leanproject</code> command?</p>",
        "id": 224612994,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612051938
    },
    {
        "content": "<p>Ah ok actually I can install directly from pip. nvm</p>",
        "id": 224613006,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612051982
    },
    {
        "content": "<p>pip is essentially a developer tool for developing a package or library, pipx is generally what you'd use for installing a \"full application\" such as leanproject these days</p>",
        "id": 224613021,
        "sender_full_name": "Julian Berman",
        "timestamp": 1612052024
    },
    {
        "content": "<p>though at some point I think distributing leanproject as a shiv or zipapp will make things even easier for folks</p>",
        "id": 224613075,
        "sender_full_name": "Julian Berman",
        "timestamp": 1612052065
    },
    {
        "content": "<p>I don't know what are the advantages of using such custom solutions when you can add a <code>console_scripts</code> key to <code>entry_points</code> in setup.py like this -&gt; <a href=\"https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html#the-console-scripts-entry-point\">https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html#the-console-scripts-entry-point</a></p>\n<p>But imho creating a statically linked executable with Golang for each supported OS is probably the cleanest solution. You just download it and it works.</p>",
        "id": 224613361,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612052606
    },
    {
        "content": "<p>pipx is pretty widely used -- what you linked is about specifying how to name binaries (executables) that are installed -- the thing pipx is responsible for is essentially fixing the fact that in Python you should install each application in a separate virtualenv, and doing so manually is tedious when you include making sure the virtualenv's executables are placed on your PATH</p>",
        "id": 224613429,
        "sender_full_name": "Julian Berman",
        "timestamp": 1612052714
    },
    {
        "content": "<p>Ah yeah that's true. I use pyenv with 3.7.7 and I just dump everything that I need there without selecting a specific venv since it's already a per user python installation.</p>",
        "id": 224613521,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1612052855
    },
    {
        "content": "<p>Right, that works fine, until it doesn't :), hence pipx.</p>",
        "id": 224613596,
        "sender_full_name": "Julian Berman",
        "timestamp": 1612052955
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"373947\">Daniel Papp</span> <a href=\"#narrow/stream/113488-general/topic/lean3.20documentation/near/224613361\">said</a>:</p>\n<blockquote>\n<p>I don't know what are the advantages of using such custom solutions when you can add a <code>console_scripts</code> key to <code>entry_points</code> in setup.py like this -&gt; <a href=\"https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html#the-console-scripts-entry-point\">https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html#the-console-scripts-entry-point</a></p>\n</blockquote>\n<p>What are you talking about? We do <a href=\"https://github.com/leanprover-community/mathlib-tools/blob/master/setup.py#L15-L18\">use console scripts entry points</a>. FYI the reason why we started advising people to use pipx is because someone just like you came here without reading any documentation and asking why we were doing everything so stupidly. But it turns out there is nothing we could do to make all those people happy.</p>",
        "id": 224632225,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1612082457
    },
    {
        "content": "<p>From what I could tell the windows instructions do not mention pipx at all</p>",
        "id": 224633850,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612085009
    }
]