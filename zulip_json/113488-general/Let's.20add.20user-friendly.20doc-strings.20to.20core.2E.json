[
    {
        "content": "<p>That's definitionally the doc-string for <code>eq.rec</code>: \"Somebody messed up bad, probably you. If you're the sick sort of person who enjoys this kind of thing, Cubical Agda might be a better place for you.\"</p>",
        "id": 199585805,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1591168176
    },
    {
        "content": "<p>[/jk] Who doesn't love an afternoon with <code>eq.rec</code>?</p>",
        "id": 199585837,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1591168202
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/A.20tutorial.20of.20Lean.20for.20mere.20mortals/near/199585506\">said</a>:</p>\n<blockquote>\n<p>I think that the analogous docstring for <code>heq</code> should just say \"please turn back, you made a mistake\" ;-)</p>\n</blockquote>\n<p>This! <code>:+100:</code></p>",
        "id": 199585915,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591168306
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/A.20tutorial.20of.20Lean.20for.20mere.20mortals/near/199585805\">said</a>:</p>\n<blockquote>\n<p>That's definitionally the doc-string for <code>eq.rec</code>: \"Somebody messed up bad, probably you. If you're the sick sort of person who enjoys this kind of thing, Cubical Agda might be a better place for you.\"</p>\n</blockquote>\n<p>/me is glad that his mic is muted</p>",
        "id": 199585978,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591168348
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> If we don't want to pollute the docstrings with advise on using mathlib and <code>import tactic</code> etc... we could add the docstrings in <code>logic.basic</code> instead of in core.</p>",
        "id": 199586467,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591168807
    },
    {
        "content": "<p>Or we could add a link to some documentation</p>",
        "id": 199586483,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591168829
    },
    {
        "content": "<p>I'm fine with adding things in core, btw</p>",
        "id": 199586491,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591168836
    },
    {
        "content": "<p>We could even add a docstring on <code>→</code> mentioning <code>intros</code> and <code>specialize</code></p>",
        "id": 199586633,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591168933
    },
    {
        "content": "<p>Should the docstring on <code>nat</code> mention <code>induction</code>?</p>",
        "id": 199586648,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591168944
    },
    {
        "content": "<p>Can we replace doc-strings from mathlib?</p>",
        "id": 199586702,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1591169029
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/A.20tutorial.20of.20Lean.20for.20mere.20mortals/near/199586702\">said</a>:</p>\n<blockquote>\n<p>Can we replace doc-strings from mathlib?</p>\n</blockquote>\n<p>I don't know if we can replace, but we can certainly <em>add</em> them.</p>",
        "id": 199586763,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591169070
    },
    {
        "content": "<p>I have no idea how all these docstrings work... I can't \"jump to definition\" on <code>→</code>. Can we add a docstring to it?</p>",
        "id": 199588993,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591170816
    },
    {
        "content": "<p>How about <code>\\lambda</code>?</p>",
        "id": 199588996,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591170824
    },
    {
        "content": "<p><code>→</code>, <code>λ</code>, <code>∀</code>, <code>Type</code> are not constants.  Hence no docstrings and no go-to-definition.</p>",
        "id": 199589287,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1591171028
    },
    {
        "content": "<p>Aha... too bad</p>",
        "id": 199589318,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591171062
    },
    {
        "content": "<p>We could add them to the C++ <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61d\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 199591199,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1591172292
    },
    {
        "content": "<p>I have no idea what the vscode extension needs to show docstrings etc... But I think it might be worth adding these docstrings to C++. Otherwise we'll get questions: why does <code>\\exists</code> have helpful info, but <code>\\forall</code> doesn't?</p>",
        "id": 199592004,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1591172866
    }
]