[
    {
        "content": "<p>I have been asked to give a talk about Lean and I am producing a <code>talk.lean</code> file to use during the presentation. I have simply put this new file <em>outside</em> of <code>mathlib</code> (in another git repository) and I work with VSCode, with which I open my local <code>mathlib</code> and then work on <code>talk.lean</code>, which happily imports every file which is in <code>mathlib</code> in the standard way, e.g. with </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.convex.cone</span>\n</code></pre></div>\n<p>But now I would like to import <em>another</em> file, say <code>burp.lean</code> which is not in <code>mathlib</code>; how can I specify (and can I specify?) the full path of <code>burp</code> so that <code>talk.lean</code> accepts something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"bp\">???.</span><span class=\"n\">burp</span>\n</code></pre></div>",
        "id": 253660404,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1631831098
    },
    {
        "content": "<p>AFAIK, you have 2 options:</p>\n<ul>\n<li>add this file to the same repo where you have <code>talk.lean</code>;</li>\n<li>add the project that contains <code>burp</code> as a dependency in <code>leanpkg.toml</code> (probably you already have <code>mathlib</code> as a dependency).</li>\n</ul>",
        "id": 253676045,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631842252
    },
    {
        "content": "<p>When I give demos in talks I just work within mathlib and add new files (often in a <code>scratch</code> directory which I make) but I've never had to import a new file in a second new file before</p>",
        "id": 253692234,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1631856344
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>  <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> : thanks, both seem very good ideas. But I guess that for both options, you need to work in a separate branch of <code>mathlib</code>, is that right (ot that I don't want to create it, I just try to get my <code>git</code> OK). Because otherwise it would try to push both the <code>leanpkg,toml</code> and the <code>scartch</code> directory to <code>master</code>, which won't work... Finally, very stupid question: the <code>toml</code> file, I modify it by simply opening with a text editor and adding the path of <code>burp.lean</code>?</p>",
        "id": 253707385,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1631867058
    },
    {
        "content": "<p>The simplest approach for a one-off talk is not to modify any configuration files or to change any branches or anything,  to work directly with a local clone of mathlib, and just to put <code>burp.lean</code> in <code>src</code>. Then you can just import it with <code>import burp</code>. There are plenty of other ways to make it work but they will all be more complicated.</p>",
        "id": 253707682,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1631867221
    },
    {
        "content": "<p>You can just set this up by making some directory called <code>my_talk</code>, running <code>leanproject get mathlib</code> within that directory (giving you a new mathlib which you are free to corrupt or break without causing any trouble to your current set-up), and then just dumping anything new which you want to import later on into <code>src</code>. Then just open this copy of mathlib using VS Code.</p>",
        "id": 253707820,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1631867298
    },
    {
        "content": "<p>Another approach is to make a new project of your own with <code>leanproject new my_talk</code> and then just put files into <code>src</code> there, and then you can import them -- this is how LTE is set up for example, where we can import other LTE files and also mathlib files at the same time. But for a one-off talk I would not go to so much trouble. Again you don't have to edit any configuration files, <code>leanproject</code> will do it all for you.</p>",
        "id": 253708199,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1631867506
    },
    {
        "content": "<p>Yes, this seems by far the easiest path, thanks. I just have a small doubt about running <code>leanproject get mathlib</code> in a the directory <code>my_talk</code>; this will create a <code>mathlib</code> folder inside <code>my_talk</code>, but it will also initiate this subdirectory as a <code>git repository</code> whose remote is the usual <code>mathlib</code>, right? In particular, I won't be able to <code>push</code>, which I'd like to, for backup and future references. I imagine that the only ways to be able to push things remotely are either to manually de-initialise this folder or to create a branch different from <code>master</code>, no?</p>",
        "id": 253709968,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1631868456
    },
    {
        "content": "<p>I would recommend the <code>leanproject new</code> approach</p>",
        "id": 253710075,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631868496
    },
    {
        "content": "<p>That way you can also point people to a working copy of the code from the talk, which they could even open in gitpod</p>",
        "id": 253710108,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631868522
    },
    {
        "content": "<p>OK; does the <code>new</code> command automatically creates a remote  <code>git</code> repo, or simply a local one which I need to <code>init</code>?</p>",
        "id": 253710639,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1631868830
    },
    {
        "content": "<p>It definitely doesn't create a remote one, but I don't think it creates a local one either</p>",
        "id": 253710786,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631868913
    },
    {
        "content": "<p>Create the git repo first, then run <code>leanproject new</code> in it</p>",
        "id": 253710803,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631868923
    },
    {
        "content": "<p>Or alternatively; try it and see</p>",
        "id": 253710813,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631868934
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 253710835,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1631868951
    }
]