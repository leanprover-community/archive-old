[
    {
        "content": "<p>The tactic <code>noncomm_ring</code> (<a href=\"https://github.com/leanprover-community/mathlib/blob/cd29ede/src/tactic/noncomm_ring.lean\">source</a>) cannot do the following problem; should it be able to?  Note that <code>abel</code> can, and <code>noncomm_ring</code> is built on top of <code>abel</code>.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">noncomm_ring</span>\n\n<span class=\"c1\">-- works</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">abel</span>\n\n<span class=\"c1\">-- fails</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">noncomm_ring</span>\n</code></pre></div>",
        "id": 202642608,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1593654193
    },
    {
        "content": "<p>oh yes, that's definitely a bug</p>",
        "id": 202645527,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593658321
    },
    {
        "content": "<p>wrap the <code>simp only [...]</code> call in <code>noncomm_ring</code> with <code>try { ... }</code></p>",
        "id": 202645569,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593658335
    },
    {
        "content": "<p>or use the <code>{ fail_if_unchanged := ff }</code> configuration option for <code>simp</code>.</p>",
        "id": 202645575,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593658355
    },
    {
        "content": "<p>ohh</p>",
        "id": 202645580,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593658383
    },
    {
        "content": "<p>I thought the problem was that the <code>simp only [...]</code> was making negative progress</p>",
        "id": 202645586,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593658408
    },
    {
        "content": "<p>but the problem is that it makes 0 progress, so it fails?</p>",
        "id": 202645590,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593658423
    },
    {
        "content": "<p>The error message is \"simp failed to simplify\".</p>",
        "id": 202645722,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593658605
    },
    {
        "content": "<p>that'll teach me not to form such a strong opinion without running the code</p>",
        "id": 202646120,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593659185
    },
    {
        "content": "<p>Thanks for the diagnosis, <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> !  I filed an issue report, <a href=\"https://github.com/leanprover-community/mathlib/issues/3267\">#3267</a> .</p>",
        "id": 202646853,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1593660210
    },
    {
        "content": "<p>patched in <a href=\"https://github.com/leanprover-community/mathlib/issues/3268\">#3268</a></p>",
        "id": 202650074,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593665320
    }
]