[
    {
        "content": "<p>After adding an inductive type to the environment using <code>add_inductive</code>, I can use the <code>induction</code> tactic, but it doesn't return any useful case names... Can I solve this by defining <code>rec_name</code>?</p>",
        "id": 123916531,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1521466463
    },
    {
        "content": "<p>Sounds like it: <a href=\"https://github.com/leanprover/lean/blob/master/library/init/meta/tactic.lean#L425-L426\" target=\"_blank\" title=\"https://github.com/leanprover/lean/blob/master/library/init/meta/tactic.lean#L425-L426\">https://github.com/leanprover/lean/blob/master/library/init/meta/tactic.lean#L425-L426</a></p>",
        "id": 123916665,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1521466717
    },
    {
        "content": "<p>Good to know that <code>induction</code> works at all</p>",
        "id": 123916666,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1521466726
    },
    {
        "content": "<p>Yes, that's indeed a good thing. I don't even have to add the <code>using</code> clause...</p>",
        "id": 123917223,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1521467529
    },
    {
        "content": "<p>Apparently you do, if you want nice case names :)</p>",
        "id": 123917266,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1521467631
    },
    {
        "content": "<p>The alternative is to set the case names on your own, using a wrapper around the <code>induction</code> tactic</p>",
        "id": 123917320,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1521467677
    },
    {
        "content": "<p>I don't _really_ need the case names so far, but I'm kind of feeling that I don't have enough control over which case belongs to which constructor while the tactic is working on it...</p>",
        "id": 123917471,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1521467918
    }
]