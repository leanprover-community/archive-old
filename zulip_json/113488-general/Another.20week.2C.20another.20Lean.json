[
    {
        "content": "<p>Good morning, everyone!  It is this time of the week again.  It fills me with joy to announce the latest release of the Lean community fork, Lean π!  Obligatory excerpt from the changelog, this is a feature-only release:</p>\n<p>Features:</p>\n<ul>\n<li>Coercions also trigger if the types have metavariables (<a href=\"https://github.com/leanprover-community/lean/issues/251\">lean#251</a>)</li>\n<li>Better error message on missing imports (<a href=\"https://github.com/leanprover-community/lean/issues/253\">lean#253</a>)</li>\n<li>Add <code>add_eqn_lemma</code> function (<a href=\"https://github.com/leanprover-community/lean/issues/254\">lean#254</a>)</li>\n</ul>",
        "id": 198175787,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1589968428
    },
    {
        "content": "<p>Am I right to be optimistic that porting mathlib should be pretty easy?</p>",
        "id": 198177505,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589969499
    },
    {
        "content": "<p>Should I simply open a PR that bumps the lean version and see if CI shares my optimism?</p>",
        "id": 198177626,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589969565
    },
    {
        "content": "<p>Yes, please!</p>",
        "id": 198177639,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1589969574
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/2756\">#2756</a></p>",
        "id": 198177785,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589969681
    },
    {
        "content": "<p>My computer says it works!</p>",
        "id": 198178831,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589970391
    },
    {
        "content": "<p>See also  <a href=\"https://github.com/leanprover-community/mathlib/issues/2758\">#2758</a>, especially for people who didn't understood what the above changelog was about.</p>",
        "id": 198180744,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589971596
    },
    {
        "content": "<p>I am slightly concerned that Lean <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi></mrow><annotation encoding=\"application/x-tex\">\\pi</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span></span></span></span> is inconsistent. Using only tools in mathlib I am pretty confident that it is possible to prove that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi><mo>≠</mo><mn>3.14</mn></mrow><annotation encoding=\"application/x-tex\">\\pi\\not=3.14</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mord\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.69444em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.19444em;\"><span></span></span></span></span></span></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">1</span><span class=\"mord\">4</span></span></span></span>.</p>",
        "id": 198186758,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589975527
    },
    {
        "content": "<p>It's not <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3.14</mn></mrow><annotation encoding=\"application/x-tex\">3.14</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">1</span><span class=\"mord\">4</span></span></span></span>, it's <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3.14.0</mn></mrow><annotation encoding=\"application/x-tex\">3.14.0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">1</span><span class=\"mord\">4</span><span class=\"mord\">.</span><span class=\"mord\">0</span></span></span></span></p>",
        "id": 198186902,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589975641
    },
    {
        "content": "<p>Thanks, Gabriel!</p>",
        "id": 198189083,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589976993
    },
    {
        "content": "<p>I think it's not possible to prove this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">π</span> <span class=\"bp\">≠</span> <span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">14</span><span class=\"bp\">.</span><span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>So we must be fine! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 198278855,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590026446
    }
]