[
    {
        "content": "<p>Hey everyone, I just finished the Naturals number game. It was great. Does anyone know if there are any resources on working with groups in lean.</p>",
        "id": 256912510,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1633827709
    },
    {
        "content": "<p>Math library has <a href=\"https://leanprover-community.github.io/mathlib_docs/find/group\">docs#group</a> and many other definitions/theorems.</p>",
        "id": 256912584,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1633827769
    },
    {
        "content": "<p>Got it thank you. I will take a look.</p>",
        "id": 256912814,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1633828039
    },
    {
        "content": "<p>Would you know where I can find an example of some one proving something simple about groups using lean.</p>",
        "id": 256913079,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1633828299
    },
    {
        "content": "<p>nvm, just found <a href=\"https://cocalc.com/share/public_paths/f014cd1885a22e8665a728be825e563fc79b7e1f/README.md\">https://cocalc.com/share/public_paths/f014cd1885a22e8665a728be825e563fc79b7e1f/README.md</a></p>",
        "id": 256914111,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1633829421
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/master/src/algebra/group\">https://github.com/leanprover-community/mathlib/tree/master/src/algebra/group</a></p>",
        "id": 256917372,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1633832945
    },
    {
        "content": "<p>and <a href=\"https://github.com/leanprover-community/mathlib/tree/master/src/group_theory\">https://github.com/leanprover-community/mathlib/tree/master/src/group_theory</a></p>",
        "id": 256917376,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1633832955
    },
    {
        "content": "<p>These links to mathlib are not really useful here -- the mathlib proofs are incomprehensible to someone who has only played NNG</p>",
        "id": 256937613,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633855033
    },
    {
        "content": "<p>Here's a link to a workshop I ran about group theory for lean beginners: <a href=\"https://xenaproject.wordpress.com/2021/01/28/formalising-mathematics-workshop-2/\">https://xenaproject.wordpress.com/2021/01/28/formalising-mathematics-workshop-2/</a></p>",
        "id": 256937756,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633855154
    },
    {
        "content": "<p>For having learnt Lean using this, I can attest of this workshop's quality.</p>",
        "id": 256937898,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1633855293
    },
    {
        "content": "<p>The mathlib links on the other hand do give you some kind of feeling as to \"how far we have got\" in group theory. For example the names of the files indicate what is covered and the module docstrings (the text at the top of each file) explains what definitions are made and what theorems are proved in the files</p>",
        "id": 256938359,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633855711
    },
    {
        "content": "<p>Thank you all. Looking forward to going through the workshop</p>",
        "id": 257011364,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1633927157
    },
    {
        "content": "<p>How would I go about defining a custom group in lean?  For example if I wanted to define a group on a subset of  the reals and a custom op.</p>",
        "id": 257420238,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1634152037
    },
    {
        "content": "<p>Fill those in <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">my_group</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">group</span> <span class=\"n\">S</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">mul</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_assoc</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">one</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">one_mul</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_one</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">inv</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_left_inv</span> <span class=\"o\">:=</span> <span class=\"n\">_</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 257420597,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634152184
    },
    {
        "content": "<p>To quickly get this list of fields, you can do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">my_group</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">group</span> <span class=\"n\">S</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span><span class=\"bp\">!!</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>and click on the lightbulb.</p>",
        "id": 257420754,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634152240
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/groups/near/257420597\">said</a>:</p>\n<blockquote>\n<p>Fill those in <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> </p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">my_group</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">group</span> <span class=\"n\">S</span> <span class=\"o\">:=</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>This won't work -- this will ask you to define  a group structure on any given set <code>S</code> of reals. I assume you have a specific set <code>S</code>in mind?</p>",
        "id": 257421001,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1634152353
    },
    {
        "content": "<p>Yeah of course, I don't know what Michael wants.</p>",
        "id": 257421074,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634152406
    },
    {
        "content": "<p>Yes, I was hoping to define on ℝ\\{-1}</p>",
        "id": 257421179,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1634152448
    },
    {
        "content": "<p>what's the operation?</p>",
        "id": 257421257,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1634152491
    },
    {
        "content": "<p>Then replace <code>S</code> with <code>{x : ℝ // x ≠ -1}</code>.</p>",
        "id": 257421310,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634152512
    },
    {
        "content": "<p>The op is a*b :=(a+b)^2 where a,b are in the set ℝ\\{-1}</p>",
        "id": 257421615,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1634152630
    },
    {
        "content": "<p>Thank you both</p>",
        "id": 257421636,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1634152637
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/groups/near/257420597\">said</a>:</p>\n<blockquote>\n<p>Fill those in <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> </p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">my_group</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">group</span> <span class=\"n\">S</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">mul</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_assoc</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">one</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">one_mul</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_one</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">inv</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">div</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">div_eq_mul_inv</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_left_inv</span> <span class=\"o\">:=</span> <span class=\"n\">_</span> <span class=\"o\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Div and Div eq mul inv are impl details right?</p>",
        "id": 257422009,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1634152778
    },
    {
        "content": "<p>Whoops, yeah</p>",
        "id": 257422053,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634152794
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"444964\">Michael Melesse</span> <a href=\"#narrow/stream/113488-general/topic/groups/near/257421615\">said</a>:</p>\n<blockquote>\n<p>The op is a*b :=(a+b)^2 where a,b are in the set ℝ\\{-1}</p>\n</blockquote>\n<p>I don't actually see how this operation defines a group. Is there any identity element <code>e</code> such that <code>a = (a + e)^2</code> for all <code>a</code> in your set?</p>",
        "id": 257422438,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1634152939
    },
    {
        "content": "<p>oops this is the op, ab + a + b</p>",
        "id": 257422614,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1634153016
    },
    {
        "content": "<p>Aah, makes more sense</p>",
        "id": 257422642,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634153026
    },
    {
        "content": "<p>You can also instead define a <code>group_with_zero ℝ</code>. That'll probably be more pleasant.</p>",
        "id": 257422772,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634153077
    },
    {
        "content": "<p>The nicest way to prove that is to prove that <code>a -&gt; a - 1</code> is a bijection from <code>units ℝ</code> to <code>ℝ\\{-1}</code> such that the image of <code>*</code> under the bijection is <code>a,b -&gt; ab+a+b</code></p>",
        "id": 257423196,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634153260
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>  When you say replace S with {x : ℝ // x ≠ -1}. Do you mean define a variable? Just plugging it in doesnot seem to work</p>",
        "id": 257578540,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1634234485
    },
    {
        "content": "<p>I mean</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">my_group</span> <span class=\"o\">:</span> <span class=\"n\">group</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">//</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"bp\">...</span>\n</code></pre></div>",
        "id": 257578694,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634234526
    },
    {
        "content": "<p>Got it. Thanks.</p>",
        "id": 257579474,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1634234865
    },
    {
        "content": "<p>When I define  the mul like this   mul :=  ∀(a b:{x : ℝ // x ≠ -1}), a+a*b+b, I get an error about the addition</p>",
        "id": 257579510,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1634234882
    },
    {
        "content": "<p>failed to synthesize type class instance for<br>\na b : {x // x ≠ -1}<br>\n⊢ has_add {x // x ≠ -1}</p>",
        "id": 257579637,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1634234921
    },
    {
        "content": "<p>I cannot seem to define an add op. The group structure doesnot have it to overwrite</p>",
        "id": 257579706,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1634234952
    },
    {
        "content": "<p>looking through docs non of the flavors have add and mul at the same time</p>",
        "id": 257579865,
        "sender_full_name": "Michael Melesse",
        "timestamp": 1634235009
    },
    {
        "content": "<p>Welcome to subtyping hell. <span aria-label=\"smiling devil\" class=\"emoji emoji-1f608\" role=\"img\" title=\"smiling devil\">:smiling_devil:</span> Enjoy you stay.</p>",
        "id": 257580160,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634235137
    },
    {
        "content": "<p><code>{x : ℝ // x ≠ -1}</code> is an entirely new type, so Lean doesn't know anything about it besides its definition. And it certainly doesn't know the inexistent addition you're trying to define: <code>-1/2 : {x : ℝ // x ≠ -1}</code> but you cannot make <code>-1/2 + -1/2</code> have the meaningful value <code>-1</code> as it's not in the type!</p>",
        "id": 257580447,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634235266
    },
    {
        "content": "<p>The answer is to define your operations through <code>ℝ</code> and show they preserve <code>≠ -1</code>. An element of <code>{x : ℝ // x ≠ -1}</code> is <code>⟨an element of ℝ, a proof that it's ≠ -1⟩</code>.</p>",
        "id": 257580720,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634235398
    },
    {
        "content": "<p>So your operation will look like <code>λ a b, ⟨(a : ℝ) * b + a + b, some_proof⟩</code>.</p>",
        "id": 257580803,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634235442
    },
    {
        "content": "<p><code>(a : ℝ)</code> telling Lean to consider <code>a</code> as a real.</p>",
        "id": 257580850,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634235461
    },
    {
        "content": "<p>You probably start getting why we use <code>group_with_zero</code>. Removing <code>0</code> to provide a <code>group</code> structure is simply too much of a pain.</p>",
        "id": 257581039,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634235526
    },
    {
        "content": "<p>I'm not sure this really counts as subtyping hell; this seems like exactly what you would expect to have to do on paper.</p>",
        "id": 257581722,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634235820
    }
]