[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Somehow, <code>cancel_epi</code> with <code>f = ↑i</code> (<code>i : x ≅ y</code>) doesn't work any more.<br>\nI managed to track this down far enough to find that adding the line (which used to be in <code>tidy.tidy</code>)</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">reducible</span><span class=\"o\">]</span> <span class=\"n\">lift_t</span> <span class=\"n\">coe_t</span> <span class=\"n\">coe_b</span>\n</pre></div>\n\n\n<p>makes it work again. But I don't really understand what is going on.</p>",
        "id": 132617646,
        "sender_full_name": "Reid Barton",
        "timestamp": 1534999089
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span>, thanks for all these requests. I am giving a demo in a few hours of parts of <code>obviously</code> and my category theory library, and right after that I will address these three issues!</p>",
        "id": 132620408,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535004582
    },
    {
        "content": "<p>The last one is a bit interesting: I'm now very careful to have my automation _not_ unfold too much, and <code>cancel_epi</code> is having trouble seeing through a coercion that formerly someone else was unfolding.  I'll have to find another solution. If you have a MWE showing the cancel_epi issue that would be great.</p>",
        "id": 132620460,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535004671
    },
    {
        "content": "<p>Yes, I think the situation with <code>cancel_epi</code> makes sense to me now. Probably the right thing to do is just to add a second instance which matches <code>↑i</code> (in addition to the existing instance which matches <code>i.hom</code>).</p>",
        "id": 132645544,
        "sender_full_name": "Reid Barton",
        "timestamp": 1535039565
    },
    {
        "content": "<p>Okay, this issue should be fixed in <a href=\"https://github.com/leanprover/mathlib/pull/278/commits/ccb1adf8a0fba114c5cbcad0169212d4775517d7\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/278/commits/ccb1adf8a0fba114c5cbcad0169212d4775517d7\">https://github.com/leanprover/mathlib/pull/278/commits/ccb1adf8a0fba114c5cbcad0169212d4775517d7</a>, which is part of <a href=\"https://github.com/leanprover/mathlib/pull/278\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/278\">https://github.com/leanprover/mathlib/pull/278</a>.</p>",
        "id": 132751886,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535209351
    },
    {
        "content": "<p>I'm happy to see you are enjoying your Paris sightseeing</p>",
        "id": 132751892,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535209378
    },
    {
        "content": "<p>:-)</p>",
        "id": 132751968,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535209513
    },
    {
        "content": "<p>I went out and ate lots of pastries and cheese this morning. :-)</p>",
        "id": 132751971,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535209524
    },
    {
        "content": "<p>Also I can see the Notre Dame from where I'm sitting.</p>",
        "id": 132752029,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535209568
    },
    {
        "content": "<p>Cheese, Notre-Dame and Lean seems to be a good combination</p>",
        "id": 132753363,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535212070
    }
]