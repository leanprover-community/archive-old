[
    {
        "content": "<p>Are <code>library_search</code> and I blind or is</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">div_le_div_iff</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">linear_ordered_field</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hd</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">d</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">a</span><span class=\"bp\">/</span><span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span><span class=\"bp\">/</span><span class=\"n\">d</span> <span class=\"bp\">↔</span> <span class=\"n\">d</span><span class=\"bp\">*</span><span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">div_le_iff&#39;</span> <span class=\"n\">hb</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">mul_div_assoc</span><span class=\"o\">,</span> <span class=\"n\">le_div_iff&#39;</span> <span class=\"n\">hd</span><span class=\"o\">]</span>\n</pre></div>\n\n\n<p>missing from <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/algebra/ordered_field.lean\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/algebra/ordered_field.lean\">https://github.com/leanprover-community/mathlib/blob/master/src/algebra/ordered_field.lean</a>?</p>",
        "id": 167461342,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1559809203
    },
    {
        "content": "<p>What about the following one?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">sub_le_sub_iff</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ordered_comm_group</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span> <span class=\"bp\">-</span> <span class=\"n\">d</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sub_le</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">sub_add</span><span class=\"o\">,</span> <span class=\"k\">show</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">-</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">abel</span><span class=\"o\">,</span> <span class=\"n\">sub_le_iff_le_add</span><span class=\"o\">]</span>\n</pre></div>\n\n\n<p>Why is <code>linarith</code> failing here?</p>",
        "id": 167463155,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1559811078
    },
    {
        "content": "<p>at least in the case of real numbers, <code>split ; intros ; linarith</code> succeeds.</p>",
        "id": 167463227,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1559811136
    },
    {
        "content": "<p>linarith assumes some algebraic structure that may not be strictly necessary, because it uses <code>ring</code> for the verification step. It will work if alpha is a linear_ordered_comm_ring.</p>",
        "id": 167474764,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1559822509
    }
]