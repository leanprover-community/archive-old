[
    {
        "content": "<p>I have <code>x : option X</code>, and <code>h : x ≠ none</code>. How do I turn this into a <code>y : X</code> such that <code>x = some y</code>? I want to use <code>option.get</code> and <code>option.is_some</code>. But I can't figure out how to use <code>h</code>.</p>",
        "id": 135487811,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539108855
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">none</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</pre></div>",
        "id": 135487845,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539108924
    },
    {
        "content": "<p>Or something like that. I should probably not just return an <code>y : X</code>, but also the proof that <code>x = some y</code>.</p>",
        "id": 135487859,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539108962
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">none</span> <span class=\"bp\">→</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"bp\">//</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"n\">y</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"n\">option</span><span class=\"bp\">.</span><span class=\"n\">rec_on</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">absurd</span> <span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">y</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>There should be a lemma that says <code>is_some_iff_ne_none</code>, but it seems to be missing.</p>",
        "id": 135488210,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1539109325
    },
    {
        "content": "<p>Depending on the use, it might be more convenient to just do the <code>cases</code>, <code>absurd</code> at the usage site</p>",
        "id": 135488265,
        "sender_full_name": "Reid Barton",
        "timestamp": 1539109405
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> and <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> !</p>",
        "id": 135488560,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1539109705
    },
    {
        "content": "<p>as in </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">none</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"bp\">//</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">some</span> <span class=\"n\">y</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">x</span> <span class=\"k\">with</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">absurd</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">])</span> <span class=\"n\">not_false</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 135488579,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539109721
    },
    {
        "content": "<p>there is <code>is_none_iff_eq_none</code>, but nothing connecting <code>is_some</code> and <code>is_none</code>. I guess we need a few more variants</p>",
        "id": 135489285,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539110286
    },
    {
        "content": "<p>but the basic story is <code>option.get</code> is supposed to do this</p>",
        "id": 135489316,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539110308
    }
]