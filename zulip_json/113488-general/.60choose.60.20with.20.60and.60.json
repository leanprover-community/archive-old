[
    {
        "content": "<p>It would be nice to make <code>choose f h h'</code> work with <code>this : ∀ x:α, ∃ y:β, p y ∧ q y</code>. Currently it fails at <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/tactic/core.lean#L799\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/tactic/core.lean#L799\">https://github.com/leanprover-community/mathlib/blob/master/src/tactic/core.lean#L799</a></p>",
        "id": 187464387,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580917256
    },
    {
        "content": "<p>What would the resulting types of <code>f</code>, <code>h</code>, and <code>h'</code> be?</p>",
        "id": 187465001,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580917632
    },
    {
        "content": "<p><code>f : α → β</code>, <code>h : ∀ x, p (f x)</code>, <code>h' : ∀ x, q (f x)</code>.</p>",
        "id": 187465340,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580917836
    },
    {
        "content": "<p>Currently it works with <code>∀ x, ∃ y (h : p y), q y</code> but not <code>∀ x, ∃ y, p y ∧ q y</code>.</p>",
        "id": 187465395,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580917865
    },
    {
        "content": "<p>So what would it do on <code>∀ x:α, ∃ y:β, (a y ∧ b y) ∧ (c y ∧ d y)</code>?</p>",
        "id": 187498629,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1580939350
    },
    {
        "content": "<p>Good question. I don't know. Maybe allow the last variable to be an <code>rcases</code> style expression?</p>",
        "id": 187499431,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580939928
    },
    {
        "content": "<p>And/or make rcases work with pi types.</p>",
        "id": 187500114,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580940372
    }
]