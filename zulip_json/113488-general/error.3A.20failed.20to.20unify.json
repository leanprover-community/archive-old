[
    {
        "content": "<p>I am at a stage where I am currently hitting errors of the following type</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">invalid</span> <span class=\"n\">apply</span> <span class=\"n\">tactic</span><span class=\"o\">,</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">unify</span>\n  <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"bp\">=</span> <span class=\"n\">q</span><span class=\"bp\">.</span><span class=\"n\">fst</span>\n<span class=\"k\">with</span>\n  <span class=\"err\">?</span><span class=\"n\">m_2</span> <span class=\"bp\">=</span> <span class=\"err\">?</span><span class=\"n\">m_3</span>\n</pre></div>\n\n\n<p>I have no clue why Lean can't unify those... probably there are some hidden metavariables somewhere... how do I get more info?</p>",
        "id": 127084634,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1527259243
    },
    {
        "content": "<p>can you try to use <code>set_option pp.all true</code> and inspect the term again</p>",
        "id": 127084763,
        "sender_full_name": "Johannes HÃ¶lzl",
        "timestamp": 1527259436
    },
    {
        "content": "<p>Thanks, the response by Lean was a little bit overwhelming. But it solved my problem!</p>",
        "id": 127085460,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1527260205
    }
]