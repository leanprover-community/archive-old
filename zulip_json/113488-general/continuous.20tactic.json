[
    {
        "content": "<p>Can we have a tactic that solves continuity goals, matching e.g. <code>continuous (f o g)</code> and splitting it into two goals?</p>",
        "id": 136888333,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541027904
    },
    {
        "content": "<p><code>meta def continuity_goals := `[apply continuous.comp]</code> or something?</p>",
        "id": 136888372,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541027992
    },
    {
        "content": "<p>I have this but it is based on <code>backwards_reasoning</code> and it seemed better to wait for that to land in mathlib first.</p>",
        "id": 136891384,
        "sender_full_name": "Reid Barton",
        "timestamp": 1541032165
    },
    {
        "content": "<p>nice</p>",
        "id": 136891435,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541032204
    },
    {
        "content": "<p>Sorry, I haven’t given the backwards reasoning PR much attention recently. I’ll try to get back to it!</p>",
        "id": 136903346,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1541052170
    }
]