[
    {
        "content": "<p>I'm compiling <code>mathlib</code> with <code>lean --make _target/dep/mathlib/src/all.lean</code> on an 8G AWS EC2 instance (m4.large to be exact).  But it gets prematurely killed due to Out of Memory.  I'm not an expert in these sort of things.  I think taken at face value, I can increase to a higher memory EC2 instance (but is 8G really not enough!?!) or add swap memory to my instance.  However, before I explore those options, does anyone here have any experience with this sort of thing?  (And to be clear, I need to compile it myself since I'm working with a modified version of  lean core and mathlib.)</p>",
        "id": 222325288,
        "sender_full_name": "Jason Rute",
        "timestamp": 1610384413
    },
    {
        "content": "<p>For example, for CI and compiling mathlib olean files, what specs are used on the instances doing the work?</p>",
        "id": 222325497,
        "sender_full_name": "Jason Rute",
        "timestamp": 1610384507
    },
    {
        "content": "<p>Mathlib CI uses GitHub-hosted runners for GitHub Actions, so the specs should be the ones <a href=\"https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners#supported-runners-and-hardware-resources\">here</a>:</p>\n<blockquote>\n<p>Each virtual machine has the same hardware resources available.<br>\n- 2-core CPU<br>\n- 7 GB of RAM memory<br>\n- 14 GB of SSD disk space</p>\n</blockquote>",
        "id": 222330922,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1610386867
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span>  Does it set the memory parameter <code>--memory=num -M</code> option when compiling <code>lean</code>?  (Also, does it have swap memory?)</p>",
        "id": 222331246,
        "sender_full_name": "Jason Rute",
        "timestamp": 1610386997
    },
    {
        "content": "<p>We don't set <code>-M</code> but we do set <code>-T100000</code>: <a href=\"https://github.com/leanprover-community/mathlib/blob/master/.github/workflows/build.yml#L69\">https://github.com/leanprover-community/mathlib/blob/master/.github/workflows/build.yml#L69</a></p>\n<p>I don't know whether the machines use swap memory. (I don't know anything about the systems beyond the page I linked, unfortunately.)</p>",
        "id": 222331691,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1610387172
    },
    {
        "content": "<p>Setting <code>--memory</code> will just make Lean abort if it uses too much memory.</p>",
        "id": 222332262,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1610387426
    },
    {
        "content": "<p>I'd add swap first.</p>",
        "id": 222332295,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1610387438
    },
    {
        "content": "<p>Do you know how much memory a (non-swap) instance needs in general to compile mathlib?  (I'll probably will go with swap, but I'm curious.)</p>",
        "id": 222332455,
        "sender_full_name": "Jason Rute",
        "timestamp": 1610387518
    },
    {
        "content": "<p>Ok, I just compiled mathlib real quick for you.  Peak memory usage is <del>20.1 gigabytes</del> 19.2 GiB:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>        Command being timed: \"lean --make src/\"\n        User time (seconds): 14476.39\n        System time (seconds): 42.63\n        Percent of CPU this job got: 2130%\n        Elapsed (wall clock) time (h:mm:ss or m:ss): 11:21.40\n        Average shared text size (kbytes): 0\n        Average unshared data size (kbytes): 0\n        Average stack size (kbytes): 0\n        Average total size (kbytes): 0\n        Maximum resident set size (kbytes): 20122968\n        Average resident set size (kbytes): 0\n        Major (requiring I/O) page faults: 6020\n        Minor (reclaiming a frame) page faults: 5388330\n        Voluntary context switches: 1972429\n        Involuntary context switches: 389149\n        Swaps: 0\n        File system inputs: 32608\n        File system outputs: 327072\n        Socket messages sent: 0\n        Socket messages received: 0\n        Signals delivered: 0\n        Page size (bytes): 4096\n        Exit status: 0\n</code></pre></div>",
        "id": 222334352,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1610388345
    },
    {
        "content": "<p>This probably scales more or less linearly with <code>-j</code>?</p>",
        "id": 222335121,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1610388681
    },
    {
        "content": "<p>Yes.  There are a few points where it only uses 4 cores, but typically Lean manages to utilize &gt;20 threads.</p>",
        "id": 222335240,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1610388727
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"115715\">@Jason Rute</span> So use <code>-j0</code> for 0 memory usage <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 222335371,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1610388805
    },
    {
        "content": "<p>Oh, you mean that <em>memory</em> usage scales?  I don't think so.  The memory usage grew at a pretty constant rate while compiling mathlib.</p>",
        "id": 222335522,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1610388864
    },
    {
        "content": "<p>Or maybe there are thread-local leaks?</p>",
        "id": 222335653,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1610388932
    },
    {
        "content": "<p>I've been using <code>-j0</code> to compile mathlib for a while</p>",
        "id": 222338301,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1610390172
    }
]