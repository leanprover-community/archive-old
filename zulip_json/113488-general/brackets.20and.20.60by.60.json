[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">ε</span> <span class=\"n\">hε</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">le_of_lt</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">sub_self</span><span class=\"o\">,</span> <span class=\"n\">abs_zero</span><span class=\"o\">])</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">ε</span> <span class=\"n\">hε</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">le_of_lt</span> <span class=\"k\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">sub_self</span><span class=\"o\">,</span> <span class=\"n\">abs_zero</span><span class=\"o\">]</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">ε</span> <span class=\"n\">hε</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">le_of_lt</span> <span class=\"k\">begin</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">sub_self</span><span class=\"o\">,</span> <span class=\"n\">abs_zero</span><span class=\"o\">]</span> <span class=\"kn\">end</span><span class=\"bp\">⟩</span>\n</pre></div>\n\n\n<p>Top and bottom one work, middle one doesn't. Middle one is the shortest :-(</p>",
        "id": 192400525,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585666562
    },
    {
        "content": "<p>Try <code>$</code> before <code>by</code></p>",
        "id": 192423746,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585676402
    },
    {
        "content": "<p>Though it will become as long as the first one.</p>",
        "id": 192423855,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585676430
    },
    {
        "content": "<p>How come I don't need the <code>$</code> for begin end though?</p>",
        "id": 192424321,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585676633
    },
    {
        "content": "<p>Because that's the way the parser is defined? <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 192424589,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585676750
    },
    {
        "content": "<p>I guess <code>begin</code> and <code>end</code> already behave something like a matching pair of parentheses</p>",
        "id": 192424645,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585676763
    },
    {
        "content": "<p>while <code>by</code> doesn't come along with a matching end token</p>",
        "id": 192424697,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585676789
    },
    {
        "content": "<p>I don't know if that's really the reason though</p>",
        "id": 192424723,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585676799
    },
    {
        "content": "<p>Works with the <code>$</code>, unsurprisingly.</p>",
        "id": 192424867,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585676867
    },
    {
        "content": "<p>I haven't looked at the lean grammar, but as <code>by</code> is a keyword is should be possible to make it bind to the right with higher priority and have the middle one work.</p>",
        "id": 192492113,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1585726543
    },
    {
        "content": "<p><code>\\lam</code> and <code>\\forall</code> have the same problem</p>",
        "id": 192492198,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585726594
    },
    {
        "content": "<p>I find the top version more clear personally, but I also think it would make sense for <code>by</code> to bind to the right.</p>",
        "id": 192492258,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1585726646
    }
]