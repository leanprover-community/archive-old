[
    {
        "content": "<p>Hello,</p>\n<p>I'm writing some tooling to interact with lean. In the middle of a proof, I want to clear all the local context, retrieve the main goal metavariable, and then reinstate the local context. I'm able to do this by first running <code>revert_all</code>, followed by <code>intros</code>, eg <a href=\"https://leanprover-community.github.io/lean-web-editor/#code=import%20tactic%0A%0Atheorem%20blah%20%28k%20l%20%3A%20%E2%84%95%29%20%28g%E2%82%80%20%3A%20k%20%3C%204%29%20%28g%E2%82%81%20%3A%20l%20%3C%204%29%20%3A%20k%20%2B%20l%20%3C%208%20%3A%3D%0Abegin%0A%20%20revert_all%2C%0A%20%20intros%2C%0Aend%20\">here</a>. I'm a little bit confused about how the <code>intros</code> command is able to remember and reinstate the names of the hypotheses (eg g1 and g2 in this example). I'm quite new to lean - could anyone point me to some documentation or code that explains this?</p>\n<p>Thanks<br>\nRishi</p>",
        "id": 292966282,
        "sender_full_name": "Rishi Mehta",
        "timestamp": 1660236211
    },
    {
        "content": "<p>If you look at the goal after <code>revert_all</code>, you will see that it uses the correct names after <code>âˆ€</code>. So those names are stored in the expression that is your new goal. And that's where <code>intros</code> gets the names from.</p>",
        "id": 292966958,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1660236428
    },
    {
        "content": "<p>Thanks Johan. That explains the names <code>k</code> and <code>l</code>, but not the hypothesis names g1 and g2, no?</p>",
        "id": 292967866,
        "sender_full_name": "Rishi Mehta",
        "timestamp": 1660236723
    },
    {
        "content": "<p>I think the same mechanism applies, even though the pretty-printer doesn't display those names to you.</p>",
        "id": 292968329,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1660236864
    }
]