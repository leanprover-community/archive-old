[
    {
        "content": "<p>Is there any reason why <a href=\"https://github.com/leanprover-community/mathlib/blob/d2c5309d0bc66bdf813b4510dfe0a1d7523cad0a/src/data/set/basic.lean#L775\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/d2c5309d0bc66bdf813b4510dfe0a1d7523cad0a/src/data/set/basic.lean#L775\">mem_preimage_eq</a> is stated as an equality rather than an iff? It seems contrary to the mathlib way</p>",
        "id": 169568623,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562162397
    },
    {
        "content": "<p>My guess is because it's stronger in the world without <code>propext</code>.</p>",
        "id": 169568916,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1562162546
    },
    {
        "content": "<p>you can <code>blame</code> it on commit <code>8f4327a</code> by digama0 on 15 Oct 2017:<br>\n<a href=\"https://github.com/leanprover-community/mathlib/commit/8f4327ae0c45ed36037beb1449f8285cae1ebe9c#diff-d076c0ad9beb03e207eb6ed5d354f5d5R497\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/commit/8f4327ae0c45ed36037beb1449f8285cae1ebe9c#diff-d076c0ad9beb03e207eb6ed5d354f5d5R497\">https://github.com/leanprover-community/mathlib/commit/8f4327ae0c45ed36037beb1449f8285cae1ebe9c#diff-d076c0ad9beb03e207eb6ed5d354f5d5R497</a></p>",
        "id": 169569130,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1562162691
    },
    {
        "content": "<p>or, in other words, it's because the code is 2 years old</p>",
        "id": 169569136,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1562162699
    },
    {
        "content": "<p>I guess it means <code>dsimp</code> will use it.</p>",
        "id": 169569344,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1562162838
    },
    {
        "content": "<p>Which is handy</p>",
        "id": 169569357,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1562162850
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>?</p>",
        "id": 169569385,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562162865
    },
    {
        "content": "<p>I think it just predates the mathlib convention</p>",
        "id": 169569991,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562163281
    },
    {
        "content": "<p>Would you merge a PR changing this?</p>",
        "id": 169570036,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562163307
    },
    {
        "content": "<p>also <code>dsimp</code> doesn't use <code>iff.rfl</code> lemmas unfortunately</p>",
        "id": 169570044,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562163312
    },
    {
        "content": "<p>Or maybe adding a  <code>mem_preimage_iff</code> lemma if that <code>dsimp</code> thing is important?</p>",
        "id": 169570144,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562163367
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> Actually that's not the origin; you can see it got moved in that commit but predates it</p>",
        "id": 169570173,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562163397
    },
    {
        "content": "<p>I would merge such a PR</p>",
        "id": 169570211,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562163448
    },
    {
        "content": "<p>I don't think the dsimp thing is a very big deal</p>",
        "id": 169570242,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562163466
    },
    {
        "content": "<p>Which version? Changing the lemma or adding a new one?</p>",
        "id": 169570244,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562163468
    },
    {
        "content": "<p>changing the lemma</p>",
        "id": 169570360,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562163546
    },
    {
        "content": "<p>Should the new name be <code>mem_preimage</code> or <code>mem_preimage_iff</code>?</p>",
        "id": 169570635,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562163730
    },
    {
        "content": "<p>I like <code>mem_preimage</code> if it's not already taken</p>",
        "id": 169570866,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562163959
    },
    {
        "content": "<p>It seems to exists in many namespaces but not the root one</p>",
        "id": 169570981,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562164024
    },
    {
        "content": "<p>this one should be in the <code>set</code> namespace</p>",
        "id": 169571011,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562164048
    },
    {
        "content": "<p>actually it is</p>",
        "id": 169571088,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562164088
    },
    {
        "content": "<p>I didn't pay attention but this lemma is in the set namespace</p>",
        "id": 169571099,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562164102
    },
    {
        "content": "<p>Ok, let's see what Travis thinks about <a href=\"https://github.com/leanprover-community/mathlib/pull/1174\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/1174\">https://github.com/leanprover-community/mathlib/pull/1174</a></p>",
        "id": 169571258,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562164227
    }
]