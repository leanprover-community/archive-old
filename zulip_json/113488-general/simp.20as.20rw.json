[
    {
        "content": "<p>Recently I have come across many cases where rw cannot rewrite the thing I need it to. Usually simp can do the trick, but I know it's bad practice to not close a goal after using simp. I was wondering if it's ok to use <code>simp only</code> and not close a goal?<br>\nAlso, is there a reason rw cannot rewrite under lambdas, or stuff with type class inference (there probably is a good reason, most likely one I won't understand)?</p>",
        "id": 133984046,
        "sender_full_name": "Ali Sever",
        "timestamp": 1536965267
    },
    {
        "content": "<p>Same question for if <code>dsimp</code> is ok.</p>",
        "id": 134003836,
        "sender_full_name": "Ali Sever",
        "timestamp": 1537002744
    },
    {
        "content": "<p>with <code>dsimp</code> there's a trick which Chris told me: you run <code>dsimp</code>, you see what it gives you, and then you remove the <code>dsimp</code> and replace it with <code>show &lt;output&gt;</code></p>",
        "id": 134003846,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537002794
    },
    {
        "content": "<p>Related: I am currently learning to turn my tactic mode proofs into term mode, because mathlib prefers brevity and I am trying to write code which can be put into mathlib. In term mode the <code>show</code> stuff can often be deleted completely.</p>",
        "id": 134003890,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537002872
    },
    {
        "content": "<p>I was inspired by watching Mario writing <code>noetherian.lean</code> in real time; I saw him finish a proof and then instead of moving on he would start editing it to make it as small as possible.</p>",
        "id": 134003901,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537002930
    },
    {
        "content": "<p>Doesn't that make it harder to go back and change it if necessary?</p>",
        "id": 134004035,
        "sender_full_name": "Ali Sever",
        "timestamp": 1537003198
    },
    {
        "content": "<p>the shorter it is, the less likely it will need to be changed</p>",
        "id": 134004170,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537003383
    },
    {
        "content": "<p>a bit, depending on what needs changing. It's also a good skill to learn to take a term proof and insert probes and tactic blocks in the middle to find out what's going on</p>",
        "id": 134004180,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537003426
    },
    {
        "content": "<p>With this <code>simp</code> thing, the extra line that you're not happy about is exactly the clue that Lean needs in order to minimise the chances that it will need to be changed later.</p>",
        "id": 134004230,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537003451
    },
    {
        "content": "<p>Mario has a lot of experience in something I'm a complete novice at -- maintaining code. That's the next level up for me.</p>",
        "id": 134004238,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537003472
    },
    {
        "content": "<p>Currently I'm learning how to write code which is maintainable. But I'm trying to preach the basics to people like you Ali.</p>",
        "id": 134004250,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537003509
    }
]