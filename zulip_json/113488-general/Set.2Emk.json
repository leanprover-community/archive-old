[
    {
        "content": "<p>I'm wondering whether we should have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Set.mk\">docs#Set.mk</a> instead of just using <code>quotient.mk</code> directly. There's not really any other setoids of interest we could possibly build out of <code>pSet</code>, and by using this custom definition, using rewrite lemmas like <code>quotient.out_eq</code> and <code>quotient.eq</code> just becomes more tedious.</p>",
        "id": 289654956,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1657835778
    },
    {
        "content": "<p>I think it's good practice to keep <code>Set.mk</code>. You probably only use a couple of results for quotients, and you can reformulate them for <code>Set</code>.</p>",
        "id": 289701010,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1657875134
    },
    {
        "content": "<p>Should we do this sort of thing for other types defined in terms of quotients, such as <a href=\"https://leanprover-community.github.io/mathlib_docs/find/game\">docs#game</a>? We currently use <code>quotient.mk</code> throughout in its API.</p>",
        "id": 289747326,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1657901041
    },
    {
        "content": "<p>Most other types already do this</p>",
        "id": 289753775,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657904160
    },
    {
        "content": "<p>Often because they bundle the constructor as a morphism</p>",
        "id": 289753848,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657904187
    }
]