[
    {
        "content": "<p>I might be about to make a fool of myself, but I discovered by accident that we seem to have a namespace called <code>Module.category_theory</code> in mathlib3:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.category.Module.basic</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">category_theory.forget</span> <span class=\"c1\">-- it exists</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">Module</span>\n\n<span class=\"c1\">-- doing stuff with modules and now I need category_theory.forget</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">category_theory</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">forget</span> <span class=\"c1\">-- fails!!</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">_root_.category_theory</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">forget</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">Module</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">Module.category_theory</span> <span class=\"c1\">-- works!!</span>\n</code></pre></div>\n<p>I don't think we have anything like <code>CommRing.category_theory</code> or anything like that, and I'm wondering if <code>Module.category_theory</code> was created by accident. I think it's in <code>algebra.category.Module.basic</code>, because if I replace that import with the files which it imports instead then the error goes away. Or <em>are</em> we supposed to have a namespace <code>Module.category_theory</code>?</p>",
        "id": 311440186,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669054702
    },
    {
        "content": "<p>It's probably caused by an automatically generated name from a category (or something else from the CT library) instance</p>",
        "id": 311440378,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1669054778
    },
    {
        "content": "<p>It's </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_zero_object</span> <span class=\"o\">(</span><span class=\"n\">Module.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨⟨</span><span class=\"n\">of</span> <span class=\"n\">R</span> <span class=\"n\">punit</span><span class=\"o\">,</span> <span class=\"n\">is_zero_of_subsingleton</span> <span class=\"n\">_</span><span class=\"o\">⟩⟩</span>\n</code></pre></div>\n<p>in the <code>Module</code> namespace, which creates a term named <code>Module.category_theory.limits.has_zero_object</code>. Is this anything worth worrying about?</p>",
        "id": 311441855,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669055244
    },
    {
        "content": "<p>This tripped me up when teaching just now, because I opened <code>category_theory</code> in the <code>Module</code> namespace and it didn't open, causing me a few minutes of confusion :-)</p>",
        "id": 311442015,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1669055291
    },
    {
        "content": "<p>I don't think it's necessarily anything to worry about, but it should be very easy to just add a name for that instance.</p>",
        "id": 311442719,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1669055487
    }
]