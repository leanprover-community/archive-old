[
    {
        "content": "<p>For a paper, we want to express that <code>mathlib</code> is growing quite rapidly, both as an open source project and/or as a theorem proving project.  In a previous paper we had wrote</p>\n<blockquote>\n<p>Leanâ€™s mathlib is one of the most active open-source software projects in the world, achieving explosive growth in recent years.</p>\n</blockquote>\n<p>That was rightly criticized as <code>[citation needed]</code>, and even if we replace \"open-source software\" with \"theorem proving project\", I'm worried it would come across as an unsourced exaggeration to say other ITP communities.  Any suggestions on an accurate replacement wording?</p>",
        "id": 255909654,
        "sender_full_name": "Jason Rute",
        "timestamp": 1633221119
    },
    {
        "content": "<p>If say <code>mathlib</code> is truly the largest ITP library by some standard (bytes, numbers of theorems, number of contributors) we could put that, but I don't want to just make this up.</p>",
        "id": 255909863,
        "sender_full_name": "Jason Rute",
        "timestamp": 1633221349
    },
    {
        "content": "<p>I think it's hard here. I would argue that it is the largest mutually-compatible ITP library, but that's a hard thing to quantify. <br>\nCertainly Coq, Isabelle, Mizar, ...? have <em>more</em> code out there still than Lean. But I've had the following conversation several times: \"Does Coq have X? Yes! Does Coq have Y? Yes! Can I use them at the same time? Err... It's complicated, but no.\"</p>",
        "id": 255910276,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633221766
    },
    {
        "content": "<p>Is Isabelle's AFP mutually compatible?  Or Mizar's for that matter?  (HOL-Light's core library is but that library is much smaller if I remember correctly, but it gets much larger if you add the flyspeck project.)</p>",
        "id": 255910606,
        "sender_full_name": "Jason Rute",
        "timestamp": 1633222149
    },
    {
        "content": "<p>I would love to know the answers for AFP and Mizar!</p>",
        "id": 255910727,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633222291
    },
    {
        "content": "<p>And Metamath also as I think about it?</p>",
        "id": 255911369,
        "sender_full_name": "Jason Rute",
        "timestamp": 1633222938
    },
    {
        "content": "<p>Statistics:</p>\n<ul>\n<li>Isabelle's AFP: <a href=\"https://www.isa-afp.org/statistics.html\">https://www.isa-afp.org/statistics.html</a></li>\n<li><code>mathlib</code>: <a href=\"https://leanprover-community.github.io/mathlib_stats.html\">https://leanprover-community.github.io/mathlib_stats.html</a> </li>\n<li>I can't find good statistics for Mizar's MML and Metamath's mm.set, but I think they are a smaller now (in total number of theorems) than <code>mathlib</code>.</li>\n</ul>",
        "id": 255911701,
        "sender_full_name": "Jason Rute",
        "timestamp": 1633223334
    },
    {
        "content": "<p>I think AFP is much larger than Lean and still growing slightly faster at least in lines of code per year.</p>",
        "id": 255911904,
        "sender_full_name": "Jason Rute",
        "timestamp": 1633223560
    },
    {
        "content": "<p>If you're describing growth, perhaps the rate of addition of theorems to Freek's list over a recent period of time could be one measure.</p>",
        "id": 255911916,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1633223585
    },
    {
        "content": "<p>That is complicated to explain succinctly.</p>",
        "id": 255911941,
        "sender_full_name": "Jason Rute",
        "timestamp": 1633223632
    },
    {
        "content": "<p>I think I'm going to go with hard numbers and no comparisons to outside projects:</p>\n<blockquote>\n<p>Lean's <code>mathlib</code> is an exponentially growing open source library of formal mathematics which has nearly doubled in size each year for the past four years.</p>\n</blockquote>",
        "id": 255914367,
        "sender_full_name": "Jason Rute",
        "timestamp": 1633226320
    },
    {
        "content": "<p>Let's not use Freek's list. It has terrible correlation with \"interesting\". :-)</p>",
        "id": 255915949,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633228068
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/Accurate.20description.20of.20.60mathlib.60's.20explosive.20growth/near/255910727\">said</a>:</p>\n<blockquote>\n<p>I would love to know the answers for AFP and Mizar!</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Do you know if <a href=\"http://set.mm\">set.mm</a> is self consistent like <code>mathlib</code> is?<br>\n<span class=\"user-mention\" data-user-id=\"121058\">@Jasmin Blanchette</span> Do you know about AFP?  Same question.<br>\nDoes anyone know about Mizar's MML?</p>",
        "id": 255955479,
        "sender_full_name": "Jason Rute",
        "timestamp": 1633271622
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span>  probably knows about AFP.</p>",
        "id": 255955712,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633271871
    },
    {
        "content": "<p>It would be nice to get the analogue of our undergrad math list for Isabelle, but it would be a lot of work.</p>",
        "id": 255955771,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633271908
    },
    {
        "content": "<p>In general, there is no reason why AFP entries should be compatible, but there is no reason why they should be incompatible either, if they don't step on each other toes. On the other hand, develoments in one single area tend to build on one another, and so they are most often compatible. But note that AFP is mostly made of computer science developments, for which the problematics are not the same (you're more often building things one next to each other, instead of one on top of the other as in mathematics).</p>",
        "id": 255956806,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1633272985
    },
    {
        "content": "<p>Could you mix topology and algebra in Isabelle like we do in mathlib?</p>",
        "id": 255956850,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633273049
    },
    {
        "content": "<p>The issue is not even in the AFP here, it's in the main Isabelle repo. And the answer is mostly no, because topology is built using type classes, while algebra is built using locales and carriers (otherwise, you couldn't work nicely with subgroups). As far as I understand, people are not really happy with the main algebra library, and think it should probably be rewritten, but it's such a huge refactor that it has never been done.</p>",
        "id": 255956985,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1633273194
    },
    {
        "content": "<p>Are they logically compatible (i.e. consistent), but not usefully compatible in practice?</p>",
        "id": 255957195,
        "sender_full_name": "Jason Rute",
        "timestamp": 1633273331
    },
    {
        "content": "<p>They are logically compatible, but have unpleasant duplications due to the ultilisation of both locale and typeclass. For example, our most used polynomial development is based on typeclasses but in Isabelle algebra there is another polynomial development based on locales for maximum flexibility -- I know there are logically equivalent but mixing both version (of polynomials) in a single development may require non-trivial effort to show their equivalence. </p>\n<p>I am not very familiar with the topology in Lean, but in Isabelle there are, again, two versions of topology and one is based on typeclass...</p>\n<p>Results in algebra in Isabelle are generally easy to be imported to typeclass-based analysis (not sure about what kind of topology you mean here, but I can say for analysis). An example is the devepment of Vector Spaces (based on HOL-Algebra, <a href=\"https://www.isa-afp.org/entries/VectorSpace.html\">https://www.isa-afp.org/entries/VectorSpace.html</a>) is being used in the development of the Expressiveness of Deep Learning (<a href=\"https://www.isa-afp.org/entries/Deep_Learning.html\">https://www.isa-afp.org/entries/Deep_Learning.html</a>), which is heavily based on typeclass analysis.</p>",
        "id": 255959837,
        "sender_full_name": "Wenda Li",
        "timestamp": 1633275898
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"384425\">@Wenda Li</span>  I guess Patrick is talking about things like the theory of topological rings, where you need to be able to do algebra and topology at the same time on one object. These appear everywhere in the perfectoid space work for example</p>",
        "id": 255965740,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633281797
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"115715\">Jason Rute</span> <a href=\"#narrow/stream/113488-general/topic/Accurate.20description.20of.20.60mathlib.60's.20explosive.20growth/near/255955479\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/Accurate.20description.20of.20.60mathlib.60's.20explosive.20growth/near/255910727\">said</a>:</p>\n<blockquote>\n<p>I would love to know the answers for AFP and Mizar!</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> Do you know if <a href=\"http://set.mm\">set.mm</a> is self consistent like <code>mathlib</code> is?</p>\n</blockquote>\n<p>Yes. In fact I took a lot of lessons from the design of <a href=\"http://set.mm\">set.mm</a> at the beginning of mathlib, and one of the more important ones was that centralized maintenance is crucial for large scale proof development, even though this goes against CS best practice.</p>\n<p><code>set.mm</code> is almost pathologically centralized. There is one file (the eponymous <code>set.mm</code>), which is a million lines long plaintext file. You need a good editor to handle it, but it has lots of sectioning in it, styled like a really long and detailed treatise on everything. It also has tons of comments, and one of the contribution requirements is that <em>every</em> theorem gets a doc string. If I had to guess I would say about 30% of the lines are comments.</p>\n<p>There is a section at the end (about 20% of the file) which consists of user \"mathboxes\", which are basically a place where contributors have additional editorial leeway to design their own developments. However, mathboxes are not supposed to use each others' theorems, and if user A wants to use B's theorem then they should coordinate to get it moved into the main part of <a href=\"http://set.mm\">set.mm</a>, which plays a role roughly similar to mathlib PRs. But at all times the whole file checks, including the mathboxes.</p>",
        "id": 255977773,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1633293230
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"115715\">@Jason Rute</span> You already posted the AFP stats. I don't have any further information about it apart from our outdated paper \"Mining the Archive of Formal Proofs\".</p>",
        "id": 256023656,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1633336426
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"115715\">@Jason Rute</span> Btw, I think that <a href=\"https://leanprover-community.github.io/mathlib_stats.html\">https://leanprover-community.github.io/mathlib_stats.html</a> no longer supports the claim that mathlib grows exponentially.</p>",
        "id": 256252989,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633443417
    },
    {
        "content": "<p>We saw massive growth during the 2nd covid wave. But what seemed exponential now seems to be quite linear.</p>",
        "id": 256253138,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633443471
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/Accurate.20description.20of.20.60mathlib.60's.20explosive.20growth/near/255910727\">said</a>:</p>\n<blockquote>\n<p>I would love to know the answers for AFP and Mizar!</p>\n</blockquote>\n<p>Ok, I finally have stats on all of the major libraries (except Coq, which doesn't really have a central math library, and HOL light which I can't find numbers but I think it is much smaller than the rest): <a href=\"https://proofassistants.stackexchange.com/questions/141/where-can-i-find-lists-of-theorems-that-have-been-verified/315#315\">https://proofassistants.stackexchange.com/questions/141/where-can-i-find-lists-of-theorems-that-have-been-verified/315#315</a></p>",
        "id": 271521051,
        "sender_full_name": "Jason Rute",
        "timestamp": 1644544142
    }
]