[
    {
        "content": "<p>I was surprised to find that <code>{u}</code> binder syntax works for some commands but not others:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- ok</span>\n<span class=\"kd\">def</span> <span class=\"o\">{</span><span class=\"n\">w</span><span class=\"o\">}</span> <span class=\"n\">foo1</span> <span class=\"o\">{</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"n\">Q</span>\n<span class=\"kd\">abbreviation</span> <span class=\"o\">{</span><span class=\"n\">w</span><span class=\"o\">}</span> <span class=\"n\">foo2</span> <span class=\"o\">{</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"n\">Q</span>\n<span class=\"kd\">lemma</span> <span class=\"o\">{</span><span class=\"n\">w</span><span class=\"o\">}</span> <span class=\"n\">foo3</span> <span class=\"o\">{</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span> <span class=\"o\">:=</span> <span class=\"n\">Q</span>\n<span class=\"c1\">-- fail</span>\n<span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">w</span><span class=\"o\">}</span> <span class=\"n\">foo4</span> <span class=\"o\">{</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span> <span class=\"o\">:=</span> <span class=\"n\">Q</span>\n</code></pre></div>\n<p>Is this deliberate?</p>",
        "id": 240303369,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622024450
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/Universe.20binder.20syntax/near/240303369\">said</a>:</p>\n<blockquote>\n<p>Is this deliberate?</p>\n</blockquote>\n<p>No.</p>",
        "id": 240303426,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1622024497
    },
    {
        "content": "<p>Edited, I screwed up on the <code>lemma</code> one.</p>",
        "id": 240303449,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622024520
    },
    {
        "content": "<p>I guess the problem with <code>instance</code> is that you then don't know how to parse</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">{</span><span class=\"n\">w</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span> <span class=\"o\">:=</span> <span class=\"n\">Q</span>\n</code></pre></div>",
        "id": 240303507,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622024537
    },
    {
        "content": "<p>I'm asking these because the new syntax highlighter gets highlighting slightly wrong on <code>instance {R : Type}</code></p>",
        "id": 240304280,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622025025
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/vscode-lean/issues/269\">leanprover/vscode-lean#269</a></p>",
        "id": 240308639,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622027952
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> , these get messed up by <code>}}</code> brackets:</p>\n<p><a href=\"/user_uploads/3121/XqLEhUQD_MqtcR3kSIoVkJMi/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/XqLEhUQD_MqtcR3kSIoVkJMi/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/XqLEhUQD_MqtcR3kSIoVkJMi/image.png\"></a></div>",
        "id": 240324334,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622035831
    },
    {
        "content": "<p>Can you paste a mwe so that I can debug?</p>",
        "id": 240329749,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622037974
    },
    {
        "content": "<p>Ah, it's an easy fix - the binder name regex seems to think <code>â¦„</code> is allowed as part of an unquoted name</p>",
        "id": 240330453,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622038293
    },
    {
        "content": "<p>That is, these patterns need to include that character in their forbidden-symbol list:</p>\n<p><a href=\"https://github.com/leanprover/vscode-lean/blob/master/syntaxes/lean.json#L225-L236\">https://github.com/leanprover/vscode-lean/blob/master/syntaxes/lean.json#L225-L236</a></p>",
        "id": 240330622,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622038357
    },
    {
        "content": "<p>you're fast - didn't even finish writing the MWE in time!</p>",
        "id": 240330730,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622038405
    },
    {
        "content": "<p>Is this fix in the process of being PR'd? I'm hitting this a lot today :(</p>",
        "id": 240336071,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1622040451
    },
    {
        "content": "<p>Is it the same bug?</p>",
        "id": 240336301,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622040537
    },
    {
        "content": "<p>I haven't gotten around to Pring it, but it's a 4-charcter fix</p>",
        "id": 240336329,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622040549
    },
    {
        "content": "<p>It seems like it, yeah, everything after a }} looks completely broken in my VSCode</p>",
        "id": 240336458,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1622040600
    },
    {
        "content": "<p>Will PR it now</p>",
        "id": 240336546,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622040621
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 240336684,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1622040671
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/vscode-lean/pull/270\">https://github.com/leanprover/vscode-lean/pull/270</a></p>",
        "id": 240336919,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622040751
    }
]