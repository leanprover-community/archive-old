[
    {
        "content": "<p>It would be nice to have a tactic detecting bad type class assumptions in the current context. I just wasted ten minutes because my bad <code>variables</code> management got me <code>topological_space E</code> and <code>normed_group E</code> in the same context and then Lean was super confused. The tactic would inspect all type class assumptions and somehow hunt for conflicting ones. This is a vague specification, but I feel like <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span>  could enjoy that challenge.</p>",
        "id": 264155485,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1638970667
    },
    {
        "content": "<p>Something like <code>fails_quickly</code>?</p>",
        "id": 264156065,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1638970913
    },
    {
        "content": "<p>I mean, try to remove all instances but one (and all those depending on it) and try to deduce it from what's left.</p>",
        "id": 264156181,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1638970953
    },
    {
        "content": "<p>I think it would be more like two assumptions with a common parent, for example <code>group R</code> and <code>ring R</code> both have a <code>has_mul R</code> parent</p>",
        "id": 264156296,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1638971018
    },
    {
        "content": "<p>I think that it should be restricted to parents in the <code>extends</code> sense rather than arbitrary typeclass diamonds, which would be a lot more expensive to determine</p>",
        "id": 264156450,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1638971072
    },
    {
        "content": "<p>Best would be to detect the <code>Type</code>-valued typeclasses which add fields, maybe by tagging them.</p>",
        "id": 264157045,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1638971321
    }
]