[
    {
        "content": "<p>Suppose I have a goal like <code>((Ss_fst, Ss_snd).fst, (Ss_fst, Ss_snd).snd) ⇒ ((Ss'_fst, Ss'_snd).fst, (Ss'_fst, Ss'_snd).snd)</code> and I just want to automatically reduce it, i.e., beta-delta-etc.-reduce it. I have the impression that Lean (and Coq) discourage that, preferring a lazy approach, but sometimes it seems useful, and in a teaching context I can see many uses for that. Going outside the goal, writing</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">#</span><span class=\"n\">reduce</span> <span class=\"o\">(</span><span class=\"bp\">∀</span><span class=\"n\">Ss_fst</span> <span class=\"n\">Ss_snd</span> <span class=\"n\">Ss&#39;_fst</span> <span class=\"n\">Ss&#39;_snd</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">Ss_fst</span><span class=\"o\">,</span> <span class=\"n\">Ss_snd</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">fst</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">Ss_fst</span><span class=\"o\">,</span> <span class=\"n\">Ss_snd</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"o\">)</span> <span class=\"err\">⇒</span> <span class=\"o\">((</span><span class=\"n\">Ss&#39;_fst</span><span class=\"o\">,</span> <span class=\"n\">Ss&#39;_snd</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">fst</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">Ss&#39;_fst</span><span class=\"o\">,</span> <span class=\"n\">Ss&#39;_snd</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"o\">))</span>\n</code></pre></div>\n\n\n<p>and then doing a <code>show</code> with the result seems like a roundabout solution. Is there a more direct approach? If not, why not?</p>",
        "id": 203118326,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1594135853
    },
    {
        "content": "<p><code>dsimp</code></p>",
        "id": 203118422,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594135899
    },
    {
        "content": "<p>Ah!! That's what dsimp is for! I think the <code>simp</code> part mislead me there. Thanks a lot. :)</p>",
        "id": 203118870,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1594136094
    },
    {
        "content": "<p>Maybe <code>simp only []</code> would work too</p>",
        "id": 203135921,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594143992
    }
]