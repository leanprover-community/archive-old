[
    {
        "content": "<p>Say I have a <code>tactic expr</code>. If I'm in interactive mode, how do I invoke it and assign the result to a named hypothesis?</p>",
        "id": 130780443,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533219223
    },
    {
        "content": "<p>e.g.</p>\n<div class=\"codehilite\"><pre><span></span>meta def J : tactic expr := to_expr ``(5)\nexample : false :=\nbegin\n have j := /- execute J here -/ sorry,\nend\n</pre></div>",
        "id": 130780624,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533219372
    },
    {
        "content": "<p>Maybe it's the wrong time of day for tactic questions, too many mathematicians are awake. :-)</p>",
        "id": 130780759,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533219550
    },
    {
        "content": "<p>Maybe it's the wrong time of day for <del>tactic</del> questions...<br>\nIt is <code>&gt; body.temp</code> over here. Although aussies might be used to this...</p>",
        "id": 130780842,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1533219648
    },
    {
        "content": "<p>I'd love to help you but my children insist it's time  to go to the beach</p>",
        "id": 130780892,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1533219713
    },
    {
        "content": "<p>Have fun at the beach. :-) Winter here!</p>",
        "id": 130780959,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533219761
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>example : false :=\nbegin\n have j := by J &gt;&gt;= tactic.exact,\n let j&#39; := by J &gt;&gt;= tactic.exact,\nend\n</pre></div>",
        "id": 130781162,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1533220026
    },
    {
        "content": "<p><code>let</code> instead of <code>have</code> will give you access to the value of your tactic, maybe necessary if the expr isn't a proof.</p>",
        "id": 130781187,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1533220081
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 130781526,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533220397
    },
    {
        "content": "<p>Now going the other way: if I have a named hypothesis and I want to get hold of an <code>expr</code>?</p>",
        "id": 130781551,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533220425
    },
    {
        "content": "<p><code>tactic.get_local</code>?</p>",
        "id": 130781619,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1533220470
    },
    {
        "content": "<p>Thanks @Rob, that does it.</p>",
        "id": 130812539,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533261817
    },
    {
        "content": "<p>Now I want to get the 'other half' of a hypothesis. Say I have <code>h : t := p</code> amongst my hypotheses. How do I produce <code>p</code> as an <code>expr</code>?</p>",
        "id": 130812580,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533261860
    },
    {
        "content": "<p>This might help: </p>\n<p><a href=\"https://github.com/unitb/lean-lib/blob/master/src/util/meta/tactic/basic.lean#L16-L21\" target=\"_blank\" title=\"https://github.com/unitb/lean-lib/blob/master/src/util/meta/tactic/basic.lean#L16-L21\">https://github.com/unitb/lean-lib/blob/master/src/util/meta/tactic/basic.lean#L16-L21</a></p>",
        "id": 130814956,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1533265752
    },
    {
        "content": "<p>Heh, nice workaround</p>",
        "id": 130815320,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1533266378
    },
    {
        "content": "<p>Thanks, that works. Still struggling with my bigger problem, but that was helpful!</p>",
        "id": 130817156,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533269958
    },
    {
        "content": "<p>Let us know what the bigger problem is. I'll have a look when I wake up</p>",
        "id": 130821219,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1533277529
    }
]