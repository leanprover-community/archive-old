[
    {
        "content": "<p>Hi everyone, I am organising a Lean User Group meeting in Freiburg (Germany). Dates: Monday 5 November – Wednesday 7 November.<br>\nI would like to mimic the model of the very succesful meeting in Orsay. So it will be a free-form hackathon with some spontaneous talks. Nevertheless it may be useful to broadly sketch a topic: I would like to use this workshop to work on mathematical topics revolving around geometry, algebra and number theory (e.g., manifolds, schemes, homological algebra, number fields, and any category theory that shows up along the way). Besides that we can also discuss and improve tactics/automation that will streamline our work.<br>\nThere is limited funding to cover hotel/travel costs.</p>\n<p>If you would like to join in this workshop, please reply to this thread while mentioning me (with an <code>@</code>).</p>",
        "id": 133714386,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536650626
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> I'll come</p>",
        "id": 133714593,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536650913
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> I'll come too</p>",
        "id": 133718009,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1536655798
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> I'll come if I can sort it out with my university</p>",
        "id": 133736756,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536676608
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> how does this work?</p>",
        "id": 133736766,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536676624
    },
    {
        "content": "<p>The best thing to do is to keep it quiet and not announce that you will be taking three days off in the middle of term on a public forum. That way nobody will notice.</p>",
        "id": 133737565,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536677225
    },
    {
        "content": "<p>I see</p>",
        "id": 133738187,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536677760
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> I am interested in coming.</p>",
        "id": 133887815,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1536848392
    },
    {
        "content": "<p>Cool! I'm looking forward to meeting you.</p>",
        "id": 133888397,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536848787
    },
    {
        "content": "<p>Ok, I've passed your email addresses on to our secretary. You should receive an email soon, with details about hotel and/or travel reimbursements.</p>",
        "id": 133941012,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536916725
    },
    {
        "content": "<p>Don't book a hotel yourself. Our uni will do that for you.</p>",
        "id": 133941015,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536916737
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> <span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span> <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> <span class=\"user-mention\" data-user-id=\"110193\">@Cyril Cohen</span> <span class=\"emoji emoji-2b06\" title=\"up\">:up:</span></p>",
        "id": 133941028,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536916759
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> I had to think a bit about this, but am also very interested in coming.</p>",
        "id": 133944497,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1536922271
    },
    {
        "content": "<p>Seems things could work out.</p>",
        "id": 133944514,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1536922285
    },
    {
        "content": "<blockquote>\n<p>Ok, I've passed your email addresses on to our secretary. You should receive an email soon, with details about hotel and/or travel reimbursements.</p>\n</blockquote>\n<p>Woah great :)</p>",
        "id": 133944784,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1536922665
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> , anything specific you need from my side?</p>",
        "id": 133946990,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1536925814
    },
    {
        "content": "<p>No, I think it's fine now. Our secretary will contact you somewhere next week.</p>",
        "id": 133947192,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536926081
    },
    {
        "content": "<p>Our secretary just informed me that she has booked hotel rooms for you. You should get an email with details anytime soon.</p>",
        "id": 134152694,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1537259208
    },
    {
        "content": "<p>I got the mail</p>",
        "id": 134153779,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1537260892
    },
    {
        "content": "<p>I got it too, thanks! Would you know at what time the meeting ends on wednesday?</p>",
        "id": 134154376,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1537261744
    },
    {
        "content": "<p>Whenever you want to leave <span class=\"emoji emoji-1f606\" title=\"lol\">:lol:</span> No fixed closing times.</p>",
        "id": 134154384,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1537261764
    },
    {
        "content": "<p>We could discuss what most people are planning to do, in this thread...</p>",
        "id": 134154392,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1537261788
    },
    {
        "content": "<p>On Wednesday I will leave around 16h from the station (this is the only direct connection Freiburg -&gt; Amsterdam)</p>",
        "id": 134155740,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1537263814
    },
    {
        "content": "<p>Then I assume I'll be on the same train as Johannes.</p>",
        "id": 134156130,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1537264412
    },
    {
        "content": "<blockquote>\n<p>Our secretary just informed me that she has booked hotel rooms for you. You should get an email with details anytime soon.</p>\n</blockquote>\n<p>I think I didn't get anything</p>",
        "id": 134229539,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537360969
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span></p>",
        "id": 134229544,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537360982
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  I asked the secretary to resend the email.</p>",
        "id": 134230733,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1537362471
    },
    {
        "content": "<p>To which email address?</p>",
        "id": 134230790,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537362494
    },
    {
        "content": "<p>Hi everyone! On Wednesday I will depart at 15:55 from the airport (this is the only flight back to Nice), I guess I will need to leave Freiburg arount 13:00?<br>\n<span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  Would you know a reliable way to go from BSL EuroAirport to Freibourg kind of late on Sunday evening (the plane lands at 22:10 if it is not late)?</p>",
        "id": 134533503,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1537803105
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110193\">@Cyril Cohen</span> I think it should be possible to go from the airport to Basel's train station. And from there I expect regular trains to Freiburg till at least midnight. But I don't have any experience with this...</p>",
        "id": 134533900,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1537803467
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> Ok, thanks, I'm looking into it.</p>",
        "id": 134534829,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1537804304
    },
    {
        "content": "<p><span class=\"emoji emoji-1f914\" title=\"thinking\">:thinking:</span> Johan told me the airport was unusable, so I took train tickets</p>",
        "id": 134540456,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537810332
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> From Nice I do not have much choice: the shortest train ride is still almost 9h long... so I'd rather fly to a unusable airport <span class=\"emoji emoji-1f602\" title=\"joy\">:joy:</span></p>",
        "id": 134578422,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1537858430
    },
    {
        "content": "<p>what are the starting/ending times?</p>",
        "id": 135137587,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538605392
    },
    {
        "content": "<p>Well, there is no strict schedule. But in Orsay we used to start at around 09.00 AM. (That is Central European Time, for those of us used to Hong Kong time zones). I think you should go for dinner earlier than in Paris. The German restaurants aren't used to people coming for dinner after 20.00. On Wednesday you should just leave whenever your travel schedule requires you to go.</p>",
        "id": 135155081,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1538635101
    },
    {
        "content": "<p>The first week of November is rapidly approaching. In the initial post in this thread, I outlined what I thought would be nice topics for this meeting.</p>\n<blockquote>\n<p>I would like to use this workshop to work on mathematical topics revolving around geometry, algebra and number theory (e.g., manifolds, schemes, homological algebra, number fields, and any category theory that shows up along the way). Besides that we can also discuss and improve tactics/automation that will streamline our work.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"122318\">@Tobias Grosser</span> has indicated that he would like to work on Presburger arithmetic. Some people in the department have shown some interest, and might want to drop by. So it we might have to showcase the proof of the infinitude of primes a couple of times (-; If there are other things that people would like to coordinate or prepare in advance, I think now would be a good time to discuss it.</p>",
        "id": 136336695,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1540301368
    },
    {
        "content": "<p>I can also announce the room where we will be meeting: <code>SR 232 (II. OG/Stochastik)</code>. My office is in room 425.</p>",
        "id": 136336796,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1540301457
    },
    {
        "content": "<p>What time are people planning to get in on Sunday? I'll be in Strasbourg that weekend and it looks like there are plenty of connections. Should we plan on dinner Sunday night?</p>",
        "id": 136338039,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1540302896
    },
    {
        "content": "<blockquote>\n<p>I can also announce the room where we will be meeting: <code>SR 232 (II. OG/Stochastik)</code>. My office is in room 425.</p>\n</blockquote>\n<p>Maybe I should also mention which building <span class=\"emoji emoji-1f606\" title=\"lol\">:lol:</span><br>\nIt's the mathematics institute: Ernst–Zermelo Straße 1. <a href=\"https://www.openstreetmap.org/?mlat=48.00080&amp;mlon=7.84597#map=17/48.00080/7.84597\" target=\"_blank\" title=\"https://www.openstreetmap.org/?mlat=48.00080&amp;mlon=7.84597#map=17/48.00080/7.84597\">map</a></p>",
        "id": 136338183,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1540303052
    },
    {
        "content": "<p>This is a 5-minute walk from the main station.</p>",
        "id": 136338199,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1540303076
    },
    {
        "content": "<p>I will be around 16:00 in Freiburg.</p>",
        "id": 136351433,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1540315115
    },
    {
        "content": "<p>Would be great to meet for dinner.</p>",
        "id": 136351434,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1540315121
    },
    {
        "content": "<p>Yes, I would very much like to discuss Presburger arithmetic.</p>",
        "id": 136351474,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1540315166
    },
    {
        "content": "<p>Just to get an idea, who would be interested in discussing decision procedures for Presburger arithmetic?</p>",
        "id": 136351546,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1540315206
    },
    {
        "content": "<p>In case there is some interest, I could try to prepare a small documents of things I would like to discuss and potentially useful paper references.</p>",
        "id": 136351589,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1540315263
    },
    {
        "content": "<p>I am certainly interested in understanding the roadmap. I'm probably not really qualified for in-depth contributions.</p>",
        "id": 136385252,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1540353777
    },
    {
        "content": "<p>Just wanted to let the other participants know that <span class=\"user-mention\" data-user-id=\"128547\">@Michael Jendrusch</span> from Heidelberg is also joining!</p>",
        "id": 136870815,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541010031
    },
    {
        "content": "<p>I just checked out the room (232) that we will be in. There are two blackboards, a whiteboard and a projector (beamer). There is a VGA cable, but I didn't see an HDMI cable. There are plenty wall sockets. (If you want to showcase something, and you need HDMI, please take your own cable with you. Otherwise, I can try to find one somewhere.)</p>",
        "id": 137025313,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541166237
    },
    {
        "content": "<p>Should we meet on Sunday as well?</p>",
        "id": 137131488,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541284842
    },
    {
        "content": "<p>Yes, we can meet! I guess I will be in Freiburg in the early afternoon. Rob should be at the hotel at 7pm.</p>",
        "id": 137148052,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541320308
    },
    {
        "content": "<p>I'll arrive at 9pm, so I guess we'll meet tomorrow morning. Are we all in the same hotel? I'm at Apart Hotel Mathildenstraße 14. Do we have a starting time tomorrow morning?</p>",
        "id": 137152332,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1541329811
    },
    {
        "content": "<p>I live in a little village south of Freiburg, so I won't meet you today. I'll be at the institute tomorrow morning at 8.30. I'm fine with starting at 9.00, like in Orsay.</p>",
        "id": 137153175,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541331662
    },
    {
        "content": "<p>I will be there from 5ish. Happy to go for dinner</p>",
        "id": 137154067,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1541333443
    },
    {
        "content": "<p>I might arrive on monday</p>",
        "id": 137155104,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541335619
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span>, is this last-minute booking?</p>",
        "id": 137155672,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1541336804
    },
    {
        "content": "<p>mostly</p>",
        "id": 137156529,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541338725
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"122318\">@Tobias Grosser</span> we can meet for dinner at around 7pm? Then <span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> is also in Freiburg.<br>\n<span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> I'm also at the Apart Hotel.</p>",
        "id": 137157800,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541341465
    },
    {
        "content": "<p>I am also at Apart Hotel. <span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span>, should we meet in the lobby at 19:00?</p>",
        "id": 137158186,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1541342328
    },
    {
        "content": "<p>Johan, I don't mind starting at 9 but your memories are wrong, in Orsay we started at 10 on the first day.</p>",
        "id": 137158984,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1541344003
    },
    {
        "content": "<p>Johannes, I guess I'll see you during breakfast around 8:30 then.</p>",
        "id": 137159079,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1541344200
    },
    {
        "content": "<blockquote>\n<p>Johan, I don't mind starting at 9 but your memories are wrong, in Orsay we started at 10 on the first day.</p>\n</blockquote>\n<p>Surely all we can deduce is that _someone's_ memories are wrong...</p>",
        "id": 137159495,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541344923
    },
    {
        "content": "<p>I am quite sure that my memory is wrong. If I recall correctly, that happens quite often to me.</p>",
        "id": 137159913,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541345661
    },
    {
        "content": "<p>Hi, I'm also joining the workshop and though I suppose I'm quite late with introductions, I'll introduce myself either way.<br>\nI'm Michael, a student from Heidelberg. I am mostly doing machine learning on medical and biological imaging data (I come from a CS / biology background). I've started learning Lean a while ago (and have been lurking on Zulip for some time) for a project where we're formalizing biological protocols on top of microfluidic devices in terms of (symmetric monoidal) categories, so I'm trying to wrap my head around code generation and proof automation for defining types representing symmetric monoidal categories in terms of some generating objects and morphisms.</p>\n<p>Anyway, I've arrived at the Hotel in Freiburg and I'm looking forward to the workshop.</p>",
        "id": 137163397,
        "sender_full_name": "Michael Jendrusch",
        "timestamp": 1541350936
    },
    {
        "content": "<p>Can you just explain (to a pure mathematician) what biology has to do with symmetric monoidal categories? I last went to a biology class about 30 years ago by the way.</p>",
        "id": 137165787,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541355187
    },
    {
        "content": "<p>I love hotels having eduroam wifi!</p>",
        "id": 137170354,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1541364080
    },
    {
        "content": "<p>and the German touch: the room has the standard water boiler <em>and</em> a beer bottle opener</p>",
        "id": 137170412,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1541364154
    },
    {
        "content": "<p>Hm, there is no eduroam in my room :-( I need to write down passwords, like a caveman</p>",
        "id": 137171642,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541366320
    },
    {
        "content": "<p>So it looks like everybody staying in the hotel will meet at 8:30 for breakfast and then we visit Johann</p>",
        "id": 137171654,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541366365
    },
    {
        "content": "<blockquote>\n<p>Can you just explain (to a pure mathematician) what biology has to do with symmetric monoidal categories? I last went to a biology class about 30 years ago by the way.</p>\n</blockquote>\n<p>It's not really biology as much as it is microfluidics, where you can have some sample inlets or outlets (objects), together with ways to connect inlets with outlets, such as plain channels, mixers, etc., which do different things to the sample flowing through them (morphisms). Then you can \"connect\" the outlets of one microfluidic device to the inlets of of another (composition), or put two microfluidic devices next to each other (tensor product). The braiding is exchanging the order of two in- or outlets, which should satisfy the laws for a symmetric monoidal category. As you can flip the directionality of many microfluidic elements in a way that makes sense, you also get a dagger structure for many interesting subsets of what is possible with microfluidics.<br>\nThen you have a symmetric monoidal (dagger-) category which gives the syntax of the subset of microfluidics you're interested in and you can give semantics as a functor from that monoidal category to a more meaningful category, say a category of dynamical systems.<br>\nAlso, there is this whole thing with interpreting biological processes as reaction networks, where you have some proteins and metabolites (objects), with reactions (morphisms) between them, where the outputs of some reactions may be the inputs of another (composition) and multiple reactions may happen in parallel (tensor product), and then you have some functors to give semantics to those reaction networks.</p>",
        "id": 137172450,
        "sender_full_name": "Michael Jendrusch",
        "timestamp": 1541367946
    },
    {
        "content": "<p>To add more to <span class=\"user-mention\" data-user-id=\"128547\">@Michael Jendrusch</span> 's comment, the work of John Baez and collaborators recently has been heavily focused on treating 'network theory' (in a very broad sense) using categories: <a href=\"http://math.ucr.edu/home/baez/networks/\" target=\"_blank\" title=\"http://math.ucr.edu/home/baez/networks/\">http://math.ucr.edu/home/baez/networks/</a></p>",
        "id": 137173148,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1541369320
    },
    {
        "content": "<p>I finally arrived to the hotel</p>",
        "id": 137174247,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541371568
    },
    {
        "content": "<p>On the subject of the surprising appearances of category theory in \"applied\" fields; Fong and Spivak's new text \"Seven sketches in compositionality\" is quite amazing.</p>",
        "id": 137175940,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1541375207
    },
    {
        "content": "<p>As an example, one of its chapters is called \"Electric circuits: Hypergraph categories and operads\"</p>",
        "id": 137175944,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1541375221
    },
    {
        "content": "<p>Hallo, I'm at the breakfast</p>",
        "id": 145304801,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1541402420
    },
    {
        "content": "<p>ich bin auch fertig</p>",
        "id": 145304826,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541402483
    },
    {
        "content": "<p>I looked up use of \"fertig\" and it means \"ready\" and also \"exhausted\"... seems confusing</p>",
        "id": 146042746,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541402803
    },
    {
        "content": "<p>Lol, in this context it definitely means \"I'm ready (to go)\"</p>",
        "id": 146043176,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541403684
    },
    {
        "content": "<p>Johannes is now lecturing about how to review PR's (and potentially accept a few of them).</p>",
        "id": 146044961,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541406836
    },
    {
        "content": "<p>vids plz</p>",
        "id": 146045271,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541407347
    },
    {
        "content": "<p>do you have skype?</p>",
        "id": 146045275,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541407372
    },
    {
        "content": "<p>I'm skyping Kevin Buzzard now</p>",
        "id": 146045278,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541407379
    },
    {
        "content": "<p>but I can also accommodate you</p>",
        "id": 146045286,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541407394
    },
    {
        "content": "<p>ok, I am @di..gama, but if you have vid setup you should record instead so others can see it</p>",
        "id": 146783499,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541408141
    },
    {
        "content": "<p>We are currently looking at <a href=\"https://t.co/K6iX1lo6z5\" target=\"_blank\" title=\"https://t.co/K6iX1lo6z5\">https://t.co/K6iX1lo6z5</a></p>",
        "id": 146784041,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1541409056
    },
    {
        "content": "<p>:)</p>",
        "id": 146784096,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1541409123
    },
    {
        "content": "<p>lol, isn't this his presentation for lean together? spoilers...</p>",
        "id": 146784109,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541409177
    },
    {
        "content": "<p>Eh, that one should probably have a slightly different focus (externals instead of internals) if I don't get lazy...</p>",
        "id": 146784383,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1541409608
    },
    {
        "content": "<p>Just read the slides, <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span>, looks fantastic! :-)</p>",
        "id": 146787684,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1541414244
    },
    {
        "content": "<p>I'M EXCITED<br>\nI think time will measure my excitement but I'm still excited!</p>",
        "id": 146791987,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1541420932
    },
    {
        "content": "<p>I hereby officially declare the first day of this workshop to be a Great Success™.</p>",
        "id": 146806196,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541434732
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/cvOGDwiOVIzOfrVWynms9QjS/2018-11-05-1.png\" target=\"_blank\" title=\"2018-11-05-1.png\">2018-11-05-1.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/cvOGDwiOVIzOfrVWynms9QjS/2018-11-05-1.png\" target=\"_blank\" title=\"2018-11-05-1.png\"><img src=\"/user_uploads/3121/cvOGDwiOVIzOfrVWynms9QjS/2018-11-05-1.png\"></a></div>",
        "id": 146807988,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541436436
    },
    {
        "content": "<p>one merge every 3 minutes!</p>",
        "id": 146807994,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541436441
    },
    {
        "content": "<p>Just look at this: <a href=\"https://github.com/leanprover/mathlib/pulse/daily\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pulse/daily\">https://github.com/leanprover/mathlib/pulse/daily</a></p>",
        "id": 146809614,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541437999
    },
    {
        "content": "<p><span class=\"emoji emoji-1f514\" title=\"bell\">:bell:</span>  Don't forget to compile the latest mathlib tonight (-; Otherwise you'll have to be waiting the first hour tomorrow morning... your computers are all in for some serious learning of new stuff. <span class=\"emoji emoji-1f606\" title=\"lol\">:lol:</span> <span class=\"emoji emoji-1f393\" title=\"graduate\">:graduate:</span></p>",
        "id": 146813208,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541441894
    },
    {
        "content": "<p>plus one of the 15 or so PRs that was merged had a bug, and now mathlib is broken</p>",
        "id": 146813625,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541442348
    },
    {
        "content": "<p>*was broken</p>",
        "id": 146813918,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541442628
    },
    {
        "content": "<p>so do we have some goals to achieve?</p>",
        "id": 146820024,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541448085
    },
    {
        "content": "<p>[ ] Hilbert basis<br>\n[ ] Sheaves<br>\n[ ] Manifolds<br>\n[ ] Limits/colimts<br>\n[ ] Adjoint functors</p>",
        "id": 146820247,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541448274
    },
    {
        "content": "<p>Galois theory, algebraic closure, perfectoid spaces, existence of non-cyclic groups</p>",
        "id": 146822226,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541450358
    },
    {
        "content": "<p>even my trick of making a copy and ensuring little changes still can't make the compilation faster...</p>",
        "id": 146832289,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541460233
    },
    {
        "content": "<p>I'm going to sleep now, but I've got something for you guys to puzzle over tomorrow: <a href=\"https://github.com/leanprover/mathlib/compare/master...leanprover-community:pfilter\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/compare/master...leanprover-community:pfilter\">leanprover-community/pfilter</a> is beginning work on generalizing filters to preorders. <span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span> if you have any ideas for how all your lifting and monad stuff works when separating the two levels of sets out, I'd like to hear it. I have not figured out what the new version of <code>join</code> has to do with the old one (which has a different type - <code>filter (filter A)</code> becomes <code>pfilter (set (pfilter A))</code> which is not obviously related to <code>pfilter (pfilter A)</code>, which is something new).</p>",
        "id": 146849206,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541487685
    },
    {
        "content": "<p>Good morning and sleep tight!</p>",
        "id": 146850005,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541489227
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> veele dank voor de workshop, and thanks to everyone for teaching me German and French :p</p>",
        "id": 146926124,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541578992
    },
    {
        "content": "<p>(why is nobody online?) <span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span> asked me if a(b+c) = ab+ac for ideals, and I said no at the time, but I have since realized that it is actually true, and I have pushed my proof. In other news, German trains are nice to work in!</p>",
        "id": 146928852,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541583110
    },
    {
        "content": "<p>Yes, this is true. The thing that's basically never true for ideals is additive cancellation: I+J=I+K is a long way from J=K, e.g. (n)+(m)=(gcd(m,n)) in int, so (2)+(3)=(2)+(5)=(1).</p>",
        "id": 146928980,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541583259
    },
    {
        "content": "<p>you guys need to be more productive!</p>",
        "id": 146929010,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541583316
    },
    {
        "content": "<p>Multiplicative cancellation is sometimes true, but only in the 1-dimensional case, e.g. integers of a number field or Dedekind domains more generally (e.g. PID's) or when the underlying ideal you're trying to cancel is locally free of rank 1 (e.g. principal when R is an integral domain)</p>",
        "id": 146929015,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541583329
    },
    {
        "content": "<p>feel free to comment on the PR</p>",
        "id": 146929096,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541583393
    },
    {
        "content": "<p>us guys have got to prepare lectures, go to committee meetings, organise meetings with MSc and PhD students, run seminars, cook for our family etc etc. You have no idea how much work is involved in being a grown-up</p>",
        "id": 146929097,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541583394
    },
    {
        "content": "<p>I mean, the people in the workshop</p>",
        "id": 146929107,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541583413
    },
    {
        "content": "<p>I'm the only one leaving at 10, they're all staying there for a while longer!</p>",
        "id": 146929120,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541583427
    },
    {
        "content": "<p>They might have to do the same :-) Every night in Paris I had to leave with Patrick and spend the evening doing admin (organising interviews for a PhD studentship and dealing with emails etc)</p>",
        "id": 146929144,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1541583475
    },
    {
        "content": "<p>well they're already there, as they have already commented on my PR</p>",
        "id": 146929224,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541583557
    },
    {
        "content": "<p>see you guys in the next train (if there is wifi!)</p>",
        "id": 146929645,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541584089
    },
    {
        "content": "<p>We've been watching <span class=\"user-mention\" data-user-id=\"110193\">@Cyril Cohen</span> give a demo of SSreflect. It looks really powerful. And the good news: in principal we can have this in Lean (4?) as well.</p>",
        "id": 146931023,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541586144
    },
    {
        "content": "<p>Oh, I would have liked to have seen that.</p>",
        "id": 146931075,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1541586241
    },
    {
        "content": "<p>you should have come! :p</p>",
        "id": 146932483,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541588370
    },
    {
        "content": "<p>Dear all, thank you so much for this interesting visit. I am very much looking forward to the next lean meeting!</p>",
        "id": 146934578,
        "sender_full_name": "Tobias Grosser",
        "timestamp": 1541591337
    },
    {
        "content": "<p>Thank you all very much for your warm welcone. And also for teaching me how to use lean. I am really interested in continuing my experiments and also coming to the next lean meeting.</p>",
        "id": 146934884,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1541591805
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110193\">@Cyril Cohen</span> w.r.t to <code>param</code>: The constructor types provided to <code>add_inductive</code> refer to the type using already the constant to be defined. So the name map would be just: <code>bool</code> -&gt; <code>const `bool uparams</code></p>",
        "id": 146936138,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541593723
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span> yes I figured that out and completed the translation.<br>\nNow, is there a way to assign the result of a <code>run_cmd</code> to a variable (in order to propagate the translation table around?)</p>",
        "id": 146936372,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1541594036
    },
    {
        "content": "<p>(and I pushed the result if you want to have a look)</p>",
        "id": 146936424,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1541594062
    },
    {
        "content": "<p>You can use attributes</p>",
        "id": 146936430,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541594070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span> can you point me towards a tutorial, or a (documented) example?</p>",
        "id": 146936459,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1541594116
    },
    {
        "content": "<p>so attributes are named databases which associates a list of theorems (and optional data) to each attribute.</p>",
        "id": 146936460,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541594116
    },
    {
        "content": "<p>first, they are defined in <code>lean/library/init/meta/attribute.lean</code></p>",
        "id": 146936470,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541594139
    },
    {
        "content": "<p>you set up a new attribute using:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">user_attribute</span><span class=\"o\">]</span>\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">mono_rules</span> <span class=\"o\">:</span> <span class=\"n\">user_attribute</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">mono_rules</span><span class=\"o\">,</span>\n  <span class=\"n\">descr</span> <span class=\"o\">:=</span> <span class=\"s2\">&quot;lemmas usable to prove monotonicity&quot;</span> <span class=\"o\">}</span>\n<span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"n\">mono_rules</span><span class=\"o\">]</span> <span class=\"n\">add_le_add</span> <span class=\"n\">mul_le_mul_of_nonneg_right</span>\n</pre></div>",
        "id": 146936567,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541594256
    },
    {
        "content": "<p>I guess you want to associated the paramtricity relation to the type using the attribute?!</p>",
        "id": 146936618,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541594310
    },
    {
        "content": "<p>I think it's even better to use cached attributes here, if I understand the situation right. I'll try to set it up in a few min.</p>",
        "id": 146936826,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1541594581
    },
    {
        "content": "<p>I want to replace a \"current\" <code>consts</code> map after each call to <code>param2.inductive</code></p>",
        "id": 146937713,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1541595571
    },
    {
        "content": "<p>Do you want <code>param2.inductive</code> to take <code>consts</code> as an argument, or generate the current map automatically?</p>",
        "id": 146938063,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1541595959
    },
    {
        "content": "<p>Wait, this shouldn't matter. You won't be calling <code>param2.inductive</code> manually, right?</p>",
        "id": 146938152,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1541596043
    },
    {
        "content": "<p>Just pushed something, is this roughly what you need? You'll probably want to change it a bit.</p>",
        "id": 146938536,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1541596391
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> I'll take a look and tell you.</p>",
        "id": 146938728,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1541596597
    },
    {
        "content": "<p>I just need to go through security first.</p>",
        "id": 146938754,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1541596642
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> I think I understand. Should I replace the argument <code>consts</code> of all my functions by <code>parametricity_attr.get_cache</code>?</p>",
        "id": 146940510,
        "sender_full_name": "Cyril Cohen",
        "timestamp": 1541598507
    },
    {
        "content": "<p>Yep, but it might take a little refactoring, since <code>parametricity_attr</code> depends on some of those functions.</p>",
        "id": 146940552,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1541598579
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110193\">@Cyril Cohen</span> Welcome to the dark side. We definitely want to steal all your mathcomp work on analysis, and it will be great to have your help.</p>",
        "id": 146957143,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1541602025
    },
    {
        "content": "<p>(We can also steal ideas from his work on homology: <a href=\"https://perso.crans.org/cohen/papers/fpmods.pdf\" target=\"_blank\" title=\"https://perso.crans.org/cohen/papers/fpmods.pdf\">https://perso.crans.org/cohen/papers/fpmods.pdf</a>, <a href=\"https://perso.crans.org/cohen/papers/slides_fpmodules_marelle.pdf\" target=\"_blank\" title=\"https://perso.crans.org/cohen/papers/slides_fpmodules_marelle.pdf\">https://perso.crans.org/cohen/papers/slides_fpmodules_marelle.pdf</a>.)</p>",
        "id": 146963681,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1541602673
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> Let me add to the expressions of thanks for hosting this! It was both fun and productive, a good combo.</p>",
        "id": 146964727,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1541603584
    },
    {
        "content": "<p>Can I deduce from this that you caught your train and that it has wifi?</p>",
        "id": 146964833,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541603675
    },
    {
        "content": "<p>Yes !</p>",
        "id": 146964882,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1541603750
    },
    {
        "content": "<p>And thank you very much for hosting this!</p>",
        "id": 146964954,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1541603792
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span> we already started porting <a href=\"https://github.com/math-comp/analysis/blob/master/landau.v\" target=\"_blank\" title=\"https://github.com/math-comp/analysis/blob/master/landau.v\">https://github.com/math-comp/analysis/blob/master/landau.v</a></p>",
        "id": 146965308,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1541604113
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/nydTT3qUNjeleJcm99PjgZRn/LUG_Freiburg_insights.png\" target=\"_blank\" title=\"LUG_Freiburg_insights.png\">LUG_Freiburg_insights.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/nydTT3qUNjeleJcm99PjgZRn/LUG_Freiburg_insights.png\" target=\"_blank\" title=\"LUG_Freiburg_insights.png\"><img src=\"/user_uploads/3121/nydTT3qUNjeleJcm99PjgZRn/LUG_Freiburg_insights.png\"></a></div>",
        "id": 146967764,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541606198
    },
    {
        "content": "<p>That's GitHub's summary of our hackathon!</p>",
        "id": 146967780,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541606214
    },
    {
        "content": "<p><strong>LUG Freiburg 2018 — Report</strong><br>\nWe had a Lean User Group in the mathematical institute of Universität Freiburg on November 5–7, 2018.<br>\nParticipants: Cyril Cohen, Johan Commelin, Johannes Hölzl, Tobias Grosser, Micheal Jendrusch, Kenny Lau, Rob Lewis, Patrick Massot</p>\n<p>Johannes gave an update of the development status of Lean 4. Cyril gave a demo of SSreflect.<br>\nThere were 23 pull requests merged into mathlib (the main mathematical library of Lean) and 6 new pull requests were created. This resulted in 7594 lines added to mathlib and 3163 deletions, changing 100 files.<br>\nThe topics of these changes include the definition of the perfect closure of a field and the Stone–Cech compactification of a topological space. The Hilbert basis theorem was proved, after a major refactoring of the theory of modules. Others have worked on monoidal categories, sites and sheaves, little-o calculus, transport of structure and improvement of automation tactics. These projects are not finished yet, but should be merged into mathlib in the future.<br>\nThe participants agreed that the face-to-face collaboration will ease future digital collaboration and that the workshop gave a valuable boost to the development of formalized mathematics in Lean.</p>",
        "id": 147245873,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541616308
    },
    {
        "content": "<p>(If you have any feedback for this little report, please let me know.)</p>",
        "id": 147245887,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541616324
    },
    {
        "content": "<p>(My report was PowerPoint karaoke using Sebastian's slides he presented at the end of his MSR internship )</p>",
        "id": 147246125,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541616554
    },
    {
        "content": "<p>are the slides about Lean 4 online somewhere?</p>",
        "id": 147246580,
        "sender_full_name": "Simon Cruanes",
        "timestamp": 1541616894
    },
    {
        "content": "<p>yep: <a href=\"http://leanprover.github.io/presentations/20181012_MSR/\" target=\"_blank\" title=\"http://leanprover.github.io/presentations/20181012_MSR/\">http://leanprover.github.io/presentations/20181012_MSR/</a></p>",
        "id": 147246741,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541617015
    },
    {
        "content": "<p>there is also:<a href=\"http://leanprover.github.io/talks/LeanAtGalois.pdf\" target=\"_blank\" title=\"http://leanprover.github.io/talks/LeanAtGalois.pdf\">http://leanprover.github.io/talks/LeanAtGalois.pdf</a></p>",
        "id": 147246774,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1541617045
    },
    {
        "content": "<p>thank you! :)</p>",
        "id": 147247088,
        "sender_full_name": "Simon Cruanes",
        "timestamp": 1541617321
    },
    {
        "content": "<p>Thanks for the report Johan! Of course it must be emphasized that all those merged PR wouldn't haven't mergeable without first having be written before the meeting, and often by people not attending the meeting. And also I think Mario participated in the merge effort from Pittsburg. Nonetheless I agree this was a very successful meeting. Maybe it's worth pointing out to some of your readers that Cyril only installed Lean the day before the workshop, and is now writing both regular Lean and meta-programming. I think it's a huge success that this meeting was able to welcome such an expert Coq user to our Lean community.</p>",
        "id": 147255379,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1541624482
    },
    {
        "content": "<p>I'm not sure who the audience of the report is, but I'd put the sentence about statistics at the end.</p>",
        "id": 147256040,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1541625134
    },
    {
        "content": "<p>I think it's worth mentioning the (existence of) \"remote\" participants, too.  It's fun to wake up in the morning and see progress on favourite things having happened overnight on the other side of the world. :-)</p>",
        "id": 147256199,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1541625284
    },
    {
        "content": "<p>And I want to beg that future Lean meetings stream more. :-)</p>",
        "id": 147256227,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1541625302
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> you should have come! :P</p>",
        "id": 147260511,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541628828
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span> du hast noch ein ander PR :D</p>",
        "id": 147271479,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541642785
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  this means: you have yet another PR)</p>",
        "id": 147271660,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541643094
    },
    {
        "content": "<blockquote>\n<p>(<span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  this means: you have yet another PR)</p>\n</blockquote>\n<p>why the english?</p>",
        "id": 147276446,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541650570
    },
    {
        "content": "<p>he has to translate because he doesn't realize that everyone here uses the same language: lean</p>",
        "id": 147276470,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541650668
    },
    {
        "content": "<p>Well, he should have translated to Portuguese right?</p>",
        "id": 147276514,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541650699
    },
    {
        "content": "<p>don't encourage him</p>",
        "id": 147276517,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541650729
    },
    {
        "content": "<p>Ok, I've updated the report after your suggestions. I will send it to my supervisors.</p>",
        "id": 147283388,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1541663158
    },
    {
        "content": "<p>merged!</p>",
        "id": 147285100,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1541665833
    }
]