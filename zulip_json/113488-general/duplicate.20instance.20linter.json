[
    {
        "content": "<p>Do we need a duplicate instance linter or is the linter sufficiently slow already?</p>",
        "id": 203796812,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594699387
    },
    {
        "content": "<p>Because this happened in <a href=\"https://github.com/leanprover-community/mathlib/blob/0410946159f38b48600ed3f912eb283675ae7cbe/src/data/polynomial.lean\">data.polynomial</a>:</p>\n<div class=\"codehilite\"><pre><span></span><code> <span class=\"kn\">instance</span> <span class=\"n\">algebra_of_algebra</span> <span class=\"o\">:</span> <span class=\"n\">algebra</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">add_monoid_algebra</span><span class=\"bp\">.</span><span class=\"n\">algebra</span>\n\n<span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"o\">]</span>\n\n <span class=\"kn\">instance</span> <span class=\"n\">algebra&#39;</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">R</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n   <span class=\"n\">algebra</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n <span class=\"o\">{</span> <span class=\"n\">smul</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">r</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">algebra_map</span> <span class=\"n\">R</span> <span class=\"n\">A</span> <span class=\"n\">r</span> <span class=\"err\">•</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n   <span class=\"n\">commutes&#39;</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">c</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n     <span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">R</span> <span class=\"n\">A</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">coeff</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">*</span> <span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">R</span> <span class=\"n\">A</span> <span class=\"n\">c</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">coeff</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n     <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">coeff_C_mul</span><span class=\"o\">,</span> <span class=\"n\">coeff_mul_C</span><span class=\"o\">,</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">commutes</span><span class=\"o\">],</span>\n   <span class=\"n\">smul_def&#39;</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">c</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">C_mul&#39;</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n   <span class=\"bp\">..</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">R</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 203796820,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594699414
    },
    {
        "content": "<p>Good catch! I think we can run another linter. When you lint 1 file, it takes a noticeable amount of seconds, but it's not too bad. When you lint the entire project, in CI, this is something you can parallelize, so adding an extra linter doesn't hurt.</p>",
        "id": 203798017,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594701312
    }
]