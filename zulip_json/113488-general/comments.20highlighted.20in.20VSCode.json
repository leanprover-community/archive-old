[
    {
        "content": "<p>I don't know how long this has been happening, but I don't think it's been forever (or maybe it has and I just blindly looked past it). I've been seeing messages in VSCode bleed into later lines if the noisy commands are follwed by comments.<br>\n<a href=\"/user_uploads/3121/lfVRJRPqqdYIzWddFygPxEMk/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/lfVRJRPqqdYIzWddFygPxEMk/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/lfVRJRPqqdYIzWddFygPxEMk/image.png\"></a></div><p>This is on Ubuntu, VSCode extension 0.16.53, but I also see it on GitPod. Is this new(ish) or a figment of my imagination? Is there an easy fix?</p>",
        "id": 289321656,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1657631846
    },
    {
        "content": "<p>I also only noticed this recently</p>",
        "id": 289322291,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1657632146
    },
    {
        "content": "<p>I am 200% sure this issue is on the Lean side.  What happens is that every token consumes the whitespace after it as well (and comments are white space).  Check and print are the only commands that produce a message with an end position, so you won't see this issue anywhere else.</p>",
        "id": 289322374,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1657632198
    },
    {
        "content": "<p>I think I recently taught the extension to respect end positions</p>",
        "id": 289322549,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657632284
    },
    {
        "content": "<p>I hadn't considered they might be useless</p>",
        "id": 289322584,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657632300
    },
    {
        "content": "<p>Probably the best fix is for lean to strip \"whitespace\" tokens when giving end positions?</p>",
        "id": 289322701,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657632361
    },
    {
        "content": "<p>The quick hack is to stop sending them at all if they're worse than the heuristic end position</p>",
        "id": 289322887,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657632432
    },
    {
        "content": "<p>Easy and done that way in <span aria-label=\"four leaf clover\" class=\"emoji emoji-1f340\" role=\"img\" title=\"four leaf clover\">:four_leaf_clover:</span>, but not sure if worth the effort in <span aria-label=\"three\" class=\"emoji emoji-0033-20e3\" role=\"img\" title=\"three\">:three:</span>.</p>",
        "id": 289322913,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1657632442
    },
    {
        "content": "<p>I confirm this rather new and very annoying.</p>",
        "id": 289323174,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1657632544
    },
    {
        "content": "<p>Was there a recent change that caused this?</p>",
        "id": 289323213,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1657632571
    },
    {
        "content": "<p>It came in with the Unicode codepoint counting change to vscode-lean I made (<a href=\"https://github.com/leanprover/vscode-lean/pull/301\">leanprover/vscode-lean#301</a>)</p>",
        "id": 289323269,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657632600
    },
    {
        "content": "<p>There was no comment warning against listening to the <code>end_pos</code> field from the server, so I figured I'd just use the field whenever it was present</p>",
        "id": 289323399,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657632658
    },
    {
        "content": "<p>The relevant diff line is<br>\n<a href=\"https://github.com/leanprover/vscode-lean/pull/301/files#diff-da8cc70370d67b4c482d5cf755fb7f45697844107dd73ccf7f5b54162703f63cL68-R75\">https://github.com/leanprover/vscode-lean/pull/301/files#diff-da8cc70370d67b4c482d5cf755fb7f45697844107dd73ccf7f5b54162703f63cL68-R75</a></p>",
        "id": 289323676,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657632782
    },
    {
        "content": "<p>I also noticed this a couple of days ago, while preparing lectures of LFTCM. A workaround is to put all the #check commands in <code>section ... end</code> blocks.</p>",
        "id": 289344077,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1657640653
    },
    {
        "content": "<p>Or <code>.</code> after the <code>#check</code> command, but this can be a little confusing for beginners.</p>",
        "id": 289346671,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1657641613
    },
    {
        "content": "<p>If we have a consensus, it's fine to revert to positions instead of ranges.  We could also truncate ranges to the first line (like <span aria-label=\"four leaf clover\" class=\"emoji emoji-1f340\" role=\"img\" title=\"four leaf clover\">:four_leaf_clover:</span>).  PRs welcome!</p>",
        "id": 289359828,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1657647405
    },
    {
        "content": "<p>I was also thinking truncating to the first line was a good compromise too</p>",
        "id": 289386724,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657660617
    },
    {
        "content": "<p>Does anything actually use the end positions?</p>",
        "id": 289388331,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657661480
    },
    {
        "content": "<p>Claims to have been added for some \"message box\" feature: <a href=\"https://github.com/leanprover-community/lean/commit/bf0d78588803657389891aa756f377122d70f8a7\">https://github.com/leanprover-community/lean/commit/bf0d78588803657389891aa756f377122d70f8a7</a></p>",
        "id": 289388796,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657661721
    },
    {
        "content": "<p>The line that populates it unhelpfully for <code>check</code> is <a href=\"https://github.com/leanprover-community/lean/blob/9dc6b1ea9d64cb163b0a0c371622887d32e6792f/src/frontends/lean/builtin_cmds.cpp#L210\">https://github.com/leanprover-community/lean/blob/9dc6b1ea9d64cb163b0a0c371622887d32e6792f/src/frontends/lean/builtin_cmds.cpp#L210</a></p>",
        "id": 289389063,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657661871
    },
    {
        "content": "<p>The <code>--ast</code> output does make use of end positions, although they might not be computed/extracted in all the same places as the server messages</p>",
        "id": 289414006,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1657685594
    },
    {
        "content": "<p>We already have to handle proper end pos calculation for tactic spans after <code>by</code> so it's likely there is a simple fix</p>",
        "id": 289414144,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1657685811
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/pull/744\">lean#744</a></p>",
        "id": 289414912,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1657686872
    },
    {
        "content": "<p>Could we have a Lean release including that really soon? This issue is really super painful for Lftcm2022 because <code>#check</code> is used a lot in tutorials.</p>",
        "id": 289457677,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1657718325
    },
    {
        "content": "<p>it should be a painless bump, too</p>",
        "id": 289460062,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1657719398
    },
    {
        "content": "<p>have we confirmed that this fix actually fixes the issue?</p>",
        "id": 289460078,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1657719406
    },
    {
        "content": "<p>Yes, I tested it</p>",
        "id": 289479362,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657727412
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span></p>",
        "id": 289479412,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1657727429
    },
    {
        "content": "<p>I was hoping that <a href=\"https://github.com/leanprover-community/lean/pull/743\">https://github.com/leanprover-community/lean/pull/743</a> would make it into the same lean release to fix the problem in <a href=\"#narrow/stream/113488-general/topic/json.2Eparse.20.22-1.22.20.3D.20some.20.28json.2Eof_int.204294967295.29\">this thread</a> (<code>json.parse \"-1\" = some (json.of_int 4294967295)</code>)</p>",
        "id": 289479517,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657727465
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/PkwkFf9GgHAY_Dd8PWi5K1fW/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/PkwkFf9GgHAY_Dd8PWi5K1fW/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/PkwkFf9GgHAY_Dd8PWi5K1fW/image.png\"></a></div>",
        "id": 289479577,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1657727491
    },
    {
        "content": "<p>putting a full stop at the end of each <code>#check/#print</code> is a nice quick workaround</p>",
        "id": 289479612,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1657727505
    },
    {
        "content": "<p>But I guess that's not necessary for LFTCM</p>",
        "id": 289479624,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657727508
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113488-general/topic/comments.20highlighted.20in.20VSCode/near/289460062\">said</a>:</p>\n<blockquote>\n<p>it should be a painless bump, too</p>\n</blockquote>\n<p>Indeed, all that changed is the <code>end_pos</code> fix we need here, a bug in meta code for empty structures, and floats/integer conversions being better behaved</p>",
        "id": 289480075,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657727666
    },
    {
        "content": "<p>Can you make the PR? I'm currently on vacation.</p>",
        "id": 289480954,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1657728017
    },
    {
        "content": "<p>We just copy <a href=\"https://github.com/leanprover-community/lean/pull/737\">https://github.com/leanprover-community/lean/pull/737</a>, right?</p>",
        "id": 289481248,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657728124
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/pull/745\">https://github.com/leanprover-community/lean/pull/745</a>, but we should wait for the previous build to finish first</p>",
        "id": 289483107,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657728840
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/15325\">#15325</a></p>",
        "id": 289528316,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657750618
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/15325\">#15325</a> is now passing CI; As <span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> said, the bump was trivial</p>",
        "id": 289562488,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657786102
    }
]