[
    {
        "content": "<p><a href=\"#narrow/stream/113489-new-members/topic/Representation.20Theory/near/190645290\" title=\"#narrow/stream/113489-new-members/topic/Representation.20Theory/near/190645290\">this conversation</a> made me realise that I can't search mathlib for all occurrences of <code>linear_equiv.refl</code> (which is the theorem that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>≅</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M\\cong M</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≅</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">M</span></span></span></span> as an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span>-module) in order to see whether <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span> should be an explicit or an implicit variable. Is there any way of doing this? I conjecture that there might be some <code>@</code>ed instances which could be fixed by making <code>R</code> explicit but I don't know how to check.</p>\n<p>Whilst poking around and failing to do this, I did notice that <code>is_noetherian_of_linear_equiv</code> is used four times in mathlib, and three of them have <code>@</code>s and a whole ton of <code>_</code>'s :-) This is an indication that there's something wrong here, right? There are 40 occurrences of <code>_ _ _ _ _ _ _</code> in mathlib :-)</p>",
        "id": 190647583,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1584279702
    },
    {
        "content": "<p>Does <code>git grep</code> help?</p>",
        "id": 190665582,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1584304320
    },
    {
        "content": "<p>git grep finds all the <code>_ _ _ _ ...</code> stuff but I think that trying to figure out whether a <code>refl</code> in the library is a <code>linear_equiv.refl</code> is too much for a regular expression.</p>",
        "id": 190666045,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1584304942
    },
    {
        "content": "<p>Make it <code>protected</code>, recompile. I understand that this is a workaround.</p>",
        "id": 190666126,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1584305047
    },
    {
        "content": "<p>A proper approach would be to make a tool that takes a compiled directory tree, and creates a computer readable \"dependency graph\".</p>",
        "id": 190666216,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1584305247
    },
    {
        "content": "<p>Doesn't something like this already exist? I thought Patrick had some python script for making graphs that used this info</p>",
        "id": 190666881,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1584306239
    },
    {
        "content": "<p>The advantage of the proper approach is that I wouldn't then have to spend 20 minutes recompiling half of mathlib :-) Reminded me of the old days...</p>",
        "id": 191370459,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1584833334
    }
]