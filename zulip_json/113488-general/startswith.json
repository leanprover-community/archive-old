[
    {
        "content": "<p>Do we have something like <code>string.startswith : string -&gt; string -&gt; bool</code> somewhere?</p>",
        "id": 154412396,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1546612494
    },
    {
        "content": "<p>There are <code>&lt;:+</code> and <code>&lt;+:</code> for comparing lists, you could use that</p>",
        "id": 154412486,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1546612589
    },
    {
        "content": "<p>Omg. Did you get these hieroglyphs from Haskell or from Scala?</p>",
        "id": 154412836,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1546613028
    },
    {
        "content": "<p>I currently use</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">string</span><span class=\"bp\">.</span><span class=\"n\">startswith</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">s&#39;</span> <span class=\"o\">:</span> <span class=\"n\">string</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">s&#39;</span><span class=\"bp\">.</span><span class=\"n\">to_list</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">is_prefix_of</span> <span class=\"n\">s</span><span class=\"bp\">.</span><span class=\"n\">to_list</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">s&#39;</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"n\">string</span><span class=\"bp\">.</span><span class=\"n\">startswith</span> <span class=\"n\">s</span> <span class=\"n\">s&#39;</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">unfold</span> <span class=\"n\">string</span><span class=\"bp\">.</span><span class=\"n\">startswith</span> <span class=\"bp\">;</span> <span class=\"n\">apply_instance</span>\n</pre></div>",
        "id": 154412845,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1546613039
    },
    {
        "content": "<p>I guess one of your hieroglyphs stands for <code>list.is_prefix_of</code></p>",
        "id": 154412905,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1546613076
    },
    {
        "content": "<p>But my hope was really that all this should be there already</p>",
        "id": 154412913,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1546613089
    },
    {
        "content": "<p>the hieroglyphs were a terrible idea that I now regret</p>",
        "id": 154412954,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1546613151
    },
    {
        "content": "<p>I agree that we should have this function already defined. In particular, you can make a more efficient implementation by working with string iterators instead of lists</p>",
        "id": 154413617,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1546613801
    },
    {
        "content": "<p>I should load up the docs for strings in haskell or java and copy everything I see</p>",
        "id": 154413665,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1546613841
    },
    {
        "content": "<p>I vote for doing that as soon as all topology and commutative algebra PR will be merged!</p>",
        "id": 154413755,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1546613901
    },
    {
        "content": "<p>I'm working on <a href=\"https://github.com/leanprover/mathlib/issues/464\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/issues/464\">#464</a>, making good progress</p>",
        "id": 154413832,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1546613985
    },
    {
        "content": "<p>what commutative algebra PRs?</p>",
        "id": 154413893,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1546614007
    },
    {
        "content": "<p>I'm joking, keep going on analysis. You'll have many nights in Amsterdam for algebra</p>",
        "id": 154413934,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1546614062
    },
    {
        "content": "<blockquote>\n<p>I'm working on <a href=\"https://github.com/leanprover/mathlib/issues/464\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/issues/464\">#464</a>, making good progress</p>\n</blockquote>\n<p>Btw, I updated the PR two days ago, but if you started working on the previous version you can of course disregard the modifications I made.</p>",
        "id": 154431401,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1546630738
    },
    {
        "content": "<p>yeah, I noticed and have already incorporated your changes</p>",
        "id": 154431693,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1546631020
    }
]