[
    {
        "content": "<p>When should I use <code>@[reducible] def</code> and when to just use <code>def</code>?</p>",
        "id": 124484786,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522577340
    },
    {
        "content": "<p><code>ge</code> is tagged <code>reducible</code>, because I don't want to double the amount of theorems I have about inequalities</p>",
        "id": 124493291,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522598618
    },
    {
        "content": "<p>I just want <code>a ge b</code> to unfold to <code>b le a</code> as soon as possible</p>",
        "id": 124493292,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522598633
    },
    {
        "content": "<p>so whenever the elaborator or whatever runs into <code>ge</code> it should just think \"that's notation for <code>le</code> and I will just unfold it right here and now\"</p>",
        "id": 124493333,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522598670
    },
    {
        "content": "<p>\"because then stuff like <code>rw</code> will work better, I will be able to rw theorems about <code>le</code> in terms involving <code>ge</code>\"</p>",
        "id": 124493341,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522598712
    },
    {
        "content": "<p>Which doesn't work because <code>rw</code> and <code>simp</code> match the term head literally</p>",
        "id": 124493393,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1522598847
    },
    {
        "content": "<p>What if you use <code>abbreviation</code> instead of <code>@[reducible]</code>?</p>",
        "id": 124493485,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1522599008
    },
    {
        "content": "<p>oh yes I remember this being a problem with rw!</p>",
        "id": 124493488,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522599051
    },
    {
        "content": "<p>There was maybe even some issue about this.</p>",
        "id": 124493494,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522599087
    },
    {
        "content": "<blockquote>\n<p>What if you use <code>abbreviation</code> instead of <code>@[reducible]</code>?</p>\n</blockquote>\n<p><code>abbreviation</code> is <code>@[reducible]</code> + a kernel reducibility annotation, which you can most likely ignore. So use <code>abbreviation</code> if you like it more than <code>@[reducible] def</code>.</p>",
        "id": 124493784,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1522599766
    },
    {
        "content": "<p>what will happen if I just make everything reducible?</p>",
        "id": 124493830,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522599880
    },
    {
        "content": "<p>when is <code>@[reducible]</code> not desired?</p>",
        "id": 124493831,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522599892
    },
    {
        "content": "<p>I think you have problems with readability after a while</p>",
        "id": 124494193,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522600710
    },
    {
        "content": "<p>You define an exciting new thing and mark it reducible</p>",
        "id": 124494195,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522600727
    },
    {
        "content": "<p>and want to prove basic lemmas about it</p>",
        "id": 124494196,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522600733
    },
    {
        "content": "<p>but the moment Lean does anything with it, it unfolds the definition</p>",
        "id": 124494199,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522600742
    },
    {
        "content": "<p>and it's then harder to use because you have to keep folding it up again when you want to apply the previous lemma</p>",
        "id": 124494205,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522600762
    },
    {
        "content": "<p>Should I make these reducible?</p>\n<div class=\"codehilite\"><pre><span></span>def orbit : set X :=\n{ y | ∃ g : G, g • x = y }\n\ndef stab : set G :=\n{ g | g • x = x }\n</pre></div>",
        "id": 124558714,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522727339
    },
    {
        "content": "<p>the answer is almost always no</p>",
        "id": 124558770,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522727421
    },
    {
        "content": "<p>instead, you should have a simp lemma that says <code>g \\in stab x &lt;-&gt; g \\bu x = x</code></p>",
        "id": 124558782,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522727497
    },
    {
        "content": "<p>aha</p>",
        "id": 124558783,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522727508
    }
]