[
    {
        "content": "<p>Sometimes you get hypotheses like <code>x \\in univ</code>...<br>\nI don't like it when they clutter up the goal state, but writing <code>clear hx</code> everytime is also not nice.<br>\nHow about, if <code>rintro</code> sees the pattern <code>__</code> (double underscore), then it just drops that hypothesis?</p>",
        "id": 207388141,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597830598
    },
    {
        "content": "<p>For <code>univ</code> you could use <code>⟨⟩</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">univ</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rintros</span> <span class=\"n\">x</span> <span class=\"bp\">⟨⟩</span><span class=\"o\">,</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">x : ℕ</span>\n<span class=\"cm\">⊢ x = x</span>\n<span class=\"cm\">-/</span>\n  <span class=\"n\">refl</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 207388408,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1597830780
    },
    {
        "content": "<p>I would also like if <code>rintro</code> has a way of just removing a hypothesis. Coq uses <code>_</code> for \"delete this hypothesis\" and <code>?</code> for our <code>_</code> (choose the name of the hypothesis automatically).</p>",
        "id": 207437480,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1597858244
    },
    {
        "content": "<p>How about <code>!</code>?</p>",
        "id": 207444626,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597862007
    },
    {
        "content": "<p>Or <code>\\</code>?</p>",
        "id": 207444808,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1597862091
    },
    {
        "content": "<p><code>\\</code> is the leader key so it's not nice to type</p>",
        "id": 207456892,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597868296
    },
    {
        "content": "<p>How about <code>-</code>?</p>",
        "id": 207456937,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597868336
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/3868\">#3868</a></p>",
        "id": 207466988,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597874738
    },
    {
        "content": "<p>Is it maybe too similar to <code>_</code>?</p>",
        "id": 207469639,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1597876723
    },
    {
        "content": "<p>I think we should handle the difference between <code>|</code> and <code>∣</code> before we have any ground to stand on as far as that is concerned</p>",
        "id": 207469773,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597876822
    },
    {
        "content": "<p>I think we can worry about both at once</p>",
        "id": 207474773,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1597880914
    },
    {
        "content": "<p>we can keep the straw poll open some more, but personally I think the answer to \"is it too similar\" is no. it's quite visibly different, particularly with bracketing operators around it. (Also the original <code>__</code> suggestion is even worse by this metric.) The only argument I can see re: similarity is if people forget which thing means what, but I really think that having a short way to do this is helpful. I know I will use this all the time (I remarked on it in the new members stream when it came up less than an hour after the PR).</p>",
        "id": 207476296,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597882183
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Thanks for the PR!</p>",
        "id": 207483976,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597891802
    }
]