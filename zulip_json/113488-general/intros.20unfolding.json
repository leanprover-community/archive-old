[
    {
        "content": "<p>Is this normal?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>  <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">→</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">intros</span><span class=\"o\">,</span> <span class=\"c1\">-- context has a: P, goal is now Q</span>\n<span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n\n<span class=\"n\">def</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">P</span> <span class=\"bp\">→</span> <span class=\"n\">Q</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>  <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">intros</span><span class=\"o\">,</span> <span class=\"c1\">-- nothing happen :-(</span>\n<span class=\"n\">intros</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"c1\">-- context is a : P, goal is now Q</span>\n<span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>It seems this prevents <code>finish</code> to work successfully in some cases without a preliminary <code>intros a b c d e f</code></p>",
        "id": 128723966,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1530115992
    },
    {
        "content": "<p>that's kind of interesting. If you make f reducible, or unfold it explicitly, maybe <code>intros</code> works.</p>",
        "id": 128724587,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1530116722
    },
    {
        "content": "<p>Of course explicit unfolding works. But reducible is not enough.</p>",
        "id": 128725099,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1530117337
    },
    {
        "content": "<p>you can also try <code>intros _</code></p>",
        "id": 128725144,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1530117363
    }
]