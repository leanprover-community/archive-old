[
    {
        "content": "<p>Currently, <code>complete_lattice.lean</code> and <code>conditionally_complete_lattice.lean</code> are two very different files with very different structures, even if they have a lot of analogous theorems. A few times already I've wanted to use some result on conditional complete lattices that has only been proved on complete lattices. I want to embark on a refactor to match these two APIs.</p>\n<p>Of course, the best way to assure that these APIs remain matched in the future would be to put them in a single file, perhaps even putting analogous statements together. This would also get rid of a few redundant statements like <code>Sup_singleton</code> and <code>cSup_singleton</code>, but it would yield a 2k line file, so I don't know if that's the best idea.</p>",
        "id": 285060331,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1654470030
    },
    {
        "content": "<p>I don't think merging the two files would be a good idea. If the files are separate, you can diff them. Try that out on <a href=\"https://tqft.net/mathlib/data/set/pointwise\">file#data/set/pointwise</a> and <a href=\"https://tqft.net/mathlib/data/finset/pointwise\">file#data/finset/pointwise</a>. This should be instructive.</p>",
        "id": 285063227,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1654474440
    },
    {
        "content": "<p>Well, if GitHub allows for this to be done easily, then there shouldn't be an issue with keeping the files separate</p>",
        "id": 285068153,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1654481380
    },
    {
        "content": "<p>I agree with this and I'd be happy to help with such a refactor. I think there are questions about the best way to do it though.</p>\n<p>As I have remarked elsewhere, defining conditionally complete lattices in terms of their relationship with the lattice completion means that we could simply have theorems on CCLs as special cases of theorems on CLs, which, to me, makes sense. This has the benefit of making it easy to define other partially-complete structures, some of which naturally occur in applications.</p>",
        "id": 285091338,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654508067
    },
    {
        "content": "<p>Even if we don't do this, however, I agree that a refactor would be useful.</p>",
        "id": 285091385,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654508115
    },
    {
        "content": "<p>I have some other ideas for things that this could/should include but I won't get fully into it - I'm just keen and happy to be involved.</p>",
        "id": 285091660,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654508325
    }
]