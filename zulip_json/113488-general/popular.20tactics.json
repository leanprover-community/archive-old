[
    {
        "content": "<p>A little while ago, there was some discussion about the large number of available tactics, and how to document them.  To inform that discussion, the following page might be interesting: <a href=\"http://bim.shef.ac.uk/lean/tactic_count.html\" target=\"_blank\" title=\"http://bim.shef.ac.uk/lean/tactic_count.html\">http://bim.shef.ac.uk/lean/tactic_count.html</a>.  It shows the number of times various tactics are used in mathlib, starting as follows:</p>\n<table>\n<thead>\n<tr>\n<th>Tactic</th>\n<th>Count</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>simp</td>\n<td>10254</td>\n</tr>\n<tr>\n<td>rw</td>\n<td>5355</td>\n</tr>\n<tr>\n<td>exact</td>\n<td>3936</td>\n</tr>\n<tr>\n<td>assume</td>\n<td>3284</td>\n</tr>\n<tr>\n<td>have</td>\n<td>3047</td>\n</tr>\n<tr>\n<td>from</td>\n<td>1851</td>\n</tr>\n<tr>\n<td>cases</td>\n<td>1727</td>\n</tr>\n<tr>\n<td>let</td>\n<td>1558</td>\n</tr>\n<tr>\n<td>apply</td>\n<td>1510</td>\n</tr>\n<tr>\n<td>refl</td>\n<td>1499</td>\n</tr>\n<tr>\n<td>refine</td>\n<td>1107</td>\n</tr>\n<tr>\n<td>ext</td>\n<td>1014</td>\n</tr>\n</tbody>\n</table>",
        "id": 159742726,
        "sender_full_name": "Neil Strickland",
        "timestamp": 1551469519
    },
    {
        "content": "<p>Cool! I'm actually somewhat surprised. <code>simp</code> is used almost twice as often as nr.2 and I would also have expected that <code>apply</code> would win from <code>cases</code>... interesting statistics!</p>",
        "id": 159743457,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551469975
    },
    {
        "content": "<p>Actually, I think that the regexp (which is just \"\\bsimp\\b\") is allowing <code>@[simp]</code> as an instance of <code>simp</code>, so the first entry is misleading.  That must inflate the count for <code>ext</code> as well, but probably not too many other things.</p>",
        "id": 159744680,
        "sender_full_name": "Neil Strickland",
        "timestamp": 1551470836
    },
    {
        "content": "<p>I think that mathlib style implies that any <code>simp</code> will have a space before it. If you're in the middle of a proof in tactic mode then I think you must be indented, and if you're in term mode then it would be <code>by simp</code> or whatever.</p>",
        "id": 159744797,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1551470928
    },
    {
        "content": "<p>meh, <code>{simp }</code> is probably OK too</p>",
        "id": 159744828,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1551470955
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>git grep &quot; simp &quot; | wc -l\n4774\n</pre></div>",
        "id": 159745148,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551471179
    },
    {
        "content": "<p>The count for \" simp\\b\" (with a space) is 5944.  I am using <code>grep -RIoh (regexp) src | wc -l</code>.</p>",
        "id": 159745165,
        "sender_full_name": "Neil Strickland",
        "timestamp": 1551471188
    },
    {
        "content": "<p>It's also important to note that regex's will not notice any auto_param tactics!</p>",
        "id": 159754742,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1551478981
    },
    {
        "content": "<p>I'm surprised by the <code>ext</code> count, and the <code>refl</code> count. Is this picking up lemmas with these words in the name?</p>",
        "id": 159754873,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1551479155
    }
]