[
    {
        "content": "<p>The lean3 repo indicates that only major bugfixes will be accepted.  Are there any official or semi-official repos for more minor fixes that could be merged, but aren't?  e.g. make a <code>monad_except</code> instance for <code>except</code>, add missing <code>decidable</code> instances for predicates?<br>\nI currently just add them as needed to my code, but figure they could be worth sharing.</p>",
        "id": 150883678,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1543961318
    },
    {
        "content": "<p>If you're talking about additions, not changes, then definitely. <a href=\"https://github.com/leanprover/mathlib/\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/\">https://github.com/leanprover/mathlib/</a></p>",
        "id": 150884566,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1543962231
    },
    {
        "content": "<p>Most of the discussions here assume you're using mathlib.</p>",
        "id": 150884621,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1543962260
    },
    {
        "content": "<p>Despite the name, it has more than just math.</p>",
        "id": 150884644,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1543962282
    },
    {
        "content": "<p>Ok, if I have enough I'll make a PR to mathlib.<br>\nI was thinking it may be useful to have a smaller set of additions that make the standard library more consistent, rather than mathlib which has a mix of useful additions and definitions to fill out the standard library.</p>",
        "id": 150886027,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1543963603
    },
    {
        "content": "<p>mathlib is admittedly a big monolith, but it's not clear what advantage splitting off parts of it would have, and it would certainly add a bunch of administrative overhead</p>",
        "id": 150886477,
        "sender_full_name": "Reid Barton",
        "timestamp": 1543964087
    },
    {
        "content": "<p>I'm not proposing to partition mathlib.</p>",
        "id": 150886862,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1543964478
    },
    {
        "content": "<p>I think what you are proposing usually falls under the header of \"forking lean\", which was a bad idea when lean was under active development. Now that lean3 is effectively EOL, it seems more reasonable but I think it is still a major decision that we wouldn't take lightly</p>",
        "id": 150890159,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1543967986
    },
    {
        "content": "<p>mathlib is currently right at the edge of what you can do to improve lean solely with an add on library and zero modifications to core lean</p>",
        "id": 150890244,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1543968056
    },
    {
        "content": "<p>I was looking for a more conservative staging library than mathlib for library improvements/generalizations that could be ported to Lean 4 once it is ready for library improvements.  With Lean 3 EOL, and Lean 4 in active development, there isn't a good way to share minor improvements to Lean 3 without distracting Lean 4 development.<br>\nThe Lean 4 improvements are essential for the project I'm working on, so I don't want to distract from that.  I've only used parts of mathlib, and it's great, but my impression is that's the bulk of it won't be integrated into the Lean standard library.</p>",
        "id": 150892454,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1543970449
    },
    {
        "content": "<p>I think that mathlib would be a good staging area for things you want to eventually move to lean 4, however it ends up looking</p>",
        "id": 150892782,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1543970771
    },
    {
        "content": "<p>right now we don't know enough of the basics to really plan a port in any more than very general terms</p>",
        "id": 150892805,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1543970818
    },
    {
        "content": "<p>but a lot of mathlib is tactics and basic programming that \"morally\" should have been in the core library, and isn't because of human reasons</p>",
        "id": 150892838,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1543970880
    },
    {
        "content": "<p>while at the same time lean 4 is planning on outsourcing much of what is now core into the user space / lean 4 mathlib</p>",
        "id": 150892898,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1543970938
    },
    {
        "content": "<p>so all in all I don't know what will end up where, but mathlib is actively being developed and used so it's a good place to test out changes in the meantime</p>",
        "id": 150892958,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1543971002
    },
    {
        "content": "<p>Right now mathlib <em>is</em> the lean standard library. Lean core lacks a lot of basic stuff that one would expect in a standard library, much of it deliberately so. Mathlib was built to fill that gap</p>",
        "id": 150893056,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1543971169
    },
    {
        "content": "<p>To follow up on this, I'm currently putting our generic additions here <a href=\"https://github.com/GaloisInc/reopt-vcg/tree/master/lean/deps/galois_stdlib/src/galois\" target=\"_blank\" title=\"https://github.com/GaloisInc/reopt-vcg/tree/master/lean/deps/galois_stdlib/src/galois\">https://github.com/GaloisInc/reopt-vcg/tree/master/lean/deps/galois_stdlib/src/galois</a>.<br>\nThey aren't particularly substantial, but are Apache 2 licensed, so feel free to pull to mathlib if you'd like.   If they get more substantial, then maybe it makes sense for me to add a PR to mathlib.</p>",
        "id": 151404787,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1544479308
    },
    {
        "content": "<p>Nice, <code>reopt-vcg</code> is Lean in the wild stuff!</p>",
        "id": 151433862,
        "sender_full_name": "Johannes HÃ¶lzl",
        "timestamp": 1544521915
    },
    {
        "content": "<p>Yeah, I'm really interested in being able to use Lean as another programming language for developing verification/satisfiability checking tools, and then being able to prove soundness.</p>",
        "id": 151468629,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1544552576
    }
]