[
    {
        "content": "<p>In <code>metavar_context.h</code>, the class<code>metavar_decl</code> keeps a <code>local_context</code> field called <code>m_context</code>, which is the local context in which the mvar was created. In the system description it says \"since only closed terms can be assigned to metavariables, a metavariable that occurs in a context records the parameters that it depends on\". Is this what <code>m_context</code> is doing? Does closed here mean no unbound de-bruijn variables? The system description seems to imply that the context is stored as a telescope of <code>pi</code>s on the type of the mvar rather than in a special field in the declaration which is confusing me. Thanks</p>",
        "id": 132255464,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1534442169
    },
    {
        "content": "<p>The system description describes an old version of Lean where metavariables are handled differently.  The metavariables in Lean 3 can have free variables in the form of local constants.</p>",
        "id": 132255709,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534442482
    },
    {
        "content": "<p>This is also the reason for the delayed_abstraction macro, if you've seen it before.  If you want to build <code>Î» x, ?m_1</code> where <code>?m_1</code> could contain <code>x</code> as a free variable, then we insert a delayed_abstraction macro that tells Lean to replace the local constant by a de Bruijn variable when instantiating the metavariable.</p>",
        "id": 132255801,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534442569
    },
    {
        "content": "<p>Re: publications.  Many of the publications on the website describe old versions of Lean.  I think the ICFP paper from last year (metaprogramming framework for formal verification) and the IJCAR paper from 2016 (congruence closure) are the only two which are up-to-date as of Lean 3.</p>",
        "id": 132255930,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1534442693
    }
]