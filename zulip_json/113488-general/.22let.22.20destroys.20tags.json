[
    {
        "content": "<p>When you do induction, Lean tags the different cases. You can see these tags in the Goal window in VScode. However, <code>let</code> destroys those tags.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"k\">let</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span> <span class=\"o\">:=</span> <span class=\"mi\">3</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- the tag is gone :sad:</span>\n    <span class=\"n\">sorry</span> <span class=\"o\">},</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 161932245,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553761238
    },
    {
        "content": "<p>Would you rather the tags were there forever? I always think it's a bit weird that the tags are there at all, and never pay any attention to them. A general \"idea\" I have in a proof isn't tagged, how come \"I happen to be doing a case split\" is so important?</p>",
        "id": 161932423,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1553761463
    },
    {
        "content": "<p>Well, if they are there, they shouldn't be destroyed by a simple <code>let</code> statement.</p>",
        "id": 161932942,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553762070
    },
    {
        "content": "<p>Also, I think they can be used in a nice way.</p>",
        "id": 161932947,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553762086
    },
    {
        "content": "<p>You can try wrapping  your <code>let</code> with <code>propagate_tags</code></p>",
        "id": 161963935,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1553787151
    },
    {
        "content": "<p>Aha <span aria-label=\"bulb\" class=\"emoji emoji-1f4a1\" role=\"img\" title=\"bulb\">:bulb:</span></p>",
        "id": 161964160,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553787283
    },
    {
        "content": "<p>Still... this defeats the purpose of tags a bit, in my eyes.</p>",
        "id": 161964192,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553787298
    },
    {
        "content": "<p>Because users will not do the wrapping... and so they lose their tags</p>",
        "id": 161964226,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553787321
    },
    {
        "content": "<p>Two solutions: you create a <code>let'</code> tactic or you make a pull request to the Lean community fork for <code>let</code></p>",
        "id": 161964399,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1553787414
    },
    {
        "content": "<p>I see... thanks for teaching me about <code>propagate_tags</code>!</p>",
        "id": 161964785,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553787635
    },
    {
        "content": "<p>PR to core</p>",
        "id": 161965885,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1553788383
    },
    {
        "content": "<p>oh wait it isn't in core</p>",
        "id": 161965967,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1553788434
    },
    {
        "content": "<p>You could PR this as a change to the <code>set</code> tactic in mathlib, which is just a wrapper around <code>let</code>.</p>",
        "id": 161966312,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1553788646
    },
    {
        "content": "<p>Well, in general you would want all tactics to reasonably preserve tags. (Unless they have a good reason not to.)</p>",
        "id": 161966434,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553788721
    },
    {
        "content": "<p>I didn't test which tactics are bad actors. But I guess <code>let</code> is not the only one.</p>",
        "id": 161966513,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553788762
    },
    {
        "content": "<p>Look into <code>init/meta/interactive.lean</code> and see which ones do not use <code>propagate_tags</code> and try to find a good reason for them.</p>",
        "id": 161968251,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1553789917
    }
]