[
    {
        "content": "<p>Has anyone written meta code to list all the declarations used in a theorem including the declarations used by theorems that the first theorem uses and so on? I wrote some, but it's not fast enough to execute without a deterministic timeout. I want this for Lean 3 by the way.</p>",
        "id": 305351388,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1666358045
    },
    {
        "content": "<p>leancrawler? That's what people use for LTE or sphere eversion</p>",
        "id": 305360400,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1666360453
    },
    {
        "content": "<p>Does the code in <a href=\"https://github.com/leanprover-community/mathlib/pull/16911\">#16911</a> help, something like this should be possible in lean without timeouts, but if you re-visit declarations more than once I can see why it would be too slow</p>",
        "id": 305380679,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1666366048
    },
    {
        "content": "<p>Lean has a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/hash_map\">docs#hash_map</a> and even <a href=\"https://leanprover-community.github.io/mathlib_docs/find/name_map\">docs#name_map</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/name_set\">docs#name_set</a> specialized to <code>name</code>s, so it is possible to loop over everything and store what you have already seen to speed it up.</p>",
        "id": 305407145,
        "sender_full_name": "Jason Rute",
        "timestamp": 1666372941
    },
    {
        "content": "<p>I wrote the most optimized code I could using <code>name_set</code> and stuff, and it's still not quite fast enough. Is there some way to just increase deterministic timeout to more than 2^32-1</p>",
        "id": 305825408,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1666619852
    },
    {
        "content": "<p>if you run lean from the command line there is no timeout</p>",
        "id": 305826141,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1666620014
    }
]