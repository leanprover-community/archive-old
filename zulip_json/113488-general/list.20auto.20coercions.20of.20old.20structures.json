[
    {
        "content": "<p>Hi, can I quickly get the list of the auto generated coercions for an old structure? I want something like</p>\n<div class=\"codehilite\"><pre><span></span>&gt; env.get_coercions `comm_semigroup\n[`comm_semigroup.to_semigroup]\n</pre></div>\n\n\n<p>I see <code>env.structure_fields</code>, and it includes autogenerated coercions for new-style structures but for <code>comm_semigroup</code> it returns <code>[mul, mul_assoc, mul_comm]</code>.</p>",
        "id": 173276782,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1565861378
    },
    {
        "content": "<p>I rewrote <code>to_additive</code> to automatically take care of structure fields and things like <code>cases_on</code>, <code>_proof_1</code> etc. Now coercions like <code>comm_semigroup.to_semigroup</code> is the last thing <code>to_additive</code> can't find automatically when it sees <code>@[to_additive add_comm_semigroup] class comm_semigroup ...</code></p>",
        "id": 173309003,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1565891127
    },
    {
        "content": "<p>Does tactic.algebra not solve your problems?</p>",
        "id": 173309496,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1565891466
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110025\">@Andrew Ashworth</span> It still depends on manual input of ancestry information. Though it's definitely better to have it once than twice, I'd prefer Lean to make this information available using some <code>meta constant</code>.</p>",
        "id": 173310684,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1565892325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210057\">@Fabian Gl√∂ckle</span> was also looking for something like this. I don't think he found a solution.</p>",
        "id": 174042632,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1566659535
    }
]