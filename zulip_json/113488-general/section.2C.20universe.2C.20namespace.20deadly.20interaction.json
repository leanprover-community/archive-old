[
    {
        "content": "<p>I think we've just uncovered one of the \"corner-cases\" <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> was talking on <a href=\"https://github.com/leanprover-community/lean/pull/317\">this PR</a> (and the <a href=\"https://github.com/leanprover-community/lean/issues/315\">linked issue</a>).</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">section</span> <span class=\"n\">sec</span>\n\n<span class=\"kd\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">equipartition</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">parts</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">equipartition</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span>\n\n<span class=\"kn\">protected</span> <span class=\"kd\">def</span> <span class=\"n\">stuff</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">equipartition</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">equipartition</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span>\n\n<span class=\"kn\">protected</span> <span class=\"kd\">def</span> <span class=\"n\">equipartition.stuff'</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">equipartition</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">equipartition</span> <span class=\"n\">V</span><span class=\"o\">)</span>\n\n<span class=\"bp\">#</span><span class=\"n\">printprefix</span> <span class=\"n\">equipartition</span>\n<span class=\"k\">#check</span> <span class=\"n\">P.stuff</span>              <span class=\"c1\">-- works</span>\n<span class=\"k\">#check</span> <span class=\"n\">P.stuff'</span>             <span class=\"c1\">-- works</span>\n<span class=\"k\">#check</span> <span class=\"n\">equipartition.stuff</span>  <span class=\"c1\">-- doesn't work</span>\n<span class=\"k\">#check</span> <span class=\"n\">equipartition.stuff'</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">sec</span>\n</code></pre></div>\n<p>The bug seems to result from a very peculiar arrangement of <code>section</code>, <code>universe</code> and <code>namespace</code>. If you</p>\n<ul>\n<li>replace <code>universe</code> by <code>universes</code>, it doesn't work</li>\n<li>replace <code>universe</code> by <code>universe variable</code> it <strong>does</strong> work</li>\n<li>replace <code>Type u</code> by <code>Type*</code> it <strong>does</strong> work</li>\n<li>delete <code>section</code>, it <strong>does</strong> work</li>\n<li>move<code> universe u</code> above <code>section</code> it <strong>does</strong> work</li>\n</ul>",
        "id": 241180594,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1622654393
    },
    {
        "content": "<blockquote>\n<p>move universe u above section it does work</p>\n</blockquote>\n<p>I think this is what you should do.</p>",
        "id": 241181056,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1622654606
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"n\">equipartition.stuff</span>  <span class=\"c1\">-- doesn't work</span>\n<span class=\"k\">#check</span> <span class=\"bp\">@</span><span class=\"n\">equipartition.stuff</span>  <span class=\"c1\">-- works</span>\n</code></pre></div>\n<p><em>shrug</em></p>",
        "id": 241299269,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1622658232
    }
]