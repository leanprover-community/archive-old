[
    {
        "content": "<p>Is it possible to get Lean to accept definitions without bodies as normal functions? So far, I have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.trigonometric</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n\n<span class=\"kd\">def</span> <span class=\"n\">lim.as_x_to_a</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span>\n\n<span class=\"kd\">axiom</span> <span class=\"n\">lim.const_law</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">lim.as_x_to_a</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">c</span>\n</code></pre></div>\n<p>but Lean is complaining that the axiom is an invalid definition. My goal is to define properties about <code>lim.as_x_to_a</code> to program its behavior, without giving the <code>lim.as_x_to_a</code> definition an actual body.</p>",
        "id": 218651403,
        "sender_full_name": "Formally Verified Waffle Maker",
        "timestamp": 1606967932
    },
    {
        "content": "<p>You could define the body as <code>:= sorry</code></p>",
        "id": 218651478,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1606968039
    },
    {
        "content": "<p>or you can use <code>constant</code></p>",
        "id": 218651512,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1606968095
    },
    {
        "content": "<p>(which behaves exactly like <code>axiom</code>)</p>",
        "id": 218651514,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1606968103
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> Thank you both so much!</p>",
        "id": 218651672,
        "sender_full_name": "Formally Verified Waffle Maker",
        "timestamp": 1606968294
    }
]