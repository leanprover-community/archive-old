[
    {
        "content": "<p>Hey, I'm trying to prove the seemingly very simple</p>\n<div class=\"codehilite\"><pre><span></span>example (n : ℕ) (h : n &lt; 1) : n = 0 := sorry\n</pre></div>\n\n\n<p>It's revealing a lot about what I don't know in lean (like getting stuck getting 1&gt;n from n&lt;1) and would welcome any advice/solutions. I'm not working very much at all with order or N at any other stage so, despite wading through theorems the past couple of days trying to find what I need, I'm giving up a bit. Thanks.</p>\n<p>(Also, I'm using this to show that if you take any <code>(a : fin 1)</code> then <code>a = 0</code>. I suspect too that this is probably much simpler than what I'm doing.)</p>",
        "id": 132369398,
        "sender_full_name": "Ned Summers",
        "timestamp": 1534614438
    },
    {
        "content": "<p>you should be able to do it by cases</p>",
        "id": 132369562,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1534614733
    },
    {
        "content": "<p>not my favorite proof:</p>\n<div class=\"codehilite\"><pre><span></span>example (n : ℕ) (h : n &lt; 1) : n = 0 :=\nby cases h with _ h; [refl, cases h]\n</pre></div>",
        "id": 132369628,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1534614896
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>example (n : fin 1) : n = 0 :=\nfin.cases rfl (λ i, i.elim0) n\n</pre></div>",
        "id": 132369681,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1534614992
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>example : ∀ (n : fin 1), n = 0 := dec_trivial\n</pre></div>",
        "id": 132370212,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1534615964
    },
    {
        "content": "<blockquote>\n<p>It's revealing a lot about what I don't know in lean (like getting stuck getting 1&gt;n from n&lt;1) and would welcome any advice/solutions. </p>\n</blockquote>\n<p>This is literaly the same thing.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&gt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">h</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&gt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">change</span> <span class=\"mi\">1</span> <span class=\"bp\">&gt;</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n<span class=\"n\">assumption</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 132371079,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534617476
    },
    {
        "content": "<p>Note that the <code>change</code> is here so you see it in the interative message window, but it's useless</p>",
        "id": 132371124,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1534617515
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"n\">dec_trivial</span>\n</pre></div>",
        "id": 132376851,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1534627911
    },
    {
        "content": "<p>Thanks everyone, dec_trivial is a nice thing to know about. Will be using this to ponder where my break in understanding was.</p>",
        "id": 132445610,
        "sender_full_name": "Ned Summers",
        "timestamp": 1534759517
    }
]