[
    {
        "content": "<p>Can you define a recursive function with a <code>let</code> inside a <code>do</code> block (in a <code>meta</code> definition)?</p>",
        "id": 133958735,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536937503
    },
    {
        "content": "<p>No</p>",
        "id": 133962580,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1536940771
    },
    {
        "content": "<p>Well, you could write a meta <code>fix</code>, but that's still not very ergonomical</p>",
        "id": 133962812,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1536940946
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span>\n<span class=\"n\">do</span> <span class=\"k\">let</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span>     <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">exact</span> <span class=\"bp\">_</span><span class=\"n\">match</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"bp\">_</span><span class=\"n\">match</span> <span class=\"n\">n</span>\n  <span class=\"kn\">end</span><span class=\"o\">,</span>\n<span class=\"n\">return</span> <span class=\"n\">m</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">eval</span> <span class=\"n\">foo</span> <span class=\"mi\">4</span> <span class=\"c1\">-- some 16</span>\n</pre></div>",
        "id": 133964819,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536943268
    },
    {
        "content": "<p>I had to do <code>by exact</code> for some reason</p>",
        "id": 133964837,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536943299
    },
    {
        "content": "<p>Now that's just terrible :P</p>",
        "id": 133964901,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1536943351
    }
]