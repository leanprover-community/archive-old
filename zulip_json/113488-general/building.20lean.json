[
    {
        "content": "<p>I've just updated the OS X command line tools, I get a million warnings when trying to build Lean:</p>\n<div class=\"codehilite\"><pre><span></span>/Users/scott/projects/lean/lean/src/util/small_object_allocator.h:42:71: warning: &#39;operator delete&#39; has a non-throwing exception specification but can still throw [-Wexceptions]\ninline void operator delete(void *, lean::small_object_allocator &amp;) { lean_unreachable(); }\n ^\n/Users/scott/projects/lean/lean/src/util/debug.h:23:156: note: expanded from macro &#39;lean_unreachable&#39;\n#define lean_unreachable() { DEBUG_CODE({lean::notify_assertion_violation(__FILE__, __LINE__, &quot;UNREACHABLE CODE WAS REACHED.&quot;); lean::invoke_debugger();}) throw lean::unreachable_reached(); }\n ^\n/Users/scott/projects/lean/lean/src/util/small_object_allocator.h:42:13: note: deallocator has a implicit non-throwing exception specification\ninline void operator delete(void *, lean::small_object_allocator &amp;) { lean_unreachable(); }\n ^\n/Users/scott/projects/lean/lean/src/util/small_object_allocator.h:43:73: warning: &#39;operator delete[]&#39; has a non-throwing exception specification but can still throw [-Wexceptions]\ninline void operator delete[](void *, lean::small_object_allocator &amp;) { lean_unreachable(); }\n ^\n/Users/scott/projects/lean/lean/src/util/debug.h:23:156: note: expanded from macro &#39;lean_unreachable&#39;\n#define lean_unreachable() { DEBUG_CODE({lean::notify_assertion_violation(__FILE__, __LINE__, &quot;UNREACHABLE CODE WAS REACHED.&quot;); lean::invoke_debugger();}) throw lean::unreachable_reached(); }\n ^\n</pre></div>",
        "id": 124608405,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1522817446
    },
    {
        "content": "<p>Presumably we want to switch off these warnings?</p>",
        "id": 124608407,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1522817456
    }
]