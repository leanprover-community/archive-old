[
    {
        "content": "<p><a href=\"https://github.com/hwayne/lets-prove-leftpad/pull/29\" target=\"_blank\" title=\"https://github.com/hwayne/lets-prove-leftpad/pull/29\">https://github.com/hwayne/lets-prove-leftpad/pull/29</a></p>\n<p>Submission of Lean to Hillel's challenge to prove a formal leftpad</p>",
        "id": 188900442,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1582522003
    },
    {
        "content": "<p>I think your text leaves out a critical point, namely that the reason why your proofs just consist of <code>rw leftpad, simp</code>, is because the theorems you're trying to prove have already been proved in mathlib! It's not like any magic is happening, beyond that <code>simp</code> is good at pulling out relevant lemmas from the library.</p>",
        "id": 188900841,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1582522627
    },
    {
        "content": "<p>What you wrote looks great! The only thing I would say is that <code>add_comm</code> actually is a simp lemma (see the example below), the mechanism that stops it from looping however is possibly what makes it not solve your goal there outright, but it can do so in some instances,</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">is_add_comm_simp</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"bp\">â„•</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">simp</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">is_add_comm_simp</span>\n</pre></div>\n\n\n<p>in this example simp changes <code>m+n</code> to <code>n+m</code> but not the other way round so the goal is proved.</p>",
        "id": 188900852,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1582522640
    },
    {
        "content": "<p>(<code>add_comm</code> will not be a <code>simp</code> lemma for much longer, btw)</p>",
        "id": 188900885,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1582522662
    },
    {
        "content": "<p>Sure, but the reason isn't because it loops, just that its a bit arbitrary where you end up right?</p>",
        "id": 188900954,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1582522721
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/Request.20for.20review.20of.20a.20leftpad.20proof/near/188900841\" title=\"#narrow/stream/113488-general/topic/Request.20for.20review.20of.20a.20leftpad.20proof/near/188900841\">said</a>:</p>\n<blockquote>\n<p>I think your text leaves out a critical point, namely that the reason why your proofs just consist of <code>rw leftpad, simp</code>, is because the theorems you're trying to prove have already been proved in mathlib! It's not like any magic is happening, beyond that <code>simp</code> is good at pulling out relevant lemmas from the library.</p>\n</blockquote>\n<p>Let me specify that <code>simp</code> is pulling out theorem from mathlib</p>",
        "id": 188901142,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1582522944
    },
    {
        "content": "<p>Actually if you do <code>simp [-add_comm]</code> for your proof of <code>leftpad_length</code> you won't need to rewrite again after, so in this case it is actually the fact that <code>add_comm</code> is (currently) a simp lemma that is slowing you down!</p>",
        "id": 188901150,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1582522970
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113488-general/topic/Request.20for.20review.20of.20a.20leftpad.20proof/near/188900954\" title=\"#narrow/stream/113488-general/topic/Request.20for.20review.20of.20a.20leftpad.20proof/near/188900954\">said</a>:</p>\n<blockquote>\n<p>Sure, but the reason isn't because it loops, just that its a bit arbitrary where you end up right?</p>\n</blockquote>\n<p>Yes. It's arbitrary and non-deterministic (or rather, possibly dependent on things you'd really like to be irrelevant).</p>",
        "id": 188901331,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1582523178
    },
    {
        "content": "<p>I'm not sure what this Hillel leftpad thing is about, but I wonder if it would be more interesting to actually show direct proofs of these facts, in Lean canonical style, and then point out as an extra: \"of course, since all these theorems already exist in mathlib, and <code>simp</code> is awesome, we can prove all these facts with a uniform proof <code>rw leftpad, simp</code>.\"</p>",
        "id": 188901350,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1582523279
    },
    {
        "content": "<p>That would definitely be awesome, but out of my depth. I might add when I study a bit more about mathlib.</p>",
        "id": 188901405,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1582523381
    },
    {
        "content": "<p>This leftpad thing is a half-joke referring to when leftpad got removed from npm and sabotaged the building of half of all javascript apps. Hillel is promoting formal methods to be more mainstream so it is a way to ride the meme machine kinda.</p>",
        "id": 188901482,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1582523501
    },
    {
        "content": "<p>One solution is just to replace <code>simp</code> with <code>squeeze_simp</code>, see which lemma it's using, look them up, and copy and paste the proofs. :-)</p>",
        "id": 188901485,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1582523505
    },
    {
        "content": "<p>wow that can definitely go in README too</p>",
        "id": 188901539,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1582523531
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113488-general/topic/Request.20for.20review.20of.20a.20leftpad.20proof/near/188901150\" title=\"#narrow/stream/113488-general/topic/Request.20for.20review.20of.20a.20leftpad.20proof/near/188901150\">said</a>:</p>\n<blockquote>\n<p>Actually if you do <code>simp [-add_comm]</code> for your proof of <code>leftpad_length</code> you won't need to rewrite again after</p>\n</blockquote>\n<p>Didn't work when I tried in the online editor. Is it something new?</p>",
        "id": 188901568,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1582523596
    },
    {
        "content": "<p><code>squeeze_simp</code> is not in online editor either. Ah I need to actually start my vscode.</p>",
        "id": 188901618,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1582523687
    },
    {
        "content": "<p>not today <span aria-label=\"sleepy\" class=\"emoji emoji-1f62a\" role=\"img\" title=\"sleepy\">:sleepy:</span></p>",
        "id": 188901643,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1582523749
    },
    {
        "content": "<p>I don't think it's new, thats weird.</p>",
        "id": 188901977,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1582524331
    },
    {
        "content": "<p>Which online editor are you using?</p>",
        "id": 188901982,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1582524347
    },
    {
        "content": "<p>You should definitely use Bryan's one, at <a href=\"https://leanprover-community.github.io/lean-web-editor/\" target=\"_blank\" title=\"https://leanprover-community.github.io/lean-web-editor/\">https://leanprover-community.github.io/lean-web-editor/</a>, not the original one.</p>",
        "id": 188902028,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1582524393
    },
    {
        "content": "<p>Oh, I've been using the original one all this time</p>",
        "id": 188902044,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1582524430
    },
    {
        "content": "<p>Nice work! Did you see <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span>'s PR to that repository? <a href=\"https://github.com/hwayne/lets-prove-leftpad/pull/8\" target=\"_blank\" title=\"https://github.com/hwayne/lets-prove-leftpad/pull/8\">https://github.com/hwayne/lets-prove-leftpad/pull/8</a></p>",
        "id": 188902562,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1582525420
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113488-general/topic/Request.20for.20review.20of.20a.20leftpad.20proof/near/188902562\" title=\"#narrow/stream/113488-general/topic/Request.20for.20review.20of.20a.20leftpad.20proof/near/188902562\">said</a>:</p>\n<blockquote>\n<p>Nice work! Did you see <span class=\"user-mention silent\" data-user-id=\"110026\">Simon Hudon</span>'s PR to that repository? <a href=\"https://github.com/hwayne/lets-prove-leftpad/pull/8\" target=\"_blank\" title=\"https://github.com/hwayne/lets-prove-leftpad/pull/8\">https://github.com/hwayne/lets-prove-leftpad/pull/8</a></p>\n</blockquote>\n<p>Oh no I did not! Thanks!</p>",
        "id": 188903030,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1582526224
    },
    {
        "content": "<p>That's ... wow</p>",
        "id": 188903096,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1582526317
    },
    {
        "content": "<p>I should really finish up that presentation. I've been procrastinating two years on that</p>",
        "id": 188903311,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1582526687
    },
    {
        "content": "<p>Yours look pretty good :)</p>",
        "id": 188903534,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1582527025
    },
    {
        "content": "<p>Thank you! Yours is way up there for me to study <span aria-label=\"nerd\" class=\"emoji emoji-1f913\" role=\"img\" title=\"nerd\">:nerd:</span></p>",
        "id": 188903611,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1582527156
    }
]