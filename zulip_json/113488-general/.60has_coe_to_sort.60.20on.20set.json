[
    {
        "content": "<p>What am I doing wrong:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">has_coe_to_sort</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply_instance</span> <span class=\"c1\">-- works</span>\n<span class=\"kn\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">has_coe_to_sort</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply_instance</span> <span class=\"c1\">-- error</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">tactic.mk_instance failed to generate instance for</span>\n<span class=\"cm\">  has_coe_to_sort (set X)</span>\n<span class=\"cm\">state:</span>\n<span class=\"cm\">X : Type</span>\n<span class=\"cm\">‚ä¢ has_coe_to_sort (set X)</span>\n<span class=\"cm\">-/</span>\n</pre></div>\n\n\n<p>?</p>",
        "id": 129747338,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531745055
    },
    {
        "content": "<p>check your universe variables</p>",
        "id": 129747359,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1531745094
    },
    {
        "content": "<p><em>boggle</em></p>",
        "id": 129747379,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531745116
    },
    {
        "content": "<p>I remember now, I've seen this before. <code>definition foo...</code> works, <code>example</code> works, <code>theorem</code> doesn't. Thanks!</p>",
        "id": 129747752,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531745611
    },
    {
        "content": "<p><code>theorem</code> works too if you assign the universe variables first</p>",
        "id": 129747757,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1531745633
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">has_coe_to_sort</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply_instance</span> <span class=\"c1\">-- works</span>\n<span class=\"kn\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">has_coe_to_sort</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"mi\">1</span> <span class=\"mi\">2</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply_instance</span> <span class=\"c1\">-- works</span>\n</pre></div>",
        "id": 129747806,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531745678
    },
    {
        "content": "<p>but <code>has_coe_to_fun</code> is an instance so it's best to use <code>instance</code> or <code>def</code></p>",
        "id": 129747807,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1531745680
    },
    {
        "content": "<p>you mean this?</p>",
        "id": 129747808,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531745681
    },
    {
        "content": "<p>yes</p>",
        "id": 129747812,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1531745693
    },
    {
        "content": "<p>because the default Sort is Sort 0?</p>",
        "id": 129747820,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531745706
    },
    {
        "content": "<p>so I have to say 2?</p>",
        "id": 129747825,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531745711
    },
    {
        "content": "<p>I think you only need to state the second one, which is the universe level of the target type, which must be <code>Sort u</code> for some <code>u</code></p>",
        "id": 129747889,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1531745763
    },
    {
        "content": "<p>how do I state the second one without stating the first one?</p>",
        "id": 129747899,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531745775
    },
    {
        "content": "<p><code>.{_ 2}</code></p>",
        "id": 129747902,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1531745782
    },
    {
        "content": "<p>well</p>",
        "id": 129747911,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531745796
    },
    {
        "content": "<p>I realize it doesn't save any chars, but it does save some working-out</p>",
        "id": 129747932,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1531745828
    },
    {
        "content": "<blockquote>\n<p>I realize it doesn't save any chars, but it does save some working-out</p>\n</blockquote>\n<p>But one should work out to stay Lean... <span class=\"emoji emoji-1f914\" title=\"thinking face\">:thinking_face:</span></p>",
        "id": 129747981,
        "sender_full_name": "Sean Leather",
        "timestamp": 1531745881
    }
]