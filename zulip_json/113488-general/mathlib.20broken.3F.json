[
    {
        "content": "<p>Actually, it seems like the problem is just in mathlib.</p>",
        "id": 124599682,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1522798553
    },
    {
        "content": "<p>Does anyone else get</p>\n<div class=\"codehilite\"><pre><span></span>/Users/scott/projects/lean/lean-category-theory/_target/deps/mathlib/data/nat/sqrt.lean:103:48: error: solve1 tactic failed, focused goal has not been solved\n\nstate:\n\nn : ℕ,\nsqrt_aux_is_sqrt :\n ∀ (m r : ℕ),\n r * r ≤ n →\n n &lt; (r + 2 ^ (m + 1)) * (r + 2 ^ (m + 1)) → is_sqrt n (sqrt_aux (2 ^ m * 2 ^ m) (2 * r * 2 ^ m) (n - r * r)),\nm r : ℕ,\nh₁ : r * r ≤ n,\nh₂ : n &lt; (r + 2 ^ (m + 1 + 1)) * (r + 2 ^ (m + 1 + 1)),\na : n &lt; (r + 2 ^ (m + 1)) * (r + 2 ^ (m + 1)),\nthis : is_sqrt n (sqrt_aux (2 ^ m * 2 ^ m) (r * 2 * 2 ^ m) (n - r * r))\n⊢ is_sqrt n (sqrt_aux (2 ^ m * 2 ^ m) (r * (2 * 2 ^ m)) (n - r * r))\n ````\n</pre></div>",
        "id": 124599728,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1522798585
    },
    {
        "content": "<p>The <code>finish</code> <a href=\"https://github.com/leanprover/mathlib/blob/master/order/complete_boolean_algebra.lean#L42\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/order/complete_boolean_algebra.lean#L42\">here</a> in mathlib/order/complete_boolean_algebra seems to take a long time to execute.</p>",
        "id": 124599971,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1522799038
    },
    {
        "content": "<p>mathlib is currently broken. I am working on a fix</p>",
        "id": 124601878,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522802833
    },
    {
        "content": "<p>actually what is the cause of the problem?</p>",
        "id": 124601879,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522802847
    },
    {
        "content": "<p>I roughly saw something to do with <code>punit.eq</code></p>",
        "id": 124601880,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522802852
    },
    {
        "content": "<p>I checked the init and it is indeed there</p>",
        "id": 124601881,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522802867
    },
    {
        "content": "<p>The biggest change was the <code>has_pow</code> typeclass, which changes the way power functions are used across the library</p>",
        "id": 124601909,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522802882
    },
    {
        "content": "<p>then why do I see <code>punit.eq</code>?</p>",
        "id": 124601924,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522802900
    },
    {
        "content": "<p><code>group_power</code> needed to be heavily edited, and that caused downstream changes</p>",
        "id": 124601925,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522802927
    },
    {
        "content": "<p>alright, good luck</p>",
        "id": 124601936,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522802984
    },
    {
        "content": "<p>(plus I have some HW due tomorrow which is interfering with my maintenance work)</p>",
        "id": 124601982,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522803017
    },
    {
        "content": "<p>I see</p>",
        "id": 124601983,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522803028
    },
    {
        "content": "<p>Let us know if there is work that can be delegated. (Right now delegating might be more work than just fixing, but in the long run it may be worth thinking about sustainable models of mathlib maintenance.)</p>",
        "id": 124602377,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1522803940
    },
    {
        "content": "<p>For the moment I think I would rather do this work myself, and would indeed discourage others from trying to fix it on their own, because this creates merge headaches, especially in this sort of cross-library modification.</p>",
        "id": 124602936,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522805119
    },
    {
        "content": "<p>I've got it 99% working, there's just one error in ordinal_notation that I need to check the original proof to fix. I could push it now, but it won't compile in travis</p>",
        "id": 124602984,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522805175
    },
    {
        "content": "<p>A  99% fix would still be helpful, as at the moment huge chunks of mathlib recompile every time I run leanpkg. This makes it almost impossible to work.</p>",
        "id": 124608602,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1522817985
    },
    {
        "content": "<p>I'll push a 99% fix if I can't get it working tonight.</p>",
        "id": 124609640,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522820330
    },
    {
        "content": "<p>no problem --- I'm managing as is, actually.</p>",
        "id": 124609646,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1522820349
    },
    {
        "content": "<blockquote>\n<p>For the moment I think I would rather do this work myself, and would indeed discourage others from trying to fix it on their own, because this creates merge headaches, especially in this sort of cross-library modification.</p>\n</blockquote>\n<p>The folly of youth :-)</p>",
        "id": 124616232,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522834174
    },
    {
        "content": "<p>\"I am young and enthusiastic and I know I can fix it myself, so let me fix it myself\"</p>",
        "id": 124616233,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522834196
    },
    {
        "content": "<p>I am just the opposite nowadays</p>",
        "id": 124616270,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522834203
    },
    {
        "content": "<p>a loucura da juventude</p>",
        "id": 124616280,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522834231
    },
    {
        "content": "<p>\"I am old and busy, and I know I can do it, so sure go ahead and do it, and then I can remove it from my job list and furthermore I can blame you later ;-)\"</p>",
        "id": 124616282,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522834239
    },
    {
        "content": "<p>I see your point, but given that I've already done most of it, someone else jumping in at this point will only make things worse</p>",
        "id": 124616285,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522834258
    },
    {
        "content": "<p>If I hadn't started the work I'd agree with you</p>",
        "id": 124616292,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522834270
    },
    {
        "content": "<p>I am sure you're right on this occasion.</p>",
        "id": 124616294,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522834283
    },
    {
        "content": "<p>If you're in the middle then it's surely easiest just to keep going.</p>",
        "id": 124616300,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522834300
    },
    {
        "content": "<p>I know now that the wise move is just to sit and wait and not upgrade Lean</p>",
        "id": 124616305,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522834311
    },
    {
        "content": "<p>see my comment in travis</p>",
        "id": 124616306,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522834317
    },
    {
        "content": "<p>Indeed. My fix includes updating the leanpkg.toml file to explicitly reference the nightly it should work with, so hopefully going forward we shouldn't have the problem that updating breaks mathlib</p>",
        "id": 124616356,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522834432
    },
    {
        "content": "<p>I think that all this leanpkg.toml tinkering is a really good idea</p>",
        "id": 124616437,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522834546
    },
    {
        "content": "<p>because in the medium term future things will get more chaotic (when lean 4 appears)</p>",
        "id": 124616477,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522834564
    },
    {
        "content": "<p>and if we have some pretty robust stuff available for making lean and mathlib not break for people wanting to stay on the bleeding edge</p>",
        "id": 124616484,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522834595
    },
    {
        "content": "<p>this will be brilliant</p>",
        "id": 124616486,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1522834599
    },
    {
        "content": "<p>okay, I missed my self imposed deadline, have my 99% fix</p>",
        "id": 124617600,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522836744
    },
    {
        "content": "<p>e o teu HW?</p>",
        "id": 124617601,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522836759
    },
    {
        "content": "<p>nao terminei</p>",
        "id": 124617650,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522836848
    },
    {
        "content": "<p>oh hey finalmente me falas em portugues</p>",
        "id": 124617665,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522836915
    },
    {
        "content": "<p>lol</p>",
        "id": 124617667,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522836922
    },
    {
        "content": "<p>mdr</p>",
        "id": 124617669,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522836928
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> Could you troubleshoot the mathlib leanpkg.toml setup? Adding the lean_version just makes travis complain about it, and doesn't change the result.</p>",
        "id": 124619310,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522840039
    },
    {
        "content": "<p>I'll try to build an MVP of leanup today that is sufficient for using it with Travis</p>",
        "id": 124619473,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1522840395
    },
    {
        "content": "<p>I think I've figured out the problem: Travis is using <a href=\"https://github.com/leanprover/lean-nightly/blob/gh-pages/build/lean-nightly-linux.tar.gz\" target=\"_blank\" title=\"https://github.com/leanprover/lean-nightly/blob/gh-pages/build/lean-nightly-linux.tar.gz\">https://github.com/leanprover/lean-nightly/blob/gh-pages/build/lean-nightly-linux.tar.gz</a>, which hasn't been updated in 15 days, presumably since the nightly publication process changed. Now I guess I have to go to <a href=\"https://github.com/leanprover/lean-nightly/releases\" target=\"_blank\" title=\"https://github.com/leanprover/lean-nightly/releases\">https://github.com/leanprover/lean-nightly/releases</a> and download the appropriate nightly, but that either requires parsing the TOML file or inserting the date in two more places in the travis.yml file. I assume this is what <code>leanup</code> is going to do?</p>",
        "id": 124656640,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522905473
    },
    {
        "content": "<p>Yes, see previous discussion here: <a href=\"#narrow/stream/113488-general/subject/lean.20travis.20problems/near/124359348\" title=\"#narrow/stream/113488-general/subject/lean.20travis.20problems/near/124359348\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/subject/lean.20travis.20problems/near/124359348</a></p>",
        "id": 124660148,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1522913207
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Thanks for the quickfix :) . I'll have to supervise an exam today first, but after that I'll continue working on a proper leanup.</p>",
        "id": 124660826,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1522914790
    }
]