[
    {
        "content": "<p>For <code>IO</code>, you can use <code>unsafe def</code>.<br>\nYou may want to ask the first question in the <a class=\"stream\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4\">#lean4</a> stream, I'm not sure if the answer will be any different in theory, but it might be more likely to be seen by someone who can answer there</p>",
        "id": 305380230,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1666365920
    },
    {
        "content": "<p>thanks! i shall ask accordingly.</p>",
        "id": 305382544,
        "sender_full_name": "Erika Su",
        "timestamp": 1666366462
    },
    {
        "content": "<p>Please don't use <code>unsafe</code> for this :) . The correct replacement is <code>partial</code> as mentioned in <a href=\"https://leanprover.github.io/lean4/doc/lean3changes.html#the-meta-keyword\">https://leanprover.github.io/lean4/doc/lean3changes.html#the-meta-keyword</a>.</p>",
        "id": 305382686,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1666366490
    },
    {
        "content": "<p>(or use <code>repeat</code>!)</p>",
        "id": 305382844,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1666366523
    },
    {
        "content": "<p>Oops! My bad, I did a quick grep on mathlib4 and found <code>unsafe def.*IO</code> only and no <code>partial def.*IO</code> and assumed based on that.</p>",
        "id": 305383268,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1666366611
    }
]