[
    {
        "content": "<p>Is it possible in emacs lisp to use <code>lean-server-session-send-command</code> to get the text of a definition? Failing that, is it possible to use it with the command <code>'info</code> to get the line info of the next command in the file that contains it? I'm trying to create a command to display the definition of the symbol the cursor is currently on.</p>",
        "id": 127482729,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1527984672
    },
    {
        "content": "<p>No, I can't think of any way to do that</p>",
        "id": 127510536,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1528049349
    },
    {
        "content": "<p>What I ended up doing is use the list of keywords in <code>lean-syntax</code> and only keep the ones that are commands, use <code>lean-find-definition</code> to find the location of the definition and <code>re-search-forward</code> to find the next command. That's pretty primitive because it doesn't account for user command but it might just be good enough.</p>",
        "id": 127511408,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528051466
    },
    {
        "content": "<p>Good enough I guess :)</p>",
        "id": 127511513,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1528051686
    },
    {
        "content": "<p>I'm wondering if it would be more useful to just go with find definition and have an option to go back. What do you think? The easiest way to do it is provide one slot memory for finding definition but it would be nicer to have many slots. I just don't want it to grow without bounds.</p>",
        "id": 127518889,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528067871
    },
    {
        "content": "<p>How about setting the mark to the old location if the definition is in the same file?</p>",
        "id": 127519166,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528068477
    },
    {
        "content": "<p>What does that solve?</p>",
        "id": 127519210,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528068537
    },
    {
        "content": "<p>then you can C-x C-x to go back</p>",
        "id": 127519219,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528068555
    },
    {
        "content": "<p>for example, isearch (C-s) does this</p>",
        "id": 127519227,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528068598
    },
    {
        "content": "<p>Ah I see! But then when you go to another file, you have a different shortcut than when you stay in the same file</p>",
        "id": 127519340,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528068746
    },
    {
        "content": "<p>Apparently there's also C-x C-SPC which will pop marks off a global stack, between files</p>",
        "id": 127519418,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528068960
    },
    {
        "content": "<p>So that would always work as a \"go back\" key</p>",
        "id": 127519469,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528069024
    },
    {
        "content": "<p><a href=\"https://stackoverflow.com/questions/4918707/in-emacs-how-to-go-back-to-previous-line-position-after-using-semantic-jump-to\" target=\"_blank\" title=\"https://stackoverflow.com/questions/4918707/in-emacs-how-to-go-back-to-previous-line-position-after-using-semantic-jump-to\">https://stackoverflow.com/questions/4918707/in-emacs-how-to-go-back-to-previous-line-position-after-using-semantic-jump-to</a></p>",
        "id": 127519533,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528069166
    },
    {
        "content": "<p>Nice! So you suggest that in <code>lean-find-definition</code> (which is called when you press <code>M-.</code>) I first push the mark and then set the mark to <code>(point)</code> and then the user will simply have access to those features?</p>",
        "id": 127519595,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528069273
    },
    {
        "content": "<p>Is there a limit to the number of slots on that stack?</p>",
        "id": 127519597,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528069284
    },
    {
        "content": "<p>I don't know. I just found out the limit is more than one <span class=\"emoji emoji-1f642\" title=\"simple smile\">:simple_smile:</span></p>",
        "id": 127519603,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528069299
    },
    {
        "content": "<p>I think you just need to call <code>(push-mark)</code> before doing the navigation</p>",
        "id": 127519650,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528069355
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>mark-ring-max is a variable defined in ‘simple.el’.\nIts value is 16\n\nDocumentation:\nMaximum size of mark ring.  Start discarding off end if gets this big.\n</pre></div>",
        "id": 127519710,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528069471
    },
    {
        "content": "<blockquote>\n<p>I think you just need to call <code>(push-mark)</code> before doing the navigation</p>\n</blockquote>\n<p>Inside of <code>lean-mode</code> or as a user of <code>lean-mode</code>?</p>",
        "id": 127519766,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528069605
    },
    {
        "content": "<p><code>lean-find-definition</code> should call it (I guess, haven't looked at the code)</p>",
        "id": 127519772,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528069644
    },
    {
        "content": "<p>Hmm. I see there is already this, in <code>lean-find-definition-cont</code></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">(</span><span class=\"nb\">cl-defun</span> <span class=\"nv\">lean-find-definition-cont</span> <span class=\"p\">(</span><span class=\"kp\">&amp;key</span> <span class=\"nv\">file</span> <span class=\"nv\">line</span> <span class=\"nv\">column</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"nb\">when</span> <span class=\"p\">(</span><span class=\"nf\">fboundp</span> <span class=\"ss\">&#39;xref-push-marker-stack</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nv\">xref-push-marker-stack</span><span class=\"p\">))</span>\n<span class=\"o\">...</span>\n</pre></div>",
        "id": 127519825,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528069736
    },
    {
        "content": "<p>This is so nice! It's working very well!</p>",
        "id": 127519832,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528069754
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 127519836,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528069773
    },
    {
        "content": "<p>I can PR it if you'd like to have it too</p>",
        "id": 127519894,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528069842
    },
    {
        "content": "<p>Yes please</p>",
        "id": 127519900,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528069860
    },
    {
        "content": "<p>I've been wanting this feature too, but the mark thing just occurred to me now</p>",
        "id": 127519907,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528069883
    },
    {
        "content": "<p>It looks like maybe M-, already does the same thing? but I have that mapped to autocomplete</p>",
        "id": 127519969,
        "sender_full_name": "Reid Barton",
        "timestamp": 1528070014
    },
    {
        "content": "<p>You're right! I undid my changes and <code>M-.</code> <code>M-.</code> <code>M-,</code> <code>M-,</code> brings me back to the beginning. It looks like my pull request will be the empty set. I hope it's approved!</p>",
        "id": 127520133,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528070302
    }
]