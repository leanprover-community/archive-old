[
    {
        "content": "<p>Could we have <code>subst foobar at hyp</code> for substituting in the hypotheses of the local context? Currently I am using <code>repeat {rw foobar at hyp}</code> which feels a bit verbose...</p>",
        "id": 133497289,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536309091
    },
    {
        "content": "<p><code>subst foobar</code></p>",
        "id": 133497352,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536309171
    },
    {
        "content": "<p>What about <code>simp only [foobar] at hyp</code></p>",
        "id": 133497411,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536309249
    },
    {
        "content": "<p>aah never mind. <code>subst</code> is only for local constants. I wanted to substitute <code>x = y</code> where <code>x = y</code> was the result of some proposition.</p>",
        "id": 133497450,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536309348
    },
    {
        "content": "<p><code>simp only</code> works!</p>",
        "id": 133497493,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536309366
    },
    {
        "content": "<p>MWE?</p>",
        "id": 133497565,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536309490
    },
    {
        "content": "<p><a href=\"https://gist.github.com/jcommelin/2e031b5446ca54089576ea9f66f12abf\" target=\"_blank\" title=\"https://gist.github.com/jcommelin/2e031b5446ca54089576ea9f66f12abf\">https://gist.github.com/jcommelin/2e031b5446ca54089576ea9f66f12abf</a></p>",
        "id": 133497570,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536309501
    },
    {
        "content": "<p>?</p>",
        "id": 133497619,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536309578
    },
    {
        "content": "<p>Right, so now you only see the <code>simp</code>s. For the <code>repeat {rw ...}</code> you have to look in the history.</p>",
        "id": 133497678,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536309610
    },
    {
        "content": "<p>Basically I'm challenging you to golf it <span class=\"emoji emoji-1f606\" title=\"lol\">:lol:</span></p>",
        "id": 133497681,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536309625
    },
    {
        "content": "<p>what import is allowed?</p>",
        "id": 133497852,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536309857
    },
    {
        "content": "<p>I don't really care</p>",
        "id": 133497883,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536309938
    },
    {
        "content": "<p>What would you want to use? <code>tidy</code>?</p>",
        "id": 133497892,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536309955
    },
    {
        "content": "<p>you didn't import any file from mathlib, so I can't use any mathlib tactic</p>",
        "id": 133497943,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536309996
    },
    {
        "content": "<p>Wasnt <code>have ... simp at this ... exact this</code> some sort of idiom that can be golfed into a <code>simpa</code>-oneliner? I tried but failed.</p>",
        "id": 133497962,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536310064
    },
    {
        "content": "<p><code>simpa using this</code></p>",
        "id": 133498111,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536310253
    },
    {
        "content": "<p>Or rather <code>simpa using ...</code></p>",
        "id": 133498115,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536310261
    },
    {
        "content": "<p>And what do I need to import to get <code>simpa</code>?</p>",
        "id": 133498231,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536310440
    },
    {
        "content": "<p>My attempt: <a href=\"https://gist.github.com/rwbarton/b79b804e4bff300a5aa2a4ec2951c55e\" target=\"_blank\" title=\"https://gist.github.com/rwbarton/b79b804e4bff300a5aa2a4ec2951c55e\">https://gist.github.com/rwbarton/b79b804e4bff300a5aa2a4ec2951c55e</a></p>",
        "id": 133498273,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536310447
    },
    {
        "content": "<p>Anything in mathlib, but say <code>tactic.interactive</code></p>",
        "id": 133498276,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536310455
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interactive</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">eckmann_hilton</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n\n<span class=\"n\">local</span> <span class=\"kn\">notation</span> <span class=\"n\">a</span> <span class=\"bp\">`&lt;`</span><span class=\"n\">m</span><span class=\"bp\">`&gt;`</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">has_mul</span><span class=\"bp\">.</span><span class=\"n\">mul</span> <span class=\"n\">X</span> <span class=\"n\">m</span> <span class=\"n\">a</span> <span class=\"n\">b</span>\n\n<span class=\"n\">class</span> <span class=\"n\">is_unital</span> <span class=\"o\">[</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">has_mul</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">has_one</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">one_mul</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">e</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"bp\">&lt;</span><span class=\"n\">m</span><span class=\"bp\">&gt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">mul_one</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">&lt;</span><span class=\"n\">m</span><span class=\"bp\">&gt;</span> <span class=\"n\">e</span><span class=\"bp\">.</span><span class=\"n\">one</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"n\">is_unital</span><span class=\"bp\">.</span><span class=\"n\">one_mul</span> <span class=\"n\">is_unital</span><span class=\"bp\">.</span><span class=\"n\">mul_one</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">m₁</span> <span class=\"o\">:</span> <span class=\"n\">has_mul</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">e₁</span> <span class=\"o\">:</span> <span class=\"n\">has_one</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">m₂</span> <span class=\"o\">:</span> <span class=\"n\">has_mul</span> <span class=\"n\">X</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">e₂</span> <span class=\"o\">:</span> <span class=\"n\">has_one</span> <span class=\"n\">X</span><span class=\"o\">}</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">is_unital</span> <span class=\"n\">X</span> <span class=\"n\">m₁</span> <span class=\"n\">e₁</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">is_unital</span> <span class=\"n\">X</span> <span class=\"n\">m₂</span> <span class=\"n\">e₂</span><span class=\"o\">)</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">distrib</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"bp\">&lt;</span><span class=\"n\">m₂</span><span class=\"bp\">&gt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span><span class=\"n\">m₁</span><span class=\"bp\">&gt;</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">&lt;</span><span class=\"n\">m₂</span><span class=\"bp\">&gt;</span> <span class=\"n\">d</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"bp\">&lt;</span><span class=\"n\">m₁</span><span class=\"bp\">&gt;</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span><span class=\"n\">m₂</span><span class=\"bp\">&gt;</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">&lt;</span><span class=\"n\">m₁</span><span class=\"bp\">&gt;</span> <span class=\"n\">d</span><span class=\"o\">)))</span>\n<span class=\"n\">include</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span> <span class=\"n\">distrib</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">one</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">e₁</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"bp\">=</span> <span class=\"n\">e₂</span><span class=\"bp\">.</span><span class=\"n\">one</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">distrib</span> <span class=\"n\">e₂</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"n\">e₁</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"n\">e₁</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"n\">e₂</span><span class=\"bp\">.</span><span class=\"n\">one</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">mul</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">m₁</span><span class=\"bp\">.</span><span class=\"n\">mul</span> <span class=\"bp\">=</span> <span class=\"n\">m₂</span><span class=\"bp\">.</span><span class=\"n\">mul</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">funext</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"bp\">;</span> <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">distrib</span> <span class=\"n\">a</span> <span class=\"n\">e₁</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"n\">e₁</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"n\">b</span><span class=\"bp\">;</span>\n<span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"bp\">;</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">one</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span> <span class=\"n\">distrib</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">this</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">mul_comm</span> <span class=\"o\">:</span> <span class=\"n\">is_commutative</span> <span class=\"bp\">_</span> <span class=\"n\">m₂</span><span class=\"bp\">.</span><span class=\"n\">mul</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">mul</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span> <span class=\"n\">distrib</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">distrib</span> <span class=\"n\">e₂</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">e₂</span><span class=\"bp\">.</span><span class=\"n\">one</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">mul_assoc</span> <span class=\"o\">:</span> <span class=\"n\">is_associative</span> <span class=\"bp\">_</span> <span class=\"n\">m₂</span><span class=\"bp\">.</span><span class=\"n\">mul</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">mul</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span> <span class=\"n\">distrib</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">distrib</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">e₂</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"n\">c</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">comm_monoid</span> <span class=\"n\">X</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">mul_comm</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">mul_comm</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span> <span class=\"n\">distrib</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comm</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_assoc</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">mul_assoc</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span> <span class=\"n\">distrib</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">assoc</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span><span class=\"n\">m₂</span><span class=\"o\">,</span> <span class=\"bp\">..</span><span class=\"n\">e₂</span><span class=\"o\">,</span> <span class=\"bp\">..</span><span class=\"n\">h₂</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">eckmann_hilton</span>\n</pre></div>",
        "id": 133498303,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536310534
    },
    {
        "content": "<p>Well done!</p>",
        "id": 133498562,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536310855
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> <a href=\"https://gist.github.com/jcommelin/2e031b5446ca54089576ea9f66f12abf\" target=\"_blank\" title=\"https://gist.github.com/jcommelin/2e031b5446ca54089576ea9f66f12abf\">https://gist.github.com/jcommelin/2e031b5446ca54089576ea9f66f12abf</a><br>\nI added your name.</p>",
        "id": 133498636,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536310929
    },
    {
        "content": "<p>lol</p>",
        "id": 133498642,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536310942
    }
]