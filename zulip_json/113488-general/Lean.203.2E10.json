[
    {
        "content": "<p>I am happy to announce the latest release of our community fork, Lean 3.10.0.  Thank to all contributors to this release: <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span>, <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span>, <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>, <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>, <span class=\"user-mention\" data-user-id=\"256311\">@Jannis Limperg</span>!  Please be patient, the binaries are still in the oven and will be ready soon!  Excerpt from the changelog:</p>\n<p>Features:</p>\n<p>- <code>by calc ...</code> is now equivalent to <code>by refine calc ...</code> (<a href=\"https://github.com/leanprover-community/lean/issues/203\" title=\"https://github.com/leanprover-community/lean/issues/203\">lean#203</a>)<br>\n  - Flag to use out-of-date oleans (<a href=\"https://github.com/leanprover-community/lean/issues/208\" title=\"https://github.com/leanprover-community/lean/issues/208\">lean#208</a>)<br>\n  - Order notation by priority in pretty-printer (<a href=\"https://github.com/leanprover-community/lean/issues/207\" title=\"https://github.com/leanprover-community/lean/issues/207\">lean#207</a>)<br>\n  - Improve congruence lemmas for <code>coe_fn</code> (<a href=\"https://github.com/leanprover-community/lean/issues/209\" title=\"https://github.com/leanprover-community/lean/issues/209\">lean#209</a>)<br>\n  - Port <code>rename</code> tactic from mathlib (<a href=\"https://github.com/leanprover-community/lean/issues/205\" title=\"https://github.com/leanprover-community/lean/issues/205\">lean#205</a>)</p>\n<p>Bug fixes:</p>\n<p>- <code>simp [← foo]</code> avoids looping if <code>foo</code> is already in the simp set (<a href=\"https://github.com/leanprover-community/lean/issues/198\" title=\"https://github.com/leanprover-community/lean/issues/198\">lean#198</a>)</p>\n<p>Changes:</p>\n<p>- <code>init.category</code> has been renamed to <code>init.control</code> (<a href=\"https://github.com/leanprover-community/lean/issues/202\" title=\"https://github.com/leanprover-community/lean/issues/202\">lean#202</a>)<br>\n  - <code>string.has_decidable_eq</code> is now implemented by foot (<a href=\"https://github.com/leanprover-community/lean/issues/204\" title=\"https://github.com/leanprover-community/lean/issues/204\">lean#204</a>)</p>",
        "id": 196042552,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588411219
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E10/near/196042552\" title=\"#narrow/stream/113488-general/topic/Lean.203.2E10/near/196042552\">said</a>:</p>\n<blockquote>\n<p>Bug fixes:</p>\n<p>- <code>simp [← foo]</code> removes <code>foo</code> from the simp set (<a href=\"https://github.com/leanprover-community/lean/issues/198\" title=\"https://github.com/leanprover-community/lean/issues/198\">lean#198</a>)</p>\n</blockquote>\n<p>This lines is hard to read. Am I right to think it misses something like \"in addition to doing what you think it should do\"?</p>",
        "id": 196043767,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588413111
    },
    {
        "content": "<p>Because right now it reads like: make sure <code>simp [← foo] == simp [-foo]</code></p>",
        "id": 196043811,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588413147
    },
    {
        "content": "<p>Yes, it does what you think it does.  English is not my first language, so PRs to improve the wording are always welcome!</p>",
        "id": 196043901,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588413276
    },
    {
        "content": "<p>It's not mine either. Let's wait until America wakes up (or hope it's daytime in Mario's own timezone)</p>",
        "id": 196043917,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588413331
    },
    {
        "content": "<p>Or ping <span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span></p>",
        "id": 196043989,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588413418
    },
    {
        "content": "<p>Before, <code>simp [← foo]</code> would do what you expect (add <code>foo</code> as a right-to-left rewrite rule). But if <code>foo</code> was already in the simp set as a left-to-right rule, it wasn't always removed properly. So <code>simp</code> would loop.</p>",
        "id": 196044009,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588413464
    },
    {
        "content": "<p>Yes, this is what I mean. Now we are looking for a proper changelog line</p>",
        "id": 196044068,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588413530
    },
    {
        "content": "<p>\"<code>simp [← foo]</code> avoids looping if <code>foo</code> is already in the simp set\"?</p>",
        "id": 196044177,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1588413632
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> Do you expect a lot of trouble with moving mathlib to <code>3.10</code>?</p>",
        "id": 196045294,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588415354
    },
    {
        "content": "<p>(Btw, with the current rate of releases, we can expect <code>lean pi</code> somewhere in July (-;)</p>",
        "id": 196045309,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588415396
    },
    {
        "content": "<p>Very little.  The builds are already running: <a href=\"https://github.com/leanprover-community/mathlib/issues/2587\" title=\"https://github.com/leanprover-community/mathlib/issues/2587\">#2587</a></p>",
        "id": 196045324,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588415402
    },
    {
        "content": "<p>I thought we already had more than two decimals of pi in mathlib</p>",
        "id": 196045443,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588415591
    },
    {
        "content": "<p>(I've always been <em>very</em> confused by version numbers like <code>3.10 &gt; 3.2</code>)</p>",
        "id": 196045455,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588415626
    },
    {
        "content": "<p>I guess this should have been called <code>3.a</code>? and we could go on till <code>3.deadbeef</code>?</p>",
        "id": 196045499,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588415666
    },
    {
        "content": "<p>Congratulations! I don't believe I made any commits that landed in 3.10c though. The last commit I made was compiling a changelog for 3.9c.</p>",
        "id": 196045507,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588415701
    },
    {
        "content": "<p>Which was not part of 3.9. <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 196045527,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588415756
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E10/near/196045499\" title=\"#narrow/stream/113488-general/topic/Lean.203.2E10/near/196045499\">said</a>:</p>\n<blockquote>\n<p>I guess this should have been called <code>3.a</code>?</p>\n</blockquote>\n<p>To me, <code>3.a</code> sounds like an alpha release and I would expect that <code>3.a &lt; 3.0</code>.</p>",
        "id": 196045672,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588415946
    },
    {
        "content": "<p>/me was only joking <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 196045682,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588415964
    },
    {
        "content": "<p>The linter says that <code>simp</code> has become much more powerful. Good news, I guess!</p>",
        "id": 196065577,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1588446556
    },
    {
        "content": "<p>Yes, thanks for the bug report!  In one case I could replace <code>rw A, assume v, simp, unfold_coes, simp</code> by just <code>simp [A]</code>.</p>",
        "id": 196066568,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588448068
    }
]