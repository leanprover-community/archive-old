[
    {
        "content": "<p>Which pattern should I use to completely destroy a term of type <code>option unit</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">unit</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">i</span> <span class=\"k\">with</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"bp\">|</span><span class=\"n\">i</span><span class=\"o\">),</span> <span class=\"c1\">-- how do I get rid of the `i` in the second goal?</span>\n  <span class=\"c1\">-- rcases i with (_|⟨)⟩, -- doesn't help, I still have an `i` in the second goal</span>\n  <span class=\"n\">all_goals</span> <span class=\"o\">{</span> <span class=\"n\">trivial</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>cc <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 274822361,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1646911991
    },
    {
        "content": "<p>How about this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">unit</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">2 goals</span>\n<span class=\"cm\">⊢ true</span>\n\n<span class=\"cm\">⊢ true</span>\n<span class=\"cm\">-/</span>\n\n  <span class=\"n\">rcases</span> <span class=\"n\">i</span> <span class=\"k\">with</span> <span class=\"o\">(</span><span class=\"n\">_</span><span class=\"bp\">|</span><span class=\"n\">_</span><span class=\"bp\">|</span><span class=\"n\">_</span><span class=\"o\">),</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 274822488,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1646912086
    },
    {
        "content": "<p><code>rcases i with _ | ⟨⟨⟩⟩</code></p>",
        "id": 274822991,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1646912429
    },
    {
        "content": "<p>gotten from <code>rcases? i</code></p>",
        "id": 274822997,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1646912440
    },
    {
        "content": "<p>which is a very underrated extension to <code>rcases</code></p>",
        "id": 274823006,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1646912450
    },
    {
        "content": "<p>I use it a lot :-) It was really helpful for doing \"reshuffling\" proofs in my undergraduate course.</p>",
        "id": 274831370,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1646917499
    },
    {
        "content": "<p>Use <code>match</code> instead?</p>",
        "id": 274848525,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646925357
    },
    {
        "content": "<p>how does <code>match</code> help here?</p>",
        "id": 274850400,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1646926161
    },
    {
        "content": "<p>Sorry, I guess I mean the equation compiler:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">unit</span><span class=\"o\">),</span> <span class=\"n\">true</span>\n<span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">some</span> <span class=\"o\">())</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n</code></pre></div>",
        "id": 274850715,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646926275
    },
    {
        "content": "<p>Indeed, <code>match</code> doesn't eliminate the variable</p>",
        "id": 274850739,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646926286
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/113488-general/topic/rcases.20option.20unit/near/274822991\">said</a>:</p>\n<blockquote>\n<p><code>rcases i with _ | ⟨⟨⟩⟩</code></p>\n<p>gotten from <code>rcases? i</code></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> ^ I wrote this bot to speak on my behalf <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 274863222,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646931237
    },
    {
        "content": "<p>Although in this particular case there is an even shorter alternative: <code>rcases i with _|-</code>, which clears <code>i</code> instead of destructuring it</p>",
        "id": 274863569,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646931385
    }
]