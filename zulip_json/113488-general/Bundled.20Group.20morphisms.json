[
    {
        "content": "<p>I noticed that <code>is_group_hom</code> and variants are deprecated, but still used all over <code>group_theory</code>. <br>\nI'm happy to try to make a PR updating these to <code>monoid_hom</code>/<code>→*</code>.<br>\nIs someone already working on this (or did in the past)?</p>",
        "id": 193804991,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1586803251
    },
    {
        "content": "<p>See recent PRs by <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> (who is now very busy grading exams <span aria-label=\"pen\" class=\"emoji emoji-1f58a\" role=\"img\" title=\"pen\">:pen:</span> <span aria-label=\"paper\" class=\"emoji emoji-1f4c4\" role=\"img\" title=\"paper\">:paper:</span>)</p>",
        "id": 193805203,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1586803374
    },
    {
        "content": "<p>Note also <a href=\"https://github.com/leanprover-community/mathlib/issues/2140\" title=\"https://github.com/leanprover-community/mathlib/issues/2140\">#2140</a></p>",
        "id": 193805783,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586803669
    },
    {
        "content": "<p>Thanks, those are indeed all related, but I don't think they interfere much with this project.</p>",
        "id": 193807281,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1586804317
    },
    {
        "content": "<p>I started with <code>is_ring_hom</code> and <code>is_semiring_hom</code></p>",
        "id": 193807704,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586804522
    },
    {
        "content": "<p>Right now the main users of <code>is_ring_hom</code> are <code>polynomial</code>s and <code>mv_polynomial</code>s. I have a rewrite of <code>eval</code> that uses bundled homs but I won't be able to make it PR-ready until I'm done with grading.</p>",
        "id": 193808100,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586804734
    },
    {
        "content": "<p>Do you think this will interfere a lot with factoring out <code>is_group_hom</code>? My guess is that there shouldn't be that much interference.</p>",
        "id": 193808274,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1586804813
    },
    {
        "content": "<p>I guess <code>polynomial</code>s might use theorems about <code>is_group_hom</code>s through <code>is_ring_hom</code></p>",
        "id": 193808436,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586804886
    },
    {
        "content": "<p>So I'd suggest to wait for about a week till I PR my changes.</p>",
        "id": 193808558,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586804946
    },
    {
        "content": "<p>I also have theorems like <code>nat.eq_cast</code> rewritten using bundled homs, not PR-ready yet.</p>",
        "id": 193808621,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586804986
    },
    {
        "content": "<p>Ok, sounds good</p>",
        "id": 193808765,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1586805066
    },
    {
        "content": "<p>BTW, we have an <code>is_mul_hom</code> which is not an <code>is_monoid_hom</code>. It's called <code>nhds</code>.</p>",
        "id": 193812735,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586807146
    },
    {
        "content": "<p>So <code>is_mul_hom</code> lemmas in <code>pointwise</code> can't be migrated to <code>→*</code> without loosing this application.</p>",
        "id": 193812846,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586807200
    },
    {
        "content": "<p>I think a lot of the ideal and algebra stuff uses is_ring_hom?</p>",
        "id": 193812887,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586807238
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"gp\">$</span> git grep -l <span class=\"s1\">&#39;is_\\(semi_\\)\\?ring_hom&#39;</span>\n<span class=\"go\">src/algebra/direct_limit.lean</span>\n<span class=\"go\">src/algebra/field.lean</span>\n<span class=\"go\">src/algebra/field_power.lean</span>\n<span class=\"go\">src/algebra/pi_instances.lean</span>\n<span class=\"go\">src/algebra/punit_instances.lean</span>\n<span class=\"go\">src/algebra/ring.lean</span>\n<span class=\"go\">src/data/complex/basic.lean</span>\n<span class=\"go\">src/data/equiv/ring.lean</span>\n<span class=\"go\">src/data/mv_polynomial.lean</span>\n<span class=\"go\">src/data/padics/padic_integers.lean</span>\n<span class=\"go\">src/data/polynomial.lean</span>\n<span class=\"go\">src/data/zsqrtd/gaussian_int.lean</span>\n<span class=\"go\">src/field_theory/minimal_polynomial.lean</span>\n<span class=\"go\">src/field_theory/mv_polynomial.lean</span>\n<span class=\"go\">src/field_theory/subfield.lean</span>\n<span class=\"go\">src/ring_theory/adjoin_root.lean</span>\n<span class=\"go\">src/ring_theory/free_comm_ring.lean</span>\n<span class=\"go\">src/ring_theory/free_ring.lean</span>\n<span class=\"go\">src/ring_theory/localization.lean</span>\n<span class=\"go\">src/ring_theory/maps.lean</span>\n<span class=\"go\">src/topology/algebra/module.lean</span>\n<span class=\"go\">src/topology/algebra/uniform_ring.lean</span>\n</pre></div>",
        "id": 193813097,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586807364
    },
    {
        "content": "<p>I recently migrated <code>ring_theory/algebra</code> to bundled homs.</p>",
        "id": 193813149,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586807401
    },
    {
        "content": "<p>Most of this can easily go away once <code>polynomial</code>s use bundled homs.</p>",
        "id": 193813354,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586807515
    },
    {
        "content": "<p>I don't want to touch <code>ring_theory/localization</code> because <span class=\"user-mention\" data-user-id=\"118107\">@Amelia Livingston</span> is going to (almost fully) rewrite it.</p>",
        "id": 193813446,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586807565
    }
]