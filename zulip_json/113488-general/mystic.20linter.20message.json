[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">group_ring_action</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">u₁</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">mul_action</span> <span class=\"n\">M</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">mul_action</span> <span class=\"n\">M</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_monoid</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">distrib_mul_action</span> <span class=\"n\">M</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_monoid</span> <span class=\"n\">B</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">distrib_mul_action</span> <span class=\"n\">M</span> <span class=\"n\">B</span><span class=\"o\">]</span>\n\n<span class=\"kn\">set_option</span> <span class=\"n\">default_priority</span> <span class=\"mi\">100</span> <span class=\"c1\">-- see Note [default priority]</span>\n<span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- Equivariant functions. -/</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">nolint</span> <span class=\"n\">has_inhabited_instance</span><span class=\"o\">]</span>\n<span class=\"kn\">structure</span> <span class=\"n\">mul_action_hom</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">to_fun</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">map_smul&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">),</span> <span class=\"n\">to_fun</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"err\">•</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"err\">•</span> <span class=\"n\">to_fun</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"kn\">notation</span> <span class=\"n\">β</span> <span class=\"bp\">`</span> <span class=\"bp\">→</span><span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">25</span> <span class=\"n\">α</span><span class=\"o\">:</span><span class=\"mi\">25</span> <span class=\"bp\">`</span><span class=\"o\">]</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">0</span> <span class=\"n\">γ</span><span class=\"o\">:</span><span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">mul_action_hom</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">mul_action_hom</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_coe_to_fun</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">→</span><span class=\"o\">[</span><span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"bp\">.</span><span class=\"n\">to_fun</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">mul_action_hom</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- Equivariant additive monoid homomorphisms. -/</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">nolint</span> <span class=\"n\">has_inhabited_instance</span><span class=\"o\">]</span>\n<span class=\"kn\">structure</span> <span class=\"n\">distrib_mul_action_hom</span> <span class=\"kn\">extends</span> <span class=\"n\">A</span> <span class=\"bp\">→</span><span class=\"o\">[</span><span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"bp\">→+</span> <span class=\"n\">B</span><span class=\"bp\">.</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- Reinterpret an equivariant additive monoid homomorphism as an additive monoid homomorphism. -/</span>\n<span class=\"n\">add_decl_doc</span> <span class=\"n\">distrib_mul_action_hom</span><span class=\"bp\">.</span><span class=\"n\">to_add_monoid_hom</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- Reinterpret an equivariant additive monoid homomorphism as an equivariant function. -/</span>\n<span class=\"n\">add_decl_doc</span> <span class=\"n\">distrib_mul_action_hom</span><span class=\"bp\">.</span><span class=\"n\">to_mul_action_hom</span>\n\n<span class=\"kn\">notation</span> <span class=\"n\">β</span> <span class=\"bp\">`</span> <span class=\"bp\">→+</span><span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">25</span> <span class=\"n\">α</span><span class=\"o\">:</span><span class=\"mi\">25</span> <span class=\"bp\">`</span><span class=\"o\">]</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">0</span> <span class=\"n\">γ</span><span class=\"o\">:</span><span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">distrib_mul_action_hom</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">distrib_mul_action_hom</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">has_coe</span> <span class=\"o\">:</span> <span class=\"n\">has_coe</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">→+</span><span class=\"o\">[</span><span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">→+</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span><span class=\"n\">to_add_monoid_hom</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_coe_to_fun</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">→+</span><span class=\"o\">[</span><span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"bp\">.</span><span class=\"n\">to_fun</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">distrib_mul_action_hom</span>\n\n<span class=\"bp\">#</span><span class=\"n\">lint</span>\n</code></pre></div>",
        "id": 199259034,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590848652
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\"> INVALID/MISSING `has_coe_to_fun` instances.</span>\n<span class=\"cm\">You should add a `has_coe_to_fun` instance for the following types.</span>\n<span class=\"cm\">See Note function coercions].: -/</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">distrib_mul_action_hom</span> <span class=\"c\">/-</span><span class=\"cm\"> `has_coe_to_fun` instance is definitionally equal to a transitive instance composed of:</span>\n<span class=\"cm\">  @add_monoid_hom.has_coe_to_fun.{v w} A B _inst_4 _inst_6</span>\n<span class=\"cm\">and</span>\n<span class=\"cm\">  @coe_base_aux.{(max (v+1) (w+1)) (max (v+1) (w+1))}</span>\n<span class=\"cm\">    (@distrib_mul_action_hom.{u v w} M _inst_1 A _inst_4 _inst_5 B _inst_6 _inst_7)</span>\n<span class=\"cm\">    (@add_monoid_hom.{v w} A B _inst_4 _inst_6)</span>\n<span class=\"cm\">    (@distrib_mul_action_hom.has_coe.{u v w} M _inst_1 A _inst_4 _inst_5 B _inst_6 _inst_7) -/</span>\n</code></pre></div>",
        "id": 199259036,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590848662
    },
    {
        "content": "<p>what does this linter message mean?</p>",
        "id": 199259048,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590848701
    },
    {
        "content": "<p>I already have a <code>has_coe_to_fun</code> instance for that type</p>",
        "id": 199259056,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590848721
    },
    {
        "content": "<p>also there is no <code>Note [function coercions]</code></p>",
        "id": 199259072,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590848750
    },
    {
        "content": "<p>or at least I cannot find it</p>",
        "id": 199259074,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590848754
    },
    {
        "content": "<p>I think you should remove the set option default priority.</p>",
        "id": 199260075,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590850102
    },
    {
        "content": "<p>ok, but the mystic message is still here</p>",
        "id": 199260101,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590850157
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> Removing the <code>set_option</code> fixes the linting error for me.  And the library note is a typo, it's called \"function coercion\" (singular).</p>",
        "id": 199265298,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590857091
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">group_ring_action</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"n\">u₁</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">mul_action</span> <span class=\"n\">M</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">mul_action</span> <span class=\"n\">M</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_monoid</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">distrib_mul_action</span> <span class=\"n\">M</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_monoid</span> <span class=\"n\">B</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">distrib_mul_action</span> <span class=\"n\">M</span> <span class=\"n\">B</span><span class=\"o\">]</span>\n\n<span class=\"c1\">-- set_option default_priority 100 -- see Note [default priority]</span>\n<span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- Equivariant functions. -/</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">nolint</span> <span class=\"n\">has_inhabited_instance</span><span class=\"o\">]</span>\n<span class=\"kn\">structure</span> <span class=\"n\">mul_action_hom</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">to_fun</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">map_smul&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">),</span> <span class=\"n\">to_fun</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"err\">•</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"err\">•</span> <span class=\"n\">to_fun</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"kn\">notation</span> <span class=\"n\">β</span> <span class=\"bp\">`</span> <span class=\"bp\">→</span><span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">25</span> <span class=\"n\">α</span><span class=\"o\">:</span><span class=\"mi\">25</span> <span class=\"bp\">`</span><span class=\"o\">]</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">0</span> <span class=\"n\">γ</span><span class=\"o\">:</span><span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">mul_action_hom</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">mul_action_hom</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_coe_to_fun</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">→</span><span class=\"o\">[</span><span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"bp\">.</span><span class=\"n\">to_fun</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">mul_action_hom</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- Equivariant additive monoid homomorphisms. -/</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">nolint</span> <span class=\"n\">has_inhabited_instance</span><span class=\"o\">]</span>\n<span class=\"kn\">structure</span> <span class=\"n\">distrib_mul_action_hom</span> <span class=\"kn\">extends</span> <span class=\"n\">A</span> <span class=\"bp\">→</span><span class=\"o\">[</span><span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"bp\">→+</span> <span class=\"n\">B</span><span class=\"bp\">.</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- Reinterpret an equivariant additive monoid homomorphism as an additive monoid homomorphism. -/</span>\n<span class=\"n\">add_decl_doc</span> <span class=\"n\">distrib_mul_action_hom</span><span class=\"bp\">.</span><span class=\"n\">to_add_monoid_hom</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- Reinterpret an equivariant additive monoid homomorphism as an equivariant function. -/</span>\n<span class=\"n\">add_decl_doc</span> <span class=\"n\">distrib_mul_action_hom</span><span class=\"bp\">.</span><span class=\"n\">to_mul_action_hom</span>\n\n<span class=\"kn\">notation</span> <span class=\"n\">β</span> <span class=\"bp\">`</span> <span class=\"bp\">→+</span><span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">25</span> <span class=\"n\">α</span><span class=\"o\">:</span><span class=\"mi\">25</span> <span class=\"bp\">`</span><span class=\"o\">]</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">0</span> <span class=\"n\">γ</span><span class=\"o\">:</span><span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">distrib_mul_action_hom</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">distrib_mul_action_hom</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">has_coe</span> <span class=\"o\">:</span> <span class=\"n\">has_coe</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">→+</span><span class=\"o\">[</span><span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">→+</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span><span class=\"n\">to_add_monoid_hom</span><span class=\"bp\">⟩</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> instance : has_coe_to_fun (A →+[M] B) :=</span>\n<span class=\"cm\">⟨_, λ c, c.to_fun⟩ -/</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">distrib_mul_action_hom</span>\n\n<span class=\"bp\">#</span><span class=\"n\">lint</span>\n</code></pre></div>",
        "id": 199274374,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590870023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> this still has the linting error</p>",
        "id": 199274378,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590870035
    },
    {
        "content": "<p>Ugh, you commented out too much.  You need to put the <code>has_coe_to_fun</code> instance back in.</p>",
        "id": 199274767,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590870724
    },
    {
        "content": "<p>oh ok that works</p>",
        "id": 199274859,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590870881
    },
    {
        "content": "<p>but why?</p>",
        "id": 199274861,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590870887
    }
]