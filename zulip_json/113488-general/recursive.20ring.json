[
    {
        "content": "<p>Is that a bug?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">â„¤</span><span class=\"o\">)</span> <span class=\"o\">:</span>  <span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">y</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">+</span><span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">+</span><span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">y</span><span class=\"bp\">-</span><span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">ring</span><span class=\"o\">,</span>\n  <span class=\"n\">ring</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 127272896,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527626224
    },
    {
        "content": "<p>so <code>ring</code> is not idempotent ^^</p>",
        "id": 127273575,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527627085
    },
    {
        "content": "<p><code>ring</code> has a bug in it currently</p>",
        "id": 127273638,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527627151
    },
    {
        "content": "<p>I think there's an issue for it</p>",
        "id": 127273640,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527627168
    },
    {
        "content": "<p>The example in the issue actually works here</p>",
        "id": 127273728,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527627303
    },
    {
        "content": "<p>It's because when <code>ring</code> fails, it tries to rewrite the expression into a \"nice\" SOP form, and this rewriting causes it to circumvent the bug the second time around</p>",
        "id": 127273791,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527627366
    },
    {
        "content": "<p><code>begin ring, ring, ring, ring, ring, ring, ring, banana_phone end</code></p>",
        "id": 127273899,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1527627546
    },
    {
        "content": "<p>I really mean: I copy and paste the example in the github issue and it works here</p>",
        "id": 127274422,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527628183
    }
]