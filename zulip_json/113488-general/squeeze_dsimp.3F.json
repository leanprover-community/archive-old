[
    {
        "content": "<p>Is there any prospect, <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span>, of writing a <code>squeeze_dsimp</code>? I would find this very useful when debugging <code>dsimp, simp, dsimp, simp</code> fiascos.</p>",
        "id": 164817007,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1556907301
    },
    {
        "content": "<p>A related thing that would be really useful would be a method for diagnosing the need for <code>erw</code> instead of <code>rw</code>.</p>",
        "id": 164817522,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1556907630
    },
    {
        "content": "<p>Very often, <code>erw</code> can be replaced with a <code>change ..., rw</code> (i.e. change by hand the defeq thing that <code>erw</code> is finding, that <code>rw</code> can't). It would be lovely to be told what the required <code>change ...</code> actually is.</p>",
        "id": 164817588,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1556907689
    },
    {
        "content": "<p>Because often this is actually a missing refl-lemma..</p>",
        "id": 164817602,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1556907701
    },
    {
        "content": "<p>Two interesting projects. I can look into them.</p>",
        "id": 164818157,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1556908051
    },
    {
        "content": "<p>For the <code>erw</code> one, maybe I can do it by applying <code>erw</code>, then <code>rw &lt;-</code> with the same lemma. I'll see.</p>",
        "id": 164818244,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1556908084
    },
    {
        "content": "<p>What do you want it to be called?</p>",
        "id": 164818262,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1556908097
    },
    {
        "content": "<p>I like the convention of tagging a <code>?</code> onto the name</p>",
        "id": 164818288,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556908115
    },
    {
        "content": "<p>But for things in core that is hard...</p>",
        "id": 164818327,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556908142
    },
    {
        "content": "<p>We'd need to change core for that. I'm trying to make 3.5.0c backward compatible so for now, I'm not moving tactics from mathlib to core or even adding tactics that are needed in mathlib.</p>",
        "id": 164818386,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1556908192
    },
    {
        "content": "<p>I understand</p>",
        "id": 164818482,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556908233
    },
    {
        "content": "<p>Even though <code>foo?</code> should of course never appear in mathlib. These tactics are for debugging/optimizing proofs only.</p>",
        "id": 164818525,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556908276
    },
    {
        "content": "<p>Anyway... in that case I would suggest <code>squeeze_erw</code> etc</p>",
        "id": 164818546,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556908298
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 164819456,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1556909012
    }
]