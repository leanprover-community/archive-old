[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib/issues/10199\">#10199</a> I <a href=\"https://github.com/leanprover-community/mathlib/pull/10199/files#diff-26940c924403069bca6bdc4c4c74237d75e74cd9cf24b5a8a27f291becf80221R281\">tried to generalize</a> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.smul_cons\">docs#matrix.smul_cons</a> to the case <code>[has_scalar M Î±]</code>. With this generalization, Lean <a href=\"https://github.com/leanprover-community/mathlib/pull/10199/files#diff-db8b6c58bf786aa0bdff4a410f1dec3278eb522dfa3294c4950b9cbd3e2425b8R124\">fails to apply it</a> in <code>data.complex.module</code>. It can't <code>rw [ring.hom id real c]</code> but it can <code>rw [ring.hom id real c z.re]</code>. I don't understand why this happens.</p>",
        "id": 260537938,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1636235203
    },
    {
        "content": "<p>What is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ring.hom\">docs#ring.hom</a>?</p>",
        "id": 260541366,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636239928
    },
    {
        "content": "<p>Typo. <code>ring_hom.id</code> (it's in the goal before <code>simp</code>; after <code>simp</code> you have <code>c</code> instead of <code>ring_hom.id real c</code>)</p>",
        "id": 260541488,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1636240096
    }
]