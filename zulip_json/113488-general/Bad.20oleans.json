[
    {
        "content": "<p>I don't know if this counts as a bug or just something to be aware of, but if you delete a lean file without deleting its oleans, then it seems like other files which import it use the oleans which are now missing, so compilation using the exact same files can fail</p>",
        "id": 201870816,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1593016126
    },
    {
        "content": "<p>I can't quite make sense of your post, but if you're not careful with <code>git pull</code> you can end up with oleans with no lean file and they can work just fine :-) except you can't jump to definition any more.</p>",
        "id": 201875328,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593018321
    },
    {
        "content": "<p>For clarity, I mean</p>\n<div class=\"codehilite\"><pre><span></span><code>leanproject new test-oleans\n<span class=\"nb\">cd</span> test-oleans/\n<span class=\"nb\">echo</span> <span class=\"s1\">&#39;import tactic&#39;</span> &gt; src/blank.lean\n<span class=\"nb\">echo</span> <span class=\"s1\">&#39;import blank&#39;</span> &gt; src/other.lean\nleanproject build\nrm src/blank.lean\nleanpkg build\n</code></pre></div>\n\n\n<p>fails. I got caught out by this when I removed a file locally and didn't get any errors, but then CI failed</p>",
        "id": 201876278,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1593018834
    },
    {
        "content": "<p><code>leanproject build</code> works for me, as does <code>leanpkg build</code>. On Ubuntu.</p>",
        "id": 201884999,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593023122
    },
    {
        "content": "<p>Checked again -- the exact script you posted works for me.</p>",
        "id": 201885172,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593023211
    },
    {
        "content": "<p>Sorry I still wasn't clear - I don't think this should succeed, if I were to push that repo or share it in any way, it wouldn't compile, but you don't get any errors when trying locally</p>",
        "id": 201886123,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1593023693
    },
    {
        "content": "<p>This might not be a bug but it definitely caught me out when I expected any errors CI would give should also be easily reproducible locally</p>",
        "id": 201886184,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1593023726
    },
    {
        "content": "<p>Yeah, I think this was originally intended as a feature (you can distribute <code>.olean</code> files without the corresponding <code>.lean</code> files), but in the context of mathlib it's just annoying.</p>",
        "id": 201886341,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593023810
    },
    {
        "content": "<p>I would support a change where recompilation checking for an <code>.olean</code> file raises an error if the corresponding <code>.lean</code> file is missing.</p>",
        "id": 201886414,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593023842
    },
    {
        "content": "<p>Right - and this wasn't even in the context of mathlib</p>",
        "id": 201886435,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1593023850
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/113488-general/topic/Bad.20oleans/near/201886414\">said</a>:</p>\n<blockquote>\n<p>I would support a change where recompilation checking for an <code>.olean</code> file raises an error if the corresponding <code>.lean</code> file is missing.</p>\n</blockquote>\n<p>Perhaps a warning instead of an error if the feature you mention is desirable. Alternatively, something like <code>leanproject clean</code> which removes any oleans which don't have a lean file</p>",
        "id": 201886560,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1593023898
    },
    {
        "content": "<p><code>leanproject delete-zombies</code> is your friend.</p>",
        "id": 201887451,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593024279
    },
    {
        "content": "<p>Great, thanks!</p>",
        "id": 201887507,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1593024302
    },
    {
        "content": "<p>It would still be even better to fix the behavior in Lean though, because this can lead to some really confusing situations when you don't realize it is happening.</p>",
        "id": 201887632,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593024349
    },
    {
        "content": "<p>I would assume that anyone using the community version of lean doesn't need the current behavior.</p>",
        "id": 201888129,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593024567
    }
]