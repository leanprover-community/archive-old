[
    {
        "content": "<p>This is one error I can't fix in <a href=\"https://github.com/leanprover-community/mathlib/issues/835\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/835\">#835</a> -- see <a href=\"https://travis-ci.org/leanprover-community/mathlib/jobs/528542225\" target=\"_blank\" title=\"https://travis-ci.org/leanprover-community/mathlib/jobs/528542225\">https://travis-ci.org/leanprover-community/mathlib/jobs/528542225</a></p>\n<p>The error message states there is an ambiguity in using <code>mono</code> in line 466 as </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">of</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">of</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">of</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"bp\">/</span> <span class=\"n\">abs</span> <span class=\"n\">s</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">of</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>can be reduced either to <code>0 ≤ abs (of s) | abs (x - of r) ≤ of (d / abs s / 2)</code> or <code>abs (of s) ≤ 0 | of (d / abs s / 2) ≤ abs (x - of r)</code>. It suggests that I assert a side condition -- so I tried writing <code>mono using 0 ≤ abs (of s), </code> but this gives two errors for the <code>mono using ...</code> line:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">invalid</span> <span class=\"k\">begin</span><span class=\"bp\">-</span><span class=\"kn\">end</span> <span class=\"n\">expression</span><span class=\"o\">,</span> <span class=\"err\">&#39;</span><span class=\"o\">,</span><span class=\"err\">&#39;</span> <span class=\"n\">expected</span>\n</pre></div>\n\n\n<p>(all my brackets are closed, etc. -- I can't see what the problem is)</p>\n<p>and for the <code>exact le_of lt ...</code> line:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">sync</span>\n</pre></div>\n\n\n<p>Perhaps I don't understand the syntax for <code>mono using</code> -- what am I doing wrong?</p>",
        "id": 164991420,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1557156649
    },
    {
        "content": "<p>You're not posting the full error message, for one thing:</p>\n<div class=\"codehilite\"><pre><span></span>ambiguous match:\n\nmul_mono_nonpos\n0 ≥ abs (of s)\nof (d / abs s / 2) ≤ abs (x - of r)\n\nmul_mono_nonneg\n0 ≤\n  abs (of s)\nabs (x - of r) ≤ of (d / abs s / 2)\n\nTip: try asserting a side condition to distinguish between the lemmas\nstate:\nx y : ℝ*,\nr s : ℝ,\nhxr : is_st x r,\nhys : is_st y s,\nhs : s ≠ 0,\nhxr&#39; : ∀ (δ : ℝ), δ &gt; 0 → abs (x - ↑r) &lt; ↑δ,\nhys&#39; : ∀ (δ : ℝ), δ &gt; 0 → abs (y - ↑s) &lt; ↑δ,\nh : ∃ (r s : ℝ), ↑r &lt; abs x ∧ abs x &lt; ↑s,\nu : ℝ,\nh&#39; : ∃ (s : ℝ), ↑u &lt; abs x ∧ abs x &lt; ↑s,\nt : ℝ,\n_x : ↑u &lt; abs x ∧ abs x &lt; ↑t,\n_fun_match : ↑u &lt; abs x ∧ abs x &lt; ↑t → is_st (x * y) (r * s),\nhu : ↑u &lt; abs x,\nht : abs x &lt; ↑t,\nd : ℝ,\nhd : d &gt; 0\n⊢ abs (x - of r) * abs (of s) ≤ of (d / abs s / 2) * abs (of s)\n</pre></div>\n\n\n<p>And you're not revising for my exam, that's another thing ;-)</p>",
        "id": 164999085,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1557162122
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">mono</span> <span class=\"k\">with</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">of</span> <span class=\"n\">s</span><span class=\"o\">),</span> <span class=\"n\">swap</span><span class=\"o\">,</span>  <span class=\"n\">exact</span> <span class=\"n\">le_of_lt</span> <span class=\"o\">(</span><span class=\"n\">hxr&#39;</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">half_pos</span> <span class=\"o\">(</span><span class=\"n\">div_pos</span> <span class=\"n\">hd</span> <span class=\"o\">(</span><span class=\"n\">abs_pos_of_ne_zero</span> <span class=\"n\">hs</span><span class=\"o\">)))),</span>\n        <span class=\"n\">apply</span> <span class=\"n\">abs_nonneg</span><span class=\"o\">,</span>\n</pre></div>\n\n\n<p>seems to deal with it (you probably know what's going on better than I do with the swap and can fix things up better)</p>",
        "id": 164999436,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1557162380
    },
    {
        "content": "<p>Ah, it's <code>with</code> -- I thought the keyword was <code>using</code> for some reason. Thanks.</p>",
        "id": 165000464,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1557163199
    },
    {
        "content": "<p>I just hovered over <code>mono</code> and read the docs. For all I know it changed...</p>",
        "id": 165005618,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1557166888
    },
    {
        "content": "<p>that's a surprisingly helpful error message. Thanks Simon!</p>",
        "id": 165023839,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1557181013
    }
]