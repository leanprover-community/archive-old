[
    {
        "content": "<p>It's like the third time in a row that Yury adds the <strong>same lemma</strong> as me under the <strong>same name</strong></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span> <span class=\"n\">HEAD</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">coe_pi_finset</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">δ</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">fintype.pi_finset</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">δ</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">set.univ</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">pi</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">t</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">set.ext</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">set.mem_univ_pi</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">fintype.mem_pi_finset</span> <span class=\"o\">}</span>\n<span class=\"bp\">=======</span>\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">coe_pi_finset</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">δ</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">pi_finset</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">δ</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">set.pi</span> <span class=\"n\">set.univ</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">t</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">}</span>\n<span class=\"bp\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"n\">origin</span><span class=\"bp\">/</span><span class=\"n\">master</span>\n</code></pre></div>\n<p>I'm starting to think people steal stuff from my branches <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 262320780,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1637589210
    },
    {
        "content": "<p>Genuinely though, this shows that our naming convention is very robust. We're one hive mind.</p>",
        "id": 262321008,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1637589329
    },
    {
        "content": "<p>I was super-skeptical about the naming convention when I had it explained to me -- I was basically \"just call everything <code>lemma345345</code>, it's no different, this isn't going to scale anyway\". It scales much much further than I had imagined.</p>",
        "id": 262327456,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1637592134
    },
    {
        "content": "<p>I use duplicate definition errors as <code>library_search</code></p>",
        "id": 262327947,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1637592390
    }
]