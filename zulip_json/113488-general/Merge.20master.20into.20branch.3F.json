[
    {
        "content": "<p>I have an open PR <a href=\"https://github.com/leanprover-community/mathlib/issues/5014\">#5014</a> which contains a lemma that I needed at the time of writing it, but another more recent PR of mine (<a href=\"https://github.com/leanprover-community/mathlib/issues/5026\">#5026</a>) was merged with another more general lemma that renders the old one redundant. I want to use the new lemma, but it is not in the branch of PR <a href=\"https://github.com/leanprover-community/mathlib/issues/5014\">#5014</a>. What do I do? Do I just merge master into the branch of <a href=\"https://github.com/leanprover-community/mathlib/issues/5014\">#5014</a> (branch Lp_space_neg_add), even if it clutters the PR with many commits  from many authors? Is there a cleaner way?</p>\n<p>Of course the best way to proceed would have been to realize first that I could write the general lemma and PR it first, but that is not what happened.</p>",
        "id": 217245073,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1605777955
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"350992\">@Rémy Degenne</span> You can <code>git rebase master</code> (after checking out your PR branch)</p>",
        "id": 217245198,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1605778046
    },
    {
        "content": "<p>If you merge master into your branch, github should only show the merge commit, not everything that landed in between</p>",
        "id": 217245222,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1605778068
    },
    {
        "content": "<p>But merging master is also a valid option, and it means that you will not have to force-push</p>",
        "id": 217245223,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1605778068
    },
    {
        "content": "<p>We don't really care about ugly history, it get's squashed anyway when the PR is merged into master.</p>",
        "id": 217245278,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1605778095
    },
    {
        "content": "<p>Ok, thanks. If merging is fine, I'll do that.</p>",
        "id": 217245342,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1605778145
    },
    {
        "content": "<p>Yes, please do merge master. And then I'll review!</p>",
        "id": 217245399,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1605778191
    },
    {
        "content": "<p>(I thought the documentation said not to rebase, but I can't find that anymore. Must've dreamed it.)</p>",
        "id": 217245489,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1605778236
    },
    {
        "content": "<p>I can't remember if it's in any of our documentation, but I think the general recommendation is to avoid rebasing after people start reviewing the PR since GitHub can't put the review comments in the right place after the rebase.</p>",
        "id": 217290693,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1605801951
    }
]