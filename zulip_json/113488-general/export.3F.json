[
    {
        "content": "<p>From lean core:</p>",
        "id": 127995777,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528876988
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">class</span> <span class=\"n\">has_pow</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">pow</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"kn\">export</span> <span class=\"n\">has_andthen</span> <span class=\"o\">(</span><span class=\"n\">andthen</span><span class=\"o\">)</span>\n<span class=\"kn\">export</span> <span class=\"n\">has_pow</span> <span class=\"o\">(</span><span class=\"n\">pow</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 127995779,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528876994
    },
    {
        "content": "<p>What does <code>export</code> do? The line reminds me of those old batman TV shows.</p>",
        "id": 127995786,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877033
    },
    {
        "content": "<p>like <code>open</code></p>",
        "id": 127995829,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1528877091
    },
    {
        "content": "<p>oh I just remembered <code>#help</code></p>",
        "id": 127995833,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877098
    },
    {
        "content": "<p><code>export: create aliases for declarations</code></p>",
        "id": 127995835,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877102
    },
    {
        "content": "<p>At the end of the day, does this just mean that <code>pow</code> can be used instead of <code>has_pow.pow</code>?</p>",
        "id": 127995846,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877148
    },
    {
        "content": "<p>Aah -- does it mean that this is true globally?</p>",
        "id": 127995886,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877177
    },
    {
        "content": "<p>I see -- <code>#check pow</code> seems to work fine in a new file</p>",
        "id": 127995890,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877206
    },
    {
        "content": "<p>so it's open on steroids</p>",
        "id": 127995894,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877223
    },
    {
        "content": "<p>\"open and never close\"?</p>",
        "id": 127995899,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877231
    },
    {
        "content": "<p>No, I guess that is an artifact of the fact that it is in core.</p>",
        "id": 127995954,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1528877348
    },
    {
        "content": "<p>Hmm, no... that is not what I meant.</p>",
        "id": 127995963,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1528877372
    },
    {
        "content": "<blockquote>\n<p>\"open and never close\"?</p>\n</blockquote>\n<p>Yes, basically. You can locally \"close\" it with <code>hide</code>.</p>",
        "id": 127995966,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1528877396
    },
    {
        "content": "<p>Thanks Sebastian.</p>",
        "id": 127996018,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877452
    },
    {
        "content": "<p>The reason I asked was that I noticed that if I import <code>tactic.ring</code> then I can do <code>a ^ 2</code> for a in a <code>comm_ring</code>, but I can't do this otherwise. I was just trying to figure out where that instance was defined, but I don't know how to do this, short of looking at what <code>tactic.ring</code> imports and importing all of those things instead, until I finally find the import which actually makes it work.</p>",
        "id": 127996073,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877535
    },
    {
        "content": "<p>That's one approach -- and searching for has_pow.pow is another, but actually I should just search for <code>pow</code> perhaps</p>",
        "id": 127996075,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877576
    },
    {
        "content": "<p>Got it -- obviously to get powers in a ring the key import is <code>group_power.lean</code> ;-)</p>",
        "id": 127996085,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877625
    },
    {
        "content": "<p>[mumble mumble monoid]</p>",
        "id": 127996088,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1528877637
    }
]