[
    {
        "content": "<p>I have this MWE : </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.finset</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">finset</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">∉</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">⊆</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">∉</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">suggest</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>Suggest give three exact for this : </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">exact</span> <span class=\"n\">mt</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"n\">h₁</span>\n<span class=\"n\">exact</span> <span class=\"n\">not.imp</span> <span class=\"n\">h₁</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">exact</span> <span class=\"n\">not_imp_not.mpr</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"n\">h₁</span>\n</code></pre></div>\n<p>Problem no one  work, they are all type mismatch</p>",
        "id": 250184907,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1629503324
    },
    {
        "content": "<p><code>(h₂ s)</code> should be <code>h₂</code> in all of those</p>",
        "id": 250185219,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629503715
    },
    {
        "content": "<p>I'm guessing suggest is confused by the {{}} binders</p>",
        "id": 250185231,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629503746
    },
    {
        "content": "<p>That what i thought too, but it doesn't work neither</p>",
        "id": 250185746,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1629504242
    },
    {
        "content": "<p>Unfortunately this is just a general class of \"the pretty printer doesn't always round trip\" deficiencies in Lean3. No one is going to do anything about this, but things look to be much better in Lean4.</p>",
        "id": 250186106,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1629504608
    },
    {
        "content": "<p>There's nothing in <code>suggest</code> per se that could be changed to ameliorate this.</p>",
        "id": 250186121,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1629504628
    },
    {
        "content": "<p>Meeeh.</p>",
        "id": 250186248,
        "sender_full_name": "Alice Laroche",
        "timestamp": 1629504810
    },
    {
        "content": "<p>The output of <code>suggest</code> is still useful: you can't just copy-paste, but it does tell you that those functions really can close the goal --- you're just going to have to work out the syntax yourself. :-)</p>",
        "id": 250186334,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1629504904
    },
    {
        "content": "<p>They are not spurious results --- <code>suggest</code> really did find a term that solves the goal, it just printed badly.</p>",
        "id": 250186347,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1629504929
    },
    {
        "content": "<p>In this case you can replace <code>(h₂ s)</code> by <code>(@h₂ s)</code></p>",
        "id": 250197254,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1629521739
    }
]