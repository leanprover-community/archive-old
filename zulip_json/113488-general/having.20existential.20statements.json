[
    {
        "content": "<p>My student <span class=\"user-mention\" data-user-id=\"137449\">@Aditya Agarwal</span>  has some code that has many instances of the following pattern:</p>\n<div class=\"codehilite\"><pre><span></span>have h2_irred : ∃(c&#39; : α) (d&#39; : polynomial α), (primitive d&#39;) ∧ ((C c&#39;) * d&#39; = d) := has_primitive_factorisation d,\napply exists.elim h2_irred,\nintros c&#39; hc&#39;,\napply exists.elim hc&#39;,\nintros d&#39; hd&#39;,\n</pre></div>\n\n\n<p>Is there a more efficient means to achieve this <code>have/apply exists.elim/intros</code> effect?</p>",
        "id": 158570616,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1550182898
    },
    {
        "content": "<p>what is the goal?</p>",
        "id": 158570847,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550183055
    },
    {
        "content": "<p><code>rcases has_primitive_factorization_d with &lt;c', d', hc', hd'&gt;</code>?</p>",
        "id": 158571153,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1550183322
    },
    {
        "content": "<p>I think the <code>apply exists.intro</code>/<code>intros</code> can be combined into <code>cases</code> or <code>rcases</code>. Thus:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">rcases</span> <span class=\"n\">has_primitive_factorisation</span> <span class=\"n\">d</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">c&#39;</span><span class=\"o\">,</span> <span class=\"n\">d&#39;</span><span class=\"o\">,</span> <span class=\"n\">primd</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n</pre></div>",
        "id": 158571157,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550183325
    },
    {
        "content": "<p>Mario is really getting old</p>",
        "id": 158571190,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1550183358
    },
    {
        "content": "<p>He took the time to type it with the proper angle brackets.</p>",
        "id": 158571215,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1550183382
    },
    {
        "content": "<p>I went for coffee :)</p>",
        "id": 158571219,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550183386
    },
    {
        "content": "<p>Those <code>rintro</code> and <code>rcases</code> really give me trouble with my students. I wanted to use a minimal set of tactics, at least in the beginning. So I didn't introduce those. But it's too painful...</p>",
        "id": 158571351,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1550183471
    },
    {
        "content": "<p>I think it's better to learn <code>rcases</code> style than <code>cases</code>. You can start by saying it's the same as <code>cases</code> but with funny brackets, and then work it up to bigger tuples later</p>",
        "id": 158571764,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550183835
    },
    {
        "content": "<p>I think it's pretty intuitive if you haven't seen <code>cases</code> yet</p>",
        "id": 158571852,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550183897
    },
    {
        "content": "<blockquote>\n<p>Those <code>rintro</code> and <code>rcases</code> really give me trouble with my students. I wanted to use a minimal set of tactics, at least in the beginning. So I didn't introduce those. But it's too painful...</p>\n</blockquote>\n<p>Patrick this is something I was alluding to yesterday. We know so many tactics and function names that we have forgotten how completely intimidating it is for beginners.</p>",
        "id": 158603492,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1550225035
    },
    {
        "content": "<p>We're teaching tactics this week in ITP class, and it's a struggle indeed. We need a better cheat sheet</p>",
        "id": 158604036,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550225586
    },
    {
        "content": "<p>If you tell people about <code>intro</code>, <code>cases</code>, <code>apply</code>, <code>exact</code>, <code>by_cases</code>, <code>contradiction</code>, <code>by_contradiction</code>, <code>split</code>, <code>existsi</code> already their heads are exploding</p>",
        "id": 158604103,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550225653
    },
    {
        "content": "<p>it's difficult to just hold them all in short term memory</p>",
        "id": 158604124,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550225684
    },
    {
        "content": "<blockquote>\n<p>If you tell people about <code>intro</code>, <code>cases</code>, <code>apply</code>, <code>exact</code>, <code>by_cases</code>, <code>contradiction</code>, <code>by_contradiction</code>, <code>split</code>, <code>existsi</code> already their heads are exploding</p>\n</blockquote>\n<p><del><code>existsi</code></del> <code>use</code></p>",
        "id": 158604144,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1550225710
    },
    {
        "content": "<p>We haven't started on mathlib yet</p>",
        "id": 158604150,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550225720
    },
    {
        "content": "<p>Poor students.</p>",
        "id": 158604159,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1550225729
    },
    {
        "content": "<p>the head exploding will only get worse</p>",
        "id": 158604160,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550225729
    },
    {
        "content": "<p>also <code>left</code>, <code>right</code>, <code>constructor</code></p>",
        "id": 158604251,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550225826
    },
    {
        "content": "<p>and this is just for proving little FOL goals</p>",
        "id": 158604262,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550225848
    },
    {
        "content": "<p>Of course once we move to mathlib the common tactic list gets a bit different: <code>use</code>, <code>rintro</code>, <code>rcases</code>, <code>tauto</code>,<code>tidy</code>,<code>finish</code></p>",
        "id": 158604368,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550225999
    },
    {
        "content": "<p>oh also <code>have</code> and <code>show</code> of course. I'm teaching this stuff and I can't even remember them all</p>",
        "id": 158604494,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550226100
    },
    {
        "content": "<p>you mean <code>simp only</code>, <code>use</code>, <code>rintro</code>, <code>rcases</code>, <code>rw</code></p>",
        "id": 158604495,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550226102
    },
    {
        "content": "<p>oh right <code>rw</code> and <code>simp</code> too</p>",
        "id": 158604500,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550226114
    },
    {
        "content": "<p><code>simp</code> doesn't exist</p>",
        "id": 158604543,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550226125
    },
    {
        "content": "<p>These are new kids, no way I can explain compile times</p>",
        "id": 158604552,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550226153
    },
    {
        "content": "<p>better to have blasty stuff first</p>",
        "id": 158604556,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550226164
    },
    {
        "content": "<p>seriously the information overload is palpable</p>",
        "id": 158604583,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550226194
    },
    {
        "content": "<p>They're mathematicians in some cases, so the blasty stuff includes linarith, norm_num and ring</p>",
        "id": 158604879,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1550226550
    },
    {
        "content": "<p>all three of those are a very small subset of <code>by schoolkid</code></p>",
        "id": 158604885,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1550226574
    },
    {
        "content": "<p>I don't know if the word has the same connotations in the US -- in the UK this means \"someone who has not gone to university yet and is still in the K-12 school system\"</p>",
        "id": 158604952,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1550226613
    },
    {
        "content": "<p>but they learn <code>(a+b)^3=a^3+...</code> there</p>",
        "id": 158604967,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1550226640
    },
    {
        "content": "<p>I'm not sure what we will do about teaching the heavy hitter tactics. We've only discussed <code>simp</code> so far</p>",
        "id": 158605003,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550226704
    },
    {
        "content": "<p>I'm not talking about the lies they learn, like the definition of sine and that its derivative is cosine, I'm talking about the facts they do learn which we allow them to use at university like the expansion of (a+b)^3</p>",
        "id": 158605006,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1550226709
    },
    {
        "content": "<p>In fact as a student perhaps it's really bewildering -- for them (a+b)^3=a^3+... and derivative of sine is cosine are both \"stuff we learnt at school\", so how some one of them is valid in the analysis class and the other one suddenly isn't?</p>",
        "id": 158605064,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1550226757
    },
    {
        "content": "<p>I'm not sure what you're getting at</p>",
        "id": 158605078,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550226794
    },
    {
        "content": "<p>We're going bottom up. One assignment this week was proving <code>log (x * y) = log x + log y</code> given <code>exp (x + y) = exp x * exp y</code> and <code>log</code>/<code>exp</code> inverse laws</p>",
        "id": 158605143,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550226860
    },
    {
        "content": "<p>it's all calc blocks and <code>rw</code></p>",
        "id": 158605149,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550226873
    },
    {
        "content": "<p>no blasty stuff</p>",
        "id": 158605154,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550226882
    },
    {
        "content": "<p>I'm just thinking about how my own students must be confused when they come to university, because we tell them to unlearn a random subset of what they have learnt</p>",
        "id": 158605162,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1550226895
    },
    {
        "content": "<p>to learn something you must first unlearn it</p>",
        "id": 158605179,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550226920
    },
    {
        "content": "<p>since we tightly control the facts they have available to use, it's clear what is and isn't usable for the proof</p>",
        "id": 158605185,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550226938
    },
    {
        "content": "<p>Isn't there a chicken and egg problem there?</p>",
        "id": 158605187,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1550226942
    },
    {
        "content": "<blockquote>\n<p>We're going bottom up. One assignment this week was proving <code>log (x * y) = log x + log y</code> given <code>exp (x + y) = exp x * exp y</code> and <code>log</code>/<code>exp</code> inverse laws</p>\n</blockquote>\n<p>That's a nice question. Are your problem sets available online? It's time we made a resource for this stuff. Basic Lean questions. In the teaching thread maybe.</p>",
        "id": 158605238,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1550226996
    },
    {
        "content": "<p>I think starting from all of math and whittling down to things that are in mathlib seems like an exercise in frustration, but probably is the path that the advanced mathematicans go through in coming to lean</p>",
        "id": 158605239,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550226997
    },
    {
        "content": "<p>Not online, on Cocalc. <span class=\"user-mention\" data-user-id=\"110865\">@Jeremy Avigad</span> is leading the class, ask him</p>",
        "id": 158605257,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550227031
    },
    {
        "content": "<p>I'm just the TA</p>",
        "id": 158605260,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550227063
    }
]