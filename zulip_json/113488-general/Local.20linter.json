[
    {
        "content": "<p>Is the local linter (i.e. the one we can run locally with <code>#lint</code>) not automatically updated to be the same as on github? I've been caught out several times now by the 100 char per line linter on github, because it doesn't run locally.</p>",
        "id": 220120004,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1608128139
    },
    {
        "content": "<p>The 100 lines check is actually a python script, rather than a linter written in lean<br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/master/scripts/lint-copy-mod-doc.py\">https://github.com/leanprover-community/mathlib/blob/master/scripts/lint-copy-mod-doc.py</a></p>",
        "id": 220120124,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1608128207
    },
    {
        "content": "<p>The style linter doesn't work from inside lean</p>",
        "id": 220120134,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608128216
    },
    {
        "content": "<p>I would assume there is a way to run it locally...?</p>",
        "id": 220120154,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608128238
    },
    {
        "content": "<p>Yeah the shell script  <a href=\"https://github.com/leanprover-community/mathlib/blob/master/scripts/lint-copy-mod-doc.sh\">https://github.com/leanprover-community/mathlib/blob/master/scripts/lint-copy-mod-doc.sh</a> does so.</p>",
        "id": 220120180,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1608128267
    },
    {
        "content": "<p>As mentioned in the other thread, lean 3's support for understanding its own syntax is really poor, so we can't do anything like \"nonterminal simp check\" or \"line length\" or \"indentation\" linting from a lean metaprogram</p>",
        "id": 220120275,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608128319
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 220120767,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1608128600
    }
]