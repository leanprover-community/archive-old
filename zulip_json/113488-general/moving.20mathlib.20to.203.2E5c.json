[
    {
        "content": "<p>I'm looking into transitioning mathlib to <a href=\"https://github.com/leanprover-community/lean\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean\">Lean 3.5c</a> now. This will allow us to take advantage of various features, bug fixes, etc that have been implemented there. The current version is backward compatible -- mathlib builds under both 3.4.2 and 3.5c right now. But this will probably change in the future.</p>\n<p>Right now, the upgrade path looks easy enough: we change mathlib's <code>leanpkg.toml</code> to read <code>lean_version = \"leanprover-community/lean:3.5.0\"</code>. Any user running <code>elan</code> just needs to run <code>leanpkg configure</code> in mathlib root, and <code>elan</code> should find the binary. Projects that use mathlib as a dependency should do similar, with <code>leanpkg upgrade</code> to bump mathlib to a 3.5 version. </p>\n<p>At the same time we change <code>leanpkg.toml</code>, we'll change the CI to push 3.5.0 nightlies. I think this means <code>update-mathlib</code> and <code>cache-olean</code> should continue to work seamlessly, and shouldn't break on older commits from before the change.</p>\n<p>Maybe I'm too optimistic -- what am I missing? What will break?</p>",
        "id": 186903553,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580316006
    },
    {
        "content": "<p>Let's find out!</p>",
        "id": 186904725,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1580316638
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> might have a few things to say here. I know he doesn't follow the blessed path and other users don't either.</p>",
        "id": 186907572,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1580318299
    },
    {
        "content": "<p>There are some PRs to 3.5c that I think might as well be merged before a move. 87, 97, and 99 look pretty unobjectionable. 88 would be great too. I tagged a handful that I think would be backward compatible, but we don't necessarily need all of them.</p>",
        "id": 186907691,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580318398
    },
    {
        "content": "<p>I wasn't using elan until about two hours ago; it's a painless switch. Power users should be able to upgrade their lean version on their own, I guess. I'm not sure how many non-power users we have who aren't using elan.</p>",
        "id": 186907855,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580318493
    },
    {
        "content": "<p>The travis build has (or had?) a daily cron job to compile itself with 3.5. Has it made it to the Github Actions?</p>",
        "id": 186907881,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1580318511
    },
    {
        "content": "<p>Right now Actions compiles mathlib with 3.4.2 and the 3.5c nightly every build.</p>",
        "id": 186907965,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580318542
    },
    {
        "content": "<p>The only change there will be removing the 3.4.2 build and switching 3.5c from nightly to a particular release.</p>",
        "id": 186907993,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580318567
    },
    {
        "content": "<p>Or just changing 3.4.2 to a 3.5c release, if we want to keep testing the nightlies.</p>",
        "id": 186908027,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580318592
    },
    {
        "content": "<p>BTW, one of the CI checks on leanprover-community/lean is failing right now. It doesn't look significant. But might be nice to get that working when we switch.</p>",
        "id": 186908152,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580318678
    },
    {
        "content": "<p>What check is that?</p>",
        "id": 186908174,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1580318697
    },
    {
        "content": "<p>See the build here: <a href=\"https://github.com/leanprover-community/lean/pull/99\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/pull/99\">https://github.com/leanprover-community/lean/pull/99</a></p>",
        "id": 186908221,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580318728
    },
    {
        "content": "<p>It's a doc PR so I don't think I broke anything!</p>",
        "id": 186908232,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580318739
    },
    {
        "content": "<p>The failure is <a href=\"https://travis-ci.org/leanprover-community/lean/jobs/642450218#L190\" target=\"_blank\" title=\"https://travis-ci.org/leanprover-community/lean/jobs/642450218#L190\">here</a>; looks totally unrelated, so hopefully it should work if restarted.</p>",
        "id": 186908348,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1580318814
    },
    {
        "content": "<p>The same problem shows up on a build on <a href=\"https://github.com/leanprover-community/lean/pull/100\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/pull/100\">Anne's PR</a> from earlier today. But it could be a temporary thing, yeah.</p>",
        "id": 186908477,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580318887
    },
    {
        "content": "<p>A related question, how hard is it to direct elan to a local Lean build? I think <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> mentioned doing this at some point?</p>",
        "id": 186908765,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580319092
    },
    {
        "content": "<p>I've been doing it; I don't remember the details but it wasn't hard. I think I just followed the instructions from the command line help.</p>\n<p><strong>edit</strong>: try <code>elan toolchain help link</code></p>",
        "id": 186908952,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1580319231
    },
    {
        "content": "<p>I still vote that <code>rintro</code> should replace <code>intro</code> in the core library (the interactive versions of course).</p>",
        "id": 186912091,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1580321190
    },
    {
        "content": "<p>Also issue <a href=\"https://github.com/leanprover-community/mathlib/issues/95\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/95\">#95</a> should be fixable without breaking anything.</p>",
        "id": 186912133,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1580321225
    },
    {
        "content": "<blockquote>\n<p>I still vote that <code>rintro</code> should replace <code>intro</code> in the core library (the interactive versions of course).</p>\n</blockquote>\n<p>This might be a surprisingly big refactor. <code>rintro</code> would have to be implemented without depending on anything that uses <code>intro</code>. Possible, but it will take work. I guess we could rename <code>intro</code> to <code>intro'</code> and bootstrap.</p>",
        "id": 186934626,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580336134
    },
    {
        "content": "<p>This is why I said \"the interactive version\". Of course we would still use <code>tactic.intro</code>. And if this is not enough then indeed we can rename <code>intro</code> to <code>intro'</code>. We can even call it updating <code>stage0</code> or whatever sounds like Lean4 bootstrapping.</p>",
        "id": 186935008,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1580336465
    },
    {
        "content": "<p>I don't think the implementation of <code>rintro</code> uses <code>tactic.interactive.intro</code> at all, and in any case <code>tactic.intro</code> is essentially the same thing</p>",
        "id": 186948444,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1580349071
    },
    {
        "content": "<p>if we want a noninteractive version of <code>rintro</code>, it will have a much more complicated type because it creates a complicated hierarchy of subgoals</p>",
        "id": 186948505,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1580349136
    },
    {
        "content": "<p><code>rintro</code> depends on <code>dlist</code>, and interactive <code>intro</code> is used in proofs in some of the core <code>dlist</code> definitions. I'm not saying there's any theoretical reason intro needs to be implemented first, but disentangling them will take effort.</p>",
        "id": 186968369,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580378029
    },
    {
        "content": "<p>We don't need <code>dlist</code></p>",
        "id": 186974542,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1580382500
    },
    {
        "content": "<p>I just use <code>list A -&gt; list A</code> most of the time</p>",
        "id": 186974557,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1580382515
    },
    {
        "content": "<p>I just noticed this issue on community Lean: <a href=\"https://github.com/leanprover-community/lean/issues/98\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/issues/98\">https://github.com/leanprover-community/lean/issues/98</a></p>",
        "id": 186980964,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580387959
    },
    {
        "content": "<p>We should check that Windows elan is happy with the 3.5c release version before making the change official.</p>",
        "id": 186981002,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580387992
    },
    {
        "content": "<p>We should also look into the nightlies issue, of course, but that doesn't have to block the switch.</p>",
        "id": 186981079,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580388031
    },
    {
        "content": "<p>Does olean-rs still work with oleans from 3.5c? I know they store additional information now.</p>",
        "id": 186984907,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580390409
    },
    {
        "content": "<p>AFAICT olean-rs isn't used anywhere critical, so this also doesn't have to block the switch if there are issues. But we should at least be aware.</p>",
        "id": 186984976,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580390477
    },
    {
        "content": "<p>(I guess this is a question mostly for <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> and <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> )</p>",
        "id": 186985102,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580390578
    },
    {
        "content": "<p>I created a branch for the move. Let me know if you notice any missing changes. <a href=\"https://github.com/leanprover-community/mathlib/tree/update-3-5\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/tree/update-3-5\">https://github.com/leanprover-community/mathlib/tree/update-3-5</a></p>",
        "id": 186989610,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580393504
    },
    {
        "content": "<p>I'll see if it builds with my Windows laptop when I get home.</p>",
        "id": 186989700,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580393532
    },
    {
        "content": "<p>In the meantime, is there other infrastructure that needs to be updated? I don't see anything 3.4.2-specific in the scripts repo.</p>",
        "id": 186991137,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580394331
    },
    {
        "content": "<p>What is new in the olean files?</p>",
        "id": 187011517,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1580406595
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/commit/354deadc203454b76f72f325e7c566f10adf52e1\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/commit/354deadc203454b76f72f325e7c566f10adf52e1\">https://github.com/leanprover-community/lean/commit/354deadc203454b76f72f325e7c566f10adf52e1</a> at least</p>",
        "id": 187012306,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580407048
    },
    {
        "content": "<p>Note that I changed that again later, introducing a new <code>mod_doc</code> object to .olean files <a href=\"https://github.com/leanprover-community/lean/pull/81/files#diff-ae4f52a26f45f3835b747fe8b1d53b71R425\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/pull/81/files#diff-ae4f52a26f45f3835b747fe8b1d53b71R425\">here</a> (the diff above is a backwards-compatible change as far as olean-rs is concerned since it doesn't change the format).</p>",
        "id": 187039341,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1580424144
    },
    {
        "content": "<p>Windows, OS X, and Ubuntu all seem happy to build a 3.5 mathlib with elan. There's a leanpkg warning (on all systems) we should fix first: <a href=\"https://github.com/leanprover-community/lean/issues/105\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/issues/105\">https://github.com/leanprover-community/lean/issues/105</a></p>",
        "id": 187070102,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580464992
    },
    {
        "content": "<p>So we should:</p>\n<ul>\n<li>fix the leanpkg warning</li>\n<li>merge anything else to leanprover-community/lean that's ready to go</li>\n<li>make a 3.5.1 release</li>\n<li>update <a href=\"https://github.com/leanprover-community/mathlib/tree/update-3-5\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/tree/update-3-5\">https://github.com/leanprover-community/mathlib/tree/update-3-5</a> for 3.5.1</li>\n</ul>\n<p>and then I think we're ready.</p>",
        "id": 187070236,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580465109
    },
    {
        "content": "<p>What is the difference between 3.5.0 and 3.5.1? Sorry for the naive question</p>",
        "id": 187074752,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1580469688
    },
    {
        "content": "<p>Nothing much. There have been PRs merged to Lean since the 3.5.0 release that I'd like to include before we switch.</p>",
        "id": 187077387,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580472525
    },
    {
        "content": "<p>BTW, would it break compatibility if we <code>export has_insert.insert</code> to the root namespace instead of creating another <code>def</code>?</p>",
        "id": 187135094,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580514129
    },
    {
        "content": "<p>Another question: are we going to move algebraic structures from stdlib to mathlib before lean4?</p>",
        "id": 187135136,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580514190
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> / anyone else maintaining 3.5: would it be possible to take care of the first three bullet points above soon? I think <a href=\"https://github.com/leanprover-community/lean/pull/106\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/pull/106\">https://github.com/leanprover-community/lean/pull/106</a> is the only PR that really needs to make it in before we switch. Then we just need a release.</p>",
        "id": 187372787,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580833170
    },
    {
        "content": "<p>I can do the rest from the mathlib side.</p>",
        "id": 187372807,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580833186
    },
    {
        "content": "<p>Ok, I just merged a few PRs. Once, they finish building, we can make a release.</p>",
        "id": 187378189,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1580836608
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 187378905,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580837098
    },
    {
        "content": "<p>BTW, do you plan to introduce any non-bc changes to 3.*?</p>",
        "id": 187382462,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580839222
    },
    {
        "content": "<p>(after this release)</p>",
        "id": 187382471,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580839228
    },
    {
        "content": "<p>yes, not in 3.5.0c but soon enough.</p>",
        "id": 187384839,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1580840663
    },
    {
        "content": "<p>some changes to core cannot be done without breaking backward compatibility (for example, changing <code>discrete_field</code> to <code>field</code> or <code>congr'</code> to <code>congr</code>)</p>",
        "id": 187384948,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1580840750
    },
    {
        "content": "<blockquote>\n<p>some changes to core cannot be done without breaking backward compatibility (for example, changing <code>discrete_field</code> to <code>field</code> or <code>congr'</code> to <code>congr</code>)</p>\n</blockquote>\n<p>I guess one could just have an import which defines <code>discrete_field</code> to be <code>field</code> etc? I guess this idea only goes so far though.</p>",
        "id": 187385610,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1580841212
    },
    {
        "content": "<p>Do you collect proposed changes somewhere? I'd like to have <code>export has_insert (instert)</code> instead of a <code>def</code>.</p>",
        "id": 187385875,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580841407
    },
    {
        "content": "<p>We can create an issue for those proposed changes.</p>",
        "id": 187386284,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1580841699
    },
    {
        "content": "<p>The release was created, the binaries are now available for Linux, we just have to wait for the other builds to finish:</p>\n<p><a href=\"https://github.com/leanprover-community/lean/releases/tag/v3.5.1\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/releases/tag/v3.5.1\">https://github.com/leanprover-community/lean/releases/tag/v3.5.1</a></p>",
        "id": 187391326,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1580844495
    },
    {
        "content": "<p>Awesome, thanks Simon! I'll finish things from the mathlib side tomorrow.</p>",
        "id": 187408612,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580856461
    },
    {
        "content": "<p>An issue for \"core library changes\" is a good idea. Renamings, small lemma changes, etc.</p>",
        "id": 187408670,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580856496
    },
    {
        "content": "<p>I think the first mathlib bump should be backward compatible. But 3.5.2 (or 3.6?) can break compatibility, and I don't think we need to wait that long to make the switch.</p>",
        "id": 187408716,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580856549
    },
    {
        "content": "<p>Let's see if there are any technical issues with the upgrade first.</p>",
        "id": 187408749,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580856581
    },
    {
        "content": "<p>CI is happy with the move: <a href=\"https://github.com/leanprover-community/mathlib/issues/1958\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1958\">#1958</a></p>",
        "id": 187446524,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580903455
    },
    {
        "content": "<p>Report any version-related disasters here!</p>",
        "id": 187447799,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580904831
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> for all the effort you've spent on this migration</p>",
        "id": 187448006,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580905040
    },
    {
        "content": "<p>Where can I read about new features of Lean / stdlib we can use now?</p>",
        "id": 187502462,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580942146
    },
    {
        "content": "<p>The <a href=\"https://github.com/leanprover-community/lean/blob/master/doc/changes.md\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/blob/master/doc/changes.md\">changelog</a> has some descriptions. It should probably be updated for the ones that landed just recently. You can also look at the <a href=\"https://github.com/leanprover-community/lean/commits/master\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/commits/master\">recent commits</a>.</p>",
        "id": 187503361,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1580942923
    },
    {
        "content": "<p>What is the current status of the Lean version change? How is it meant to work for project using mathlib?</p>",
        "id": 187731326,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581195622
    },
    {
        "content": "<p>I tried to bump mathlib is the perfectoid project, changing our leanpkg.toml to have the same lean_version line as mathlib. But then update-mathlib doesn't seem to work.</p>",
        "id": 187731345,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581195671
    },
    {
        "content": "<p>I guess this breaks the convention that the lean-3.4.2 branch was to be used.</p>",
        "id": 187731354,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581195693
    },
    {
        "content": "<p>Or maybe not. It seems leanpkg upgrade bumped mathlib to the commit corresponding to the latest nightly. But it still recompiles...</p>",
        "id": 187731420,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581195788
    },
    {
        "content": "<p>I tried on an external project a day after the change. Updating the lean_version and <code>leanpkg upgrade</code> worked just fine. Do you need to touch the oleans?</p>",
        "id": 187755285,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1581246935
    },
    {
        "content": "<p>At least this is what I ended up doing yesterday.</p>",
        "id": 187758729,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581254488
    },
    {
        "content": "<p>I'll see what happens with the next nightly.</p>",
        "id": 187758739,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581254517
    },
    {
        "content": "<p>I didn't pay enough attention, did the fix to <code>change</code> made it into the Lean version mathlib is now using?</p>",
        "id": 187857522,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581368433
    },
    {
        "content": "<p>Yes it did</p>",
        "id": 187859705,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1581369882
    },
    {
        "content": "<p>Nice, I should resume work on <code>rename_var</code> then.</p>",
        "id": 187859925,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581369979
    },
    {
        "content": "<p>I just bumped mathlib again in the perfectoid project and everything worked fine. I'm not sure what failed last time.</p>",
        "id": 187901100,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581418132
    }
]