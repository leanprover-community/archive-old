[
    {
        "content": "<p>Hey again,<br>\nI'm stuck with this rewriting issue, I don't understand why it won't match :'(</p>",
        "id": 127773629,
        "sender_full_name": "Pablo Le Hénaff",
        "timestamp": 1528466636
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">set_option</span> <span class=\"n\">pp</span><span class=\"bp\">.</span><span class=\"n\">all</span> <span class=\"n\">true</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">x</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"bp\">↔</span> <span class=\"n\">false</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">]</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 127773672,
        "sender_full_name": "Pablo Le Hénaff",
        "timestamp": 1528466645
    },
    {
        "content": "<p>use <code>simp</code> instead. <code>rw</code> does not rewrite bound variables. You need congruence lemmas for that and <code>simp</code> can access them.</p>",
        "id": 127773904,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528466957
    },
    {
        "content": "<p>How come <code>simp</code> can handle rewriting the type of the <code>decidable_pred</code> instance?</p>",
        "id": 127792061,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1528490148
    },
    {
        "content": "<p>rewriting <code>decidable</code> is tricky because of how dependent those types are</p>",
        "id": 127792184,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528490287
    },
    {
        "content": "<p>Sorry, I misread. You're asking why it can?</p>",
        "id": 127792303,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528490501
    },
    {
        "content": "<p>Yes. I always have this problem with fintype.</p>",
        "id": 127793688,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1528492311
    }
]