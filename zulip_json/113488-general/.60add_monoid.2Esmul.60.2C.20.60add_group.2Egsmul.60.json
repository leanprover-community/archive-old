[
    {
        "content": "<p>I'm tired of having equivalent but different interpretations of <code>n • x</code>, <code>n : nat</code>. I'm going to split each of <code>group_theory/group_action</code> and <code>algebra/module</code> into <code>basic</code> and <code>default</code>. <code>basic</code> will not depend on <code>group_power</code>, so I'll <code>import algebra.module.basic</code> in <code>group_power</code>, and define <code>semimodule nat α</code> and <code>module int α</code> instead of <code>add_monoid.smul</code> and <code>add_group.gsmul</code>.</p>",
        "id": 188308228,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1581819055
    },
    {
        "content": "<p>Any objections/recommendations?</p>",
        "id": 188308233,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1581819081
    },
    {
        "content": "<p>We can define a semimodule only if the addition is commutative, so it will be only has_scalar or mul_action.</p>",
        "id": 188309820,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1581822317
    },
    {
        "content": "<p>This is a partial win over the current situation but I'm not sure what's more confusing: current situation or two has_smul's (one from the explicit definition, and one from semimodule).</p>",
        "id": 188309891,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1581822474
    }
]