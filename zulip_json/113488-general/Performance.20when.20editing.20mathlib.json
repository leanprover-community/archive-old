[
    {
        "content": "<p>I was just trying to prepare a small PR in mathlib when I noticed a lemma - which on searching isn't used by anything - which had a name that looked wrong compared to similar lemmas. I changed it. This then caused my editing environment (VS Code in WSL2) to grind to a halt and eventually run out of memory after consuming like 10GB of it.</p>\n<p>I understand that this is probably because changing this lemma in another file caused the first file to need to re-compile all its dependencies: but I don't think my computer can handle this. How do people edit multiple files in mathlib at once? Is it just a case of gritting your teeth? Are there ways to make this less painful?</p>",
        "id": 285525161,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654777385
    },
    {
        "content": "<p>You can have a look at <a href=\"#narrow/stream/113489-new-members/topic/faster.20lean.20--make\">this</a> thread.</p>",
        "id": 285525514,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1654777544
    },
    {
        "content": "<p>Hmm - I'm not sure how much that helps with VS Code itself (because I'm not running builds from the command line).</p>",
        "id": 285526499,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654778031
    },
    {
        "content": "<p>(It is still the case that I should create a new project folder for each PR I'm working on, right? That seems to be what all the guides say.)</p>",
        "id": 285526766,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654778158
    },
    {
        "content": "<p>I think you have to do something in the command line, but these tricks should save some time.</p>",
        "id": 285526920,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1654778219
    },
    {
        "content": "<p>There's no need to have a new project for each PR unless you really need the source to be separate, even then if you use <code>git worktree</code> you only need to have one original git repo.</p>",
        "id": 285526959,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1654778240
    },
    {
        "content": "<p>Yeah, that's what I would have thought? But that isn't what the guide here says. <a href=\"https://leanprover-community.github.io/contribute/index.html\">https://leanprover-community.github.io/contribute/index.html</a></p>",
        "id": 285527028,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654778278
    },
    {
        "content": "<p>Does <a href=\"https://leanprover-community.github.io/tips_and_tricks.html#old-mode\">https://leanprover-community.github.io/tips_and_tricks.html#old-mode</a> (which is what that thread lead to) help with your issues? It is useful even if not running on the commandline</p>",
        "id": 285527032,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1654778279
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330967\">Wrenna Robson</span> <a href=\"#narrow/stream/113488-general/topic/Performance.20when.20editing.20mathlib/near/285527028\">said</a>:</p>\n<blockquote>\n<p>Yeah, that's what I would have thought? But that isn't what the guide here says. <a href=\"https://leanprover-community.github.io/contribute/index.html\">https://leanprover-community.github.io/contribute/index.html</a></p>\n</blockquote>\n<p>Maybe that section should be called, making a first pull request!</p>",
        "id": 285527153,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1654778334
    },
    {
        "content": "<p>Have you seen <a href=\"https://leanprover-community.github.io/leanproject.html\">https://leanprover-community.github.io/leanproject.html</a>?</p>",
        "id": 285527195,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1654778355
    },
    {
        "content": "<p>Yeah - but it implies you have to name the folder after the PR!</p>",
        "id": 285527217,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654778365
    },
    {
        "content": "<p>I have seen that - I am not new to Lean/leanproject! But editing mathlib always seems to go awry so I don't make many PRs.</p>",
        "id": 285527361,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654778404
    },
    {
        "content": "<p>Here is my basic workflow:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">cd</span> mathlib\ngit checkout master\ngit pull <span class=\"c1\"># get the latest master</span>\ngit checkout -b alexjbest/my_new_lemma <span class=\"c1\"># make a new branch with this name, that is currently the same as origin master</span>\nleanproject get-cache --fallback<span class=\"o\">=</span>download-all\n... make edits\ngit push <span class=\"c1\"># &lt;- this will possibly prompt you to do something more specific</span>\n</code></pre></div>",
        "id": 285527588,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1654778500
    },
    {
        "content": "<p>and mathlib is just a regular ol' git clone of the project?</p>",
        "id": 285527624,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654778522
    },
    {
        "content": "<p><code>leanproject pr my_new_lemma</code> will do most of this for you</p>",
        "id": 285527711,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654778546
    },
    {
        "content": "<p>Yes but obtained with <code>leanproject get mathlib</code>intitially</p>",
        "id": 285527728,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1654778555
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Performance.20when.20editing.20mathlib/near/285527711\">said</a>:</p>\n<blockquote>\n<p><code>leanproject pr my_new_lemma</code> will do most of this for you</p>\n</blockquote>\n<p>I tried this but it said I didn't have a leanpkg file. I guess that's why I need to do the get?</p>",
        "id": 285527783,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654778586
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Performance.20when.20editing.20mathlib/near/285527711\">said</a>:</p>\n<blockquote>\n<p><code>leanproject pr my_new_lemma</code> will do most of this for you</p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/leanproject.html\">https://leanprover-community.github.io/leanproject.html</a> should be modified to mention this, I don't see it there</p>",
        "id": 285527788,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1654778589
    },
    {
        "content": "<p>The only difference between <code>leanproject get mathlib</code> and a manual <code>git clone</code> is that <code>leanproject</code> will download compiled lean files for you</p>",
        "id": 285527839,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654778611
    },
    {
        "content": "<p>Right.</p>",
        "id": 285527864,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654778627
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330967\">Wrenna Robson</span> <a href=\"#narrow/stream/113488-general/topic/Performance.20when.20editing.20mathlib/near/285527783\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Performance.20when.20editing.20mathlib/near/285527711\">said</a>:</p>\n<blockquote>\n<p><code>leanproject pr my_new_lemma</code> will do most of this for you</p>\n</blockquote>\n<p>I tried this but it said I didn't have a leanpkg file. I guess that's why I need to do the get?</p>\n</blockquote>\n<p>You should type that in an existing mathlib folder</p>",
        "id": 285527944,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654778658
    },
    {
        "content": "<p>It does feel like <a href=\"https://leanprover-community.github.io/contribute/index.html\">https://leanprover-community.github.io/contribute/index.html</a> could be edited to have a \"first PR\"/\"setting up your mathlib environment\" and then \"PR workflow\" section. This is useful stuff here but I might've done it wrong.</p>",
        "id": 285527954,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654778665
    },
    {
        "content": "<p>It doesn't really make sense to try to contribute before having ever downloaded mathlib.</p>",
        "id": 285528156,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654778765
    },
    {
        "content": "<p>Alex, please feel free to PR additions to the leanproject help webpage.</p>",
        "id": 285528187,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1654778788
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Performance.20when.20editing.20mathlib/near/285528156\">said</a>:</p>\n<blockquote>\n<p>It doesn't really make sense to try to contribute before having ever downloaded mathlib.</p>\n</blockquote>\n<p>I'm not sure I understand?</p>",
        "id": 285528266,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654778840
    },
    {
        "content": "<p>I have contributed before and I use mathlib all the time.</p>",
        "id": 285528463,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654778927
    },
    {
        "content": "<p>I think Patrick means that you want to download the oleans before editing anything.</p>",
        "id": 285528510,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1654778954
    },
    {
        "content": "<p>Oh - yes definitely.</p>",
        "id": 285528549,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654778971
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Performance.20when.20editing.20mathlib/near/285528187\">said</a>:</p>\n<blockquote>\n<p>Alex, please feel free to PR additions to the leanproject help webpage.</p>\n</blockquote>\n<p>I unfortunately don't know the right usage of the command, as seen above I do it all by hand, because I wasn't aware of the command till today. For example, must one be on the latest master already to run this, or is that part handled automatically?</p>",
        "id": 285529101,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1654779227
    },
    {
        "content": "<p>Well, I created a PR using the above advice! <a href=\"https://github.com/leanprover-community/mathlib/pull/14645\">https://github.com/leanprover-community/mathlib/pull/14645</a></p>",
        "id": 285530689,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654779969
    },
    {
        "content": "<p>for reference:<br>\n<code>leanproject get mathlib</code> to get a mathlib copy.</p>\n<p>Then <code>leanproject pr branchname</code>, which seemed to checkout master and get the cache too, though I'd already done that.</p>\n<p>Then the actual work, and making local git commits etc.</p>\n<p>After finish, <code>git push --set-upstream origin branchname</code>, and then I create a PR in github.</p>",
        "id": 285530933,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654780064
    },
    {
        "content": "<p>Now I need to go to a wedding. But would welcome an eye on the PR! It probably needs tags and assignees and stuff - not sure what I should do for that.</p>",
        "id": 285531206,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654780162
    },
    {
        "content": "<p>Thanks!  Can you please fix the title following the <a href=\"https://github.com/leanprover-community/lean/blob/master/doc/commit_convention.md\">Commit Convention</a>?</p>\n<p>Also, you can use <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a> even in the PR description.</p>",
        "id": 285531996,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1654780514
    },
    {
        "content": "<p>And you don't need to worry about assignees really, the only labels that you should add yourself to begin with are <code>awaiting-ci</code> (for when ci still has to run) and <code>awaiting-review</code> when you think it is ready for review.</p>",
        "id": 285532241,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1654780616
    },
    {
        "content": "<p>Ooh, I didn't know abott <code>leanproject pr</code>. I always used <code>gh pr checkout</code>+ get cache manuakly</p>",
        "id": 285534492,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1654781559
    },
    {
        "content": "<p>Cool, done.</p>",
        "id": 285537906,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654782874
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> does that commit message now look kosher?</p>",
        "id": 285537938,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654782890
    },
    {
        "content": "<p><code>feat(data/fintype/basic):...</code> is the standard form.</p>",
        "id": 285538197,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1654782973
    },
    {
        "content": "<p>Right right. Should I do that even though I have a small edit to another file?</p>",
        "id": 285538899,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654783217
    },
    {
        "content": "<p>Yes, don't worry about the other file.</p>",
        "id": 285539834,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1654783578
    },
    {
        "content": "<p>Cool. Hmm, my build failed, but I can't work out how to see why.</p>",
        "id": 285542904,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654784877
    },
    {
        "content": "<p>I think it's not your fault. Let's see if it succeed now.</p>",
        "id": 285547934,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1654786882
    },
    {
        "content": "<p>Thanks for help on this. As it was the rename didn't make it in anyway.</p>",
        "id": 285668141,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1654864114
    }
]