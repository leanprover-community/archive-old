[
    {
        "content": "<p>I get some interesting behaviour when using <code>norm_num</code> on fields. It discharges the goal, but returns an error message.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">norm_num</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"c1\">-- type mismatch at application...</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">norm_num</span><span class=\"o\">,</span> <span class=\"c1\">-- all goals accomplished</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>error message:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">id</span> <span class=\"o\">(</span><span class=\"n\">eq_true_intro</span> <span class=\"o\">(</span><span class=\"n\">eq</span><span class=\"bp\">.</span><span class=\"n\">refl</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"mi\">1</span><span class=\"o\">)))</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">eq_true_intro</span> <span class=\"o\">(</span><span class=\"n\">eq</span><span class=\"bp\">.</span><span class=\"n\">refl</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"mi\">1</span><span class=\"o\">))</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">true</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">true</span>\n</pre></div>\n\n\n<p>If I change <code>field</code> to <code>linear_ordered_field</code>, the example works. Any idea what's going on?</p>",
        "id": 172572449,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1565083346
    }
]