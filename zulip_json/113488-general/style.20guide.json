[
    {
        "content": "<p>I'm making some edits to <code>style.md</code> on the community website.</p>\n<p>I wanted to ask about one section:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">Use</span> <span class=\"n\">two</span> <span class=\"n\">spaces</span> <span class=\"n\">to</span> <span class=\"n\">indent</span><span class=\"bp\">.</span> <span class=\"n\">You</span> <span class=\"n\">can</span> <span class=\"n\">use</span> <span class=\"n\">an</span> <span class=\"n\">extra</span> <span class=\"n\">indent</span> <span class=\"n\">when</span> <span class=\"n\">a</span> <span class=\"n\">long</span> <span class=\"n\">line</span>\n<span class=\"n\">forces</span> <span class=\"n\">a</span> <span class=\"n\">break</span> <span class=\"n\">to</span> <span class=\"n\">suggest</span> <span class=\"n\">the</span> <span class=\"n\">break</span> <span class=\"n\">is</span> <span class=\"n\">artificial</span> <span class=\"n\">rather</span> <span class=\"n\">than</span>\n<span class=\"n\">structural</span><span class=\"o\">,</span> <span class=\"n\">as</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">statement</span> <span class=\"n\">of</span> <span class=\"kn\">theorem</span><span class=\"o\">:</span>\n\n<span class=\"bp\">```</span><span class=\"n\">lean</span>\n<span class=\"kn\">open</span> <span class=\"n\">nat</span>\n<span class=\"kn\">theorem</span> <span class=\"n\">two_step_induction_on</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">nat</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H1</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H2</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">H3</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">IH1</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">IH2</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">n</span><span class=\"o\">)),</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">n</span><span class=\"o\">)))</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n<span class=\"bp\">```</span>\n\n<span class=\"n\">If</span> <span class=\"n\">you</span> <span class=\"n\">want</span> <span class=\"n\">to</span> <span class=\"n\">indent</span> <span class=\"n\">to</span> <span class=\"n\">make</span> <span class=\"kn\">parameters</span> <span class=\"n\">line</span> <span class=\"n\">up</span><span class=\"o\">,</span> <span class=\"n\">that</span> <span class=\"n\">is</span> <span class=\"n\">o</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"bp\">.</span> <span class=\"n\">too</span><span class=\"o\">:</span>\n<span class=\"bp\">```</span><span class=\"n\">lean</span>\n<span class=\"kn\">open</span> <span class=\"n\">nat</span>\n<span class=\"kn\">theorem</span> <span class=\"n\">two_step_induction_on</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">nat</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H1</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H2</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n                              <span class=\"o\">(</span><span class=\"n\">H3</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">IH1</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">IH2</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">n</span><span class=\"o\">)),</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">n</span><span class=\"o\">)))</span> <span class=\"o\">:</span>\n  <span class=\"n\">P</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n<span class=\"bp\">```</span>\n</code></pre></div>",
        "id": 204503460,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595293907
    },
    {
        "content": "<p>It seems we now follow neither of these pieces of advice. (i.e. people just use a two space indent if there are too many hypotheses to fit on a line, and we actively discourage doing long indents in this situation).</p>",
        "id": 204503531,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595293959
    },
    {
        "content": "<p>If there's general agreement on this point, I'll simply remove these two paras.</p>",
        "id": 204503548,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595293973
    },
    {
        "content": "<p>We do follow the advice when formatting <code>calc</code> blocks</p>",
        "id": 204511590,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595305822
    },
    {
        "content": "<p>So maybe we should rather change it a bit... or are <code>calc</code> blocks already dealt with separately?</p>",
        "id": 204511594,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595305850
    },
    {
        "content": "<p>Yes, there's already a separate section on <code>calc</code> blocks, indicating that you should try to line things up (possibly excepting the first line).</p>",
        "id": 204511613,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595305909
    },
    {
        "content": "<p>In that case, I don't mind if you delete these 2 paras</p>",
        "id": 204511717,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595306048
    },
    {
        "content": "<p>Done.</p>",
        "id": 204610139,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595370434
    }
]