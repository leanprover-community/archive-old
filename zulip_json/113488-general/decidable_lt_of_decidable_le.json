[
    {
        "content": "<p>Why is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/decidable_lt_of_decidable_le\">docs#decidable_lt_of_decidable_le</a> still an instance? This messes up with the decidability coming from <a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_order\">docs#linear_order</a>.</p>",
        "id": 278140506,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649325530
    },
    {
        "content": "<p>I mean, if this is an instance then why can't we just yeet the <code>decidable_le</code> from <code>linear_order</code>? It doesn't even need decidable_eq</p>",
        "id": 278144072,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649327762
    },
    {
        "content": "<p>Because deriving decidability instances is bad.</p>",
        "id": 278144288,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649327893
    },
    {
        "content": "<p>why? the argument is that it causes diamonds, but if we exclusively use this one then I don't see the real problem</p>",
        "id": 278144842,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649328258
    },
    {
        "content": "<p>urgh, I guess it still causes diamonds</p>",
        "id": 278144879,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649328281
    },
    {
        "content": "<p>i pray for typeclass inference to look at subsingleton issues or at least give special support for subsingleton instances &lt;3</p>",
        "id": 278144909,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649328302
    },
    {
        "content": "<p>FWIW <code>linear_order</code> used to not contain decidability instances</p>",
        "id": 278147370,
        "sender_full_name": "Reid Barton",
        "timestamp": 1649329972
    },
    {
        "content": "<p>You mean that <code>decidable_lt_of_decidable_le</code> should have been made an instance when <code>linear_order</code> was refactored?</p>",
        "id": 278149501,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649331094
    },
    {
        "content": "<p>that's what I meant, yes, but I'm not so sure that's sufficient</p>",
        "id": 278149845,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649331250
    },
    {
        "content": "<p>I think you'd still get issues with <code>classical</code> etc</p>",
        "id": 278149872,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649331260
    }
]