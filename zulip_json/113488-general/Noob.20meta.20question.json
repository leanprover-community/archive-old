[
    {
        "content": "<p>What's the \"correct\" way to efficiently implement finitely supported functions in Lean meta. Currently I'm using <code>list (α × β)</code> as <code>α →₀ β</code>, but this seems totally wrong. By finitely supported, I mean functions for which I only care about the result for finitely many <code>α</code></p>",
        "id": 133727546,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536667953
    },
    {
        "content": "<p><code>data.rbmap</code>?</p>",
        "id": 133727560,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536668009
    },
    {
        "content": "<p>that's the best way I know of</p>",
        "id": 133727620,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536668047
    },
    {
        "content": "<p><a href=\"https://github.com/spl/lean-finmap\" target=\"_blank\" title=\"https://github.com/spl/lean-finmap\">https://github.com/spl/lean-finmap</a> ?</p>",
        "id": 133727662,
        "sender_full_name": "Sean Leather",
        "timestamp": 1536668154
    },
    {
        "content": "<p><code>rbmap</code> looks about right. Thanks.</p>",
        "id": 133728841,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536669535
    },
    {
        "content": "<p>Is there a <code>decidable</code> instance for <code>mem</code> in <code>rbmap</code> anywhere. This seems like something so fundamental that I feel like I must be doing something wrong by trying to use it.</p>",
        "id": 133730984,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536671643
    },
    {
        "content": "<p>I don't think the <code>rbmap</code> theorem collection is very extensive.</p>",
        "id": 133731062,
        "sender_full_name": "Sean Leather",
        "timestamp": 1536671757
    },
    {
        "content": "<p>I see there's <code>contains</code>, which I assume is the same thing.</p>",
        "id": 133734773,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536674889
    },
    {
        "content": "<p>There doesn't seem to be an <code>erase</code> either.</p>",
        "id": 133735259,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536675335
    },
    {
        "content": "<p>Is <code>rbtree α</code> isomorphic to <code>finset α</code>, and is <code>rbmap α β</code> isomorphic to <code>Σ s : finset α, Π x, x ∈ s → β</code></p>",
        "id": 133737802,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536677387
    }
]