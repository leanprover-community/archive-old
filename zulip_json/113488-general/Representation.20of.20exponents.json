[
    {
        "content": "<p>What's going on in here?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic.ring</span> <span class=\"c1\">-- overkill import</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"mi\">2048</span> <span class=\"bp\">-</span> <span class=\"mi\">1024</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">1024</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sub_self</span><span class=\"o\">]</span> <span class=\"c1\">-- works</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"mi\">2049</span> <span class=\"bp\">-</span> <span class=\"mi\">1024</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">1025</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sub_self</span><span class=\"o\">]</span> <span class=\"c1\">-- fails</span>\n</code></pre></div>\n<p>It seems to me that the natural number exponent is represented differently above a certain threshold?</p>",
        "id": 315838558,
        "sender_full_name": "David Ang",
        "timestamp": 1671029931
    },
    {
        "content": "<p>This</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"mi\">2049</span> <span class=\"bp\">-</span> <span class=\"mi\">1024</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">1025</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">change</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">1025</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"mi\">1025</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sub_self</span><span class=\"o\">]</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>works, so maybe it is simply that for some reasons Lean gives up on understanding that <code>2049 - 1024 = 1025</code> without a little help, but I don't know.</p>",
        "id": 315839694,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1671030224
    },
    {
        "content": "<p>Here's a more MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">bit0</span> <span class=\"mi\">1024</span> <span class=\"bp\">-</span> <span class=\"mi\">1024</span> <span class=\"bp\">=</span> <span class=\"mi\">1024</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[]</span> <span class=\"c1\">-- works</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">bit1</span> <span class=\"mi\">1024</span> <span class=\"bp\">-</span> <span class=\"mi\">1024</span> <span class=\"bp\">=</span> <span class=\"mi\">1025</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[]</span> <span class=\"c1\">-- fails</span>\n</code></pre></div>\n<p><code>rw []</code> is a way to write \"refl with reducible transparency\". The surprising one here is the first one, these are not obviously the same and I wouldn't expect weak refl to get it</p>",
        "id": 315841816,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671030722
    },
    {
        "content": "<p>It's weird that the presence of <code>x ^</code> makes rw more likely to succeed:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">id</span> <span class=\"o\">(</span><span class=\"mi\">2048</span> <span class=\"bp\">-</span> <span class=\"mi\">1024</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">id</span> <span class=\"mi\">1024</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sub_self</span><span class=\"o\">]</span> <span class=\"c1\">-- fails</span>\n</code></pre></div>",
        "id": 315842115,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1671030787
    },
    {
        "content": "<p>The representation in all cases is as a chain of <code>bit0</code> and <code>bit1</code> applications on <code>1</code>, so that's not the difference. This representation does preference powers of two though so it's not super surprising that something happens after 1024</p>",
        "id": 315842386,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671030843
    },
    {
        "content": "<p>Given the evidence it sounds like a timeout is occurring during reduction and so the stuff surrounding the match makes a difference</p>",
        "id": 315842967,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671030983
    }
]