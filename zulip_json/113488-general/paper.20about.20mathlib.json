[
    {
        "content": "<p>A group of us are trying to write up a paper that describes the design and organization of mathlib. There are around 65 contributors to mathlib so far. Rather than attributing the paper to some subset as authors, we thought we'd submit it as a community effort. All contributors will be acknowledged, and none will be official authors. As well as a (hopefully) nice paper, this should be good high-level documentation about the library.</p>\n<p>What this means: as community members, you can help us write the paper :) there are a few things we'd like to include that anyone could tackle. One is documentation, e.g. <a href=\"#narrow/stream/113488-general/topic/linear.20algebra.20documentation.20push\" title=\"#narrow/stream/113488-general/topic/linear.20algebra.20documentation.20push\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/linear.20algebra.20documentation.20push</a> . It can be tough to document something you didn't write yourself, but if you're partially familiar with some of it, this could be a good way to learn more.</p>\n<p>Something else we'd like are pictures. It would be great to include e.g. graphs of the import structure, (parts of) the type class hierarchy, etc. <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> has a script here that's a great start for graphing the import structure, but it needs some small fixes and some attention to format a pretty graph.</p>\n<p>Please let us know if you're willing to help out with some of this!</p>",
        "id": 177159156,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1570028894
    },
    {
        "content": "<p>Patrick generated <a href=\"/user_uploads/3121/rs0ef7xmCh1mIhpo1j87z-81/imports.graphml\" target=\"_blank\" title=\"imports.graphml\">imports.graphml</a> , a graph of the import structure, which can be edited at <a href=\"https://www.yworks.com/yed-live/\" target=\"_blank\" title=\"https://www.yworks.com/yed-live/\">https://www.yworks.com/yed-live/</a> (or with the yEd software). The challenge is to optimize it for display in a paper. Reading labels is out of the question, but hopefully there's a nice way to color and/or group things. We can also host a huge legible version elsewhere.</p>",
        "id": 177167481,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1570034081
    },
    {
        "content": "<p>(Are there any advantages of this format/program over <code>dot</code>? I may want to build similar graphs very soon)</p>",
        "id": 177168331,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1570034699
    },
    {
        "content": "<p>The advantage is there is some software which does both automatic layout and manual tweaking.</p>",
        "id": 177168395,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570034746
    },
    {
        "content": "<p>Graphviz is only automatic, and Dia is only manual.</p>",
        "id": 177168443,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570034764
    },
    {
        "content": "<p>I should add that the graph was generated by <a href=\"user_uploads/3121/jDimxYPQI7nz7JYjAh1mVm1y/import_graph.py\" target=\"_blank\" title=\"user_uploads/3121/jDimxYPQI7nz7JYjAh1mVm1y/import_graph.py\">https://leanprover.zulipchat.com/user_uploads/3121/jDimxYPQI7nz7JYjAh1mVm1y/import_graph.py</a> which is very easy to tweak, especially adding meta-data to nodes if anyone finds a way to make something with them. Of course this forces me to reveal that no Lean meta-programming was involved in creating this graph...</p>",
        "id": 177168571,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570034882
    },
    {
        "content": "<p>I fear I would have chosen the same language anyway</p>",
        "id": 177168675,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1570034940
    },
    {
        "content": "<p>I didn't even think of manually layouting such humongous graphs, but if it's a part to be published that could be an advantage I suppose</p>",
        "id": 177168802,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1570035015
    },
    {
        "content": "<p>Originaly I wrote that python script for a smaller project where the graph is manageable, after an initial automatic layout.</p>",
        "id": 177185930,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570046068
    },
    {
        "content": "<blockquote>\n<p>A group of us are trying to write up a paper that describes the design and organization of mathlib. There are around 65 contributors to mathlib so far. Rather than attributing the paper to some subset as authors, we thought we'd submit it as a community effort. All contributors will be acknowledged, and none will be official authors. As well as a (hopefully) nice paper, this should be good high-level documentation about the library.</p>\n</blockquote>\n<p>We've finished a draft of this paper. Comments and suggestions are very welcome! <a href=\"https://leanprover-community.github.io/papers/mathlib-paper.pdf\" target=\"_blank\" title=\"https://leanprover-community.github.io/papers/mathlib-paper.pdf\">https://leanprover-community.github.io/papers/mathlib-paper.pdf</a></p>\n<p>This is a \"semi-public\" draft. Please don't spread it too far, e.g. on Twitter.</p>",
        "id": 178093943,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1571051680
    },
    {
        "content": "<p>The draft has been updated and is now public: <a href=\"https://leanprover-community.github.io/papers/mathlib-paper.pdf\" target=\"_blank\" title=\"https://leanprover-community.github.io/papers/mathlib-paper.pdf\">https://leanprover-community.github.io/papers/mathlib-paper.pdf</a></p>\n<p>Thanks to everyone who helped write and commented on it!</p>",
        "id": 178654524,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1571664593
    },
    {
        "content": "<p>The community paper is accepted at CPP. Congrats, coauthors!</p>",
        "id": 182045144,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1574878992
    }
]