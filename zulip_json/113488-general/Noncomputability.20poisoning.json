[
    {
        "content": "<p>What are the prescribed methods against noncomputability poisoning? I thought I had understood it (make computable instances up until the noncomputable one, but then I get <a href=\"https://github.com/leanprover-community/mathlib/runs/4967681933?check_suite_focus=true\">https://github.com/leanprover-community/mathlib/runs/4967681933?check_suite_focus=true</a></p>",
        "id": 269603802,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643303160
    },
    {
        "content": "<p>what do you mean by this?</p>",
        "id": 269605493,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1643303816
    },
    {
        "content": "<p>It's when TC weakens a noncomputable instance instead of finding the weaker computable one.</p>",
        "id": 269605879,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643303953
    },
    {
        "content": "<p>Typically <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.conditionally_complete_linear_order_bot\">docs#nat.conditionally_complete_linear_order_bot</a> vs <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.linear_order\">docs#nat.linear_order</a></p>",
        "id": 269606011,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643304002
    },
    {
        "content": "<p>Is the context <a href=\"https://github.com/leanprover-community/mathlib/pull/11677\">#11677</a>?</p>",
        "id": 269606481,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1643304195
    },
    {
        "content": "<p>Is the context <a href=\"https://github.com/leanprover-community/mathlib/pull/11677\">#11677</a>?</p>",
        "id": 269607946,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1643304780
    },
    {
        "content": "<p>You can look at the generated instance (e.g., with <code>pp.all</code>) and see where it took a wrong path. Then you can, e.g., add an explicit high priority instance for this typeclass.</p>",
        "id": 269679694,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643338325
    }
]