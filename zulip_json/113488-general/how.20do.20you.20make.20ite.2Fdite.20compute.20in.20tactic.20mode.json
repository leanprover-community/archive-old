[
    {
        "content": "<p>Suppose the context is</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span>\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span>\n<span class=\"err\">⊢</span> <span class=\"n\">dite</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">),</span> <span class=\"n\">sum</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">h_1</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">),</span> <span class=\"n\">sum</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">_⟩</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">sum</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span>\n</code></pre></div>\n\n\n<p>since we know <code>x &lt; a</code> is true (<code>h</code>), how does one make <code>dite</code> reduce to its \"then\" value <code>sum.inl ⟨x, h⟩</code>?</p>",
        "id": 197050535,
        "sender_full_name": "Slavomir Kaslev",
        "timestamp": 1589110814
    },
    {
        "content": "<p>The lemma you need is <a href=\"https://leanprover-community.github.io/mathlib_docs/core/init/logic.html#dif_pos\" title=\"https://leanprover-community.github.io/mathlib_docs/core/init/logic.html#dif_pos\"><code>dif_pos</code></a>.</p>",
        "id": 197050630,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589110966
    },
    {
        "content": "<p>(and you can find this by typing <code>library_search</code>)</p>",
        "id": 197052794,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1589113917
    },
    {
        "content": "<p>That's exactly it. Thank you so much, Reid!</p>",
        "id": 197072138,
        "sender_full_name": "Slavomir Kaslev",
        "timestamp": 1589137085
    },
    {
        "content": "<p>If you don't have <code>x &lt; a</code> in the environment, then you can also use <code>split_ifs</code> tactic that will run <code>by_cases</code> on relevant conditions, then simplify using <code>if_pos</code>, <code>if_neg</code>, <code>dif_pos</code>, <code>dif_neg</code>.</p>",
        "id": 197072228,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589137200
    }
]