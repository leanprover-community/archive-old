[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span>, just letting you know about a widget rendering bug:<br>\nIf you look at the (wildly in progress) <code>opens_le_cover</code> branch, on commit 0c329591c6a20ebd252df92966ba94af88a1129b, line 135 of <code>category_theory.limits.cofinal</code>, the goal displays as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">‚ä¢</span> <span class=\"mi\">ùü≠</span> <span class=\"o\">(</span><span class=\"n\">cocone</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"bp\">‚ãô</span> <span class=\"n\">G</span><span class=\"o\">)</span>  <span class=\"bp\">‚âÖ</span> <span class=\"n\">extend_cocone</span> <span class=\"bp\">‚ãô</span> <span class=\"n\">cocones.whiskering</span> <span class=\"n\">F</span>\n     <span class=\"o\">)</span>\n</code></pre></div>\n\n<p>(the close parenthesis has gone stray).</p>",
        "id": 211094213,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1600929406
    },
    {
        "content": "<p>Oof. I'll have a look</p>",
        "id": 211096424,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1600931796
    },
    {
        "content": "<p>Does it change if you make the window bigger and smaller?</p>",
        "id": 211096626,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1600931998
    },
    {
        "content": "<p>It's rendering ok for me :/ maybe I'm missing something?<br>\n<a href=\"/user_uploads/3121/NJfl6JhbITH1bAlvbs_6984H/image.png\">image.png</a> <br>\n<a href=\"/user_uploads/3121/BDAX1OuKDigFHwbTEGoC7rTl/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/NJfl6JhbITH1bAlvbs_6984H/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/NJfl6JhbITH1bAlvbs_6984H/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/BDAX1OuKDigFHwbTEGoC7rTl/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/BDAX1OuKDigFHwbTEGoC7rTl/image.png\"></a></div>",
        "id": 211096824,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1600932159
    },
    {
        "content": "<p>I've seen this failure mode before though</p>",
        "id": 211096849,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1600932182
    },
    {
        "content": "<p>I've seen this bug too</p>",
        "id": 211096859,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1600932191
    },
    {
        "content": "<p>Whats happening is the <code>(cocone (F ‚ãô G))</code> element is wrapped in an <code>inline-block</code> to get the pretty linebreaking to work, but sometimes the layout maths is off and it linebreaks in this block before the outer one linebreaks</p>",
        "id": 211097003,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1600932311
    },
    {
        "content": "<p>Maybe it only happens for certain fonts</p>",
        "id": 211097016,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1600932325
    },
    {
        "content": "<p>What fonts are you guys using?</p>",
        "id": 211097021,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1600932333
    },
    {
        "content": "<p>Ok I've tried changing the fonts etc and I can't get this theorem to exhibit this bug, so I'll keep programming until I find an example of the bug and then try to diagnose it. Hopefully the bug doesn't arise too frequently to be a massive issue in the mean time.</p>",
        "id": 211098344,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1600933394
    },
    {
        "content": "<p>Another funny rendering bug is that <code>Œª (n : ‚Ñï), n &gt; n</code> breaks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">Œª</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">)</span>\n  <span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">&gt;</span> <span class=\"n\">n</span>\n</code></pre></div>\n\n<p>In the API documentation we solve these issues by post-processing the formatted expression a little bit, i.e. move parenthesis inside: <a href=\"https://github.com/leanprover-community/doc-gen/blob/fe4f42fdda23b690695b40d353e5da6d49cf9d65/src/export_json.lean#L70-L126\">https://github.com/leanprover-community/doc-gen/blob/fe4f42fdda23b690695b40d353e5da6d49cf9d65/src/export_json.lean#L70-L126</a></p>",
        "id": 211099898,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1600934597
    }
]