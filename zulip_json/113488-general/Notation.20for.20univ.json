[
    {
        "content": "<p>We have no notation for <code>set.univ</code> and <code>finset.univ</code>. What do people think of introducing <code>Ω</code> as such a notation? That would an alternative to using it as the base type in probability theory.<br>\ncc <span class=\"user-mention\" data-user-id=\"243312\">@Jason KY.</span></p>",
        "id": 294350768,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1660937938
    },
    {
        "content": "<p>I think the decision to use of <code>Ω : Type*</code> in probability theory was very popular and I do use <code>set.univ</code> quite often when working with probability so I don't support using  <code>Ω</code> for <code>set.univ</code>. It would be useful to have a notation for <code>set.univ</code>however.</p>",
        "id": 294351917,
        "sender_full_name": "Jason KY.",
        "timestamp": 1660938465
    },
    {
        "content": "<p>Is <code>⊤</code> not a notation?</p>",
        "id": 294352600,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1660938766
    },
    {
        "content": "<p>It's notation for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_top.top\">docs#has_top.top</a></p>",
        "id": 294352680,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1660938804
    },
    {
        "content": "<p>but that is defeq right?</p>",
        "id": 294353130,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1660938970
    },
    {
        "content": "<p>But not syntactically equal! So that will mess with <code>rw</code>.</p>",
        "id": 294353285,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1660939036
    },
    {
        "content": "<p>So <code>⊤</code> is notation for something that's defeq to <code>univ</code>, but that doesn't make it notation for <code>univ</code>.</p>",
        "id": 294353373,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1660939073
    },
    {
        "content": "<p>a notation typeclass will have the same issue, and I'm not sure how you could make notation overriding work here unless you had a different one for finset/set</p>",
        "id": 294353646,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1660939160
    },
    {
        "content": "<p>i guess this comes back to the age-old \"we don't want mathematicians to have to use lattices\" and stuff like that</p>",
        "id": 294353691,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1660939177
    },
    {
        "content": "<p>Would redefining <code>set.univ</code> to <code>⊤</code> help?</p>",
        "id": 294353749,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1660939196
    },
    {
        "content": "<p>Maybe! I just don't want to be murdered by a mob of angry mathematicians.</p>",
        "id": 294353862,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1660939224
    },
    {
        "content": "<p>I always love notations when they allow to bring Lean code closer to real world math. But <code>set.univ</code>doesn't exist in the real world (or you could say that <code>X</code> is notation for <code>(set.univ : set X)</code>) so I don't think a notation would help here.</p>",
        "id": 294360879,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1660942278
    },
    {
        "content": "<p>Exactly for the reason that Patrick says, I wouldn't really mind writing <code>⊤</code> everywhere. I think that for a random mathematician <code>⊤</code> has about the same clarity as <code>univ</code>.</p>",
        "id": 294465369,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1661015858
    },
    {
        "content": "<p>but we still preserve emptyc, right?</p>",
        "id": 294466988,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1661017034
    },
    {
        "content": "<p>Yeah, I have to say unless you are getting rid of <code>emptyc</code> I don't think this is a good idea.</p>",
        "id": 294653684,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1661167146
    },
    {
        "content": "<p>Do we use ℧ for anything?</p>",
        "id": 294654212,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1661167339
    },
    {
        "content": "<p>It has the advantage of looking a bit like a weird U</p>",
        "id": 294654244,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1661167354
    },
    {
        "content": "<p>but is also upside-down <code>Ω</code> so it has that association.</p>",
        "id": 294654294,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1661167377
    },
    {
        "content": "<p>Conceptually, I think the reason I don't like the top/bottom symbols is that while there is a natural lattice on sets, somehow the definition of sets doesn't rest on that - the empty and universal sets are defined before the lattice.</p>",
        "id": 294654536,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1661167480
    },
    {
        "content": "<p>Also, there might be contexts where you have a lattice of sets and you want to talk about the top of <em>that lattice</em> as opposed to the universal set.</p>",
        "id": 294654620,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1661167530
    },
    {
        "content": "<p>the definition is already there, and you can already get goals of the form <code>\\top = coe \\top</code> today.</p>",
        "id": 294655057,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1661167684
    },
    {
        "content": "<p>True, true.</p>",
        "id": 294676619,
        "sender_full_name": "Wrenna Robson",
        "timestamp": 1661175173
    },
    {
        "content": "<p>I like <code>⊤</code>. I don't want yet another <code>⊥</code> vs <code>Ø</code> vs <code>0</code> situation <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 322401460,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1674171580
    }
]