[
    {
        "content": "<p><a href=\"https://paste.debian.net/1233286/\">https://paste.debian.net/1233286/</a> I have an instance of type <code>is_antisymm (list α) is_prefix</code>. But lean want to find an instance of type <code>is_antisymm (list α) (λ {l l' : list α}, l' &lt;+: l)</code>.  How should I deal with it?</p>\n<p>upd: Sorry it looks like I made a reply, not a new topic. I'm new to here and not familiar with zulip. Sorry for that.</p>",
        "id": 274396605,
        "sender_full_name": "FR",
        "timestamp": 1646662405
    },
    {
        "content": "<p><code>exact antisymm hl' hl</code> works fine, you have your arguments backwards</p>",
        "id": 274397645,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646662891
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"455791\">@FR</span> In this case, it's probably fine to reuse the old topic</p>",
        "id": 274397784,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1646662951
    },
    {
        "content": "<p>At some point we run out of topic titles <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 274397816,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1646662964
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/QC7n0W8-9rpR-qqNtnNjUfhL/image.png\">image.png</a> My lean gives me an error. Does this mean that the version of my lean is too old?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/QC7n0W8-9rpR-qqNtnNjUfhL/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/QC7n0W8-9rpR-qqNtnNjUfhL/image.png\"></a></div>",
        "id": 274398837,
        "sender_full_name": "FR",
        "timestamp": 1646663441
    },
    {
        "content": "<p>No, it means you didn't read my comment carefully enough! You're not using the replacement code I suggested.</p>",
        "id": 274399431,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646663693
    },
    {
        "content": "<p>Oh, I get it. Thanks for your help!</p>",
        "id": 274400049,
        "sender_full_name": "FR",
        "timestamp": 1646663937
    },
    {
        "content": "<p>That <code>is_antisymm</code> instance is probably reasonable to PR to mathlib, if you're interested</p>",
        "id": 274400358,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646664071
    },
    {
        "content": "<p>I would guess you can make a stronger <code>is_partial_order</code> instance</p>",
        "id": 274400571,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646664162
    },
    {
        "content": "<p>Yep:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">is_partial_order</span> <span class=\"o\">(</span><span class=\"n\">list</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">&lt;+</span><span class=\"o\">:)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">refl</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">prefix_rfl</span><span class=\"o\">,</span>\n  <span class=\"n\">trans</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">is_prefix.trans</span><span class=\"o\">,</span>\n  <span class=\"n\">antisymm</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">l₁</span> <span class=\"n\">l₂</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span><span class=\"o\">,</span>\n    <span class=\"n\">eq_of_prefix_of_length_eq</span> <span class=\"n\">h₁</span> <span class=\"bp\">$</span> <span class=\"o\">(</span><span class=\"n\">is_prefix.length_le</span> <span class=\"n\">h₁</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">antisymm</span> <span class=\"o\">(</span><span class=\"n\">is_prefix.length_le</span> <span class=\"n\">h₂</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 274401097,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646664389
    },
    {
        "content": "<p>All right. My GitHub username is negiizhao. I'm ready to make a PR.</p>",
        "id": 274485645,
        "sender_full_name": "FR",
        "timestamp": 1646704262
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455791\">FR</span> <a href=\"#narrow/stream/113488-general/topic/failed.20to.20synthesize.20type.20class.20instance.20for.20is_antisymm/near/274485645\">said</a>:</p>\n<blockquote>\n<p>All right. My GitHub username is negiizhao. I'm ready to make a PR.</p>\n</blockquote>\n<p>Invite sent! <a href=\"https://github.com/leanprover-community/mathlib/invitations\">https://github.com/leanprover-community/mathlib/invitations</a></p>",
        "id": 274492839,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1646711421
    }
]