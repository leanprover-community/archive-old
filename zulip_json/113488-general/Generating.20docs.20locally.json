[
    {
        "content": "<p>How do I generate api docs locally? I think that <a href=\"https://leanprover-community.github.io/mathlib_docs/\" title=\"https://leanprover-community.github.io/mathlib_docs/\">docs main page</a> should say \"This documentation has been generated by (link to doc gen tool) with mathlib commit 83359d1 and Lean commit e694f49.\"</p>",
        "id": 193666884,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586620880
    },
    {
        "content": "<p>Found <a href=\"https://github.com/leanprover-community/doc-gen\" title=\"https://github.com/leanprover-community/doc-gen\">doc-gen</a>. I'll PR a change to docs tonight.</p>",
        "id": 193668091,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586622618
    },
    {
        "content": "<p>Is there a Lean constant for the filepath to the Lean library?</p>",
        "id": 193675506,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586633271
    },
    {
        "content": "<p>I mean <code> ~/.elan/toolchains/leanprover-community-lean-3.8.0/lib/lean/library/</code></p>",
        "id": 193675595,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586633376
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">open</span> <span class=\"n\">tactic</span>\n\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">get_path_to_lean_library</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">string</span> <span class=\"o\">:=</span> <span class=\"n\">do</span>\n<span class=\"n\">env</span> <span class=\"err\">←</span> <span class=\"n\">get_env</span><span class=\"o\">,</span>\n<span class=\"n\">some</span> <span class=\"n\">ol</span> <span class=\"err\">←</span> <span class=\"n\">pure</span> <span class=\"err\">$</span> <span class=\"n\">env</span><span class=\"bp\">.</span><span class=\"n\">decl_olean</span> <span class=\"bp\">``</span><span class=\"n\">eq</span><span class=\"o\">,</span>\n<span class=\"n\">pure</span> <span class=\"err\">$</span> <span class=\"n\">ol</span><span class=\"bp\">.</span><span class=\"n\">popn_back</span> <span class=\"mi\">14</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">eval</span> <span class=\"n\">get_path_to_lean_library</span> <span class=\"bp\">&gt;&gt;=</span> <span class=\"n\">trace</span>\n</pre></div>",
        "id": 193675679,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1586633472
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 193675686,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586633494
    },
    {
        "content": "<p>Why do you want to put the path into the documentation?</p>",
        "id": 193675689,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1586633510
    },
    {
        "content": "<p>I want to migrate it to Python <code>pathlib</code></p>",
        "id": 193675825,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586633659
    },
    {
        "content": "<p>And replace <code>lean/library in filename</code> with <code>s = filename.relative_to lean_library_path</code></p>",
        "id": 193675886,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586633735
    },
    {
        "content": "<p>BTW, can I convert from <code>tactic string</code> to <code>io string</code>?</p>",
        "id": 193675961,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586633818
    },
    {
        "content": "<p>Found <code>io.run_tactic</code></p>",
        "id": 193676033,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586633900
    },
    {
        "content": "<p>It's a pity we have <code>io.run_tactic</code> and <code>parser.of_tactic</code>.</p>",
        "id": 193689328,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1586656561
    },
    {
        "content": "<p>What's the issue with those?</p>",
        "id": 193689490,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1586656844
    },
    {
        "content": "<p>Just that they have different names!</p>",
        "id": 193694589,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1586667519
    },
    {
        "content": "<p>Both should be <code>of_tactic</code> (or possibly <code>run_tactic</code>).</p>",
        "id": 193694596,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1586667541
    }
]