[
    {
        "content": "<p>Is it possible to show which instance Lean is using when it successfully performs a typeclass inference? </p>\n<p>For instance, I know from the fact that I can use <code>neg_le_neg</code> with integers that Lean has silently performed a typeclass inference and found an instance of type <code>ordered_comm_group int</code>. But I don't know exactly <em>which</em> instance Lean has found. Is there a way to display this information, similar to how I can jump to definitions using f12?</p>",
        "id": 127225600,
        "sender_full_name": "Seul Baek",
        "timestamp": 1527550815
    },
    {
        "content": "<p>you can print the proof of your theorem</p>",
        "id": 127225655,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527551011
    },
    {
        "content": "<p>using <code>#print</code></p>",
        "id": 127225656,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527551014
    },
    {
        "content": "<p>and you can <code>set pp.implicit true</code> (there may be a better option) to see the implicit arguments, including the proof of the typeclass inference</p>",
        "id": 127225695,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527551049
    },
    {
        "content": "<p><code>set_option trace.class_instances true</code></p>",
        "id": 127225696,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1527551053
    },
    {
        "content": "<p>well that displays too much information</p>",
        "id": 127225699,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527551069
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 127225853,
        "sender_full_name": "Seul Baek",
        "timestamp": 1527551454
    },
    {
        "content": "<p>you can also test instance problems with</p>\n<div class=\"codehilite\"><pre><span></span>theorem T : ordered_comm_group int := by apply_instance\n#print T\n</pre></div>",
        "id": 127228102,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527556409
    },
    {
        "content": "<p><code>#check (by apply_instance : ordered_comm_group int)</code></p>",
        "id": 127228104,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527556428
    },
    {
        "content": "<p>do I win?</p>",
        "id": 127228105,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527556429
    },
    {
        "content": "<p>clever</p>",
        "id": 127228146,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527556449
    }
]