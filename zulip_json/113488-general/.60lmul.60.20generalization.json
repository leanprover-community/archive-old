[
    {
        "content": "<p><code>continuous_linear_map.lmul</code> is defined via <code>(algebra.lmul _ _).to_linear_map</code> plus a proof that this is continuous. Since it uses <code>algebra.lmul</code>, it requires that the underlying ring (<em>not</em> the scalars) is unital. It would be nice to have a version of this that also applies to non-unital rings. What is preferred approach?</p>\n<ol>\n<li>Create a separate <code>continuous_linear_map.lmul'</code> which only needs a non-unital ring and a lemma that proves that this is equal to <code>continuous_linear_map.lmul</code> in case the ring is unital. This seems like it would be a decent amount of duplication.</li>\n<li>Define a <code>linear_map.lmul</code> for non-unital rings and use this to redefine <code>continuous_linear_map.lmul</code> and fix the any place that was using the definitional equality. This is what I'm leaning toward.</li>\n<li>Something else?</li>\n</ol>",
        "id": 288873689,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1657232562
    },
    {
        "content": "<p>Even though I don't know much about non-unital things, I think option 2 is way better than 1. For 1 you would probably also need an annoying lemma of the form <code>lmul'_eq_lmul</code> in the case that your ring is unital, which is rather annoying.</p>",
        "id": 288879295,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1657236454
    },
    {
        "content": "<p>I've found myself wanting <code>linear_map.lmul</code> many times, just because <code>(algebra.lmul _ _).to_linear_map</code> is long to type and has more elaboration problems</p>",
        "id": 288880660,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657237529
    },
    {
        "content": "<p>Also we already have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_monoid_hom.mul\">docs#add_monoid_hom.mul</a></p>",
        "id": 288880725,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657237575
    },
    {
        "content": "<p>So maybe just <code>linear_map.mul</code></p>",
        "id": 288880737,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657237592
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>  Are you making some sort of distinction between <code>linear_map.lmul</code> and <code>linear_map.mul</code>? Note that the former would be a bilinear map. Or are you just making a comment about the name. (note that we also have <code>continuous_linear_map.lmul_right</code>, which I think should be named <code>rmul</code> instead, unless I've misunderstood the meaning of the <code>l</code> in <code>lmul</code>.)</p>",
        "id": 288980602,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1657307030
    },
    {
        "content": "<p>Just a comment about the name</p>",
        "id": 288980669,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657307050
    },
    {
        "content": "<p>I think we should call the bilinear version <code>linear_map.mul</code></p>",
        "id": 288980683,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657307063
    },
    {
        "content": "<p>And probably rename <a href=\"https://leanprover-community.github.io/mathlib_docs/find/algebra.lmul_left\">docs#algebra.lmul_left</a> to <code>linear_map.mul_left</code> to match <a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_monoid_hom.mul_left\">docs#add_monoid_hom.mul_left</a></p>",
        "id": 288980973,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657307217
    }
]