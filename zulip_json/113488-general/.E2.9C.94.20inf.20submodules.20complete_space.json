[
    {
        "content": "<p>I am trying to work with intersections of submodules, and I am having some weird behavior with <code>⊓</code>.  I think it would help if someone could explain what is going wrong on the second <code>#check</code>; the first has no issues.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.inner_product_space.projection</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">is_R_or_C</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">inner_product_space</span> <span class=\"bp\">𝕜</span> <span class=\"n\">V</span><span class=\"o\">]</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"n\">K'</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"bp\">𝕜</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">complete_space</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">complete_space</span> <span class=\"n\">K'</span><span class=\"o\">]</span>\n\n<span class=\"c1\">-- no problems here</span>\n<span class=\"k\">#check</span> <span class=\"n\">K</span> <span class=\"bp\">⊓</span> <span class=\"n\">K'</span>\n\n<span class=\"c1\">-- failed to synthesize type class instance for has_inf (Type ?)</span>\n<span class=\"k\">#check</span> <span class=\"n\">complete_space</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"bp\">⊓</span> <span class=\"n\">K'</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>I'm guessing the <code>⊓</code> notation needs help to see what I'm trying to say, but I don't know how to give it that help!</p>",
        "id": 273026425,
        "sender_full_name": "Hans Parshall",
        "timestamp": 1645658775
    },
    {
        "content": "<p>Lean uses coercion to type too early</p>",
        "id": 273026776,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1645658999
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"n\">complete_space</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"bp\">⊓</span> <span class=\"n\">K'</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"bp\">𝕜</span> <span class=\"n\">V</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>by any chance?</p>",
        "id": 273026832,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645659011
    },
    {
        "content": "<p>Also try</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#check</span> <span class=\"n\">complete_space</span> <span class=\"bp\">↥</span><span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"bp\">⊓</span> <span class=\"n\">K'</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 273026865,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645659043
    },
    {
        "content": "<p>both work, thanks!</p>",
        "id": 273026885,
        "sender_full_name": "Hans Parshall",
        "timestamp": 1645659063
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459656\">Hans Parshall</span> has marked this topic as resolved.</p>",
        "id": 273026927,
        "sender_full_name": "Notification Bot",
        "timestamp": 1645659098
    }
]