[
    {
        "content": "<p>Is there some easy way to tackle this goal:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">fintype</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">nonempty</span> <span class=\"n\">n</span>\n<span class=\"err\">‚ä¢</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">fintype</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"n\">n</span>\n</pre></div>",
        "id": 133577651,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536432243
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">fintype</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span>\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">nonempty</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">fintype</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">by_contra</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">not_lt</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">le_zero_iff</span><span class=\"o\">,</span> <span class=\"n\">fintype</span><span class=\"bp\">.</span><span class=\"n\">card_eq_zero_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">rec_on</span> <span class=\"n\">H</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 133577761,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536432516
    },
    {
        "content": "<p>I guess this could be a simp lemma in mathlib?</p>",
        "id": 133577817,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536432625
    },
    {
        "content": "<p>Ooh, and thanks!</p>",
        "id": 133577822,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536432633
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">set_theory</span><span class=\"bp\">.</span><span class=\"n\">cardinal</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">nonempty</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">cardinal</span><span class=\"bp\">.</span><span class=\"n\">pos_iff_ne_zero</span><span class=\"o\">,</span> <span class=\"n\">cardinal</span><span class=\"bp\">.</span><span class=\"n\">ne_zero_iff_nonempty</span><span class=\"o\">]</span>\n</pre></div>",
        "id": 133577926,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536432847
    },
    {
        "content": "<p>I think Mario likes <a href=\"http://cardinal.mk\" target=\"_blank\" title=\"http://cardinal.mk\">cardinal.mk</a> more than fintype.card</p>",
        "id": 133577929,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536432862
    },
    {
        "content": "<p>It is in mathlib. <code>fintype.card_pos_iff</code> I believe.</p>",
        "id": 133578072,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536433193
    },
    {
        "content": "<p>Aaah, thanks! (Sorry, Kenny)</p>",
        "id": 133578180,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536433379
    }
]