[
    {
        "content": "<p>Hi, Lean and Zulip newbie there, not sure where to post exactly. Stuck on this calculation. How to prove it?</p>",
        "id": 202240833,
        "sender_full_name": "Valéry Croizier",
        "timestamp": 1593357436
    },
    {
        "content": "<p>Welcome! Is this what you want:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">succ</span><span class=\"bp\">.</span><span class=\"n\">inj</span>\n</code></pre></div>",
        "id": 202240897,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1593357570
    },
    {
        "content": "<p>In general you can find lemmas from the library with <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#library_search\"><code>library_search</code></a>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">library_search</span>\n</code></pre></div>",
        "id": 202240946,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1593357619
    },
    {
        "content": "<p>Is this a reference to succ_inj in nat/lemmas ?</p>",
        "id": 202241010,
        "sender_full_name": "Valéry Croizier",
        "timestamp": 1593357723
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"118155\">@Valéry Croizier</span> To explain why <code>nat.succ.inj</code> proves this: <code>n + 1 = succ n</code> by definition, and <code>1 = succ 0</code>, by definition.</p>",
        "id": 202241023,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593357739
    },
    {
        "content": "<p>My Lean doesn't know library_search :(</p>",
        "id": 202241037,
        "sender_full_name": "Valéry Croizier",
        "timestamp": 1593357790
    },
    {
        "content": "<p>Did you <code>import tactic</code>?</p>",
        "id": 202241041,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593357803
    },
    {
        "content": "<p>I think <code>nat.succ_inj</code> was renamed to <code>nat.succ.inj</code> recently, so it may depend on what version of Lean you're using.</p>",
        "id": 202241044,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1593357806
    },
    {
        "content": "<p>I use VSCode  and elan on WSL2.</p>",
        "id": 202241055,
        "sender_full_name": "Valéry Croizier",
        "timestamp": 1593357832
    },
    {
        "content": "<p>See <a href=\"https://leanprover-community.github.io/get_started.html#regular-install\">#install</a> for instructions on installing the latest version of Lean along with mathlib.</p>",
        "id": 202241072,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1593357842
    },
    {
        "content": "<p>My install is just a few days old. leanpkg.toml says leanprover-community/lean:3.16.4.</p>",
        "id": 202241119,
        "sender_full_name": "Valéry Croizier",
        "timestamp": 1593357905
    },
    {
        "content": "<p>Then <code>example (n : ℕ) : n+1 = 1 → n = 0 := nat.succ.inj</code> should work...</p>",
        "id": 202241181,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1593357970
    },
    {
        "content": "<p>Anyway, nat.succ.inj works, so thank you very much for you help.</p>",
        "id": 202241192,
        "sender_full_name": "Valéry Croizier",
        "timestamp": 1593357998
    },
    {
        "content": "<p>I recommend figuring out how to install mathlib so you can use <code>library_search</code> and other tactic goodies though. Let us know if you have any trouble.</p>",
        "id": 202241205,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1593358035
    },
    {
        "content": "<p>OK, library_search missed some imports mentioned in the doc. Nice. <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 202241497,
        "sender_full_name": "Valéry Croizier",
        "timestamp": 1593358559
    }
]