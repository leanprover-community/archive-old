[
    {
        "content": "<p>Does anyone know where the list of \"registered tokens\" is?</p>\n<blockquote>\n<p>/-- Check that the next token is <code>tk</code> and consume it. <code>tk</code> must be a registered token. -/<br>\nmeta constant tk (tk : string) : parser unit</p>\n</blockquote>",
        "id": 135382507,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538979452
    },
    {
        "content": "<p>You can define one as <code>precedence `my_keyword`:0</code></p>",
        "id": 135382549,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1538979497
    },
    {
        "content": "<p>I'd like to modify some of my tactics so they print out a trace message of what they're doing.</p>",
        "id": 135382612,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538979655
    },
    {
        "content": "<p>My idea was to have, e.g. <code>backwards_reasoning</code>, but then be able to write <code>backwards_reasoning?</code> and get trace ouput.</p>",
        "id": 135382619,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538979678
    },
    {
        "content": "<p>However <code>?</code> isn't an allowed token.</p>",
        "id": 135382620,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538979684
    },
    {
        "content": "<p>Do you have a suggestion for good syntax for this?</p>",
        "id": 135382623,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538979698
    },
    {
        "content": "<p>I'm hoping that one day this model might be widespread --- e.g. in Lean 4 we could even imagine your squeeze_simp just be callable by <code>simp?</code>.</p>",
        "id": 135382666,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538979723
    },
    {
        "content": "<p>Are you trying to make <code>backwards_reasoning?</code>the name of the tactic or is <code>?</code> a parameter to <code>backwards_reasoning</code>?</p>",
        "id": 135382731,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1538979881
    },
    {
        "content": "<p>? was meant to be a parameter</p>",
        "id": 135382740,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538979919
    },
    {
        "content": "<p>I can make this work with !, just via:</p>",
        "id": 135382741,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538979929
    },
    {
        "content": "<p><code>meta def backwards_reasoning (trace : parse $ optional (tk \"!\"))  ...</code></p>",
        "id": 135382742,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538979944
    },
    {
        "content": "<p>Hmm, it seems <code>#</code> works fine, maybe that's good enough.</p>",
        "id": 135382782,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538979966
    },
    {
        "content": "<p>Surely <code>?</code> is a token</p>",
        "id": 135382784,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538979980
    },
    {
        "content": "<p>Somehow <code>!</code> strikes me as a \"work harder!\" modifier to a tactic,  rather than a \"tell me more\"</p>",
        "id": 135382785,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538979984
    },
    {
        "content": "<p>I think <code>rcases</code> and <code>rintro</code> use <code>?</code> in their parsing, for the hint mode</p>",
        "id": 135382795,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538980018
    },
    {
        "content": "<p>Okay, I will look at those.</p>",
        "id": 135382802,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538980026
    },
    {
        "content": "<p>Actually it would be nice if <code>squeeze_simp</code> was <code>simp?</code></p>",
        "id": 135382811,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538980069
    },
    {
        "content": "<p>Ugh...</p>",
        "id": 135382817,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538980082
    },
    {
        "content": "<p>I get the same error as you but this fixes it:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">precedence</span> <span class=\"bp\">`</span><span class=\"err\">?</span><span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">0</span>\n</pre></div>",
        "id": 135382853,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1538980083
    },
    {
        "content": "<p>Awesome, thanks <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span>.</p>",
        "id": 135382864,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538980110
    },
    {
        "content": "<p>Presumably this is a bit fragile, but works for now. :-)</p>",
        "id": 135382867,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538980120
    },
    {
        "content": "<p>I would be careful with that</p>",
        "id": 135382870,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538980127
    },
    {
        "content": "<p>declaring something as a token makes it unusable as a variable name</p>",
        "id": 135382876,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538980143
    },
    {
        "content": "<p>maybe that's not a problem here though :)</p>",
        "id": 135382884,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538980154
    },
    {
        "content": "<p>Does it work if you declare it locally?</p>",
        "id": 135382950,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538980227
    },
    {
        "content": "<p>I see that <code>rcases</code> has <code>local postfix `?`:9001 := optional</code>, which may be a factor in why this works</p>",
        "id": 135382958,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538980255
    },
    {
        "content": "<p>I am also unclear on the interaction between <code>postfix</code> and <code>precedence</code></p>",
        "id": 135383035,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1538980397
    },
    {
        "content": "<p>You can't do anything with <code>local precedence</code></p>",
        "id": 135383149,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538980585
    },
    {
        "content": "<p>Even if you could that would make your tactic tricky to use</p>",
        "id": 135383161,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1538980644
    },
    {
        "content": "<p>Yeah.</p>",
        "id": 135383206,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1538980690
    },
    {
        "content": "<p>Aha interesting. So this explains why I could never get <code>rcases?</code> to work. It only works once I make <code>?</code> some kind of notation.</p>",
        "id": 135410263,
        "sender_full_name": "Reid Barton",
        "timestamp": 1539011878
    },
    {
        "content": "<p>That sounds like a probable explanation. <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> you may need to add <code>precedence `?`:0</code> in mathlib</p>",
        "id": 135411814,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1539013360
    },
    {
        "content": "<p>oh! I didn't realize <code>rcases?</code> was broken</p>",
        "id": 135413968,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539015565
    },
    {
        "content": "<p>This was mentioned several times here, but I guess we need to learn to use GitHub issues instead of only relying on whining here</p>",
        "id": 135418076,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539020354
    },
    {
        "content": "<p>was it? I don't recall any error reports for <code>rcases?</code></p>",
        "id": 135418181,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539020486
    },
    {
        "content": "<p>e.g. <a href=\"#narrow/stream/113488-general/subject/rcases.3F/near/133503552\" title=\"#narrow/stream/113488-general/subject/rcases.3F/near/133503552\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/subject/rcases.3F/near/133503552</a></p>",
        "id": 135419249,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539021799
    },
    {
        "content": "<p>oh, I thought that was resolved from the comments</p>",
        "id": 135419347,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1539021924
    },
    {
        "content": "<p>I was sure it was mentioned a couple more times but I can't find it</p>",
        "id": 135419489,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539022093
    }
]