[
    {
        "content": "<p>Would it be at all possible for a lean tactic to spawn a new process? For example call <code>coqtop</code>? If so, any recommendation as to what file to take a look at? (I don't suppose it's documented.)</p>",
        "id": 123202790,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1520027937
    },
    {
        "content": "<p>leanpkg spawns external processes for almost everything: <a href=\"https://github.com/leanprover/lean/blob/d6d44a19947e2575b3fceed6d61167d258c661fb/leanpkg/leanpkg/main.lean\" target=\"_blank\" title=\"https://github.com/leanprover/lean/blob/d6d44a19947e2575b3fceed6d61167d258c661fb/leanpkg/leanpkg/main.lean\">https://github.com/leanprover/lean/blob/d6d44a19947e2575b3fceed6d61167d258c661fb/leanpkg/leanpkg/main.lean</a><br>\nYou can do the same in tactics by lifting the io monad to the tactic monad (don't remember the name of the function)</p>",
        "id": 123203007,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1520028196
    },
    {
        "content": "<p>I guess there must be hints in that \"Lean talks to mathematica\" paper</p>",
        "id": 123203069,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520028261
    },
    {
        "content": "<p>Thank you. I am giving you 10 out of 10 for today :P! :)</p>",
        "id": 123203071,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1520028264
    },
    {
        "content": "<p><a href=\"https://arxiv.org/abs/1712.09288\" target=\"_blank\" title=\"https://arxiv.org/abs/1712.09288\">https://arxiv.org/abs/1712.09288</a></p>",
        "id": 123203084,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520028287
    },
    {
        "content": "<p>Next thing you know we'll be querying google for proofs! ;)</p>",
        "id": 123203156,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1520028365
    },
    {
        "content": "<blockquote>\n<p>You can do the same in tactics by lifting the io monad to the tactic monad (don't remember the name of the function)</p>\n</blockquote>\n<p><code>tactic.unsafe_run_io</code> :) .  The unsafe part should vanish soon by basing <code>tactic</code> on <code>io</code>.</p>",
        "id": 123206400,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1520033787
    }
]