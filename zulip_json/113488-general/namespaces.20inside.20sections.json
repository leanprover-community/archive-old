[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> I <a href=\"https://github.com/leanprover/lean4/blob/master/doc/sections.md\">see</a> that namespaces are not allowed inside sections in Lean 4. This is a very frustrating restriction and <a href=\"https://github.com/leanprover-community/lean/commit/36faf83cf13298951527f653adb15853253c8f4d\">Gabriel got rid of it</a> in Lean 3. Is there any reason to keep it in Lean 4?</p>",
        "id": 217375696,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1605862873
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> I think you wanted to link to <a href=\"https://github.com/leanprover/lean4/blob/master/doc/namespaces.md\">https://github.com/leanprover/lean4/blob/master/doc/namespaces.md</a><br>\nIn the docs on sections, I didn't see any mention of this restriction.</p>",
        "id": 217377756,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1605864372
    },
    {
        "content": "<p>The commit message was very pessimistic.  AFAICR we didn't find a single horribly broken corner case.</p>",
        "id": 217377836,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1605864446
    },
    {
        "content": "<p>Funnily enough I might have found one at Xena yesterday, regarding <code>include</code>. Let me see if I can reproduce.</p>",
        "id": 217379196,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605865356
    },
    {
        "content": "<p>This file <a href=\"https://github.com/ImperialCollegeLondon/M40002/blob/master/src/problem_sheet_two.lean\">https://github.com/ImperialCollegeLondon/M40002/blob/master/src/problem_sheet_two.lean</a> breaks when you put the entire contents within a namespace. I'll minimise.</p>",
        "id": 217379358,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605865462
    },
    {
        "content": "<p>My first instinct was \"ctrl+f parameter\", and indeed it found something.  I woudln't be surprised if that was the issue.</p>",
        "id": 217379468,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1605865544
    },
    {
        "content": "<p>Yes it's parameters. Are they problematic within a namespace? I can't put these theorems in a namespace:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n\n<span class=\"c1\">--namespace foo</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">Q4</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">two</span>\n\n<span class=\"kd\">parameters</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n\n<span class=\"kn\">include</span> <span class=\"n\">ha</span> <span class=\"n\">hn</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">S</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"n\">s</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">Sup</span> <span class=\"n\">S</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">is_lub_x</span> <span class=\"o\">:</span> <span class=\"n\">is_lub</span> <span class=\"n\">S</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">x_nonneg</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">is_lub_x</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"o\">⟩,</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">two</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">Q4</span>\n\n<span class=\"c1\">--end foo</span>\n</code></pre></div>",
        "id": 217379812,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605865755
    },
    {
        "content": "<p>Mathlib-free. Is this a known issue? I was surprised. Uncomment the namespace and end lines and I get an error.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">--namespace foo</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">two</span>\n\n<span class=\"kd\">parameters</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n\n<span class=\"kn\">include</span> <span class=\"n\">ha</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"mi\">37</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">is_lub_x</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">37</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refl</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">x_nonneg</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">37</span> <span class=\"o\">:=</span> <span class=\"n\">is_lub_x</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">two</span>\n\n<span class=\"c1\">--end foo</span>\n</code></pre></div>",
        "id": 217380308,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605866084
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/namespaces.20inside.20sections/near/217377756\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> I think you wanted to link to <a href=\"https://github.com/leanprover/lean4/blob/master/doc/namespaces.md\">https://github.com/leanprover/lean4/blob/master/doc/namespaces.md</a><br>\nIn the docs on sections, I didn't see any mention of this restriction.</p>\n</blockquote>\n<p>The sentence is gone; the restriction didn't actually exist :)</p>",
        "id": 217493196,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1605950624
    }
]