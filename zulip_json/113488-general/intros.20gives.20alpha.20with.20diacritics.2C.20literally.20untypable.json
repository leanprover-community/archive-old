[
    {
        "content": "<p>I noticed when given without explicit variable names, <code>intros</code>sometimes  produce these variable names made of alpha with a breve diacritic. Is this by design? This is super hard to type. Can't even get it with compose key (unless using a greek keyboard layout). (<span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span> how do I type these using lean.nvim?)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">ᾰ</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">x</span>\n<span class=\"n\">ᾰ_1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span> <span class=\"n\">g</span> <span class=\"n\">x</span>\n</code></pre></div>",
        "id": 307860249,
        "sender_full_name": "Siyuan Yan",
        "timestamp": 1667519145
    },
    {
        "content": "<p>This is intended to be untypable.</p>",
        "id": 307860500,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1667519360
    },
    {
        "content": "<p>(See e.g. <a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Typing.20.E1.BE.B0\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/.E2.9C.94.20Typing.20.E1.BE.B0</a> )</p>",
        "id": 307860514,
        "sender_full_name": "Julian Berman",
        "timestamp": 1667519384
    },
    {
        "content": "<p>Thanks, I find it hilarious</p>",
        "id": 307861197,
        "sender_full_name": "Siyuan Yan",
        "timestamp": 1667519895
    },
    {
        "content": "<p>It was less funny when it was giving weird errors because of variable name clashes -- this is why it was changed</p>",
        "id": 307995173,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667578476
    },
    {
        "content": "<p>Wouldn't be better to make the variable <em>actually</em> impossible to refer to, such as by labeling it <code>_</code>, so that users would be more likely to realize that if they want to refer to it they have to give it a name themselves?</p>",
        "id": 308004215,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1667580972
    },
    {
        "content": "<p>That is basically what is done in lean 4, is my understanding.</p>",
        "id": 308007546,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667581925
    },
    {
        "content": "<p>We were originally going to use a name starting with an underscore but that caused some other issues because it made Lean think it was an internal variable (<a href=\"https://github.com/leanprover-community/lean/issues/437\">github discussion thread</a>)</p>",
        "id": 308007812,
        "sender_full_name": "Reid Barton",
        "timestamp": 1667582033
    },
    {
        "content": "<p>The Lean 4 behavior is much better of course (the variable has a normal name but displayed with a suffixed <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>†</mo></mrow><annotation encoding=\"application/x-tex\">\\dagger</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">†</span></span></span></span>, and it can't be referred to)</p>",
        "id": 308008625,
        "sender_full_name": "Reid Barton",
        "timestamp": 1667582296
    }
]