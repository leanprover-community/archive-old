[
    {
        "content": "<p>Occasionally I find myself having the goal <code>\\forall n, P n</code> that I want to prove by induction. But (as a mathematician) I always allow myself to use <code>P m</code> for all <code>m &lt; n</code> in the induction step. So I would like to rewrite my initial goal into <code>\\forall n m, m &lt; n \\to P m</code>. Is a statement like that already in mathlib?</p>",
        "id": 130145340,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1532348572
    },
    {
        "content": "<blockquote>\n<p>Occasionally I find myself having the goal <code>\\forall n, P n</code> that I want to prove by induction. But (as a mathematician) I always allow myself to use <code>P m</code> for all <code>m &lt; n</code> in the induction step. So I would like to rewrite my initial goal into <code>\\forall n m, m &lt; n \\to P m</code>. Is a statement like that already in mathlib?</p>\n</blockquote>\n<p>strong induction?</p>",
        "id": 130145429,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1532348697
    },
    {
        "content": "<p>I don't know anything about strong induction. Is that the name for the thing I am talking about?</p>",
        "id": 130145449,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1532348733
    },
    {
        "content": "<p>it's called strong induction.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"bp\">@</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">strong_induction_on</span>\n<span class=\"c1\">-- nat.strong_induction_on :</span>\n<span class=\"c1\">--  ∀ {p : ℕ → Prop} (n : ℕ), (∀ (n : ℕ), (∀ (m : ℕ), m &lt; n → p m) → p n) → p n</span>\n</pre></div>",
        "id": 130145519,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1532348812
    },
    {
        "content": "<p>Read the section in TPIL on the equation compiler and the docs in mathlib on the equation compiler.</p>",
        "id": 130157350,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1532362017
    }
]