[
    {
        "content": "<p>I love Lean.  More so more than CoqIDE.  However, I would like an all-encompassing IDE that installs everything you need with one EXE download.  To begin with, I am going to automate the installation instructions found here:<br>\n<a href=\"https://leanprover-community.github.io/install/windows.html\">https://leanprover-community.github.io/install/windows.html</a><br>\nUsing Selenium WebDriver (which I have a lot of skill with) and PyWinAuto.   Does anyone suggest an alternative approach to having an auto installer such as \"there is an upcoming Lean version and installation is way different or easier\".  <br>\nThank you.</p>",
        "id": 238425552,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620799522
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"236489\">@Daniel Donnelly</span> have you seen <a href=\"https://leanprover-community.github.io/get_started.html#maybe-a-couple-of-nights\">https://leanprover-community.github.io/get_started.html#maybe-a-couple-of-nights</a> ?</p>",
        "id": 238426324,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620800139
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> \"The downside is you won't be able to create your own projects or easily upgrade Lean and mathlib. You'll need a regular install for this.\"  Can't really make use of that</p>\n<p>I'm going to create a PyQt5 App GUI which has an InstallerThread doing the install instructions.  It will even click the download link on the GitForWindows page for example.  I'll try to make it cross platform, but I'll have to finish the Linux / MacOS branches secondly.</p>",
        "id": 238426548,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620800329
    },
    {
        "content": "<p>Well, on linux I always use the one line installation command. Works like a charm.</p>",
        "id": 238427699,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620801220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> where's a link to info on that?</p>",
        "id": 238427935,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620801344
    },
    {
        "content": "<p>Ok, it's for Debian-based distros only: <a href=\"https://leanprover-community.github.io/install/debian.html\">https://leanprover-community.github.io/install/debian.html</a></p>",
        "id": 238428043,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620801399
    },
    {
        "content": "<p>But also the generic linux install is, what I would call \"straightforward\"</p>",
        "id": 238428197,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620801514
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> Okay, I will make one for windows / macOS then</p>",
        "id": 238428331,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620801617
    },
    {
        "content": "<p>If I were you I would also search this Zulip for all the issues that people have been hitting. (Preinstalled different Python, wrong $PATH, other stuff.) Because if 1-click install sounds great. But if it cannot handle all those edges cases it just becomes an opaque box that only works if the stars align.</p>",
        "id": 238429163,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802214
    },
    {
        "content": "<p>And someone needs to troubleshoot all those installation issues.</p>",
        "id": 238429210,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802248
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  that sounds like a good idea.    The automator will try to always add to path, which usually works unless the length of path is too long.   It will do this by always checking the box in the Python installer.  Once I start working on my IDE I will have the option to not add to path as I can just store location info with the IDE's program files.  Or if I figure out a way to install everything without adding  Python to the Path, the first version will also have that option</p>",
        "id": 238429505,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620802462
    },
    {
        "content": "<p>I don't know what your IDE is going to do... will it be a full-fledged frontend to git and leanproject? Sounds like a lot of work. Without them, you are back to the \"maybe a couple of days\" that I linked to above.</p>",
        "id": 238429659,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802566
    },
    {
        "content": "<p>But with Lean 4 around the corner, leanproject is probably going to change a lot. So building an IDE around it, I dunno.</p>",
        "id": 238429687,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802585
    },
    {
        "content": "<p>Personally, I don't think it helps to hide git and leanproject behind a bunch of menu items.</p>",
        "id": 238429718,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802609
    },
    {
        "content": "<p>\"Without them\" - not sure what you mean here</p>",
        "id": 238429728,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620802622
    },
    {
        "content": "<p>Because as soon as there is some complicated operation, it's not supported by the menu, and you need to fall back to a terminal anyway</p>",
        "id": 238429741,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802629
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> So you're saying Visual Studio is pointless?  I personally can't code without it</p>",
        "id": 238429774,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620802659
    },
    {
        "content": "<p>Working on leanprojects implies working with git (and if you don't want to compile lean and mathlib) then you also want <code>elan</code> and <code>leanproject</code></p>",
        "id": 238429792,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802681
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"236489\">Daniel Donnelly</span> <a href=\"#narrow/stream/113488-general/topic/I'm.20going.20to.20automate.20the.20Lean.20.26.20Mathlib.20installation/near/238429774\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> So you're saying Visual Studio is pointless?</p>\n</blockquote>\n<p>What VScode gives me is: a window to type text in, syntax highlighting, a goal window, with widgets, auto-completion.</p>",
        "id": 238429891,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802725
    },
    {
        "content": "<p>Those are all extremely useful.</p>",
        "id": 238429898,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802732
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  mine will definitely have those.</p>",
        "id": 238429932,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620802755
    },
    {
        "content": "<p>But how do you get mathlib caches for your lean project?</p>",
        "id": 238429973,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802794
    },
    {
        "content": "<p>The whole IDE will be a lot nicer than the VSCode experience.  Imagine the simplifications that are possible.   Not sure about your question, could you go into more detail with it?</p>",
        "id": 238430059,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620802824
    },
    {
        "content": "<p>I'm not saying that what you want isn't useful. I'm warning you that it will be a lot of work that will need to be redone when switching to Lean 4.</p>",
        "id": 238430078,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802842
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  I am comfortable with that.  I might not even get that far into the critical code before Lean 4 is out and about.</p>",
        "id": 238430165,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620802884
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"236489\">@Daniel Donnelly</span> is your IDE going to use VScode as its main driver?</p>",
        "id": 238430168,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802888
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  no, either QScintilla as a text editor something custom built using Qt.  The main IDE will be written in C++ / Qt Creator.</p>",
        "id": 238430252,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620802930
    },
    {
        "content": "<p>Ok, I don't think that's a good idea.</p>",
        "id": 238430284,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802946
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  why not?</p>",
        "id": 238430294,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620802956
    },
    {
        "content": "<p>The lean extension for VScode is doing a lot of nontrivial stuff.</p>",
        "id": 238430306,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620802965
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> for example?</p>",
        "id": 238430352,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620802991
    },
    {
        "content": "<p>Well, anyway, I think Lean is a big enough project now that it deserves its own IDE.</p>",
        "id": 238430430,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620803039
    },
    {
        "content": "<p>goal window + widgets. That's extremely powerful. And completely non-trivial to replicate.</p>",
        "id": 238430494,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620803064
    },
    {
        "content": "<p>I don't understand what an IDE will do that VScode doesn't.</p>",
        "id": 238430518,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620803090
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"236489\">@Daniel Donnelly</span> Lots of cool features.  One thing I wanted to do was display commutative diagrams \"wherever possible\".</p>",
        "id": 238430564,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620803127
    },
    {
        "content": "<p>I already have CD display and editing code written in PyQt5.  I could make use of it eventually.</p>",
        "id": 238430672,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620803186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  but the idea is that it will one day be the preferable way to code in Lean because it will be like what Visual Studio's C++ editing and debug support is to the C++ Language.</p>",
        "id": 238430761,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620803257
    },
    {
        "content": "<p>I think it's easier to improve the VScode extension than start over from scratch</p>",
        "id": 238430794,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620803284
    },
    {
        "content": "<p>Widgets were designed with such \"commutative diagram\" features in mind.</p>",
        "id": 238430836,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620803307
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> What do you mean by \"Widgets\" here?</p>",
        "id": 238430875,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620803332
    },
    {
        "content": "<p><a href=\"https://www.edayers.com/thesis/\">https://www.edayers.com/thesis/</a><br>\n<a href=\"https://www.youtube.com/watch?v=8NUBQEZYuis&amp;list=PLlF-CfQhukNnO8z3TcFcoKozif9gbl7Yt&amp;index=4\">https://www.youtube.com/watch?v=8NUBQEZYuis&amp;list=PLlF-CfQhukNnO8z3TcFcoKozif9gbl7Yt&amp;index=4</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"8NUBQEZYuis\" href=\"https://www.youtube.com/watch?v=8NUBQEZYuis&amp;list=PLlF-CfQhukNnO8z3TcFcoKozif9gbl7Yt&amp;index=4\"><img src=\"https://uploads.zulipusercontent.net/d900a0d9567b79bc77742566b857499ede6ae4b0/68747470733a2f2f692e7974696d672e636f6d2f76692f384e554251455a597569732f64656661756c742e6a7067\"></a></div>",
        "id": 238430926,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620803384
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  thanks for the links.</p>",
        "id": 238431271,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620803589
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"236489\">@Daniel Donnelly</span> I think I don't really understand why you consider Lean in VScode not to be \"IDE experience\"</p>",
        "id": 238431296,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620803609
    },
    {
        "content": "<p>Lean 4 is providing even more language server integration, so it will only get better</p>",
        "id": 238431373,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620803648
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  I will think about it...</p>",
        "id": 238431419,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620803681
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  that's really interesting how they are coding the widget code in lean itself.</p>",
        "id": 238431586,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620803765
    },
    {
        "content": "<p>If you haven't used widgets yet, I would not start writing a new Lean IDE. I think they are unique to Lean, and they are IDE-next-level</p>",
        "id": 238431786,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620803887
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  is there a link for installing the Lean Widgets framework?</p>",
        "id": 238431790,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620803888
    },
    {
        "content": "<p>They are installed by default if you use VScode</p>",
        "id": 238431811,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620803907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  what is important about having the widget code specified in Lean itself?</p>",
        "id": 238431975,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620804026
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/I'm.20going.20to.20automate.20the.20Lean.20.26.20Mathlib.20installation/near/238431811\">said</a>:</p>\n<blockquote>\n<p>They are installed by default if you use VScode</p>\n</blockquote>\n<p>*if you use the Lean extension</p>",
        "id": 238431996,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1620804038
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"236489\">@Daniel Donnelly</span> it makes it easy for tactics to create new functionality</p>",
        "id": 238432032,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620804060
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  can't think of a use case.  Do you have an example in mind?</p>",
        "id": 238432073,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620804096
    },
    {
        "content": "<p>We are still hoping for <code>fancy_rw</code> that allows users to pointy-click on an assumption, and on some part of the goal, and then it rewrites the goal at that point with that assumption</p>",
        "id": 238432081,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620804106
    },
    {
        "content": "<p>But I'm not a tactic writer.</p>",
        "id": 238432140,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620804128
    },
    {
        "content": "<p>Oooh, that's an idea? It sounds very cool.</p>",
        "id": 238432164,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1620804145
    },
    {
        "content": "<p>Also, Lean understands Lean expressions. So turning Lean code for a commutative diagrams into tikzcd code is something probably best done in Lean.</p>",
        "id": 238432203,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620804168
    },
    {
        "content": "<p>More prosaically, I think we could have <code>rw_lhs</code> and <code>rw_rhs</code> as abbreviations for <code>nth_rewrite_lhs 0</code>/<code>nth_rewrite_rhs 0</code>.</p>",
        "id": 238432240,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1620804197
    },
    {
        "content": "<p>Okay, I am liking the idea of just modifying the VSCode ext / using Lean Widgets.  I will still write a Windows installer.  It will have the option to also automatically install VSCode if you don't already have it.  <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>  <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span></p>",
        "id": 238432833,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620804600
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 238432929,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620804628
    },
    {
        "content": "<p>That sounds reasonable <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 238433149,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1620804746
    },
    {
        "content": "<p>That installer still needs to support all those edge cases I talked about earlier. And it should make it easier to troubleshoot when things go wrong. It should also make it at least as easy as nowadays for people to execute \"complex\" <code>git</code> and <code>leanproject</code> combos in a terminal.</p>",
        "id": 238433254,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620804817
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>  does this widget functionality have some documentation?</p>",
        "id": 238433262,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620804820
    },
    {
        "content": "<p>I don't think there is low-hanging fruit in the installation procedure.</p>",
        "id": 238433275,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620804841
    },
    {
        "content": "<p>Mind you, I don't claim it's optimal either.</p>",
        "id": 238433324,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620804854
    },
    {
        "content": "<p>But improving what we have requires taking care of edge cases, and keeping the troubleshooters on Zulip in mind.</p>",
        "id": 238433364,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620804897
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"236489\">@Daniel Donnelly</span> I don't know too much about the widget implementation, but Ed's thesis that I linked to above is probably the best docs there are.</p>",
        "id": 238433401,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620804929
    },
    {
        "content": "<p>Yeah, he wrote a signficant part (all?) of the widget, so if you had any question he would probably be the best person to ask to.</p>",
        "id": 238433532,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1620804989
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>  <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  Thank you for the guidance!  This definitely put me on a different path, but the better one.</p>",
        "id": 238433569,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620805030
    },
    {
        "content": "<p>I've bookmarked this conversation to come back to later.  First I'll work on installer, then I'll look into Lean Widgets and how to modify the authors code.</p>",
        "id": 238433664,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620805084
    },
    {
        "content": "<p>I deally, later on I want to enable users to prove stuff by drawing in arrows, and having that data feedback into lean <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span></p>",
        "id": 238433906,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620805269
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"236489\">@Daniel Donnelly</span> I would be less inclined to emphasize the git complexities which others have mentioned. For me the main issue is that I'm faced with a mathematics undergraduate with a new laptop they got for going to university, with nothing installed on it (no git no python, no idea what they're doing, no programming experience) and I just want them to get started using Lean in VS Code, and have a system whereby they can easily download a project from GitHub, ideally without having to use the command line <em>at all</em>.</p>",
        "id": 238433944,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1620805302
    },
    {
        "content": "<p>There was one piece of low-hanging installation fruit, which was bundling <code>leanproject</code> into an executable to avoid the need to install python. We already have a PR for that though, so the ball in really in the maintainers court.</p>",
        "id": 238434024,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620805341
    },
    {
        "content": "<p>One problem I have had with undergraduates is that a few months after they've got things working and have got their own project up and running, they want to download another project, so I say \"well fire up the command line that you used to install Lean\" and they say \"I have no idea how to do that and no memory of what I did\"</p>",
        "id": 238434056,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1620805364
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> That's the plan.  I can list all github projects in a widget (in the installer) for exmaple</p>",
        "id": 238434064,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620805369
    },
    {
        "content": "<p>Kevin, to what extent does gitpod solve that issue?</p>",
        "id": 238434091,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620805389
    },
    {
        "content": "<p>I don't know because I have not done any work with new undergraduates wanting to install Lean since last Oct/Nov when gitpod didn't exist.</p>",
        "id": 238434152,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1620805436
    },
    {
        "content": "<p>fyi, we're still using gitpod for our lean 4 course and so far it works very well</p>",
        "id": 238434212,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1620805456
    },
    {
        "content": "<p>Do we have gitpod set up for the tutorials project?</p>",
        "id": 238434256,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620805479
    },
    {
        "content": "<p>Are your undergraduate students usually Windows users?</p>",
        "id": 238434305,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620805511
    },
    {
        "content": "<p>Probably yes, since 90% of the world is?</p>",
        "id": 238434336,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620805531
    },
    {
        "content": "<p>Nice, then Windows support will be first priority :)</p>",
        "id": 238434381,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620805560
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  is there a way to make VS Code look more like a dedicated Lean IDE?  I mean by hiding some of the buttons / menus.</p>",
        "id": 238434510,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620805622
    },
    {
        "content": "<p>I don't know, but I also don't really care.</p>",
        "id": 238434649,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620805694
    },
    {
        "content": "<p>The first thing I do when opening VScode is hit <code>F11</code></p>",
        "id": 238434665,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620805706
    },
    {
        "content": "<p>And then I access whatever I need via the <code>Ctrl-P</code> dropdown menu</p>",
        "id": 238434687,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620805723
    },
    {
        "content": "<p>I would argue that having a different IDE for each language is not something I want at all. If I were to ask for one thing to make vscode more lean-y, it would be having a custom file type icon for lean files</p>",
        "id": 238434948,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620805857
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>  for that, Lean community first needs to choose an icon :)  The \"LEAN\" text image is not iconizable as is.</p>",
        "id": 238435142,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1620805952
    },
    {
        "content": "<p>I took a look at this a long time ago for Lean 4</p>",
        "id": 238548936,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620855648
    },
    {
        "content": "<p>As you know Lean is built on Windows with CMake</p>",
        "id": 238548958,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620855663
    },
    {
        "content": "<p>I am not sure if Lean 4 is still able to be built with Visual Studio</p>",
        "id": 238549087,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620855739
    },
    {
        "content": "<p>it was an issue for quite some time in Lean 3, but anyway</p>",
        "id": 238549104,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620855751
    },
    {
        "content": "<p>When I last looked at it, the bootstrap procedure wasn't quite working with my MSYS2 build environment</p>",
        "id": 238549169,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620855803
    },
    {
        "content": "<p>I think the way to make it easier for Windows non-technical users would be</p>",
        "id": 238549201,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620855834
    },
    {
        "content": "<p>check that it builds correctly with Visual Studio</p>",
        "id": 238549318,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620855891
    },
    {
        "content": "<p>using CMake and the new Windows universal CRT</p>",
        "id": 238549357,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620855910
    },
    {
        "content": "<p>then get a developer certificate and sign the binary, and post it to the Windows store</p>",
        "id": 238549422,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620855938
    },
    {
        "content": "<p>The double-plus community A+ solution is to extend the CMake build files to use CPack</p>",
        "id": 238550086,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620856261
    },
    {
        "content": "<p>from CPack you can generate .exe, .dmg, .deb, .rpm, etc with the right configuration for all platforms</p>",
        "id": 238550121,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620856281
    },
    {
        "content": "<p>Now as for automating mathlib installation - I'm not sure this problem can be solved this way, because we have a catch 22. Some users will want to always use the newest mathlib, and some will want to stick with whatever current version they have. So updating your store package will undoubtedly make one subset somewhat irate</p>",
        "id": 238550633,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620856604
    },
    {
        "content": "<p>This is something the language package manager really needs to handle. This is something that I heard needs work in Lean 4, so... you could contribute to that, or piggyback on the efforts of existing crossplatform package managers. The biggest and most well known at the moment is probably the Anaconda Python distribution - they handle binaries for numerous Python packages, as well as R.</p>",
        "id": 238551773,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620857222
    },
    {
        "content": "<p>As I understand it, the windows store is an application repository, not a package repository. Using it to manage dependencies sounds miles from its intended use case.</p>",
        "id": 238552222,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620857504
    },
    {
        "content": "<p>I have heard of chocolatey mentioned in discussions of windows package repositories like apt, although I have never used it</p>",
        "id": 238552333,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620857563
    },
    {
        "content": "<p>avoid Chocolatey,  use scoop</p>",
        "id": 238552349,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620857575
    },
    {
        "content": "<p>Why do we need any of these things given we have elan?</p>",
        "id": 238552376,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620857608
    },
    {
        "content": "<p>OP wants a 1-click installer for non-technical users</p>",
        "id": 238552410,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620857641
    },
    {
        "content": "<p>The problem with using these things to install software is that now you have two problems</p>",
        "id": 238552483,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620857673
    },
    {
        "content": "<p>same thing with installing python</p>",
        "id": 238552501,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620857692
    },
    {
        "content": "<p>Yes</p>",
        "id": 238552544,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620857717
    },
    {
        "content": "<p>distributing Lean is more like an operating system than an application</p>",
        "id": 238552591,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620857744
    },
    {
        "content": "<p>the only way to 1-click install on windows reliably is to hand the user a .exe</p>",
        "id": 238552616,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620857758
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110025\">Andrew Ashworth</span> <a href=\"#narrow/stream/113488-general/topic/I'm.20going.20to.20automate.20the.20Lean.20.26.20Mathlib.20installation/near/238552349\">said</a>:</p>\n<blockquote>\n<p>avoid Chocolatey,  use scoop</p>\n</blockquote>\n<p>Can you elaborate? Do you mean in general or just for this topic?</p>",
        "id": 238552666,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1620857768
    },
    {
        "content": "<p>oh, in general. It's too advanced for normal users</p>",
        "id": 238552715,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620857801
    },
    {
        "content": "<p>both options are as complicated as using <code>apt-get</code></p>",
        "id": 238552746,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620857828
    },
    {
        "content": "<p>I notice that elan says it removed the windows installer which rustup had</p>",
        "id": 238552905,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620857925
    },
    {
        "content": "<p>Does adding this back remove the perceived complexity?</p>",
        "id": 238552928,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620857942
    },
    {
        "content": "<p>I think for non-technical users</p>",
        "id": 238553188,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620858117
    },
    {
        "content": "<p>what is really needed is a modification to the vscode extension</p>",
        "id": 238553230,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620858124
    },
    {
        "content": "<p>to add a \"package management\" tab to the left-hand side activity bar</p>",
        "id": 238553239,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620858134
    },
    {
        "content": "<p>I have no idea if this is possible, but maybe somebody, somewhere has written a git implementation in javascript or compiled it to webassembly</p>",
        "id": 238553307,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620858195
    },
    {
        "content": "<p>oh.. as for elan installing a windows toolchain</p>",
        "id": 238553510,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620858317
    },
    {
        "content": "<p>i don't know. I never used elan, I always built Lean 3 from source</p>",
        "id": 238553526,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620858333
    },
    {
        "content": "<p>for me personally, I never quite understood elan's target market. You're already in the terminal, so asking someone to run cmake .. &amp;&amp; cmake --build &amp;&amp; cmake --install always seemed a pretty low ask</p>",
        "id": 238553641,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620858409
    },
    {
        "content": "<p>and then if you're a non-programmer even opening the terminal is scary and how do you do that??</p>",
        "id": 238553664,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620858429
    },
    {
        "content": "<p>Elan's killer feature is that it automatically gets the right version of lean for whatever you're building. I can download a random lean project and build it without having to worry about downloading and building the version of lean it needs by hand</p>",
        "id": 238554265,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620858834
    },
    {
        "content": "<p>Vscode has a terminal window</p>",
        "id": 238554365,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620858861
    },
    {
        "content": "<p>Nobody knows how to use a terminal window. These days people install apps from app stores</p>",
        "id": 238558280,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620861569
    },
    {
        "content": "<p>Most people's primary computing device is a phone or tablet</p>",
        "id": 238558288,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620861583
    },
    {
        "content": "<p>Except coding in VSCode is difficult on a phone or tablet keyboard...</p>",
        "id": 238559061,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1620862087
    },
    {
        "content": "<p>True. Let us restrict ourselves to mathematical software, then. Typically users of RStudio, MATLAB, Mathematica - they just click install on their executable and go. There is no such thing as having a rolling release of such software - they get introduced and packaged as a complete whole, usually every 6-12 months</p>",
        "id": 238559811,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620862615
    },
    {
        "content": "<p>I really think to fix this problem for non-sophisticated users will probably require handholding from the VSCode extension</p>",
        "id": 238559917,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620862692
    },
    {
        "content": "<p>A command-line tool is too complicated, I think</p>",
        "id": 238559946,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620862720
    },
    {
        "content": "<p>But you know that is something <span class=\"user-mention\" data-user-id=\"236489\">@Daniel Donnelly</span> would have to decide to work on. I'm just throwing out my 2c cheap opinions here</p>",
        "id": 238560077,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1620862813
    }
]