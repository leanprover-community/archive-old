[
    {
        "content": "<p>Can examples be tagged with attributes?</p>",
        "id": 295572402,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661594540
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a>?</p>",
        "id": 295572782,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1661594752
    },
    {
        "content": "<p>The context is that I am writing many proofs about Heyting algebras and I derive those proofs from intuitionistic proofs about props, thanks to the correspondance between intuitionistic logic and Heyting algebras. I am then leaving the examples behind as a source for a future tactic that would automatically use that metatheorem to write the proofs.</p>",
        "id": 295572864,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661594768
    },
    {
        "content": "<p>So in particular I don't want someone to golf my proofs using classical logic because that would break the point! So I would like to tag examples with <code>@[intuit]</code>, where <code>intuit</code> would be an attribute checking that you only use <code>propext</code> and <code>quot.sound</code> as axioms.</p>",
        "id": 295573003,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661594862
    },
    {
        "content": "<p>I <em>could</em> also make those examples lemmas, but they are of little use in the propositional world.</p>",
        "id": 295573390,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661595019
    },
    {
        "content": "<p>Removing the tag would then golf it even more ;-)</p>",
        "id": 295573530,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1661595083
    },
    {
        "content": "<p>Yes but hopefully that will reduce the probability of someone doing so!</p>",
        "id": 295573707,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661595159
    },
    {
        "content": "<p>And of course I will write a library note explaining the role of those examples.</p>",
        "id": 295574781,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661595660
    },
    {
        "content": "<p>Are examples called weird auto-generated names internally? I suppose you could just give them silly private names</p>",
        "id": 295574972,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1661595780
    },
    {
        "content": "<p>Are examples even added to the environment?</p>",
        "id": 295578091,
        "sender_full_name": "Reid Barton",
        "timestamp": 1661597437
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span> <span class=\"o\">(⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">some</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">missing 'noncomputable' modifier, definition '_example' depends on 'Exists.some'</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>",
        "id": 295581447,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1661599113
    },
    {
        "content": "<p>doesn't seem to survive long though, if it ever even existed</p>",
        "id": 295581461,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1661599127
    },
    {
        "content": "<p>They get some awful auto-generated name iirc</p>",
        "id": 295582976,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1661599869
    },
    {
        "content": "<p>Examples aren't added to the environment I believe. Maybe you can just add a comment telling people not to golf them?</p>",
        "id": 295632287,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1661627633
    },
    {
        "content": "<p>I don't care about lasting attributes. I only want \"immediate action\" attributes.</p>",
        "id": 295632593,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661627855
    },
    {
        "content": "<p>How about just not using <code>example</code>?</p>",
        "id": 295635958,
        "sender_full_name": "Reid Barton",
        "timestamp": 1661630129
    },
    {
        "content": "<p>As I said, that would result in pretty useless lemmas about <code>Prop</code> (because assumptions would be uncurried and quite unnatural), and I would need to come up with names.</p>",
        "id": 295640340,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661633823
    },
    {
        "content": "<p>I don't understand what you want to do but <code>example</code> seems needlessly obscure</p>",
        "id": 295641782,
        "sender_full_name": "Reid Barton",
        "timestamp": 1661635360
    },
    {
        "content": "<p>Just make them private and call them example1, example2, ...</p>",
        "id": 295679258,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1661674152
    }
]