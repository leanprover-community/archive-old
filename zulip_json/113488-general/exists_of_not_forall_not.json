[
    {
        "content": "<p>I am a classical guy. Is <code>example (α : Type) (P : α → Prop) : (¬ (∀ a : α, ¬ P a)) → (∃ a : α, P a) := sorry</code> already in Lean or mathlib?</p>",
        "id": 123536960,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1520693382
    },
    {
        "content": "<p>some variant is in mathlib, see <code>not_forall</code> and the lemmas near it in <code>logic/basic.lean</code></p>",
        "id": 123537206,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1520693974
    },
    {
        "content": "<p>Thanks. My mistake was searching for exists_of rather than concentrating on not_forall...</p>",
        "id": 123538465,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1520697129
    },
    {
        "content": "<blockquote>\n<p>Thanks. My mistake was searching for exists_of rather than concentrating on not_forall...</p>\n</blockquote>\n<p>I thought the convention was that lemmas should be named after their conclusion.</p>",
        "id": 123539394,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1520699515
    },
    {
        "content": "<p>Yes but the lemma in the library was an iff ;-)</p>",
        "id": 123540476,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1520701957
    }
]