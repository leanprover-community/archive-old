[
    {
        "content": "<p>I've got the error <code>maximum class-instance resolution depth has been reached</code> so I set <code>set_option trace.class_instances true</code>, and I've got a long trace. Here's the beginning of the trace:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span>  <span class=\"n\">class</span><span class=\"bp\">-</span><span class=\"kn\">instance</span> <span class=\"n\">resolution</span> <span class=\"n\">trace</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"err\">?</span><span class=\"n\">x_0</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">category_theory</span><span class=\"bp\">.</span><span class=\"n\">limits</span><span class=\"bp\">.</span><span class=\"n\">has_colimit</span> <span class=\"n\">J</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">over</span> <span class=\"n\">C</span> <span class=\"err\">𝒞</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">over</span><span class=\"bp\">.</span><span class=\"n\">category_1</span> <span class=\"n\">C</span> <span class=\"err\">𝒞</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">F</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">over</span><span class=\"bp\">.</span><span class=\"n\">has_colimit</span> <span class=\"err\">?</span><span class=\"n\">x_1</span> <span class=\"err\">?</span><span class=\"n\">x_2</span> <span class=\"err\">?</span><span class=\"n\">x_3</span> <span class=\"err\">?</span><span class=\"n\">x_4</span> <span class=\"err\">?</span><span class=\"n\">x_5</span> <span class=\"err\">?</span><span class=\"n\">x_6</span> <span class=\"err\">?</span><span class=\"n\">x_7</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">?</span><span class=\"n\">x_7</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">category_theory</span><span class=\"bp\">.</span><span class=\"n\">limits</span><span class=\"bp\">.</span><span class=\"n\">has_colimit</span> <span class=\"n\">J</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"n\">C</span> <span class=\"err\">𝒞</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"err\">⋙</span> <span class=\"bp\">@</span><span class=\"n\">over</span><span class=\"bp\">.</span><span class=\"n\">forget</span> <span class=\"n\">C</span> <span class=\"err\">𝒞</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">over</span><span class=\"bp\">.</span><span class=\"n\">has_colimit</span> <span class=\"err\">?</span><span class=\"n\">x_8</span> <span class=\"err\">?</span><span class=\"n\">x_9</span> <span class=\"err\">?</span><span class=\"n\">x_10</span> <span class=\"err\">?</span><span class=\"n\">x_11</span> <span class=\"err\">?</span><span class=\"n\">x_12</span> <span class=\"err\">?</span><span class=\"n\">x_13</span> <span class=\"err\">?</span><span class=\"n\">x_14</span>\n<span class=\"n\">failed</span> <span class=\"n\">is_def_eq</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">?</span><span class=\"n\">x_7</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">category_theory</span><span class=\"bp\">.</span><span class=\"n\">limits</span><span class=\"bp\">.</span><span class=\"n\">has_colimit</span> <span class=\"n\">J</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"n\">C</span> <span class=\"err\">𝒞</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"err\">⋙</span> <span class=\"bp\">@</span><span class=\"n\">over</span><span class=\"bp\">.</span><span class=\"n\">forget</span> <span class=\"n\">C</span> <span class=\"err\">𝒞</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">adjunction</span><span class=\"bp\">.</span><span class=\"n\">has_colimit_comp_equivalence</span> <span class=\"err\">?</span><span class=\"n\">x_15</span> <span class=\"err\">?</span><span class=\"n\">x_16</span> <span class=\"err\">?</span><span class=\"n\">x_17</span> <span class=\"err\">?</span><span class=\"n\">x_18</span> <span class=\"err\">?</span><span class=\"n\">x_19</span> <span class=\"err\">?</span><span class=\"n\">x_20</span> <span class=\"err\">?</span><span class=\"n\">x_21</span> <span class=\"err\">?</span><span class=\"n\">x_22</span> <span class=\"err\">?</span><span class=\"n\">x_23</span> <span class=\"err\">?</span><span class=\"n\">x_24</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"err\">?</span><span class=\"n\">x_24</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">category_theory</span><span class=\"bp\">.</span><span class=\"n\">limits</span><span class=\"bp\">.</span><span class=\"n\">has_colimit</span> <span class=\"n\">J</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">over</span> <span class=\"n\">C</span> <span class=\"err\">𝒞</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">over</span><span class=\"bp\">.</span><span class=\"n\">category_1</span> <span class=\"n\">C</span> <span class=\"err\">𝒞</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">F</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">over</span><span class=\"bp\">.</span><span class=\"n\">has_colimit</span> <span class=\"err\">?</span><span class=\"n\">x_25</span> <span class=\"err\">?</span><span class=\"n\">x_26</span> <span class=\"err\">?</span><span class=\"n\">x_27</span> <span class=\"err\">?</span><span class=\"n\">x_28</span> <span class=\"err\">?</span><span class=\"n\">x_29</span> <span class=\"err\">?</span><span class=\"n\">x_30</span> <span class=\"err\">?</span><span class=\"n\">x_31</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"err\">?</span><span class=\"n\">x_31</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">category_theory</span><span class=\"bp\">.</span><span class=\"n\">limits</span><span class=\"bp\">.</span><span class=\"n\">has_colimit</span> <span class=\"n\">J</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"n\">C</span> <span class=\"err\">𝒞</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"err\">⋙</span> <span class=\"bp\">@</span><span class=\"n\">over</span><span class=\"bp\">.</span><span class=\"n\">forget</span> <span class=\"n\">C</span> <span class=\"err\">𝒞</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">over</span><span class=\"bp\">.</span><span class=\"n\">has_colimit</span> <span class=\"err\">?</span><span class=\"n\">x_32</span> <span class=\"err\">?</span><span class=\"n\">x_33</span> <span class=\"err\">?</span><span class=\"n\">x_34</span> <span class=\"err\">?</span><span class=\"n\">x_35</span> <span class=\"err\">?</span><span class=\"n\">x_36</span> <span class=\"err\">?</span><span class=\"n\">x_37</span> <span class=\"err\">?</span><span class=\"n\">x_38</span>\n<span class=\"n\">failed</span> <span class=\"n\">is_def_eq</span>\n</pre></div>\n\n\n<p>You can see the loop there - it repeats like this. How can I figure out what I've done which causes this? (If anyone wants to reproduce, clone <a href=\"https://github.com/leanprover-community/mathlib/tree/over-create-connected-limits\" title=\"https://github.com/leanprover-community/mathlib/tree/over-create-connected-limits\">this branch of mathlib</a> and add <code>import category_theory.limits.creates</code> to the top of <code>category_theory/limits/over.lean</code>)</p>",
        "id": 194381206,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1587080551
    },
    {
        "content": "<p>In particular what would be useful is knowing which instance is being used on each line</p>",
        "id": 194381373,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1587080669
    },
    {
        "content": "<p>The instance being matched is the one after the <code>:=</code></p>",
        "id": 194382081,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587081313
    },
    {
        "content": "<p>Oh. In that case I'm more confused - none of those instances are in the new file I'm importing</p>",
        "id": 194382191,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1587081427
    },
    {
        "content": "<p>Ah it's in an import of that file - thanks!</p>",
        "id": 194382279,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1587081513
    }
]