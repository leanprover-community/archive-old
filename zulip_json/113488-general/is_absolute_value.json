[
    {
        "content": "<p>I've just opened <a href=\"https://github.com/leanprover-community/mathlib/pull/16190\">#16190</a>, which tidies (a bit) the file with absolute values. However, theree is currently two ways of spelling this in mathlib; <a href=\"https://leanprover-community.github.io/mathlib_docs/find/absolute_value\">docs#absolute_value</a> (bundled), and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_absolute_value\">docs#is_absolute_value</a> (unbundled). Do people see any reason we should keep the unbundled version around? It makes it harder to work with things like <code>fun_like</code>, for a start, and is not in the style of mathlib. Plus, the current way this is implemented is via code duplication - I tidied this a bit in this PR, but it's not perfect (there's lemma disparity between both versions in both naming and existence)</p>",
        "id": 294584937,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1661117574
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> who are listed as authors</p>",
        "id": 294585373,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1661118228
    },
    {
        "content": "<p>Yeah, my intention was to replace the unbundled with the bundled version, or at least to prefer the bundled version in further developments.</p>",
        "id": 294634716,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1661159663
    },
    {
        "content": "<p>I'm making a start on <a href=\"https://github.com/leanprover-community/mathlib/pull/16340\">#16340</a>; the diff mostly seems great to me, but one thing we get that's bad is that we need to use <code>absolute_value.abs</code> a lot more than <code>abs</code> now, which is unwieldy. I'm pretty much removing all the basic mapping lemmas from <code>absolute_value</code>, too, and delegating them to fun_like versions (the only one I'm undecided on is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_absolute_value.map_div\">docs#is_absolute_value.map_div</a>, which turns into <a href=\"https://leanprover-community.github.io/mathlib_docs/find/map\">docs#map</a>_div₀)</p>",
        "id": 296511053,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1662001274
    },
    {
        "content": "<p>Also, how can you set up <code>simps</code> to use the <code>fun_like</code> coercion? Currently I'm just creating <code>simp</code> lemmas manually :/</p>",
        "id": 296511071,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1662001298
    },
    {
        "content": "<p>Yes you can, but I don't know how to.</p>",
        "id": 296525945,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662014931
    },
    {
        "content": "<p>Oh btw I'm adding some classes that are relevant to <code>absolute_value</code> in <a href=\"https://github.com/leanprover-community/mathlib/pull/16227\">#16227</a> so we should coordinate the two PRs.</p>",
        "id": 296526553,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662015261
    },
    {
        "content": "<p>Sure, I'll try make it dependent; I may keep some of the dot notation around still, though, as it's a lot shorter than <code>map_add_le_add</code> for example.</p>",
        "id": 296568100,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1662032541
    },
    {
        "content": "<p>the current approach I'm following is bundling and only then removing the class; <a href=\"https://github.com/leanprover-community/mathlib/pull/16347\">#16347</a> is the first step for <code>complex.abs</code>.</p>",
        "id": 296692691,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1662063251
    }
]