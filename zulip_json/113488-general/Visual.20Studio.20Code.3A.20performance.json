[
    {
        "content": "<p>Hi,<br>\nI'm using Lean 3 in Visual Studio Code on a 2015 MacBook and find that it can get very slow when checking certain files. The only trick I found that helps a little is to set Lean to \"checking visible lines\". It helps sometimes but for certain files it still takes minutes until I see the proof state appear...  It also slows down my computer as a whole and I need to quit Visual Studio Code sometimes when having it in the background and navigating in Chrome. I was wondering if there is anything I can do to make it faster.<br>\nThanks!</p>",
        "id": 229417173,
        "sender_full_name": "François Sunatori",
        "timestamp": 1615261640
    },
    {
        "content": "<p>If you're editing mathlib files that are far apart in the import chain, this is expected, as the Lean server has to recompile all files that depend on any edited file. What files are you editing?</p>",
        "id": 229417455,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615261839
    },
    {
        "content": "<p>I created a short file in analysis/complex that imports <code>analysis.complex.basic</code>.</p>",
        "id": 229417582,
        "sender_full_name": "François Sunatori",
        "timestamp": 1615261945
    },
    {
        "content": "<p>Did you edit any files that are imported by that file?</p>",
        "id": 229417596,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615261975
    },
    {
        "content": "<p>no I didn't..</p>",
        "id": 229417625,
        "sender_full_name": "François Sunatori",
        "timestamp": 1615262001
    },
    {
        "content": "<p>If not, then you can try restarting the Lean server in VS Code: hit cmd+shift+P and then search for \"Lean: restart\".</p>",
        "id": 229417628,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615262015
    },
    {
        "content": "<p>I think sometimes opening lots of files can cause Lean to think that something has been edited.</p>",
        "id": 229417686,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615262052
    },
    {
        "content": "<p>Oh I see. So is it better then to only keep one file open at a time?</p>",
        "id": 229417757,
        "sender_full_name": "François Sunatori",
        "timestamp": 1615262160
    },
    {
        "content": "<p>It usually doesn't matter too much, but I think I usually don't have more than 5 Lean files open at a time either. If you can reliably reproduce the issue, let us know; maybe there's a bug somewhere that can be fixed.</p>",
        "id": 229417884,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615262283
    },
    {
        "content": "<p>Ok for now (after restarting the Lean server) it's taking forever to load...</p>",
        "id": 229417988,
        "sender_full_name": "François Sunatori",
        "timestamp": 1615262360
    },
    {
        "content": "<p>In terms of the \"checking ...\" settings, is there one that is preferable for performance? I guessed that \"checking visible lines\" might be the one taking the least time.</p>",
        "id": 229418110,
        "sender_full_name": "François Sunatori",
        "timestamp": 1615262439
    },
    {
        "content": "<p>I suspect some Lean files were touched or changed inadvertently. You can try stashing your work with <code>git stash</code> and then running <code>leanproject get-cache</code> to reset the compiled <code>olean</code> files. (And then <code>git stash pop</code> afterwards). If that doesn't help you might have to build mathlib yourself with <code>leanproject build</code>.</p>",
        "id": 229418203,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615262518
    },
    {
        "content": "<p>You can play around with the various checking ... settings but I don't think they'll solve your issue (to be honest, I don't remember what the differences are between them). If you have the correct compiled \"olean\" files for mathlib, it should take only a few seconds to open any file in mathlib. Now, your file itself might have some very slow proofs, but presumably that's not what you're seeing.</p>",
        "id": 229418477,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615262672
    },
    {
        "content": "<p>Ok good to know. It definitely isn't taking just a few seconds for me... even after doing <code>leanproject get-cache</code></p>",
        "id": 229418640,
        "sender_full_name": "François Sunatori",
        "timestamp": 1615262838
    },
    {
        "content": "<p>Out of curiosity, what does <code>git status</code> say after you pop your changes off the stash?</p>",
        "id": 229418731,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615262892
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">On</span> <span class=\"n\">branch</span> <span class=\"n\">master</span>\n<span class=\"n\">Your</span> <span class=\"n\">branch</span> <span class=\"n\">is</span> <span class=\"n\">behind</span> <span class=\"bp\">'</span><span class=\"n\">origin</span><span class=\"bp\">/</span><span class=\"n\">master'</span> <span class=\"kd\">by</span> <span class=\"mi\">12</span> <span class=\"n\">commits</span><span class=\"o\">,</span> <span class=\"n\">and</span> <span class=\"n\">can</span> <span class=\"n\">be</span> <span class=\"n\">fast</span><span class=\"bp\">-</span><span class=\"n\">forwarded.</span>\n  <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"s2\">\"git pull\"</span> <span class=\"n\">to</span> <span class=\"n\">update</span> <span class=\"n\">your</span> <span class=\"kn\">local</span> <span class=\"n\">branch</span><span class=\"o\">)</span>\n\n<span class=\"n\">Untracked</span> <span class=\"n\">files</span><span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"s2\">\"git add &lt;file&gt;...\"</span> <span class=\"n\">to</span> <span class=\"kn\">include</span> <span class=\"k\">in</span> <span class=\"n\">what</span> <span class=\"n\">will</span> <span class=\"n\">be</span> <span class=\"n\">committed</span><span class=\"o\">)</span>\n\n        <span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">analysis</span><span class=\"bp\">/</span><span class=\"n\">complex</span><span class=\"bp\">/</span><span class=\"n\">isometry.lean</span>\n\n<span class=\"n\">nothing</span> <span class=\"n\">added</span> <span class=\"n\">to</span> <span class=\"n\">commit</span> <span class=\"n\">but</span> <span class=\"n\">untracked</span> <span class=\"n\">files</span> <span class=\"n\">present</span> <span class=\"o\">(</span><span class=\"n\">use</span> <span class=\"s2\">\"git add\"</span> <span class=\"n\">to</span> <span class=\"n\">track</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 229418811,
        "sender_full_name": "François Sunatori",
        "timestamp": 1615262970
    },
    {
        "content": "<p>(Also, after you run <code>leanproject get-cache</code> don't forget to restart the Lean server).</p>",
        "id": 229418815,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615262974
    },
    {
        "content": "<p>If it's still slow after that, then I wonder if a file in the core Lean library got modified somehow.</p>",
        "id": 229418961,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615263060
    },
    {
        "content": "<p>Oh it's so much faster now!</p>",
        "id": 229419023,
        "sender_full_name": "François Sunatori",
        "timestamp": 1615263096
    },
    {
        "content": "<p>I hadn't restarted the server after the <code>leanproject get-cache</code></p>",
        "id": 229419032,
        "sender_full_name": "François Sunatori",
        "timestamp": 1615263118
    },
    {
        "content": "<p>OK, great! I think we should add some documentation suggesting to restart the server after running <code>leanproject</code>, as it seems to be a common issue.</p>",
        "id": 229419186,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615263190
    },
    {
        "content": "<p>Thanks so much! I'm still new to Lean so I didn't know about <code>leanproject get-cache</code>.. Thanks for letting me know about it</p>",
        "id": 229419193,
        "sender_full_name": "François Sunatori",
        "timestamp": 1615263196
    },
    {
        "content": "<p>Yeah, there's some documentation for <code>leanproject</code> <a href=\"https://leanprover-community.github.io/leanproject.html\">here</a>: it suggests running <code>leanproject get-mathlib-cache</code> (which is equivalent, when run in mathlib itself).</p>",
        "id": 229419286,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615263287
    },
    {
        "content": "<p>Thanks for the link... maybe I should have gone through that doc before getting too deep into Lean.. (I guess I was too impatient to start writing some Lean code!)</p>",
        "id": 229419368,
        "sender_full_name": "François Sunatori",
        "timestamp": 1615263359
    },
    {
        "content": "<p>No problem and good luck! Feel free to ask again if you have more questions.</p>",
        "id": 229419444,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615263408
    },
    {
        "content": "<p>Hi, I just pulled <code>master</code> and ran</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">cache</span>\n</code></pre></div>\n<p>and I got:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"kn\">local</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">remote</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Trying</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">oleanstorage.azureedge.net</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"mi\">14</span><span class=\"n\">d71874fa87c8cf108e6f1441fb963c5363522a.tar.xz</span> <span class=\"n\">to</span> <span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">fss</span><span class=\"bp\">/.</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"mi\">14</span><span class=\"n\">d71874fa87c8cf108e6f1441fb963c5363522a.tar.xz</span>\n<span class=\"n\">Failed</span> <span class=\"n\">to</span> <span class=\"n\">fetch</span> <span class=\"n\">cached</span> <span class=\"n\">oleans</span>\n</code></pre></div>\n<p>am I missing something for it to be able to fetch the cached oleans?<br>\nThanks!</p>",
        "id": 240271900,
        "sender_full_name": "François Sunatori",
        "timestamp": 1621994766
    },
    {
        "content": "<p>What does <code>git status</code> say? <code>14d71874fa</code> is not a commit in our mathlib repo as far as I can tell.</p>",
        "id": 240272502,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1621995434
    },
    {
        "content": "<p>oh my bad I switched to my working branch before running <code>$ leanproject get-cache</code></p>",
        "id": 240272781,
        "sender_full_name": "François Sunatori",
        "timestamp": 1621995768
    },
    {
        "content": "<p>thanks for the hint :)</p>",
        "id": 240273451,
        "sender_full_name": "François Sunatori",
        "timestamp": 1621996553
    }
]