[
    {
        "content": "<p>A tactic I'm writing will need</p>\n<div class=\"codehilite\"><pre><span></span>def lexicographic_preorder {α β : Type*} [preorder α] [preorder β] : preorder (α × β) :=\n{ le := λ a b, a.1 &lt; b.1 ∨ (a.1 = b.1 ∧ a.2 ≤ b.2),\n  le_refl := ...,\n  le_trans := ..., }\n</pre></div>\n\n\n<p>as a local instance. Last time I asked it didn't seem like this was already in mathlib (explicitly in terms of preorders). Should I PR it ahead of the tactic PR?</p>",
        "id": 160857760,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1552640657
    },
    {
        "content": "<p>I like it. No instance, maybe shorten to <code>lex_preorder</code> since <code>lex</code> is used elsewhere for this thing, and also add total order and well order if possible</p>",
        "id": 160857907,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1552640834
    },
    {
        "content": "<p>Great, will do.</p>",
        "id": 160859817,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1552642922
    },
    {
        "content": "<p>A suggestion which file it goes in?</p>",
        "id": 160859833,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1552642939
    },
    {
        "content": "<p><code>order.basic</code> I think</p>",
        "id": 160866301,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1552649327
    },
    {
        "content": "<p>In the meantime I've PR'd it to <code>src/order/lexicographic.lean</code>. Shall I move it back into <code>basic</code>?</p>",
        "id": 160866392,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1552649414
    },
    {
        "content": "<p>It looks like actually using my lexicographic pre/partial/linear orders is a bit painful, because of the existing pre/partial order on products.</p>",
        "id": 160934448,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1552711340
    },
    {
        "content": "<p>I'm wondering if we should actually remove those as instances.</p>",
        "id": 160934452,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1552711362
    },
    {
        "content": "<p>In my mind the two different partial orders on a product are both sensible things, and so by our usual rules about instances neither should be installed by default.</p>",
        "id": 160934461,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1552711393
    },
    {
        "content": "<p>I'm compiling everything now, but so far it seems there are no breakages at this point.</p>",
        "id": 160934527,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1552711521
    },
    {
        "content": "<p>I would be in favor of only making the lexicographical order an instance because it yields a total order which the current one does not. We could use a type synonym if we want to select the current order</p>",
        "id": 160967122,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1552769469
    },
    {
        "content": "<p>Or locally make it an instance and decrease the priority of lexicographical order</p>",
        "id": 160967138,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1552769497
    }
]