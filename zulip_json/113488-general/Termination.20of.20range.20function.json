[
    {
        "content": "<p>I'm trying to implement a function which generates a range from a bounded Nat (BNat)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">BNat.range</span> <span class=\"o\">{</span><span class=\"n\">min</span> <span class=\"n\">max</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">h'</span> <span class=\"o\">:</span> <span class=\"n\">min</span> <span class=\"bp\">≤</span> <span class=\"n\">max</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"bp\">$</span> <span class=\"n\">BNat</span> <span class=\"n\">min</span> <span class=\"n\">max</span> <span class=\"n\">h'</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">rec</span> <span class=\"kd\">@[specialize]</span> <span class=\"n\">it</span> <span class=\"o\">:</span> <span class=\"n\">BNat</span> <span class=\"n\">min</span> <span class=\"n\">max</span> <span class=\"n\">h'</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">List</span> <span class=\"bp\">$</span> <span class=\"n\">BNat</span> <span class=\"n\">min</span> <span class=\"n\">max</span> <span class=\"n\">h'</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"k\">if</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n.val</span> <span class=\"bp\">&lt;</span> <span class=\"n\">max</span> <span class=\"k\">then</span>\n      <span class=\"n\">List.cons</span> <span class=\"n\">n</span> <span class=\"bp\">$</span> <span class=\"n\">it</span>\n        <span class=\"o\">{</span> <span class=\"n\">val</span> <span class=\"o\">:=</span> <span class=\"n\">Nat.succ</span> <span class=\"n\">n.val</span>\n        <span class=\"o\">,</span> <span class=\"n\">isLe</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n        <span class=\"o\">,</span> <span class=\"n\">isGe</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"kd\">by</span>\n          <span class=\"n\">apply</span> <span class=\"n\">ge_is_le</span>\n          <span class=\"n\">apply</span> <span class=\"n\">Nat.le_of_lt</span>\n          <span class=\"n\">apply</span> <span class=\"n\">Nat.lt_succ_of_le</span>\n          <span class=\"n\">apply</span> <span class=\"n\">n.isGe</span>\n        <span class=\"o\">)</span>\n        <span class=\"o\">}</span>\n    <span class=\"k\">else</span>\n      <span class=\"o\">[</span><span class=\"n\">BNat.mk</span> <span class=\"n\">n.val</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">n.isLe</span><span class=\"o\">)</span> <span class=\"n\">n.isGe</span><span class=\"o\">]</span>\n  <span class=\"o\">)</span>\n  <span class=\"n\">it</span> <span class=\"o\">(</span><span class=\"n\">BNat.mk</span> <span class=\"n\">min</span> <span class=\"n\">h'</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">ge_refl</span><span class=\"o\">))</span>\n<span class=\"n\">termination_by</span> <span class=\"n\">measure</span> <span class=\"bp\">λ</span> <span class=\"n\">b</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">b.snd.snd.snd.val</span>\n<span class=\"n\">decreasing_by</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>How do I prove that the function will eventually reach <code>n.val = max</code> and terminate?</p>",
        "id": 266932128,
        "sender_full_name": "Anders Christiansen Sørby",
        "timestamp": 1641387624
    },
    {
        "content": "<p>I assume this is Lean 4? You might want to migrate to <a class=\"stream\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4\">#lean4</a></p>",
        "id": 266932417,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641387753
    }
]