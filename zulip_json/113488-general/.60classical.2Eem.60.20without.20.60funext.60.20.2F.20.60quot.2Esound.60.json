[
    {
        "content": "<p>Proof of <code>classical.em</code> from <code>propext</code> and a weaker, <code>Prop</code>-only version of <code>classical.choice</code> (similar to a statement equivalent to Choice in ZF set theory, which I think should suffice for all mathematical purposes).<br>\n[Will be back in 2 hours to see responses :)]</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n<span class=\"kn\">axiom</span> <span class=\"n\">nonempty_pi</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Sort</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"bp\">→</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">lemma classical.nonempty_pi {α : Sort u} {β : α → Sort v} :</span>\n<span class=\"cm\">  nonempty (Πa:α, β a) ↔ (∀a:α, nonempty (β a))</span>\n<span class=\"cm\">-/</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">axioms</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">nonempty_pi</span> <span class=\"c1\">-- classical.choice</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">diaconescu</span>\n<span class=\"kn\">parameter</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n\n<span class=\"kn\">inductive</span> <span class=\"n\">subs</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"kt\">Prop</span> <span class=\"bp\">×</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">U</span> <span class=\"o\">:</span> <span class=\"n\">subs</span> <span class=\"bp\">⟨</span><span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">p</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">|</span> <span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">subs</span> <span class=\"bp\">⟨</span><span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"bp\">⟩</span>\n\n<span class=\"n\">def</span> <span class=\"n\">dtype</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"bp\">×</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">bool</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"n\">tt</span> <span class=\"o\">:=</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"n\">ff</span> <span class=\"o\">:=</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"mi\">2</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">em</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"bp\">¬</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">nonempty_pi</span> <span class=\"o\">(</span><span class=\"n\">subtype</span> <span class=\"n\">subs</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span><span class=\"n\">P</span><span class=\"o\">,</span> <span class=\"n\">subtype</span> <span class=\"o\">(</span><span class=\"n\">dtype</span> <span class=\"n\">P</span><span class=\"o\">))</span> <span class=\"bp\">_</span> <span class=\"k\">with</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">set</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"n\">f</span><span class=\"bp\">⟨_</span><span class=\"o\">,</span><span class=\"n\">subs</span><span class=\"bp\">.</span><span class=\"n\">U</span><span class=\"bp\">⟩</span> <span class=\"k\">with</span> <span class=\"n\">hu</span><span class=\"o\">,</span> <span class=\"n\">set</span> <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"n\">f</span><span class=\"bp\">⟨_</span><span class=\"o\">,</span><span class=\"n\">subs</span><span class=\"bp\">.</span><span class=\"n\">V</span><span class=\"bp\">⟩</span> <span class=\"k\">with</span> <span class=\"n\">hv</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">u</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">≠</span> <span class=\"n\">v</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"n\">up</span> <span class=\"o\">:=</span> <span class=\"n\">u</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">u</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">up</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">vp</span> <span class=\"o\">:=</span> <span class=\"n\">v</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">v</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">trivial</span><span class=\"o\">,</span>\n                                 <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">vp</span> <span class=\"o\">},</span>\n    <span class=\"n\">cases</span> <span class=\"n\">this</span> <span class=\"k\">with</span> <span class=\"n\">unv</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">intro</span> <span class=\"n\">pp</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">unv</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hu</span><span class=\"o\">,</span><span class=\"n\">hv</span><span class=\"o\">],</span> <span class=\"n\">congr</span><span class=\"bp\">;</span> <span class=\"n\">simpa</span> <span class=\"o\">},</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">this</span> <span class=\"o\">},</span>\n  <span class=\"n\">intro</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">rcases</span> <span class=\"n\">s</span> <span class=\"k\">with</span> <span class=\"bp\">⟨⟨</span><span class=\"n\">pt</span><span class=\"o\">,</span><span class=\"n\">pf</span><span class=\"bp\">⟩</span><span class=\"o\">,</span><span class=\"n\">pu</span><span class=\"o\">,</span><span class=\"n\">pv</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">tt</span><span class=\"o\">,</span> <span class=\"n\">use</span> <span class=\"n\">ff</span>\n<span class=\"kn\">end</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">axioms</span> <span class=\"n\">em</span> <span class=\"c1\">-- nonempty_pi, propext</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">diaconescu</span>\n</code></pre></div>",
        "id": 207352044,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1597791253
    },
    {
        "content": "<p>yes, this sounds about right. This has the axiomatic strength of ZFC, as opposed to ZF + global choice which is what <code>classical.choice</code> models</p>",
        "id": 207353142,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597791972
    },
    {
        "content": "<p>Consider also:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n<span class=\"kn\">axiom</span> <span class=\"n\">nonempty_pi</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Sort</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"bp\">→</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">nonempty_choice_from_pi</span> <span class=\"o\">:</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"n\">nonempty</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">nonempty_pi</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">nonempty_pi</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"n\">id</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">axioms</span> <span class=\"n\">nonempty_choice_from_pi</span> <span class=\"c1\">-- nonempty_pi</span>\n\n<span class=\"kn\">axiom</span> <span class=\"n\">nonempty_choice</span> <span class=\"o\">:</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"n\">nonempty</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">nonempty_pi_from_choice</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Sort</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"bp\">→</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">obtain</span> <span class=\"bp\">⟨</span><span class=\"n\">choice</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">nonempty_choice</span><span class=\"o\">,</span>\n  <span class=\"n\">refine</span> <span class=\"bp\">⟨λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">_⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"n\">ulift</span> <span class=\"o\">(</span><span class=\"n\">plift</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">))),</span>\n  <span class=\"k\">from</span> <span class=\"o\">(</span><span class=\"n\">choice</span> <span class=\"bp\">_</span> <span class=\"n\">this</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">down</span><span class=\"bp\">.</span><span class=\"n\">down</span><span class=\"o\">,</span>\n  <span class=\"k\">obtain</span> <span class=\"bp\">⟨</span><span class=\"n\">b</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"bp\">⟨⟨⟨</span><span class=\"n\">b</span><span class=\"bp\">⟩⟩⟩</span>\n<span class=\"kn\">end</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">axioms</span> <span class=\"n\">nonempty_pi_from_choice</span> <span class=\"c1\">-- nonempty_choice</span>\n</code></pre></div>",
        "id": 207355552,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597793896
    },
    {
        "content": "<p>Interestingly, this means that if you compose the two proofs you get a proof of <code>em</code> that avoids <code>quot.sound</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">nonempty_pi_from_choice</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Sort</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"bp\">→</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">refine</span> <span class=\"bp\">⟨λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">_⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"n\">ulift</span> <span class=\"o\">(</span><span class=\"n\">plift</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"n\">a</span><span class=\"o\">))),</span>\n  <span class=\"k\">from</span> <span class=\"o\">(</span><span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">choice</span> <span class=\"n\">this</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">down</span><span class=\"bp\">.</span><span class=\"n\">down</span><span class=\"o\">,</span>\n  <span class=\"k\">obtain</span> <span class=\"bp\">⟨</span><span class=\"n\">b</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"bp\">⟨⟨⟨</span><span class=\"n\">b</span><span class=\"bp\">⟩⟩⟩</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">diaconescu</span>\n<span class=\"kn\">parameter</span> <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n\n<span class=\"kn\">inductive</span> <span class=\"n\">subs</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"kt\">Prop</span> <span class=\"bp\">×</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">U</span> <span class=\"o\">:</span> <span class=\"n\">subs</span> <span class=\"bp\">⟨</span><span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">p</span><span class=\"bp\">⟩</span>\n<span class=\"bp\">|</span> <span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">subs</span> <span class=\"bp\">⟨</span><span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"bp\">⟩</span>\n\n<span class=\"n\">def</span> <span class=\"n\">dtype</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"bp\">×</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">bool</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"n\">tt</span> <span class=\"o\">:=</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"n\">ff</span> <span class=\"o\">:=</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"mi\">2</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">em&#39;</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"bp\">¬</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">nonempty_pi_from_choice</span> <span class=\"o\">(</span><span class=\"n\">subtype</span> <span class=\"n\">subs</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span><span class=\"n\">P</span><span class=\"o\">,</span> <span class=\"n\">subtype</span> <span class=\"o\">(</span><span class=\"n\">dtype</span> <span class=\"n\">P</span><span class=\"o\">))</span> <span class=\"bp\">_</span> <span class=\"k\">with</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">set</span> <span class=\"n\">u</span> <span class=\"o\">:=</span> <span class=\"n\">f</span> <span class=\"bp\">⟨</span><span class=\"o\">(</span><span class=\"n\">true</span><span class=\"o\">,</span> <span class=\"n\">p</span><span class=\"o\">),</span> <span class=\"n\">subs</span><span class=\"bp\">.</span><span class=\"n\">U</span><span class=\"bp\">⟩</span> <span class=\"k\">with</span> <span class=\"n\">hu</span><span class=\"o\">,</span>\n    <span class=\"n\">set</span> <span class=\"n\">v</span> <span class=\"o\">:=</span> <span class=\"n\">f</span> <span class=\"bp\">⟨</span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">),</span> <span class=\"n\">subs</span><span class=\"bp\">.</span><span class=\"n\">V</span><span class=\"bp\">⟩</span> <span class=\"k\">with</span> <span class=\"n\">hv</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">u</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">≠</span> <span class=\"n\">v</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"n\">up</span> <span class=\"o\">:=</span> <span class=\"n\">u</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">u</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">up</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">vp</span> <span class=\"o\">:=</span> <span class=\"n\">v</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">v</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">trivial</span><span class=\"o\">,</span>\n                                 <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">vp</span> <span class=\"o\">},</span>\n    <span class=\"n\">cases</span> <span class=\"n\">this</span> <span class=\"k\">with</span> <span class=\"n\">unv</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">intro</span> <span class=\"n\">pp</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">unv</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hu</span><span class=\"o\">,</span><span class=\"n\">hv</span><span class=\"o\">],</span> <span class=\"n\">congr</span><span class=\"bp\">;</span> <span class=\"n\">simpa</span> <span class=\"o\">},</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">this</span> <span class=\"o\">},</span>\n  <span class=\"n\">intro</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">rcases</span> <span class=\"n\">s</span> <span class=\"k\">with</span> <span class=\"bp\">⟨⟨</span><span class=\"n\">pt</span><span class=\"o\">,</span><span class=\"n\">pf</span><span class=\"bp\">⟩</span><span class=\"o\">,</span><span class=\"n\">pu</span><span class=\"o\">,</span><span class=\"n\">pv</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">tt</span><span class=\"o\">,</span> <span class=\"n\">use</span> <span class=\"n\">ff</span>\n<span class=\"kn\">end</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">axioms</span> <span class=\"n\">em&#39;</span> <span class=\"c1\">-- classical.choice, propext</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">diaconescu</span>\n</code></pre></div>",
        "id": 207356278,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597794740
    }
]