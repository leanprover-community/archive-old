[
    {
        "content": "<p>I just installed <code>elan</code>. Succesfully it seems. I then ran <code>mkdir ~/mess/leantest</code> and inside that directory, I ran <code>elan toolchain install nightly</code>. This provided me with a <code>leanpkg</code> command, and I ran <code>leanpkg add https://github.com/leanprover/mathlib</code>. After cloning from github, it complained <code>cannot find revision lean-3.4.0 in repository _target/deps/mathlib</code>. I guess this is somehow expected, because mathlib is not 3.4.0 ready. Right?</p>",
        "id": 125295801,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524127715
    },
    {
        "content": "<p>So which permutation of command should I run, to get the most up to date version of lean + mathlib on my box?</p>",
        "id": 125295811,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524127748
    },
    {
        "content": "<p>do you have a <code>leanpkg.toml</code> file? What is in it?</p>",
        "id": 125295909,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524127953
    },
    {
        "content": "<p>You're probably using Lean stable, which is installed by elan by default - see <code>lean -v</code> or <code>elan show</code></p>",
        "id": 125295915,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524127981
    },
    {
        "content": "<p>What do I need to do to make this work?</p>",
        "id": 125295926,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524128013
    },
    {
        "content": "<p>Is it just adding a tag with the name <code>lean-3.4.0</code>?</p>",
        "id": 125295931,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524128029
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>elan show\ninstalled toolchains\n--------------------\n\nstable-x86_64-unknown-linux-gnu\nnightly-x86_64-unknown-linux-gnu\n\nactive toolchain\n----------------\n\nstable-x86_64-unknown-linux-gnu (default)\nLean (version 3.4.0, commit 4be96eaaaf71, Release)\n</pre></div>",
        "id": 125295932,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128031
    },
    {
        "content": "<p>I do not have a <code>.toml</code> file</p>",
        "id": 125295935,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128041
    },
    {
        "content": "<p>Should I write this myself?</p>",
        "id": 125295974,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128047
    },
    {
        "content": "<p><code>leanpkg init &lt;package name&gt;</code> will create it for you. You can use <code>leanpkg +nightly init ...</code> to set the Lean version to a nightly, but I'm not sure there is any point in encouraging users to use nightlies any more. <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> What do you think?</p>",
        "id": 125295992,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524128148
    },
    {
        "content": "<p>Ok, I see</p>",
        "id": 125296038,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128194
    },
    {
        "content": "<p>Is there a concensus?</p>",
        "id": 125296039,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128199
    },
    {
        "content": "<p>Not yet I think. Right now, <code>stable</code> and <code>nightly</code> are functionally the same Lean version.</p>",
        "id": 125296049,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524128260
    },
    {
        "content": "<p>Assuming lean is completely frozen now, I guess we can move to building against 3.4.0, but I expect some occasional bugfixes will come along, and then I will want to go back to nightlies</p>",
        "id": 125296050,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524128262
    },
    {
        "content": "<p>I hope that, now that 3.4 is out, there is a stable way to get everything working together</p>",
        "id": 125296051,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128271
    },
    {
        "content": "<p>And then we document this, so that users know which 5 commands to run in a fresh directory to get a lean project up and running</p>",
        "id": 125296104,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128297
    },
    {
        "content": "<p>For now, though, you want to make sure that your lean version is nightly-2018-04-06 since that's what mathlib master is using</p>",
        "id": 125296106,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524128302
    },
    {
        "content": "<p>Ok, and how should I make sure I get that nightly, using <code>elan</code></p>",
        "id": 125296113,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128332
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Yeah, I guess a tag should work. Not sure if force-updating it will work too :) .</p>",
        "id": 125296116,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524128342
    },
    {
        "content": "<p>(Because it seems using <code>elan</code> is wise)</p>",
        "id": 125296119,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128345
    },
    {
        "content": "<p>I am not the elan guru in this conversation :)</p>",
        "id": 125296123,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524128363
    },
    {
        "content": "<p><code>leanpkg +nightly-2018-04-06 init mypackage</code></p>",
        "id": 125296124,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524128365
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> When do you expect mathlib to use 3.4? (No pressure...)</p>",
        "id": 125296125,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128369
    },
    {
        "content": "<p>Probably tomorrow or the day after, when I get a chance to sit down and look at the changes</p>",
        "id": 125296130,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524128398
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> But to have a <code>leanpkg</code> command, I already need to first run an <code>elan</code> command, right?</p>",
        "id": 125296178,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128416
    },
    {
        "content": "<p>Because <code>elan</code> provides me with a <code>leanpkg</code></p>",
        "id": 125296180,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128427
    },
    {
        "content": "<p>No, you just need to have elan installed</p>",
        "id": 125296187,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524128465
    },
    {
        "content": "<p>It's the same as <code>elan run nightly-2018-04-06 leanpkg init mypackage</code>, if you like that better :)</p>",
        "id": 125296194,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524128512
    },
    {
        "content": "<p>Ok, so I empty my leantest directory</p>",
        "id": 125296237,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128530
    },
    {
        "content": "<p>And I get</p>",
        "id": 125296245,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128566
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ elan run nightly-2018-04-06 leanpkg init leantest\nerror: toolchain &#39;nightly-2018-04-06-x86_64-unknown-linux-gnu&#39; is not installed\n</pre></div>",
        "id": 125296248,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128576
    },
    {
        "content": "<p>Oops, I was hoping this worked... then you need to run <code>elan toolchain install nightly-2018-04-06</code> first</p>",
        "id": 125296340,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524128706
    },
    {
        "content": "<p>Ok, I'll try that</p>",
        "id": 125296348,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128727
    },
    {
        "content": "<p>My first goal now, is to write a 10-line readme, that will explain how to start a fresh project.</p>",
        "id": 125296393,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128767
    },
    {
        "content": "<p>Including VScode integration, I hope</p>",
        "id": 125296394,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128776
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> That worked. And now I also ran <code>elan run nightly-2018-04-06 leanpkg init leantest</code></p>",
        "id": 125296406,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128842
    },
    {
        "content": "<p>Should the next step be <code>leanpkg add https://github.com/leanprover/mathlib\n</code>?</p>",
        "id": 125296411,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128866
    },
    {
        "content": "<p>Yes</p>",
        "id": 125296465,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524128920
    },
    {
        "content": "<p>is there a way to get the version number from mathlib?</p>",
        "id": 125296473,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524128945
    },
    {
        "content": "<p>You mean the <code>lean_version</code>?</p>",
        "id": 125296480,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524128967
    },
    {
        "content": "<p>yes</p>",
        "id": 125296481,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524128970
    },
    {
        "content": "<p>Ok, that worked. I assume now I should run <code>leanpkg build</code>. Right?</p>",
        "id": 125296483,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524128985
    },
    {
        "content": "<p>The mathlib elan setup doesn't say anything about lean versions</p>",
        "id": 125296484,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524128986
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> If you get that 10 line startup script working, pr it to the mathlib readme</p>",
        "id": 125296536,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524129050
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> That should work, but not do much. Lean only builds the part of the dependencies you actually import in your <code>src</code> directory</p>",
        "id": 125296537,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524129055
    },
    {
        "content": "<p>Ok, so there is no need to run <code>leanpkg build</code> right now?</p>",
        "id": 125296546,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524129093
    },
    {
        "content": "<p>Then I won't do it</p>",
        "id": 125296547,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524129097
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Ok, I'll do that. Once I've got it working (^;</p>",
        "id": 125296589,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524129137
    },
    {
        "content": "<p>I was surprised you were able to run <code>leanpkg add</code> before initializing the package. I guess you got a \"failed to open file 'leanpkg.toml'\" only at the very end? Pretty much a bug in leanpkg, oh well.</p>",
        "id": 125296591,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524129168
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> I love breaking things. Hehe</p>",
        "id": 125296604,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524129236
    },
    {
        "content": "<p>Right, so I did not run <code>leanpkg build</code>. Only fired up VScode</p>",
        "id": 125296650,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524129270
    },
    {
        "content": "<p>It says <code>No Lean file active</code> in the Lean messages, after I opened a <code>.lean</code> file</p>",
        "id": 125296660,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524129299
    },
    {
        "content": "<p>Clicking anywhere in the file usually fixes this for me.</p>",
        "id": 125296729,
        "sender_full_name": "Moses Schönfinkel",
        "timestamp": 1524129403
    },
    {
        "content": "<p>Ok, that works. Never had to do that...</p>",
        "id": 125296749,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524129480
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Not sure what you're trying to achieve. The Travis build will select the correct version from <code>lean_version</code> automatically.</p>",
        "id": 125296786,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524129486
    },
    {
        "content": "<p>well, I'm mildly surprised that the default setup gave the wrong version of lean for mathlib</p>",
        "id": 125296794,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524129532
    },
    {
        "content": "<p>I want a short command or script to give to a newbie that wants the latest version of mathlib and a compatible version of lean</p>",
        "id": 125296804,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524129586
    },
    {
        "content": "<p>I'd prefer that the script not contain the literal string <code>nightly-2018-04-06</code> since that ages</p>",
        "id": 125296858,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524129644
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> But I need to tell VScode to use the correct version of lean, right? So I edit the settings, to point it to <code>~/.elan/toolchains/nightly-2018-04-06-x86_64-unknown-linux-gnu/bin/lean</code>, is that correct?</p>",
        "id": 125296877,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524129696
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> I've only tested emacs so far, but specifying <code>~/.elan/bin/lean</code> should work</p>",
        "id": 125296932,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524129764
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Lean: Unable to start the Lean server process: Error: spawn ~/.elan/bin/lean ENOENT The lean.executablePath may be incorrect, make sure it is a valid Lean executable\n</pre></div>",
        "id": 125297004,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524129860
    },
    {
        "content": "<p>Alas, it is still complaining</p>",
        "id": 125297007,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524129868
    },
    {
        "content": "<p>put <code>.exe</code> at the end?</p>",
        "id": 125297029,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1524129955
    },
    {
        "content": "<p>On Linux?</p>",
        "id": 125297072,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524129968
    },
    {
        "content": "<p>Maybe it doesn't like the <code>~</code></p>",
        "id": 125297074,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524129978
    },
    {
        "content": "<p>Yes, I'm on linux</p>",
        "id": 125297080,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524130018
    },
    {
        "content": "<p>Ok, that seems to have done it. I expanded the <code>~</code> to my homedir</p>",
        "id": 125297134,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524130095
    },
    {
        "content": "<p>Nice, good to know</p>",
        "id": 125297136,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524130104
    },
    {
        "content": "<p>Ok, I'm now try to compile Kevin's result that Spec(R) is quasi-compact</p>",
        "id": 125297144,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524130161
    },
    {
        "content": "<p>If that works, then I'll write the little readme</p>",
        "id": 125297145,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524130172
    },
    {
        "content": "<p>Also, is there a way to tell lean not to use all my CPU threads?</p>",
        "id": 125297154,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524130201
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>mkdir leantest/\ncd leantest/\nelan run nightly-2018-04-06 leanpkg init leantest\nelan toolchain install nightly-2018-04-06\nelan run nightly-2018-04-06 leanpkg init leantest\nls\nls -a\nleanpkg add https://github.com/leanprover/mathlib\nleanpkg add https://github.com/kbuzzard/lean-stacks-project\nls\nelan show\n\n# Change VScode settings to point to &quot;/home/&lt;user&gt;/.elan/bin/lean&quot;\n</pre></div>",
        "id": 125297269,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524130360
    },
    {
        "content": "<p>That is my current bash history</p>",
        "id": 125297276,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524130369
    },
    {
        "content": "<p>So, I'll clean it up, and write a bit of details. But I thought I would log it here as well</p>",
        "id": 125297290,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524130393
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> So, this looks like a chicken and egg problem - when selecting the Lean version for creating the package, we don't know what dependencies the user will install yet. Well, it doesn't really matter what version to use for creating the package, so we could suggest to the user to change their Lean version after the fact when adding mathlib. I'm planning to do the same on <code>leanpkg upgrade</code>; we can also discuss this at <a href=\"https://github.com/Kha/elan/issues/5\" target=\"_blank\" title=\"https://github.com/Kha/elan/issues/5\">https://github.com/Kha/elan/issues/5</a></p>",
        "id": 125297293,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524130396
    },
    {
        "content": "<p>O.o.....</p>\n<div class=\"codehilite\"><pre><span></span>Lean: Server has stopped due to signal SIGSEGV\n</pre></div>\n\n\n<p>That doesn't sound good...</p>",
        "id": 125297535,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524130767
    },
    {
        "content": "<p>Johan -- one possibility is that you just get everything working in the old way, and just wait until mathlib is running with 3.4.</p>",
        "id": 125298604,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132480
    },
    {
        "content": "<p>The reason this might be useful is that what we will ultimately really need</p>",
        "id": 125298643,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132491
    },
    {
        "content": "<p>is a clear and concise set of instructions</p>",
        "id": 125298644,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132500
    },
    {
        "content": "<p>on how to get Lean 3.4 and mathlib running.</p>",
        "id": 125298645,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132513
    },
    {
        "content": "<p>And at the minute mathlib doesn't work with Lean 3.4, and elan still has teething troubles</p>",
        "id": 125298647,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132528
    },
    {
        "content": "<p>in other words, I guess what I'm saying is that I am waiting until mathlib works with Lean 3.4 before I start thinking about writing down some succinct explanation of how to use elan</p>",
        "id": 125298654,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132578
    },
    {
        "content": "<p>and for me there is no hurry because I have a set-up that works without elan</p>",
        "id": 125298656,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132597
    },
    {
        "content": "<p>OTOH I'm sure Sebastian is appreciating your comments on elan.</p>",
        "id": 125298707,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132628
    },
    {
        "content": "<p>As for the segv</p>",
        "id": 125298709,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132637
    },
    {
        "content": "<p>you do occasionally get these, although they are quite rare</p>",
        "id": 125298710,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132653
    },
    {
        "content": "<p>a good way of getting them is to compile a project, thus getting a bunch of .olean files, and then changing the version of Lean you're using</p>",
        "id": 125298717,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132686
    },
    {
        "content": "<p>so the first thing you need to do is to rule this out</p>",
        "id": 125298720,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132706
    },
    {
        "content": "<p>and the second big question is whether you can reliably reproduce the segfault</p>",
        "id": 125298759,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132728
    },
    {
        "content": "<p>and if you can, then you get an achievement</p>",
        "id": 125298764,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132746
    },
    {
        "content": "<p>and you're allowed to post an issue to the lean repo</p>",
        "id": 125298766,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132762
    },
    {
        "content": "<p>I've had a couple recently but I couldn't reproduce them, annoyingly</p>",
        "id": 125298780,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132801
    },
    {
        "content": "<p>(the moment I get one, I hit ctrl-Z to go back a bit, ctrl-shift-P Lean:restart to restart Lean, and then try typing exactly the same keys again)</p>",
        "id": 125298821,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132850
    },
    {
        "content": "<p>I am really really looking forwards to the stability of 3.4 + mathlib, but until then I have plenty to do :-)</p>",
        "id": 125298842,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524132902
    },
    {
        "content": "<p>Just to be clear, any issues happening _after_ Lean was started successfully should not be elan's fault :)</p>",
        "id": 125299255,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524133620
    },
    {
        "content": "<p>So <code>find . -name *.olean</code> finds nothing. Which means the first option is ruled out. I guess. Now I will start the backtracking.</p>",
        "id": 125301335,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524137594
    },
    {
        "content": "<p>The .olean version mismatch problem has been fixed for quite some time</p>",
        "id": 125301402,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524137750
    },
    {
        "content": "<p>Can Lean segfault if it runs out of memory? I opened a file from Kevin's lean-stacks-project and I had not compiled anything before. I only have 4GB in my rusty Thinkpad (no swap). So I think that Lean maybe ran out of memory.</p>",
        "id": 125306980,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524146692
    },
    {
        "content": "<p>There have been many ways for Lean to segfault so far, but that one would be new :)</p>",
        "id": 125307443,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524147289
    },
    {
        "content": "<p>So, should I run <code>leanpkg build</code> or something similar? Ought that work?</p>",
        "id": 125307469,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524147338
    },
    {
        "content": "<p>Worth a try, at least then you know it's easily reproducible</p>",
        "id": 125307522,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524147386
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ leanpkg build\nconfiguring leantest 0.1\nmathlib: trying to update _target/deps/mathlib to revision 7d1ab388bb097db5d631d11892e8f110e1f2e9cd\n&gt; git checkout --detach 7d1ab388bb097db5d631d11892e8f110e1f2e9cd    # in directory _target/deps/mathlib\nHEAD is now at 7d1ab38 feat(list/basic,...): minor modifications &amp; additions\nlean-stacks-project: trying to update _target/deps/lean-stacks-project to revision a2204862a0c20c4ea4f98d5685c1a51a3b0279d3\n&gt; git checkout --detach a2204862a0c20c4ea4f98d5685c1a51a3b0279d3    # in directory _target/deps/lean-stacks-project\nHEAD is now at a220486 Merge branch &#39;master&#39; of github.com:kbuzzard/lean-stacks-project\n&gt; lean --make src\n</pre></div>",
        "id": 125307543,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524147445
    },
    {
        "content": "<p>This completed immediately...</p>",
        "id": 125307604,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524147495
    },
    {
        "content": "<p>Doesn't do any compiling at all</p>",
        "id": 125307607,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524147501
    },
    {
        "content": "<p>Is your segfaulting file saved in the <code>src</code> directory?</p>",
        "id": 125307844,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524147883
    },
    {
        "content": "<p>No, the <code>src/</code> dir is empty</p>",
        "id": 125316120,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524159246
    },
    {
        "content": "<p>You should save your Lean files in <code>src</code>, as described in <a href=\"https://leanprover.github.io/reference/using_lean.html#directory-layout\" target=\"_blank\" title=\"https://leanprover.github.io/reference/using_lean.html#directory-layout\">https://leanprover.github.io/reference/using_lean.html#directory-layout</a></p>",
        "id": 125325431,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524171815
    },
    {
        "content": "<p>Sorry, I'm completely confused. As you can see from my log above, I only ran <code>leanpkg add</code> to add mathlib and lean-stacks-project. Both are added to <code>_target/deps/</code>. The leave <code>src/</code> empty. What am I doing wrong?</p>",
        "id": 125384466,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524212478
    },
    {
        "content": "<p>Here's how you're supposed to run the stacks project.</p>",
        "id": 125391323,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213579
    },
    {
        "content": "<p>First, clone the stacks project.</p>",
        "id": 125391361,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213587
    },
    {
        "content": "<p>Then make it into a lean package with some leanpkg command which I forgot</p>",
        "id": 125391523,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213609
    },
    {
        "content": "<p>then build it</p>",
        "id": 125391558,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213613
    },
    {
        "content": "<p>Here's how you're supposed to make a new project with the stacks project as a dependency</p>",
        "id": 125391670,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213642
    },
    {
        "content": "<p>First make a directory for your new project</p>",
        "id": 125391716,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213647
    },
    {
        "content": "<p>Ok, I see. I thought you had to <code>leanpkg add</code> it</p>",
        "id": 125391732,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524213649
    },
    {
        "content": "<p>then use leanpkg add to add the stacks project</p>",
        "id": 125391813,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213657
    },
    {
        "content": "<p>I think I've got it straight.</p>",
        "id": 125391845,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213664
    },
    {
        "content": "<p>Aha, I hope this helps...</p>",
        "id": 125391887,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524213676
    },
    {
        "content": "<p>On behalf of the community I apologise for the lack of docs and the general difficulty of finding the docs you need</p>",
        "id": 125391925,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213683
    },
    {
        "content": "<p>we are working on this problem</p>",
        "id": 125391958,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213689
    },
    {
        "content": "<p>What happens in practice is that Sebastian does a really good job of writing all these package managers</p>",
        "id": 125392130,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213717
    },
    {
        "content": "<p>and then he explains how things work here</p>",
        "id": 125392200,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213724
    },
    {
        "content": "<p>and everyone learns</p>",
        "id": 125392247,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213730
    },
    {
        "content": "<p>and then either stuff doesn't get written, or stuff gets written but in some place you might not expect, or stuff doesn't get written and then the older stuff is written but out of date and wrong.</p>",
        "id": 125392513,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213758
    },
    {
        "content": "<p>Right, I'll try to figure out the command to turn the clone into a lean package</p>",
        "id": 125392533,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524213768
    },
    {
        "content": "<p>Yes we are working on it. I really for big improvements in the next few weeks</p>",
        "id": 125392547,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524213779
    },
    {
        "content": "<p>To make matters worse, and by \"worse\" I mean \"better\", we now have elan, which is something else</p>",
        "id": 125392876,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213838
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Could it be that you mean <code>leanpkg configure</code> to download the dependencies?</p>",
        "id": 125392932,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524213847
    },
    {
        "content": "<p>Mathlib goes 3.4, elan matures, TPIL and refman get updated and everything will become much easier</p>",
        "id": 125392979,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524213855
    },
    {
        "content": "<p>and the most comprehensive docs on elan are obtained by searching for elan here :-)</p>",
        "id": 125393016,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213858
    },
    {
        "content": "<p>\"Mathlib goes 3.4\" -- here's hoping!</p>",
        "id": 125393109,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213875
    },
    {
        "content": "<p>Presumably you noticed the rather terrifying-looking stumbling block</p>",
        "id": 125393225,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213890
    },
    {
        "content": "<p>One thing I love about Lean is that we are free to add various type annotations everywhere if we get confused</p>",
        "id": 125393596,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213941
    },
    {
        "content": "<p>and I get confused a lot</p>",
        "id": 125393614,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524213945
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> line 16 of an old commit</p>",
        "id": 125394557,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214090
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean/commit/37bde20d07dc28b7fd3e84a1c768b9ce547bd5a8#diff-93c4834f2a585510be668daf86b8e81fR16\" target=\"_blank\" title=\"https://github.com/leanprover/lean/commit/37bde20d07dc28b7fd3e84a1c768b9ce547bd5a8#diff-93c4834f2a585510be668daf86b8e81fR16\">https://github.com/leanprover/lean/commit/37bde20d07dc28b7fd3e84a1c768b9ce547bd5a8#diff-93c4834f2a585510be668daf86b8e81fR16</a></p>",
        "id": 125394572,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214091
    },
    {
        "content": "<p>That was when mathlib was called library_dev</p>",
        "id": 125394649,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214099
    },
    {
        "content": "<p>When the docs moved into the reference manual, some of those old docs got lost</p>",
        "id": 125394787,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214112
    },
    {
        "content": "<p>Ok, thanks!</p>",
        "id": 125394963,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524214141
    },
    {
        "content": "<p>You seem to be right -- the \"creating new packages\" docs survived but the \"working on existing packages\" para got lost.</p>",
        "id": 125395693,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214262
    },
    {
        "content": "<p>Whoohoo, now <code>leanpkg build</code> is actually doing something!</p>",
        "id": 125396463,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524214378
    },
    {
        "content": "<p>I would go and have a cup of tea</p>",
        "id": 125396803,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214431
    },
    {
        "content": "<p>I would also recommend maximising your console window and using ctrl-(minus key) to minimise your font size</p>",
        "id": 125396981,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214458
    },
    {
        "content": "<p>that way successful compilation of a file whose full path is more than 80 characters doesn't result in your terminal being filled with garbage</p>",
        "id": 125397420,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214503
    },
    {
        "content": "<p>I see... I'm already running fullscreen. I'm about to get a computer account at the department, and I'm going to ask for a second screen on my desk.</p>",
        "id": 125397837,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524214560
    },
    {
        "content": "<p>[and note the message I sent you yesterday about certain files which have errors in as they are WIPs; I know it's a bit unprofessional but I develop on more than one machine and github is just a convenient way to store my half-written files]</p>",
        "id": 125397850,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214561
    },
    {
        "content": "<p>Running VScode on a 12\" Thinkpad is horrible</p>",
        "id": 125397980,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524214572
    },
    {
        "content": "<p>I am absolutely serious when I say</p>",
        "id": 125398040,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214594
    },
    {
        "content": "<p>that I run VS Code on a laptop with a medium size screen</p>",
        "id": 125398142,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214608
    },
    {
        "content": "<p>and the fact that it was horrible</p>",
        "id": 125398190,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214615
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Yes, I saw that message. No problem. I think branches could help you there. You can push WIP branches to github as well.</p>",
        "id": 125398203,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524214623
    },
    {
        "content": "<p>actually made me bite the bullet and start wearing glasses</p>",
        "id": 125398209,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214629
    },
    {
        "content": "<p>and now I have glasses (for reading)</p>",
        "id": 125398256,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214637
    },
    {
        "content": "<p>I can just minimise the font to quite small :-)</p>",
        "id": 125398298,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214648
    },
    {
        "content": "<p>I am not good at branches yet.</p>",
        "id": 125398440,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214666
    },
    {
        "content": "<p>but I am getting there.</p>",
        "id": 125398475,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214673
    },
    {
        "content": "<p>I never needed them before because Kenny and Chris work on localised code and don't care if other stuff doesn't compile</p>",
        "id": 125398688,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214698
    },
    {
        "content": "<p>and nobody else has ever paid any attention to the project :-)</p>",
        "id": 125398741,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214707
    },
    {
        "content": "<p>We are nearly done though.</p>",
        "id": 125398791,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214714
    },
    {
        "content": "<blockquote>\n<p>and nobody else has ever paid any attention to the project :-)</p>\n</blockquote>\n<p>I'm sorry for being curious</p>",
        "id": 125399260,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524214779
    },
    {
        "content": "<p>I should just wait a couple of days (-;</p>",
        "id": 125399367,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524214794
    },
    {
        "content": "<p>I just this morning pushed a version of tah01HR which contains a concrete endgame</p>",
        "id": 125399566,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214813
    },
    {
        "content": "<p>i.e. \"we need to prove this lemma and that lemma and then just glue everything together\"</p>",
        "id": 125399695,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214837
    },
    {
        "content": "<p>I think I am right when I say that mathlib compiles with the nightly of 6th April</p>",
        "id": 125399936,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214855
    },
    {
        "content": "<p>and the project should work with that</p>",
        "id": 125399993,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214862
    },
    {
        "content": "<p>So far the compile is doing its job perfectly (-;</p>",
        "id": 125400371,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524214903
    },
    {
        "content": "<p>You don't have to guess here, it's right there: <a href=\"https://github.com/leanprover/mathlib/blob/master/leanpkg.toml#L4\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/leanpkg.toml#L4\">https://github.com/leanprover/mathlib/blob/master/leanpkg.toml#L4</a></p>",
        "id": 125400434,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524214913
    },
    {
        "content": "<p>aah, another undocumented gem ;-)</p>",
        "id": 125400646,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524214948
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Yes, now I only need to convince my laptop of that (-;</p>",
        "id": 125400783,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524214975
    },
    {
        "content": "<p>Did you put that same line in your own project <code>leanpkg.toml</code>?</p>",
        "id": 125408071,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524216062
    },
    {
        "content": "<p>if he cloned my project then it should be there</p>",
        "id": 125408162,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524216084
    },
    {
        "content": "<p>Atm I just cloned the lean-stacks-project repo, which has its own toml</p>",
        "id": 125408164,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524216090
    },
    {
        "content": "<p>So the system does actually work</p>",
        "id": 125408296,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524216123
    },
    {
        "content": "<p>what does <code>which leanpkg</code> tells you?</p>",
        "id": 125408297,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524216124
    },
    {
        "content": "<p>it's just that we need to document it better</p>",
        "id": 125408321,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524216134
    },
    {
        "content": "<p>And <code>elan</code> parsed it, and made me use the right version of <code>leanpkg</code> and <code>lean</code> <span class=\"emoji emoji-1f389\" title=\"tada\">:tada:</span></p>",
        "id": 125408391,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524216149
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ which leanpkg\n/home/jmc/.elan/bin/leanpkg\n</pre></div>",
        "id": 125408557,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524216192
    },
    {
        "content": "<p>ok, it's all fine</p>",
        "id": 125408605,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524216204
    },
    {
        "content": "<p>also, make sure you never ever define a leanpath variable in VScode</p>",
        "id": 125408758,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524216221
    },
    {
        "content": "<p>this only leads to confusion</p>",
        "id": 125408832,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524216230
    },
    {
        "content": "<p>I set it to <code>/home/jmc/.elan/bin/lean</code></p>",
        "id": 125409071,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524216251
    },
    {
        "content": "<p>You shouldn't</p>",
        "id": 125409118,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524216260
    },
    {
        "content": "<p>So what <em>should</em> I do?</p>",
        "id": 125409169,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524216275
    },
    {
        "content": "<p>You should simply launch VScode from a terminal where the shell path variable is set correctly (ie <code>which lean</code> points to <code>.elan/bin/lean</code>)</p>",
        "id": 125409362,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524216315
    },
    {
        "content": "<p>which will happen if you have <code>source $HOME/.elan/env</code> in your initialization file (<code>.profile</code> or <code>.bashrc</code> or...)</p>",
        "id": 125409629,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524216356
    },
    {
        "content": "<p>Ok, that makes sense</p>",
        "id": 125410457,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524216533
    },
    {
        "content": "<p>I'll do that from now on</p>",
        "id": 125410489,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524216539
    },
    {
        "content": "<p>ha ha, I use leanpath all the time; it points to a symlink :-)</p>",
        "id": 125411324,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524216648
    },
    {
        "content": "<p>Johan -- I haven't used elan at all yet but I just changed the README in lean-stacks-project to explain what I think you just did.</p>",
        "id": 125411592,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524216693
    },
    {
        "content": "<p>Feel free to submit a PR explaining elan. I have not even attempted to find out whether elan has docs; I have other things to worry about currently :-)</p>",
        "id": 125411895,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524216739
    },
    {
        "content": "<p>If my compile succeeds, then the first thing I will do is write some small docs and PR them.</p>",
        "id": 125412651,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524216872
    },
    {
        "content": "<p>Let me try something (we'll see if we can PR later). Instruction for a first time user of Lean under linux:</p>\n<ul>\n<li>make sure <a href=\"https://code.visualstudio.com/download\" target=\"_blank\" title=\"https://code.visualstudio.com/download\">VScode</a> is installed</li>\n<li>launch VScode and install the Lean extension by clicking the extension icon in the view bar at left and searching for lean. quit VScode for ow</li>\n<li>make sure <code>git</code> and <code>curl</code> are installed, using your distrib package manager</li>\n<li><code>curl https://raw.githubusercontent.com/Kha/elan/master/elan-init.sh -sSf | sh</code> and type enter when a question is asked. Then add <code>source .elan/env</code> to your shell initialization script, say <code>~/.bashrc</code>, and source it in the current terminal (or relaunch a new terminal).</li>\n<li>The previous step downloaded the latest stable release, that may be too recent or too old for mathlib, and you really want mathlib. Have a look at <a href=\"https://github.com/leanprover/mathlib/blob/master/leanpkg.toml#L4\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/leanpkg.toml#L4\">https://github.com/leanprover/mathlib/blob/master/leanpkg.toml#L4</a> to see what is the nightly mathlib currently wants. Say you see <code>nightly-2018-04-06</code>. Then run <code>elan toolchain install nightly-2018-04-06</code>.</li>\n<li>Now we want some playground to experiment. Use <code>elan run nightly-2018-04-06 leanpkg new my_playground</code>. This will  create a <code>my_playground</code> directory with a lean project layout. </li>\n<li>Go to that directory and type <code>leanpkg add leanprover/mathlib</code> this will download mathlib and put it inside <code>my_playground/_target/deps</code>,</li>\n<li>At this point you can already create some lean file in <code>my_playground/src</code>, launch VScode, go to and play with Lean by opening the file, typing <code>Ctrl-shift-enter</code> to open Lean message windows, and type, say <code>#check 1</code> to see the result</li>\n<li>You cant also use <code>import group_theory.subgroup</code> and then <code>#check is_subgroup</code>. But this will use uncompiled version of mathlib, which is very inefficient. If you run <code>leanpkg build</code> from inside <code>my_playground</code> then it will compile only files which are dependencies of mathlib <code>group_theory/subgroup.lean</code>.</li>\n<li>If you want to play more, it's better to compile all mathlib once and for all. You can do this by going into <code>my_playground/_target/deps/mathlib</code>, type <code>lean --make</code>and go get some coffee.</li>\n</ul>",
        "id": 125423318,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524218716
    },
    {
        "content": "<p>That being said, we really need mathlib nightlies (ie. precompiled mathlib)</p>",
        "id": 125424229,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524218880
    },
    {
        "content": "<p>It makes no sense that curious potential users have to wait for mathlib to compile</p>",
        "id": 125424479,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1524218909
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> I think that is a very good start</p>",
        "id": 125428649,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524219623
    },
    {
        "content": "<p>I would also like a small section on how to work on an existing project, like lean-stacks-project</p>",
        "id": 125428740,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524219660
    },
    {
        "content": "<p>You can copy that from my README</p>",
        "id": 125428806,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524219669
    },
    {
        "content": "<p>except that it should be updated to use elan</p>",
        "id": 125428860,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1524219680
    },
    {
        "content": "<p>In elan, when downloading Lean and its library, would it be possible to add a <code>leanpkg.toml</code> file at the root of <code>library</code>. That would make it easier to browse with emacs.</p>",
        "id": 125495917,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1524322796
    },
    {
        "content": "<p>What parts of browsing would that change?</p>",
        "id": 125496101,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524323152
    },
    {
        "content": "<p>When I open <code>init/meta/tactic.lean</code> in emacs, it tries to start a lean server and fails and <code>M-.</code> won't help <br>\nme go to a definition</p>",
        "id": 125496250,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1524323475
    },
    {
        "content": "<p>Oh, it looks like we forgot to include <code>library/leanpkg.path</code> in the releases. I'll fix it for the future.</p>",
        "id": 125496453,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524323994
    },
    {
        "content": "<p>Can <code>leanpkg.path</code> specify the version of <code>lean</code> to launch when editing the files?</p>",
        "id": 125496722,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1524324523
    },
    {
        "content": "<p>Ah, you are right. I guess injecting a <code>leanpkg.toml</code> file could indeed be the best solution.</p>",
        "id": 125496876,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1524324862
    }
]