[
    {
        "content": "<p>Not sure what's going on here, sort of long MWE below, sorry for that.</p>\n<p>I am trying to make a simp attribute that puts mv_polynomials into a normal form which makes it easier to evaluate their coefficients. As a part of this, I want to rewrite expressions of the form <code>(∑ x in r, X s * f x)</code> into  <code>X s * (∑ x in r, f x)</code>. To do this, I make a lemma which is a straightforward application of the <code>finset.mul_sum</code> lemma.</p>\n<p>But when I do make this lemma, I get that the tactic fails due to not finding instance of pattern. Strangely, <code>&lt;-finset.mul_sum</code> itself works fine, but I'd rather this simplification be self-contained. (Is there a way to add <code>&lt;-lemma</code> to a simp attribute?)</p>\n<p>Am I making a dumb mistake here? What is the issue? I have tried <code>set_option pp.notation false</code> and <code>set_option pp.implicit true</code> but they make the output to verbose to read.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.mv_polynomial.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.polynomial.big_operators</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span> <span class=\"n\">classical</span>\n\n<span class=\"kn\">section</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">mv_polynomial</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n\n\n<span class=\"kd\">universes</span> <span class=\"n\">u</span>\n\n<span class=\"kd\">parameter</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span>\n<span class=\"kd\">parameter</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">F</span><span class=\"o\">]</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">mv_polynomial</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">σ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">σ</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span>\n<span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">}</span>\n\n\n\n<span class=\"kd\">@[derive decidable_eq]</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">vars</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">vars</span>\n<span class=\"bp\">|</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">vars</span>\n<span class=\"bp\">|</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"n\">vars</span>\n<span class=\"bp\">|</span> <span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"n\">vars</span>\n\n<span class=\"kd\">run_cmd</span> <span class=\"n\">mk_simp_attr</span> <span class=\"bp\">`</span><span class=\"n\">polynomial_nf</span>\n<span class=\"kd\">run_cmd</span> <span class=\"n\">tactic.add_doc_string</span> <span class=\"bp\">`</span><span class=\"n\">simp_attr.polynomial_nf</span> <span class=\"s2\">\"Attribute for lemmas that are used in the conversion of mv_polynomial expressions to a normal form\"</span>\n\n<span class=\"kd\">@[polynomial_nf]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">sum_X_mul</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">X</span> <span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">X</span> <span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">finset.mul_sum</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c1\">-- set_option pp.notation false</span>\n<span class=\"c1\">-- set_option pp.implicit true</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∑</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">finset.fin_range</span> <span class=\"mi\">3</span><span class=\"o\">,</span>\n    <span class=\"n\">mv_polynomial.X</span> <span class=\"n\">vars.γ</span>\n    <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">mv_polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">vars</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span>\n  <span class=\"bp\">=</span>\n  <span class=\"n\">mv_polynomial.X</span> <span class=\"n\">vars.γ</span>\n  <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">finset.fin_range</span> <span class=\"mi\">4</span><span class=\"o\">,</span>\n    <span class=\"o\">((</span><span class=\"n\">mv_polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">vars</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span>\n   <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"c1\">-- simp only with polynomial_nf, -- failed to simplify</span>\n  <span class=\"n\">rw</span> <span class=\"n\">sum_X_mul</span><span class=\"o\">,</span> <span class=\"c1\">-- rewrite tactic failed, did not find instance of the pattern</span>\n  <span class=\"c1\">-- rw &lt;-finset.mul_sum, -- works fine</span>\n  <span class=\"c1\">-- simp only [&lt;-finset.mul_sum], -- works fine</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">mv_polynomial</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 245621223,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1626029237
    },
    {
        "content": "<p><code>simp</code> is a rewrite system. It doesn't choose which way to rewrite -- if it could go in both directions it would loop. It only ever rewrites the LHS of a simp lemma into the RHS</p>",
        "id": 245621409,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1626029532
    },
    {
        "content": "<p>Yes, which is why I put the form I wanted on the right side in the lemma I made. There is no way for it to loop here</p>",
        "id": 245621432,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1626029588
    },
    {
        "content": "<p>Oh ok sorry, I misunderstood your use of &lt;- in your question</p>",
        "id": 245621509,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1626029700
    },
    {
        "content": "<p>Indeed, as you can see, putting simp aside entirely, <code>rw &lt;-finset.mul_sum</code> works but <code>rw sum_X_mul</code> does not. I am wondering why this is the case.</p>",
        "id": 245621524,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1626029723
    },
    {
        "content": "<p>Try making the <code>r</code> and <code>f</code> explicit args, and supplying them in the rw.</p>",
        "id": 245621589,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1626029833
    },
    {
        "content": "<p>Then find where removing them leads to breakage</p>",
        "id": 245621594,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1626029845
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">mv_polynomial.sum_X_mul</span> <span class=\"o\">(</span><span class=\"n\">finset.fin_range</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">),</span> <span class=\"bp\">⇑</span><span class=\"n\">C</span> <span class=\"bp\">↑</span><span class=\"n\">i</span><span class=\"o\">)</span>\n<span class=\"n\">term</span>\n  <span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">),</span> <span class=\"bp\">⇑</span><span class=\"n\">C</span> <span class=\"bp\">↑</span><span class=\"n\">i</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">vars</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">mv_polynomial</span> <span class=\"bp\">?</span><span class=\"n\">m_1</span> <span class=\"bp\">?</span><span class=\"n\">m_2</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"bp\">?</span>\n</code></pre></div>\n<p>Is it a universe issue?</p>",
        "id": 245621741,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1626030074
    },
    {
        "content": "<p>Are you explicitly writing coercion arrows?</p>",
        "id": 245621802,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1626030150
    },
    {
        "content": "<p>No, the above is the copy-pasted error message when I start putting in the arguments. this is what I wrote</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∑</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">finset.fin_range</span> <span class=\"mi\">3</span><span class=\"o\">,</span>\n    <span class=\"n\">mv_polynomial.X</span> <span class=\"n\">vars.γ</span>\n    <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">mv_polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">vars</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span>\n  <span class=\"bp\">=</span>\n  <span class=\"n\">mv_polynomial.X</span> <span class=\"n\">vars.γ</span>\n  <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">finset.fin_range</span> <span class=\"mi\">4</span><span class=\"o\">,</span>\n    <span class=\"o\">((</span><span class=\"n\">mv_polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">vars</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span>\n   <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"c1\">-- simp only with polynomial_nf, -- failed to simplify</span>\n  <span class=\"n\">rw</span> <span class=\"n\">sum_X_mul</span> <span class=\"o\">(</span><span class=\"n\">finset.fin_range</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">mv_polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">vars</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))),</span>\n  <span class=\"c1\">-- rewrite tactic failed, did not find instance of the pattern</span>\n  <span class=\"c1\">-- rw &lt;-finset.mul_sum, -- works fine</span>\n  <span class=\"c1\">-- simp only [&lt;-finset.mul_sum], -- works fine</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 245621894,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1626030232
    },
    {
        "content": "<p>Ah, so rewrite works up to syntactic equality usually.</p>",
        "id": 245622039,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1626030413
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.mv_polynomial.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.polynomial.big_operators</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span> <span class=\"n\">classical</span>\n\n<span class=\"kn\">section</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">mv_polynomial</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kd\">universes</span> <span class=\"n\">u</span>\n\n<span class=\"kd\">parameter</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span>\n<span class=\"kd\">parameter</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">F</span><span class=\"o\">]</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">mv_polynomial</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">σ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">σ</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span>\n<span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">}</span>\n\n<span class=\"kd\">@[derive decidable_eq]</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">vars</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">vars</span>\n<span class=\"bp\">|</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">vars</span>\n<span class=\"bp\">|</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"n\">vars</span>\n<span class=\"bp\">|</span> <span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"n\">vars</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">sum_X_mul</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">X</span> <span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">X</span> <span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">finset.mul_sum</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∑</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">),</span>\n    <span class=\"n\">mv_polynomial.X</span> <span class=\"n\">vars.γ</span>\n    <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">mv_polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">vars</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span>\n  <span class=\"bp\">=</span>\n  <span class=\"n\">mv_polynomial.X</span> <span class=\"n\">vars.γ</span>\n  <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">),</span>\n    <span class=\"o\">((</span><span class=\"n\">mv_polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">vars</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span>\n   <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"c1\">-- ∑ (i : fin 3), X vars.γ * ⇑C ↑i = X vars.γ * ∑ (i : fin 4), ⇑C ↑i</span>\n  <span class=\"n\">rw</span> <span class=\"n\">sum_X_mul</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial.C</span><span class=\"o\">)</span> <span class=\"n\">vars.γ</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- rewrite tactic failed, did not find instance of the pattern in the target expression</span>\n  <span class=\"c1\">-- ∑ (x : ?m_1), X vars.γ * ⇑C x</span>\n  <span class=\"c1\">-- notice that here `x` is without a coercion arrow</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">mv_polynomial</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 245622112,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1626030520
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">sum_X_mul</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial.C</span><span class=\"o\">)</span> <span class=\"n\">vars.γ</span><span class=\"o\">],</span>\n<span class=\"bp\">```</span> <span class=\"n\">will</span> <span class=\"n\">work</span>\n</code></pre></div>",
        "id": 245622118,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1626030537
    },
    {
        "content": "<p>Ah, was the issue that I was conflating finset with fintype?</p>",
        "id": 245622182,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1626030658
    },
    {
        "content": "<p>No, I was just simplifying the lemma requirements. The issue is that your statement has <code>⇑C ↑i</code> but rw is looking for <code>⇑C i</code>. They are not syntactically the same.</p>",
        "id": 245622234,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1626030754
    },
    {
        "content": "<p>Ok, but none of this solves my problem of wanting to include this in a simp attribute, it seems. It still doesn't work as <code>rw sum_X_mul</code></p>",
        "id": 245622295,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1626030852
    },
    {
        "content": "<p>It also doesn't explain why sum_mul works but sum_X_mul doesn't.</p>",
        "id": 245622806,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1626031796
    },
    {
        "content": "<p>Here's the mwe again with mul_sum.symm dragged into the file as mul_sum_2. It works fine, but my lemma does not. Why?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.mv_polynomial.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.polynomial.big_operators</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span> <span class=\"n\">classical</span>\n\n<span class=\"kn\">section</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">mv_polynomial</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n\n\n<span class=\"kd\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n\n<span class=\"kd\">parameter</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span>\n<span class=\"kd\">parameter</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">F</span><span class=\"o\">]</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">mv_polynomial</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">σ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">σ</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span>\n<span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">}</span>\n\n\n\n<span class=\"kd\">@[derive decidable_eq]</span>\n<span class=\"kd\">inductive</span> <span class=\"n\">vars</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"bp\">|</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">vars</span>\n<span class=\"bp\">|</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"n\">vars</span>\n<span class=\"bp\">|</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"n\">vars</span>\n<span class=\"bp\">|</span> <span class=\"n\">δ</span> <span class=\"o\">:</span> <span class=\"n\">vars</span>\n\n<span class=\"kd\">run_cmd</span> <span class=\"n\">mk_simp_attr</span> <span class=\"bp\">`</span><span class=\"n\">polynomial_nf</span>\n<span class=\"kd\">run_cmd</span> <span class=\"n\">tactic.add_doc_string</span> <span class=\"bp\">`</span><span class=\"n\">simp_attr.polynomial_nf</span> <span class=\"s2\">\"Attribute for lemmas that are used in the conversion of mv_polynomial expressions to a normal form\"</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">finset</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">s₁</span> <span class=\"n\">s₂</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">}</span>  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span>\n\n\n<span class=\"kn\">section</span> <span class=\"n\">semiring</span>\n<span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">non_unital_non_assoc_semiring</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">mul_sum_2</span> <span class=\"o\">:</span>\n <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s₁</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">x</span>\n  <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s₁</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">finset.mul_sum.symm</span>\n\n\n<span class=\"kd\">@[polynomial_nf]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">sum_X_mul</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s₁</span><span class=\"o\">,</span> <span class=\"n\">X</span> <span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">X</span> <span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s₁</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">finset.mul_sum</span>\n\n\n<span class=\"c1\">-- set_option pp.notation false</span>\n<span class=\"c1\">-- set_option pp.implicit true</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∑</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">),</span>\n    <span class=\"n\">mv_polynomial.X</span> <span class=\"n\">vars.γ</span>\n    <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">mv_polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">vars</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span>\n  <span class=\"bp\">=</span>\n  <span class=\"n\">mv_polynomial.X</span> <span class=\"n\">vars.γ</span>\n  <span class=\"bp\">*</span> <span class=\"bp\">∑</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">),</span>\n    <span class=\"o\">((</span><span class=\"n\">mv_polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">vars</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">))</span>\n   <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">sum_X_mul</span><span class=\"o\">,</span> <span class=\"c1\">-- fails</span>\n  <span class=\"c1\">-- rw mul_sum_2, -- works</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">semiring</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">finset</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">mv_polynomial</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 245622925,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1626032019
    }
]