[
    {
        "content": "<p>Kenny raised the following question on the discord: if a,b,c are distinct positive integers and 1/a+1/b+1/c=1 then a+b+c is prime. I proved it, but my code didn't terminate even though it seemed to compile. I split my proof into two lemmas and they compile fine. But gluing them together gives me code for which the orange bars never go away. The profiler says that my lemma 1 takes about 7 seconds and lemma 2 about 11 seconds. The profiler says that the combination (the theorem) takes about 19 seconds but if I try to compile it in VS Code or on the command line then it never terminates. This is not a big deal, it's not blocking anything or anything, but it did strike me as odd. Is this sort of thing expected behaviour? I've never seen something like it before.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.nat.prime</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">nat</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">lemma1</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hapos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hbc</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">prime</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"c1\">-- 0 &lt; a so 1 ≤ a</span>\n  <span class=\"k\">have</span> <span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">rwa</span> <span class=\"n\">succ_le_iff</span><span class=\"o\">,</span> <span class=\"n\">clear</span> <span class=\"n\">hapos</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- a &lt; b so 2 ≤ b</span>\n  <span class=\"k\">have</span> <span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">},</span>\n  <span class=\"c1\">-- b &lt; c so 3 ≤ c,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">},</span>\n  <span class=\"c1\">-- clearly b⁻¹ &gt; 0</span>\n  <span class=\"k\">have</span> <span class=\"n\">hb2</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- because b &gt; 0</span>\n    <span class=\"n\">rw</span> <span class=\"n\">inv_pos</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- and clearly c⁻¹ &gt; 0</span>\n  <span class=\"k\">have</span> <span class=\"n\">hc2</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- because c &gt; 0</span>\n    <span class=\"n\">rw</span> <span class=\"n\">inv_pos</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- so a had better not be 1</span>\n  <span class=\"n\">rw</span> <span class=\"n\">le_iff_eq_or_lt</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- because then 1/a+1/b+1/c&gt;1, contradiction</span>\n    <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">subst</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- So a ≥ 2</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">succ_le_iff</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">change</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n  <span class=\"c1\">--Now I claim that in fact a has to be 2</span>\n  <span class=\"n\">rw</span> <span class=\"n\">le_iff_lt_or_eq</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- because if a &gt; 2 then a &gt;= 3</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">succ_le_iff</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">change</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- so b ≥ 4 and c ≥ 5</span>\n    <span class=\"k\">have</span> <span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">4</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"mi\">5</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- so a⁻¹ + b⁻¹ + c⁻¹ ≤ 1/3+1/4+1/5&lt;1 contradiction</span>\n    <span class=\"k\">have</span> <span class=\"n\">ha'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"mi\">3</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hb'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"mi\">4</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hc'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"mi\">5</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">5</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n    <span class=\"n\">linarith</span> <span class=\"o\">},</span>\n  <span class=\"n\">subst</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- We know b ≥ 3</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">succ_le_iff</span> <span class=\"n\">at</span> <span class=\"n\">hab</span><span class=\"o\">,</span> <span class=\"n\">change</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"n\">at</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- and now I claim b = 3</span>\n  <span class=\"n\">rw</span> <span class=\"n\">le_iff_lt_or_eq</span> <span class=\"n\">at</span> <span class=\"n\">hab</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- because if b &gt; 3 then b &gt;= 4</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">succ_le_iff</span> <span class=\"n\">at</span> <span class=\"n\">hab</span><span class=\"o\">,</span> <span class=\"n\">change</span> <span class=\"mi\">4</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"n\">at</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- so and c ≥ 5</span>\n    <span class=\"k\">have</span> <span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"mi\">5</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- so a⁻¹ + b⁻¹ + c⁻¹ ≤ 1/2+1/4+1/5&lt;1 contradiction</span>\n    <span class=\"k\">have</span> <span class=\"n\">hb'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"mi\">4</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hc'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"mi\">5</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">5</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n    <span class=\"n\">norm_cast</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"n\">linarith</span> <span class=\"o\">},</span>\n  <span class=\"n\">subst</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- hence c⁻¹ must be 1/6,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hc'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">6</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span>\n    <span class=\"k\">suffices</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"bp\">⁻¹</span><span class=\"o\">),</span>\n      <span class=\"n\">convert</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n    <span class=\"n\">norm_cast</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">eq_sub_of_add_eq'</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- so c = 6</span>\n  <span class=\"n\">rw</span> <span class=\"n\">inv_inj'</span> <span class=\"n\">at</span> <span class=\"n\">hc'</span><span class=\"o\">,</span>\n  <span class=\"n\">norm_cast</span> <span class=\"n\">at</span> <span class=\"n\">hc'</span><span class=\"o\">,</span>\n  <span class=\"n\">subst</span> <span class=\"n\">hc'</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- and 11 is prime</span>\n  <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">lemma2</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hbc</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≠</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hca</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">≠</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hapos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hbpos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hcpos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">prime</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">wlog</span> <span class=\"n\">habc</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c</span> <span class=\"n\">using</span> <span class=\"o\">[</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"n\">b</span> <span class=\"n\">a</span><span class=\"o\">],</span>\n  <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">lt_trichotomy</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">lt_trichotomy</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">lt_trichotomy</span> <span class=\"n\">c</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n    <span class=\"n\">tauto</span> <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"n\">lemma1</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">hapos</span> <span class=\"n\">habc.1</span> <span class=\"n\">habc.2</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"c1\">-- direct glue never terminates though</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">theorem1</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hbc</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≠</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hca</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">≠</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hapos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hbpos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hcpos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">prime</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">wlog</span> <span class=\"n\">habc</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">c</span> <span class=\"n\">using</span> <span class=\"o\">[</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"n\">b</span> <span class=\"n\">a</span><span class=\"o\">],</span>\n  <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">lt_trichotomy</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">lt_trichotomy</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">lt_trichotomy</span> <span class=\"n\">c</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n    <span class=\"n\">tauto</span> <span class=\"o\">},</span>\n  <span class=\"n\">clear</span> <span class=\"n\">hab</span> <span class=\"n\">hbc</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">habc</span> <span class=\"k\">with</span> <span class=\"n\">hab</span> <span class=\"n\">hbc</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- 0 &lt; a so 1 ≤ a</span>\n  <span class=\"k\">have</span> <span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">rwa</span> <span class=\"n\">succ_le_iff</span><span class=\"o\">,</span> <span class=\"n\">clear</span> <span class=\"n\">hapos</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- a &lt; b so 2 ≤ b</span>\n  <span class=\"n\">clear</span> <span class=\"n\">hbpos</span><span class=\"o\">,</span> <span class=\"k\">have</span> <span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">},</span>\n  <span class=\"c1\">-- b &lt; c so 3 ≤ c,</span>\n  <span class=\"n\">clear</span> <span class=\"n\">hcpos</span><span class=\"o\">,</span> <span class=\"k\">have</span> <span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">},</span>\n  <span class=\"c1\">-- clearly b⁻¹ &gt; 0</span>\n  <span class=\"k\">have</span> <span class=\"n\">hb2</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- because b &gt; 0</span>\n    <span class=\"n\">rw</span> <span class=\"n\">inv_pos</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- and clearly c⁻¹ &gt; 0</span>\n  <span class=\"k\">have</span> <span class=\"n\">hc2</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- because c &gt; 0</span>\n    <span class=\"n\">rw</span> <span class=\"n\">inv_pos</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- so a had better not be 1</span>\n  <span class=\"n\">rw</span> <span class=\"n\">le_iff_eq_or_lt</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- because then 1/a+1/b+1/c&gt;1, contradiction</span>\n    <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">subst</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- So a ≥ 2</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">succ_le_iff</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">change</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n  <span class=\"c1\">--Now I claim that in fact a has to be 2</span>\n  <span class=\"n\">rw</span> <span class=\"n\">le_iff_lt_or_eq</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- because if a &gt; 2 then a &gt;= 3</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">succ_le_iff</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">change</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- so b ≥ 4 and c ≥ 5</span>\n    <span class=\"k\">have</span> <span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">4</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"mi\">5</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- so a⁻¹ + b⁻¹ + c⁻¹ ≤ 1/3+1/4+1/5&lt;1 contradiction</span>\n    <span class=\"k\">have</span> <span class=\"n\">ha'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"mi\">3</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hb'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"mi\">4</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hc'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"mi\">5</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">5</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n    <span class=\"n\">linarith</span> <span class=\"o\">},</span>\n  <span class=\"n\">subst</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- We know b ≥ 3</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">succ_le_iff</span> <span class=\"n\">at</span> <span class=\"n\">hab</span><span class=\"o\">,</span> <span class=\"n\">change</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"n\">at</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- and now I claim b = 3</span>\n  <span class=\"n\">rw</span> <span class=\"n\">le_iff_lt_or_eq</span> <span class=\"n\">at</span> <span class=\"n\">hab</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- because if b &gt; 3 then b &gt;= 4</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">succ_le_iff</span> <span class=\"n\">at</span> <span class=\"n\">hab</span><span class=\"o\">,</span> <span class=\"n\">change</span> <span class=\"mi\">4</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"n\">at</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- so and c ≥ 5</span>\n    <span class=\"k\">have</span> <span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"mi\">5</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- so a⁻¹ + b⁻¹ + c⁻¹ ≤ 1/2+1/4+1/5&lt;1 contradiction</span>\n    <span class=\"k\">have</span> <span class=\"n\">hb'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"mi\">4</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hc'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"mi\">5</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">5</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n    <span class=\"n\">norm_cast</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"n\">linarith</span> <span class=\"o\">},</span>\n  <span class=\"n\">subst</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- hence c⁻¹ must be 1/6,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hc'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">6</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span>\n    <span class=\"k\">suffices</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"bp\">⁻¹</span><span class=\"o\">),</span>\n      <span class=\"n\">convert</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n    <span class=\"n\">norm_cast</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">eq_sub_of_add_eq'</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- so c = 6</span>\n  <span class=\"n\">rw</span> <span class=\"n\">inv_inj'</span> <span class=\"n\">at</span> <span class=\"n\">hc'</span><span class=\"o\">,</span>\n  <span class=\"n\">norm_cast</span> <span class=\"n\">at</span> <span class=\"n\">hc'</span><span class=\"o\">,</span>\n  <span class=\"n\">subst</span> <span class=\"n\">hc'</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- and 11 is prime</span>\n  <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 225431349,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612647436
    },
    {
        "content": "<p>Now find solutions to <code>1/p + 1/q + 1/r &lt; 1</code> (-; We'll need that when we do the classification of root systems.</p>",
        "id": 225432113,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612648691
    },
    {
        "content": "<p>And then for each one, prove the number of solutions to a^p+b^q=c^r for positive coprime a,b,c is finite!</p>",
        "id": 225432588,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612649485
    },
    {
        "content": "<p>Why does this not work <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.pnat.basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">},</span> <span class=\"n\">p</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">dec_trivial</span> <span class=\"c1\">-- fails</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 225526463,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612781044
    },
    {
        "content": "<p>3 <code>sorry</code>s left, related to the example above <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.multiset.sort</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.pnat.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.rat.order</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">tactic.norm_num</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic.field_simp</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic.fin_cases</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">pqr</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">multiset</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">A'</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">A</span>  <span class=\"o\">(</span><span class=\"n\">n</span>   <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span> <span class=\"o\">:=</span> <span class=\"n\">A'</span> <span class=\"mi\">1</span> <span class=\"n\">n</span>\n<span class=\"kd\">def</span> <span class=\"n\">D'</span> <span class=\"o\">(</span><span class=\"n\">n</span>   <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">n</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">E'</span> <span class=\"o\">(</span><span class=\"n\">n</span>   <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">n</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">E6</span>            <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span> <span class=\"o\">:=</span> <span class=\"n\">E'</span> <span class=\"mi\">3</span>\n<span class=\"kd\">def</span> <span class=\"n\">E7</span>            <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span> <span class=\"o\">:=</span> <span class=\"n\">E'</span> <span class=\"mi\">4</span>\n<span class=\"kd\">def</span> <span class=\"n\">E8</span>            <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span> <span class=\"o\">:=</span> <span class=\"n\">E'</span> <span class=\"mi\">5</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">sum_inv</span> <span class=\"o\">(</span><span class=\"n\">pqr</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span> <span class=\"o\">:=</span>\n<span class=\"n\">multiset.sum</span> <span class=\"bp\">$</span> <span class=\"n\">pqr.map</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">⁻¹</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">sum_inv_pqr</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">sum_inv</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">,</span><span class=\"n\">r</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"n\">p</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">q</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">r</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">sum_inv</span><span class=\"o\">,</span> <span class=\"n\">map_congr</span><span class=\"o\">,</span> <span class=\"n\">coe_coe</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">,</span> <span class=\"n\">insert_eq_cons</span><span class=\"o\">,</span> <span class=\"n\">add_assoc</span><span class=\"o\">,</span>\n    <span class=\"n\">singleton_eq_singleton</span><span class=\"o\">,</span> <span class=\"n\">map_cons</span><span class=\"o\">,</span> <span class=\"n\">sum_cons</span><span class=\"o\">,</span> <span class=\"n\">map_zero</span><span class=\"o\">,</span> <span class=\"n\">sum_zero</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">admissible</span> <span class=\"o\">(</span><span class=\"n\">pqr</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">A'</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"bp\">=</span> <span class=\"n\">pqr</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">D'</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">pqr</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">E'</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"n\">pqr</span> <span class=\"bp\">∨</span> <span class=\"n\">E'</span> <span class=\"mi\">4</span> <span class=\"bp\">=</span> <span class=\"n\">pqr</span> <span class=\"bp\">∨</span> <span class=\"n\">E'</span> <span class=\"mi\">5</span> <span class=\"bp\">=</span> <span class=\"n\">pqr</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">admissible.one_lt_sum_inv</span> <span class=\"o\">{</span><span class=\"n\">pqr</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">admissible</span> <span class=\"n\">pqr</span> <span class=\"bp\">→</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">sum_inv</span> <span class=\"n\">pqr</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">admissible</span><span class=\"o\">],</span>\n  <span class=\"n\">rintro</span> <span class=\"o\">(⟨</span><span class=\"n\">p'</span><span class=\"o\">,</span> <span class=\"n\">q'</span><span class=\"o\">,</span> <span class=\"n\">H</span><span class=\"o\">⟩</span><span class=\"bp\">|</span><span class=\"o\">⟨</span><span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">H</span><span class=\"o\">⟩</span><span class=\"bp\">|</span><span class=\"n\">H</span><span class=\"bp\">|</span><span class=\"n\">H</span><span class=\"bp\">|</span><span class=\"n\">H</span><span class=\"o\">),</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">A'</span><span class=\"o\">,</span> <span class=\"n\">sum_inv_pqr</span><span class=\"o\">,</span> <span class=\"n\">add_assoc</span><span class=\"o\">],</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">lt_add_iff_pos_right</span><span class=\"o\">,</span> <span class=\"n\">pnat.one_coe</span><span class=\"o\">,</span> <span class=\"n\">inv_one</span><span class=\"o\">,</span> <span class=\"n\">nat.cast_one</span><span class=\"o\">,</span> <span class=\"n\">coe_coe</span><span class=\"o\">],</span>\n    <span class=\"n\">apply</span> <span class=\"n\">add_pos</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">pnat.pos</span><span class=\"o\">,</span> <span class=\"n\">nat.cast_pos</span><span class=\"o\">,</span> <span class=\"n\">inv_pos</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">D'</span><span class=\"o\">,</span> <span class=\"n\">sum_inv_pqr</span><span class=\"o\">],</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">lt_add_iff_pos_right</span><span class=\"o\">,</span> <span class=\"n\">pnat.one_coe</span><span class=\"o\">,</span> <span class=\"n\">inv_one</span><span class=\"o\">,</span> <span class=\"n\">nat.cast_one</span><span class=\"o\">,</span>\n      <span class=\"n\">coe_coe</span><span class=\"o\">,</span> <span class=\"n\">pnat.coe_bit0</span><span class=\"o\">,</span> <span class=\"n\">nat.cast_bit0</span><span class=\"o\">],</span>\n    <span class=\"n\">norm_num</span> <span class=\"o\">},</span>\n  <span class=\"n\">all_goals</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">E'</span><span class=\"o\">,</span> <span class=\"n\">sum_inv_pqr</span><span class=\"o\">],</span> <span class=\"n\">norm_num</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">lt_three</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hpq</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≤</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hqr</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">sum_inv</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">})</span> <span class=\"o\">:</span>\n  <span class=\"n\">p</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">h3</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n  <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">sum_inv_pqr</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h3q</span> <span class=\"o\">:=</span> <span class=\"n\">H.trans</span> <span class=\"n\">hpq</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h3r</span> <span class=\"o\">:=</span> <span class=\"n\">h3q.trans</span> <span class=\"n\">hqr</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">q</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">r</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">3</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">add_le_add</span> <span class=\"o\">(</span><span class=\"n\">add_le_add</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n  <span class=\"n\">all_goals</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span> <span class=\"n\">_</span> <span class=\"n\">h3</span><span class=\"bp\">;</span> <span class=\"o\">[</span><span class=\"n\">assumption_mod_cast</span><span class=\"o\">,</span> <span class=\"n\">norm_num</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">lt_four</span> <span class=\"o\">{</span><span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h2q</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hqr</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">sum_inv</span> <span class=\"o\">{</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">})</span> <span class=\"o\">:</span>\n  <span class=\"n\">q</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">4</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">h4</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n  <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">sum_inv_pqr</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h4r</span> <span class=\"o\">:=</span> <span class=\"n\">H.trans</span> <span class=\"n\">hqr</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">q</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">r</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">add_le_add</span> <span class=\"o\">(</span><span class=\"n\">add_le_add</span> <span class=\"n\">le_rfl</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n  <span class=\"n\">all_goals</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span> <span class=\"n\">_</span> <span class=\"n\">h4</span><span class=\"bp\">;</span> <span class=\"o\">[</span><span class=\"n\">assumption_mod_cast</span><span class=\"o\">,</span> <span class=\"n\">norm_num</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">lt_six</span> <span class=\"o\">{</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h3r</span> <span class=\"o\">:</span> <span class=\"mi\">3</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">sum_inv</span> <span class=\"o\">{</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">})</span> <span class=\"o\">:</span>\n  <span class=\"n\">r</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">6</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">h6</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">6</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n  <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">sum_inv_pqr</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"n\">r</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"mi\">2</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">+</span> <span class=\"mi\">6</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">add_le_add</span> <span class=\"o\">(</span><span class=\"n\">add_le_add</span> <span class=\"n\">le_rfl</span> <span class=\"n\">le_rfl</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">inv_le_inv</span> <span class=\"n\">_</span> <span class=\"n\">h6</span><span class=\"bp\">;</span> <span class=\"o\">[</span><span class=\"n\">assumption_mod_cast</span><span class=\"o\">,</span> <span class=\"n\">norm_num</span><span class=\"o\">]</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">admissible_of_one_lt_sum_inv_aux'</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hpq</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≤</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hqr</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">sum_inv</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">,</span><span class=\"n\">r</span><span class=\"o\">})</span> <span class=\"o\">:</span>\n  <span class=\"n\">admissible</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">,</span><span class=\"n\">r</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">hp3</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"n\">lt_three</span> <span class=\"n\">hpq</span> <span class=\"n\">hqr</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">(</span><span class=\"n\">rfl</span><span class=\"bp\">|</span><span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"gr\">sorry</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"c\">/-</span><span class=\"cm\"> case A -/</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n  <span class=\"n\">clear</span> <span class=\"n\">hp3</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hq4</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">4</span> <span class=\"o\">:=</span> <span class=\"n\">lt_four</span> <span class=\"n\">hpq</span> <span class=\"n\">hqr</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">(</span><span class=\"n\">rfl</span><span class=\"bp\">|</span><span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"gr\">sorry</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"c\">/-</span><span class=\"cm\"> case D -/</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hr6</span> <span class=\"o\">:</span> <span class=\"n\">r</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"n\">lt_six</span> <span class=\"n\">hqr</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">(</span><span class=\"n\">rfl</span><span class=\"bp\">|</span><span class=\"n\">rfl</span><span class=\"bp\">|</span><span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">r</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">∨</span> <span class=\"n\">r</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span> <span class=\"bp\">∨</span> <span class=\"n\">r</span> <span class=\"bp\">=</span> <span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"gr\">sorry</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"c\">/-</span><span class=\"cm\"> case E6 -/</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">refl</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"c\">/-</span><span class=\"cm\"> case E7 -/</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">refl</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"c\">/-</span><span class=\"cm\"> case E8 -/</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">refl</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">admissible_of_one_lt_sum_inv_aux</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">pqr</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">pqr.sorted</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hl</span> <span class=\"o\">:</span> <span class=\"n\">pqr.length</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">sum_inv</span> <span class=\"n\">pqr</span><span class=\"o\">),</span>\n    <span class=\"n\">admissible</span> <span class=\"n\">pqr</span>\n<span class=\"bp\">|</span> <span class=\"o\">[</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">,</span><span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"n\">hs</span> <span class=\"n\">hl</span> <span class=\"n\">H</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨⟨</span><span class=\"n\">hpq</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"o\">⟩,</span> <span class=\"n\">hqr</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">≤</span> <span class=\"n\">q</span> <span class=\"bp\">∧</span> <span class=\"n\">p</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span> <span class=\"n\">using</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">admissible_of_one_lt_sum_inv_aux'</span> <span class=\"n\">hpq</span> <span class=\"n\">hqr</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">admissible_of_one_lt_sum_inv</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">sum_inv</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">,</span><span class=\"n\">r</span><span class=\"o\">})</span> <span class=\"o\">:</span>\n  <span class=\"n\">admissible</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">,</span><span class=\"n\">r</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">admissible</span><span class=\"o\">],</span>\n  <span class=\"k\">let</span> <span class=\"n\">S</span> <span class=\"o\">:=</span> <span class=\"n\">sort</span> <span class=\"o\">((</span><span class=\"bp\">≤</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">,</span><span class=\"n\">r</span><span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hS</span> <span class=\"o\">:</span> <span class=\"n\">S.sorted</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">sort_sorted</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hpqr</span> <span class=\"o\">:</span> <span class=\"o\">({</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">,</span><span class=\"n\">r</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">S</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">sort_eq</span> <span class=\"n\">has_le.le</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">})</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hpqr</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">admissible_of_one_lt_sum_inv_aux</span> <span class=\"n\">hS</span> <span class=\"n\">_</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">singleton_eq_singleton</span><span class=\"o\">,</span> <span class=\"n\">length_sort</span><span class=\"o\">,</span> <span class=\"n\">insert_eq_cons</span><span class=\"o\">,</span> <span class=\"n\">card_singleton</span><span class=\"o\">,</span>\n    <span class=\"n\">card_cons</span><span class=\"o\">,</span> <span class=\"n\">card_zero</span><span class=\"o\">],</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">classification</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">sum_inv</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">,</span><span class=\"n\">r</span><span class=\"o\">}</span> <span class=\"bp\">↔</span> <span class=\"n\">admissible</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">,</span><span class=\"n\">r</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span><span class=\"n\">admissible_of_one_lt_sum_inv</span><span class=\"o\">,</span> <span class=\"n\">admissible.one_lt_sum_inv</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">pqr</span>\n</code></pre></div>",
        "id": 225529244,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612782795
    },
    {
        "content": "<p>I pushed this to <a href=\"https://github.com/leanprover-community/mathlib/tree/pqr\">branch#pqr</a></p>",
        "id": 225529554,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612783021
    },
    {
        "content": "<p>I have no idea what puzzle piece is missing to make <code>dec_trivial</code> work. Do we need something like <code>decidable_lt</code>? That's probably not enough, is it?</p>",
        "id": 225534882,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612786315
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">admissible_of_one_lt_sum_inv_aux'</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hpq</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≤</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hqr</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"n\">sum_inv</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">,</span><span class=\"n\">r</span><span class=\"o\">})</span> <span class=\"o\">:</span>\n  <span class=\"n\">admissible</span> <span class=\"o\">{</span><span class=\"n\">p</span><span class=\"o\">,</span><span class=\"n\">q</span><span class=\"o\">,</span><span class=\"n\">r</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">hp3</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"n\">lt_three</span> <span class=\"n\">hpq</span> <span class=\"n\">hqr</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">interval_cases</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"c\">/-</span><span class=\"cm\"> case A -/</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n  <span class=\"n\">clear</span> <span class=\"n\">hp3</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hq4</span> <span class=\"o\">:</span> <span class=\"n\">q</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">4</span> <span class=\"o\">:=</span> <span class=\"n\">lt_four</span> <span class=\"n\">hpq</span> <span class=\"n\">hqr</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">interval_cases</span> <span class=\"n\">q</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"c\">/-</span><span class=\"cm\"> case D -/</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hr6</span> <span class=\"o\">:</span> <span class=\"n\">r</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">6</span> <span class=\"o\">:=</span> <span class=\"n\">lt_six</span> <span class=\"n\">hqr</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">interval_cases</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"c\">/-</span><span class=\"cm\"> case E6 -/</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">refl</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"c\">/-</span><span class=\"cm\"> case E7 -/</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">refl</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"c\">/-</span><span class=\"cm\"> case E8 -/</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">refl</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 225535146,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612786460
    },
    {
        "content": "<p>The right solution is to look for a different tactic <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> <code>interval_cases</code> ftw</p>",
        "id": 225535170,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612786477
    },
    {
        "content": "<p>But still someone will hopefully come along and explain why it doesn't work. There is just some missing instance, right? </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.pnat.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">decidable</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">},</span> <span class=\"n\">p</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">is_true</span> <span class=\"kd\">begin</span>\n  <span class=\"n\">rintro</span> <span class=\"o\">⟨</span><span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">hp</span><span class=\"o\">⟩</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n  <span class=\"n\">change</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">h3</span><span class=\"o\">,</span>\n  <span class=\"n\">interval_cases</span> <span class=\"n\">p</span><span class=\"bp\">;</span>\n  <span class=\"n\">dec_trivial</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"bp\">+</span><span class=\"o\">},</span> <span class=\"n\">p</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">dec_trivial</span> <span class=\"c1\">-- works</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>FTFY</p>",
        "id": 225536298,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612787203
    },
    {
        "content": "<p>Looks like there's missing stuff on pnat but it's there for nat.</p>",
        "id": 225536334,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612787229
    },
    {
        "content": "<p>I pushed updates to <a href=\"https://github.com/leanprover-community/mathlib/tree/pqr\">branch#pqr</a>. I'm reasonably happy with what this looks like. Except that I don't know how to name things. I've just dumped everything in the <code>pqr</code> namespace. Does this inequality have some name?</p>",
        "id": 225536498,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612787341
    },
    {
        "content": "<p>I think this should go in mathlib, we'll have applications for it in the (near, I hope) future.</p>",
        "id": 225536542,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1612787362
    },
    {
        "content": "<p>For <code>dec_trivial</code> to work, the missing piece is the analogue of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.decidable_ball_lt\">docs#nat.decidable_ball_lt</a> for <code>pnat</code>. But <code>interval_cases</code> might be better, as you found.</p>",
        "id": 225568185,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1612801356
    }
]