[
    {
        "content": "<p>/poll <a href=\"https://github.com/leanprover-community/mathlib/pull/11744\">https://github.com/leanprover-community/mathlib/pull/11744</a> defines the map <code>(Π (i : I), N i) →* M</code> given maps <code>N i →* M</code> with commuting ranges. What should be the name of this construction, and where should it live?<br>\n<code>monoid_hom.copi</code>, analogous to <a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/group/prod.html#monoid_hom.coprod\"><code>monoid_hom.coprod</code></a><br>\n<code>monoid_hom.comm_coprod</code>, to avoid the odd <code>copi</code> and hint at the commutativity assumption (but possibly confusing pi with <code>×</code> here)</p>",
        "id": 271757048,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1644774584
    },
    {
        "content": "<p>The kind of yak shaving needed to get stuff in… :-)<br>\nSorry for the messed up syntax.</p>",
        "id": 271757098,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1644774619
    },
    {
        "content": "<p>See <a href=\"https://github.com/leanprover-community/mathlib/pull/11744#discussion_r805157472\">this Github thread</a> for the discussion so far</p>",
        "id": 271757102,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1644774649
    },
    {
        "content": "<p>You can always edit the poll name! <a href=\"https://github.com/leanprover-community/mathlib/pull/11744\">#11744</a> for the lazy</p>",
        "id": 271757428,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644775201
    },
    {
        "content": "<p>I think it should be <code>noncomm</code> not <code>comm</code> to match <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.noncomm_prod\">docs#finset.noncomm_prod</a>`</p>",
        "id": 271771341,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644794049
    },
    {
        "content": "<p>Just to check - you do actually care about the case where the destination monoid is not itself commutative, right?</p>",
        "id": 271771431,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644794163
    },
    {
        "content": "<p>It's the \"commutative coproduct\" in the sense that the factors commute, which they would not do in the actual coproduct. BTW <code>I</code> has to be finite, right?</p>",
        "id": 271771985,
        "sender_full_name": "Reid Barton",
        "timestamp": 1644795105
    },
    {
        "content": "<p>Right, but <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.noncomm_prod\">docs#finset.noncomm_prod</a> is also the \"commutative product\", so I think the names should match one way or the other</p>",
        "id": 271772289,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644795553
    },
    {
        "content": "<p>Doing the rename the other way around also seems fine to me</p>",
        "id": 271772349,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644795609
    },
    {
        "content": "<p>In analogy to <a href=\"https://leanprover-community.github.io/mathlib_docs/group_theory/free_product.html#free_product.lift\">free_product.lift</a> it could also be called <code>comm_free_product.lift</code>.</p>",
        "id": 271777287,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1644802456
    },
    {
        "content": "<p>I don't think <code>monoid_hom.comm_coprod</code> is a good choice, because that seems like the name we'd use for a version of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/monoid_hom.coprod\">docs#monoid_hom.coprod</a> that takes <code>commute</code> assumptions instead of <code>comm_monoid P</code></p>",
        "id": 271797675,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644828562
    },
    {
        "content": "<p>Perhaps <code>*_pi_coprod</code> or <code>*_coprod_pi</code>, which sort of matches how we named <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pi_tensor_prod\">docs#pi_tensor_prod</a>?</p>",
        "id": 271797708,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644828584
    },
    {
        "content": "<p>Yeah there is a minor but annoying mismatch where in ordinary math, we don't make such a fuss about the difference between binary products and arbitrary products, while in category theory, the term \"pi\" has a distinct (but related) meaning.</p>",
        "id": 271810360,
        "sender_full_name": "Reid Barton",
        "timestamp": 1644835924
    },
    {
        "content": "<p>The poll was inconclusive. I updated the PR to call the main definition <code>monoid_hom.nonocomm_pi_coprod</code>, hoping we can make progress here.</p>",
        "id": 271966368,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1644928104
    }
]