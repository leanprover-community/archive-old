[
    {
        "content": "<p>Hi, for the past few months I have been writing a formalisation of AVL trees as part of an undergraduate project. I was looking to potentially contribute this to mathlib - would anyone be able to help me with this process? My code for the project can be found here <a href=\"https://github.com/HenryPearson2001/avltree\">https://github.com/HenryPearson2001/avltree</a>. Thanks!</p>",
        "id": 281699974,
        "sender_full_name": "Henry Pearson",
        "timestamp": 1652109577
    },
    {
        "content": "<p>Looks cool! I'm afraid I can't help much with the contribution process, but I have one comment on the content: if you want your operations to be efficient, you need to cache the depth in each <code>avlnode</code>. Otherwise you recompute it all the time. Well-formedness then needs to be extended to include the invariant that the cached depth is correct. (I had a student last year who did a similar project and we made the same mistake. <span aria-label=\"innocent\" class=\"emoji emoji-1f607\" role=\"img\" title=\"innocent\">:innocent:</span> )</p>",
        "id": 281710802,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1652113999
    },
    {
        "content": "<p>Ah thanks for the message! I did consider this but decided not to cache the depth for simplicity, my reasoning for not needing it being that the module is not designed for practical usage of AVL trees, only to prove theorems involving AVL trees, so it only matters that the structure 'looks correct' if that makes sense.</p>",
        "id": 281711730,
        "sender_full_name": "Henry Pearson",
        "timestamp": 1652114415
    },
    {
        "content": "<p>Sure! But the practical version (for which, I think, not much needs to change beyond the depth caching) would be much more interesting. Not so much for Lean 3 but in Lean 4, it would be really nice to have some verified and reasonably performant data structures.</p>",
        "id": 281713153,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1652115074
    },
    {
        "content": "<p>Ah yeah that's true, I'll have a look at changing it</p>",
        "id": 281715707,
        "sender_full_name": "Henry Pearson",
        "timestamp": 1652116181
    }
]