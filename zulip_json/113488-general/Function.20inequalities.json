[
    {
        "content": "<p>Do we have a convention on whether <code>p ≤ q</code> or <code>∀ a, p a ≤ q a</code> is the preferred spelling? Of course I think we should have both in most cases, but is there something written down somewhere, and if not do people have an idea which is used more commonly in mathlib? (This came up in <a href=\"https://github.com/leanprover-community/mathlib/pull/14827#discussion_r904064035\">https://github.com/leanprover-community/mathlib/pull/14827#discussion_r904064035</a>)<br>\n(edited to clarify what I'm actually interested in asking)</p>",
        "id": 287264033,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1656021591
    },
    {
        "content": "<p>The fact that we have three different notations for le (→, ⊆, ≤) makes it all a bit unclear regarding which spelling is preferred</p>",
        "id": 287264608,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1656021883
    },
    {
        "content": "<p>Although I think the elaborator often struggles for le on pi types, as <code>f ≤ g</code> is a function in a way that <code>x ≤ y</code> usually isn't</p>",
        "id": 287264637,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1656021904
    },
    {
        "content": "<p>True, I suppose what I'm actually interested in is the case <code>p ≤ q</code> vs <code>∀ a, p a ≤ q a</code>; the linked PR talks about <code>p ≤ q</code> vs <code>∀ a, p a ⊆ q a</code>, which itself here can be written <code>∀ a x, x ∈ p a → x ∈ q a</code></p>",
        "id": 287264840,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1656022013
    },
    {
        "content": "<p>That last spelling (with <code>p a x →q a x</code>) is banned, it abuses sets</p>",
        "id": 287264901,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1656022058
    },
    {
        "content": "<p><code>∀ a x, x ∈ p a → x ∈ q a</code> is ok</p>",
        "id": 287264989,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1656022097
    },
    {
        "content": "<p>oops, corrected</p>",
        "id": 287265017,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1656022121
    },
    {
        "content": "<p>I think for sets it's pretty clear that ⊆ is preferred vs unfolding all the way</p>",
        "id": 287265065,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1656022161
    },
    {
        "content": "<p>The problem with using <code>h : p ≤ q</code> is that it expands as <code>h a : p a ≤ q a</code> instead of <code>p a ⊆ q a</code>, which isn't the form we normally use. Now, if we eliminated ⊆ notation...</p>",
        "id": 287265217,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1656022252
    },
    {
        "content": "<p>In the case of sets or finsets, at least</p>",
        "id": 287265254,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1656022288
    },
    {
        "content": "<p>To be clear, your example above is <code> p q : α → set β</code>, right?</p>",
        "id": 287265363,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1656022353
    },
    {
        "content": "<p>Exactly, yes</p>",
        "id": 287265431,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1656022407
    }
]