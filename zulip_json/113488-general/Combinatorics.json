[
    {
        "content": "<p>For your information, I'm now trying to get <a href=\"https://github.com/leanprover-community/mathlib/issues/2770\">#2770</a> in mathlib. This (old!) monster PR from <span class=\"user-mention silent\" data-user-id=\"246273\">Bhavik Mehta</span> includes:</p>\n<ul>\n<li>the Lubell-Yamamoto-Meshalkin inequality</li>\n<li>Sperner's theorem</li>\n<li>the Kruskal-Katona theorem</li>\n<li>the Erd≈ës-Ko-Rado theorem</li>\n</ul>\n<p>in case anybody happens to be working on this.</p>",
        "id": 259802739,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1635706946
    },
    {
        "content": "<p>I know <span class=\"user-mention\" data-user-id=\"262143\">@Ryan Lahfa</span> and <span class=\"user-mention\" data-user-id=\"303889\">@Alena Gusakov</span> both tried to update this but moved on to other things, as did I - although stuff like the colex ordering did come out of that. I mostly made that PR so that it wouldn't get forgotten and so that if people search mathlib for those results they appear</p>",
        "id": 259803265,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1635707658
    },
    {
        "content": "<p>Antichains are also now part of mathlib! <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_antichain\">docs#is_antichain</a><br>\nNext thing on my TODO list is <code>shadow</code></p>",
        "id": 259803709,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1635708360
    },
    {
        "content": "<p>Both <a href=\"https://github.com/leanprover-community/mathlib/issues/10223\">#10223</a> (shadow) and <a href=\"https://github.com/leanprover-community/mathlib/issues/10238\">#10238</a> (UV compression) are up for review!</p>",
        "id": 261350241,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1636794761
    },
    {
        "content": "<p>Shadows are now in mathlib and UV compressions (<a href=\"https://github.com/leanprover-community/mathlib/issues/10238\">#10238</a>, +242, -0) are still up for review.<br>\nI'm now hitting a few very easy but very useful definitions:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- `all_sized A r` states that every set in A has size r. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">all_sized</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"n\">Œ±</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"bp\">‚àÄ</span> <span class=\"n\">x</span> <span class=\"bp\">‚àà</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">card</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">r</span>\n\n<span class=\"sd\">/-- The `r`th slice of a set family the subset of its elements which have cardinality `r`. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">slice</span> <span class=\"o\">(</span><span class=\"bp\">ùíú</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"n\">Œ±</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">ùíú.</span><span class=\"n\">filter</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">i.card</span> <span class=\"bp\">=</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>What do you prefer between putting them under <code>data.finset.</code> and <code>combinatorics.set_family</code>?</p>",
        "id": 262249644,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1637513556
    },
    {
        "content": "<p>How does the alternative strategy of defining a type for <code>finsets of card n</code> (as <code>vector</code> is to <code>list</code>) go?</p>",
        "id": 262250243,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1637514353
    },
    {
        "content": "<p>and <code>sym</code> is to <code>multiset</code></p>",
        "id": 262250302,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1637514424
    },
    {
        "content": "<p>For unrelated reasons I actually wanted to do that, so I'll consider the option! In the context of set families, it's probably a bit weird, because your goal is to stratify the membership hypercube, not to look at a single layer.</p>",
        "id": 262250379,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1637514521
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/Combinatorics/near/262250243\">said</a>:</p>\n<blockquote>\n<p>How does the alternative strategy of defining a type for <code>finsets of card n</code> (as <code>vector</code> is to <code>list</code>) go?</p>\n</blockquote>\n<p>I tried this in a super early version of these results, about 2 years ago, and on the advice of someone here I changed to the current versions for the purposes of Kruskal-Katona, and it made that go a lot more smoothly. But this doesn't mean that defining that type for other purposes could still be useful, it's just that in this case it made things a lot worse</p>",
        "id": 262598677,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1637765671
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/13149\">#13149</a> (+207, -13) proves that UV-compression reduces the size of the shadow. This is mostly one big monstruous proof, so it is up for golfing!</p>",
        "id": 277596509,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1648974710
    }
]