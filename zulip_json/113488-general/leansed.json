[
    {
        "content": "<p>How hard would it be to write a <code>leansed</code>? I want to tell lean: hey, update all my source code files so that <code>submodule.subtype</code> is now called <code>submodule.incl</code> everywhere.</p>",
        "id": 198736284,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590483657
    },
    {
        "content": "<p>We need JetBrains to divert some effort away from Arend and write a Lean Resharper.</p>",
        "id": 198744600,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1590489771
    },
    {
        "content": "<p>Well, vscode has built in support for renames of various kinds, the hard part is getting the relevant info out of lean</p>",
        "id": 198744628,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590489821
    },
    {
        "content": "<p>Just query server mode for the identifier at every position and check which point to <code>submodule.subtype</code>. It should only take several hours</p>",
        "id": 198744945,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590490056
    },
    {
        "content": "<p>Or, just change it and fix the breakage</p>",
        "id": 198745003,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590490083
    },
    {
        "content": "<p>Didn't <span class=\"user-mention\" data-user-id=\"115715\">@Jason Rute</span> do a test like this?</p>",
        "id": 198745214,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590490231
    },
    {
        "content": "<p>Yes, I can confirm it takes a several hours to run over mathlib (or more like a whole day).  Although, you don’t need to look at every character for this use case which would speed it up.  It might only take as much time as it takes to compile your project.  Also the server sometimes acts weird when information is nested.  It might point to the tactic and not to the relevant decl.</p>",
        "id": 198748340,
        "sender_full_name": "Jason Rute",
        "timestamp": 1590492461
    },
    {
        "content": "<p>I still have to fix some bugs in the Lean server python tool, but after that you could give it a try.  (But it would probably just be faster to search for all instance of subtype and check each individually.  Yet it is more fun to build a tool.)</p>",
        "id": 198748695,
        "sender_full_name": "Jason Rute",
        "timestamp": 1590492707
    },
    {
        "content": "<p>Well, you can combine both approaches. You can grep for some word, and then using the Lean server to hunt down false positives.</p>",
        "id": 198748843,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590492811
    },
    {
        "content": "<p>I usually find false negatives to be the harder problem</p>",
        "id": 198748928,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590492851
    },
    {
        "content": "<p>when you use e.g. dot notation to apply a function it can be very hard to find if it otherwise has a common name like <code>.add</code> or<code>.to_fun</code></p>",
        "id": 198748985,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590492910
    },
    {
        "content": "<p>or <code>.1</code></p>",
        "id": 198749009,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590492928
    },
    {
        "content": "<p>It’s that a false positive?</p>",
        "id": 198749041,
        "sender_full_name": "Jason Rute",
        "timestamp": 1590492959
    },
    {
        "content": "<p>If it runs in &lt; 10 hours on my box, I'm happy. It means I can fire up such a refactor task in 3 minutes before I go to bed, and it should be almost finished by the time I've done my breakfast and morning workout.</p>",
        "id": 198749134,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590493015
    },
    {
        "content": "<p>I mean if you are looking for <code>subtype.val</code>, you will have a hard time finding a use via <code>x.1</code> unless you ask lean</p>",
        "id": 198749150,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590493028
    },
    {
        "content": "<p>That's a lot better than the Read-Edit-Fix-Compile-loop</p>",
        "id": 198749161,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590493042
    },
    {
        "content": "<p>Ok.  I need to finish <a href=\"https://github.com/leanprover-community/lean-client-python/pulls\">these PRs</a> (there was some discussion about the design of the tests and then I got into other projects <span aria-label=\"oh no\" class=\"emoji emoji-1f615\" role=\"img\" title=\"oh no\">:oh_no:</span> ) and then probably give you an example for you to get started.</p>",
        "id": 198749828,
        "sender_full_name": "Jason Rute",
        "timestamp": 1590493508
    }
]