[
    {
        "content": "<p>Just drawing attention to an ongoing relevant Coq-club thread on the differences between Coq and Lean, sparked by a comment by Kevin at his MSR talk:<br>\n<a href=\"https://sympa.inria.fr/sympa/arc/coq-club/2020-01/msg00006.html\" target=\"_blank\" title=\"https://sympa.inria.fr/sympa/arc/coq-club/2020-01/msg00006.html\">https://sympa.inria.fr/sympa/arc/coq-club/2020-01/msg00006.html</a></p>",
        "id": 184692037,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1578006574
    },
    {
        "content": "<p>Oh I didn't know it was publically readable like this. I didn't fancy going up against Adam Chlipala on the advantages of having one language rather than three ;-) Maybe I can tempt some more CS people to reply...</p>",
        "id": 184694479,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1578009249
    },
    {
        "content": "<p>I think that Lean's tactic language is mostly a different language anyway from regular proofs, even if it nominally uses the same syntax. That's a big step up from completely distinct languages, but you still have to come to terms with monads (and do notation and haskell operators), <code>meta</code>, the lean tactic state and the <code>expr</code>/<code>level</code>/<code>name</code> ontology, and the large number of builtin functions (with less than stellar documentation). Very little of this has much in common with proof writing, which uses interactive tactics (<code>begin</code>/<code>end</code>), term mode proofs, and a large library of mathematical facts from mathlib</p>",
        "id": 184698935,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1578014897
    },
    {
        "content": "<p>Ultimately, this is a side effect of the fact that they have different aims, and you can't really unify that</p>",
        "id": 184698946,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1578014925
    },
    {
        "content": "<p>I've never written Ltac, but my impression is that lean 3 tactics have a bit more access to the underlying state, and there is not as much ad hoc syntax to make the simple cases easy (in lieu of <code> `[tac,...]</code> quick tactics)</p>",
        "id": 184699024,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1578015021
    },
    {
        "content": "<p>The link to this thread in <a href=\"https://leanprover-community.github.io/archive/stream/113488-general/index.html\">https://leanprover-community.github.io/archive/stream/113488-general/index.html</a> is not working. Bug?</p>",
        "id": 208630192,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1598917983
    },
    {
        "content": "<p>Yeah, that's a bug. The problem seems to be thread titles that <em>start</em> with <code>\"</code></p>",
        "id": 208630328,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1598918098
    },
    {
        "content": "<p>Unfortunately there are lots of bugs like that: <a href=\"https://github.com/zulip/zulip-archive/issues/35\">https://github.com/zulip/zulip-archive/issues/35</a></p>",
        "id": 208630425,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1598918166
    },
    {
        "content": "<p>When the Zulip org adopted my original archive script, someone noticed a theoretically possible name clash in the URL escaping, so they changed it to be \"like official Zulip urls.\" Except they're still nothing like the official URLs and they're horribly broken.</p>",
        "id": 208652371,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1598945077
    },
    {
        "content": "<p>And the contributor who made that change disappeared and nobody seemed interested in reverting it.</p>",
        "id": 208652425,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1598945113
    },
    {
        "content": "<p>I don't have the energy to do it myself, but if someone wanted to tackle fixing it, it would be awesome. We're running a <a href=\"https://github.com/robertylewis/zulip-archive\">fork</a> of the official archive action now because nobody's merged my PR fixing an even bigger dealbreaker problem, hah.</p>",
        "id": 208652571,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1598945229
    },
    {
        "content": "<p>Looks like there's some actual progress on fixing this whole issue for real: <a href=\"https://github.com/zulip/zulip/pull/16131\">https://github.com/zulip/zulip/pull/16131</a></p>",
        "id": 208654925,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1598946762
    },
    {
        "content": "<p>This was on their roadmap before we even started using Zulip, so I'm not counting on quick progress, but it will be great to ditch the archive script when it finally happens!</p>",
        "id": 208655761,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1598947296
    }
]