[
    {
        "content": "<p>This is a briefly stated open problem in rational numbers for which Lean has the structure built up to check a proof, if one existed: \"Given a unit square in the plane. Is it possible for all four distances from any point in the square to the four vertices to be rational numbers?\"  </p>\n<p>References:</p>\n<p><a href=\"http://www.math.bas.bg/smb/kolokvium/2022_11_16-NKM-Jordan_Stoyanov-talk.pdf\">http://www.math.bas.bg/smb/kolokvium/2022_11_16-NKM-Jordan_Stoyanov-talk.pdf</a><br>\n<a href=\"https://arxiv.org/pdf/1904.12097.pdf\">https://arxiv.org/pdf/1904.12097.pdf</a><br>\n<a href=\"https://unsolvedproblems.org/index_files/RationalDistance.htm\">https://unsolvedproblems.org/index_files/RationalDistance.htm</a></p>",
        "id": 318907523,
        "sender_full_name": "Lars Ericson",
        "timestamp": 1672608527
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"364351\">Lars Ericson</span> <a href=\"#narrow/stream/113488-general/topic/Four.20distance.20problem/near/318907523\">said</a>:</p>\n<blockquote>\n<p>Lean has the structure built up to check a proof, if one existed</p>\n</blockquote>\n<p>Better not to make a claim like that until a proof actually exists and you can see what it uses :)</p>",
        "id": 318908361,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1672609141
    },
    {
        "content": "<p>A similar unsolved problem is <a href=\"https://en.wikipedia.org/wiki/Euler_brick#Perfect_cuboid\">https://en.wikipedia.org/wiki/Euler_brick#Perfect_cuboid</a></p>",
        "id": 318908484,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1672609259
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Congruent_number\">https://en.wikipedia.org/wiki/Congruent_number</a> is also about Diophantine equations from elementary geometry.</p>\n<p>Let me mention there are rational <em>angle</em> problems as well, but the question is not existence but classification in general:<br>\nPlanar quadrilateral: <a href=\"https://en.wikipedia.org/wiki/Langley%27s_Adventitious_Angles\">https://en.wikipedia.org/wiki/Langley%27s_Adventitious_Angles</a><br>\nRecent work on tetrahedra:<br>\n<a href=\"https://github.com/kedlaya/tetrahedra#readme\">https://github.com/kedlaya/tetrahedra#readme</a><br>\n<a href=\"https://mobile.twitter.com/marty__weissman/status/1333670741590503425\">https://mobile.twitter.com/marty__weissman/status/1333670741590503425</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://mobile.twitter.com/marty__weissman/status/1333670741590503425\"><img class=\"twitter-avatar\" src=\"https://uploads.zulipusercontent.net/7390ca994732c4dc2d6125c6c3b1bcf5d45a7782/68747470733a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f313238393334303237313832363537393435382f33545955767043755f6e6f726d616c2e6a7067\"></a><p>A remarkable result on the ArXiv tonight, due to Kedlaya, Kolpakov, Poonen, and Rubinstein, at <a href=\"https://t.co/YNcWqgZj3M\">https://arxiv.org/pdf/2011.14232.pdf</a>.  One of the highlights is that they fully classify tetrahedra (= triangular pyramids) with rational dihedral angles.  Here's what they prove... (1/n)</p><span>- Marty Weissman (@marty__weissman)</span></div></div>",
        "id": 318909239,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1672609887
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113488-general/topic/Four.20distance.20problem/near/318908361\">said</a>:</p>\n<blockquote>\n<p>Better not to make a claim like that until a proof actually exists and you can see what it uses :)</p>\n</blockquote>\n<p>Cf. Fermat's Last Theorem <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 318909394,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1672610005
    },
    {
        "content": "<p>Easy <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.metric_space.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.irrational</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">no_not_like_that</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"c1\">-- a point within the square</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">)),</span>\n    <span class=\"c1\">-- such that the \"distance\" to every point is rational</span>\n    <span class=\"bp\">¬</span><span class=\"n\">irrational</span> <span class=\"o\">(</span><span class=\"n\">dist</span> <span class=\"n\">x</span> <span class=\"o\">((</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"bp\">∧</span>\n    <span class=\"bp\">¬</span><span class=\"n\">irrational</span> <span class=\"o\">(</span><span class=\"n\">dist</span> <span class=\"n\">x</span> <span class=\"o\">((</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"bp\">∧</span>\n    <span class=\"bp\">¬</span><span class=\"n\">irrational</span> <span class=\"o\">(</span><span class=\"n\">dist</span> <span class=\"n\">x</span> <span class=\"o\">((</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"bp\">∧</span>\n    <span class=\"bp\">¬</span><span class=\"n\">irrational</span> <span class=\"o\">(</span><span class=\"n\">dist</span> <span class=\"n\">x</span> <span class=\"o\">((</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨(</span><span class=\"mi\">2</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"bp\">⁻¹</span><span class=\"o\">),</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n  <span class=\"o\">{</span> <span class=\"n\">norm_num</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">norm_num</span> <span class=\"o\">},</span>\n  <span class=\"n\">norm_num</span> <span class=\"o\">[</span><span class=\"n\">prod.dist_eq</span><span class=\"o\">,</span> <span class=\"n\">real.dist_eq</span><span class=\"o\">,</span> <span class=\"n\">abs</span><span class=\"o\">,</span> <span class=\"n\">irrational_inv_iff</span><span class=\"o\">],</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">one_div</span><span class=\"o\">,</span> <span class=\"n\">irrational_inv_iff</span><span class=\"o\">],</span>\n  <span class=\"n\">exact_mod_cast</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">not_irrational</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 318919849,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672620212
    },
    {
        "content": "<p>Yes, it is easy to prove  by hand or in Lean, that in the case when the point is <strong>inside</strong> the square, that the coordinates are forced to be rational. But following the links referenced by Lars, which have interesting diagrams to illustrate, that the hard problem is when the given point is <em>outside</em> the square, and that case is not proven.... <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 318927750,
        "sender_full_name": "Oisin McGuinness",
        "timestamp": 1672628319
    },
    {
        "content": "<p>So the \"in the square\" in the first post should be \"in the plane\" to match the references...</p>",
        "id": 318927960,
        "sender_full_name": "Oisin McGuinness",
        "timestamp": 1672628554
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"522558\">@Oisin McGuinness</span>, in case it wasn't obvious; my proof above isn't showing that the problem is trivial, but is instead exploiting an ambiguity in what is meant by distance. It uses the inf norm not the euclidean norm, as that happens to be the default!</p>",
        "id": 318977667,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672659929
    },
    {
        "content": "<p>That's only an ambiguity caused by a really poor default choice on lean's part as opposed to anything a mathematician would care about</p>",
        "id": 318987250,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672664071
    },
    {
        "content": "<p>Lean didn't choose anything, we did.</p>",
        "id": 318987530,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1672664212
    },
    {
        "content": "<p>And Eric purposefully chose to use the wrong representation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> in his joke.</p>",
        "id": 318987618,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1672664264
    },
    {
        "content": "<p>Aah I see. So the version of R^2 with the correct metric is there but under another name? My point still stands that no mathematician would ever say \"ah but with what metric on R^2? There are many!\"</p>",
        "id": 318987819,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672664346
    },
    {
        "content": "<p>Sure, the intended one is <code>euclidean_space ℝ (fin 2)</code>.</p>",
        "id": 318988480,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1672664647
    },
    {
        "content": "<p>Of course, if they really did mean to talk about the inf metric, the problem would be about points in a unit \"circle\"...</p>",
        "id": 319004120,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672670067
    },
    {
        "content": "<p>There has been <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Inner.20product.20space.20on.20.CE.B1.20.C3.97.20.CE.B2/near/292851174\">some discussion about having a <code>euclidean_space</code> version of <code>prod</code> before</a>: (or <code>prod_Lp</code> which is at least sensible for <code>p ∈ {1, 2, ∞}</code>), but it's a lot of boilerplate and mid-port would be a bad time to pursue it.</p>",
        "id": 319004312,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672670138
    },
    {
        "content": "<p><del>Using the euclidean norm on general products doesn't work very well to fix this issue, since then <code>ℝ × (ℝ × ℝ)</code> and <code>(ℝ × ℝ) × ℝ</code> get completely different metrics, and neither one is the one you would expect</del></p>",
        "id": 319036470,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1672683582
    },
    {
        "content": "<p><del>I agree, but only when <code>p ∈ {1, 2, ∞}</code> doesn't hold</del></p>",
        "id": 319079608,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672684243
    }
]