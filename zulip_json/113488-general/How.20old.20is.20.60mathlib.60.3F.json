[
    {
        "content": "<p>Hi, I wonder how old is mathlib (as a project to formalize math in Lean)? I see that the oldest commit is from July 2017 but the second one imports a lot of content from <code>lean/library/data</code> and <code>library_dev</code>.</p>",
        "id": 182213953,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1575074608
    },
    {
        "content": "<p>It depends on what you mean. <code>mathlib</code> was originally <code>library_dev</code>, which I think contained some material translated from lean 2. I don't think any lean library projects have truly started from scratch since the beginning</p>",
        "id": 182218948,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1575082096
    },
    {
        "content": "<p>The library_dev project is still around at <a href=\"https://github.com/avigad/library_dev\" target=\"_blank\" title=\"https://github.com/avigad/library_dev\">https://github.com/avigad/library_dev</a></p>",
        "id": 182219020,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1575082254
    },
    {
        "content": "<p>Looks like the first few commits on the library_dev repo (Sep 2016) were for <code>super</code>, the sat solver that never made it into mathlib for some reason.</p>",
        "id": 182219119,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1575082398
    },
    {
        "content": "<p><a href=\"https://github.com/avigad/library_dev/commit/ae5e51ac7ef075c139a2083dddec2d5acfef2d3f\" target=\"_blank\" title=\"https://github.com/avigad/library_dev/commit/ae5e51ac7ef075c139a2083dddec2d5acfef2d3f\">This commit</a> by Jeremy looks like the first commit that contains parts that are still in mathlib today</p>",
        "id": 182219368,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1575082742
    },
    {
        "content": "<p>Thank you for the explanation. So, the project is very young. That's amazing how fast it came from \"simple lemmas about propositional logic\" to the current status.</p>",
        "id": 182220993,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1575086019
    },
    {
        "content": "<p>One of the reasons it grows so fast is because some people make several PR's per week <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 182223335,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1575090348
    },
    {
        "content": "<p>One of the reasons that I back the project so publically is that I've seen it grow so quickly. It still amazes me that there are definitions like schemes and manifolds and Noetherian rings, standard BSc and MSc objects, which have appeared in Lean but are in essentially none of the other systems, and when I started just over two years ago it didn't even have complex numbers.</p>",
        "id": 182230771,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1575104011
    },
    {
        "content": "<p>Yury, did you read the <a href=\"https://arxiv.org/abs/1910.09336\" target=\"_blank\" title=\"https://arxiv.org/abs/1910.09336\">mathlib paper</a>? It briefly discusses the history of mathlib and lots of other very interesting things.</p>",
        "id": 182232813,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1575108175
    },
    {
        "content": "<p>The story is more complicated. Mathlib combined elements of <code>library_dev</code> and Lean's core library. Most of those were in turn ported from Lean 2: <a href=\"https://github.com/leanprover/lean2/tree/master/library\" target=\"_blank\" title=\"https://github.com/leanprover/lean2/tree/master/library\">https://github.com/leanprover/lean2/tree/master/library</a>, which dates to about 2014. And parts of that library trace all the way back to the original Lean, Lean 0.1. When Mario took over mathlib, he rewrote a lot. But lots of stuff survives from the earlier versions: basic algebraic structures (from semigroups to ordered fields), sets, lists, finsets, nat, int, etc.</p>",
        "id": 182308832,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1575249770
    }
]