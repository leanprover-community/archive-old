[
    {
        "content": "<p>What is <code>rsimp</code>, how does it work, and why is it so slow?</p>",
        "id": 165992248,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1558215416
    },
    {
        "content": "<p>prompted by the discussion about the simp lemma <code>eq_self_iff_true</code>, I was playing around with <code>simp</code> and its occasional inability to prove definitional equalities (depending on what is marked reducible, it seems)</p>\n<p>i'm surprised that below <code>{[smt] close}</code> closes the goal, but <code>cc</code> doesnt (i thought they had the same strength)</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">squeeze</span>\n\n<span class=\"n\">def</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">def</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"n\">A</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"n\">rfl</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">rsimp</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"o\">{[</span><span class=\"n\">smt</span><span class=\"o\">]</span> <span class=\"n\">eblast</span><span class=\"o\">}</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"o\">{[</span><span class=\"n\">smt</span><span class=\"o\">]</span> <span class=\"n\">close</span><span class=\"o\">}</span> <span class=\"c1\">-- works</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">cc</span> <span class=\"c1\">-- fails</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"c1\">-- fails</span>\n</pre></div>",
        "id": 165992828,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1558216503
    },
    {
        "content": "<p>I know the r stands for \"robust\", but I have not looked at the implementation. It's almost never used</p>",
        "id": 165998077,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1558226201
    },
    {
        "content": "<blockquote>\n<p>why is it so slow</p>\n</blockquote>\n<p>Is <code>rsimp</code> meant to be <em>painfully</em> slow? I just tried it on a single-hypothesis-with-the-goal-being-just-the-hypothesis example and it takes 10 seconds.</p>",
        "id": 168676762,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1561120094
    },
    {
        "content": "<p>Regarding what <code>rsimp</code> actually is, it's described in <a href=\"https://leanprover.github.io/papers/tactic.pdf\" target=\"_blank\" title=\"https://leanprover.github.io/papers/tactic.pdf\">chapter 2 here</a>. It more or less tries to find the simplest form of every expression using congruence closure and rewrites it to that.</p>",
        "id": 168676935,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1561120252
    }
]