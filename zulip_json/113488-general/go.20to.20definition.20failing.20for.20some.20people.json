[
    {
        "content": "<p>I am teaching right now. For two students, clicking on \"go to definition\" (the little injective hook-arrow) in the infoview simply doesn't work. I have no idea how to debug. They're live streaming their screens. Is this a known issue?</p>",
        "id": 226025924,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1613064004
    },
    {
        "content": "<p>I haven't seen this before fwiw</p>",
        "id": 226027309,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1613064530
    },
    {
        "content": "<p>Is there a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>?</p>",
        "id": 226027699,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613064695
    },
    {
        "content": "<p>Doesn't work for me at all, on windows, are they also on windows?</p>",
        "id": 226029353,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613065396
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> if you hit ctrl+shift+p and run \"toggle developer tools\", do you see any errors in the console when you try to go to definition in the widget infoview?</p>",
        "id": 226031553,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613066196
    },
    {
        "content": "<p>Trying it now <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> as expected it seems to be some funny buisness with backslashes </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">console.ts</span><span class=\"o\">:</span><span class=\"mi\">137</span> <span class=\"o\">[</span><span class=\"n\">Extension</span> <span class=\"n\">Host</span><span class=\"o\">]</span> <span class=\"n\">rejected</span> <span class=\"n\">promise</span> <span class=\"n\">not</span> <span class=\"n\">handled</span> <span class=\"n\">within</span> <span class=\"mi\">1</span> <span class=\"n\">second</span><span class=\"o\">:</span> <span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">cannot</span> <span class=\"kn\">open</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">CUsers</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Calexj</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">C.elan</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Ctoolchains</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Cleanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">-</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">26</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Clib</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Clean</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Clibrary</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Cinit</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Ccore.lean.</span> <span class=\"n\">Detail</span><span class=\"o\">:</span> <span class=\"n\">Unable</span> <span class=\"n\">to</span> <span class=\"n\">resolve</span> <span class=\"n\">resource</span> <span class=\"n\">C</span><span class=\"o\">:</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">CUsers</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Calexj</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">C.elan</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Ctoolchains</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Cleanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">-</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">26</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Clib</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Clean</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Clibrary</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Cinit</span><span class=\"bp\">%</span><span class=\"mi\">5</span><span class=\"n\">Ccore.lean</span>\n</code></pre></div>",
        "id": 226031701,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613066266
    },
    {
        "content": "<p>Interesting... I wonder why there's a difference from the usual go to definition function.</p>",
        "id": 226032457,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613066537
    },
    {
        "content": "<p>Do you know if I need to setup the vscode extension for development to set breakpoints in vscode?</p>",
        "id": 226032726,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613066645
    },
    {
        "content": "<p>I think you do, yes - then you launch a new vscode instance from the one you develop the extension in</p>",
        "id": 226034133,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613067220
    },
    {
        "content": "<p>Ok on windows it seems the URI scheme when we get to <a href=\"https://github.com/leanprover/vscode-lean/blob/master/src/infoview.ts#L285\">https://github.com/leanprover/vscode-lean/blob/master/src/infoview.ts#L285</a> is set to \"C\" instead of \"file\" (<a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.uri.scheme?view=net-5.0\">https://docs.microsoft.com/en-us/dotnet/api/system.uri.scheme?view=net-5.0</a>) it seems something is parsing \"C:/...\" as a uri scheme instead of a drive</p>",
        "id": 226038326,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613069082
    },
    {
        "content": "<p>And that function, <code>revealEditorPosition</code> seems to be called from <a href=\"https://github.com/leanprover/vscode-lean/blob/03c9fecedbaca796fba8dfff1433a197a7399480/src/infoview.ts#L203\">here</a>, being passed <code>Uri.parse(message.loc.file_name)</code>.</p>",
        "id": 226039113,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613069457
    },
    {
        "content": "<p>So is Lean returning <code>file_name</code>s differently for the usual go to definition command and the go to definition button in the widget?</p>",
        "id": 226039219,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613069517
    },
    {
        "content": "<p>I think it should use <code>Uri.file</code> instead of <code>Uri.parse</code></p>",
        "id": 226040145,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613069869
    },
    {
        "content": "<p>Building with that  change it works for me (as does the usual go to definition via F12)</p>",
        "id": 226040337,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613069950
    },
    {
        "content": "<p>Oh yeah, it looks like <code>Uri.file</code> is used almost everywhere else in the extension. There are a few instances of <code>Uri.parse</code> in <code>src/docview.ts</code>: are there issues there on Windows as well?</p>",
        "id": 226041093,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613070232
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/vscode-lean/pull/258\">https://github.com/leanprover/vscode-lean/pull/258</a></p>",
        "id": 226041693,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613070452
    },
    {
        "content": "<p>I'll look now</p>",
        "id": 226041701,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613070457
    },
    {
        "content": "<p>I also think upstream <a href=\"https://github.com/microsoft/vscode-uri/pull/12\">https://github.com/microsoft/vscode-uri/pull/12</a> might fix this too, but I have no idea how to tell when / if that will make it to a vscode release (or if it has already)</p>",
        "id": 226041931,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613070547
    },
    {
        "content": "<p>I think I was looking at making a change in the other direction at one point, Uri.file doesn't work on unsaved buffers as far as I remember</p>",
        "id": 226043342,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613071080
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I guess it may be too late now for your course, but Gabriel just released vscode-lean 0.16.24 which includes this fix.</p>",
        "id": 226043838,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613071265
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113488-general/topic/go.20to.20definition.20failing.20for.20some.20people/near/226041093\">said</a>:</p>\n<blockquote>\n<p>Oh yeah, it looks like <code>Uri.file</code> is used almost everywhere else in the extension. There are a few instances of <code>Uri.parse</code> in <code>src/docview.ts</code>: are there issues there on Windows as well?</p>\n</blockquote>\n<p>what is doc view used for ? Is it that nice thing where you can view a tutorial in vscode as a separate editor pane, if so can someone point me to where I can set that up (I've looked to no avail!)</p>",
        "id": 226044145,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613071413
    },
    {
        "content": "<p>Ah, got it, its built in to the extension lol!</p>",
        "id": 226044843,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613071671
    },
    {
        "content": "<p>Yep, I think if you hit ctrl+shift+p and search for \"Lean: open documentation view\" it should open a panel with some links you can try.</p>",
        "id": 226044848,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1613071672
    },
    {
        "content": "<p>Yeah they seem to work fine as-is.</p>",
        "id": 226045241,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613071810
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/go.20to.20definition.20failing.20for.20some.20people/near/226043342\">said</a>:</p>\n<blockquote>\n<p>I think I was looking at making a change in the other direction at one point, Uri.file doesn't work on unsaved buffers as far as I remember</p>\n</blockquote>\n<p>Do you mean completely new buffers, or just any buffers with unsaved changes in?</p>",
        "id": 226045292,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1613071840
    },
    {
        "content": "<p>Completely new buffers</p>",
        "id": 226056125,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613076955
    },
    {
        "content": "<p>In particular, <code>try this</code> does not work in those buffers</p>",
        "id": 226056228,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613076985
    },
    {
        "content": "<p>And nor do <code>\\</code>-inputs until you leave the new buffer and reenter it, although that's unlikely to be related to URIs</p>",
        "id": 226056312,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613077038
    }
]