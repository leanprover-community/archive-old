[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> I have a feature request.<br>\nI would like to do <code>contrapose foo with bar</code>. Because now the hypothesis name just gets reused, but this can create severe semantic dissonance.</p>",
        "id": 172528447,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565031362
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">H_nonzero</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span>\n<span class=\"err\">⊢</span> <span class=\"err\">⇑</span><span class=\"n\">l</span> <span class=\"n\">q</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span>\n</pre></div>",
        "id": 172528505,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565031394
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">H_nonzero</span>\n</pre></div>",
        "id": 172528513,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565031410
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">H_nonzero</span> <span class=\"o\">:</span> <span class=\"err\">⇑</span><span class=\"n\">l</span> <span class=\"n\">q</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"err\">⊢</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n</pre></div>",
        "id": 172528529,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565031429
    },
    {
        "content": "<p>I just do <code>intro bar, apply foo</code> which I think is shorter! I didn't know about <code>contrapose</code></p>",
        "id": 172531109,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1565033557
    },
    {
        "content": "<p>But it sounds good for beginners.</p>",
        "id": 172531121,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1565033568
    },
    {
        "content": "<p>I just used <code>contrapose</code> for the first time today in the sensitivity proof. It's suprisingly useful, especially the <code>!</code> variant that fixes double negations.</p>",
        "id": 172531459,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1565033829
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/1302\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/1302\">https://github.com/leanprover-community/mathlib/pull/1302</a></p>",
        "id": 172531464,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1565033831
    },
    {
        "content": "<p>Right, with <code>!</code> it is really powerful. It fixes double negations, but also changes <code>\\not \\exists</code> into <code>\\forall</code> and vice versa.</p>",
        "id": 172531714,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565034021
    },
    {
        "content": "<p>And it does this recursively</p>",
        "id": 172531718,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565034027
    },
    {
        "content": "<p>(This feature is also available standalone, as <code>push_neg</code>)</p>",
        "id": 172531737,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565034052
    },
    {
        "content": "<p>Once again: kudos to <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span></p>",
        "id": 172531753,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565034065
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> does <a href=\"https://github.com/leanprover-community/mathlib/issues/1302\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1302\">#1302</a> also clear the old hypothesis?</p>",
        "id": 172531779,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565034119
    },
    {
        "content": "<p>Because that would make sense, I think. Otherwise you end up with a hypothesis that is the negation of the goal. Pretty useless, as long as Lean is consistent <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 172531868,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565034160
    },
    {
        "content": "<p>Yes, it reverts the old hypothesis, contraposes the goal, then introduces the new hypothesis with the new name.</p>",
        "id": 172531927,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1565034226
    },
    {
        "content": "<p>Awesome!</p>",
        "id": 172531989,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565034257
    },
    {
        "content": "<p>Sometimes <code>contrapose</code> fails because I'm not in classical mode. What do people think of enhancing <code>contrapose</code> so that it invokes <code>classical</code> automatically in such cases?</p>",
        "id": 186564723,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1579942889
    },
    {
        "content": "<p>Indeed this tactic doesn't make much sense in anon-classical context. It could start with classical.</p>",
        "id": 186565117,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1579943560
    },
    {
        "content": "<p>Well, sometimes it works... If you're doing fake proof by contradiction.</p>",
        "id": 186565196,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1579943733
    }
]