[
    {
        "content": "<p>Hmm... the new <code>leanproject up</code> and faster CI is amazing, but it's so good it's causing a problem. I'm happily relying on github to build branches for me rather than compiling them completely locally, and I'm even jumping back and forth between branches working on whatever is available while CI works on other branches. The result, however, is that I'm spamming github with new commits.</p>",
        "id": 191703501,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585115708
    },
    {
        "content": "<p>I only just realised, per <a href=\"https://github.com/leanprover-community/mathlib/actions\" title=\"https://github.com/leanprover-community/mathlib/actions\">https://github.com/leanprover-community/mathlib/actions</a>, that making a new commit on a branch doesn't cancel the build running on the old commit.</p>",
        "id": 191703507,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585115734
    },
    {
        "content": "<p>And so I'm causing a lot of work for github actions. :-)</p>",
        "id": 191703509,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585115743
    },
    {
        "content": "<p>Is there any hope of cancelling builds for obsolete commits?</p>",
        "id": 191703510,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585115754
    },
    {
        "content": "<p>It seems <a href=\"https://github.community/t5/GitHub-Actions/Github-actions-Cancel-redundant-builds/td-p/29549\" title=\"https://github.community/t5/GitHub-Actions/Github-actions-Cancel-redundant-builds/td-p/29549\">https://github.community/t5/GitHub-Actions/Github-actions-Cancel-redundant-builds/td-p/29549</a> is about this.</p>",
        "id": 191703579,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585115836
    },
    {
        "content": "<p>and someone says it is scriptable: <a href=\"https://github.community/t5/GitHub-Actions/Github-actions-Cancel-redundant-builds/m-p/44690/highlight/true#M5869\" title=\"https://github.community/t5/GitHub-Actions/Github-actions-Cancel-redundant-builds/m-p/44690/highlight/true#M5869\">https://github.community/t5/GitHub-Actions/Github-actions-Cancel-redundant-builds/m-p/44690/highlight/true#M5869</a></p>",
        "id": 191703584,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585115862
    },
    {
        "content": "<p>and maybe <a href=\"https://github.com/marketplace/actions/workflow-run-cleanup-action\" title=\"https://github.com/marketplace/actions/workflow-run-cleanup-action\">https://github.com/marketplace/actions/workflow-run-cleanup-action</a> is a solution?</p>",
        "id": 191703645,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585115941
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/2235\" title=\"https://github.com/leanprover-community/mathlib/issues/2235\">#2235</a>, seems to work great!</p>",
        "id": 191704479,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585117238
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Right now I see 3 builds in action on that PR. So it doesn't seem to cancel them...</p>",
        "id": 191708206,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1585121981
    },
    {
        "content": "<p>I'm not sure this is a good idea. Often I'd like the earlier builds to finish, just to see if there are errors I didn't anticipate in the newer commits.</p>",
        "id": 191709447,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1585122981
    },
    {
        "content": "<p>Note that we don't upload olean caches if there's a new commit when the build finishes.</p>",
        "id": 191709498,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1585123048
    },
    {
        "content": "<p>Even so, it might be nice to have a way to manually cancel a build</p>",
        "id": 191709815,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585123275
    },
    {
        "content": "<p>There is already a manual way</p>",
        "id": 191709919,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1585123324
    },
    {
        "content": "<p>Of course you can manually cancel a build.</p>",
        "id": 191709940,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1585123335
    },
    {
        "content": "<p>Just go to the page of the build, and click cancel</p>",
        "id": 191709944,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1585123337
    },
    {
        "content": "<p>Another point: I think we have <a href=\"https://help.github.com/en/actions/getting-started-with-github-actions/about-github-actions#usage-limits\" title=\"https://help.github.com/en/actions/getting-started-with-github-actions/about-github-actions#usage-limits\">a limit of 20 concurrent jobs</a>. So far the most I've seen running at one time is around 17. However, if we switch community Lean to github actions, then we will probably run into problems.</p>",
        "id": 191709958,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1585123347
    },
    {
        "content": "<p>I think I posted something along these lines a few weeks ago and then forgot about it: the PR builds aren't doing anything for us, are they? They test a merge commit that will never be checked out, and Mergify makes sure that the one merge commit that matters gets tested (as a push build).</p>",
        "id": 191713302,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1585125683
    },
    {
        "content": "<p>The PR builds only matter for PRs that come from an external repo with Actions disabled.</p>",
        "id": 191713325,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1585125703
    },
    {
        "content": "<p>There are other reasons to avoid external PRs as much as possible, and if we get them, we can just ask the author to enable Actions. It's simple to do.</p>",
        "id": 191713424,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1585125751
    },
    {
        "content": "<p>No configuration needed because the Actions config is part of the repo.</p>",
        "id": 191713460,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1585125776
    },
    {
        "content": "<p>This should be as effective at cutting down the number of builds, and less disruptive than auto cancelling obsolete ones.</p>",
        "id": 191713522,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1585125827
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110596\">Rob Lewis</span> <a href=\"#narrow/stream/113488-general/topic/github.20actions.3A.20can.20we.20cancelled.20obsolete.20builds.3F/near/191709498\" title=\"#narrow/stream/113488-general/topic/github.20actions.3A.20can.20we.20cancelled.20obsolete.20builds.3F/near/191709498\">said</a>:</p>\n<blockquote>\n<p>Note that we don't upload olean caches if there's a new commit when the build finishes.</p>\n</blockquote>\n<p>I'd like to revisit this decision once we have the garbage collection script set up.  I'm regularly running into the situation where I'd like to have oleans for old revisions and I'd be happy to <code>git reset --hard HEAD^^ &amp;&amp; leanproject get-cache</code> for lack of better tooling.  But it's vexing when you're waiting for the CI build to finish and somebody pushes a fix for a typo and now you have to wait again.</p>",
        "id": 191714978,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1585126754
    },
    {
        "content": "<p>Fair enough. Once garbage collection is running we can delete those builds quickly, after a day or two.</p>",
        "id": 191715135,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1585126834
    },
    {
        "content": "<p>Okay, I will close my \"cancel obsolete builds\" PR, which looked like trouble anyway.</p>",
        "id": 191717903,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585128416
    }
]