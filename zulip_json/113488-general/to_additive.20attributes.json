[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>      <span class=\"n\">transform_decl_with_prefix_dict</span> <span class=\"n\">dict</span> <span class=\"n\">src</span> <span class=\"n\">tgt</span>\n        <span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"kn\">reducible</span><span class=\"o\">,</span> <span class=\"bp\">`</span><span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"bp\">`</span><span class=\"kn\">instance</span><span class=\"o\">,</span> <span class=\"bp\">`</span><span class=\"n\">refl</span><span class=\"o\">,</span> <span class=\"bp\">`</span><span class=\"n\">symm</span><span class=\"o\">,</span> <span class=\"bp\">`</span><span class=\"n\">trans</span><span class=\"o\">,</span> <span class=\"bp\">`</span><span class=\"n\">elab_as_eliminator</span><span class=\"o\">,</span> <span class=\"bp\">`</span><span class=\"n\">no_rsimp</span><span class=\"o\">],</span>\n</code></pre></div>\n\n\n<p>Can we make this list extensible? Maybe by ... giving these attributes an attribute?</p>",
        "id": 199275161,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590871428
    },
    {
        "content": "<p>Do you want to extend it outside of mathlib? If not, just as values here. AFAIR every read of an attribute comes at a price</p>",
        "id": 199275803,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590872453
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> am I right?</p>",
        "id": 199275820,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590872484
    },
    {
        "content": "<p>In mathlib, but I don't want to create more dependencies if it's avoidable...</p>",
        "id": 199275876,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590872556
    },
    {
        "content": "<p>I guess I could just create my attribute somewhere low in the hierarchy and then use it later</p>",
        "id": 199275941,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590872697
    },
    {
        "content": "<p>This is a list of names. They don't need to be defined at this point.</p>",
        "id": 199276001,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590872780
    },
    {
        "content": "<p>Oh I see, I'm not used to this style but I guess it works.</p>",
        "id": 199276010,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590872811
    },
    {
        "content": "<p>If the code accidentally assumes that the attributes are defined, I can fix it tonight.</p>",
        "id": 199276021,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590872847
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> It's slow, but optimizable with a bit of effort.  For \"list of names\", we can just copy the workaround used in the nolints attribute.</p>",
        "id": 199276399,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590873483
    },
    {
        "content": "<p>I'm afraid that I don't understand this workaround. Why exactly the new code is faster? Which call is slow and what is a fast alternative?</p>",
        "id": 199278866,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590877604
    },
    {
        "content": "<p>Is <code>@[to_additive]</code> slow for the same reason?</p>",
        "id": 199278876,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590877627
    }
]