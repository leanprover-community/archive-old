[
    {
        "content": "<p>In <a href=\"https://github.com/leanprover-community/mathlib/issues/8004\">#8004</a>, <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> suggested to remove the <code>monoid</code>, <code>group</code>, and <code>ring</code> instances on <code>{ f : α → β | continuous f }</code>. The idea is that the corresponding instances on <code>continuous_map α β</code> should be used instead. But we would keep the fact that <code>{ f : α → β | continuous f }</code> is a sub[monoid, group, ring] of <code>α → β</code>, because this can't be expressed with the bundled <code>continuous_map</code>. Is there a good reason to keep them ?</p>\n<p>(cc <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> <span class=\"user-mention\" data-user-id=\"267205\">@Nicolò Cavalleri</span> )</p>",
        "id": 243272083,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1624141561
    },
    {
        "content": "<p>I can't help feeling those instances have a typo and should be spelt with <code>//</code> not <code>|</code></p>",
        "id": 243272281,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624141816
    },
    {
        "content": "<p>Because the current spelling just introduced an annoying <code>coe_sort ∘ set_of</code></p>",
        "id": 243272285,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624141840
    },
    {
        "content": "<p>I'm increasingly becoming of the opinion that it would actually be easier to handle bundled homs if <code>add_monoid_hom</code> were defeq to <code>subtype is_add_monoid_hom</code> because then you can reuse all sorts of results about subtypes, and  you can then prove things like <code>(unit →* unit) = (unit →+ unit)</code>!</p>",
        "id": 243272364,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624141968
    },
    {
        "content": "<p>I think the idea is that you need a set if you want to say <code>is_subgroup</code>, so it makes sense to state everything in term of the set</p>",
        "id": 243272367,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1624141971
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/instances.20on.20continuous.20subtype/near/243272364\">said</a>:</p>\n<blockquote>\n<p>I'm increasingly becoming of the opinion that it would actually be easier to handle bundled homs if <code>add_monoid_hom</code> were defeq to <code>subtype is_add_monoid_hom</code> because then you can reuse all sorts of results about subtypes.</p>\n</blockquote>\n<p>All of those <code>is_...</code> are deprecated anyway. The original goal of the PR was to remove them from this file</p>",
        "id": 243272421,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1624142053
    },
    {
        "content": "<p>I'm referring to a hypothetical non-class <code>is_add_monoid_hom</code> not the one that already exists</p>",
        "id": 243272449,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624142131
    },
    {
        "content": "<p>Oh okay, I see what you mean now. I'm not experimented enough to have an opinion on that, but I get your point.</p>",
        "id": 243272505,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1624142205
    },
    {
        "content": "<p>On the other hand \"this vestigial code bears a resemblance to a large refactor that <em>might</em> be a good idea\" isn't a particularly good argument to keep it around</p>",
        "id": 243272527,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624142256
    },
    {
        "content": "<p>Perhaps try making a follow-up PR to remove them all and see what if anything breaks?</p>",
        "id": 243272761,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624142623
    },
    {
        "content": "<p>The refactor in question is analogous to the one I'm attempting in <a href=\"https://github.com/leanprover-community/mathlib/issues/7834\">#7834</a> (except not for <code>continuous</code> but <code>measurable</code>), while the instances you're proposing be removed are analogous to the ones I'm proposing be added in <a href=\"https://github.com/leanprover-community/mathlib/issues/7833\">#7833</a></p>",
        "id": 243273652,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624144063
    },
    {
        "content": "<p>Wait I'm not sure to understand anymore <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> I thought you were talking about removing the unbundled and already deprecated algebraic typeclasses <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> <br>\nAlso, the idea is to remove them because they already exist for bundled <code>continuous_map</code>s, which are supposed to be used instead of <code>subtype continuous</code>, so your work on <code>subtype</code>s would only apply if we decided to switch back to <code>subtype continuous</code> &gt; <code>continuous_map</code>.</p>\n<p>I'm sorry if I'm misunderstanding something, which is possible since I'm not a native english speaker <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 243275401,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1624146634
    },
    {
        "content": "<p>Re: the original question --- I'm in favor of removing the instances. I think they predate meaningful development/usage of <code>continuous_map</code>.</p>",
        "id": 243277328,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1624149469
    },
    {
        "content": "<p>I am also in favor of removing them: I was proposing to tag them as deprecated in PR <a href=\"https://github.com/leanprover-community/mathlib/issues/7844\">#7844</a>, but then people did not want to do that because it had nothing to do with the rest of the PR</p>",
        "id": 243277600,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1624149873
    },
    {
        "content": "<p>I think Scott was thinking it was better to remove them one year ago but at the time <code>continuous_map</code> was just born and part of the library that is now written in terms of <code>continuous_map</code> was written with the subtype, so it was too early to do that if I recall correctly</p>",
        "id": 243277682,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1624149989
    }
]