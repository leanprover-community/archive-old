[
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset\">docs#multiset</a> seems to refer to <code>•ℕ</code> both as \"smul\" and \"nsmul\" - <code>card_smul</code>/<code>count_smul</code>/<code>prod_smul</code> vs <code>map_nsmul</code>/<code>mem_nsmul</code>. Should those be consistent?</p>",
        "id": 230576274,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1615923124
    },
    {
        "content": "<p>If it uses that symbol it should be called nsmul</p>",
        "id": 230577240,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1615923481
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nsmul_eq_smul\">docs#nsmul_eq_smul</a> relates the two</p>",
        "id": 230577321,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1615923498
    },
    {
        "content": "<p>Well, multiset isn't a nat semimodule I think</p>",
        "id": 230604959,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615934272
    },
    {
        "content": "<p>The <code>*_smul</code> lemmas date back before the <code>\\N</code> was part of the syntax</p>",
        "id": 230605063,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615934329
    },
    {
        "content": "<p>I'd personally be okay with calling it all <code>smul</code> since there is no disambiguation to be had</p>",
        "id": 230605100,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615934353
    },
    {
        "content": "<blockquote>\n<p>Well, multiset isn't a nat semimodule I think</p>\n</blockquote>\n<p>It's an additive commutative monoid, so it is a nat semimodule.</p>",
        "id": 230605356,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1615934449
    },
    {
        "content": "<p>Ah. Well I think it shouldn't be, re: <a href=\"#narrow/stream/113488-general/topic/finsupp.2Ehas_scalar/near/230579612\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/finsupp.2Ehas_scalar/near/230579612</a></p>",
        "id": 230605983,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615934819
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/multiset.3A.20smul.20vs.20nsmul/near/230605100\">said</a>:</p>\n<blockquote>\n<p>I'd personally be okay with calling it all <code>smul</code> since there is no disambiguation to be had</p>\n</blockquote>\n<p><code>smul</code> and <code>nsmul</code> are only defeq if you're using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_monoid_hom.nat_semimodule\">docs#add_monoid_hom.nat_semimodule</a>. If you're using any other module structure, you need <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nsmul_eq_smul\">docs#nsmul_eq_smul</a> to rewrite between them. The chance of the user finding that lemma is a lot lower if we call <code>•ℕ</code> <code>smul</code> elsewhere.</p>",
        "id": 230706576,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1615994051
    }
]