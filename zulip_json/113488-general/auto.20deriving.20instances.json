[
    {
        "content": "<p>Is there a quick way to derive instances for type definitions like <code>def boolean : Type := bool</code>?</p>",
        "id": 127688095,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1528334411
    },
    {
        "content": "<p>don't use them :)</p>",
        "id": 127688100,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1528334440
    },
    {
        "content": "<p>I feel type synonym is useful in development.</p>",
        "id": 127688156,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1528334574
    },
    {
        "content": "<p>pretty sure you can't find it anywhere in mathlib</p>",
        "id": 127688161,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1528334589
    },
    {
        "content": "<p>If you mark your definition as reducible, I think, the instances will simply be inherited</p>",
        "id": 127688204,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528334647
    },
    {
        "content": "<p>Otherwise, you can do </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">my_class</span> <span class=\"n\">some_synonym</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">some_synonym</span><span class=\"o\">]</span> <span class=\"bp\">;</span> <span class=\"n\">apply_instance</span>\n</pre></div>",
        "id": 127688215,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1528334700
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> very nice, sir.</p>",
        "id": 127688285,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1528334842
    }
]