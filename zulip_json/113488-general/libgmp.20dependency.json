[
    {
        "content": "<p>I know on macOS you have to install <code>libgmp</code> before Lean will work. Does anyone know if there is a similar requirement on linux? (There doesn't appear to be on Windows.)</p>",
        "id": 134657745,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1537952878
    },
    {
        "content": "<p>The toolchains installed by elan contain static binaries, which I find a bit surprising, but should mean you don't need libgmp. However all the machines I have lean on also have libgmp installed anyways, so no definitive proof.</p>",
        "id": 134671562,
        "sender_full_name": "Reid Barton",
        "timestamp": 1537966673
    },
    {
        "content": "<p>Yes, on Linux it's definitely a static binary. I'm not even sure why it's not on macOS</p>",
        "id": 134685427,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1537977515
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span>, is the libgmp dependency on OS X something that could be fixed? (In elan?) I don't really know about these static/dynamic library issues. Given a pointer to something to look I could try to sort it out.</p>",
        "id": 161995302,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1553809245
    },
    {
        "content": "<p>Helping out students, I see how valuable it would be to get a \"no command line necessary\" install procedure, and I think <code>libgmp</code> is one of the last obstacles. (On OS X one currently needs <code>brew install coreutils</code> to get <code>greadlink</code>, but there are various ways to get around this: <a href=\"https://stackoverflow.com/questions/1055671/how-can-i-get-the-behavior-of-gnus-readlink-f-on-a-mac\" target=\"_blank\" title=\"https://stackoverflow.com/questions/1055671/how-can-i-get-the-behavior-of-gnus-readlink-f-on-a-mac\">https://stackoverflow.com/questions/1055671/how-can-i-get-the-behavior-of-gnus-readlink-f-on-a-mac</a>)</p>",
        "id": 161995305,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1553809250
    },
    {
        "content": "<p>For reference, the error message my students have been getting (on OS X) is:</p>",
        "id": 162000128,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1553813550
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>dyld: Library not loaded: /usr/local/opt/gmp/lib/libgmp.10.dylib\n  Referenced from: /Users/ZZZ/.elan/toolchains/nightly-2019-01-13/bin/lean\n  Reason: image not found\n</pre></div>",
        "id": 162000143,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1553813567
    },
    {
        "content": "<p>(this is of course fixable with <code>brew install gmp</code>, but the point is to avoid this if possible)</p>",
        "id": 162001005,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1553814407
    },
    {
        "content": "<p>I have not taken the time to try to fully understand the build system, nor have I ever used CMake for anything, so I can't point exactly to where the distinction between the operating systems is made given default settings, but I did try a mac build (on your machine scott) forcing the static option on. However, I get a whole bunch of</p>\n<div class=\"codehilite\"><pre><span></span>ld: library not found for -lcrt0.o\nclang: error: linker command failed with exit code 1\n</pre></div>\n\n\n<p>which looked like a solvable problem (the crt0 has to by lying around somewhere!, I thought). But alas, there is this:<br>\n<a href=\"https://stackoverflow.com/questions/3801011/ld-library-not-found-for-lcrt0-o-on-osx-10-6-with-gcc-clang-static-flag\" target=\"_blank\" title=\"https://stackoverflow.com/questions/3801011/ld-library-not-found-for-lcrt0-o-on-osx-10-6-with-gcc-clang-static-flag\">https://stackoverflow.com/questions/3801011/ld-library-not-found-for-lcrt0-o-on-osx-10-6-with-gcc-clang-static-flag</a><br>\nApparently, apple refuses to provide statically linked <code>libSystem.dylib</code>, so you'd have to build it yourself...</p>\n<p>This is all to say that you can't just be lazy and pass <code>-static</code> and compile with gcc or clang to fix the problem.</p>",
        "id": 162169142,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1554029955
    },
    {
        "content": "<p>On the other hand, I manually patched out the references to the dynamic library <code>libgmp.dylib</code> in the generated CMakeFiles and compiled, and everything worked fine... Here's a link to the zip for macos that was built:</p>",
        "id": 162169208,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1554030025
    },
    {
        "content": "<p><a href=\"https://github.com/khoek/klean/releases/download/macos-static/lean-3.4.2-darwin.zip\" target=\"_blank\" title=\"https://github.com/khoek/klean/releases/download/macos-static/lean-3.4.2-darwin.zip\">https://github.com/khoek/klean/releases/download/macos-static/lean-3.4.2-darwin.zip</a></p>\n<p>I'd be really good to know if it works (i.e. doesn't need libgmp.dylib)---I'm pretty sure it doesn't but I don't actually have a mac.<br>\n(If this works, it's obviously unsatisfactory, but it's proof the build system could probably be fixed/improved easily by someone who understood it.)</p>",
        "id": 162169299,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1554030242
    },
    {
        "content": "<p>On the other hand, I'm pretty sure the dynamic loader would look in the directory where the executable is for missing shared libraries, so if <code>elan</code> just popped a copy of <code>libgmp.10.dylib</code> in the <code>bin</code> directory of an extracted release I think we'd be okay too?</p>",
        "id": 162169351,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1554030301
    },
    {
        "content": "<p>re: the last point, <code>cp /usr/local/opt/gmp/lib/libgmp.10.dylib /Users/scott/.elan/bin/</code> doesn't help</p>",
        "id": 162170001,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554031418
    },
    {
        "content": "<p>and yes, your statically linked binary really works, (when normal lean doesn't, complaining</p>\n<div class=\"codehilite\"><pre><span></span>dyld: Library not loaded: /usr/local/opt/gmp/lib/libgmp.10.dylib\n  Referenced from: /Users/scott/.elan/toolchains/stable/bin/lean\n  Reason: image not found\nAbort trap: 6\n</pre></div>",
        "id": 162170123,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554031582
    },
    {
        "content": "<p>Your last snipped confused me, presumably you hid <code>/usr/local/opt/gmp/lib/libgmp.10.dylib</code> before test-invoking <code>bin/lean</code>?</p>",
        "id": 162172927,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1554036289
    }
]