[
    {
        "content": "<p>I've found myself using <code>subalgebra</code> in the past, but was surprised to find that the docs don't reveal any <code>has_coe_to_sort</code> instance! Is there an easy way to ask lean how it found the instance?</p>",
        "id": 217019178,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1605627705
    },
    {
        "content": "<p>One can start investigating this sort of thing like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.algebra.subalgebra</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">R</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">let</span> <span class=\"n\">ZZZ</span> <span class=\"o\">:</span> <span class=\"n\">has_coe_to_sort</span> <span class=\"o\">(</span><span class=\"n\">subalgebra</span> <span class=\"n\">R</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">apply_instance</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 217021408,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605628620
    },
    {
        "content": "<p>The infoview says that <code>ZZZ := coe_sort_trans</code> and clicking on that tells us that <code>submodule.has_coe_to_sort</code> exists and etc. Is this enough clues?</p>",
        "id": 217021585,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605628689
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/coe_sort_trans\">docs#coe_sort_trans</a> is almost certainly what I wanted to find, thanks!</p>",
        "id": 217023005,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1605629281
    },
    {
        "content": "<p>And using <code>let</code> sounds like a good trick to remember.</p>",
        "id": 217023130,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1605629329
    }
]