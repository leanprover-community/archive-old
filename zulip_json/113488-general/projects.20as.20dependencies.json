[
    {
        "content": "<p>how do i make 'leanprover/super', which i have downloaded, one of the dependencies of my file? i'm using VSCode.</p>",
        "id": 257867145,
        "sender_full_name": "Jared green",
        "timestamp": 1634423800
    },
    {
        "content": "<p><code>leanpkg add &lt;url&gt; [branch]</code> is probably what you're looking for.</p>",
        "id": 257877856,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634435189
    },
    {
        "content": "<p>my file isnt on github.</p>",
        "id": 257885112,
        "sender_full_name": "Jared green",
        "timestamp": 1634443019
    },
    {
        "content": "<p>But your dependency is. The url should be the url of the git repository you want to depend on.</p>",
        "id": 257886286,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634444258
    },
    {
        "content": "<p>what does 'branch' refer to?</p>",
        "id": 257886350,
        "sender_full_name": "Jared green",
        "timestamp": 1634444311
    },
    {
        "content": "<p>It's optional; typically you just want the <code>master</code> branch, in which case you can just leave it off.</p>",
        "id": 257886426,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634444403
    },
    {
        "content": "<p>how do i link it to my file, specifically?</p>",
        "id": 257886484,
        "sender_full_name": "Jared green",
        "timestamp": 1634444458
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"394803\">@Jared green</span> individual Lean files can't have dependencies. So you want to start your own new project, and add <code>super</code> as dependency to that project.</p>",
        "id": 257892540,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634451036
    },
    {
        "content": "<p>i have had to port super2 to the version of lean i am using.(both super and super2 are incompatible, and super had an error i couldnt fix at all) in my version of lean, by_contradiction expects a 'name' as input. at lines 150-159 of prover.lean, (nothing else of consequence has changed) i gave 'better_contradiction' the input type 'option name', then gave 'none' to its only call. it type checks, but i'm pretty sure its wrong. im addressing Gabriel Ebner: what did better_contradiction do, and is the call to tactic.by_contradiction absolutely necessary?</p>",
        "id": 258624243,
        "sender_full_name": "Jared green",
        "timestamp": 1634853721
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> ^</p>",
        "id": 258626128,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634854721
    },
    {
        "content": "<p>super2 is a half-finished rewrite of super, but I've given up on any further work in Lean 3 due to performance issues.  It should still be able to do some easy stuff.  I've updated super2 to Lean 3.34 now.</p>",
        "id": 258671949,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1634886454
    }
]