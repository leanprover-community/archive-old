[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">category_theory.preadditive</span>\n<span class=\"kn\">import</span> <span class=\"n\">category_theory.abelian.projective</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic.interval_cases</span>\n\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">category_theory</span>\n<span class=\"kn\">open</span> <span class=\"n\">category_theory.limits</span>\n\n<span class=\"kd\">universe</span> <span class=\"kd\">variables</span> <span class=\"n\">v</span> <span class=\"n\">u</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">category_theory</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">category.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">C</span><span class=\"o\">]</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span> <span class=\"bp\">→</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"mi\">0</span> <span class=\"bp\">⟶</span> <span class=\"n\">F</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"mi\">1</span> <span class=\"bp\">⟶</span> <span class=\"n\">F</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"mi\">2</span> <span class=\"bp\">⟶</span> <span class=\"n\">F</span> <span class=\"mi\">3</span><span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">fin4_functor_mk</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">map</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hij</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span><span class=\"o\">),</span> <span class=\"n\">F</span> <span class=\"n\">i</span> <span class=\"bp\">⟶</span> <span class=\"n\">F</span> <span class=\"n\">j</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">b</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">c</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">≫</span> <span class=\"n\">b</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">b</span> <span class=\"bp\">≫</span> <span class=\"n\">c</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">≫</span> <span class=\"n\">b</span> <span class=\"bp\">≫</span> <span class=\"n\">c</span>\n<span class=\"c1\">-- how do I tell Lean that I'm done?</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">fin4_functor_mk</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">fin4_functor_mk</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span> <span class=\"bp\">⥤</span> <span class=\"n\">C</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">obj</span> <span class=\"o\">:=</span> <span class=\"n\">F</span><span class=\"o\">,</span>\n  <span class=\"n\">map</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">map_id'</span> <span class=\"o\">:=</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">map_comp'</span> <span class=\"o\">:=</span> <span class=\"n\">_</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">category_theory</span>\n</code></pre></div>",
        "id": 254204441,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632230035
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">map</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hij</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span><span class=\"o\">),</span> <span class=\"n\">F</span> <span class=\"n\">i</span> <span class=\"bp\">⟶</span> <span class=\"n\">F</span> <span class=\"n\">j</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">b</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">c</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">≫</span> <span class=\"n\">b</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">b</span> <span class=\"bp\">≫</span> <span class=\"n\">c</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">≫</span> <span class=\"n\">b</span> <span class=\"bp\">≫</span> <span class=\"n\">c</span>\n<span class=\"c1\">-- oh boy</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">false.elim</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span> <span class=\"o\">[</span><span class=\"n\">subtype.coe_le_coe.mpr</span> <span class=\"n\">h</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">false.elim</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span> <span class=\"o\">[</span><span class=\"n\">subtype.coe_le_coe.mpr</span> <span class=\"n\">h</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">false.elim</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span> <span class=\"o\">[</span><span class=\"n\">subtype.coe_le_coe.mpr</span> <span class=\"n\">h</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">false.elim</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span> <span class=\"o\">[</span><span class=\"n\">subtype.coe_le_coe.mpr</span> <span class=\"n\">h</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">false.elim</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span> <span class=\"o\">[</span><span class=\"n\">subtype.coe_le_coe.mpr</span> <span class=\"n\">h</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">false.elim</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span> <span class=\"o\">[</span><span class=\"n\">subtype.coe_le_coe.mpr</span> <span class=\"n\">h</span><span class=\"o\">]</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">false.elim</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">false.elim</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">false.elim</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">false.elim</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">false.elim</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span>\n</code></pre></div>",
        "id": 254207448,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632231277
    },
    {
        "content": "<p>Not exactly satisfying</p>",
        "id": 254207608,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632231360
    },
    {
        "content": "<p>MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">true</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n<span class=\"c1\">-- non-exhaustive match, the following cases are missing:</span>\n<span class=\"c1\">-- _example (nat.succ _).succ _</span>\n</code></pre></div>\n<p>I'm not sure this is a job for the equation compiler?</p>",
        "id": 254208154,
        "sender_full_name": "David Wärn",
        "timestamp": 1632231593
    },
    {
        "content": "<p>This is what I have now:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">map'</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hij</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span><span class=\"o\">),</span> <span class=\"n\">F</span> <span class=\"n\">i</span> <span class=\"bp\">⟶</span> <span class=\"n\">F</span> <span class=\"n\">j</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">b</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">c</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">≫</span> <span class=\"n\">b</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">b</span> <span class=\"bp\">≫</span> <span class=\"n\">c</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">≫</span> <span class=\"n\">b</span> <span class=\"bp\">≫</span> <span class=\"n\">c</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"bp\">+</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">hi</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"o\">⟨</span><span class=\"n\">j</span><span class=\"bp\">+</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">hj</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">H</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">H</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">H</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 254208832,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632231849
    },
    {
        "content": "<p>Accompanied by</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">map'_id</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">),</span> <span class=\"n\">map'</span> <span class=\"n\">F</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">i</span> <span class=\"n\">i</span> <span class=\"n\">le_rfl</span> <span class=\"bp\">=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"bp\">+</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">hi</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">map'_comp</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hij</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hjk</span> <span class=\"o\">:</span> <span class=\"n\">j</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span><span class=\"o\">),</span>\n  <span class=\"n\">map'</span> <span class=\"n\">F</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"n\">hij</span> <span class=\"bp\">≫</span> <span class=\"n\">map'</span> <span class=\"n\">F</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">j</span> <span class=\"n\">k</span> <span class=\"n\">hjk</span> <span class=\"bp\">=</span> <span class=\"n\">map'</span> <span class=\"n\">F</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">i</span> <span class=\"n\">k</span> <span class=\"o\">(</span><span class=\"n\">hij.trans</span> <span class=\"n\">hjk</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">k</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">category.id_comp</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">k</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">category.id_comp</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">k</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">category.id_comp</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"n\">i</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">category.comp_id</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"n\">i</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">category.comp_id</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"n\">i</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">category.comp_id</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">category.assoc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"bp\">+</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">hi</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"o\">⟨</span><span class=\"n\">j</span><span class=\"bp\">+</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">hj</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">⟨</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">4</span><span class=\"o\">,</span><span class=\"n\">hk</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">hk</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">H</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">H</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">H</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">H</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">H</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"n\">hi</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"n\">hj</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"n\">H</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">dec_trivial</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 254208893,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632231874
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130377\">David Wärn</span> <a href=\"#narrow/stream/113488-general/topic/equation.20compiler.20help.20me.20plz/near/254208154\">said</a>:</p>\n<blockquote>\n<p>MWE:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">true</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n<span class=\"c1\">-- non-exhaustive match, the following cases are missing:</span>\n<span class=\"c1\">-- _example (nat.succ _).succ _</span>\n</code></pre></div>\n<p>I'm not sure this is a job for the equation compiler?</p>\n</blockquote>\n<p>For this specific case I feel like it should be, since the proof is simply by-cases:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">true</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n<span class=\"c1\">-- there is no `h` that can fill this gap, but we still have to case it ourselves</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">nat.less_than_or_equal.step</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">false.elim</span> <span class=\"bp\">$</span> <span class=\"k\">match</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 254208965,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632231915
    },
    {
        "content": "<p>Note that this one works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">true</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n</code></pre></div>",
        "id": 254209829,
        "sender_full_name": "David Wärn",
        "timestamp": 1632232298
    },
    {
        "content": "<p>I mean using <code>exfalso</code> like this makes sense, but I'm curious about which absurd patterns the equation compiler can spot on its own</p>",
        "id": 254210267,
        "sender_full_name": "David Wärn",
        "timestamp": 1632232472
    },
    {
        "content": "<p>Surely when your goal is a Prop you don't have to do this manual case-splitting, there should be some short tactic script which does it for you</p>",
        "id": 254210378,
        "sender_full_name": "David Wärn",
        "timestamp": 1632232516
    },
    {
        "content": "<p>When the goal is a prop there is <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#fin_cases\">tactic#fin_cases</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#interval_cases\">tactic#interval_cases</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">true</span><span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">intros</span> <span class=\"n\">n</span> <span class=\"n\">hn</span><span class=\"o\">,</span>\n<span class=\"n\">interval_cases</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>Johan's map' isn't a Prop though, but I guess map'_comp is?</p>",
        "id": 254213278,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1632233521
    },
    {
        "content": "<p>Aah, so I could use <code>fin_cases</code> for <code>map'_comp</code>.</p>",
        "id": 254213588,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632233638
    },
    {
        "content": "<p>Btw <a href=\"https://github.com/leanprover-community/mathlib/issues/7987\">#7987</a> will buff <code>fin_cases</code> by allowing it to work for <code>fin n</code> (and other stuff you can think of).</p>",
        "id": 254214510,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632233965
    },
    {
        "content": "<p>Doesn't it already work for <code>fin n</code>?</p>",
        "id": 254217019,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632234818
    },
    {
        "content": "<p>I think not? At least I'm adding the stuff that's needed for it, but it already works using something else?</p>",
        "id": 254218101,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632235229
    },
    {
        "content": "<p>The tests for <code>fin_cases</code> says it works on <code>fin n</code>. In fact, the reason it's called <code>fin_cases</code> is the initial implementation <em>only</em> worked on <code>fin n</code>, rather than most finite stuff.</p>",
        "id": 254292546,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632266387
    },
    {
        "content": "<p>Regarding the restriction that the target is <code>Prop</code>: we can easily drop this by allowing the tactics to be nonconstructive, and I think we should do this.</p>",
        "id": 254292632,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632266427
    },
    {
        "content": "<p>Anytime you get a \"can only eliminate into Prop\" error, you always have the option of calling <code>nonempty.some</code> first:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">noncomputable</span> <span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h0</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"c1\">-- Fails with `induction tactic failed, recursor 'or.dcases_on' can only eliminate into Prop`:</span>\n  <span class=\"c1\">-- fin_cases p,</span>\n\n  <span class=\"c1\">-- So try harder:</span>\n  <span class=\"n\">apply</span> <span class=\"n\">nonempty.some</span><span class=\"o\">,</span>\n  <span class=\"n\">fin_cases</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"n\">assumption</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 254292881,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632266607
    },
    {
        "content": "<p>Given how resolutely classical mathlib is at this point, I think there's little point in our tactics being cautious about this.</p>",
        "id": 254292915,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632266636
    },
    {
        "content": "<p>(We could also try to make <code>fin_cases</code> work constructively!)</p>",
        "id": 254293006,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632266679
    },
    {
        "content": "<p>I don't know whether this technique is advisable in all circumstances, but it works here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">map_aux</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hi</span> <span class=\"o\">:</span> <span class=\"n\">to_bool</span> <span class=\"o\">(</span><span class=\"n\">i.1</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">4</span> <span class=\"bp\">∧</span> <span class=\"n\">j.1</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">4</span> <span class=\"bp\">∧</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span><span class=\"o\">)),</span> <span class=\"n\">F</span> <span class=\"n\">i</span> <span class=\"bp\">⟶</span> <span class=\"n\">F</span> <span class=\"n\">j</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">b</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">c</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">≫</span> <span class=\"n\">b</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">b</span> <span class=\"bp\">≫</span> <span class=\"n\">c</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">≫</span> <span class=\"n\">b</span> <span class=\"bp\">≫</span> <span class=\"n\">c</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hij</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"n\">i</span> <span class=\"bp\">⟶</span> <span class=\"n\">F</span> <span class=\"n\">j</span> <span class=\"o\">:=</span>\n<span class=\"n\">map_aux</span> <span class=\"n\">F</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">(</span><span class=\"n\">to_bool_tt</span> <span class=\"o\">⟨</span><span class=\"n\">i.2</span><span class=\"o\">,</span> <span class=\"n\">j.2</span><span class=\"o\">,</span> <span class=\"n\">hij</span><span class=\"o\">⟩)</span>\n</code></pre></div>",
        "id": 254297544,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632269902
    },
    {
        "content": "<p>or</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hij</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"n\">i</span> <span class=\"bp\">⟶</span> <span class=\"n\">F</span> <span class=\"n\">j</span> <span class=\"o\">:=</span>\n<span class=\"k\">match</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">to_bool_tt</span> <span class=\"o\">(⟨</span><span class=\"n\">i.2</span><span class=\"o\">,</span> <span class=\"n\">j.2</span><span class=\"o\">,</span> <span class=\"n\">hij</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"n\">i.1</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">4</span> <span class=\"bp\">∧</span> <span class=\"n\">j.1</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">4</span> <span class=\"bp\">∧</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"k\">with</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">𝟙</span> <span class=\"n\">_</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">b</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">c</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">≫</span> <span class=\"n\">b</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">b</span> <span class=\"bp\">≫</span> <span class=\"n\">c</span>\n<span class=\"bp\">|</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">≫</span> <span class=\"n\">b</span> <span class=\"bp\">≫</span> <span class=\"n\">c</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 254297653,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632269992
    },
    {
        "content": "<p>That's pretty cool, I had no idea about this <code>to_bool</code> method!</p>",
        "id": 254306560,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632277780
    },
    {
        "content": "<p>Oh whoops. I guess I broke it all before fixing it <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 254320791,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632291930
    }
]