[
    {
        "content": "<p>Hi, I've been trying challenges from this page <a href=\"https://github.com/kbuzzard/xena/blob/master/Maths_Challenges/README.md\">https://github.com/kbuzzard/xena/blob/master/Maths_Challenges/README.md</a> and I was unable to finish challenge 5, so I decided to check out the solution, but it appears that Lean doesn't recognize that solution as valid: it complains that that the two expressions are not definitionally equal. How should this one be solved then? I'm having trouble transforming d.succ into d+1.</p>",
        "id": 250941953,
        "sender_full_name": "Wojtek Wawr贸w",
        "timestamp": 1630075446
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.succ_eq_add_one\">docs#nat.succ_eq_add_one</a></p>",
        "id": 250942512,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1630075670
    },
    {
        "content": "<p><code>d.succ</code> is definitionally equal to <code>d+1</code>, if I look at the solution the real issue is that some of the items aren't in the correct order</p>",
        "id": 250943418,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1630075976
    },
    {
        "content": "<p>you should change the <code>change</code> so that things are in the exact order as before</p>",
        "id": 250943505,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1630076010
    },
    {
        "content": "<p>Huh ok, I see</p>",
        "id": 250943554,
        "sender_full_name": "Wojtek Wawr贸w",
        "timestamp": 1630076033
    },
    {
        "content": "<p>It also seems challenge 8 is completely broken...</p>",
        "id": 250946498,
        "sender_full_name": "Wojtek Wawr贸w",
        "timestamp": 1630077196
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312947\">@Wojtek Wawr贸w</span> <code>finset.sum_range_succ</code> was renamed to <code>finset.sum_range_succ_comm</code> five months ago, and <code>finset.sum_range_succ</code> got a new meaning.</p>",
        "id": 250950791,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1630079001
    },
    {
        "content": "<p>For challenge 8's solution, add <code>import algebra.group.basic</code> to the top.</p>",
        "id": 250951067,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1630079152
    },
    {
        "content": "<p>This phenomenon is known as \"bit rot\" -- code seems to slowly decay over time.  It happens particularly quickly for code that uses but isn't part of mathlib.</p>",
        "id": 250951573,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1630079382
    },
    {
        "content": "<p>Thanks! I can try and update the challenges</p>",
        "id": 250964788,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630085020
    },
    {
        "content": "<p>The solution is known, you can put them in a proper Lean project on GitHub if they aren't already and setup to update bot, as explained at <a href=\"https://leanprover-community.github.io/ci.html\">https://leanprover-community.github.io/ci.html</a></p>",
        "id": 250968190,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1630086482
    },
    {
        "content": "<p>Heh, I wrote those challenges a very long time ago :-) The solution is known <em>now</em>...</p>",
        "id": 250990580,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630095974
    }
]