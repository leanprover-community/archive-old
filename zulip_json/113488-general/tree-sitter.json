[
    {
        "content": "<p>In case it's not already on the radar... tree-sitter (<a href=\"https://tree-sitter.github.io/tree-sitter/\">https://tree-sitter.github.io/tree-sitter/</a> -- a nice incremental parsing library with lots of nice editor integrations) looks like it has some folks who put together an Agda parser: <a href=\"https://github.com/tree-sitter/tree-sitter-agda\">https://github.com/tree-sitter/tree-sitter-agda</a> -- perhaps that's interesting to have some day for lean (4)?</p>",
        "id": 221264341,
        "sender_full_name": "Julian Berman",
        "timestamp": 1609382104
    },
    {
        "content": "<p>One cool reason to do this is that tree-sitter grammars are used for <a href=\"https://github.com/github/semantic\">https://github.com/github/semantic</a> which is what gives the cool jump to definition/references feature you can see on github python repos. Having this for lean would be awesome, but of course a long way away</p>",
        "id": 221264523,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1609382382
    },
    {
        "content": "<p>I wrote tree-sitter grammars for mm0 and mm1 to try some stuff out; it's not too bad if you have something like an EBNF spec for the grammar.</p>",
        "id": 221266361,
        "sender_full_name": "Chris B",
        "timestamp": 1609385227
    },
    {
        "content": "<p>I think you kind of need the people doing the editor support on board though. If they already have their own model/abstractions for building and working on the AST, they probably won't want to graft the tree-sitter one on as a totally separate thing.</p>",
        "id": 221266610,
        "sender_full_name": "Chris B",
        "timestamp": 1609385624
    },
    {
        "content": "<p>That's what re-reminded me to mention tree-sitter yeah (I was about to fix a syntax issue in lean.vim and wished I didn't have to :D)</p>",
        "id": 221266683,
        "sender_full_name": "Julian Berman",
        "timestamp": 1609385720
    },
    {
        "content": "<p>The in-progress Lean 4 server seems to be <a href=\"https://github.com/leanprover/lean4/tree/master/src/Lean/Server\">here</a>.</p>",
        "id": 221266901,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609386021
    },
    {
        "content": "<p>Isn't this going to be hard/impossible for Lean 4, because it has such an extremely flexible syntax? You basically need to be Lean 4 to be able to parse the code.</p>",
        "id": 221270744,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1609392200
    },
    {
        "content": "<p>I'm not sure how v4 actually handles user-declared syntax extensions. If they're initially parsed generically as something like \"user item\" according to a set of rules and elaborated later then it should be possible for outside parsers to produce a usable AST. If users are able to arbitrarily add entirely new rules to the grammar then you're probably right.</p>",
        "id": 221297201,
        "sender_full_name": "Chris B",
        "timestamp": 1609429202
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/tree-sitter/near/221270744\">said</a>:</p>\n<blockquote>\n<p>You basically need to be Lean 4 to be able to parse the code.</p>\n</blockquote>\n<p>This has already been true with Lean 3, custom syntax will just become more prevalent with Lean 4. The best you could probably do is to generate a tree-sitter grammar for a fixed set of syntax extensions. Whitespace sensitivity sounds like <a href=\"https://github.com/tree-sitter/tree-sitter/issues/219\">fun</a> though.</p>",
        "id": 221297609,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1609429667
    },
    {
        "content": "<p>I stubbornly tried to start doing this. What I have so far lives here: <a href=\"https://github.com/Julian/tree-sitter-lean\">https://github.com/Julian/tree-sitter-lean</a></p>\n<p>It's got many flaws, just trying to get a decent amount of coverage before doing any of the real difficult parts, but I can already use it for better syntax highlighting in my editor than what I had before.</p>",
        "id": 228135366,
        "sender_full_name": "Julian Berman",
        "timestamp": 1614524384
    }
]