[
    {
        "content": "<p>So starting yesterday afternoon, whenever I try to import a file from mathlib the lean server just hangs. Keeping the last messages from before I typed the last letter of the path.</p>\n<p>For example if I type \"import tactic\" I get \"invalid import: tacti\" with the server apparently not doing anything.<br>\nI've tried letting it sit for over 10 minutes, and if I restart lean sometimes the line counter at the bottom of the screen goes up, but even when that number goes back to 1 I don't get any messages from lean until I erase the import line.</p>\n<p>Anyone have any idea what's going on?</p>",
        "id": 250246945,
        "sender_full_name": "Christopher Upshaw",
        "timestamp": 1629594582
    },
    {
        "content": "<p>Welcome to the orange bar hell! This is pretty common for the Lean server to get hanged up like that. The solution is to get yourself a cache (the <code>.olean</code> files) which will set the server up straight again. You do that using <code>leanproject get-cache</code> (with an optional <code>--rev name_of_the_branch</code>) and restart the server.</p>",
        "id": 250248046,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1629596368
    },
    {
        "content": "<p>For some reason, this happens pretty often when you write imports. I'd suggest writing the new import commented out, and then uncomment it. That'll avoid the server seeing the in-between states.</p>",
        "id": 250248107,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1629596447
    },
    {
        "content": "<p>Hmm I did <code>leanproject get-cache</code> and its still hanging instead of importing linear_algebra.clifford_algebra.default. This used to work.</p>",
        "id": 250396637,
        "sender_full_name": "Christopher Upshaw",
        "timestamp": 1629745394
    },
    {
        "content": "<p>Huh, it looks like my leanpkg.toml got corrupted in some sort of very subtle way? So that leanproject was ignoring the mathlib dependency? Or something? Weird.</p>",
        "id": 250398582,
        "sender_full_name": "Christopher Upshaw",
        "timestamp": 1629746250
    },
    {
        "content": "<p>I'm pleased to hear someone else is looking at the clifford algebra stuff!</p>",
        "id": 250403120,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629748609
    },
    {
        "content": "<p>Are you working in mathlib itself or a project depending on mathlib?</p>",
        "id": 250403255,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629748677
    },
    {
        "content": "<p>Are you working in mathlib itself or a project depending on mathlib?</p>",
        "id": 250405110,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629749596
    },
    {
        "content": "<p>A project depending on mathlib.</p>\n<p>Now it at least doesn't hang, but instead I get \"invalid import: data.vector.basic<br>\nexcessive memory consumption detected at 'expression traversal' (potential solution: increase memory consumption threshold)\" Which is weird. This was working great until last week.</p>",
        "id": 250562905,
        "sender_full_name": "Christopher Upshaw",
        "timestamp": 1629847437
    },
    {
        "content": "<p>So remove the directory called <code>_target</code> and then type <code>leanproject up</code></p>",
        "id": 250565169,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1629849212
    },
    {
        "content": "<p>Or maybe <code>leanproject get-m</code> will help</p>",
        "id": 250565231,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1629849270
    }
]