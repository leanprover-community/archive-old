[
    {
        "content": "<p>Is there a tactic that will \"split\" an iff goal into two goals, the mp direction and the mpr direction?</p>",
        "id": 268620341,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1642635705
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#split\">tactic#split</a></p>",
        "id": 268620353,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1642635720
    },
    {
        "content": "<p>I thought that only works for conjuctions.</p>",
        "id": 268620409,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1642635735
    },
    {
        "content": "<p>It works though. Nice.</p>",
        "id": 268620472,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1642635811
    },
    {
        "content": "<p>(also this probably fits better in <a class=\"stream\" data-stream-id=\"217875\" href=\"/#narrow/stream/217875-Is-there-code-for-X.3F\">#Is there code for X?</a>, for future reference)</p>",
        "id": 268620572,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1642635888
    },
    {
        "content": "<p>By the way, is there a way of chaining iffs? Do I use transitivity?</p>",
        "id": 268620591,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1642635902
    },
    {
        "content": "<p>Most transitivity tactics should work, as will manually applying <a href=\"https://leanprover-community.github.io/mathlib_docs/find/iff.trans\">docs#iff.trans</a>. You can also use calc mode quite effectively for iffs sometimes <a href=\"https://leanprover-community.github.io/extras/calc.html\">https://leanprover-community.github.io/extras/calc.html</a></p>",
        "id": 268620706,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1642636006
    },
    {
        "content": "<p>I think if your goal is <code>A ↔ C</code> then <code>transitivity B</code> (<a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#transitivity\">tactic#transitivity</a>) will split the goal into <code>A ↔ B</code> and `B ↔ C|</p>",
        "id": 268620727,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1642636026
    },
    {
        "content": "<p>I think I'll use iff.trans. Thanks!</p>",
        "id": 268620847,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1642636126
    },
    {
        "content": "<p>I need a version of <code>funext_iff</code>, but for two argument functions. Is there such a thing?</p>",
        "id": 268621133,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1642636346
    },
    {
        "content": "<p>Hmm... or maybe I need to apply <code>funext_iff</code> twice.</p>",
        "id": 268621238,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1642636428
    },
    {
        "content": "<p>Ah, using <code>simp</code> did the trick.</p>",
        "id": 268621426,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1642636539
    }
]