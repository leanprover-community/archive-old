[
    {
        "content": "<p>How would people feel about a 1-symbol version of <code>by assumption</code>? I now often have hypotheses with unenlightening names <code>H1</code> ... <code>H5</code>, and these labels are all over the place in my proofs. But they don't really convey any information. I could use the french quotes to tell Lean the type, and it will start looking for a fitting assumption. But often I find that pretty verbose. Because usually, it's just an annoying proof obligation that we want to get rid of. How about <code>!</code>, or maybe the unicode <code>â€¦</code>?</p>",
        "id": 152620996,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1545944849
    },
    {
        "content": "<p>I can see you are tempted by the SSReflect cabalistic road...</p>",
        "id": 152621153,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545945032
    },
    {
        "content": "<p>I think this is part of what SSReflect <code>//</code> does</p>",
        "id": 152621161,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545945062
    },
    {
        "content": "<blockquote>\n<p>I can see you are tempted by the SSReflect cabalistic road...</p>\n</blockquote>\n<p>I know of a guild that doesn't write anything when it comes to these proof obligations... it's completely transparent to them.</p>",
        "id": 152621256,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1545945209
    },
    {
        "content": "<p>Great, let's have a transparent unicode character! Let's take the one we use in real world math papers.</p>",
        "id": 152621713,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545945809
    },
    {
        "content": "<p>I am not a huge fan of this being a mathlib standard. Maybe in your personal code, you can make your own <code>meta def</code>, and then when you PR, you can search and replace?</p>",
        "id": 152623829,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1545949027
    },
    {
        "content": "<p>Or a VSCode tab-completion when you start writing <code>by a</code></p>",
        "id": 152623896,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1545949156
    },
    {
        "content": "<p>If <code>H3</code> is uninformative, wouldn't <code>!</code> be even more uninformative?</p>",
        "id": 152626746,
        "sender_full_name": "Reid Barton",
        "timestamp": 1545954475
    },
    {
        "content": "<p>At least with <code>H3</code> the IDE will tell you the type</p>",
        "id": 152626787,
        "sender_full_name": "Reid Barton",
        "timestamp": 1545954514
    },
    {
        "content": "<p>After a bit more thought, maybe the most most user-friendly version (both for reading and writing) would be to have a VScode keyboard shortcut that looks at the type of the current <code>_</code> and replaces it with <code>\\f&lt; the_type \\f&gt;</code>. It really is a pity that we can't invoke hole commands on bare <code>_</code>. Otherwise a hole command would be perfect.</p>",
        "id": 152637610,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1545975502
    },
    {
        "content": "<p>a simple available compromise is <code>\\f&lt;_\\f&gt;</code></p>",
        "id": 152638100,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1545976574
    },
    {
        "content": "<p>I would also be happy if <code>\\f&lt;\\f&gt;</code> worked but I think that requires a bit more parsing magic</p>",
        "id": 152638105,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1545976607
    },
    {
        "content": "<blockquote>\n<p>After a bit more thought, maybe the most most user-friendly version (both for reading and writing) would be to have a VScode keyboard shortcut that looks at the type of the current <code>_</code> and replaces it with <code>\\f&lt; the_type \\f&gt;</code>. It really is a pity that we can't invoke hole commands on bare <code>_</code>. Otherwise a hole command would be perfect.</p>\n</blockquote>\n<p>I would agree with this. I imagine the VSCode extension could just replace the <code>_</code> with a <code>{! _ !}</code> and then invoke the hole command--we shouldn't be limited by Lean here.</p>",
        "id": 152638307,
        "sender_full_name": "Reid Barton",
        "timestamp": 1545976942
    },
    {
        "content": "<p>I would prefer it just replace the hole with a reference to the actual hypothesis</p>",
        "id": 152638439,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1545977175
    },
    {
        "content": "<p>Why not the <code>\\f&lt; the_type \\f&gt;</code> version? It is less \"Lean-explicit\" but it is a whole lot more \"math-explicit\".</p>",
        "id": 152638457,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1545977256
    }
]