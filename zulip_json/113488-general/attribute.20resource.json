[
    {
        "content": "<p>I just found out the hard way that <code>@[to_additive, simp]</code> doesn't attach the <code>simp</code> attribute to the to_additive-ised version of the lemma (I'm adding multiplicative versions of some additive lemmas in a branch and a random file broke); one has instead to do <code>[simp, to_additive]</code>. On the other hand there are several occurrences of <code>[to_additive, simp]</code> in mathlib (so other people also don't know this). Of course this sort of thing will be obvious to people who actually know how <code>to_additive</code> <em>works</em>, but for people like me, who just want to do stuff with valuations and don't have a clue about what is going on with attributes, it's hard to know where to look. In an unrelated PR Bhavik just told me to add <code>[simps]</code> to a lemma and of course I'll do this, but again I don't know where to look to find out what this actually <em>does</em> (I don't want to plough through commit messages or library notes or old Zulip messages really, this is quite inefficient). I'm wondering if it is getting to the point where we need one document explaining basic stuff about modern attributes and tricks for using them. How might I go about starting to write this?</p>",
        "id": 220571801,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608547864
    },
    {
        "content": "<p>This is all documented in algebra.group.to_additive, I now discover (I had no idea that <code>to_additive</code> was defined in <code>algebra.group</code> and I don't know how to discover this (right clicking on a <code>@[to_additive]</code> doesn't work). I still don't know how to look up documentation for <code>simps</code> -- if I did, I wouldn't be asking here.</p>",
        "id": 220572388,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608548370
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/5468\">#5468</a> (you can tell it's the end of term)</p>",
        "id": 220572980,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608548858
    },
    {
        "content": "<p>Along the way I was amused to note that <code>@[to_additive] lemma mul_equiv_of_localizations_right_inv</code> (about a right inverse function) is changed to <code>...right_neg</code> by <code>to_additive</code> :-)</p>",
        "id": 220573034,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608548895
    },
    {
        "content": "<p>Oh great, I just found <code>tactic/simps</code> (whilst looking for occurrences of the regex <code>to_additive[^\\]]</code>). OK so now the dust (and an unexpected PR) has settled, my revised observation is that it is hard to find documentation for attributes, unless I'm missing a trick. Attributes appear to have been carefully documented, but apparently we don't yet know if the documentation goes in <code>tactic</code> or <code>algebra</code>. Can we make right clicking on an attribute take us to the documentation for the attribute? I think that if this had happened I would never have opened this thread. If we can't, can we somehow solve this problem another way so I can naturally find a way to read about the intricacies of <code>@[to_additive]</code> or the explanation of what <code>@[simps]</code> means, without having to ask here?</p>",
        "id": 220574521,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608550260
    },
    {
        "content": "<p>Bug report -- <code>@[simp, norm_cast, to_additive]</code> doesn't attach the <code>norm_cast</code> attribute to the to_additivised lemma (this actually happens in e.g. <code>algebra/ordered_monoid</code>). <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> is this a one-line fix?</p>",
        "id": 220575043,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608550708
    },
    {
        "content": "<p>This is more confusing than I first imagined. <code>@[to_additive, priority 100] instance linear_ordered_comm_group.to_ordered_comm_group</code> seems to put the 100 priority on the additive instance even though it's after <code>to_additive</code>. Maybe this is a bit above my pay grade after all?</p>",
        "id": 220576448,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608551827
    },
    {
        "content": "<p><code>[to_additive, ext]</code> does not put the <code>ext</code> attribute on the additive lemma.</p>",
        "id": 220576620,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608551992
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/attributes.html#simps\">attr#simps</a></p>",
        "id": 220576705,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1608552039
    },
    {
        "content": "<p>I can't answer the other questions but I can show you that!</p>",
        "id": 220576718,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1608552057
    },
    {
        "content": "<p>Oh _great_! Thanks!</p>",
        "id": 220576738,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608552082
    },
    {
        "content": "<p><code>@[continuity, to_additive] continuous.mul</code> does not put the continuity attribute on <code>continuous.add</code> in <code>topology/algebra/monoid</code>. If there's a simple fix for these then I can add them to the PR.</p>",
        "id": 220578266,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608553521
    },
    {
        "content": "<p>I took a look at the norm_cast to additive thing, and I'm fairly sure its not a 1-line fix, or at the very least the \"obvious\" one line to fix isn't sufficient</p>",
        "id": 220578768,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1608554005
    },
    {
        "content": "<p>OK, I'll add <code>norm_cast</code> attributes where necessary.</p>",
        "id": 220579603,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608554700
    },
    {
        "content": "<p>To add some more detail, <code>norm_cast</code> and others are user attributes, and are more involved than the basic attributes like instance and simp. User attributes take parameters (in the case of norm cast this is whether it is an elim, squash or whatever) and currently the code does not even attempt to copy user attributes.</p>",
        "id": 220580215,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1608555175
    },
    {
        "content": "<p>Probably its only 20 lines to add this? I might give it a go later, but if anyone else wants to beat me to it go ahead <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 220580399,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1608555350
    },
    {
        "content": "<p>Also I noticed that norm_cast doesn't show up in the docs, I think that is because we need to update <a href=\"https://github.com/leanprover-community/doc-gen/blob/459e19a8f6ec6de8c2fe32d6543a08ac7ecba385/src/export_json.lean#L230\">https://github.com/leanprover-community/doc-gen/blob/459e19a8f6ec6de8c2fe32d6543a08ac7ecba385/src/export_json.lean#L230</a> . What else should we include there now? Continuity...?</p>",
        "id": 220582012,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1608556539
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/attributes.html#to_additive\">attr#to_additive</a> also has the answers to some of your questions, above \"Implementation notes\"</p>",
        "id": 220599160,
        "sender_full_name": "Reid Barton",
        "timestamp": 1608566690
    },
    {
        "content": "<p>I made <a href=\"https://github.com/leanprover-community/mathlib/issues/5487\">#5487</a> for this, lets see what breaks, comments welcome <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 220832734,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1608762229
    }
]