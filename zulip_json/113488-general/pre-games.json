[
    {
        "content": "<p>this is the definition of a pre-game in <code>set_theory/pgame</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">inductive</span> <span class=\"n\">pgame</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">mk</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">pgame</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">pgame</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">pgame</span>\n</code></pre></div>\n\n\n<p>Should <code>α</code> and <code>β</code> be interpreted as the moves Left and Right have? If so, what should I do if the moves Right has depends on what Left does?</p>",
        "id": 197657069,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589528683
    },
    {
        "content": "<p>That's a <code>dependent pgame</code> <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> <span aria-label=\"oops\" class=\"emoji emoji-1f643\" role=\"img\" title=\"oops\">:oops:</span></p>",
        "id": 197657110,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589528723
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> The joy of <code>alpha</code>s and <code>beta</code>s all over the library (-;</p>",
        "id": 197657196,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589528769
    },
    {
        "content": "<p>also, how overlapping would my work be if I wanted to formalize the Sprague–Grundy theorem?</p>",
        "id": 197657277,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589528857
    },
    {
        "content": "<blockquote>\n<p>what should I do if the moves Right has depends on what Left does?</p>\n</blockquote>\n<p>Does this make sense?</p>",
        "id": 197657400,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589528946
    },
    {
        "content": "<p>The idea of a Conway-like game is that it is a position but it doesn't come with a fixed concept of \"whose move it is\"</p>",
        "id": 197657476,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589528999
    },
    {
        "content": "<p>can it be both player's turn in the same pre-game? maybe this is the interpretation</p>",
        "id": 197657477,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589529000
    },
    {
        "content": "<p>aha, I didn't know that</p>",
        "id": 197657525,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589529008
    },
    {
        "content": "<p>Think of a chess position</p>",
        "id": 197657532,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589529014
    },
    {
        "content": "<p>But no indication of whose move it is</p>",
        "id": 197657541,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589529022
    },
    {
        "content": "<p>Alpha is the list of legal white moves, beta the list of legal black moves</p>",
        "id": 197657567,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589529038
    },
    {
        "content": "<p>ok, thanks</p>",
        "id": 197657589,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589529050
    },
    {
        "content": "<p>then I should really start by defining impartial games</p>",
        "id": 197657606,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589529064
    },
    {
        "content": "<p>Impartial games would make a nice addition. I don't know if <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> has already done something along these lines.</p>",
        "id": 197657623,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1589529080
    },
    {
        "content": "<p>I'm planning to make Nim a kata</p>",
        "id": 197657624,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589529081
    },
    {
        "content": "<p>like the one-heap Nim</p>",
        "id": 197657635,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589529089
    },
    {
        "content": "<p>Nice</p>",
        "id": 197657639,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589529091
    },
    {
        "content": "<p>To play dots and boxes you need to know about poker nim</p>",
        "id": 197657660,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589529113
    },
    {
        "content": "<p>Where you can add to a pile as well</p>",
        "id": 197657707,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589529125
    },
    {
        "content": "<p>I didn't ever do impartial games (that I can remember??)</p>",
        "id": 197675618,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1589540695
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> I think Kevin was just worried about maybe one of you guys have some private repo</p>",
        "id": 197675756,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589540789
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">inductive</span> <span class=\"n\">impartial_pgame</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">mk</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">impartial_pgame</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">impartial_pgame</span>\n\n<span class=\"n\">def</span> <span class=\"n\">impartial_pgame</span><span class=\"bp\">.</span><span class=\"n\">to_pgame</span> <span class=\"o\">:</span> <span class=\"n\">impartial_pgame</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"bp\">→</span> <span class=\"n\">pgame</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">impartial_pgame</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">α</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">to_pgame</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">to_pgame</span><span class=\"bp\">⟩</span>\n</code></pre></div>",
        "id": 197675770,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589540803
    }
]