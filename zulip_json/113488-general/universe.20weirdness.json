[
    {
        "content": "<p>I define a function twice using two different methods and the resulting definitions have slightly different types. </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">with_zero</span> <span class=\"o\">(</span><span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">option</span> <span class=\"n\">α</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">monad</span> <span class=\"n\">with_zero</span> <span class=\"o\">:=</span> <span class=\"n\">option</span><span class=\"bp\">.</span><span class=\"n\">monad</span>\n\n<span class=\"n\">def</span> <span class=\"n\">with_zero</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">with_zero</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">with_zero</span> <span class=\"n\">β</span> <span class=\"o\">:=</span> <span class=\"n\">functor</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"n\">f</span>\n<span class=\"n\">def</span> <span class=\"n\">with_zero</span><span class=\"bp\">.</span><span class=\"n\">map&#39;</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">with_zero</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">with_zero</span> <span class=\"n\">β</span> <span class=\"o\">:=</span> <span class=\"n\">option</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"n\">f</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"bp\">@</span><span class=\"n\">with_zero</span><span class=\"bp\">.</span><span class=\"n\">map</span>\n<span class=\"c1\">-- with_zero.map : Π {α β : Type u_1}, (α → β) → with_zero α → with_zero β</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"bp\">@</span><span class=\"n\">with_zero</span><span class=\"bp\">.</span><span class=\"n\">map&#39;</span>\n<span class=\"c1\">-- with_zero.map&#39; : Π {α : Type u_1} {β : Type u_2}, (α → β) → with_zero α → with_zero β</span>\n</pre></div>\n\n\n<p>In the <code>map</code> version, the universes of alpha and beta have magically become the same.</p>",
        "id": 161568131,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1553419291
    },
    {
        "content": "<p>When you use <code>Type*</code>, that's basically a universe metavariable <code>Type ?u</code>. It gets unified in the definition</p>",
        "id": 161568292,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1553419527
    },
    {
        "content": "<p>I had never understood that before.</p>",
        "id": 161568427,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1553419683
    },
    {
        "content": "<p>if you use <code>Type u</code> and <code>Type v</code> you will get an error on the first one</p>",
        "id": 161568571,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1553419883
    },
    {
        "content": "<p>this is why <code>Type*</code> is not used in core, in favor of explicit universes</p>",
        "id": 161568619,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1553419924
    },
    {
        "content": "<p>It's a bit more explicit but I think being able to almost completely forget about universes is more worthwhile</p>",
        "id": 161568623,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1553419962
    }
]