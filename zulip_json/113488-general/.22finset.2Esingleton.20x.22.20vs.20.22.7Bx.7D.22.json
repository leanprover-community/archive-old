[
    {
        "content": "<p>there are two ways to write the same finset. there's a simp lemma converting the latter to the former. however there are also many lemmas written using the latter instead of the former. so what is the standard?</p>",
        "id": 134833971,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538150001
    },
    {
        "content": "<p>I don't even know if it's a good idea to inherit the multiset singleton as <code>finset.singleton</code> to begin with. That means I don't see why there needs to be two traditions at all and we should just stick to {x}</p>",
        "id": 134834042,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538150066
    },
    {
        "content": "<p>also when there are two things that represent the same thing, don't we usually write two lemmas each time?</p>",
        "id": 134834160,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538150181
    },
    {
        "content": "<p>finset.singleton doesn't require decidable_eq</p>",
        "id": 134838973,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538155348
    },
    {
        "content": "<p>Is that the only reason?</p>",
        "id": 134839003,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1538155402
    },
    {
        "content": "<p>I think so... unfortunately root.singleton is a definition rather than a typeclass</p>",
        "id": 134839093,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538155504
    },
    {
        "content": "<p>it is also marginally faster to execute</p>",
        "id": 134839212,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538155648
    }
]