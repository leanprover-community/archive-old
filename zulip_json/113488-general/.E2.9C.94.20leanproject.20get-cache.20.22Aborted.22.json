[
    {
        "content": "<p>On gitpod, I seems to be getting a crash on unpacking the olean tarball:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>leanproject get-cache --rev 6834a24e53\n<span class=\"go\">Looking for mathlib oleans for 6834a24e53</span>\n<span class=\"go\">  locally...</span>\n<span class=\"go\">  Found local mathlib oleans</span>\n<span class=\"go\">Using matching cache</span>\n<span class=\"go\">Applying cache</span>\n<span class=\"go\">  files extracted: 1609 [00:04, 339.81/s]</span>\n\n<span class=\"go\">Aborted!</span>\n</code></pre></div>\n<p>The failure always happens on file 1609. Is anyone able to reproduce this?</p>",
        "id": 286331863,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1655374694
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>leanproject --version\n<span class=\"go\">leanproject, version 1.1.1</span>\n<span class=\"gp\">$ </span>/home/gitpod/.local/pipx/venvs/mathlibtools/bin/python --version\n<span class=\"go\">Python 3.8.10</span>\n</code></pre></div>",
        "id": 286331923,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1655374758
    },
    {
        "content": "<p>Seems to work for me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">gitpod</span> <span class=\"bp\">/</span><span class=\"n\">workspace</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"o\">(</span><span class=\"n\">master</span><span class=\"o\">)</span> <span class=\"bp\">$</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">cache</span> <span class=\"c1\">--rev 6834a24e53</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span> <span class=\"n\">for</span> <span class=\"mi\">6834</span><span class=\"n\">a24e53</span>\n  <span class=\"n\">locally...</span>\n  <span class=\"n\">Found</span> <span class=\"kn\">local</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Using</span> <span class=\"n\">matching</span> <span class=\"n\">cache</span>\n<span class=\"n\">Applying</span> <span class=\"n\">cache</span>\n  <span class=\"n\">files</span> <span class=\"n\">extracted</span><span class=\"o\">:</span> <span class=\"mi\">2481</span> <span class=\"o\">[</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">05</span><span class=\"o\">,</span> <span class=\"mi\">427</span><span class=\"bp\">.</span><span class=\"mi\">07</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 286332168,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1655374910
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> has marked this topic as resolved.</p>",
        "id": 286332244,
        "sender_full_name": "Notification Bot",
        "timestamp": 1655374946
    },
    {
        "content": "<p>Ah, I had an interrupted download locally it seems</p>",
        "id": 286332263,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1655374959
    },
    {
        "content": "<p>I guess we should improve the error message!</p>",
        "id": 286332270,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1655374967
    },
    {
        "content": "<p><code>leanproject --force-download get-cache</code> fixed it</p>",
        "id": 286332291,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1655374987
    },
    {
        "content": "<p>This happens to me if I download a cache, interrupt it while it's downloading (so I have half a copy of a cache), then use get-cache on the same rev: it uses the existing half copy rather than re-downloading it, and unsurprisingly fails to extract the half-cache I already have.</p>",
        "id": 286498133,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1655476635
    },
    {
        "content": "<p>I wonder if we can make leanproject detect when the cache is interrupted, and download it before needing to specify force-download</p>",
        "id": 286498185,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1655476662
    },
    {
        "content": "<p>Usually this is done like this: 1. download to a temporary location; 2. rename the downloaded file to the actual location. This way you're guaranteed to have only fully downloaded files there.</p>",
        "id": 286504918,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1655479624
    },
    {
        "content": "<p>IIRC I implemented that in leanproject a while ago. Maybe I'm thinking of something else.</p>",
        "id": 286508846,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1655481379
    },
    {
        "content": "<p>Yeah, <a href=\"https://github.com/leanprover-community/mathlib-tools/pull/104\">mathlib-tools#104</a></p>",
        "id": 286509230,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1655481566
    },
    {
        "content": "<p>So are you sure you are on a recent version of leanproject? :)</p>",
        "id": 286509449,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1655481643
    },
    {
        "content": "<p>Yes, I'm on 1.1.1 and was when I saw this behavior too</p>",
        "id": 286512763,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1655483201
    }
]