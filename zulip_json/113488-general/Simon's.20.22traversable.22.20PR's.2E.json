[
    {
        "content": "<p>What do these do? I can't understand anything :-(</p>",
        "id": 130402086,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1532688079
    },
    {
        "content": "<p>You can have a look at <a href=\"#narrow/stream/113488-general/topic/type.20class.20traversable\" title=\"#narrow/stream/113488-general/topic/type.20class.20traversable\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/type.20class.20traversable</a> but I fear this really CS and software engineering.</p>",
        "id": 130402632,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1532688912
    },
    {
        "content": "<p>I was also planning to ask after Simon will be done with his series of PR</p>",
        "id": 130402640,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1532688928
    },
    {
        "content": "<p>Oh so it's nothing to do with the \"transportable\" proving that if X is a perfectoid space and X equiv Y then Y is a perfectoid space?</p>",
        "id": 130402721,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1532689081
    },
    {
        "content": "<p>I think Simon mentioned a link at some point</p>",
        "id": 130402760,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1532689106
    },
    {
        "content": "<p>It's very much CS, though I wouldn't call it software engineering. If you're interested in references, see:<br>\n<a href=\"https://hackage.haskell.org/package/base/docs/Data-Traversable.html\" target=\"_blank\" title=\"https://hackage.haskell.org/package/base/docs/Data-Traversable.html\">https://hackage.haskell.org/package/base/docs/Data-Traversable.html</a></p>",
        "id": 130403363,
        "sender_full_name": "Sean Leather",
        "timestamp": 1532690045
    },
    {
        "content": "<p>I believe Simon is setting up infrastructure to simplify expression manipulation and, therefore, tactic writing.</p>",
        "id": 130403385,
        "sender_full_name": "Sean Leather",
        "timestamp": 1532690113
    },
    {
        "content": "<p>Aah thanks!</p>",
        "id": 130403955,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1532690932
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110045\">@Sean Leather</span> that's pretty much it. Plus, I think Lean should be like Haskell as a programming language and traversable should help with that.</p>\n<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Don't despair, <code>transportable</code> is still under development.</p>",
        "id": 130405496,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532692837
    },
    {
        "content": "<p>... and so is <code>mono</code>, if people still remember it</p>",
        "id": 130406943,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532694464
    }
]