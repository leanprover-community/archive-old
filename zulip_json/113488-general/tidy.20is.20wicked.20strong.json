[
    {
        "content": "<p>Kudos to Scott!</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"n\">LeftMod__has_ZeroObject</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">universal</span><span class=\"bp\">.</span><span class=\"n\">has_ZeroObject</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"bp\">-</span><span class=\"n\">Mod</span><span class=\"o\">)</span> <span class=\"n\">LeftMod_</span><span class=\"bp\">.</span><span class=\"n\">foo</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">zero_object</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">zero_object</span> <span class=\"o\">:=</span> <span class=\"n\">zero_module</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n  <span class=\"n\">is_initial</span>  <span class=\"o\">:=</span> <span class=\"bp\">⟨λ</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"bp\">-</span><span class=\"n\">Mod</span><span class=\"o\">,</span> <span class=\"bp\">⟨λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">is_linear_map</span><span class=\"bp\">.</span><span class=\"n\">map_zero</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"k\">begin</span>\n    <span class=\"n\">intros</span> <span class=\"n\">M</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n    <span class=\"n\">tidy</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">zero_is_star</span><span class=\"o\">,</span> <span class=\"n\">is_linear_map</span><span class=\"bp\">.</span><span class=\"n\">zero</span> <span class=\"n\">f_property</span><span class=\"o\">,</span> <span class=\"n\">is_linear_map</span><span class=\"bp\">.</span><span class=\"n\">zero</span> <span class=\"n\">g_property</span><span class=\"o\">]</span>\n  <span class=\"kn\">end</span> <span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">is_terminal</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">tidy</span>\n<span class=\"o\">}</span> <span class=\"o\">}</span>\n</pre></div>",
        "id": 130822631,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1533280027
    },
    {
        "content": "<p>I just told Lean the definition of the zero-module. And it figured out on its own that it is the terminal object in the category of left modules!<br>\nMind you: I wrote only 1 <code>rfl</code>-lemma to help it:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">zero_is_star</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">zero_module</span> <span class=\"n\">R</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">star</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</pre></div>",
        "id": 130822638,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1533280064
    },
    {
        "content": "<p>It needs a bit of hand-holding for the initial object, but I guess this is only because <code>is_linear_map</code> is not a class.</p>",
        "id": 130822683,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1533280093
    },
    {
        "content": "<p>Long live <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>! Blacksmith of hammer tactics!</p>",
        "id": 130822696,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1533280183
    },
    {
        "content": "<p>Ooh, and <code>obviously</code> also does the job.</p>",
        "id": 130824101,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1533282722
    },
    {
        "content": "<p>It's slowly dawning on me that my initial impression (\"<code>tidy</code> is something Scott wrote to help with his category theory stuff, and it does category theory stuff\") is completely wrong, and that <code>tidy</code> and <code>obviously</code> are really all-purpose tools which will help us all. But they are not even part of a PR, right? Is there some kind of plan to get them PR'ed somehow, and what are the obstructions to getting them into mathlib?</p>",
        "id": 130824817,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1533284004
    },
    {
        "content": "<p>Hi Kevin, <code>tidy</code> doesn't do all that much, but I agree it's helpful. Really we need to carefully read &lt;<a href=\"https://arxiv.org/abs/1309.4501\" target=\"_blank\" title=\"https://arxiv.org/abs/1309.4501\">https://arxiv.org/abs/1309.4501</a>&gt; and translate it all into Lean, and then we'll really have the start of a hammer that mathematicians appreciate.</p>",
        "id": 130824972,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533284268
    },
    {
        "content": "<p><code>tidy</code> is relatively easy to PR to mathlib, and hopefully I will have time soon to start doing this</p>",
        "id": 130825014,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533284289
    },
    {
        "content": "<p>many of the gross aspects of it have become cleaner in the last month</p>",
        "id": 130825017,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533284300
    },
    {
        "content": "<p><code>obviously</code> is just <code>tidy</code> equipped with an extra tactic, called <code>rewrite_search</code>, which uses edit-distance based heuristics to search for chains of rewrites to prove equational results.</p>",
        "id": 130825043,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533284339
    },
    {
        "content": "<p>it is harder to PR, both because the implementation is really awful, and a student is actively working on cleverer (i.e. using machine learning in the heuristics) versions, so it's a moving target</p>",
        "id": 130825061,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533284392
    },
    {
        "content": "<p>(actually, secretly I'm hoping that he will rewrite <code>rewrite_search</code> from scratch for me, when he realises how awful it is)</p>",
        "id": 130825112,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533284418
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>  who is the student? I'm also interested in applying machine learning to heuristics</p>",
        "id": 130825305,
        "sender_full_name": "Minchao Wu",
        "timestamp": 1533284655
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> did one of your students mention machine learning?</p>",
        "id": 130825314,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1533284671
    },
    {
        "content": "<p>It seems that Mohan Ganesalingam completely left the field.</p>",
        "id": 130825391,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1533284838
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110187\">@Minchao Wu</span> , it's Keeley Hoek, who is sometimes around here. (Also, as we're all in the same building, we should really meet up --- my apologies that I screwed up our last attempt to do so.)</p>",
        "id": 130825447,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533284910
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, have you ever read that Ganesalingam-Gowers paper? If not, you really should. :-)</p>",
        "id": 130825465,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533284958
    },
    {
        "content": "<p>No worries :) Is the student also from the math department?</p>",
        "id": 130825523,
        "sender_full_name": "Minchao Wu",
        "timestamp": 1533285016
    },
    {
        "content": "<p>It's really a pity that the \"future work\" never materialised. I think Gowers also changed subject...</p>",
        "id": 130825616,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1533285178
    },
    {
        "content": "<p>Well... Gowers was only ever a visitor... :-)</p>",
        "id": 130825624,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533285203
    },
    {
        "content": "<p>If he's coming next week we can just schedule a group meeting maybe</p>",
        "id": 130825634,
        "sender_full_name": "Minchao Wu",
        "timestamp": 1533285238
    },
    {
        "content": "<p>It is such a pity that they did their work in their own private interactive theorem prover, so it's not usable by the rest of us.</p>",
        "id": 130825682,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533285258
    },
    {
        "content": "<p>(Typical mathematicians! :-)</p>",
        "id": 130825683,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533285266
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Are you/your student familiar with the work on TacticToe? <a href=\"http://cl-informatik.uibk.ac.at/users/cek/docs/17/tgckju-lpar17.pdf\" target=\"_blank\" title=\"http://cl-informatik.uibk.ac.at/users/cek/docs/17/tgckju-lpar17.pdf\">http://cl-informatik.uibk.ac.at/users/cek/docs/17/tgckju-lpar17.pdf</a> They've been relatively successful with ML-guided tactic proofs in HOL4. One of the more impressive results at AITP this year, in my opinion.</p>",
        "id": 130832892,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1533294871
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> for the reference. This is very different than what we're trying.</p>",
        "id": 130832996,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533295011
    }
]