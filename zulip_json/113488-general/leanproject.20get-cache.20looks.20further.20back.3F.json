[
    {
        "content": "<p>Would anyone be interested in modifying <code>leanproject get-cache</code> so that if oleans aren't available it looks further back in the git history and tries again?</p>",
        "id": 229411490,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615256780
    },
    {
        "content": "<p>I very often merge a proposed edit on github and then realise that this blocks me from working on the branch for a while, until oleans are available again.</p>",
        "id": 229411518,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615256807
    },
    {
        "content": "<p>We already do this during CI: in <code>scripts/fetch_olean_cache.sh</code> the relevant line is</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">new_git_sha</span> <span class=\"ow\">in</span> <span class=\"err\">$</span><span class=\"p\">(</span><span class=\"n\">git</span> <span class=\"n\">log</span> <span class=\"o\">-</span><span class=\"err\">$</span><span class=\"n\">GIT_HISTORY_DEPTH</span> <span class=\"o\">--</span><span class=\"n\">first</span><span class=\"o\">-</span><span class=\"n\">parent</span> <span class=\"o\">--</span><span class=\"n\">pretty</span><span class=\"o\">=</span><span class=\"nb\">format</span><span class=\"p\">:</span><span class=\"o\">%</span><span class=\"n\">H</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 229411633,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615256902
    },
    {
        "content": "<p>Hopefully we could just reproduce the same behaviour in <code>leanproject</code>. However I know my python-fu is weak enough that I am not the person with comparative advantage implementing this. :-)</p>",
        "id": 229411659,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615256944
    },
    {
        "content": "<p>The PR that added this feature to mathlib's CI is <a href=\"https://github.com/leanprover-community/mathlib/issues/2278\">#2278</a>. I suppose it would be natural for me to take this on, but it'll take me some time to understand how <code>mathlibtools</code> currently works, so I won't make any promises. More than happy to help out if someone else wants to jump on this in the near future though!</p>",
        "id": 229414090,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615258987
    },
    {
        "content": "<p>When I'm on a branch, I do <code>leanproject get-c --rev origin</code> to get that branch's oleans, or at least the most recent thing that's been pushed and cached upstream</p>",
        "id": 229419809,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1615263731
    },
    {
        "content": "<p>Can we just make this the default behavior?</p>",
        "id": 229425827,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615269005
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/113488-general/topic/leanproject.20get-cache.20looks.20further.20back.3F/near/229419809\">said</a>:</p>\n<blockquote>\n<p>When I'm on a branch, I do <code>leanproject get-c --rev origin</code> to get that branch's oleans, or at least the most recent thing that's been pushed and cached upstream</p>\n</blockquote>\n<p>This still fails if someone's pushed to the branch recently though, right?</p>\n<p><strong>edit</strong>: (Granted, this is still an improvement over the current behavior.)</p>",
        "id": 229428082,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615270835
    },
    {
        "content": "<p>I think there's a longer thread about this elsewhere</p>",
        "id": 229438913,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1615278329
    },
    {
        "content": "<p>Here's a relevant message in the old thread: <a href=\"#narrow/stream/113488-general/topic/get-mathlib-at-commit/near/213010027\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/get-mathlib-at-commit/near/213010027</a></p>",
        "id": 229450334,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1615283753
    },
    {
        "content": "<p>PR'd the behavior described in the thread I link above as <a href=\"https://github.com/leanprover-community/mathlib-tools/issues/106\">leanprover-community/mathlib-tools#106</a></p>",
        "id": 248227030,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1628000311
    }
]