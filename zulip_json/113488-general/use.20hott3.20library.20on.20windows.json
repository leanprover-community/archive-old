[
    {
        "content": "<p>I tried to use the hott3 library of Gabriel Ebner and Floris van Doorn for a project of my own. So I cloned the library, executed <code>leanpkg build</code>, created my own project with <code>leanpkg</code>, added the path to the hott3 library to  <code>leanpkg.path</code></p>",
        "id": 207971955,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1598366743
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">builtin_path</span>\n<span class=\"n\">path</span> <span class=\"bp\">./</span><span class=\"n\">src</span>\n<span class=\"n\">path</span> <span class=\"bp\">../../</span><span class=\"n\">hott3</span><span class=\"bp\">/</span><span class=\"n\">src</span>\n</code></pre></div>\n\n\n<p>and as a local dependency to <code>leanpkg.toml</code> </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">package</span><span class=\"o\">]</span>\n<span class=\"n\">name</span> <span class=\"bp\">=</span> <span class=\"s2\">&quot;HoTT-Case-Study&quot;</span>\n<span class=\"n\">version</span> <span class=\"bp\">=</span> <span class=\"s2\">&quot;0.1&quot;</span>\n<span class=\"n\">path</span> <span class=\"bp\">=</span> <span class=\"s2\">&quot;src&quot;</span>\n<span class=\"n\">lean_version</span> <span class=\"bp\">=</span> <span class=\"s2\">&quot;leanprover-community/lean:3.7.0&quot;</span>\n\n<span class=\"o\">[</span><span class=\"n\">dependencies</span><span class=\"o\">]</span>\n<span class=\"bp\">#</span> <span class=\"n\">local</span> <span class=\"n\">dependency</span>\n<span class=\"n\">hott3</span> <span class=\"bp\">=</span> <span class=\"o\">{</span> <span class=\"n\">path</span> <span class=\"bp\">=</span> <span class=\"s2\">&quot;../../hott3&quot;</span> <span class=\"o\">}</span>\n</code></pre></div>\n\n\n<p>Still I can't import any files from the hott3 library: <code>import hott.init</code> just triggers <code>file 'hott\\init' not found in the search path</code> . However the path is present when executing <code>lean --path</code>.</p>\n<p>What am I doing wrong?</p>",
        "id": 207972848,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1598367098
    },
    {
        "content": "<p>Do you really insist on doing this by hand?</p>",
        "id": 207973037,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598367186
    },
    {
        "content": "<p>Do you intend to modify the hott lib along the way?</p>",
        "id": 207973061,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598367201
    },
    {
        "content": "<p>You answered in the wrong thread.</p>",
        "id": 207973492,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598367384
    },
    {
        "content": "<p>Anyway, even if you want to do a lot by hand, modifying both those files is meaningless.</p>",
        "id": 207973541,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598367406
    },
    {
        "content": "<p>The toml file is meant to write the path file for you.</p>",
        "id": 207973590,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598367426
    },
    {
        "content": "<p>Sorry. Well, the manual only tells me how to produce a leanpkg using mathlib - I don't want to do that. It might be that I have to extend the hott library; I want to port some Lean2 hott files and don't know yet what I need on the way.</p>",
        "id": 207973629,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1598367447
    },
    {
        "content": "<p>You shouldn't ever need to edit <code>leanpkg.path</code>: that's between <code>leanpkg</code> and <code>lean</code>.</p>",
        "id": 207973787,
        "sender_full_name": "Reid Barton",
        "timestamp": 1598367513
    },
    {
        "content": "<p>And how do you bring the toml file to include the path to the hott3 library?</p>",
        "id": 207973838,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1598367534
    },
    {
        "content": "<p>I would just use a git dependency probably.</p>",
        "id": 207974056,
        "sender_full_name": "Reid Barton",
        "timestamp": 1598367608
    },
    {
        "content": "<p>Your toml looks fine</p>",
        "id": 207974057,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598367609
    },
    {
        "content": "<p>just use <code>leanpkg configure</code> after writing this toml</p>",
        "id": 207974120,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598367638
    },
    {
        "content": "<p>Did it, no extra path included in <code>leanpkg.path</code>.</p>",
        "id": 207974362,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1598367736
    },
    {
        "content": "<p>No, you didn't.</p>",
        "id": 207974397,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598367754
    },
    {
        "content": "<p>what do you mean \"extra\"?</p>",
        "id": 207974441,
        "sender_full_name": "Reid Barton",
        "timestamp": 1598367777
    },
    {
        "content": "<p>I'll list steps for you, hold on</p>",
        "id": 207974473,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598367796
    },
    {
        "content": "<ul>\n<li><code>cd  /tmp</code></li>\n<li><code>git clone git@github.com:gebner/hott3.git</code></li>\n<li><code>mkdir  my_proj</code></li>\n<li>Inside <code>my_proj/leanpkg.toml</code>, write</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">[package]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">&quot;eckl&quot;</span>\n<span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">&quot;0.1&quot;</span>\n<span class=\"n\">lean_version</span> <span class=\"o\">=</span> <span class=\"s\">&quot;leanprover-community/lean:3.7.0&quot;</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s\">&quot;src&quot;</span>\n\n<span class=\"k\">[dependencies]</span>\n\n<span class=\"n\">hott3</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s\">&quot;../hott3&quot;</span> <span class=\"p\">}</span>\n</code></pre></div>\n\n\n<ul>\n<li><code>cd my_proj</code></li>\n<li><code>leanpkg configure</code></li>\n<li><code>mkdir src</code></li>\n</ul>",
        "id": 207974944,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598367993
    },
    {
        "content": "<ul>\n<li>enjoy your <code>leanpkg.path</code></li>\n</ul>",
        "id": 207975006,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598368027
    },
    {
        "content": "<p>Just to check, you did open the project/folder/whatever it's called in VSCode, right?</p>",
        "id": 207975448,
        "sender_full_name": "Reid Barton",
        "timestamp": 1598368207
    },
    {
        "content": "<p>Worked! Thanks a lot! Now I am wondering: There are no .olean files in the hott3 folders. Do I need to <code>leanpkg build</code> them?</p>",
        "id": 207979834,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1598370131
    },
    {
        "content": "<p>Yes, I don't think the hott3 team provides precompiled oleans.</p>",
        "id": 207981296,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598370914
    },
    {
        "content": "<p>I'm curious: where did you get the idea to edit <code>leanpkg.path</code> by hand?</p>",
        "id": 207981363,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598370961
    },
    {
        "content": "<p>I'm asking because we are always hunting down ancient obsolete instructions.</p>",
        "id": 207981433,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598370986
    },
    {
        "content": "<p>Don't worry about ancient instructions: Because I didn't find any instructions at all for packages not depending on mathlib, I just thought that this might work.</p>",
        "id": 207981653,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1598371098
    },
    {
        "content": "<p>Should have read more about the workings of leanpkg I guess.</p>",
        "id": 207981701,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1598371129
    },
    {
        "content": "<p>TBH, I don't think we have much doc about such an unusual situation.</p>",
        "id": 207981766,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598371169
    },
    {
        "content": "<p>99.99% of Lean project are either mathlib or depend on mathlib and nothing else.</p>",
        "id": 207981809,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598371191
    },
    {
        "content": "<p>Zulip seems to be a good replacement for documentation <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 207981937,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1598371239
    },
    {
        "content": "<p>I don't even remember whether I created a <code>leanproject</code> command to add a dependency which is not mathlib.</p>",
        "id": 207982018,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598371277
    },
    {
        "content": "<p>I think no.</p>",
        "id": 207982093,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598371310
    },
    {
        "content": "<p>Feel free to open a doc PR (or even a <code>leanproject</code> PR).</p>",
        "id": 207982174,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598371335
    },
    {
        "content": "<p>I completely understand that the focus is on mathlib(-dependent projects). But I want to find out whether the nice ecosystem of Lean 3 makes  experimenting with HoTT easier. Let's see ...</p>",
        "id": 207982393,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1598371441
    },
    {
        "content": "<p>leanpkg already has an option to do this. The instructions after <code>git clone</code> can be equivalently <code>leanpkg new my_proj; cd my_proj; leanpkg install ../hott3; leanpkg configure</code> (untested).</p>",
        "id": 207982648,
        "sender_full_name": "Reid Barton",
        "timestamp": 1598371540
    },
    {
        "content": "<p>It's documented insofar as <code>leanpkg --help</code> exists.</p>",
        "id": 207982670,
        "sender_full_name": "Reid Barton",
        "timestamp": 1598371548
    },
    {
        "content": "<p>Since I don't know what a doc PR is, Reid's remark seems a good final point. If my project runs to some fat I might get back to a <code>leanproject</code> PR.</p>",
        "id": 207983479,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1598371955
    }
]