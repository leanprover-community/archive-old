[
    {
        "content": "<p>Is there a clean way to avoid the <code>, true</code> in this condition?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">generate_sieve</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">covering_family</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">covering_family</span> <span class=\"n\">U</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"n\">over</span> <span class=\"n\">U</span> <span class=\"bp\">|</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">Ui</span> <span class=\"o\">:</span> <span class=\"n\">over</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hUi</span> <span class=\"o\">:</span> <span class=\"n\">Ui</span> <span class=\"err\">∈</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"err\">⟶</span> <span class=\"n\">Ui</span><span class=\"o\">),</span> <span class=\"n\">true</span> <span class=\"o\">}</span>\n</pre></div>\n\n\n<p>I guess I should use <code>nonempty</code>? Somehow, that doesn't feel clean to me, and in the past I found it harder to use.</p>",
        "id": 152455922,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1545630825
    },
    {
        "content": "<p>that's <code>nonempty</code></p>",
        "id": 152456610,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1545632371
    },
    {
        "content": "<p><code>{ V : over U | ∃ Ui ∈ c, nonempty (V ⟶ Ui) }</code></p>",
        "id": 152456613,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1545632401
    },
    {
        "content": "<p>Ok, I'll try using it again.</p>",
        "id": 152456723,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1545632616
    }
]