[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>, I noticed you've been doing some work recently on power series, so thought I'd ask you about this --- shall we make polynomials completely classical, and remove all the decidability instances?</p>\n<p>I made a start on doing this, but it was quickly bit-rotting with all your changes. I think I've managed to merge back to master, at <a href=\"https://github.com/leanprover-community/mathlib/compare/decidable_eq\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/compare/decidable_eq\">https://github.com/leanprover-community/mathlib/compare/decidable_eq</a></p>",
        "id": 171396398,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563759260
    },
    {
        "content": "<p>It's not quite done yet --- there are still problems in <code>mv_polynomial</code>.</p>",
        "id": 171396401,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563759272
    },
    {
        "content": "<p>Any chance you could take a look at it, and see if it's worth proceeding?</p>",
        "id": 171396402,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563759290
    },
    {
        "content": "<p>I think Mario said this was a good idea. I don't have a strong opinion. Will take a look now.</p>",
        "id": 171396683,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563759785
    },
    {
        "content": "<p>What I can see looks good</p>",
        "id": 171396688,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563759800
    },
    {
        "content": "<p>Yep, it certainly didn't become less readable <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 171396742,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563759876
    },
    {
        "content": "<p>If it also speeds up things, I would rather have this merged sooner than later.</p>",
        "id": 171396743,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563759890
    },
    {
        "content": "<p>Now I need to go back to bed. See you guys later today.</p>",
        "id": 171396753,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563759911
    },
    {
        "content": "<p>I think there is still one broken file. I'm building now to try to find it.</p>",
        "id": 171396756,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563759914
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 171397386,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563760757
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 171397456,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563760828
    },
    {
        "content": "<p>I'm getting strange errors like</p>\n<div class=\"codehilite\"><pre><span></span>synthesized type class instance is not definitionally equal to expression inferred by typing rules, synthesized\n  finset.has_union\ninferred\n  finset.has_union\n</pre></div>",
        "id": 171397591,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563761131
    },
    {
        "content": "<p>which expands with <code>pp.all</code> to</p>\n<div class=\"codehilite\"><pre><span></span>synthesized type class instance is not definitionally equal to expression inferred by typing rules, synthesized\n  @finset.has_union.{0} nat (λ (a b : nat), nat.decidable_eq a b)\ninferred\n  @finset.has_union.{0} nat (λ (a b : nat), classical.prop_decidable (@eq.{1} nat a b))\n</pre></div>",
        "id": 171397596,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563761157
    },
    {
        "content": "<p>But I don't know how to diagnose where <code>nat.decidable_eq</code> instances are creeping in.</p>",
        "id": 171397640,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563761189
    },
    {
        "content": "<p>I think <code>convert</code> will fix those issues</p>",
        "id": 171397851,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563761595
    }
]