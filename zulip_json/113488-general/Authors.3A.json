[
    {
        "content": "<p>I noticed lots of variations in the <code>Authors: </code> line:</p>\n<ul>\n<li>sometimes <code>Authors: </code>, sometimes <code>Author: </code></li>\n<li>sometimes <code>and</code> instead of <code>, </code></li>\n<li>sometimes a trailing <code>.</code></li>\n<li>sometimes variable spacing</li>\n</ul>\n<p>I could easy normalize all these with a few greps. Waste of time or useful cleanup? First to answer gets to decide.</p>",
        "id": 230819974,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616049986
    },
    {
        "content": "<p>I like <code>Author: [1].</code> if it is only one.  Otherwise, my preference would be <code>Authors: [1], [2],..., [n-1] and [n].</code>!</p>",
        "id": 230822521,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616052372
    },
    {
        "content": "<p>(I was quite tense, while answering, wondering if someone else would beat me to set the golden standard for the <code>Authors</code> tab.)</p>",
        "id": 230822610,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616052478
    },
    {
        "content": "<p>I think we should standardize and lint against it. The format should preferably be easy to parse by a script.</p>",
        "id": 230822713,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616052577
    },
    {
        "content": "<p>Damiano's proposal is the best from a natural language point of view, but of course it means that scripts will need to consider some edge cases</p>",
        "id": 230822781,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616052610
    },
    {
        "content": "<p>I would also be happy removing the <code>and</code> in the multiple authors case.  I still feel that the singular/plural distinction is nice, though.</p>",
        "id": 230822839,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616052661
    },
    {
        "content": "<p><code>Author(s):</code> <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span></p>",
        "id": 230822870,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616052689
    },
    {
        "content": "<p>still, unless we are envisaging people's names including a comma, that may not be hard to regex, right?</p>",
        "id": 230822886,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616052707
    },
    {
        "content": "<blockquote>\n<p><code>Author(s):</code> <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span></p>\n</blockquote>\n<p>You did well covering your ears...  <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 230822968,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616052758
    },
    {
        "content": "<p>An alternative would be to use <code>by [author(s) name(s)]</code>.</p>",
        "id": 230823058,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616052841
    },
    {
        "content": "<p>My preference is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Authors</span><span class=\"o\">:</span> <span class=\"n\">Name1</span><span class=\"o\">,</span> <span class=\"n\">Name2</span><span class=\"o\">,</span> <span class=\"n\">Name3</span>\n</code></pre></div>\n<p>That is, always <code>Authors: </code>, only connector <code>, </code>, no trailing punctuation.</p>",
        "id": 230823548,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616053221
    },
    {
        "content": "<p>Trivial to check with a linter, trivial to scrape from. :-)</p>",
        "id": 230823574,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616053235
    },
    {
        "content": "<p>Let me argue against allowing an <code>Authors: </code> vs <code>Author: </code> distinction: it might make someone feel disinvited to edit an existing file, because it is labelled as \"belonging to\" a single person.</p>",
        "id": 230823624,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616053288
    },
    {
        "content": "<p>The linter would check for no punctuation at the end as well?  Should names end in a character?</p>",
        "id": 230823630,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616053294
    },
    {
        "content": "<p>I would further explicitly disallow <code> and </code> in the line.</p>",
        "id": 230823726,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616053362
    },
    {
        "content": "<p>For instance, if I write a period (or a comma, [shudder]) at the end of the author's list, would the linter complain?</p>",
        "id": 230823727,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616053363
    },
    {
        "content": "<p>Yes :-) Otherwise when we scrape authors we're going to have to have a line that normalizes <code>Damiano Testa.</code> and <code>Damiano Testa</code> to the same person.</p>",
        "id": 230823748,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616053395
    },
    {
        "content": "<p>I like the inclusive point of view for the Authors field, so you are gaining me, slightly, on that one! <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 230823772,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616053426
    },
    {
        "content": "<p>Even though I never added myself to an existing author(s)'s list.</p>",
        "id": 230823887,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616053501
    },
    {
        "content": "<p>Should we be scraping authors with doc-gen, or are we deliberately omitting them from the web docs?</p>",
        "id": 230823939,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1616053550
    },
    {
        "content": "<p>If we are bikeshedding on this format, can we replace <code>Authors</code> by something that communicates better that it isn't just the list of people that have made (trivial) edits to the file, but the set of people that are somehow \"responsible\" for the file.</p>",
        "id": 230824044,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616053626
    },
    {
        "content": "<p>Designers?</p>",
        "id": 230824097,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616053649
    },
    {
        "content": "<p>Maintainers?</p>",
        "id": 230824119,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616053673
    },
    {
        "content": "<p>Maybe <code>Principal authors</code>?</p>",
        "id": 230824173,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616053699
    },
    {
        "content": "<p><code>Maintainers</code> sounds too much like it has to be a subset of the mathlib maintainers, maybe</p>",
        "id": 230824194,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616053718
    },
    {
        "content": "<p>I thought that the idea was that the first list was the people to contact if things went wrong and the second list was people who contributed</p>",
        "id": 230824206,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1616053728
    },
    {
        "content": "<p>One is authors, one is copyright or something</p>",
        "id": 230824230,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1616053758
    },
    {
        "content": "<p>Ah, Kevin, I had not thought about the possibility of having different names in the two places, but I like it!</p>\n<p>So, one field could be <code>Contributors</code>.</p>",
        "id": 230824260,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616053802
    },
    {
        "content": "<p>My impression is that currently the copyright is just the first group of people who made the file</p>",
        "id": 230824364,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1616053884
    },
    {
        "content": "<p>Yes, I have certainly edited existing files, but I have never added myself to any named list, since I do not consider myself an author.  I would have considered myself a contributor, though.</p>",
        "id": 230824467,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616053955
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/contribute/style.html#header-and-imports\">https://leanprover-community.github.io/contribute/style.html#header-and-imports</a></p>",
        "id": 230824482,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616053967
    },
    {
        "content": "<blockquote>\n<p>Regarding the list of authors: we don't have strict rules on what contributions qualify for inclusion there. The general idea is that the people listed there should be the ones we would reach out to if we had questions about the design or development of the Lean code.</p>\n</blockquote>",
        "id": 230824495,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616053978
    },
    {
        "content": "<p>In principal we have the <code>git log</code> to track who contributed what.</p>",
        "id": 230824527,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616054008
    },
    {
        "content": "<p>Although splitting files into pieces can destroy some of that info</p>",
        "id": 230824536,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616054023
    },
    {
        "content": "<p>But splitting files also means you don't know which 2 lines <code>Bobby Alice</code> contributed to the 2500 lines file that you are splitting.</p>",
        "id": 230824608,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616054068
    },
    {
        "content": "<p>So you still don't know to which new file they should be added to the contributor list</p>",
        "id": 230824619,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616054084
    },
    {
        "content": "<p>The linked guidelines, do not seem to allow different lists of people, right?</p>\n<p>Well, splitting files would also mean having to understand how to split/duplicate contributors.</p>",
        "id": 230824621,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616054086
    },
    {
        "content": "<p>Right, whereas with a short list of <code>designers/maintainers/principal authors</code> this will typically be straightforward</p>",
        "id": 230824659,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616054121
    },
    {
        "content": "<p>I think that, when splitting, I would be happy with every name being duplicated in the copies.</p>",
        "id": 230824773,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616054204
    },
    {
        "content": "<p>I think we should mostly ignore the copyright line, and keep that as simple as possible. Perhaps just always a single person, whoever makes the PR.</p>",
        "id": 230824926,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616054333
    },
    {
        "content": "<p>I support this, also since, once you split the file, it is not clear to me how the copyright would work/propagate/change.</p>",
        "id": 230825040,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616054406
    },
    {
        "content": "<p>If we do want to change the <code>Authors: </code> prefix, so far my favourite suggestion is <code>Principal authors: </code>, but I would prefer to leave it as is, and just deal with having to explain the meaning --- this doesn't seem to come up much?</p>",
        "id": 230825412,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616054483
    },
    {
        "content": "<p>For me, it came up once, and Johan explained to me that those were the people who would be contacted in case of serious issues/doubts with the file.</p>",
        "id": 230825617,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616054548
    },
    {
        "content": "<p>Hence, I never added myself to an existing authors' list!</p>",
        "id": 230825675,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616054575
    },
    {
        "content": "<p>The rule I have followed for the authors field is that it lists the people who have made nontrivial additions to the file. This does not necessarily imply maintainership over that material, although they would probably be good people to talk to about design decisions in the file</p>",
        "id": 230830109,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1616057523
    },
    {
        "content": "<p>The copyright notice contains the (chronologically) first author to work on the file, who is also listed as the first author in the list. Authors are never removed even if their material is edited to unrecognizability</p>",
        "id": 230830215,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1616057576
    },
    {
        "content": "<p>I've removed authors when splitting sometimes, when it's clear that the entire part split out was written by just one author</p>",
        "id": 230830984,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1616058013
    },
    {
        "content": "<p>I would say \"use your best judgement\" for splitting, there aren't any hard rules. I would say that you should at least ensure that the union of the authors of the split files is a superset of the old file</p>",
        "id": 230831134,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1616058094
    },
    {
        "content": "<p>Personally, I don't think the author information in the copyright header is useful in any way.  On the contrary, it is even actively misleading: it's not the people who wrote the file, just the original author.  It's not the people who you should contact when changing the file, because the original author has been long gone.  It's also not the people who are the copyright holders.<br>\nI would support a mathlib-wide change to remove individual author names from files:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">Copyright (c) 2021 The mathlib community. All rights reserved.</span>\n<span class=\"cm\">Released under Apache 2.0 license as described in the file LICENSE.</span>\n<span class=\"cm\">Authors: The mathlib community</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>\n<p>Of course this is easy to say for me, as my name is only on 14 files.  There is something to be said for keeping the authors field to reward contributors.</p>",
        "id": 230831684,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1616058364
    },
    {
        "content": "<p>Gabriel, your suggestion is in line with the Bourbaki approach!</p>",
        "id": 230831782,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616058431
    },
    {
        "content": "<p>I'd be in favor of dropping the author names from the copyright, although I feel like that type of change requires contacting every existing author and asking them to relinquish copyright on those files</p>",
        "id": 230831903,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1616058500
    },
    {
        "content": "<p>I am very strongly in favour of Gabriel's proposal</p>",
        "id": 230831950,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616058545
    },
    {
        "content": "<p>Maybe the names that appear now in the various files could be collected to a single \"Contributors\" file, and <em>any</em> form of contribution would be recorded as a name (without duplication) in that file?</p>",
        "id": 230832160,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616058645
    },
    {
        "content": "<p>My personal experience has been that, when I contributed a new file, I have received <em>a lot</em> of help here on Zulip and I felt that I would have wanted to acknowledge that help.  If I knew that the names of the people who helped me already appear in a list of contributors and that it would not be my sole name would be associated with the specific file in question, that would seem to reflect better the situation.</p>",
        "id": 230832366,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616058777
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span>, at that point there's little point having the file at all, since it can be easily constructed from the git history</p>",
        "id": 230832423,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1616058808
    },
    {
        "content": "<p>Eric, you are correct, but I am not sure how to do that, and it is kind of nice to have an explicit list of people's names appearing somewhere.</p>\n<p>There could also be a situation of a \"non-corresponding author\", where a team works on a project, but only one person commits to mathlib.  It would be nice to be able to include the \"ghost-coders\"!</p>",
        "id": 230832600,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616058907
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113488-general/topic/Authors.3A/near/230832600\">said</a>:</p>\n<blockquote>\n<p>Eric, you are correct, but I am not sure how to do that, and it is kind of nice to have an explicit list of people's names appearing somewhere.</p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_stats.html\">https://leanprover-community.github.io/mathlib_stats.html</a> I think is already such a place</p>\n<blockquote>\n<p>There could also be a situation of a \"non-corresponding author\", where a team works on a project, but only one person commits to mathlib.  It would be nice to be able to include the \"ghost-coders\"</p>\n</blockquote>\n<p>Ideally those people would be included via a \"Co-authored-by\" line in the commit message.</p>",
        "id": 230832776,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1616058998
    },
    {
        "content": "<p>Btw, this is also similar to the Stacks Project approach:</p>\n<p><a href=\"https://stacks.math.columbia.edu/contributors\">https://stacks.math.columbia.edu/contributors</a></p>",
        "id": 230832791,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1616059008
    },
    {
        "content": "<p>If one of the goals of the \"authors\" section is to help users find appropriate reviewers, one option would be to extract all the current \"author\" comments into a github <a href=\"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-code-owners\"><code>CODEOWNERS</code></a> file, which automatically requests those users to review the files when they're edited</p>",
        "id": 230832871,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1616059073
    },
    {
        "content": "<p>Much as I like Gabriel's suggestion, I'm not sure it's a good idea to go and rewrite all the copyright lines in old files.</p>",
        "id": 230837225,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616061442
    },
    {
        "content": "<p>I wish it were.</p>",
        "id": 230837231,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616061447
    },
    {
        "content": "<p>Excellent radical suggestions to end copyright as we know it notwithstanding:</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib/issues/6749\">#6749</a> for the normalization<br>\n<a href=\"https://github.com/leanprover-community/mathlib/issues/6750\">#6750</a> for the corresponding lint update</p>",
        "id": 230838366,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616062052
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/Authors.3A/near/230831903\">said</a>:</p>\n<blockquote>\n<p>I'd be in favor of dropping the author names from the copyright, although I feel like that type of change requires contacting every existing author and asking them to relinquish copyright on those files</p>\n</blockquote>\n<p>you don't need the header for copyright purposes, and removing it doesn't relinquish copyright (IANAL etc.)</p>",
        "id": 230859241,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616072870
    },
    {
        "content": "<p>Unless that meant you explicitly <em>want</em> folks to relinquish copyright. Otherwise putting Copyright foo is an artifact from pre-Berne convention times where there were countries you needed to explicitly assert copyright to get the rights. Now essentially every country is party to either it or a similar agreement -- you get copyright implicitly by writing the code, and each person who writes some sublines of code in each file has copyright over their portions, you don't need to assert it explicitly.</p>",
        "id": 230860168,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616073216
    },
    {
        "content": "<p>The dutch distinguish between \"author rights\" and \"copy right\". I've always thought this is very natural.<br>\nI don't want people to claim that they wrote stuff that I wrote. I maintain author rights.<br>\nBut I really can't be bothered by copy rights. Just do what the heck you want with stuff that I wrote.</p>",
        "id": 230862323,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616074064
    },
    {
        "content": "<p>That seems likely similar. What other folks (besides the copyright holder) can do with the thing is governed by the license(s) granted by the copyright holders, so for mathlib that's an Apache 2.0 license for other people, which is permissive.</p>",
        "id": 230869987,
        "sender_full_name": "Julian Berman",
        "timestamp": 1616076811
    },
    {
        "content": "<p>In Linux, they have a CREDITS file for people who contribute but are not maintainers. The only name in a file is the maintainer - whoever is responsible if there is an issue.</p>",
        "id": 230894506,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1616084367
    }
]