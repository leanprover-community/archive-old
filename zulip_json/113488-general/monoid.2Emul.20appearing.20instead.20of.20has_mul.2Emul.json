[
    {
        "content": "<p>Why does <code>monoid.mul</code> appear in the <code>begin end</code> here instead of <code>has_mul.mul</code>? Is there a nice solution to this problem?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">one_by_one_equiv</span> <span class=\"o\">{</span><span class=\"n\">one</span> <span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">unique</span> <span class=\"n\">one</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">one</span> <span class=\"n\">one</span> <span class=\"n\">R</span> <span class=\"err\">≃</span><span class=\"n\">r</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">to_fun</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">default</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">default</span> <span class=\"bp\">_</span><span class=\"o\">),</span>\n  <span class=\"n\">inv_fun</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">left_inv</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">ext</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">unique</span><span class=\"bp\">.</span><span class=\"n\">eq_default</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">unique</span><span class=\"bp\">.</span><span class=\"n\">eq_default</span> <span class=\"n\">j</span><span class=\"o\">]),</span>\n  <span class=\"n\">right_inv</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"n\">hom</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"n\">map_one</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n    <span class=\"n\">map_mul</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n      <span class=\"k\">assume</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n\n\n    <span class=\"kn\">end</span><span class=\"o\">,</span>\n    <span class=\"n\">map_add</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">rfl</span> <span class=\"o\">}</span> <span class=\"o\">}</span>\n</pre></div>",
        "id": 169470971,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1562065240
    },
    {
        "content": "<p>this is what happens when you try to define a layered structure all in one go. If you first define the equiv part and then the ring equiv I think it will use has_mul.mul</p>",
        "id": 169471079,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562065428
    }
]