[
    {
        "content": "<p>I have some set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">M(A)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span> of points and I want to endow it with the weakest topology making some evaluation maps continuous.</p>\n<p>Namely, given the set of real-valued multiplicative seminorms <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo>:</mo><mi>A</mi><mo>→</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">s : A \\to \\mathbb{R}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span></span></span></span>, I would like to get the weakest topology making <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">∣</mo><mi>f</mi><mo stretchy=\"false\">∣</mo><mo>:</mo><mi>M</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"double-struck\">R</mi><mo>∣</mo><mi>f</mi><mo>∈</mo><mi>A</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{ \\lvert f \\rvert : M(A) \\to \\mathbb{R} \\mid f \\in A \\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mopen\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">}</span></span></span></span></p>\n<p>So I have a proper definition of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">M(A)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mclose\">)</span></span></span></span> and I do not know exactly how to derive a specific <code>[topological_space (spectrum A)]</code> instance that I will use to prove specific results on it, e.g. compactness, etc.</p>",
        "id": 225305713,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1612535827
    },
    {
        "content": "<p>This is the Sup of the induced topologies associated to your evalaution functions.</p>",
        "id": 225307164,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612536554
    },
    {
        "content": "<p>So something like this <a href=\"https://leanprover-community.github.io/mathlib_docs/topology/order.html#topological_space.induced\">https://leanprover-community.github.io/mathlib_docs/topology/order.html#topological_space.induced</a> and then some sup theorem on the set of those (the subtypes of those)?</p>",
        "id": 225307676,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1612536770
    },
    {
        "content": "<p>Let me sketch some code. 1 sec.</p>",
        "id": 225308027,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612536931
    },
    {
        "content": "<p>Here's a version that's probably more general than what you actually want:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.order</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">fs</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">topological_space</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">topological_space</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⨆</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">),</span> <span class=\"n\">topological_space.induced</span> <span class=\"o\">(</span><span class=\"n\">fs</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">I</span>\n</code></pre></div>",
        "id": 225309149,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612537404
    },
    {
        "content": "<p>Ryan, you should have a look at how the product topology is defined.</p>",
        "id": 225309473,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1612537555
    },
    {
        "content": "<p>(and how its basic properties are proved)</p>",
        "id": 225309528,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1612537565
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/How.20to.20endow.20a.20space.20with.20a.20certain.20topology.3F/near/225309473\">said</a>:</p>\n<blockquote>\n<p>Ryan, you should have a look at how the product topology is defined.</p>\n</blockquote>\n<p>Alright, will do so!</p>",
        "id": 225310015,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1612537790
    },
    {
        "content": "<p>Oh, sorry I should have used Inf not Sup in the code above (I forgot the ordering on topologies is backwards <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> ) (fixed the code)</p>",
        "id": 225310416,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612537976
    }
]