[
    {
        "content": "<p>Can we make this <code>@[elab_as_eliminator]</code>?</p>",
        "id": 133965949,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536944654
    },
    {
        "content": "<p>How will that change things?</p>",
        "id": 133969734,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536948553
    },
    {
        "content": "<p>It means it changes the way the motive is inferred, without which, these lemmas are pretty much unusable.</p>",
        "id": 133969852,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536948672
    },
    {
        "content": "<p>also I just wrote a beta lemma</p>",
        "id": 133970442,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536949332
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"n\">elab_as_eliminator</span><span class=\"o\">]</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">strong_rec_on</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">strong_rec_on_beta</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">nat</span> <span class=\"bp\">→</span> <span class=\"n\">Sort</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">m</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">p</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">p</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">strong_rec_on</span> <span class=\"n\">n</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">h</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">m</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">strong_rec_on</span> <span class=\"n\">m</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">strong_rec_on</span><span class=\"o\">,</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">by_cases</span><span class=\"o\">],</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">dif_neg</span> <span class=\"o\">(</span><span class=\"n\">lt_irrefl</span> <span class=\"bp\">_</span><span class=\"o\">),</span> <span class=\"n\">dif_pos</span> <span class=\"n\">rfl</span><span class=\"o\">],</span>\n    <span class=\"n\">congr&#39;</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">funext</span> <span class=\"n\">m</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">H</span> <span class=\"o\">},</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">strong_rec_on</span><span class=\"o\">,</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">by_cases</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">dif_neg</span> <span class=\"o\">(</span><span class=\"n\">lt_irrefl</span> <span class=\"bp\">_</span><span class=\"o\">),</span> <span class=\"n\">dif_pos</span> <span class=\"n\">rfl</span><span class=\"o\">],</span>\n  <span class=\"n\">congr&#39;</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">funext</span> <span class=\"n\">m</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">H</span> <span class=\"k\">with</span> <span class=\"n\">H1</span> <span class=\"n\">H1</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">dif_neg</span> <span class=\"o\">(</span><span class=\"n\">lt_irrefl</span> <span class=\"bp\">_</span><span class=\"o\">)]</span> <span class=\"o\">},</span>\n  <span class=\"n\">change</span> <span class=\"n\">m</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span> <span class=\"n\">at</span> <span class=\"n\">H1</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">dif_pos</span> <span class=\"n\">H1</span><span class=\"o\">,</span> <span class=\"n\">dif_neg</span> <span class=\"o\">(</span><span class=\"n\">lt_irrefl</span> <span class=\"bp\">_</span><span class=\"o\">),</span> <span class=\"n\">dif_pos</span> <span class=\"n\">rfl</span><span class=\"o\">],</span>\n  <span class=\"n\">clear</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">revert</span> <span class=\"n\">m</span> <span class=\"n\">H1</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">strong_induction_on</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">n</span> <span class=\"n\">ih</span> <span class=\"n\">m</span> <span class=\"n\">H1</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">H1</span> <span class=\"o\">},</span>\n  <span class=\"n\">dsimp</span> <span class=\"n\">only</span><span class=\"o\">,</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">H2</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">dif_pos</span> <span class=\"n\">H2</span><span class=\"o\">],</span> <span class=\"n\">apply</span> <span class=\"n\">ih</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">lt_succ_self</span> <span class=\"bp\">_</span> <span class=\"o\">},</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">H3</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">dif_neg</span> <span class=\"n\">H2</span><span class=\"o\">,</span> <span class=\"n\">dif_pos</span> <span class=\"n\">H3</span><span class=\"o\">],</span> <span class=\"n\">subst</span> <span class=\"n\">H3</span> <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"n\">false</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"o\">(</span><span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">lt_succ_iff_lt_or_eq</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">H1</span><span class=\"o\">)</span> <span class=\"n\">H2</span> <span class=\"n\">H3</span><span class=\"o\">)</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 133970444,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536949334
    }
]