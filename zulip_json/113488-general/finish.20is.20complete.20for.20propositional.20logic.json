[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">finish</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">finish</span> <span class=\"c1\">-- works, so `finish` is classical</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">↔</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span><span class=\"n\">q</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">finish</span> <span class=\"c1\">-- fails?</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">↔</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span><span class=\"n\">q</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">by_cases</span> <span class=\"n\">q</span><span class=\"bp\">;</span> <span class=\"n\">finish</span> <span class=\"c1\">-- workaround</span>\n</code></pre></div>",
        "id": 207285464,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597769995
    },
    {
        "content": "<p>finish is not a general propositional logic prover</p>",
        "id": 207286065,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597770275
    },
    {
        "content": "<p><code>tauto</code> makes the claim to be this, although I think there are also some failing goals IIRC</p>",
        "id": 207286127,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597770307
    },
    {
        "content": "<p>well the docstring says <code>finish</code> is complete for propositional logic</p>",
        "id": 207286474,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597770473
    },
    {
        "content": "<p>aha, <code>tauto!</code> solves the goal (cc. <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> )</p>",
        "id": 207286583,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597770519
    },
    {
        "content": "<p>Yes, <code>finish</code> is complete for propositional logic. The problem is that it does not expand the iff by default. This works:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">↔</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span> <span class=\"bp\">∨</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span><span class=\"n\">q</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">finish</span> <span class=\"o\">[</span><span class=\"n\">iff_def</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 207317245,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1597785202
    },
    {
        "content": "<p>what are the atoms of propositional logic? Is it <code>[→, ∧, ∨, true, false]</code>?</p>",
        "id": 207351529,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597790959
    }
]