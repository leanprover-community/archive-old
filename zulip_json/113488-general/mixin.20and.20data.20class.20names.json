[
    {
        "content": "<p>Should we fix some naming convention for data and Prop-valued mixin classes?</p>",
        "id": 271531066,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1644554262
    },
    {
        "content": "<p>E.g., we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_involutive_star\">docs#has_involutive_star</a> (data) and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_continuous_mul\">docs#has_continuous_mul</a> (prop mixin)</p>",
        "id": 271531121,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1644554313
    },
    {
        "content": "<p>My preference would be to use <code>is_</code> for <code>Prop</code> and <code>has_</code> for <code>Type</code>, but that might be quite an invasive change.</p>",
        "id": 271545647,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644569218
    },
    {
        "content": "<p>Under that scheme, <code>has_continuous_mul</code> would become <code>mul_is_continuous</code> or <code>is_continuous_mul</code></p>",
        "id": 271545723,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644569282
    },
    {
        "content": "<p>What about <code>continuous_mul_class</code> on the model of <code>smul_comm_class</code>?</p>",
        "id": 271545960,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644569479
    },
    {
        "content": "<p>The <code>_class</code> suffix feels like noise to me - I'd lean towards trying to purge it as part of the same renaming</p>",
        "id": 271546004,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644569521
    },
    {
        "content": "<p><code>is_comm_smul</code> and <code>is_assoc_smul</code>, then?</p>",
        "id": 271546150,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644569593
    },
    {
        "content": "<p>Well  <code>is_scalar_tower</code> already starts with <code>is_</code> and avoids <code>class</code>, so no need to rename that to <code>is_assoc_smul</code>?</p>",
        "id": 271546192,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644569634
    },
    {
        "content": "<p>But it's not a very descriptive name.</p>",
        "id": 271546336,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644569729
    },
    {
        "content": "<p>I know you're trying to save your FMM paper from deprecation <span aria-label=\"stuck out tongue closed eyes\" class=\"emoji emoji-1f61d\" role=\"img\" title=\"stuck out tongue closed eyes\">:stuck_out_tongue_closed_eyes:</span></p>",
        "id": 271546458,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644569828
    },
    {
        "content": "<p>I find the <code>is_</code> convention really nice, but for some topology stuff it came up that <code>is_compact</code> is for sets so <code>compact_space</code> can only be renamed to <code>is_compact_space</code> and under that convention we would get stuff like <code>is_locally_convex_space</code> which is really long.</p>",
        "id": 271583113,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1644589226
    },
    {
        "content": "<p>(and the <code>_space</code> is somewhat redundant)</p>",
        "id": 271583253,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1644589290
    },
    {
        "content": "<p>I feel like this had been discussed before, but maybe not for classes.  Two related threads:<br>\n<a href=\"#narrow/stream/116395-maths/topic/.60is_foo.60.20v.20.60foo.60/near/266509885\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/.60is_foo.60.20v.20.60foo.60/near/266509885</a><br>\n<a href=\"#narrow/stream/113488-general/topic/Noun.2Fadjective.2Fverb.20naming.20conventions.20for.20defs.20in.20mathlib/near/206742747\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Noun.2Fadjective.2Fverb.20naming.20conventions.20for.20defs.20in.20mathlib/near/206742747</a></p>",
        "id": 271607510,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644599746
    }
]