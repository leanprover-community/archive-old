[
    {
        "content": "<p>(Cross-posting from the Coq discourse/zulip in case there is interest here):</p>\n<p>We would like to announce our (open source and publicly available)<br>\nlibrary for working with general probability spaces in Coq.  Starting<br>\nwith Sigma-Algebras, it works its way up to general expectation, and<br>\ngeneral conditional expectation (defined over any nonnegative or<br>\nfinite expectation measurable random variable), with the expected<br>\nproperties.</p>\n<p>This is used for various applications, such as our proof of<br>\nDvoretzky's convergence theorem for stochastic processes.  A preprint<br>\ndiscussing this work is available at <a href=\"https://arxiv.org/abs/2202.05959\">https://arxiv.org/abs/2202.05959</a>,<br>\nand includes a description of how the library is built up.</p>\n<p>We have also been working on developing some martingale theory, and<br>\nrecently formalized the martingale convergence theorem and the<br>\noptional stopping time theorem.  To our knowledge, this is the first<br>\nmechanization in Coq of the latter theorem<br>\n(It is still marked as unclaimed on <a href=\"http://www.cs.ru.nl/~freek/100/\">http://www.cs.ru.nl/~freek/100/</a>).<br>\nGenerated documentation on this result is available <a href=\"https://formalml.github.io/DSML22/documentation/html/FormalML.ProbTheory.MartingaleStopped.html#optional_stopping_time_thm\">here</a>.</p>\n<p>The library is available at <a href=\"https://github.com/IBM/FormalML\">https://github.com/IBM/FormalML</a></p>\n<p>We welcome users and collaborators, and would love to develop a<br>\ncommunity of users interested in this space.</p>\n<p>For questions and discussions about potential collaborations, please<br>\ncontact <span class=\"user-mention\" data-user-id=\"489369\">@Avi Shinnar</span> .</p>\n<ul>\n<li>The FormalML team (<span class=\"user-mention\" data-user-id=\"489369\">@Avi Shinnar</span>, Barry Trager, and <span class=\"user-mention\" data-user-id=\"116448\">@Koundinya Vajjha</span> )</li>\n</ul>",
        "id": 277017211,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1648565790
    },
    {
        "content": "<p>I assume the name clash with <a href=\"https://github.com/google/formal-ml\">https://github.com/google/formal-ml</a> is unintentional, and there is no overlap in the contributors?</p>",
        "id": 277017545,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1648565906
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"243312\">@Jason KY.</span></p>",
        "id": 277017548,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1648565906
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/Freek.2062.20.2B.20FormalML/near/277017545\">said</a>:</p>\n<blockquote>\n<p>I assume the name clash with <a href=\"https://github.com/google/formal-ml\">https://github.com/google/formal-ml</a> is unintentional, and there is no overlap in the contributors?</p>\n</blockquote>\n<p>Indeed. Both libraries are distinct. <code>formal-ml</code> is Lean and <code>FormalML</code> is entirely in Coq.</p>",
        "id": 277018166,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1648566122
    },
    {
        "content": "<p>We have the forward direction of the optional stopping theorem for discrete martingales <a href=\"https://leanprover-community.github.io/mathlib_docs/probability/martingale.html#measure_theory.submartingale.expected_stopped_value_mono\">here</a></p>",
        "id": 277019181,
        "sender_full_name": "Jason KY.",
        "timestamp": 1648566526
    }
]