[
    {
        "content": "<p>I would like to use Lean to study HoTT but I was told that I should look into Lean 2. Is that correct? Would you suggest alternatives in order to study HoTT?</p>\n<p>Could anyone suggest some good resources (hanbooks,notes, slides or video lectures) to get into HoTT using Lean?<br>\nThank you in advance!</p>",
        "id": 257745180,
        "sender_full_name": "Pier Giorgio Rayme B.",
        "timestamp": 1634323269
    },
    {
        "content": "<p>I think <a href=\"https://github.com/gebner/hott3\">https://github.com/gebner/hott3</a> is the beginning and end of HoTT in Lean3.</p>",
        "id": 257758887,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1634329139
    },
    {
        "content": "<p>It's not really HoTT, but includes ideas from HoTT, so it might be interesting to you: <a href=\"https://github.com/SReichelt/universe-abstractions/blob/main/UniverseAbstractions/Doc/UniverseAbstractions.pdf\">https://github.com/SReichelt/universe-abstractions/blob/main/UniverseAbstractions/Doc/UniverseAbstractions.pdf</a><br>\nIn contrast to HoTT, this formalization replaces equality with an abstract equivalence, so that no axioms need to be added. (Univalence is incompatible with Lean &gt;= 3 as you have noticed.) Due to the results mentioned in the introduction, it's possible to recover some of the benefits of HoTT. I think this can be taken quite far, but higher inductive types are not part of the goal (which doesn't mean that it can't be done).<br>\nStill very much WIP, but any feedback is welcome.</p>",
        "id": 257784746,
        "sender_full_name": "Sebastian Reichelt",
        "timestamp": 1634343694
    },
    {
        "content": "<p>Thank you very much! I'll take a look at  that asap!</p>",
        "id": 257841338,
        "sender_full_name": "Pier Giorgio Rayme B.",
        "timestamp": 1634399853
    },
    {
        "content": "<p>You may also just want to look into Arend.  It is a relatively new theorem prover using a variation of cubical type theory and good documentation/tutorials.  Also, there are other theorem provers as well which are commonly used for HoTT.  (Not trying to push you away from Lean.  I think it is a great theorem prover, but I also realize it is quite a workaround to do HoTT in Lean.)</p>",
        "id": 257845777,
        "sender_full_name": "Jason Rute",
        "timestamp": 1634403834
    },
    {
        "content": "<p>HoTT has been abandoned in Lean. The biggest HoTT library in Lean is in the old version of Lean 2: <a href=\"https://github.com/leanprover/lean2/blob/master/hott/hott.md\">https://github.com/leanprover/lean2/blob/master/hott/hott.md</a> (and in this separate repo: <a href=\"https://github.com/cmu-phil/Spectral\">https://github.com/cmu-phil/Spectral</a>).<br>\nIf you want to do HoTT, I recommend to look for a different proof assistant. There are established libraries in Coq and Agda (and separately there's Unimath). There are also various proof assistants with cubical support: (Agda, Arend and various more experimental systems).</p>",
        "id": 257917454,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1634475926
    },
    {
        "content": "<p>If you are interested, I am still doing some HoTT formalizations in <a href=\"https://github.com/groupoid/ground.zero\">https://github.com/groupoid/ground.zero</a> using the same large elimination checker as in <a href=\"https://github.com/gebner/hott3\">https://github.com/gebner/hott3</a>, so you may check out it also.</p>",
        "id": 259005376,
        "sender_full_name": "Uranus Testing",
        "timestamp": 1635188712
    }
]