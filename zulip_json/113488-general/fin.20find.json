[
    {
        "content": "<p>Suppose that I have a set <code>s : set (fin n)</code> and I know that <code>s</code> is non-empty and that <code>s</code> is a decidable predicate on <code>fin n</code>. Is there a way to produce the least element of <code>s</code>? I was hoping to find something similar to <code>nat.find</code> for <code>fin</code> but haven't come across it yet.</p>",
        "id": 168565765,
        "sender_full_name": "Michael Howes",
        "timestamp": 1561004641
    },
    {
        "content": "<p>Convert it to a <code>finset</code>, then use <code>finset.sorted</code> to produce a list, then take the head? I don't know of an existing function.</p>",
        "id": 168566292,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1561005448
    },
    {
        "content": "<p>How do I do the first conversion?</p>",
        "id": 168566785,
        "sender_full_name": "Michael Howes",
        "timestamp": 1561006269
    },
    {
        "content": "<p><code>finset.univ.filter (\\lam x, x \\in s)</code>??</p>",
        "id": 168566834,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1561006331
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 168566982,
        "sender_full_name": "Michael Howes",
        "timestamp": 1561006617
    },
    {
        "content": "<p>I ended up using <code>finset.min'</code></p>",
        "id": 168663306,
        "sender_full_name": "Michael Howes",
        "timestamp": 1561104216
    }
]