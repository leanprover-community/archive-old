[
    {
        "content": "<p>Will there be, or is there, an analog of Coq's \"canonical structures\", complementary to typeclasses, in Lean? </p>\n<p>For information about canonical structures, see Canonical Structures for the working Coq user, <a href=\"https://hal.inria.fr/hal-00816703v2\" target=\"_blank\" title=\"https://hal.inria.fr/hal-00816703v2\">https://hal.inria.fr/hal-00816703v2</a>, Sandrine Blazy and Christine Paulin and David Pichardie. ITP 2013, 4th Conference on Interactive Theorem Proving, Jul 2013, Rennes, France. Springer, 7998, pp.19-34, 2013, LNCS. ã€ˆ10.1007/978-3-642-39634-2_5.</p>",
        "id": 135481621,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1539102661
    },
    {
        "content": "<p>I've heard these things mentioned here in the past, and my impression is that at least some people seem to think that Lean's typeclasses are \"better\". Am I completely wrong about this?</p>",
        "id": 135481914,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1539103004
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/subject/working.20with.20finite.20sequences/near/123573886\" title=\"#narrow/stream/113488-general/subject/working.20with.20finite.20sequences/near/123573886\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/subject/working.20with.20finite.20sequences/near/123573886</a></p>",
        "id": 135482042,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1539103140
    },
    {
        "content": "<p>Some old discussion on the same topic. If you have things to add I'm sure that people here would be interested.</p>",
        "id": 135482064,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1539103169
    },
    {
        "content": "<blockquote>\n<p>Some old discussion on the same topic. If you have things to add I'm sure that people here would be interested.</p>\n</blockquote>\n<p>Ah, thanks for the link to this thread. I did a search before posting but didn't come up with this one.</p>",
        "id": 135485472,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1539106686
    },
    {
        "content": "<p>I found it using search -- searching for canonical structures gave me a bunch of posts by me banging on about canonical isomorphisms of structures; I then realised that searching for \"canonical structure\" was a better idea.</p>",
        "id": 135531826,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1539166835
    },
    {
        "content": "<p>About canonical structures, the only interesting thing I remember is that, in the Coq bigop paper, they insist a lot on the fact that canonical structures can be associated to terms and not only types, and this is meant to be a huge advantage over type classes. But this does not apply to Lean type classes. For instance the is_commutative type class in <a href=\"https://github.com/leanprover/lean/blob/ceacfa7445953cbc8860ddabc55407430a9ca5c3/library/init/algebra/classes.lean#L13\" target=\"_blank\" title=\"https://github.com/leanprover/lean/blob/ceacfa7445953cbc8860ddabc55407430a9ca5c3/library/init/algebra/classes.lean#L13\">https://github.com/leanprover/lean/blob/ceacfa7445953cbc8860ddabc55407430a9ca5c3/library/init/algebra/classes.lean#L13</a> is about a term.</p>",
        "id": 135533733,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539169501
    }
]