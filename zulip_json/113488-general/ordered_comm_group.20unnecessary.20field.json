[
    {
        "content": "<p>Just found this comment in <code>algebra.ordered_group</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">/-</span><span class=\"cm\">-</span>\n<span class=\"cm\">The `add_lt_add_left` field of `ordered_comm_group` is redundant, but it is in core so</span>\n<span class=\"cm\">we can&#39;t remove it for now. This alternative constructor is the best we can do.</span>\n<span class=\"cm\">-/</span>\n<span class=\"n\">def</span> <span class=\"n\">ordered_comm_group</span><span class=\"bp\">.</span><span class=\"n\">mk&#39;</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">partial_order</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">add_le_add_left</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">ordered_comm_group</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n</pre></div>\n\n\n<p>does anyone feel like writing a lean PR for this?</p>",
        "id": 192099850,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585360952
    },
    {
        "content": "<p>I could do that. I guess I should remove the field from the class but leave the lemmas in the file as they are and fix lean and Mathlib where necessary?</p>",
        "id": 192232320,
        "sender_full_name": "Anton Lorenzen",
        "timestamp": 1585561373
    },
    {
        "content": "<p>Yes. Remove the field, make a theorem with the same name using the proof in this constructor, and then remove this field in any constructions of <code>ordered_comm_group</code>, delete <code>ordered_comm_group.mk'</code> and replace all uses with the regular constructor</p>",
        "id": 192232897,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585561665
    },
    {
        "content": "<p>This also applies to <code>decidable_linear_ordered_comm_group </code> and <code>ordered_ring</code> where <code>mul_nonneg</code> follows from <code>mul_pos</code> and <code>em</code>. Should I remove these fields too?</p>",
        "id": 192407876,
        "sender_full_name": "Anton Lorenzen",
        "timestamp": 1585669518
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">ordered_ring</span><span class=\"bp\">.</span><span class=\"n\">mul_nonneg</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ordered_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">em</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">le_antisymm</span> <span class=\"n\">h</span> <span class=\"n\">h₁</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">cases</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">em</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"mi\">0</span><span class=\"o\">),</span> <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">le_antisymm</span> <span class=\"n\">h_1</span> <span class=\"n\">h₂</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">le_not_le_of_lt</span> <span class=\"o\">(</span><span class=\"n\">ordered_ring</span><span class=\"bp\">.</span><span class=\"n\">mul_pos</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"n\">lt_of_le_not_le</span> <span class=\"n\">h₁</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">lt_of_le_not_le</span> <span class=\"n\">h₂</span> <span class=\"n\">h_1</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">left</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 192407941,
        "sender_full_name": "Anton Lorenzen",
        "timestamp": 1585669545
    },
    {
        "content": "<p>And <code>ordered_semiring</code> of course</p>",
        "id": 192409445,
        "sender_full_name": "Anton Lorenzen",
        "timestamp": 1585670080
    },
    {
        "content": "<p>And do you know which branch of mathlib compiles with the current lean master branch?</p>",
        "id": 192416872,
        "sender_full_name": "Anton Lorenzen",
        "timestamp": 1585673305
    },
    {
        "content": "<p>You can always look at <code>leanpkg.toml</code> on any mathlib branch to find out which version of Lean it expects to run with.</p>",
        "id": 192418374,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585673982
    },
    {
        "content": "<p>I could be wrong, but I don't think we have a 3.8.0c staging branch for mathlib yet.</p>",
        "id": 192419294,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1585674378
    },
    {
        "content": "<p>I haven't been able to find one. At least the more recent branches assume 3.7.2</p>",
        "id": 192419359,
        "sender_full_name": "Anton Lorenzen",
        "timestamp": 1585674421
    },
    {
        "content": "<p>Should I try to fix the new errors? Or apply the patch to 3.7? Or just work on the lean compiler?</p>",
        "id": 192419431,
        "sender_full_name": "Anton Lorenzen",
        "timestamp": 1585674468
    },
    {
        "content": "<p>Fix the new errors = new 3.8 branch</p>",
        "id": 192419496,
        "sender_full_name": "Anton Lorenzen",
        "timestamp": 1585674486
    },
    {
        "content": "<p>I suggest opening a PR to Lean core first. After that's merged we can worry about fixing mathlib. <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> what do you think?</p>",
        "id": 192419789,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1585674614
    },
    {
        "content": "<p>Yes, please open a PR to the lean repo first.  I suspect that the 3.8 release is happening soon.  It doesn't make much sense to have a 3.8 branch for mathlib long before the release, you'd just spend lots of time keeping up with mathlib.</p>",
        "id": 192424180,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1585676564
    },
    {
        "content": "<p>To clarify, there will be a 3.8 branch.  It will be be opened around the 3.8 release date.  You don't need to fix mathlib before then.</p>",
        "id": 192424444,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1585676680
    },
    {
        "content": "<p>Done :) I'll wait for the 3.8 release then..</p>",
        "id": 192424847,
        "sender_full_name": "Anton Lorenzen",
        "timestamp": 1585676857
    }
]