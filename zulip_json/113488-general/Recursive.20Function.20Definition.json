[
    {
        "content": "<p>Hi,</p>\n<p>I'm trying to define a recursive function from natural numbers to reals: </p>\n<p>def f : ℕ → ℝ <br>\n| 0      := 1<br>\n| (n + 1) := f n + 1 / (f n)</p>\n<p>It gives me an error:<br>\n\"rec_fn_macro only allowed in meta definitions\"</p>\n<p>What does this mean, and what do I have to change to get it to work? </p>\n<p>Thanks!</p>",
        "id": 306573567,
        "sender_full_name": "Greg Zelevinsky",
        "timestamp": 1666923173
    },
    {
        "content": "<p>Try adding <code>noncomputable</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>I think that the inverse is causing some issue.</p>",
        "id": 306575824,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1666925761
    },
    {
        "content": "<p>oh cool ok yeah that works, haven't seen that before. </p>\n<p>Thanks!</p>",
        "id": 306575895,
        "sender_full_name": "Greg Zelevinsky",
        "timestamp": 1666925827
    },
    {
        "content": "<p>I am not sure why it is giving such a cryptic message.  This is how I got to the answer:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">f_aux</span> <span class=\"o\">(</span><span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">f_aux</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">f_aux</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">f_aux</span> <span class=\"n\">ℝ</span> <span class=\"c1\">-- now Lean says that you should add `noncomputable`.</span>\n</code></pre></div>",
        "id": 306575965,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1666925895
    },
    {
        "content": "<p>I think the cryptic message should just be understood to be an internal error in the VM compiler and noncomputability checker. In this case, given what I know about the internals, putting \"noncomputable\" on a recursive definition causes the equation compiler in use a different strategy and it's a sort of accidental workaround.</p>",
        "id": 306830045,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1667045675
    },
    {
        "content": "<p>Another workaround is the more insistent version <code>noncomputable!</code> if you run into a similar issue again.</p>",
        "id": 306830114,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1667045739
    },
    {
        "content": "<p>This is one of those things that would ideally be fixed, but almost all effort is being put into Lean 4 development.</p>",
        "id": 306830490,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1667045917
    },
    {
        "content": "<p>Kyle, thanks for the extra information!</p>\n<p>I was confused by the message, but once realized that the issue was the noncomputability of division, the solution was easy.</p>\n<p>Anyway, I agree that this is secondary with respect to the 3→4 change.</p>",
        "id": 306860430,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1667060042
    }
]