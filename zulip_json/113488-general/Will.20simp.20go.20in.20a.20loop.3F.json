[
    {
        "content": "<p>If I have two simp lemmas that are the inverse of each other, will simp go into a loop? For example:</p>\n<div class=\"codehilite\"><pre><span></span>@[simp] lemma mul_act : (g * h) • x = g • h • x :=\ngroup_action.mul g h x\n\n@[simp] lemma act_act : g • h • x = (g * h) • x :=\neq.symm $ group_action.mul g h x\n</pre></div>",
        "id": 124558352,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522726545
    },
    {
        "content": "<p>Why don't you try it? I think the answer is yes</p>",
        "id": 124558393,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1522726589
    },
    {
        "content": "<p>I tried it and it succeeded</p>",
        "id": 124558407,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522726659
    },
    {
        "content": "<p>oh, it went in a loop when the goal can't be closed</p>",
        "id": 124558449,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1522726698
    },
    {
        "content": "<p>I think you should think of <code>simp</code> lemmas as a way to decrease the complexity of your expressions. If they cancel each other, one of them must not be decreasing the complexity. Which one should you apply by name?</p>",
        "id": 124558451,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1522726715
    }
]