[
    {
        "content": "<p>Suppose I have two types <code>X Y : Type</code> and an equiv <code>e : equiv X Y</code>. And suppose I have <code>S : set X</code> and <code>T : set Y</code>. I want to say that <code>e</code> identifies <code>S</code> with <code>T</code>. Now I can say that <code>e.to_fun '' S = T</code>, but that doesn't seem very symmetrical. Does it make sense to have some sort of predicate that takes an <code>equiv</code> and two sets for this job?</p>",
        "id": 160000719,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551791011
    },
    {
        "content": "<p>I guess it depends on the API you write for this predicate</p>",
        "id": 160001536,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1551791726
    },
    {
        "content": "<p>Random related remark: I needed this when I was doing <code>group_equiv</code>; I wanted to prove that if <code>group_equiv G H</code> and <code>K</code> was a normal subgroup of <code>G</code> then <code>group_equiv G/K H/K'</code> where <code>K'</code> was the image of <code>K</code>. But it's not true in general that the image of a normal subgroup is a normal subgroup, so instead I had <code>K</code> a normal subgroup of <code>G</code> and proved <code>group_equiv G/K' H/K</code> where <code>K'</code> was defined to be the pre-image of <code>K</code>, which was known to be a normal subgroup.</p>",
        "id": 160026018,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1551809897
    },
    {
        "content": "<p>Use preimages. They're much easier.</p>",
        "id": 160026114,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1551809974
    }
]