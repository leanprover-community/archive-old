[
    {
        "content": "<p>I've never quite understood the <code>sync</code> error. Is it posible to get a Lean file with precisely one error in, which is <code>sync</code>?</p>",
        "id": 191640491,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585068798
    },
    {
        "content": "<p>Hum i try <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">category</span><span class=\"bp\">.</span><span class=\"n\">CommRing</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">category_theory</span><span class=\"bp\">.</span><span class=\"n\">functor_category</span> <span class=\"c1\">-- this transitively imports</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">category_theory</span><span class=\"bp\">.</span><span class=\"n\">types</span>\n<span class=\"n\">universes</span> <span class=\"n\">v</span> <span class=\"n\">u</span>\n<span class=\"c\">/-</span><span class=\"cm\">-</span>\n<span class=\"cm\">##  It&#39;s the group functor  Idem,</span>\n<span class=\"cm\">##  e1 × e2 = e1 e2 - (1-e1)(1-e2)</span>\n<span class=\"cm\">-/</span>\n<span class=\"kn\">structure</span> <span class=\"n\">Idem</span><span class=\"o\">(</span> <span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">e</span>  <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">certif</span> <span class=\"o\">:</span>  <span class=\"n\">e</span> <span class=\"bp\">*</span><span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"n\">e</span><span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span>   <span class=\"n\">Idem</span>\n<span class=\"kn\">section</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">ext</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">ext</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">g1</span> <span class=\"n\">g2</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">},</span> <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">→</span> <span class=\"n\">g1</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">g1</span> <span class=\"n\">g2</span><span class=\"o\">,</span>  <span class=\"c1\">--- it&#39;s ok ? just don&#39;t use Bracket ?</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">h1</span> <span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">g1</span><span class=\"o\">,</span>                                         <span class=\"c1\">---  difficult i have to analyse !</span>\n  <span class=\"n\">cases</span> <span class=\"n\">g2</span><span class=\"o\">,</span>\n  <span class=\"n\">congr</span> <span class=\"bp\">;</span> <span class=\"n\">try</span> <span class=\"o\">{</span> <span class=\"n\">assumption</span> <span class=\"o\">},</span>\n<span class=\"kn\">end</span>\n\n<span class=\"n\">def</span> <span class=\"n\">one</span>  <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">,</span>  <span class=\"n\">certif</span> <span class=\"o\">:=</span> <span class=\"n\">mul_one</span> <span class=\"mi\">1</span><span class=\"o\">}</span>\n<span class=\"kn\">instance</span>  <span class=\"o\">:</span> <span class=\"n\">has_one</span> <span class=\"o\">(</span><span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">one</span><span class=\"bp\">⟩</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">one_e</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"n\">def</span> <span class=\"n\">mul_map&#39;</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Idem</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Idem</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">g1</span> <span class=\"n\">g2</span><span class=\"o\">,</span> <span class=\"k\">begin</span>\n<span class=\"o\">{</span> <span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">),</span>   <span class=\"c1\">--- &quot; exact &quot;</span>\n  <span class=\"n\">certif</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n   <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"kn\">end</span><span class=\"o\">},</span>  <span class=\"c1\">-- if i put my mousse here i have sync error !   I forget &quot; exact &quot;  !</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 191664026,
        "sender_full_name": "orlando",
        "timestamp": 1585079827
    },
    {
        "content": "<p>I was hoping to get it as the only error in the Lean Messages window (click on Info View: Display Messages), i.e. have VS Code display 1 error (your code says it has 16 errors in the bottom left hand corner of VS Code)</p>",
        "id": 191664795,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585080198
    },
    {
        "content": "<p>okay i try to find other exemple <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 191665586,
        "sender_full_name": "orlando",
        "timestamp": 1585080673
    }
]