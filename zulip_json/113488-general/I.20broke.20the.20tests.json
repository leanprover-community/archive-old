[
    {
        "content": "<p>In an attempt to get <a href=\"https://github.com/leanprover-community/mathlib/issues/3716\">#3716</a> up and running again, I made an <code>irred-with-zero</code> branch of mathlib, which makes <code>with_zero</code> and <code>with_one</code> irreducible. I was surprised how little of mathlib broke with this: I <a href=\"https://github.com/leanprover-community/mathlib/commit/c19f8aada6fb6b19a33f3c740cec3e518f67c5c4\">only had to edit 7 files</a>. Continuous integration threw up a shock though -- mathlib built and linted fine, but <a href=\"https://github.com/leanprover-community/mathlib/runs/999101892\">I broke the tests</a>. What do I do now?</p>",
        "id": 207314317,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597783708
    },
    {
        "content": "<p>On further investigation, I claim that the tests have a bug in. <a href=\"https://github.com/leanprover-community/mathlib/blob/5d2256da224ed7dfc5c20eb64cffb417d19377c5/test/norm_cast.lean#L74\">This line here</a> is incorrect. The definition of <code>with_zero</code> in the <code>hidden</code> namespace on line 60 is the one being used here; the <code>has_zero</code> instance defined on line 66 will be, as <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> can confirm, called <code>hidden.has_zero</code>, and so line 74 is abusing the fact that <code>hidden.with_zero = with_zero</code>. Is this what the test is supposed to be testing? Can I \"fix\" this test?</p>",
        "id": 207347947,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597788324
    },
    {
        "content": "<p>I would guess that you should change it to say <code>hidden.with_zero.has_zero</code></p>",
        "id": 207348099,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597788429
    },
    {
        "content": "<p>after making the instance name be that</p>",
        "id": 207348108,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597788439
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/3859\">#3859</a> I just went with the Lean naming conventions :-/</p>",
        "id": 207348528,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597788805
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I kicked it on the queue</p>",
        "id": 207366710,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597807504
    }
]