[
    {
        "content": "<p>Is there some way to tell the linux scheduler that it should never allow Lean to freeze my system? I want Lean to use all the available juice it can get, but as soon as something else asks for attention, that should get higher prio.</p>",
        "id": 161128789,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1552982493
    },
    {
        "content": "<p>For example X should always be able to kill VScode</p>",
        "id": 161128801,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1552982510
    },
    {
        "content": "<p>Just renice it?</p>",
        "id": 161128872,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1552982557
    },
    {
        "content": "<p>Can this be automated?</p>",
        "id": 161128933,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1552982610
    },
    {
        "content": "<p>As you can guess... Lean just froze my desktop machine</p>",
        "id": 161128976,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1552982641
    },
    {
        "content": "<p>I have to routinely set the process priority for lean to \"below average\" on windows so it doesn't kill vscode responsiveness (on windows)</p>",
        "id": 161129203,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1552982860
    },
    {
        "content": "<p>Aaah, I guess <code>RightAlt</code> + <code>SysRq</code> + <code>f</code> is exactly what I need for these situations</p>",
        "id": 161129930,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1552983617
    },
    {
        "content": "<p>When this happens to me it's because my memory has been exhausted and the kernel is busy writing gigabytes to disk, and as a lazy defence I've <code>swapoff</code>'d the swap so the oom killer is forced to come in automatically. I think a more legit thing to do would be to <code>ulimit</code> the lean process, but I've never been bothered enough to do this---and recently I've bought a bucket of RAM so the problem's gone away</p>",
        "id": 161130582,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1552984442
    },
    {
        "content": "<p>I have 16 gigs of ram on the desktop I'm using now and twice recently Lean has taken it down when compiling mathlib. Do you have a bigger bucket?</p>\n<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> when I used to run big <code>magma</code> processes I used the <code>ulimit</code> trick. Maybe this is worth looking into.</p>",
        "id": 161134035,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1552987881
    },
    {
        "content": "<p>Might help: I was having Lean freezing issues on my linux box and I found that adding more swap space at least kept the system responsive enough that I could kill Lean.</p>",
        "id": 161450227,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1553263534
    },
    {
        "content": "<p>Yeah kevin Lean usage inspired me to 8gb -&gt; 32gb upgrade</p>",
        "id": 161499383,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1553303850
    },
    {
        "content": "<p>Lean has taken down my 16gb system three times in the last month, and this thing never normally crashes. I'll try bumping up swap. It's pretty hideous. I go from completely fine to essentially totally unresponsive instantly, and I can't ssh in and the lights on the keyboard stop working. Funnily enough I can still move my mouse cursor, very slowly, but clicks don't seem to register</p>",
        "id": 161516896,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1553332745
    },
    {
        "content": "<p>Why Lean needs so much RAM? I would have thought that having many CPU would be the crucial Lean speed factor</p>",
        "id": 161519470,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1553337026
    },
    {
        "content": "<p>I think it's a memory leak. I think every time it happened I was compiling mathlib -- I am making a few mathlib PR's now so I edit mathlib source and then recompile before I push. It has been a change in behaviour for me -- I did not usually make mathlib PR's until recently when I felt that the perfectoid project's <a href=\"https://github.com/leanprover-community/lean-perfectoid-spaces/tree/master/src/for_mathlib\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean-perfectoid-spaces/tree/master/src/for_mathlib\">for_mathlib directory</a> was getting a bit out of hand.</p>",
        "id": 161520519,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1553338797
    },
    {
        "content": "<p>But it's not the classic \"get slower, get slower, you know there's a problem, quick killall lean before they kill you\" thing, it's an instantaneous \"you are now screwed, things were working fine 1 second ago but now you just may as well reboot\"</p>",
        "id": 161520596,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1553338868
    },
    {
        "content": "<p>Yes, I've seen that too. But in this case I don't see how buying RAM could help</p>",
        "id": 161521613,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1553340522
    },
    {
        "content": "<p>My Lean process is currently using 45% of my GB RAM. That means its very risky to run two compiles at the same time.</p>",
        "id": 161624028,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553503477
    },
    {
        "content": "<p>I guess <code>leanpkg build -M 3072</code> might be helpful. That means that if I run two compiles in parallel, I will be sure to have 2GB left for my system.</p>",
        "id": 161624120,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553503619
    },
    {
        "content": "<p>Can the amount of memory for the lean server process be changed while the server is live? If so, we could have a dial for VScode where you can increase/decrease the amount of memory.</p>",
        "id": 161624248,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553503779
    },
    {
        "content": "<p>Is there an easy way to know the minimum amount of memory that Lean needs to compile current mathlib?</p>",
        "id": 161624305,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1553503807
    },
    {
        "content": "<p>There is a configuration setting for the memory limit in the vscode extension.  Any change requires a server restart though.  And this limit is only enforced cooperatively: the Lean server regularly checks if it uses more memory than the limit, and raises an exception if it exceeds the limit.</p>",
        "id": 161674270,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1553539233
    },
    {
        "content": "<p>And for manual compilation with <code>lean --make</code> I can run <code>ulimit</code> beforehand</p>",
        "id": 161674452,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1553539332
    },
    {
        "content": "<p>I can confirm that <code>RightAlt</code> + <code>SysRq</code> + <code>f</code> can unfreeze a box and kill Lean if it turns into a RAM-hoarder.</p>",
        "id": 162417753,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554288787
    },
    {
        "content": "<p>Why exactly does lean need so much memory in the first place?</p>",
        "id": 162419351,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1554290337
    },
    {
        "content": "<p>I don't know... this was on a broken project...</p>",
        "id": 162419371,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554290363
    },
    {
        "content": "<p>It was stuck parsing some line</p>",
        "id": 162419376,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554290370
    },
    {
        "content": "<p>If I compile mathlib it consumes like 4gb of ram. Does anyone know what is consuming most of that space? Is it proof terms?</p>",
        "id": 162419541,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1554290524
    }
]