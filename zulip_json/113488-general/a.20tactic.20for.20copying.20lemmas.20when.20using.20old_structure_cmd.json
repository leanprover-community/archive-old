[
    {
        "content": "<p>Do we have some automation available for copying lemmas from <code>X</code> to <code>Y</code>, when <code>Y extends X</code> with <code>old_structure_cmd</code>.</p>",
        "id": 234474687,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1618395761
    },
    {
        "content": "<p>I'd like to be able to list (or even collect automatically?) lemmas about <code>X</code>, and have corresponding lemmas about <code>Y</code> be built for me.</p>",
        "id": 234474785,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1618395812
    },
    {
        "content": "<p>At the moment, e.g. with <code>monoidal_functor</code>, we have lots of annoying <code>F.to_functor.map_comp</code>. <code>map_comp</code> isn't a structure field of <code>functor</code>, it's a lemma in terms of the actual field <code>map_comp'</code>, so I don't automatically get a version of it for <code>monoidal_functor</code>.</p>",
        "id": 234475117,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1618395934
    },
    {
        "content": "<p>It seems like a better solution here would be to register that dot notation should look in the <code>functor</code> namespace for lemmas if <code>monoidal_functor</code> doesn't have it</p>",
        "id": 234476371,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1618396495
    },
    {
        "content": "<p>Does the lemma apply if you write <code>functor.map_comp F</code>?</p>",
        "id": 234476410,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1618396515
    },
    {
        "content": "<p>Doesn't it need to do <code>functor.map_comp F.to_functor</code>?</p>",
        "id": 234478836,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618397786
    },
    {
        "content": "<p>But then that statement is about <code>F.to_functor</code> not <code>F</code>, so while defeq won't work for rewrites</p>",
        "id": 234478947,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618397869
    },
    {
        "content": "<p>No, it doesn't work with just <code>functor.map_comp F</code>.</p>",
        "id": 234483362,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1618400379
    }
]