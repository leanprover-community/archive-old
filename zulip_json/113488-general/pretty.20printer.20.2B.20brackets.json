[
    {
        "content": "<p><a href=\"/user_uploads/3121/lKDZYnKRPtGa8Td-4NxMTXdp/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/lKDZYnKRPtGa8Td-4NxMTXdp/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/lKDZYnKRPtGa8Td-4NxMTXdp/image.png\"></a></div><p>is this considered a bug or a feature?</p>",
        "id": 236908168,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619818980
    },
    {
        "content": "<p>Bug</p>",
        "id": 236913377,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1619822519
    },
    {
        "content": "<p>But I think it's a font rendering bug in webkit / blink</p>",
        "id": 236913461,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1619822557
    },
    {
        "content": "<p>I've seen it in doc-gen too</p>",
        "id": 236913480,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1619822566
    },
    {
        "content": "<p>I've also seen this sometimes. I think it usually only happens when coercion arrows are present.</p>",
        "id": 236913495,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1619822583
    },
    {
        "content": "<p>This is the \"random close-bracket in the wrong place\" bug I think?</p>",
        "id": 236913886,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1619822866
    },
    {
        "content": "<p>Some of my students see this bug <em>everywhere</em> and it's driving me crazy, especially since I can't reproduce it on any computer I can access to. I think fixing this should be very high priority but I don't see how to help without being able to reproduce.</p>",
        "id": 237139333,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620036681
    },
    {
        "content": "<p>is the second close bracket considered a bug?</p>",
        "id": 237139542,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620036806
    },
    {
        "content": "<p>because I see that all the time</p>",
        "id": 237139551,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1620036816
    },
    {
        "content": "<p>I think only the <code>)</code> in the blue box is the bug</p>",
        "id": 237139626,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620036847
    },
    {
        "content": "<p>Because the reading order has to backtrack vertically which isn't how reading is supposed to work</p>",
        "id": 237139659,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620036870
    },
    {
        "content": "<p>I see this bug a lot for <code>↥</code>, but it seems not to happen for <code>⇑</code> for me</p>",
        "id": 237139794,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620036964
    },
    {
        "content": "<p>Putting the cursor at the beginning of this line does it for me:<br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/0cc3cd54efb97332e973e0ff1ca94dbd486899eb/src/algebra/direct_sum_graded.lean#L584\">https://github.com/leanprover-community/mathlib/blob/0cc3cd54efb97332e973e0ff1ca94dbd486899eb/src/algebra/direct_sum_graded.lean#L584</a></p>",
        "id": 237139861,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620037007
    },
    {
        "content": "<p><a href=\"user_uploads/3121/7S_dDSWq895paWvJSk6bx-zx/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/3121/7S_dDSWq895paWvJSk6bx-zx/image.png\" title=\"image.png\"><img src=\"user_uploads/3121/7S_dDSWq895paWvJSk6bx-zx/image.png\"></a></div>",
        "id": 237139871,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620037018
    },
    {
        "content": "<p>This also reproduces it for me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.pointwise</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">↥</span><span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"bp\">+</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">↥</span><span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"bp\">+</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>  <span class=\"c1\">-- goal view is wonky at the sorry</span>\n</code></pre></div>",
        "id": 237140107,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620037175
    },
    {
        "content": "<p>I see no issue at all</p>",
        "id": 237142451,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620038512
    },
    {
        "content": "<p>in Eric's two examples</p>",
        "id": 237142546,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620038566
    },
    {
        "content": "<p>With what font?</p>",
        "id": 237144302,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620039711
    },
    {
        "content": "<p>This is a font / CSS issue I think</p>",
        "id": 237144308,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620039721
    },
    {
        "content": "<p>DevaVu sans mono</p>",
        "id": 237144446,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620039783
    },
    {
        "content": "<p>I see it with Consolas on Windows</p>",
        "id": 237144582,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620039858
    },
    {
        "content": "<p>The CSS specifies the indents in terms of \"ch\", the width of an <code>0</code>. In consolas, that character is considerably narrower than an <code>0</code>:<br>\n<a href=\"/user_uploads/3121/1tltKY9lqvApcV24cL-rU1UU/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/1tltKY9lqvApcV24cL-rU1UU/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/1tltKY9lqvApcV24cL-rU1UU/image.png\"></a></div>",
        "id": 237144852,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620040063
    },
    {
        "content": "<p>it's a font thing for sure; just installed dejavu sans mono and it's fixed itself<br>\n<a href=\"/user_uploads/3121/-9cpD2g_8FOaU6hWsU0Lb-e0/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/-9cpD2g_8FOaU6hWsU0Lb-e0/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/-9cpD2g_8FOaU6hWsU0Lb-e0/image.png\"></a></div>",
        "id": 237144868,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1620040074
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> do you think you could fix this issue now that we understood where it comes from?</p>",
        "id": 237145162,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620040230
    },
    {
        "content": "<p>Does anyone know a simple way to explain how to install DejaVu sans mono on Windows or Mac? I mean simple enough that students could understand.</p>",
        "id": 237145363,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620040367
    },
    {
        "content": "<p>its super easy on windows, just get the files, double click them and there's an install button</p>",
        "id": 237145397,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1620040389
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/Zhu6QETiY0dUFYeXUYu7p4dV/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Zhu6QETiY0dUFYeXUYu7p4dV/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/Zhu6QETiY0dUFYeXUYu7p4dV/image.png\"></a></div>",
        "id": 237145435,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1620040417
    },
    {
        "content": "<p><del>Here's a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>: <a href=\"/user_uploads/3121/e3kBXb5H9wIr6BmEEvh_Oc9b/bad.html\">bad.html</a></del> edit: i messed that up</p>",
        "id": 237145785,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620040618
    },
    {
        "content": "<p>Similarly on a mac. Download the zip file, unzip it, double click on a font file, and click \"install font\":<br>\n<a href=\"/user_uploads/3121/2ImrNW7ny9vZqRvZKtFOFPh2/Screen-Shot-2021-05-03-at-9.16.38-pm.png\">Screen-Shot-2021-05-03-at-9.16.38-pm.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/2ImrNW7ny9vZqRvZKtFOFPh2/Screen-Shot-2021-05-03-at-9.16.38-pm.png\" title=\"Screen-Shot-2021-05-03-at-9.16.38-pm.png\"><img src=\"/user_uploads/3121/2ImrNW7ny9vZqRvZKtFOFPh2/Screen-Shot-2021-05-03-at-9.16.38-pm.png\"></a></div>",
        "id": 237145837,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1620040651
    },
    {
        "content": "<p>Thanks Eric and Scott, I'll try to tell my students to try this.</p>",
        "id": 237146045,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620040801
    },
    {
        "content": "<p>If I change <code>ch</code> to <code>ex</code> in the CSS the problem goes away</p>",
        "id": 237146399,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620041014
    },
    {
        "content": "<p>Actual mwe copied out of vscode: <a href=\"/user_uploads/3121/lFdbsFII9nm3Qz7rI6eQb_i5/bad.html\">bad.html</a></p>",
        "id": 237146462,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620041045
    },
    {
        "content": "<p>Which is weird, because <code>ch</code> is supposedly the width of a <code>0</code>, and <code>ex</code> the width of an <code>x</code>... Which are the same in a monospace font</p>",
        "id": 237146497,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620041073
    },
    {
        "content": "<p>Your bad example displays fine here. Maybe I don't have that font and my browser falls back to a good one.</p>",
        "id": 237146772,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620041255
    },
    {
        "content": "<p>i also thought <code>ex</code> was width, but just googled and it seems <code>ex</code> is height of <code>x</code> (which is the same, but not the same as height of 0? unsure)</p>",
        "id": 237146783,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1620041271
    },
    {
        "content": "<p>not sure if Linux has consolas Patrick</p>",
        "id": 237146793,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1620041278
    },
    {
        "content": "<p>Ah, in that case my proposed fix is not a justified one</p>",
        "id": 237149276,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620042816
    },
    {
        "content": "<p>The autoindenting CSS strikes again</p>",
        "id": 237720247,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620331496
    },
    {
        "content": "<p>The problem is that get getting the pretty indenting in CSS to work is a little hacky. I think that the correct approach would be to take full control of newlines and so on based on the width of the view, but I think that would be quite a lot of work.</p>",
        "id": 237720629,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620331680
    },
    {
        "content": "<p>Presumably the text reflowing would be a JavaScript job within the view window</p>",
        "id": 237720770,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620331735
    },
    {
        "content": "<p>But I agree, that sounds like a lot of work</p>",
        "id": 237720814,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620331765
    },
    {
        "content": "<p>Ideally no. Because it breaks the abstraction of Lean sending widgety HTML.</p>",
        "id": 237720838,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620331782
    },
    {
        "content": "<p>But practically yes do it with javascript</p>",
        "id": 237720856,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620331794
    },
    {
        "content": "<p>Oh, I assumed the goal view was special-cased</p>",
        "id": 237720954,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620331832
    },
    {
        "content": "<p>No it's all done by lean</p>",
        "id": 237720976,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620331844
    },
    {
        "content": "<p>Alternatively: output every character in the goal view in its own span with  min-width set to 1ch</p>",
        "id": 237721020,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620331869
    },
    {
        "content": "<p>But that increases the textual size of the html by an order of magnitude</p>",
        "id": 237721060,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620331891
    },
    {
        "content": "<p>The dream of widgets was that absolutely all of the presentation code would be in Lean, so you wouldn't have to ever worry about javascript. But there are lots of places where that breaks so I don't think it's worth holding on to that abstraction in the cases where it is clearly awkward.</p>",
        "id": 237721093,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620331913
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/pretty.20printer.20.2B.20brackets/near/237721060\">said</a>:</p>\n<blockquote>\n<p>But that increases the textual size of the html by an order of magnitude</p>\n</blockquote>\n<p>I suspect this would actually have ok performance.</p>",
        "id": 237721284,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620331992
    },
    {
        "content": "<p>Maybe it's sufficient to put a span around every word with min-width proportional to its number of characters</p>",
        "id": 237721469,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620332085
    },
    {
        "content": "<p>yeah that might work</p>",
        "id": 237721482,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620332095
    },
    {
        "content": "<p>might get some clipping</p>",
        "id": 237721494,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620332099
    },
    {
        "content": "<p>Assuming we don't wrap within words right now</p>",
        "id": 237721509,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620332106
    },
    {
        "content": "<p>Min-width shouldn't clip</p>",
        "id": 237721524,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620332112
    },
    {
        "content": "<p>It should just insert extra space sometimes</p>",
        "id": 237721574,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620332129
    },
    {
        "content": "<p>yeah an alternative might be to just add some extra space whenever there is a grouping in the pretty-printed sexpr</p>",
        "id": 237721677,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620332168
    },
    {
        "content": "<p>The styles to fiddle with are in <a href=\"https://github.com/leanprover-community/mathlib/blob/9c86e38141b94bcd23665717f26c1da1622c59a7/src/tactic/interactive_expr.lean#L157\">https://github.com/leanprover-community/mathlib/blob/9c86e38141b94bcd23665717f26c1da1622c59a7/src/tactic/interactive_expr.lean#L157</a></p>",
        "id": 237722316,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620332485
    },
    {
        "content": "<p>Isn't there at least a temporary fix swapping <code>ex</code> and <code>ch</code> or whatever?</p>",
        "id": 237722993,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620332811
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> sorry why did setting it as <code>ex</code> work?</p>",
        "id": 237723292,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620332973
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/pretty.20printer.20.2B.20brackets/near/237146399\">said</a>:</p>\n<blockquote>\n<p><del>If I change <code>ch</code> to <code>ex</code> in the CSS the problem goes away</del></p>\n</blockquote>\n<p>Why was this crossed out sorry?</p>",
        "id": 237723405,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620333023
    },
    {
        "content": "<p>Because it is a bad idea</p>",
        "id": 237723643,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620333132
    },
    {
        "content": "<p><code>ex</code> is for vertical spacing</p>",
        "id": 237723671,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620333145
    },
    {
        "content": "<p>So for context, <span class=\"user-mention\" data-user-id=\"235513\">@Daniel Fabian</span>  spotted a trick where you can emulate Wadler-style pretty printing in CSS by setting the text indentation to be a negative number and padding to be minus that number, then if that block can't fit on one line, it will linebreak with an apparent indent. But what is happening here (which I unfortunately didn't observe because I have a all-unicode monospaced font) is some width calculating maths in the browser is messing up and it is linebreaking because of the different-width characters.</p>",
        "id": 237723730,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620333179
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/pretty.20printer.20.2B.20brackets/near/237723671\">said</a>:</p>\n<blockquote>\n<p><code>ex</code> is for vertical spacing</p>\n</blockquote>\n<p>But did it actually fix the problem?</p>",
        "id": 237723805,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620333200
    },
    {
        "content": "<p>Maybe we could use px</p>",
        "id": 237723822,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620333210
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>  how do I use your bad.html mwe?</p>",
        "id": 237724148,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620333338
    },
    {
        "content": "<p>should it just render bad or do I need to change the width of the viewport?</p>",
        "id": 237724257,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620333376
    },
    {
        "content": "<p>It should just render badly</p>",
        "id": 237724320,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620333405
    },
    {
        "content": "<p>In chrome?</p>",
        "id": 237724356,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620333419
    },
    {
        "content": "<p>Anything other than 1ch will not indent right when it's actually supposed to wrap</p>",
        "id": 237724400,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620333436
    },
    {
        "content": "<p>Chrome on windows</p>",
        "id": 237724413,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620333444
    },
    {
        "content": "<p>Do you know if there are any linux fonts where this bug happens?</p>",
        "id": 237725338,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620333893
    },
    {
        "content": "<p>got it</p>",
        "id": 237725459,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620333947
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>  please could you have a go at changing the <code>ex</code> → <code>em</code>?</p>",
        "id": 237725849,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620334087
    },
    {
        "content": "<p>never mind it breaks for me</p>",
        "id": 237726024,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620334174
    },
    {
        "content": "<p>wow</p>",
        "id": 237726036,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620334180
    },
    {
        "content": "<p>This bug is mad</p>",
        "id": 237735538,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620337509
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> please could you try the bad example with <code>0.9ch</code>?</p>",
        "id": 237735846,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620337656
    },
    {
        "content": "<p>The bug is easier to reproduce another way</p>",
        "id": 237736040,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620337782
    },
    {
        "content": "<p>Change 1ch to 2ch</p>",
        "id": 237736046,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620337790
    },
    {
        "content": "<p>where?</p>",
        "id": 237736060,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620337800
    },
    {
        "content": "<p>And instead of using the weird arrow character that is too narrow, compare a one char prefix with a two char prefix</p>",
        "id": 237736127,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620337821
    },
    {
        "content": "<p>Everywhere</p>",
        "id": 237736138,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620337827
    },
    {
        "content": "<p>The cause is that <code>\\u-|</code> is less than 1ch wide</p>",
        "id": 237736183,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620337855
    },
    {
        "content": "<p>I can give you a better repro tomorrow</p>",
        "id": 237736422,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620338028
    },
    {
        "content": "<p>no need I've found a small one</p>",
        "id": 237736579,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338112
    },
    {
        "content": "<p>Did you find the ascii-only repro?</p>",
        "id": 237736968,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620338309
    },
    {
        "content": "<p>Yeah you get it whenever the <del>text-indent</del> minus text-indent is <del>lower</del> greater than the minwidth char</p>",
        "id": 237737020,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338340
    },
    {
        "content": "<p>so if you use a non-monospace font then you get it p quickly</p>",
        "id": 237737042,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338355
    },
    {
        "content": "<p>Right, but you can get it for monospace ascii too</p>",
        "id": 237737085,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620338375
    },
    {
        "content": "<p>Yes by setting it to <code>2ch</code></p>",
        "id": 237737122,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338397
    },
    {
        "content": "<p>since that is a greater width than the narrowest char</p>",
        "id": 237737193,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338418
    },
    {
        "content": "<p>That sounds like the reverse of what you said above</p>",
        "id": 237737317,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620338464
    },
    {
        "content": "<p>text indent is negative</p>",
        "id": 237737352,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338484
    },
    {
        "content": "<p>ygwim</p>",
        "id": 237737402,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338517
    },
    {
        "content": "<p>So the quick-and-dirty solution is to set it to use <code>0.9ch</code> or whatever width these offending chars are</p>",
        "id": 237737515,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338567
    },
    {
        "content": "<p>maybe just set it as 0.5ch</p>",
        "id": 237737534,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338580
    },
    {
        "content": "<p>and then the quest begins to find a way of indenting stuff that doesn't require this hack</p>",
        "id": 237737609,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338614
    },
    {
        "content": "<p>in the first place</p>",
        "id": 237737632,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338629
    },
    {
        "content": "<p>0.5 makes the line wrapping look a little weird though</p>",
        "id": 237737925,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620338779
    },
    {
        "content": "<p>what is the biggest number you can get away with?</p>",
        "id": 237737987,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338817
    },
    {
        "content": "<p>I think that the main pain point is windows users with consolas</p>",
        "id": 237738005,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338829
    },
    {
        "content": "<p><code>\\_l</code> is pretty darn narrow</p>",
        "id": 237738014,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620338833
    },
    {
        "content": "<p>Frankly just putting coe_sort in a 1ch box would fix all the problems I actually see often</p>",
        "id": 237738167,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620338901
    },
    {
        "content": "<p>Ok maybe let's do that for now, and a few other common killers</p>",
        "id": 237738297,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620338953
    },
    {
        "content": "<p>I'll have another go tomorrow</p>",
        "id": 237739387,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1620339543
    },
    {
        "content": "<p>just to make everything even more annoying, this can even happen with DejaVu Sans Mono depending on the screen resolution and stuff (if I make the widget screen-wide, it goes away but that's clearly undesirable :b there's some other wider element way above in the goal view,  and for some reason it doesn't allow this to be wider because of it)</p>\n<p><a href=\"/user_uploads/3121/h5idSy7Ctigo5W07OJv00-H4/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/h5idSy7Ctigo5W07OJv00-H4/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/h5idSy7Ctigo5W07OJv00-H4/image.png\"></a></div><p>(<code>polynomial_galois_group.lean:243</code>)</p>",
        "id": 238404129,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1620780639
    },
    {
        "content": "<p>I actually put my info view as a horizontal split instead, so below my code rather than beside it, for this sort of reason, I find it far easier to read that way even if having less lines of the source code visible is occasionally annoying.</p>",
        "id": 238406811,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1620782577
    },
    {
        "content": "<p>Eric, that image doesn't seem to show the same bug</p>",
        "id": 238435570,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620806184
    },
    {
        "content": "<p>I think that's working as intended, or at least could be construed to be; unlike the original report, it's not actively breaking the reading order</p>",
        "id": 238435677,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620806257
    }
]