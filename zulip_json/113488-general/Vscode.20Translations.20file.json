[
    {
        "content": "<p>Dear all I am cleaning up the vscode translations file. I've removed all of the accents which are rejected by Lean. Are there any shortcuts that people find they mistype frequently or which stop a useful character from being corrected?<br>\nEg I often write \"\\de\" and have it corrected to \"\\dei\" = \"ϯ\" instead of \"\\delta\". Would people also be interested in having two letter shortcuts for all of the lower case greek letters? Ie \"\\ta\" corrects to tau and so on.</p>",
        "id": 154843392,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547131579
    },
    {
        "content": "<p>It would be nice if <code>\\C</code> was ℂ</p>",
        "id": 154845160,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1547133032
    },
    {
        "content": "<p>lambda should have a one letter command (other than <code>G</code> which makes no sense), any suggestions?</p>",
        "id": 154869375,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547152555
    },
    {
        "content": "<p>maybe <code>\\l</code> for lambda and <code>\\&lt;-</code> for left arrow</p>",
        "id": 154869466,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547152597
    },
    {
        "content": "<p>I agree that all greek should be one or two letters</p>",
        "id": 154869539,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547152656
    },
    {
        "content": "<p><code>\\e</code> should be epsilon not equal</p>",
        "id": 154869649,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547152729
    },
    {
        "content": "<p><code>\\q</code> is theta in mathematica, and a black box in lean (not so useful)</p>",
        "id": 154869706,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547152784
    },
    {
        "content": "<p><code>\\p</code> could be pi instead of that arrow</p>",
        "id": 154869785,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547152827
    },
    {
        "content": "<p>I use <code>\\l</code> a lot in do notation.</p>",
        "id": 154872142,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547154795
    },
    {
        "content": "<p>I think people in general use lambda more than <code>&lt;-</code></p>",
        "id": 154872276,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1547154892
    },
    {
        "content": "<p>there's also <code>rw \\l</code> which might be more common than lambda depending on style</p>",
        "id": 154872708,
        "sender_full_name": "Reid Barton",
        "timestamp": 1547155225
    },
    {
        "content": "<p>Another consideration though is ending the abbreviation. I'm not sure whether VSCode works the same way but if I want to rewrite with the reverse of a hypothesis with name that happens to start with <code>e</code>, I would like to type <code>rw \\le...</code>, but that gets processed as the less-than-or-equal operator</p>",
        "id": 154872843,
        "sender_full_name": "Reid Barton",
        "timestamp": 1547155324
    },
    {
        "content": "<p>usually I put a space after a lambda but not necessarily after a &lt;-, so switching them would be an improvement in that case</p>",
        "id": 154872958,
        "sender_full_name": "Reid Barton",
        "timestamp": 1547155431
    },
    {
        "content": "<p>mathlib style puts a space between <code>&lt;-</code> and the lemma anyway</p>",
        "id": 154874267,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547156416
    },
    {
        "content": "<p>if left arrow is so important, any votes for <code>\\-</code> for left arrow? Currently it looks like it makes a nbsp</p>",
        "id": 154874331,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547156494
    },
    {
        "content": "<p><code>\\c</code> is currently <code>⌜</code> which is a little useless.</p>",
        "id": 154875045,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547157128
    },
    {
        "content": "<p>Also maybe <code>\\ss</code> for <code>⊆</code>  instead of <code>ß</code></p>",
        "id": 154875133,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547157240
    },
    {
        "content": "<p><code>\\c</code> could be chi</p>",
        "id": 154875645,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547157712
    },
    {
        "content": "<p><code>\\i</code> for <code>⁻¹</code> instead of <code>∩</code>?</p>",
        "id": 154875797,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547157828
    },
    {
        "content": "<p><code>\\n</code> should be <code>¬ </code> not <code>∋</code></p>",
        "id": 154875916,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547157915
    },
    {
        "content": "<p><code>\\/</code> could be <code>\\or</code>, is that too tricky?</p>",
        "id": 154876024,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547158006
    },
    {
        "content": "<p><code>\\v</code> doesn't have a translation.</p>",
        "id": 154876054,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547158033
    },
    {
        "content": "<p>down arrow? Then <code>\\d</code> can be delta</p>",
        "id": 154876077,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547158058
    },
    {
        "content": "<p>I guess down arrow doesn't really matter</p>",
        "id": 154876088,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547158071
    },
    {
        "content": "<p>I don't want to change too many of the ones that are in use but already assigned.</p>",
        "id": 154876147,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547158099
    },
    {
        "content": "<p>\\v = nu?</p>",
        "id": 154876173,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547158135
    },
    {
        "content": "<p>kind of abusive but <code>\\n</code> is taken</p>",
        "id": 154876185,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547158151
    },
    {
        "content": "<p>I've added 2 letter translations for each of the greek letters</p>",
        "id": 154876202,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547158177
    },
    {
        "content": "<p>Was thinking <code>\\v</code> could be <code>\\or</code></p>",
        "id": 154876211,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547158190
    },
    {
        "content": "<p>aha</p>",
        "id": 154876218,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547158195
    },
    {
        "content": "<p>\\D and \\G are greek capitals?</p>",
        "id": 154876290,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547158233
    },
    {
        "content": "<p>The current <code>\\GD</code> and <code>\\Gd</code> etc is annoying to type</p>",
        "id": 154876316,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547158262
    },
    {
        "content": "<p>\\L = Lambda</p>",
        "id": 154876425,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547158338
    },
    {
        "content": "<p>overwriting \"Ł\" with \"Λ\"</p>",
        "id": 154876493,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547158414
    },
    {
        "content": "<p>I certainly use big lambda more than polish L in maths</p>",
        "id": 154876573,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547158457
    },
    {
        "content": "<p>I see that's the only abbrev for polish L, maybe it can relocate to <code>\\L/</code></p>",
        "id": 154876644,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547158523
    },
    {
        "content": "<p><code>\\m</code> = mu, I don't know what that m-eq thing is</p>",
        "id": 154876815,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547158668
    },
    {
        "content": "<p>Can we have <code>\\ </code> = lambda? Or is <code>\\</code>-space impossible to assign in VScode? (It is even sort of mnemonic...)</p>",
        "id": 154899107,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547190988
    },
    {
        "content": "<p>well <code>\\;</code> is space :p</p>",
        "id": 154900307,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547192891
    },
    {
        "content": "<p>I would expect that to be unicode THIN SPACE, if that exists (-; Which I think it does. But that is just my LaTeX intuition ported to VScode. And that port might not be <em>lawful</em></p>",
        "id": 154900384,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547193043
    },
    {
        "content": "<p>Patrick just vetoed space.  <code>, </code> needs to remain <code>, </code></p>",
        "id": 154901043,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1547193961
    },
    {
        "content": "<p>Fair enough... but just like others need to fix their OS, he ought to fix his keyboard layout <span class=\"emoji emoji-1f61c\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 154901100,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547194016
    },
    {
        "content": "<p>One thing i found accidentally, was \\&lt;&gt; will do the same as: \\&lt; \\&gt;, but that neither \\f&lt;&gt; nor \\f&lt;f&gt; will do the same as \\f&lt; \\f&gt;, I looked a bit through the translations but didn't find where the \\&lt;&gt; magic was coming from</p>",
        "id": 155002027,
        "sender_full_name": "matt rice",
        "timestamp": 1547331565
    },
    {
        "content": "<p>I don't know if this belongs in the translations file... but I wouldn't mind if I could type <code>\\copyright</code> and this would expand to the header that goes to the top of every Lean file. (If possible with the correct year filled in.)<br>\nOf course I can just copy it from another file... but this would be a nice little feature.<br>\nPriority: very low</p>",
        "id": 155075387,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547462464
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> Something like this? <a href=\"https://github.com/leanprover/mathlib/pull/589\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/589\">https://github.com/leanprover/mathlib/pull/589</a></p>",
        "id": 155075895,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1547463103
    },
    {
        "content": "<p>nice</p>",
        "id": 155076478,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1547463820
    },
    {
        "content": "<p>Awesome!</p>",
        "id": 155077548,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547465123
    },
    {
        "content": "<p>Summary  of my proposed changes:<br>\n- <code>\\L</code> is <code>Λ</code> instead of <code>Ł</code><br>\n- <code>\\G</code> is <code>Γ</code><br>\n- <code>\\p</code>is <code>Π</code><br>\n- <code>\\C</code> is <code>ℂ</code> instead of <code>∁</code><br>\n- <code>\\c</code> is <code>χ</code><br>\n- <code>\\v</code> is <code>∨</code><br>\n- <code>\\-</code> is <code>⁻¹</code> instead of a space.<br>\n- <code>\\n</code> is <code>¬</code><br>\n- <code>\\ss</code> is <code>⊆</code><br>\n- <code>\\m</code> is <code>μ</code><br>\nAll greek letters have a 2-space shortcut. Eg sigma is <code>\\si</code>, omega is <code>\\om</code> etc.</p>\n<p>All accented characters have been removed except </p>\n<div class=\"codehilite\"><pre><span></span>À Á Â Ã Ä Å Æ Ç È É Ê Ë Ì Í Î Ï\nÐ Ñ Ò Ó Ô Õ Ö    Ø Ù Ú Û Ü Ý Þ\nà á â ã ä å æ ç è é ê ë ì í î ï\nð ñ ò ó ô õ ö   ø ù ú û ü ý þ ÿ\nŁ\n</pre></div>\n\n\n<p>(so we can still use important keywords like \"Hölzl\")</p>",
        "id": 155082207,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547470736
    },
    {
        "content": "<p>Did we decide something for \\l giving lambda or left arrow?</p>",
        "id": 155089894,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1547478184
    },
    {
        "content": "<p>I'd prefer not to change it from left arrow, since presumably anyone who writes tactics uses it a lot.</p>",
        "id": 155090148,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1547478389
    },
    {
        "content": "<p>everybody use left arrow a lot, it's also used in rewrite. If we change we also need a nice shortcut for left arrow</p>",
        "id": 155090192,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1547478430
    },
    {
        "content": "<p><code>\\l</code>for lambda is contentious so I just kept it as is. In this PR I don't want to change the translations file in such a way that could potentially make things worse for some users.</p>",
        "id": 155090639,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547478821
    },
    {
        "content": "<p>Some unsupported notations I have considered using in the future are<br>\n ˇ caron, ␣ vispace, ˅ down , ˄ up, ⅅ Dd, ⅆ dd, ⅇ ee, ⅈ ii, ⅉ jj.<br>\nThe intended use is that ⅈ designates the complex number i, ⅇ designates the<br>\nbase of the natural log, ⅆ is the binder for integration, etc.</p>\n<p>I have experimented with using accents as operators.  For example, the U+0304 bar accent is particularly useful.</p>\n<p>Will Lean-emacs remain compatible with VSCode for those of us that switch back and forth?</p>",
        "id": 155130903,
        "sender_full_name": "Thales",
        "timestamp": 1547509907
    },
    {
        "content": "<p>The emacs and VSCode lean modes use the same translations file, so any change to translations.json should affect both</p>",
        "id": 155133461,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547512296
    },
    {
        "content": "<p>I'm not sure if the cocalc version uses the same file</p>",
        "id": 155133513,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547512326
    },
    {
        "content": "<p>We should also make sure to PR modifications to TPIL and the reference manual (and mathlib doc)</p>",
        "id": 155152390,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1547539101
    },
    {
        "content": "<blockquote>\n<p>The emacs and VSCode lean modes use the same translations file, so any change to translations.json should affect both</p>\n</blockquote>\n<p>Unfortunately this is not at all the case.  The vscode extension, the emacs mode, cocalc, the javascript version, they all use their own <em>copy</em> of the translations.  The <code>translations.json</code> file was originally exported from the emacs mode two years ago.  To my knowledge, none of the improvements in the vscode extension have been propagated to the other editor plugins.</p>",
        "id": 155153866,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1547541223
    },
    {
        "content": "<p>I still type <code>\\lam</code> <span class=\"emoji emoji-1f937\" title=\"shrug\">:shrug:</span></p>",
        "id": 155153913,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1547541257
    },
    {
        "content": "<p>But I'm definitely open to unifying this</p>",
        "id": 155153921,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1547541294
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> Have your changes already been merged?</p>",
        "id": 155354302,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547747304
    },
    {
        "content": "<p>If not, could you change the translation of <code>\\functor</code> (and prefixes of that) back to the old symbol?</p>",
        "id": 155354343,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547747349
    },
    {
        "content": "<p>The old symbol is <code>⇒</code></p>",
        "id": 155354389,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547747389
    },
    {
        "content": "<p>His changes have already been merged in <a href=\"https://github.com/leanprover/vscode-lean/pull/107\" target=\"_blank\" title=\"https://github.com/leanprover/vscode-lean/pull/107\">#107</a>, but your suggestion wouldn't be hard to implement.</p>",
        "id": 155354418,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1547747402
    },
    {
        "content": "<p>Sure, I just wasn't aware what the status was. Otherwise it could go into that PR.</p>",
        "id": 155354511,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547747448
    },
    {
        "content": "<p>So now we have to create a new one.</p>",
        "id": 155354517,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547747455
    },
    {
        "content": "<p>I'm not seeing anything related to <code>\\functor</code> changed in the diff though?</p>",
        "id": 155354642,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1547747552
    },
    {
        "content": "<p><a href=\"https://github.com/EdAyers/vscode-lean/commit/842282b9b96e91ddef3b1eeec759bb03c377f6b8#diff-7c2385f0b8db521fe81e3d20489e5f12\" target=\"_blank\" title=\"https://github.com/EdAyers/vscode-lean/commit/842282b9b96e91ddef3b1eeec759bb03c377f6b8#diff-7c2385f0b8db521fe81e3d20489e5f12\">Here's the diff</a>. In the current version of the extension, if I complete <code>\\functor</code> I get <code>⥤</code>. If I search the diff for that symbol, I see it both in the old version and the new version.</p>",
        "id": 155354707,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1547747618
    },
    {
        "content": "<p>The symbol you pasted above as the \"old symbol\" ⇒ is currently <code>\\Longrightarrow</code>. </p>\n<p>I guess this also used to be under <code>\\functor</code> but that was changed by <a href=\"https://github.com/leanprover/vscode-lean/commit/d3988d9fae1ab4a7e4785486a08c5eddcd33c575\" target=\"_blank\" title=\"https://github.com/leanprover/vscode-lean/commit/d3988d9fae1ab4a7e4785486a08c5eddcd33c575\">your commit in August</a>.</p>\n<p>OK, so I think I finally understand. You want to revert that change from August, not anything done by Ed.</p>",
        "id": 155354777,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1547747651
    },
    {
        "content": "<p>Exactly. Sorry if I was confusing.</p>",
        "id": 155355703,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547748505
    },
    {
        "content": "<p>Because that symbol was locked into core, but was recently liberated.</p>",
        "id": 155355731,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547748533
    },
    {
        "content": "<p>I made a PR with this change. <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span></p>",
        "id": 155356269,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547749059
    },
    {
        "content": "<p>Should we maybe wait until mathlib works with that Lean version?</p>",
        "id": 155356868,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1547749616
    },
    {
        "content": "<p>Yes, that is probably a good idea.</p>",
        "id": 155356990,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547749736
    },
    {
        "content": "<p>How far are we from that moment?</p>",
        "id": 155357006,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547749754
    },
    {
        "content": "<p>As far as I can tell we're just waiting on 3.4.2 to be officially released. Then I'll PR the 3.4.2 branch in community mathlib which currently works with nightly.</p>",
        "id": 155357102,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1547749821
    },
    {
        "content": "<p>We could switch to nightlies earlier, I guess.</p>",
        "id": 155357123,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1547749841
    },
    {
        "content": "<p>I think so</p>",
        "id": 155358522,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1547750984
    }
]