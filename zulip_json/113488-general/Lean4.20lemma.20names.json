[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> Unless I misunderstood, in Pittsburgh you told us there was not yet a naming convention for lemma names in Lean 4. But <a href=\"https://github.com/leanprover/lean4/commit/db3d9c9284dfb9b27dfa17214d7c3c2ce7409f08\" target=\"_blank\" title=\"https://github.com/leanprover/lean4/commit/db3d9c9284dfb9b27dfa17214d7c3c2ce7409f08\">https://github.com/leanprover/lean4/commit/db3d9c9284dfb9b27dfa17214d7c3c2ce7409f08</a> suggests this is no longer true. Do you have any comment here? My understanding was that we could hope to keep lean 3 underscore separated names.</p>",
        "id": 188365948,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581934183
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> It's not something we have explicitly decided on yet, at least. We should probably start that discussion by now.</p>",
        "id": 188366321,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1581934547
    },
    {
        "content": "<p>Great! Can I respectfully suggest another discussion topic that seems timely? As a user and teacher using Lean, it would be nice if <code>intro</code> and <code>cases</code> were the powerfull <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/tactic/rcases.lean#L391-L440\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/tactic/rcases.lean#L391-L440\">mathlib versions</a> or if it were possible for mathlib to completely replace the core lib <code>intro</code> and <code>cases</code> without having a different name (and without hacks).</p>",
        "id": 188368999,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581937150
    },
    {
        "content": "<p>One problem is that <code>cases</code> has an incompatible syntax with <code>rcases</code>, so if we replace it then we will need to keep <code>cases_old</code> around or change the formatting everywhere</p>",
        "id": 188370371,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1581938516
    },
    {
        "content": "<p>Or we make the parser just a bit more complex to figure out which of the two syntaxes is used. Because I think they can be distinguished.</p>",
        "id": 188370872,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1581939001
    },
    {
        "content": "<p>My hope is it's not too late to change everywhere. I expect there are currently very few proofs using the interactive cases tactic in Lean 4.</p>",
        "id": 188374119,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581942534
    },
    {
        "content": "<p>(if any)</p>",
        "id": 188374149,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581942570
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Lean4.20lemma.20names/near/188368999\" title=\"#narrow/stream/113488-general/topic/Lean4.20lemma.20names/near/188368999\">said</a>:</p>\n<blockquote>\n<p>or if it were possible for mathlib to completely replace the core lib <code>intro</code> and <code>cases</code> without having a different name (and without hacks).</p>\n</blockquote>\n<p>That version sounds reasonable. It's the same customization story we want to have for other parts of the language (commands, terms, ...) as well.</p>",
        "id": 188375105,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1581943485
    },
    {
        "content": "<p>Indeed, that would be consistent with everything else.</p>",
        "id": 188375196,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581943525
    },
    {
        "content": "<p>And that would be the most flexible solution, as planned with the whole Lean 4 story.</p>",
        "id": 188375215,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1581943555
    }
]