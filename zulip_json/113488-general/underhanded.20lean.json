[
    {
        "content": "<p>wow, I didn't expect this to work:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">open</span> <span class=\"n\">lean</span><span class=\"bp\">.</span><span class=\"n\">parser</span> <span class=\"n\">interactive</span> <span class=\"n\">interactive</span><span class=\"bp\">.</span><span class=\"n\">types</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">user_command</span><span class=\"o\">]</span> <span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">my_print</span> <span class=\"o\">(</span><span class=\"bp\">_</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"err\">$</span> <span class=\"n\">tk</span> <span class=\"s2\">&quot;#print&quot;</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">lean</span><span class=\"bp\">.</span><span class=\"n\">parser</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"n\">tk</span> <span class=\"s2\">&quot;axioms&quot;</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">ident</span> <span class=\"err\">$</span><span class=\"bp\">&gt;</span> <span class=\"n\">trace</span> <span class=\"s2\">&quot;totally ok&quot;</span> <span class=\"o\">()</span><span class=\"bp\">.</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">user_command</span><span class=\"o\">]</span> <span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">my_def</span> <span class=\"o\">(</span><span class=\"bp\">_</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"err\">$</span> <span class=\"n\">tk</span> <span class=\"s2\">&quot;def&quot;</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">lean</span><span class=\"bp\">.</span><span class=\"n\">parser</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"n\">ident</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">tk</span> <span class=\"s2\">&quot;:&quot;</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">texpr</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">tk</span> <span class=\"s2\">&quot;:=&quot;</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">ident</span> <span class=\"err\">$</span><span class=\"bp\">&gt;</span> <span class=\"n\">trace</span> <span class=\"s2\">&quot;looks good to me&quot;</span> <span class=\"o\">()</span><span class=\"bp\">.</span>\n\n<span class=\"n\">def</span> <span class=\"n\">contradiction</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"o\">:=</span> <span class=\"n\">sure</span> <span class=\"c1\">-- looks good to me</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">axioms</span> <span class=\"n\">contradiction</span> <span class=\"c1\">-- totally ok</span>\n</pre></div>\n\n\n<p>Apparently you can override basically all lean command tokens, including <code>section</code>, <code>namespace</code>, <code>def</code> and <code>end</code></p>",
        "id": 152579911,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1545875091
    },
    {
        "content": "<p>Yep<br>\nAt one point I tried a sneaky 'begin' override, but the problem is you can never close a block you open</p>",
        "id": 152597048,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1545909531
    }
]