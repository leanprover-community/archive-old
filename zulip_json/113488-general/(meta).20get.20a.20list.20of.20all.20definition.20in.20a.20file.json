[
    {
        "content": "<p>Hi, is it possible in meta-programming to get a list of all (non-meta) definitions in a file?</p>",
        "id": 132130403,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1534274177
    },
    {
        "content": "<p>Yes. There are three parts to this: listing (or folding over) the visible definitions, determining that they are from the current file and determining whether they are definitions.</p>",
        "id": 132130541,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1534274328
    },
    {
        "content": "<p>I guess the hard part is the first then. I browsed thorough tactic.lean and didn't find anything interesting.</p>",
        "id": 132130754,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1534274554
    },
    {
        "content": "<p>In <code>init.meta.environment</code>, you can find <code>environment.fold</code>. It doesn't give you a list but it lets you iterate over all the definitions of a file and accumulate them. <code>get_env</code> gives you the current environment and <code>in_current_file'</code> tells you if a given name is defined / declared in the current file and finally, you can look at the <code>declaration</code> data structure and see the <code>trusted</code> bit for <code>definition</code> and <code>constant</code>.</p>",
        "id": 132130776,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1534274593
    },
    {
        "content": "<p>that is very helpful. Thanks!</p>",
        "id": 132130792,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1534274641
    },
    {
        "content": "<p>You're welcome!</p>",
        "id": 132131037,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1534274899
    }
]