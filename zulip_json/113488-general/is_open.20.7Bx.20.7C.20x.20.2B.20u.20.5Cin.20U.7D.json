[
    {
        "content": "<p>Given a topological additive monoid, I expected theorems that say that you can translate opens along addition by a given element. But I could not find those... is this in mathlib, or do I need to roll my own?</p>",
        "id": 133679397,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536603571
    },
    {
        "content": "<p>continuous_add or something</p>",
        "id": 133679963,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536604085
    },
    {
        "content": "<p>Are you sure Kenny? That seems to prove only that the pre-image of an open under the map lam x, x+c (c constant) is open. But you can't cancel in a monoid and Johan seems to want to show that the image, not the pre-image, of an open is open. <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> are you sure that what you want to prove is true? What exactly do you want to prove?</p>",
        "id": 133680126,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536604230
    },
    {
        "content": "<p>and what exactly are you thinking about topological monoids for??</p>",
        "id": 133680147,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536604259
    },
    {
        "content": "<p>Hmmm, I probably over-generalised.</p>",
        "id": 133680161,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536604272
    },
    {
        "content": "<p>Let's assume it's a group.</p>",
        "id": 133680168,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536604281
    },
    {
        "content": "<p>then what Kenny said</p>",
        "id": 133680174,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536604290
    },
    {
        "content": "<p>Huh, the title looks like a preimage</p>",
        "id": 133680177,
        "sender_full_name": "Johannes HÃ¶lzl",
        "timestamp": 1536604291
    },
    {
        "content": "<p>That's good enough for applications, since I'm a mathematician.</p>",
        "id": 133680182,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536604296
    },
    {
        "content": "<p>oh yes, Kenny's comment answers the question in the title but not in the body.</p>",
        "id": 133680237,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536604328
    },
    {
        "content": "<p>Ok, somehow <code>continuous_add</code> didn't work straightaway. I'll try harder.</p>",
        "id": 133680244,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536604342
    },
    {
        "content": "<p>I'm assuming continuous_add is continuity of addition, so now you need to compose with the map from G to G x G sending g to g,c</p>",
        "id": 133680273,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536604372
    },
    {
        "content": "<p>which is continuous for any topological space</p>",
        "id": 133680277,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536604383
    },
    {
        "content": "<blockquote>\n<p>Given a topological additive monoid, I expected theorems that say that you can translate opens along addition by a given element. But I could not find those... is this in mathlib, or do I need to roll my own?</p>\n</blockquote>\n<p>I think this is not true. Consider the topological multiplicative monoid <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\Bbb R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68889em;\"></span><span class=\"strut bottom\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathbb\">R</span></span></span></span> and translation by 0</p>",
        "id": 133680978,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536605000
    },
    {
        "content": "<p>bingo</p>",
        "id": 133681061,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536605076
    },
    {
        "content": "<p>Hmn, I could PR the <code>continuity</code> tactic now that tidy is in mathlib</p>",
        "id": 133681162,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536605187
    },
    {
        "content": "<p>Related: <a href=\"https://github.com/leanprover-community/mathlib/blob/completions/analysis/topology/topological_structures.lean#L289\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/completions/analysis/topology/topological_structures.lean#L289\">https://github.com/leanprover-community/mathlib/blob/completions/analysis/topology/topological_structures.lean#L289</a></p>",
        "id": 133681868,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536605980
    },
    {
        "content": "<p>Reid: yes, please!</p>",
        "id": 133681885,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536605991
    }
]