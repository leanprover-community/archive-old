[
    {
        "content": "<p>Hi I am a learner of lean and I'm on the first exercise of mathlib tutorial. Line 260 shows an error about already declared notation. What does that mean?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- line 260</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"bp\">`|`</span><span class=\"n\">x</span><span class=\"bp\">`|`</span> <span class=\"o\">:=</span> <span class=\"n\">abs</span> <span class=\"n\">x</span>\n</code></pre></div>\n<p>error message:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">â–¶</span> <span class=\"mi\">260</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"mi\">260</span><span class=\"o\">:</span><span class=\"mi\">2</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span>\n<span class=\"n\">invalid</span> <span class=\"kd\">notation</span><span class=\"o\">:</span> <span class=\"kd\">notation</span> <span class=\"n\">already</span> <span class=\"n\">declared.</span> <span class=\"n\">Consider</span> <span class=\"n\">using</span> <span class=\"bp\">'</span><span class=\"kd\">notation</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"bp\">...</span><span class=\"o\">)</span><span class=\"bp\">'</span>\n</code></pre></div>\n<p><a href=\"https://github.com/leanprover-community/tutorials/blob/9333ac30d79bce6d8e0e2951166f5cd9494f6508/src/exercises/00_first_proofs.lean#L260\">the source code on github</a></p>",
        "id": 307769248,
        "sender_full_name": "Siyuan Yan",
        "timestamp": 1667492732
    },
    {
        "content": "<p>Oops it looks like we need to fix the tutorials project, for now does changing it to</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- line 260</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">blah</span><span class=\"o\">)</span> <span class=\"bp\">`|`</span><span class=\"n\">x</span><span class=\"bp\">`|`</span> <span class=\"o\">:=</span> <span class=\"n\">abs</span> <span class=\"n\">x</span>\n</code></pre></div>\n<p>fix it?</p>",
        "id": 307770049,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1667492922
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113488-general/topic/mathlib.20tutorial.20invalid.20notation.3A.20notation.20already.20declare/near/307770049\">said</a>:</p>\n<blockquote>\n<p>Oops it looks like we need to fix the tutorials project, for now does changing it to</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- line 260</span>\n<span class=\"kn\">local</span> <span class=\"kd\">notation</span> <span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">:=</span> <span class=\"n\">blah</span><span class=\"o\">)</span> <span class=\"bp\">`|`</span><span class=\"n\">x</span><span class=\"bp\">`|`</span> <span class=\"o\">:=</span> <span class=\"n\">abs</span> <span class=\"n\">x</span>\n</code></pre></div>\n<p>fix it?</p>\n</blockquote>\n<p>Fixed! thanks!</p>",
        "id": 307777816,
        "sender_full_name": "Siyuan Yan",
        "timestamp": 1667493478
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> why is there a blah placeholder?</p>",
        "id": 307778023,
        "sender_full_name": "Siyuan Yan",
        "timestamp": 1667493536
    },
    {
        "content": "<p>Its because the notation already exists in another file that is imported, so we just need some name to distinguish them in the latest version of lean. For the purpose of this tutorial <code>blah</code> is a great name, you should be able to forget about it after this though, its not too important</p>",
        "id": 307778307,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1667493605
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/tutorials/pull/49\">https://github.com/leanprover-community/tutorials/pull/49</a> should fix this, I'm not sure who is in charge of merging to tutorials (perhaps <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> ?)</p>",
        "id": 307778557,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1667493678
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> Did you test if we need those lines at all? Isn't the existing notation defeq to <code>abs</code>?</p>",
        "id": 307892427,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1667544044
    },
    {
        "content": "<p>It shouldn't be needed</p>",
        "id": 307892493,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1667544091
    },
    {
        "content": "<p>Yeah I didn't test that</p>",
        "id": 307911772,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1667553510
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"476897\">@Siyuan Yan</span> we got distracted here and forgot to mention the key thing: if you see this error message then it means something is horribly broken in the way you use Lean. See <a href=\"#narrow/stream/113489-new-members/topic/cannot.20build.20tutorials\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/cannot.20build.20tutorials</a> for explanations given to someone who hit the same issue.</p>",
        "id": 308140337,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1667654654
    },
    {
        "content": "<p>thanks!</p>",
        "id": 308140499,
        "sender_full_name": "Siyuan Yan",
        "timestamp": 1667654722
    }
]