[
    {
        "content": "<p>Just confirmed that both examples work perfectly fine in Lean 4. I guess it's unreasonable to expect this to be fixed in Lean 3.</p>",
        "id": 284338982,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1653900050
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"456794\">Patrick Johnson</span> has marked this topic as resolved.</p>",
        "id": 284338991,
        "sender_full_name": "Notification Bot",
        "timestamp": 1653900057
    },
    {
        "content": "<p>Does marking <code>h3</code> as <code>elab_simple</code> work in your actual use case?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">constant</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n\n<span class=\"kd\">axiom</span> <span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"mi\">1</span>\n<span class=\"kd\">axiom</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">),</span> <span class=\"n\">F</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">P</span>\n<span class=\"kd\">@[elab_simple]</span>\n<span class=\"kd\">axiom</span> <span class=\"n\">h₃</span>  <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">F</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">P</span> <span class=\"mi\">1</span> <span class=\"bp\">→</span> <span class=\"n\">P</span> <span class=\"n\">n</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"bp\">|</span> <span class=\"n\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"o\">:=</span>\n<span class=\"n\">h₂</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">h₃</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">h</span> <span class=\"n\">h₁</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"o\">:=</span>\n<span class=\"n\">h₂</span> <span class=\"n\">P</span> <span class=\"o\">(</span><span class=\"n\">id</span> <span class=\"n\">h₃</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">F</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">h</span> <span class=\"n\">h₁</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>elaborates fine</p>",
        "id": 284339671,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1653900501
    },
    {
        "content": "<p>Yes, it works. But I have already decided to move my project to Lean 4 anyway.</p>",
        "id": 284355047,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1653909928
    }
]