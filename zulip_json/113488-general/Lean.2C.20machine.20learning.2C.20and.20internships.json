[
    {
        "content": "<p>Hi everyone,</p>\n<p>Last summer, Koundinya (Kody) Vajjha, Joseph Tassarotti, and I have been using Lean to formally prove a (very basic) result<br>\nin machine learning theory: that decision stumps are PAC learnable. I'm a machine learning researcher working in the industry and<br>\nincreasingly I have been feeling the need for more trustworthy machine learning applications. I started this project as an experiment <br>\nto see how far we could get in a summer. We chose Lean because I had prior experience with Coq and we needed to build on the<br>\nmeasure theory available in mathlib. It was a very positive experience, we finished the proof, and I really enjoyed working with Lean. </p>\n<p>If you're interested, you can find the proof: <a href=\"https://github.com/jtristan/stump-learnable/wiki/A-formal-proof-that-decisions-stumps-are-PAC-learnable\" target=\"_blank\" title=\"https://github.com/jtristan/stump-learnable/wiki/A-formal-proof-that-decisions-stumps-are-PAC-learnable\">https://github.com/jtristan/stump-learnable/wiki/A-formal-proof-that-decisions-stumps-are-PAC-learnable</a>. It was my first experience with Lean and I had not used a proof assistant in many years so I am aware that my proofs could use a lot of cleaning. The part of the development written by Kody is of course in much better shape. </p>\n<p>We also put a paper on arxiv describing our work: <a href=\"https://arxiv.org/pdf/1911.00385.pdf\" target=\"_blank\" title=\"https://arxiv.org/pdf/1911.00385.pdf\">https://arxiv.org/pdf/1911.00385.pdf</a></p>\n<p>As a side note, I'm thinking of doing some more work on using Lean for machine learning and I am looking for an intern.<br>\n(to join me at Oracle Labs in Boston in the summer of 2020)<br>\nThings we could work on include:</p>\n<ul>\n<li>Generalizing the proof to higher dimensions, by using the Giry monad as much as possible</li>\n<li>Proving Hoeffding inequality (a common tool in ML)</li>\n<li>Working our way toward proving the VC inequality</li>\n<li>Work related to fairness in machine learning</li>\n</ul>\n<p>If you're interested please send me an email! (<a href=\"https://jtristan.github.io/\" target=\"_blank\" title=\"https://jtristan.github.io/\">https://jtristan.github.io/</a>)</p>",
        "id": 179847979,
        "sender_full_name": "John Tristan",
        "timestamp": 1572884511
    },
    {
        "content": "<p>Nice work! Are you considering PRing the mathematical bits of your repo to mathlib?</p>",
        "id": 179848184,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1572884636
    },
    {
        "content": "<p>There's a <code>to_mathlib</code> file in the repo.</p>",
        "id": 179848553,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1572884865
    },
    {
        "content": "<p>Yes, we would certainly like to do so.</p>",
        "id": 179848557,
        "sender_full_name": "John Tristan",
        "timestamp": 1572884871
    },
    {
        "content": "<p>We split the proof in two folders for that reason. The results in the lib folder are more general and could potentially be contributed. The results in the stump folder are very specific to the machine learning result.</p>",
        "id": 179848764,
        "sender_full_name": "John Tristan",
        "timestamp": 1572885000
    },
    {
        "content": "<p>The <code>to_mathlib</code> file contains a few lemmas on integration, the Markov and Chebyshev inequalities, lemmas about the Giry monad on probability measures.</p>",
        "id": 179849158,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1572885180
    },
    {
        "content": "<p>I also used the Dynkin pi-lambda theorem to prove that the product measure constructed out of the Giry monad is in fact a product measure.</p>",
        "id": 179849234,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1572885228
    },
    {
        "content": "<p>None of this would have been possible without Johannes' work. Many thanks to him!</p>",
        "id": 179849327,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1572885255
    },
    {
        "content": "<p>i'm amused that<code>flypitch</code>'s library on <code>dvector</code>s has been replicated verbatim and copyrighted by Oracle: <a href=\"https://github.com/jtristan/stump-learnable/blob/master/src/lib/dvector.lean\" target=\"_blank\" title=\"https://github.com/jtristan/stump-learnable/blob/master/src/lib/dvector.lean\">https://github.com/jtristan/stump-learnable/blob/master/src/lib/dvector.lean</a></p>",
        "id": 179874688,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1572900487
    },
    {
        "content": "<p>That file is from the <code>formalabstracts</code> repo. <a href=\"https://github.com/formalabstracts/formalabstracts/blob/master/src/data/dvector.lean\" target=\"_blank\" title=\"https://github.com/formalabstracts/formalabstracts/blob/master/src/data/dvector.lean\">https://github.com/formalabstracts/formalabstracts/blob/master/src/data/dvector.lean</a></p>\n<p>NOT flypitch.</p>\n<p>I am a contributing member of <code>formalabstracts</code> and the license for <code>formalabstracts</code> allows reuse.</p>",
        "id": 179879174,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1572903345
    },
    {
        "content": "<p>yes, that file is also copied verbatim from <code>flypitch</code></p>",
        "id": 179880349,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1572904088
    },
    {
        "content": "<p>I don't think apache license supports copying without attribution (and relicensing under oracle seems especially problematic)</p>",
        "id": 179880614,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1572904254
    },
    {
        "content": "<p>ah, correction, it seems stump-learnable is apache licensed but oracle copyrighted</p>",
        "id": 179881101,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1572904564
    },
    {
        "content": "<p>Relicensing seems allowed:</p>\n<blockquote>\n<p>You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.</p>\n</blockquote>\n<p><a href=\"https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)#fulltext\" target=\"_blank\" title=\"https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)#fulltext\">https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)#fulltext</a></p>",
        "id": 179881135,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1572904585
    },
    {
        "content": "<p>Well, this is a mistake on our part and we will fix it. I didn't realize that some code was copied from another project (I didn't work on that file), but granted, I should have. I will work with Kody to clearly separate the code that was copied and give it the proper attribution.</p>",
        "id": 179881317,
        "sender_full_name": "John Tristan",
        "timestamp": 1572904702
    },
    {
        "content": "<p>This wouldn't have been a problem if <code>dvector</code> was PR'd to mathlib :P</p>",
        "id": 179881381,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1572904758
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221511\">@John Tristan</span> , maybe it's standard in your area, but in the sentence in the paper </p>\n<blockquote>\n<p>The concept class <code>C</code> is the subset of <code>X^{0,1}</code><br>\nit took me a while to realise that <code>X^{0,1}</code> meant functions from <code>X</code> to <code>{0,1}</code> (the indicator function notation was not a problem, the lambda gave me no clues as to the domain :-). As written it usually means functions <code>{0,1}</code> to <code>X</code>, in mathematical contexts.</p>\n</blockquote>",
        "id": 179884827,
        "sender_full_name": "David Michael Roberts",
        "timestamp": 1572907153
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"221511\">John Tristan</span> , maybe it's standard in your area, but in the sentence in the paper </p>\n<blockquote>\n<p>The concept class <code>C</code> is the subset of <code>X^{0,1}</code><br>\nit took me a while to realise that <code>X^{0,1}</code> meant functions from <code>X</code> to <code>{0,1}</code> (the indicator function notation was not a problem, the lambda gave me no clues as to the domain :-). As written it usually means functions <code>{0,1}</code> to <code>X</code>, in mathematical contexts.</p>\n</blockquote>\n</blockquote>\n<p>Indeed, that's a very confusing typo, thanks!</p>",
        "id": 179885001,
        "sender_full_name": "Joseph Tassarotti",
        "timestamp": 1572907316
    }
]