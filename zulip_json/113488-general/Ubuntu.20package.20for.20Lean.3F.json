[
    {
        "content": "<p>How does that work? I could attempt to maintain it if it's only really a matter of making sure the set up runs on my 18.04 machine and accepting PRs from people who wanted to fix it on other versions of Ubuntu</p>",
        "id": 133216835,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535897772
    },
    {
        "content": "<p>Mathlib could be a separate package</p>",
        "id": 133216837,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535897799
    },
    {
        "content": "<p>One advantage could be that we could show wavering windows users \"look, all this fuss about command line and git -- if you were using Ubuntu then all you have to do is type apt install mathlib and that's genuinely it\"</p>",
        "id": 133216895,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535897949
    },
    {
        "content": "<p>Several people talked to me over the summer about switching from Windows to Ubuntu</p>",
        "id": 133216896,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535897973
    },
    {
        "content": "<p>That's something I'm seriously considering. But learning how to do that is not trivial.</p>",
        "id": 133217683,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535899644
    },
    {
        "content": "<p>I guess the first thing to do is to skim through these docs <a href=\"http://packaging.ubuntu.com/html/\" target=\"_blank\" title=\"http://packaging.ubuntu.com/html/\">http://packaging.ubuntu.com/html/</a> . Then it looks like there's a related (abandoned?) repository here <a href=\"https://github.com/leanprover/ppa-updater\" target=\"_blank\" title=\"https://github.com/leanprover/ppa-updater\">https://github.com/leanprover/ppa-updater</a> which might be a good place to start.</p>",
        "id": 133218000,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1535900173
    },
    {
        "content": "<p>Indeed this is probably a good place to start. But it almost certainly goes back to Lean 2 days, so there will be a lot to change. <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> do you have any thought to share about this?</p>",
        "id": 133219585,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535903528
    },
    {
        "content": "<p>I've emailed Soonho Kong, who seems to be the package maintainer</p>",
        "id": 133220913,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535906352
    },
    {
        "content": "<p>I don't think Soonho is working on Lean anymore</p>",
        "id": 133221017,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535906607
    },
    {
        "content": "<p>He was one of the main developers of lean in lean 1/2 era</p>",
        "id": 133221019,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535906636
    },
    {
        "content": "<p>but he finished his PhD and works at Toyota now IIRC</p>",
        "id": 133221063,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535906678
    },
    {
        "content": "<p>But he might own, in some sense, the correct name for the package?</p>",
        "id": 133221684,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1535908003
    },
    {
        "content": "<p>I really don't see system packages as the right solution for software like Lean, especially when we go back to frequent nightly releases. Which is why I wrote a Lean version manager...</p>",
        "id": 133225599,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1535916078
    },
    {
        "content": "<p>There are slightly different issues here, depending on who wants Lean. Maybe CoCalc will make that unnecessary but, up to now, anyone who wants to use Lean for teaching must go to their system administrators and explain how to install Lean on, say, 50 machines so that students can use it. It's much, much easier if the request is: dear system administrator, could you <code>apt install lean</code>? The same also applies when we want to encourage a colleague to try Lean. This is very different from talking about people who will want \"Lean 4 beta 53\" because they can't resist the hype.</p>",
        "id": 133226600,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535918235
    },
    {
        "content": "<p>Clearly I will download every single nightly of Lean 4, without needing a Debian package. But today I cannot tell a colleague: you should try Lean, it's fun!</p>",
        "id": 133226646,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535918337
    },
    {
        "content": "<p>I think you've got that backwards: installing elan is a one-liner and does not need sudo. Installing a Lean PPA in Ubuntu would mean that people need to change their system configuration and add the PPA source before they can <code>apt install</code> it - until the package is included in the official repository, which I believe could take quite some time (ditto for every single update).</p>",
        "id": 133227626,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1535920345
    },
    {
        "content": "<p>If the goal of a system-wide installation for teaching is to allow students to start using Lean immediately without configuration, that's not really possibly anyway, is it? As far as I know, there is no way to install the VS Code extension system-wide, and even VS Code itself is now encouraging user installs over system ones.</p>",
        "id": 133227778,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1535920683
    },
    {
        "content": "<p>I don't know how to install VScode at user level. I download a deb file from their site and <code>dpkg -i</code> it.</p>",
        "id": 133227781,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535920728
    },
    {
        "content": "<p>Oh, I guess that is just on Windows. I'm assuming you have to do updates manually in that case. Does it notify you about them?</p>",
        "id": 133227839,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1535920881
    },
    {
        "content": "<p>Yes, I get notifications, I press a button which opens the webpage where I should download a new deb file</p>",
        "id": 133227850,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535920920
    },
    {
        "content": "<p>I see</p>",
        "id": 133227892,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1535920942
    },
    {
        "content": "<p>I really don't know what is the right solution. I only see that everybody who arrives here has trouble installing everything. And this is really scary.</p>",
        "id": 133227899,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1535920990
    },
    {
        "content": "<p>As a relatively new member, let me say that mathlib's <a href=\"https://github.com/leanprover/mathlib/blob/master/docs/elan.md\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/docs/elan.md\">current install guide</a> worked well enough for me on my mac, but I didn't attempt it on my windows system because of the <code>Assumptions</code> text at the top. I gather that elan actually can be installed on windows, but I just ended up following the <a href=\"https://xenaproject.wordpress.com/2017/12/02/how-to-install-mathlib-and-keep-it-up-to-date/\" target=\"_blank\" title=\"https://xenaproject.wordpress.com/2017/12/02/how-to-install-mathlib-and-keep-it-up-to-date/\">install guide on the xena blog</a> and got things working that way.</p>",
        "id": 133228751,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1535922962
    },
    {
        "content": "<p>Btw, the Isabelle people decided to forgo Debian packaging in favor of bundling up everything themselves <a href=\"https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=494491#44\" target=\"_blank\" title=\"https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=494491#44\">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=494491#44</a></p>",
        "id": 133232210,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1535931212
    },
    {
        "content": "<p>But compared to Isabelle, Lean doesn't have any dependencies. Isabelle needs Poly/ML, a JDK, jEdit etc. We only need VS code or emacs, which are already packed for Debian.</p>",
        "id": 133232422,
        "sender_full_name": "Johannes HÃ¶lzl",
        "timestamp": 1535931614
    },
    {
        "content": "<p>Something I've been wondering is whether we can run elan directly from the VS Code extension.</p>",
        "id": 133232432,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535931710
    },
    {
        "content": "<p>That is, if it discovers it can't find a copy of Lean, it pops up an infobox \"Would you like to install Lean, using elan?\"</p>",
        "id": 133232472,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535931749
    },
    {
        "content": "<p>If that can work cross platform then we're getting to have a pretty nice experience for new users.</p>",
        "id": 133232473,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535931775
    },
    {
        "content": "<p>Oh, that does sound far nicer to me than the other way around, bundling VS Code with Lean</p>",
        "id": 133232524,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1535931869
    },
    {
        "content": "<p>That would be genius! Then the install instructions would become: (1) Download VScode. (2) Fire it up. (3) Search for the Lean extension and install it. (4) Start using Lean. (5) Click yes on the pop up. (6) Get yourself coffee <span class=\"emoji emoji-2615\" title=\"coffee\">:coffee:</span> or tea <span class=\"emoji emoji-1f375\" title=\"tea\">:tea:</span>.</p>",
        "id": 133240006,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535948566
    },
    {
        "content": "<p>Adding elan auto-installation to the vscode extension is not hard.  On Linux it works really well.  However on windows elan was pretty broken the last time I tried it.</p>",
        "id": 133257966,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1535978117
    },
    {
        "content": "<p>Windows install guide: (1) Download virtualbox. (2) Install ubuntu. (3) Follow the Linux install guide.</p>",
        "id": 133258037,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535978181
    },
    {
        "content": "<p>Install guide for students with bad laptops: (1) Use CoCalc. <code>-- this one should work soon, I hope</code></p>",
        "id": 133258056,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535978223
    },
    {
        "content": "<blockquote>\n<p>Adding elan auto-installation to the vscode extension is not hard.  On Linux it works really well.  However on windows elan was pretty broken the last time I tried it.</p>\n</blockquote>\n<p>I guess VScode knows what OS it is on? So you could potentially implement this Linux-only, right?</p>",
        "id": 133258240,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535978430
    },
    {
        "content": "<p>Yes, you can definitely figure out the OS from a vscode extension. We can disable it on windows, if necessary.  That said, you need to work on it yourself if you want it before I get back from vacation in October.</p>",
        "id": 133258515,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1535978690
    },
    {
        "content": "<p>Thanks for looking into this, Gabriel! Is what you did for Linux available somewhere?</p>",
        "id": 133258552,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535978744
    },
    {
        "content": "<p>I see. Didn't know you were on holidays (-; Enjoy!</p>",
        "id": 133258564,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535978761
    },
    {
        "content": "<p>I can grab a student with a windows laptop and try to investigate. :-)</p>",
        "id": 133258586,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535978762
    },
    {
        "content": "<p>Oh I see there was a small misunderstanding. <em>elan</em> works well on Linux, if you open a project in vscode then elan will automatically download the right binary.  But there us no auto-installation implemented at all.</p>",
        "id": 133258778,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1535978924
    },
    {
        "content": "<p>Indeed</p>",
        "id": 133258793,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1535978945
    },
    {
        "content": "<p>Sorry to be jumping in so late, but my perspective on this topic is that this is a sort of initiative that would benefit from some external funding and somebody whose job it would be to make sure that everything works. That's for two of reasons:</p>\n<p>1. Writing &amp; maintaining packages and installers is not novel or exciting. It's hard to rely on somebody's enthusiasm to constantly make sure everything is working on multiple platforms, with multiple versions, etc.<br>\n2. It's not exactly rocket science. It probably wouldn't be cost-efficient for most people here to be getting drawn away from their research to handle support requests from lean + vscode/ lean + emacs users. Conversely, not supporting user requests would mean a lot of frustrated users.</p>\n<p>I wish I had a good answer on who could pay for this sort of (I imagine on-going) stream of work, but, unfortunately, \"writing Ubuntu packages\" doesn't make for a great funding proposal. However, if attached to some sexy idea, this could become a partial focus of some broader project. Now, I think \"Writing bug-free software\" or \"Automated checking of mathematical proofs\" could sound sufficiently exciting to receive funding, although what exactly goes into the proposal will have to be thoroughly thought through.</p>\n<p>Streams of funding to look at would be:<br>\n1. Catalyst Grants. Not sure if Lean is considered \"early stage\", but some other mentioned tools, like elan or CoCalc maybe would. The current call for applications closes on 31st of December: <a href=\"https://www.digital-science.com/investment/catalyst-grant/\" target=\"_blank\" title=\"https://www.digital-science.com/investment/catalyst-grant/\">https://www.digital-science.com/investment/catalyst-grant/</a><br>\n2. Google Summer of Code. Not sure if Lean is affiliated, but if it isn't, it probably should be!</p>\n<p>I'm happy to put the work into writing a funding proposal, and running the project if it's funded, as long as we could agree on what should go into it.</p>",
        "id": 133727845,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1536668315
    },
    {
        "content": "<blockquote>\n<p>Sorry to be jumping in so late, but my perspective on this topic is that this is a sort of initiative that would benefit from some external funding and somebody whose job it would be to make sure that everything works.</p>\n</blockquote>\n<p>Agreed. It's perhaps not exactly a full-time job at this point, but it is a non-negligible fraction of one and once Lean 4 is released and we're no longer \"frozen\" on a fixed version of Lean indefinitely, it will become even more so.</p>",
        "id": 133728610,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536669245
    },
    {
        "content": "<p>GHC (the Glasgow Haskell Compiler, the de facto standard compiler for the Haskell programming language) happens to be, like Lean, a project led by developer(s) at Microsoft Research, although GHC is much older and has many more users. In the case of GHC, MSR itself funds the release manager role, at one point directly by hiring an engineer part of whose job was GHC release management, and now indirectly through a Haskell consultancy company.</p>",
        "id": 133728881,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536669600
    },
    {
        "content": "<p>I'm not sure GSOC would be a good source of funding for release management, primarily because the release manager's job is never-ending, as OS distributors find creative new ways to break software. (I do think GSOC is an excellent idea for projects to extend mathlib, though!)</p>",
        "id": 133729032,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536669727
    },
    {
        "content": "<p>Thanks Reid, this is a very insightful perspective. I agree that ultimately MSR will likely take on this responsibility. I was trying to think smaller, and about a solution that would be good for between now and until lean becomes large and old enough to graduate to a software product with its own release manager :).</p>",
        "id": 133730652,
        "sender_full_name": "Adam Kurkiewicz",
        "timestamp": 1536671392
    }
]