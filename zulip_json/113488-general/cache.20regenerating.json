[
    {
        "content": "<div class=\"codehilite\"><pre><span></span>buzzard@ebony:~/lean-projects/lean-perfectoid-spaces$ lean --make\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/group_theory/quotient_group.lean: parsing at line 42cache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/test/local_cache.lean: parsing at line 67cache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/tactic/linarith.lean: linarith.int.coe_nat_bit0_mulcache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/tactic/linarith.lean: linarith.int.coe_nat_zero_mulcache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/tactic/linarith.lean: linarith.nat_eq_substcache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/tactic/linarith.lean: linarith.nat_lt_substcache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/tactic/linarith.lean: parsing at line 49cache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/group_theory/quotient_group.lean: parsing at line 69cache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/tactic/linarith.lean: linarith.le_of_le_of_eqcache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/tactic/linarith.lean: linarith.mul_eqcache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/tactic/ring2.lean: tactic.ring2.horner_expr.cseval_add_constcache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/test/local_cache.lean: parsing at line 285cache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/test/local_cache.lean: parsing at line 306cache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/tactic/ring2.lean: parsing at line 446cache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/data/padics/padic_norm.lean: parsing at line 307cache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/group_theory/perm/cycles.lean: parsing at line 1cache regenerating\ncache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/group_theory/quotient_group.lean: parsing at line 123cache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/test/local_cache.lean: def_local.my_lemma_2cache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/algebra/module.lean: parsing at line 45cache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/algebra/module.lean: parsing at line 58cache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/computability/partrec.lean: nat.partrec.of_primreccache regenerating\ncache regenerating\ncache regenerating\n/home/buzzard/lean-projects/lean-perfectoid-spaces/_target/deps/mathlib/src/tactic/linarith.lean: parsing at line 276cache regenerating\ncache regenerating\n</pre></div>\n\n\n<p>This is all very exciting. Is my cache supposed to be regenerating?</p>",
        "id": 163369034,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1555324707
    },
    {
        "content": "<p>Am I just compiling too much? I usually only compile src</p>",
        "id": 163369057,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1555324744
    },
    {
        "content": "<p>Hey Kevin, this one's on me; thats a whole bunch of tests in <code>test/local_cache.lean</code> being run as I understand it</p>",
        "id": 163370102,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1555326024
    },
    {
        "content": "<p>All of the other tests are silent I believe</p>",
        "id": 163370116,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1555326056
    },
    {
        "content": "<p>Aah I see, so it's just that I accidentally compiled the stuff in <code>test</code> which I usually leave alone.</p>",
        "id": 163370309,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1555326251
    },
    {
        "content": "<p>I think so!</p>",
        "id": 163370370,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1555326349
    },
    {
        "content": "<p>I think we should make that test quiet as well</p>",
        "id": 163380700,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1555336093
    }
]