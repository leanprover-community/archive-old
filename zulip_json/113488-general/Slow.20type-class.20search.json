[
    {
        "content": "<p>This takes more than three seconds on my machine:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">all</span>\n<span class=\"kn\">set_option</span> <span class=\"n\">profiler</span> <span class=\"n\">true</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">has_add</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">apply_instance</span>\n</code></pre></div>\n\n\n<p>Any idea what's going on here?  (Also filed as issue <a href=\"https://github.com/leanprover-community/mathlib/issues/3080\">#3080</a>)</p>",
        "id": 200883812,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1592225186
    },
    {
        "content": "<p>Is this really surprising? When it succeeds because there is a <code>ring</code> or whatever around, it can be pretty quick, but when it fails it has to try every possible instance, even those that have low priority. And there are many many many ways in mathlib to have a <code>has_add</code> instance.</p>",
        "id": 200884481,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1592225545
    },
    {
        "content": "<p>Good point.  Then we'll have to fix this in core.  <a href=\"https://github.com/leanprover-community/lean/issues/332\">lean#332</a> reduces the example to 83ms.</p>",
        "id": 200899514,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1592232742
    },
    {
        "content": "<p>Gabriel, you're still going to shave off 30 minutes on compilation time :)</p>",
        "id": 200900200,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1592233037
    },
    {
        "content": "<p>This is really crazy... I'm amazed by all these fixes that keep improving the system.</p>",
        "id": 200900732,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592233250
    }
]