[
    {
        "content": "<p>Does Lean know that a space is compact iff it has the finite intersection property?</p>",
        "id": 148672762,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1543357395
    },
    {
        "content": "<p>No this is missing, but I think it is related to the ultrafilter property?!</p>",
        "id": 148673442,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1543358045
    },
    {
        "content": "<p>Sorry it was the other way round. But I guess FIP and <code>compact_iff_finite_subcover</code> are easy to relate</p>",
        "id": 148673666,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1543358288
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">topology</span><span class=\"bp\">.</span><span class=\"n\">topological_space</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">compact_iff_fip</span> <span class=\"o\">:</span> <span class=\"n\">compact</span> <span class=\"n\">S</span> <span class=\"bp\">↔</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">t</span> <span class=\"err\">∈</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">is_closed</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"err\">⊆</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">finite</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">S</span> <span class=\"err\">∩</span> <span class=\"err\">⋂₀</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">S</span> <span class=\"err\">∩</span> <span class=\"err\">⋂₀</span> <span class=\"n\">T</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">classical</span><span class=\"o\">,</span> <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">hcs</span> <span class=\"n\">T</span> <span class=\"n\">ht1</span> <span class=\"n\">ht2</span><span class=\"o\">,</span> <span class=\"n\">by_contra</span> <span class=\"n\">ht3</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">not_exists</span><span class=\"o\">,</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_inter_iff</span><span class=\"o\">,</span> <span class=\"n\">not_and</span><span class=\"o\">,</span>\n      <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_compl_iff</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl_sInter</span><span class=\"o\">,</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl_image</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">ht3</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span> <span class=\"err\">∈</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl</span> <span class=\"bp\">⁻¹</span><span class=\"err\">&#39;</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">is_open</span> <span class=\"n\">t</span><span class=\"o\">,</span>\n      <span class=\"k\">from</span> <span class=\"bp\">λ</span> <span class=\"n\">t</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl_compl</span> <span class=\"n\">t</span> <span class=\"bp\">▸</span> <span class=\"n\">ht1</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">ht</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">compact_elim_finite_subcover</span> <span class=\"n\">hcs</span> <span class=\"n\">this</span> <span class=\"n\">ht3</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">hc1</span><span class=\"o\">,</span> <span class=\"n\">hc2</span><span class=\"o\">,</span> <span class=\"n\">hc3</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">ht2</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl</span> <span class=\"err\">&#39;&#39;</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">image_subset_iff</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">hc1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">finite_image</span> <span class=\"bp\">_</span> <span class=\"n\">hc2</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx1</span><span class=\"o\">,</span> <span class=\"n\">hx2</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_sUnion</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">hc3</span> <span class=\"n\">hx1</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">htc</span><span class=\"o\">,</span> <span class=\"n\">hxt</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">hx2</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_image_of_mem</span> <span class=\"bp\">_</span> <span class=\"n\">htc</span><span class=\"o\">)</span> <span class=\"n\">hxt</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">compact_iff_finite_subcover</span><span class=\"o\">,</span> <span class=\"n\">intros</span> <span class=\"n\">c</span> <span class=\"n\">hc1</span> <span class=\"n\">hc2</span><span class=\"o\">,</span> <span class=\"n\">by_contra</span> <span class=\"n\">hc3</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">not_exists</span><span class=\"o\">,</span> <span class=\"n\">not_and</span><span class=\"o\">,</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">not_subset</span><span class=\"o\">,</span>\n      <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_compl_iff</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl_sUnion</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hc3</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span> <span class=\"err\">∈</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl</span> <span class=\"bp\">⁻¹</span><span class=\"err\">&#39;</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">is_closed</span> <span class=\"n\">t</span><span class=\"o\">,</span>\n      <span class=\"k\">from</span> <span class=\"bp\">λ</span> <span class=\"n\">t</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"n\">hc1</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">ht</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hc4</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">s</span> <span class=\"err\">⊆</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl</span> <span class=\"bp\">⁻¹</span><span class=\"err\">&#39;</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">finite</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">S</span> <span class=\"err\">∩</span> <span class=\"err\">⋂₀</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">s</span> <span class=\"n\">hs1</span> <span class=\"n\">hs2</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">hc3</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">image_subset_iff</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">hs1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">finite_image</span> <span class=\"bp\">_</span> <span class=\"n\">hs2</span><span class=\"o\">),</span>\n      <span class=\"n\">rwa</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl_compl_image</span> <span class=\"n\">at</span> <span class=\"n\">this</span> <span class=\"o\">},</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">H</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl</span> <span class=\"bp\">⁻¹</span><span class=\"err\">&#39;</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"n\">this</span> <span class=\"n\">hc4</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hxs</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_sUnion</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">hc2</span> <span class=\"n\">hxs</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">htc</span><span class=\"o\">,</span> <span class=\"n\">hxt</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">compl_image</span> <span class=\"n\">at</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">hx</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_image_of_mem</span> <span class=\"bp\">_</span> <span class=\"n\">htc</span><span class=\"o\">)</span> <span class=\"n\">hxt</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 148682619,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1543369184
    },
    {
        "content": "<p>that was easier than I thought</p>",
        "id": 148682623,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1543369188
    }
]