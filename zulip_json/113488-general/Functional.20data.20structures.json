[
    {
        "content": "<p>I'm supervising a couple of undergraduates who would like to implement, and in some cases verify, some functional data structures in Lean (3 or 4). Are there any data structures that you'd particularly like to see implemented? In Lean 3, we currently have red-black trees and nothing else afaik (linked lists don't count); Lean 4 also has binomial heaps.</p>",
        "id": 223146113,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1610990361
    },
    {
        "content": "<p><code>Seq</code> from <code>Data.Sequence</code> in Haskell; <br>\ntries; suffix trees -- although getting good functional implementations of those is not that straightforward</p>",
        "id": 223146557,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1610990628
    },
    {
        "content": "<p>See also <a href=\"#narrow/stream/113488-general/topic/BSc.20Final.20Project\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/BSc.20Final.20Project</a></p>",
        "id": 223147761,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1610991336
    },
    {
        "content": "<p>Thanks! Finger trees (<code>Seq</code>) might be interesting, though Lean 4 also has some sort of persistent array which is probably more performant in practice. Tries would certainly be nice.</p>",
        "id": 223151832,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1610994555
    }
]