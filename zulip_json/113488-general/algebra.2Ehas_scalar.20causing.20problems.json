[
    {
        "content": "<p>Should we change the priority or get rid of <code>algebra.has_scalar</code>? It causes this search to fail. Changing the priority to <code>999</code> fixes it.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">matrix</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">rat</span><span class=\"bp\">.</span><span class=\"n\">basic</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">algebra</span>\n\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">,</span> <span class=\"n\">priority</span> <span class=\"mi\">1000</span><span class=\"o\">]</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">has_scalar</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">X</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">has_scalar</span> <span class=\"n\">ℚ</span> <span class=\"o\">(</span><span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply_instance</span>\n</pre></div>",
        "id": 172569163,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1565079886
    },
    {
        "content": "<p>I think perhaps it might be a good idea to split files up a bit more, to avoid too many imports. Every now and then, there's a lemma that doesn't belong anywhere, so an import gets added to a file. I personally wouldn't mind just making a new file for that lemma, if it means reducing unnecessary imports, which slow down type class inference.</p>",
        "id": 172569349,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1565080087
    },
    {
        "content": "<p>I don't like the idea of having to be careful with imports because otherwise type class inference will fail. If type class inference fails because we have to many instances, we need to declare fewer instances. Your suggestion is also just postponing the problem: at some point we want to import enough files to cause a problem anyway.</p>",
        "id": 172593456,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1565101674
    },
    {
        "content": "<p>I am generally happy to be careful with imports for other reasons (e.g. unnecessary recompilations after you change a basic file), but I don't like files with just 1 or 2 lemmas: it will also make it harder to find these lemmas.</p>",
        "id": 172593565,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1565101731
    },
    {
        "content": "<p>As a concrete example, PR <a href=\"https://github.com/leanprover-community/mathlib/issues/1294\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1294\">#1294</a> adds the lemma stating that the multiplicity of prime <code>p</code> in a finite product of numbers is the sum of the multiplicities. </p>\n<div class=\"codehilite\"><pre><span></span>lemma finset.prod {β : Type*} [decidable_eq β] {p : α} (hp : prime p) (s : finset β) (f : β → α) :\n  multiplicity p (s.prod f) = s.sum (λ x, multiplicity p (f x))\n</pre></div>\n\n\n<p>Should that be in a file other than <code>multiplicity</code>, so that <code>multiplicity</code>doesn't have to import <code>big_operators</code>? I'm still quite often searching for lemmas in the old-fashioned way of scrolling (and <code>ctrl+F</code>-ing) through files, and it will make it harder to find that.</p>\n<p>I also added some other imports on <a href=\"https://github.com/leanprover-community/mathlib/issues/1294\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1294\">#1294</a> for which I feel a lot less strongly about. Please review that PR with suggestions of how to do it otherwise.</p>",
        "id": 172593886,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1565101938
    },
    {
        "content": "<p>That I'm okay with, since most of the stuff using prime numbers will also using big operators.</p>\n<p>Stuff like <code>ring_theory.algebra</code> importing tensor products, complex numbers, and multivariate polynomials, which are then imported by finite dimensional vector spaces is a bit much. I need all this just to prove <code>A * B = 1 -&gt; B * A = 1</code> for rational matrices.</p>",
        "id": 172595989,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1565103279
    },
    {
        "content": "<p>This does seem a bit ridiculous. However I guess there are other computer programs which also have this problem so presumably the CS guys have got some ideas about how to deal with it.</p>",
        "id": 172597027,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1565103920
    }
]