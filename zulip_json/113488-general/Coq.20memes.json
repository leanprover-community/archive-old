[
    {
        "content": "<p><a href=\"https://www.reddit.com/r/Coq/comments/djxaw0/the_people_you_meet_when_you_learn_coq/?utm_source=share&amp;utm_medium=ios_app&amp;utm_name=iossmf\" target=\"_blank\" title=\"https://www.reddit.com/r/Coq/comments/djxaw0/the_people_you_meet_when_you_learn_coq/?utm_source=share&amp;utm_medium=ios_app&amp;utm_name=iossmf\">https://www.reddit.com/r/Coq/comments/djxaw0/the_people_you_meet_when_you_learn_coq/?utm_source=share&amp;utm_medium=ios_app&amp;utm_name=iossmf</a></p>\n<p>This might look familiar to people here?</p>",
        "id": 178574505,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1571541241
    },
    {
        "content": "<p>where are the mathematicians?</p>",
        "id": 178574696,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571541534
    },
    {
        "content": "<p>Maybe you can post that one</p>",
        "id": 178574765,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1571541683
    },
    {
        "content": "<p>well, that might be an observation about the coq ecosystem. I don't think any of the lean mathematicians fit well in any of those camps, and seem to actively dislike several of the caricatures</p>",
        "id": 178574821,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571541827
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> Do you think 2020 is the year of dependently typed haskell?</p>",
        "id": 178574918,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571541973
    },
    {
        "content": "<p>Actually, I haven't followed that saga. I don't know how far they will take dependent types and how the Lean / Coq wisdom of \"don't make your functions dependently typed\" will translate into Haskell.</p>",
        "id": 178577502,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1571547240
    },
    {
        "content": "<p>I think it's a \"grass is greener\" situation. Those that have dependent types don't want them, and those that don't have them want them</p>",
        "id": 178577751,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571547725
    },
    {
        "content": "<p>I think what haskell is really missing compared to DTT languages is the ability to state and prove propositions</p>",
        "id": 178577824,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571547961
    },
    {
        "content": "<p>I have not embarked on a formal proof of FLT precisely because extensive questioning of serious mathematicians 1 year ago convinced me that it would be a worthless project</p>",
        "id": 178582314,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571557147
    },
    {
        "content": "<p>The description of the \"formal methods expert\" certainly makes it sound like tilting at windmills</p>",
        "id": 178584318,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571561080
    },
    {
        "content": "<p>I've seen the PL acronym several times recently. I guess it's not used with its standard meaning of \"piecewise linear\". Is it programming language?</p>",
        "id": 178585699,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571563821
    },
    {
        "content": "<p>is \"piecewise linear\" really a standard acronym?</p>",
        "id": 178586359,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571564951
    },
    {
        "content": "<p>Oh YES</p>",
        "id": 178586362,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571564961
    },
    {
        "content": "<p>Google PL topology</p>",
        "id": 178586364,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571564973
    },
    {
        "content": "<p>Here it gives almost 10 millions hits.</p>",
        "id": 178586418,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571565012
    },
    {
        "content": "<p>And this acronym existed before computers.</p>",
        "id": 178586427,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571565031
    },
    {
        "content": "<p>i see, it does seem to be used in that area</p>",
        "id": 178586430,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571565034
    },
    {
        "content": "<p>I don't remember how many times I've asked \"err... are we doing this PL or smooth?\" (and usually getting a shrug as response...)</p>",
        "id": 178586486,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1571565181
    },
    {
        "content": "<p>everything is equivalent  under a sufficiently vague notion of equivalence</p>",
        "id": 178586618,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571565406
    },
    {
        "content": "<p>true</p>",
        "id": 178597423,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1571585426
    },
    {
        "content": "<p>or rather <code>Î» x y, true</code></p>",
        "id": 178597434,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1571585452
    },
    {
        "content": "<p>Sorry to barge in, but could you expand on the argument that leads to the conclusion that formalising FLT is a worthless project?</p>",
        "id": 179484036,
        "sender_full_name": "Joonas Pihlaja",
        "timestamp": 1572474599
    },
    {
        "content": "<p>I asked a whole bunch of serious number theorists how much they would care if a team of computer scientists announced tomorrow that they had fully formalised a proof of Fermat's Last Theorem, and the sup of the responses I got was \"epsilon\". They mostly said things like \"I am far more interested in new stuff\".</p>",
        "id": 179484793,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572475198
    },
    {
        "content": "<p>Hence it is useless in terms of trying to advertise this sort of software to research mathematicians.</p>",
        "id": 179484866,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572475230
    },
    {
        "content": "<p>You see, we checked it over 20 years ago, so you don't need to.</p>",
        "id": 179484928,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572475282
    },
    {
        "content": "<p>I think that an issue is the fact that if you've discovered a new proof, it would take far less time to write it up as a pdf than in lean (unless you're sufficiently well trained in lean). And people still trust PDFs (at least I do) - especially if they're written in latex!</p>",
        "id": 179485654,
        "sender_full_name": "Luca Seemungal",
        "timestamp": 1572476038
    },
    {
        "content": "<p>I see. Thank you for your candid answer.</p>",
        "id": 179487008,
        "sender_full_name": "Joonas Pihlaja",
        "timestamp": 1572477350
    },
    {
        "content": "<blockquote>\n<p>I think that an issue is the fact that if you've discovered a new proof, it would take far less time to write it up as a pdf than in lean (unless you're sufficiently well trained in lean). And people still trust PDFs (at least I do) - especially if they're written in latex!</p>\n</blockquote>\n<p>This is exactly the problem. A maths undergraduate and they are already brainwashed :-/</p>",
        "id": 179489118,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572479314
    },
    {
        "content": "<p>Somehow imo there are two kinds of mathematicians - ones where \"proof comes first\" and others where \"ideas come first\". You'll often see proof people get bogged down in annoying details that many people won't care about, and you'll often see ideas people wave their hands about and claim certain things to be true that may not be convincingly so. </p>\n<p>I believe that lean has the potential to unify these two seemingly opposite mentalities. Ideally we would get Lean to the point where an ideas person could prove a theorem by \"waving their hands within lean\" and lean would have good enough tactics to complete the proof. Something like:</p>\n<div class=\"codehilite\"><pre><span></span>theorem riemman_hypothesis (whatever) :=\nbegin\n*waves hands in lean and lean works out the uninteresting details*\nend\n</pre></div>",
        "id": 179489833,
        "sender_full_name": "Luca Seemungal",
        "timestamp": 1572480091
    },
    {
        "content": "<p>Although thinking about this, I am having doubts. Is this really the ideal? What if lean works out a lemma that is actually fairly interesting? Then because it was only used in aid of this one theorem, no human will look into it or investigate it. Is this mathematical progress? What is progress? Also, we want the computer to generate proofs that are human-like - proofs that resemble a human's thought process. Do we actually want this though? I can imagine this being a contentious issue in the future.</p>",
        "id": 179490878,
        "sender_full_name": "Luca Seemungal",
        "timestamp": 1572481275
    },
    {
        "content": "<p>Yeah, this is why I persevere.</p>",
        "id": 179492071,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572482858
    },
    {
        "content": "<p>I can see some fun ahead.</p>",
        "id": 179492074,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572482864
    },
    {
        "content": "<p>As I've said several times before, \"Appel--Haken II: computers return\" is when a computer belches out a one million line long piece of OCaml code claiming to be a proof of the Riemann Hypothesis, and it's completely non-human-readable but it typechecks.</p>",
        "id": 179492178,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572482975
    },
    {
        "content": "<p>It's at that point you begin to wonder what the point of pure mathematicians is.</p>",
        "id": 179492248,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572483025
    },
    {
        "content": "<p>I gave up dots and boxes when I realised that computers would be playing the 5x5 game (my favourite size) perfectly soon, I figured there was no more point playing.</p>",
        "id": 179492275,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572483068
    },
    {
        "content": "<p>I think there is an interesting task to be done once you have that computer proof of RH</p>",
        "id": 179492339,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1572483124
    },
    {
        "content": "<p>to look at what was done and figure out what happened</p>",
        "id": 179492345,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1572483138
    },
    {
        "content": "<p>At one point I was probably the best 5x5 dots and boxes player on the planet but sometimes I would agonise for three or more hours over a middle-game move just thinking \"I would like to force a win from here, but this is such hard work to analyse, at this stage it is clearly a job for a computer\"</p>",
        "id": 179492350,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572483145
    },
    {
        "content": "<p>and that was when I moved onto n x n dots and boxes, to stay one step ahead, and wrote <a href=\"https://arxiv.org/abs/1305.2156\" target=\"_blank\" title=\"https://arxiv.org/abs/1305.2156\">https://arxiv.org/abs/1305.2156</a></p>",
        "id": 179492399,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572483214
    },
    {
        "content": "<p>because computers were beating me at 5x5 but I could still prove the theorem in that paper and a computer couldn't have generated that proof.</p>",
        "id": 179492465,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572483270
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120469\">@Ellen Arlt</span> is formalising that paper this year for her MSc project in Lean.</p>",
        "id": 179492475,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572483287
    },
    {
        "content": "<p>I really like dots and boxes.</p>",
        "id": 179492482,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572483296
    },
    {
        "content": "<p>And another really funny thing about that paper is that I have never met my co-author. We have played dots and boxes against each other online and at some point I realised that he had a brilliance which I lacked. And then he emailed me saying he was a schoolkid and could he do a school project with me on dots and boxes and I said \"yeah alright\"</p>",
        "id": 179492589,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572483400
    },
    {
        "content": "<p>and I taught him the theory, which I'd learnt from Berlekamp, and and then he solved a hard problem and we wrote it up as a joint paper.</p>",
        "id": 179492622,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572483436
    },
    {
        "content": "<p>and now we have technical conversations about machine learning and dots and boxes occasionally. I should get him on this chat.</p>",
        "id": 179492641,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572483474
    },
    {
        "content": "<p>I wish I'd known to use dots-and-boxes as my \"example combinatorial game\", rather than domineering. :-)</p>",
        "id": 179504834,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1572502837
    },
    {
        "content": "<p>On the topic of a million line ocaml proof of the RH - I'm not sure if I would accept that. Clearly, I'm an undergraduate and so I wouldn't understand a written proof of it anyway, but there's some sense in which a _wrong_ proof with good, enlightening, ideas is better than a _right_ proof that doesn't bring anything new to the table. In my opinion, I would prefer no proof at all rather than such a million line proof.</p>",
        "id": 179511161,
        "sender_full_name": "Luca Seemungal",
        "timestamp": 1572511238
    },
    {
        "content": "<p>If such a million line proof arises, then I think that the job of the pure mathematician would be to figure out the good ideas that came into the proof.</p>",
        "id": 179511191,
        "sender_full_name": "Luca Seemungal",
        "timestamp": 1572511306
    },
    {
        "content": "<blockquote>\n<p>If such a million line proof arises, then I think that the job of the pure mathematician would be to figure out the good ideas that came into the proof.</p>\n</blockquote>\n<p>this seems like a good description of what a pure mathematician might be good for in the future, but it also raises the old question of \"if nobody really understands a whole proof, is it really a proof?\". By nice compositionality stuff, we could maybe show that it's enough to understand little bits of the proof and how the little bits fit together, but I don't think it's impossible that a computer could produce a proof which was in no way compositional (i.e. it was just one long meandering thread that couldn't be split into nice little segments)</p>",
        "id": 179534175,
        "sender_full_name": "Tim Hosgood",
        "timestamp": 1572530876
    },
    {
        "content": "<p>We need our own page. What would you call it? I suggest \"Lean memes for formally-verified teens\".</p>",
        "id": 310779113,
        "sender_full_name": "Martin DvoÅÃ¡k",
        "timestamp": 1668764099
    }
]