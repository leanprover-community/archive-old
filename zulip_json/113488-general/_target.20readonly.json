[
    {
        "content": "<p>Does it make sense to make <code>_target</code> read-only somehow? We want those files to be updated by specialized tools, but if a user jumps to definition, they shouldn't trip up and curse themselves with eternal orange bars by mistakingly changing a file.</p>",
        "id": 260647418,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1636372717
    },
    {
        "content": "<p>That's a delicate one, I for one often try out changes to library definitions that I've jumped to from an external project in place to see what breaks and then copy the changes across to the dependency if I want to PR then. That doesn't necessarily involve saving the file of course, but what does VScode do if you try and change a read-only file like this?</p>",
        "id": 260648113,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1636373207
    },
    {
        "content": "<p>It will probably complain that the file is read-only</p>",
        "id": 260648259,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1636373331
    },
    {
        "content": "<p>VSCode is able to interpret unsaved files, so I would think unsaved changes in readonly files would also be fine</p>",
        "id": 260648261,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1636373333
    },
    {
        "content": "<p>Hmmm, too bad. I want VScode to tell me \"Nope! you cannot touch this\"</p>",
        "id": 260648300,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1636373372
    },
    {
        "content": "<p>Because it means that I need to restart Lean, because it will try to recompile half of mathlib and all of LTE, if I hit a key while browsing some mathlib file</p>",
        "id": 260648387,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1636373414
    },
    {
        "content": "<p>Ah, you mean uneditable in editor, not just read only (which means unwriteable to disk)</p>",
        "id": 260648394,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1636373420
    },
    {
        "content": "<p>Can't you just close that mathlib file, saying do not save</p>",
        "id": 260648434,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1636373453
    },
    {
        "content": "<p><a href=\"https://github.com/microsoft/vscode/issues/17670\">https://github.com/microsoft/vscode/issues/17670</a>, they don't plan on implementing edit locking</p>",
        "id": 260648498,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1636373506
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/113488-general/topic/_target.20readonly/near/260648434\">said</a>:</p>\n<blockquote>\n<p>Can't you just close that mathlib file, saying do not save</p>\n</blockquote>\n<p>I have the impression that the damage is already done, by that time</p>",
        "id": 260648586,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1636373575
    },
    {
        "content": "<p>Well you need to close the file without saving and restart lean. But I do find being able to edit mathlib files in place in a session a useful tool, even if I was unable to save them to the same file.</p>",
        "id": 260649079,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1636373893
    },
    {
        "content": "<p>Hmm, maybe it could be user configurable in the extension settings...</p>",
        "id": 260649159,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1636373967
    },
    {
        "content": "<p>The question is whether it causes more harm than good. I can believe the ability to edit is useful for some people, but these people might well also be able to type <code>chmod a+r *</code> or whatever. It's the beginners we're worried about here.</p>",
        "id": 260661602,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636380852
    },
    {
        "content": "<p>Is it beginners we're worried about or accidental edits? Both are problems I think. Maybe a big banner would be good or a popup menu that says \"Hey this file is in _target, make sure you don't change it\" (with an option to never show again) to let beginners know the difference.</p>",
        "id": 260679551,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1636388136
    },
    {
        "content": "<p>Some sort of edit-lock on vscode would be nice, that prevents a stray press of the enter key from forcing a recompile of a file in mathlib/core, but this is orthogonal to <code>chmod</code></p>",
        "id": 260679722,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1636388193
    },
    {
        "content": "<p>Yeah, that last suggestion is exactly what I would like to have</p>",
        "id": 260680244,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1636388402
    },
    {
        "content": "<p>I found <a href=\"https://github.com/stallpool/vscode-readonly-extension/releases/tag/1.0.0\">https://github.com/stallpool/vscode-readonly-extension/releases/tag/1.0.0</a> but unfortunately it seems completely incompatible with the vim extension</p>",
        "id": 260681934,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1636389087
    },
    {
        "content": "<p>The vim extension is basically unusable anyway. It used to be almost usable but then something went very wrong. And now there is some Lean support in vim itself.</p>",
        "id": 260682189,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1636389190
    },
    {
        "content": "<p>I use it <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 260682276,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1636389232
    },
    {
        "content": "<p>(This is somewhat easy to do in normal vim if any of you want that :) -- an autocmd hidden behind a config option that does <code>:set readonly</code> which you could disable could do it, so happy to add that to <code>lean.nvim</code> as a configurable option)</p>",
        "id": 260682399,
        "sender_full_name": "Julian Berman",
        "timestamp": 1636389269
    },
    {
        "content": "<p>But does that stop you editing the file and causing lean to recompile, or only from saving the file?</p>",
        "id": 260682729,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1636389422
    },
    {
        "content": "<p>Either is doable -- <code>:set nomodifiable</code> is probably better if the intention is to make it not changeable at all.</p>",
        "id": 260682959,
        "sender_full_name": "Julian Berman",
        "timestamp": 1636389520
    },
    {
        "content": "<p>Lunchtime PR -- <a href=\"https://github.com/Julian/lean.nvim/pull/193\">https://github.com/Julian/lean.nvim/pull/193</a> which you can try if you'd like. Needs me to figure out how this works in Lean4 but I believe it functions as requested for Lean3.</p>",
        "id": 260692024,
        "sender_full_name": "Julian Berman",
        "timestamp": 1636393274
    },
    {
        "content": "<p>I'm sorry but can't just restart the server quickly when that happens?</p>",
        "id": 260692458,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636393454
    },
    {
        "content": "<p>Forcing a restart always worked for me.</p>",
        "id": 260692496,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636393474
    },
    {
        "content": "<p>If I have changes in 37 files, I might not want to restart.</p>",
        "id": 260695853,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1636394765
    },
    {
        "content": "<p>Oh yeah, no</p>",
        "id": 260695902,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636394791
    }
]