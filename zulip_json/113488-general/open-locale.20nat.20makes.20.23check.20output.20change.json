[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.power_series.basic</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">power_series.coeff_mul</span>\n<span class=\"c1\">-- power_series.coeff_mul : ∀ (n : ℕ) (φ ψ : power_series ?M_1),</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">nat</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">power_series.coeff_mul</span>\n<span class=\"c1\">--power_series.coeff_mul : ∀ (n : ℕ) («φ» ψ : power_series ?M_1),</span>\n</code></pre></div>\n<p>A random French quote appears. Is this anything to worry about? I'm manipulating power series involving exp so factorials show up (that's why I <code>open_locale nat</code>ed).</p>\n<p>I have no idea how to find out what <code>open_locale nat</code> does, all I know is that it gives me access to the <code>!</code> notation.</p>",
        "id": 221009767,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609077623
    },
    {
        "content": "<p>Searching for <code>in nat</code> finds its notation for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.totient/src\">src#nat.totient</a></p>",
        "id": 221009839,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609077796
    },
    {
        "content": "<p>Perhaps there's a better way to show everything in a locale though</p>",
        "id": 221009861,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609077831
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/open-locale.20nat.20makes.20.23check.20output.20change/near/221009861\">said</a>:</p>\n<blockquote>\n<p>Perhaps there's a better way to show everything in a locale though</p>\n</blockquote>\n<p>The docs suggest <code>run_cmd print_localized_commands [`nat]</code></p>",
        "id": 221015319,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1609088191
    },
    {
        "content": "<p>The docs for <code>localized</code>, presumably?</p>",
        "id": 221015337,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609088227
    },
    {
        "content": "<p>It might be cool if <code>doc-gen</code> could show those, although I'm not sure where best to show them</p>",
        "id": 221015344,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609088249
    },
    {
        "content": "<p>We could have a separate page showing all the locales.</p>",
        "id": 221016950,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609091233
    },
    {
        "content": "<p>That's reasonable</p>",
        "id": 221017008,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609091318
    },
    {
        "content": "<p>I assume this is a relatively straightforward task of getting print_localized_cmds to output json</p>",
        "id": 221017017,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609091357
    },
    {
        "content": "<p>Is there a zulip linkifier for the doc version of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/print_localized_cmds/src\">src#print_localized_cmds</a>?</p>",
        "id": 221017019,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609091391
    },
    {
        "content": "<p>Not sure what you mean... <a href=\"https://leanprover-community.github.io/mathlib_docs/find/print_localized_commands\">docs#print_localized_commands</a> ?</p>",
        "id": 221017109,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609091526
    },
    {
        "content": "<p>Regarding documentation of the different locales, I was about to open a new issue and I found <a href=\"https://github.com/leanprover-community/doc-gen/issues/94\">doc-gen#94</a> by <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span>.</p>",
        "id": 221075560,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609175808
    }
]