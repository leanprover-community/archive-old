[
    {
        "content": "<p>(deleted)</p>",
        "id": 125618723,
        "sender_full_name": "Nima",
        "timestamp": 1524574083
    },
    {
        "content": "<p>How should I change the following code, so in the second case I know <code>a</code> is not <code>aa</code>?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">inductive</span> <span class=\"n\">ind</span> <span class=\"bp\">|</span> <span class=\"n\">aa</span> <span class=\"bp\">|</span> <span class=\"n\">bb</span>\n<span class=\"kn\">open</span> <span class=\"n\">ind</span>\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">ind</span> <span class=\"bp\">→</span> <span class=\"n\">ind</span> <span class=\"bp\">→</span> <span class=\"n\">ind</span> <span class=\"bp\">→</span> <span class=\"n\">ind</span> <span class=\"bp\">→</span> <span class=\"n\">nat</span>\n<span class=\"bp\">|</span> <span class=\"n\">aa</span> <span class=\"bp\">_</span>  <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"bp\">|</span> <span class=\"n\">a</span>  <span class=\"n\">aa</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"bp\">|</span> <span class=\"bp\">_</span>  <span class=\"bp\">_</span>  <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n</pre></div>",
        "id": 125618804,
        "sender_full_name": "Nima",
        "timestamp": 1524574258
    },
    {
        "content": "<p>you can change the title next time</p>",
        "id": 125618858,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524574385
    },
    {
        "content": "<p>type <code>bb</code> instead of <code>a</code></p>",
        "id": 125618863,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524574400
    },
    {
        "content": "<p>(it can't know inside a match what conditions are not yet matched)</p>",
        "id": 125618872,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524574436
    },
    {
        "content": "<p>How do I change the title?<br>\nwhat if I have <br>\n<code>inductive ind | aa | bb | cc | dd</code></p>",
        "id": 125618929,
        "sender_full_name": "Nima",
        "timestamp": 1524574500
    },
    {
        "content": "<p>maybe could you give us the whole context? I sense some <a href=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\" target=\"_blank\" title=\"https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem\">XY problem</a> going on here</p>",
        "id": 125618945,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524574531
    },
    {
        "content": "<p>sorry</p>",
        "id": 125618947,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524574535
    },
    {
        "content": "<blockquote>\n<p>How do I change the title?</p>\n</blockquote>\n<p>Just edit the post. There will be a field to edit the title as well.</p>",
        "id": 125618950,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1524574539
    },
    {
        "content": "<blockquote>\n<p>what if I have <br>\n<code>inductive ind | aa | bb | cc | dd</code></p>\n</blockquote>\n<p>I think you'd need an <code>if _ then _ else _</code> and a <code>match</code> inside one of the branches</p>",
        "id": 125619007,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1524574591
    },
    {
        "content": "<p>ite is hard to destruct. I don't recommend using it at all unless necessary</p>",
        "id": 125619020,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524574612
    },
    {
        "content": "<p>I'm sure his situation has other ways out</p>",
        "id": 125619022,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524574617
    },
    {
        "content": "<p>It would help if you derived <code>decidable_eq</code>:</p>\n<div class=\"codehilite\"><pre><span></span>@[derive decidable_eq]\ninductive ind | aa | bb | cc | dd\n</pre></div>",
        "id": 125619041,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1524574634
    },
    {
        "content": "<p>Kenny, the alternative would be to match on all branches.</p>",
        "id": 125619119,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1524574799
    },
    {
        "content": "<p>one can't be so sure</p>",
        "id": 125619180,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524574819
    },
    {
        "content": "<p>So if I have a <strong>sparse</strong> match on many variables, and in each case I want to use the fact that previous cases were not a match, I would be better off with if-then-else. Right?</p>",
        "id": 125619276,
        "sender_full_name": "Nima",
        "timestamp": 1524575006
    },
    {
        "content": "<p>Exactly</p>",
        "id": 125619323,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1524575048
    },
    {
        "content": "<p>Thanks</p>",
        "id": 125619332,
        "sender_full_name": "Nima",
        "timestamp": 1524575083
    }
]