[
    {
        "content": "<p>I'm thinking of defining <a href=\"http://nlab-pages.s3.us-east-2.amazonaws.com/nlab/show/frame\">frames</a> and inserting them between <a href=\"https://leanprover-community.github.io/mathlib_docs/find/complete_lattice\">docs#complete_lattice</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/complete_distrib_lattice\">docs#complete_distrib_lattice</a>. Does anybody see something wrong with that?</p>",
        "id": 269723117,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643370346
    },
    {
        "content": "<p>Do we need the order dual notion to frames? A frame has an <code>inf</code>-distributive <code>Sup</code>, so do we need the things with a <code>sup</code>-distributive <code>Inf</code>?<br>\nAbove, Johan is claiming that locales are dual to frames, but this seems in the category theory understanding of duality.</p>",
        "id": 269733342,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643375656
    },
    {
        "content": "<p>Yes, it's the opposite category</p>",
        "id": 269733906,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1643375942
    },
    {
        "content": "<p>Just be aware that there is a completely different notion of <a href=\"https://en.wikipedia.org/wiki/Frame_(linear_algebra)\">frame</a>; at least, I think it's different, but sometimes I am surprised by category theory. In the finite dimensional setting, a frame is just a spanning set, but in the infinite dimensional setting there is a distinction.</p>",
        "id": 269756174,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1643384881
    },
    {
        "content": "<p>Yeah, I think that's a genuinely different notion. I don't know of a connection.</p>",
        "id": 269756517,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1643385008
    },
    {
        "content": "<p>And then there are also <a href=\"https://en.wikipedia.org/wiki/Coframe\">coframes</a>, which I hoped were the order dual of frames.</p>",
        "id": 269757073,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643385242
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"439483\">@Andrew Yang</span>, what are your plans regarding this?</p>",
        "id": 269792738,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643399642
    },
    {
        "content": "<p>I don't really have the relevant knowledge and the plans to do more topos theory unless I need to.</p>",
        "id": 269793007,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1643399738
    },
    {
        "content": "<p>I didn't know I was stepping into topos theory <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span> I just want to play with orders.</p>",
        "id": 269793141,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643399791
    },
    {
        "content": "<p>One thing I foresee is that we will want complete Heyting algebras, which are just frames again, but this time with the implication operator on top. So the situation is analogous to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/complete_semilattice_Sup\">docs#complete_semilattice_Sup</a> vs dosc#complete_lattice. Do you think I should repeat the design decisions there or instead have only one class which contains the maximum amount of info and a constructor to build it for you when needed?</p>",
        "id": 269793472,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643399948
    },
    {
        "content": "<p>This second option means we can't insert frames below <a href=\"https://leanprover-community.github.io/mathlib_docs/find/complete_distrib_lattice\">docs#complete_distrib_lattice</a> unless we add the redundant Heyting implication info there too. Actually, that might be a good idea.</p>",
        "id": 269793684,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643400026
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> , I just started looking into adding Heyting algebras. I was going to rebase <a href=\"https://github.com/leanprover-community/mathlib/pull/5527\">#5527</a> but it looks like a lot has changed since then so maybe better to start from scratch. Do you think it would be best to add frames first and then follow up with Heyting PR which redefines <code>frame</code>? Also, what do you mean by \"redundant\" -- that the implication could be defined a posteriori using joins and whatnot but one may still want to squish it into the typeclass definition?</p>",
        "id": 269891636,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1643493756
    },
    {
        "content": "<p>Hey! I defined Heyting algebras today! I was opening the PR right now.</p>",
        "id": 269891653,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643493789
    },
    {
        "content": "<p>I took yet a slightly different approach to <a href=\"https://github.com/leanprover-community/mathlib/pull/5527\">#5527</a></p>",
        "id": 269891663,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643493813
    },
    {
        "content": "<p>Also, <a href=\"https://github.com/leanprover-community/mathlib/pull/11709\">#11709</a> defines frames.</p>",
        "id": 269891707,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643493843
    },
    {
        "content": "<p>Sorry, it seems like I did everything you wanted to do.</p>",
        "id": 269891754,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643493926
    },
    {
        "content": "<p>No no this is great! Actually I would like to define some examples of Heyting algebras, in particular the opens of a topology and subpresheaves of a given presheaf. Maybe you have some of these already?</p>",
        "id": 269891904,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1643494083
    },
    {
        "content": "<p>So far, I have <code>Prop</code> <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 269891944,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643494119
    },
    {
        "content": "<p>The opens of a topology should be very straightforward. I have basically no idea what the second one is.</p>",
        "id": 269891972,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643494162
    },
    {
        "content": "<p>I am doing all this for the sake of order theory, so don't expect much topology from me, at least for now.</p>",
        "id": 269891977,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643494188
    },
    {
        "content": "<p>Awesome, I will wait for your PR.</p>",
        "id": 269892241,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1643494467
    },
    {
        "content": "<p>Running out of time today! Will PR tomorrow.</p>",
        "id": 269892999,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643495431
    }
]