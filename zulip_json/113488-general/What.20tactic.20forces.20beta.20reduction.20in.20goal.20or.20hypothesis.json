[
    {
        "content": "<p>Clearly a newbie question -- but I don't see the answer at hand. Sorry to have to ask. E.g., if my current goal is 3 * 3 -= 8, how, in a tactic script, do I force the * expression to be evaluated, yielding 9 = 8 as the new goal?</p>",
        "id": 135516798,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1539143523
    },
    {
        "content": "<p>If you're dealing with number literals, use <code>norm_num</code>. It works whether you have large numbers or small ones. Reduction will get pretty slow.</p>",
        "id": 135516869,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1539143654
    },
    {
        "content": "<p>Because <code>3 * 3 = 9</code> is true by definition, if your goal is <code>3 * 3 = ...</code> then in tactic mode you can change it to <code>9 = ...</code> with the <code>show</code> tactic. </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">9</span> <span class=\"bp\">=</span> <span class=\"mi\">8</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">8</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">show</span> <span class=\"mi\">9</span> <span class=\"bp\">=</span> <span class=\"mi\">8</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 135521476,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1539152016
    },
    {
        "content": "<p>The funny thing is that this works too:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">9</span> <span class=\"bp\">=</span> <span class=\"mi\">8</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">8</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>because Lean is quite happy to treat <code>3 * 3</code> and <code>9</code> as equal objects when attempting to convince itself that the hypothesis really is equal to the goal.</p>",
        "id": 135521541,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1539152084
    },
    {
        "content": "<p>The more general case  is one where the current goal involves expressions in which functions are applied to arguments. I'm looking for the tactic that simplifies the goal by reducing all of the (or perhaps selected) function application expressions to values.</p>",
        "id": 135541690,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1539178833
    },
    {
        "content": "<p>If you are ready to provide the new goal explicitly then <code>change</code> will do that</p>",
        "id": 135541985,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539179134
    },
    {
        "content": "<p>I was hoping to be able to just use a \"simpl\" (or whatever) tactic. Seems that Lean doesn't natively provide such a thing. I find that surprising.</p>",
        "id": 135542310,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1539179494
    },
    {
        "content": "<p>Hold on</p>",
        "id": 135542359,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539179524
    },
    {
        "content": "<p>you could try something like:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interactive</span><span class=\"bp\">.</span><span class=\"n\">beta_red</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"o\">[]</span> <span class=\"o\">{</span><span class=\"n\">beta</span> <span class=\"o\">:=</span> <span class=\"n\">tt</span><span class=\"o\">}]</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">beta_red</span><span class=\"o\">,</span>\n  <span class=\"n\">refl</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 135542610,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539179774
    },
    {
        "content": "<p>and probably set other config flag to false</p>",
        "id": 135542635,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539179797
    },
    {
        "content": "<p>I think we already has the same discussion before (or a closely related one)</p>",
        "id": 135542646,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1539179812
    },
    {
        "content": "<p>Maybe <code>unfold</code> is what you're looking for? Do you want to post an example of what you're trying to do?</p>",
        "id": 135565975,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1539202976
    }
]