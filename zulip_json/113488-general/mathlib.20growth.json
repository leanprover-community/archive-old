[
    {
        "content": "<p>Over at <a href=\"#narrow/stream/113488-general/topic/lines.20per.20commit/near/264120072\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/lines.20per.20commit/near/264120072</a> I asked about the trend for lines per commit to mathlib master. I received some helpful replies.</p>\n<p>I'm trying to understand mathlib growth better. The graphs at <a href=\"https://leanprover-community.github.io/mathlib_stats.html\">https://leanprover-community.github.io/mathlib_stats.html</a> suggest a pretty stable linear growth rate, with a singular increase in derivate around the start of the covid pandemic (correlation?).</p>\n<p>The number of contributors is growing, but the number of lines added per month isn't. One explanation is that the number of contributors per month is quite stable. For every new contributor, an old one stops contributing.</p>\n<ul>\n<li>Does the data support that hypothesis?</li>\n<li>What is the average number of commits per contributor? How is this distributed?</li>\n<li>Other interesting metrics?</li>\n</ul>\n<p>I have no skills at all in the data science department. If someone can help me out, that would be great.</p>",
        "id": 264852297,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639486356
    },
    {
        "content": "<p>It would be interesting to know how much work is devoted to refactoring and how much to prove new theorem. But I don't know how to measure it.</p>",
        "id": 264853385,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1639486825
    },
    {
        "content": "<p>Number of lines added - number of lines removed?</p>",
        "id": 264853416,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639486846
    },
    {
        "content": "<p>This is an interesting idea!</p>",
        "id": 264853636,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1639486954
    },
    {
        "content": "<p>My net total usually goes down when I refactor, for example.</p>",
        "id": 264853707,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639486990
    },
    {
        "content": "<p>Right. All the golfing attempts fight against the growth trend. If mathlib grows 25K lines in a month, it actually grew a bit more, probably. But I have no idea by how much.</p>",
        "id": 264853833,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639487050
    },
    {
        "content": "<p>I am thinking about stuff like changing the definition of a group (I don't find the PR). Does someone has the PR number?</p>",
        "id": 264853838,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1639487052
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/7255\">#7255</a></p>",
        "id": 264853985,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639487131
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> Another hypothesis is that space for contribution saturates as the lib grows. And people do get involved in refactoring and/or simplification. That is, the lib can also evolve with line removals</p>",
        "id": 264854974,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639487649
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/7255\">#7255</a> had 634 lines added and 465 removed. Added - removed gives 169, that is surely not a lot considering the work done, so this seems a reasonable thing to consider if we want to ignore refactoring</p>",
        "id": 264863308,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1639491450
    },
    {
        "content": "<p>If I look at the <code>commits per month</code> graph, the growth definitely seems to be increasing (even when ignoring all data before March 2020). The lowest months of 2021 (May and July) are about or above average when compared to the period 2020-03 till 2020-12.</p>",
        "id": 264882758,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1639498852
    },
    {
        "content": "<p>So I'm not sure if \"linear growth rate\" is accurate. But it's possible that the number of commits has increased, but the size of commits has decreased.</p>",
        "id": 264882919,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1639498921
    },
    {
        "content": "<p>If you do want a growth metric that includes refactoring, lines added + lines removed might be interesting. On our stats page, an increase here would only show up in the commit graph, where it could be obscured by other things.</p>",
        "id": 264885876,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1639500036
    },
    {
        "content": "<p>Backwards moving average (20-sized windows) of the metric Rob mentioned (using the data mentioned <a href=\"#narrow/stream/113488-general/topic/lines.20per.20commit/near/264130359\">here</a>):<br>\n<a href=\"/user_uploads/3121/qlktqEp8TLD1oFFMZsK8emCp/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/qlktqEp8TLD1oFFMZsK8emCp/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/qlktqEp8TLD1oFFMZsK8emCp/image.png\"></a></div>",
        "id": 264891328,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639501947
    },
    {
        "content": "<p>Can you make the window time-based rather than commit based?</p>",
        "id": 264891557,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639502040
    },
    {
        "content": "<p>The data doesn't have that info :/</p>",
        "id": 264892185,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639502250
    },
    {
        "content": "<p>I also wanted to check the \"average journey of a mathlib contributor\", motivated by the hypothesis that Johan raised. I thought about plotting contribution metrics by tenure (after the first contribution), normalized by the average size of the contributions (attempting to mitigate the bias that person A contributes more than person B in volume). I'd expect to see the contribution volume decreasing after the first contribution</p>",
        "id": 264893323,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639502662
    },
    {
        "content": "<p>I think to get useful graphs, it will be very helpful to have data that contains commit timestamps. Is that hard to get?</p>",
        "id": 264894503,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639503079
    },
    {
        "content": "<p>There's a git API in Python that you could use to extract the data pretty easily</p>",
        "id": 264894854,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1639503214
    },
    {
        "content": "<p>That would make things easier. I glanced through the GitHub API and I couldn't find it. It's a big API</p>",
        "id": 264895377,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639503412
    },
    {
        "content": "<p>The GitHub API is different, although if you want to associate contributors to GitHub user accounts you'd have to use it too. I was talking about <a href=\"https://gitpython.readthedocs.io/en/stable/\">https://gitpython.readthedocs.io/en/stable/</a></p>",
        "id": 264895766,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1639503569
    },
    {
        "content": "<p>Nice! I might take a loot at it later</p>",
        "id": 264896818,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639503984
    },
    {
        "content": "<p>Okay, I finally had some time to take a look at it. Turns out GitHub blocked me from using the API because I made too many requests (<code>mathlib</code> has too many commits).</p>\n<p>So I created a Python script that parses the returns from terminal calls and processes everything locally. Here's the <a href=\"https://gist.github.com/arthurpaulino/f9d270d39872f42ca31cc6ad6dd76b5c\">gist</a> if anyone wants to use it.</p>\n<p>And here is the <a href=\"/user_uploads/3121/qyD5FbjWZgzLDN76vRLlMBIG/git_stats.zip\">extracted data</a> <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 264959197,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639537060
    },
    {
        "content": "<p>And here's the graph with line changes per day (smoothed) across time:<br>\n<a href=\"/user_uploads/3121/sUjhisJq5pC8z8-U1tQEk8nY/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/sUjhisJq5pC8z8-U1tQEk8nY/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/sUjhisJq5pC8z8-U1tQEk8nY/image.png\"></a></div>",
        "id": 264960031,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639537994
    },
    {
        "content": "<p>Looks like a good moment to buy <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 264960459,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639538466
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> Great! Thanks for doing this</p>",
        "id": 264966784,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639545266
    },
    {
        "content": "<p>Your <code>get_commit_hashes</code> is secretly <code>git log --pretty='format:%H'</code>, by the way</p>",
        "id": 264976312,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1639555854
    },
    {
        "content": "<p>Probably simpler to parse what you want from <code>git log --pretty='format:%H%x00%an%x00%ai' --numstat</code></p>",
        "id": 264976657,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1639556162
    },
    {
        "content": "<p>which outputs the complete list of commits in the form:<br>\n<code>long-hash</code> null-byte <code>author name</code> null-byte <code>author date in ISO format</code> newline<br>\nfollowed by a list of files changed in the form <code>lines-added</code> whitespace <code>lines-deleted</code> whitespace filename</p>",
        "id": 264976781,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1639556254
    },
    {
        "content": "<p>(just saves the multiple calls to <code>git</code> really)</p>",
        "id": 264976866,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1639556323
    },
    {
        "content": "<ul>\n<li>\n<p>Is it possible to count the number of characters rather than just lines?</p>\n</li>\n<li>\n<p>Is there any usable information in the content of commit or PR descriptions — for example, what fraction of commits contain \"golf\"?</p>\n</li>\n<li>\n<p>Can we count the growth rate of the number of <code>lemma</code>s, <code>theorem</code>s, <code>def</code>s, <code>class</code>es etc?</p>\n</li>\n</ul>",
        "id": 264978463,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1639557433
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"117987\">@Patrick Stevens</span> !<br>\nAny other format option to extract the info Stuart asked for?</p>",
        "id": 264983068,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639560316
    },
    {
        "content": "<p>Actually I will check the documentation for <code>--pretty</code> later <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> <br>\nThis is very useful knowledge</p>",
        "id": 264983489,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639560568
    },
    {
        "content": "<p>Have you considered using gitpython as Rob suggested?</p>",
        "id": 264983500,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639560577
    },
    {
        "content": "<p>Yes but I got blocked. Unless I did something wrong (totally possible)</p>",
        "id": 264983630,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639560649
    },
    {
        "content": "<p>By what?</p>",
        "id": 264983658,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639560669
    },
    {
        "content": "<p>Gitpython works offline</p>",
        "id": 264983661,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639560675
    },
    {
        "content": "<p>By GitHub</p>",
        "id": 264983665,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639560677
    },
    {
        "content": "<p>You should be able to use gitpython on a local clone</p>",
        "id": 264983710,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639560718
    },
    {
        "content": "<p>There. I misused it <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 264983753,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639560726
    },
    {
        "content": "<p>I didn't even know that it supported any part of the github api</p>",
        "id": 264983795,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639560769
    },
    {
        "content": "<p>I still want to learn about --pretty tho, so I might as well do both</p>",
        "id": 264984147,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639560971
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> Thanks for doing this. I think it's great to get some insight into this data.</p>",
        "id": 264991675,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639565482
    },
    {
        "content": "<p>Peeking at commit diffs content is a bit more expensive, but should be feasible</p>",
        "id": 264997399,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639568614
    },
    {
        "content": "<p><a href=\"https://gist.github.com/arthurpaulino/f9d270d39872f42ca31cc6ad6dd76b5c\">Gist</a> updated with Patrick's tips. It's waaaay shorter and faster <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 265011891,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639576150
    },
    {
        "content": "<p>I also got slightly curious, so here's a notebook you may also find very slightly useful if you didn't poke at gitpython too much yet: <a href=\"https://gist.github.com/Julian/3cb202d9461e73b6c06dd564683f5118\">https://gist.github.com/Julian/3cb202d9461e73b6c06dd564683f5118</a></p>\n<p>I was on my way to trying to train some simple model but got tied up grading finals womp womp so probably no more for me till later.</p>",
        "id": 265011913,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639576168
    },
    {
        "content": "<p>I'm gonna use gitpython to get more details about the commit and the diffs (I suppose it's possible to look at diffs in gitpython)</p>",
        "id": 265012344,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639576355
    },
    {
        "content": "<p>About <code>\"area\": file.split(\"/\")[1] if \"/\" in file else None,</code>: I thought about doing something similar, but a commit might tweak more than 1 area so I left it for later</p>",
        "id": 265012467,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639576417
    },
    {
        "content": "<p>yes you can look at diffs in gitpython</p>",
        "id": 265012491,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639576430
    },
    {
        "content": "<p>right in that dataset above one row is not a commit</p>",
        "id": 265012509,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639576440
    },
    {
        "content": "<p>it's a single file in a single commit</p>",
        "id": 265012549,
        "sender_full_name": "Julian Berman",
        "timestamp": 1639576445
    },
    {
        "content": "<p>Got it</p>",
        "id": 265012592,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639576463
    },
    {
        "content": "<p>Right, I'm blind <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">commit</span> <span class=\"ow\">in</span> <span class=\"n\">repo</span><span class=\"o\">.</span><span class=\"n\">iter_commits</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">stats</span> <span class=\"ow\">in</span> <span class=\"n\">commit</span><span class=\"o\">.</span><span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span>\n</code></pre></div>",
        "id": 265012725,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639576515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"422543\">Stuart Presnell</span> <a href=\"#narrow/stream/113488-general/topic/mathlib.20growth/near/264978463\">said</a>:</p>\n<blockquote>\n<ul>\n<li>\n<p>Is it possible to count the number of characters rather than just lines?</p>\n</li>\n<li>\n<p>Is there any usable information in the content of commit or PR descriptions — for example, what fraction of commits contain \"golf\"?</p>\n</li>\n<li>\n<p>Can we count the growth rate of the number of <code>lemma</code>s, <code>theorem</code>s, <code>def</code>s, <code>class</code>es etc?</p>\n</li>\n</ul>\n</blockquote>\n<p>Counting declarations (properly) goes beyond git. You can't get an accurate number without a compiled mathlib, which even if you wanted to get Azure caches, we don't have for every commit. So this data would take weeks to collect. You'd have to approximate it by counting occurences of <code>lemma</code>/<code>theorem</code>/<code>inductive</code> etc in the text.</p>",
        "id": 265013736,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1639576896
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> <a href=\"#narrow/stream/113488-general/topic/mathlib.20growth/near/264960031\">said</a>:</p>\n<blockquote>\n<p>And here's the graph with line changes per day (smoothed) across time:<br>\n<a href=\"/user_uploads/3121/sUjhisJq5pC8z8-U1tQEk8nY/image.png\">image.png</a></p>\n</blockquote>\n<p>Sorry if I'm missing something, what are MA_25/50/100?</p>",
        "id": 265013809,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1639576924
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> those are backward moving averages of 25/50/100 days (ago)</p>",
        "id": 265014057,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639577032
    },
    {
        "content": "<p>And yeah, counting declarations is a bit noisy because if a declaration is renamed or moved around, there will be a \"removed\" declaration and a \"created\" one</p>",
        "id": 265014577,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639577261
    },
    {
        "content": "<p>Found some extra time to play around with mathlib3 git data. This time using part of <span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span>'s logic to extract it.</p>\n<p><a href=\"https://gist.github.com/arthurpaulino/42b45382463ec6832f947f766e42a0f8\">Here's the notebook!</a></p>",
        "id": 265095429,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639613325
    },
    {
        "content": "<p>I was able to learn some interesting details about mathlib.</p>\n<ul>\n<li>Before humans existed, mathlib didn't have a <code>src</code> folder and every field of study had a folder in the root directory of the repository</li>\n<li>Mathlib has a reasonably high rate of line removals per commit, which reflects the community's concern about modularity/organization (actually, let me add this one graph)</li>\n<li>Not only the number of cumulative contributors is growing across time, which is obviously expected, but also the number of <em>distinct</em> contributors by month. I believe this is a very healthy sign of success</li>\n<li>I was rather surprised by the fact that the ratio of <code>k-stayers</code> is roughly stable since the beginnings of time</li>\n</ul>",
        "id": 265097261,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639614669
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> Great! These are exactly the kind of insights that I was hoping for. (I distinctly remember the moment in time when humans appeared, and all top-level folder were moved into <code>src/</code>.)</p>",
        "id": 265116434,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1639635588
    }
]