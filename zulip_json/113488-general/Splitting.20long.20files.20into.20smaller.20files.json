[
    {
        "content": "<p>What's mathlib's stance on how many different things should be in a single file? For instance, would it be reasonable to separate <code>semimodule</code> and <code>submodule</code>(currently in <code>algebra/module/basic.lean</code>  into separate files (<code>basic.lean</code> and <code>submodule.lean</code>)?</p>",
        "id": 206004527,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1596620852
    },
    {
        "content": "<p>I'm generally in favour of splitting, and I would say that splitting <code>module</code> and <code>submodule</code> is also a good idea if there are no obvious breakages in the files themselves. You can even <code>import algebra.module.submodule</code> in <code>src/algebra/module/default.lean</code>, and (almost) no code should break.</p>",
        "id": 206004972,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1596621210
    },
    {
        "content": "<p>Am I right in thinking that <code>default</code> is special, and <code>import a.b</code> will import <code>a.b.default</code> if found?</p>",
        "id": 206005100,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1596621316
    },
    {
        "content": "<p>I believe so.</p>",
        "id": 206005123,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1596621335
    },
    {
        "content": "<p>At least, it worked like that when splitting <code>ring_theory.polynomial</code>.</p>",
        "id": 206005139,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1596621354
    },
    {
        "content": "<p>I'll take a crack at that split once my two trivial open PRs against <code>basic.lean</code> (<a href=\"https://github.com/leanprover-community/mathlib/issues/3631\">#3631</a>, <a href=\"https://github.com/leanprover-community/mathlib/issues/3690\">#3690</a>)  are merged, thanks</p>",
        "id": 206005142,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1596621357
    },
    {
        "content": "<p>Thanks! I will take a look at the new PR.</p>",
        "id": 206005219,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1596621412
    },
    {
        "content": "<p>While it's great to provide <code>.default</code> files for users of mathlib, files in mathlib should use the minimised imports, rather than grabbing <code>.default</code>s, for the sake of minimising the compilation dependency graph.</p>",
        "id": 206008617,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1596624815
    },
    {
        "content": "<p>And yes, effort into splitting files is generally good.</p>",
        "id": 206008628,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1596624830
    },
    {
        "content": "<p>The one thing to think about is that it potentially degrades \"findability\", because it breaks the strategy \"guess the right file, then scroll through it\".</p>",
        "id": 206008682,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1596624856
    },
    {
        "content": "<p>And so appropriate documentation in the module doc-strings (XYZ can be found in files ABC) is important!</p>",
        "id": 206008697,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1596624876
    },
    {
        "content": "<p>Hopefully that strategy naturally leads into \"guess the right directory, scroll through the handful of files in it\"</p>",
        "id": 206008855,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1596625048
    },
    {
        "content": "<p>Does the html doc generator have a mechanism to link to types and declarations elsewhere like sphinx's <code>:func:`name` </code>?</p>",
        "id": 206008874,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1596625082
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113488-general/topic/Splitting.20long.20files.20into.20smaller.20files/near/206008682\">said</a>:</p>\n<blockquote>\n<p>The one thing to think about is that it potentially degrades \"findability\", because it breaks the strategy \"guess the right file, then scroll through it\".</p>\n</blockquote>\n<p>I've definitely noticed this aspect. I'm the one responsible for most of the massive files in mathlib, because I have high file size tolerance due to my <a href=\"http://set.mm\">set.mm</a> background (all of ZFC in one file of 600000 lines), and I employ this tactic all the time for finding things in mathlib, but I have noticed it being less effective of late. Especially if I forget that a splitting PR has landed, my mental model will say \"what is in this file is all there is about topic X\" and so if the file is suddenly shrunk then I get lots of false negatives when searching</p>",
        "id": 206009314,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1596625380
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/Splitting.20long.20files.20into.20smaller.20files/near/206008874\">said</a>:</p>\n<blockquote>\n<p>Does the html doc generator have a mechanism to link to types and declarations elsewhere like sphinx's <code>:func:`name` </code>?</p>\n</blockquote>\n<p>Any full declaration name that you type in backticks will be linked. See e.g. <code>with_top</code> in the first para of  <a href=\"https://leanprover-community.github.io/mathlib_docs/geometry/manifold/smooth_manifold_with_corners.html\">https://leanprover-community.github.io/mathlib_docs/geometry/manifold/smooth_manifold_with_corners.html</a></p>",
        "id": 206009589,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1596625626
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/Splitting.20long.20files.20into.20smaller.20files/near/206008855\">said</a>:</p>\n<blockquote>\n<p>Hopefully that strategy naturally leads into \"guess the right directory, scroll through the handful of files in it\"</p>\n</blockquote>\n<p>I don't know any editor that makes this convenient. This starts to remind me of big java programs where there are thousands of 10 line files and you are constantly searching for where the actual stuff gets done</p>",
        "id": 206009600,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1596625651
    },
    {
        "content": "<p>The other downside to many files is that <code>library_search</code> (and <code>simp</code>, for that matter) becomes weaker, because it can only see what is currently imported.</p>",
        "id": 206015480,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1596630161
    },
    {
        "content": "<p>On the gripping hand, <code>library_search</code> and <code>simp</code> become faster when you don't have unnecessary material imported...</p>",
        "id": 206015509,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1596630192
    },
    {
        "content": "<p>Findability via <code>library_search</code> / <code>simp</code> should not get worse if we move definitions (and their associated lemmas), right? Because you need to import those definitions anyway to talk about the thing we want to find.</p>",
        "id": 206015818,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1596630442
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/113488-general/topic/Splitting.20long.20files.20into.20smaller.20files/near/206004972\">said</a>:</p>\n<blockquote>\n<p>I would say that splitting <code>module</code> and <code>submodule</code> is also a good idea if there are no obvious breakages in the files themselves.</p>\n</blockquote>\n<p>PR'd as <a href=\"https://github.com/leanprover-community/mathlib/issues/3696\">#3696</a> with no complications. Will remove the draft status once <a href=\"https://github.com/leanprover-community/mathlib/issues/3631\">#3631</a> is resolved.</p>",
        "id": 206027090,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1596637025
    }
]