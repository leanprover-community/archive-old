[
    {
        "content": "<p>We currently use <code>has_scalar</code> which lets us spell things like <code>r • ![x, y] = ![r • x, r • y]</code>. But what about if I want something like <code>(X : polynomial R) • ![x, y] = ![polynomial.X * C x, polynomial.X * C y]</code>? Do we want instances for this type of thing in lean4 when we have <code>HMul</code>? Does it still make sense to talk about these as \"actions\" in the same way?</p>",
        "id": 263517603,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1638489603
    },
    {
        "content": "<p>I guess we would have to be careful of ambiguity like <code>![x, y] • ![a, b]</code>, which could mean <code>![![x•a, x•b],  ![y•a, y•b]]</code>  or <code>![![x•a, y•a],  ![x•b, y•b]]</code>, neither of which are what <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pi.has_scalar'\">docs#pi.has_scalar'</a> actually does today</p>",
        "id": 263517889,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1638489756
    },
    {
        "content": "<p>There is the tensor product which encompasses these two examples. Probably other random bilinear maps should not be a type class.</p>",
        "id": 263521214,
        "sender_full_name": "Reid Barton",
        "timestamp": 1638492360
    }
]