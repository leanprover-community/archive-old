[
    {
        "content": "<p>I'm running the following code:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">run_cmd</span> <span class=\"n\">eval_expr</span> <span class=\"n\">bool</span> <span class=\"o\">(</span><span class=\"n\">reflect</span> <span class=\"n\">tt</span><span class=\"o\">)</span> <span class=\"bp\">&gt;&gt;=</span> <span class=\"n\">trace</span>\n</pre></div>\n\n\n<p><code>bool</code> has an instance of <code>has_reflect</code> and the above is type correct but when I run it I get the following error:</p>\n<div class=\"codehilite\"><pre><span></span>VM does not have code for &#39;bool.tt&#39;\n</pre></div>\n\n\n<p>What can I do?</p>",
        "id": 130821232,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1533277602
    },
    {
        "content": "<p>There is definitely a bug somewhere in the workings of <code>eval_expr</code></p>",
        "id": 130830241,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533291225
    },
    {
        "content": "<p>workaround:</p>\n<div class=\"codehilite\"><pre><span></span>run_cmd eval_expr bool (reflect (id tt)) &gt;&gt;= trace\n</pre></div>",
        "id": 130830284,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533291245
    },
    {
        "content": "<p>looks like magic</p>",
        "id": 130830305,
        "sender_full_name": "Minchao Wu",
        "timestamp": 1533291295
    },
    {
        "content": "<p>Thanks! I was able to use this trick with <code>user_attribute.get_param_untyped</code> to replace <code>user_attribute.get_param</code></p>",
        "id": 130839532,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1533303658
    },
    {
        "content": "<p>(by wrapping the return with <code>id</code>: <code>to_expr ``(id %%r)</code>)</p>",
        "id": 130839561,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1533303694
    }
]