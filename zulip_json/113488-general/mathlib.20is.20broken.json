[
    {
        "content": "<p>The new Lean (merged just yesterday) breaks mathlib</p>",
        "id": 154987864,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547306916
    },
    {
        "content": "<p>naturally</p>",
        "id": 154987876,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547306950
    },
    {
        "content": "<p>what should we do then?</p>",
        "id": 154987880,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547306967
    },
    {
        "content": "<p>the breakage is mostly just theorems that moved from here to there or vice versa</p>",
        "id": 154987884,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547306989
    },
    {
        "content": "<p>travis seems to disagree</p>",
        "id": 154987937,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547307031
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ cd /c/lean\n\nKenny Lau@DESKTOP-F01EMD3 MINGW64 /c/lean\n$ git log -1 --pretty=oneline\n92826917a252a6092cffaf5fc5f1acb1f8cef379 fix(library/module_mgr): ignore &#39;\\r&#39; changes\n\nKenny Lau@DESKTOP-F01EMD3 MINGW64 /c/lean\n$ cd /c/mathlib\n\nKenny Lau@DESKTOP-F01EMD3 MINGW64 /c/mathlib\n$ git pull\nAlready up-to-date.\n\nKenny Lau@DESKTOP-F01EMD3 MINGW64 /c/mathlib\n$ winpty /c/lean/bin/lean --make\nC:\\mathlib\\tactic\\mk_iff_of_inductive_prop.lean:50:9: error: unknown identifier\n&#39;drop_pis&#39;\n[...]\n</pre></div>",
        "id": 154987962,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547307112
    },
    {
        "content": "<p>I think travis uses the old lean</p>",
        "id": 154988008,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547307130
    },
    {
        "content": "<p>Travis uses the Lean version specified in leanpkg.toml.</p>",
        "id": 154988014,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1547307171
    },
    {
        "content": "<p>which is 3.4.1</p>",
        "id": 154988024,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547307198
    },
    {
        "content": "<p>in that case I think we're fine</p>",
        "id": 154988027,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547307202
    },
    {
        "content": "<p>we can just make an update commit at some point</p>",
        "id": 154988030,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547307216
    },
    {
        "content": "<p>so I need to refrain from using 3.4.2? I really like the <code>\\r</code> fix though...</p>",
        "id": 154988031,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547307216
    },
    {
        "content": "<p>adapting to 3.4.2 isn't totally trivial, at least we have to import the removed things and remove any mathlib patches for the bugs</p>",
        "id": 154988078,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547307287
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean/compare/17fe3de...master\" target=\"_blank\" title=\"https://github.com/leanprover/lean/compare/17fe3de...master\">https://github.com/leanprover/lean/compare/17fe3de...master</a></p>",
        "id": 154988090,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547307344
    },
    {
        "content": "<p>changes</p>",
        "id": 154988092,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547307347
    },
    {
        "content": "<p>I'll just go back to 3.4.1 then</p>",
        "id": 154988093,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547307352
    },
    {
        "content": "<p>I can't find a 3.4.2 on lean repo</p>",
        "id": 154988149,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547307447
    },
    {
        "content": "<p>are you sure it's released?</p>",
        "id": 154988150,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547307458
    },
    {
        "content": "<p>It's not. The nightly is.</p>",
        "id": 154988152,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1547307467
    },
    {
        "content": "<p>I build Lean myself</p>",
        "id": 154988195,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547307501
    },
    {
        "content": "<p>I'm ready to release 3.4.2, but maybe someone wants to port mathlib first and make sure everything works out. With the intended branch layout, that would happen on the <code>master</code> branch while regular mathlib stays on the <code>3.4.1</code> default branch :) ...</p>",
        "id": 154988205,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1547307548
    },
    {
        "content": "<p>oh man imagine when Lean 4 comes out</p>",
        "id": 154988460,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547308027
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> I think coinductive was removed, and I think <code>tactic/mk_iff_of_inductive_prop.lean</code> depends on it</p>",
        "id": 154994675,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547318116
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/3.4.2\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/tree/3.4.2\">The branch <code>3.4.2</code> in <code>leanprover-community/mathlib</code></a> compiles with the latest nightly Lean. I didn't commit any changes to <code>leanpkg.toml</code> so if you want to try it out, you'll have to change <code>3.4.1</code> to <code>nightly</code> after you checkout.</p>\n<p>For reference, here are the relevant commits to base Lean <a href=\"https://github.com/leanprover/lean/commit/e79cb3f2c4987dcfbec8e3e15eb83837cabe1058\" target=\"_blank\" title=\"https://github.com/leanprover/lean/commit/e79cb3f2c4987dcfbec8e3e15eb83837cabe1058\">removing coinductive_predicates</a> and <a href=\"https://github.com/leanprover/lean/commit/95fa4cfb0a8774570d67bb231c1ab088a94e12bb\" target=\"_blank\" title=\"https://github.com/leanprover/lean/commit/95fa4cfb0a8774570d67bb231c1ab088a94e12bb\">removing relators and transfer</a>.</p>\n<p>All I did was copy the old <code>coinductive_predicates</code> to <code>meta</code>, merge the old <code>relator</code> into <code>logic/relator</code>, copy <code>transfer</code> to <code>tactics</code>, and then add the necessary <code>import</code> statements. I think the only thing that was removed that hasn't been added back in this branch is the transfer-related stuff in <code>library/data/dlist</code> since it only seemed to be used in the code in <code>int</code> that was removed.</p>",
        "id": 155049149,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1547418509
    },
    {
        "content": "<p>Looks good. <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> , I think we are go for launch</p>",
        "id": 155054930,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1547429203
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> I forgot to mention that the file <a href=\"https://github.com/leanprover-community/mathlib/blob/3.4.2/tests/coinductive.lean\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/3.4.2/tests/coinductive.lean\"><code>tests/coinductive</code></a> currently uses <code>#check</code>, <code>#print</code> and <code>admit</code>, which seems to be against mathlib style.</p>",
        "id": 155088895,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1547477352
    },
    {
        "content": "<blockquote>\n<p>so I need to refrain from using 3.4.2? I really like the <code>\\r</code> fix though...</p>\n</blockquote>\n<p>What's the <code>\\r</code> fix?</p>",
        "id": 156375247,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1547824695
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130500\">@Abhimanyu Pallavi Sudhir</span> It's a fix for an issue that windows users were having with unnecessary recompilation: see <a href=\"https://github.com/leanprover/lean/pull/1986\" target=\"_blank\" title=\"https://github.com/leanprover/lean/pull/1986\">https://github.com/leanprover/lean/pull/1986</a></p>",
        "id": 156375747,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1547825109
    },
    {
        "content": "<p>I've PR'd the 3.4.2 branch: <a href=\"https://github.com/leanprover/mathlib/pull/610\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/610\">https://github.com/leanprover/mathlib/pull/610</a></p>",
        "id": 156375774,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1547825139
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> The recent <a href=\"https://github.com/leanprover-community/mathlib/commit/72634d2c5ca048582107778aab164ac12aba0d40\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/commit/72634d2c5ca048582107778aab164ac12aba0d40\">\"feat(data/complex/basic): smul_re,im\" commit</a> has broken mathlib (<a href=\"https://travis-ci.org/leanprover-community/mathlib/jobs/513739846#L482\" target=\"_blank\" title=\"https://travis-ci.org/leanprover-community/mathlib/jobs/513739846#L482\">travis</a>). The issue is <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/ring_theory/algebra.lean#L355\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/ring_theory/algebra.lean#L355\">these lemmas in <code>ring_theory.algebra</code></a>.</p>",
        "id": 162183714,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1554052808
    },
    {
        "content": "<p>Fixed, thanks for pointing this out.</p>",
        "id": 162188645,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1554060938
    },
    {
        "content": "<p>Some lines were removed from <a href=\"https://github.com/leanprover-community/mathlib/blob/c91e6c2eb882b0fea4f4bdbba2b1c498cdf40da1/src/ring_theory/algebra.lean#L348-L355\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/c91e6c2eb882b0fea4f4bdbba2b1c498cdf40da1/src/ring_theory/algebra.lean#L348-L355\">https://github.com/leanprover-community/mathlib/blob/c91e6c2eb882b0fea4f4bdbba2b1c498cdf40da1/src/ring_theory/algebra.lean#L348-L355</a> which I think is good.<br>\nHowever, I don't like the names of <a href=\"https://github.com/leanprover-community/mathlib/commit/72634d2c5ca048582107778aab164ac12aba0d40\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/commit/72634d2c5ca048582107778aab164ac12aba0d40\">https://github.com/leanprover-community/mathlib/commit/72634d2c5ca048582107778aab164ac12aba0d40</a> because there is now <code>•</code> in sight. Shouldn't these be called <code>coe_mul_re</code> or something like that? Or they might also actually use the scalar multiplication, but maybe that imports too much high-level stuff?</p>",
        "id": 162213895,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554101740
    },
    {
        "content": "<p>I don't think <code>complex</code> should ever use <code>•</code> except in translating facts from modules</p>",
        "id": 162214066,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1554101974
    },
    {
        "content": "<p>there should be a simp lemma that rewrites <code>r • x : complex</code> to <code>\\u r * x</code></p>",
        "id": 162214125,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1554102009
    },
    {
        "content": "<p>Ok, that's fine with me.</p>",
        "id": 162214250,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554102183
    },
    {
        "content": "<p>So maybe those removed lemmas should be replaced with those simp lemmas</p>",
        "id": 162214263,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554102201
    },
    {
        "content": "<p>But I still think that the current <code>smul_re</code> doesn't follow the naming conventions.</p>",
        "id": 162214267,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554102234
    },
    {
        "content": "<p>given that there aren't going to be any theorems about <code>smul</code> itself like this, I think it's fine, since it's still \"morally\" <code>smul</code></p>",
        "id": 162214328,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1554102281
    }
]