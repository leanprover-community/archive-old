[
    {
        "content": "<p>I don't think this is an issue yet, but I noticed <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> introduced <code>instance : fact ((0 : ‚Ñù) &lt; 1) := zero_lt_one</code> in <a href=\"https://github.com/leanprover-community/mathlib/pull/3528/files#diff-7133d335dc07594a328658c93fc0e380R373\">https://github.com/leanprover-community/mathlib/pull/3528/files#diff-7133d335dc07594a328658c93fc0e380R373</a></p>\n<p>I suspect that other people will want that <code>fact</code>, perhaps outside the manifolds directories.</p>\n<p>Perhaps at some point we should add a linter that checks for duplicated instances?</p>",
        "id": 204988595,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595653242
    },
    {
        "content": "<p>I don't think there should be any global instances for <code>fact</code></p>",
        "id": 204991207,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1595658947
    },
    {
        "content": "<p>how does this instance get used right now? is it for getting to <code>nonempty Icc (0:\\R) 1</code>?</p>",
        "id": 204991352,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1595659230
    },
    {
        "content": "<p>If so, I think that should be an instance of its own</p>",
        "id": 204991603,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1595659798
    },
    {
        "content": "<p>No, it is to get a manifold with boundary structure on <code>Icc 0 1</code>, which requires the fact. And this manifold with boundary structure will be used all over the place when we mention smooth homotopies.</p>",
        "id": 204992300,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1595661268
    },
    {
        "content": "<p>shouldn't we need this fact only in the definition of the manifold with boundary structure?</p>",
        "id": 204992363,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1595661416
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/linter.20for.20.60fact.60/near/204991207\">said</a>:</p>\n<blockquote>\n<p>I don't think there should be any global instances for <code>fact</code></p>\n</blockquote>\n<p>I wouldn't mind having <code>fact (nat.prime 2)</code> as a global instance.</p>",
        "id": 204992427,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595661579
    },
    {
        "content": "<p>It's not about what would be nice to have, it's about making <code>fact</code> performant. <code>fact</code> is the least efficient of all typeclasses, because it is an unstructured bag of theorems that must be linearly enumerated for any <code>fact</code> typeclass instance. I would prefer that the behavior of <code>fact</code> inference is under control of the user, meaning only local instances and hypotheses are allowed</p>",
        "id": 204994700,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1595665950
    },
    {
        "content": "<p>If you want a manifold with boundary structure on <code>Icc 0 1</code>, make that an instance</p>",
        "id": 204994709,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1595665987
    },
    {
        "content": "<p>Like in <a href=\"https://github.com/leanprover-community/mathlib/issues/3549\">#3549</a>?</p>",
        "id": 205004371,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1595684520
    },
    {
        "content": "<p>By the way, don't forget that you can use <code>localized</code> for instances too. It seems quite reasonable that things like <code>fact (prime 2)</code> can be put in a locale for a bunch of related files</p>",
        "id": 205011374,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1595695627
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/linter.20for.20.60fact.60/near/204991207\">said</a>:</p>\n<blockquote>\n<p>I don't think there should be any global instances for <code>fact</code></p>\n</blockquote>\n<p>in this case, how about a linter that checks for instances of <code>fact</code>?</p>",
        "id": 205011575,
        "sender_full_name": "Reid Barton",
        "timestamp": 1595695910
    },
    {
        "content": "<p>sure, that sounds easy enough</p>",
        "id": 205011844,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1595696276
    }
]