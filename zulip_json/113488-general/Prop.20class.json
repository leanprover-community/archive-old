[
    {
        "content": "<p>If we have <code>class C a : Prop := (...)</code>, and then <code>instance foo : C bar := (...)</code>, I guess Lean treats <code>foo</code> as a <code>def</code> not a <code>lemma</code>, right?<br>\nIs there ever an argument for writing <code>@[instance] lemma foo : C bar := (...)</code>?</p>",
        "id": 177999868,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570903465
    },
    {
        "content": "<p>How much breakage of user code that doesn't use internals is expected in the lean 3 -&gt; lean 4 transition?</p>",
        "id": 178003126,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570908683
    },
    {
        "content": "<p>My impressions was about 86.4%</p>",
        "id": 178003268,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570908909
    },
    {
        "content": "<p>No seriously... I think we shouldn't expect any compatibility</p>",
        "id": 178003271,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570908924
    },
    {
        "content": "<p>But some people on the chat, who are a lot more skilled than I am, might be able to convert huge bunches of code using fancy metaprogramming trick plus Perl regexes.</p>",
        "id": 178003316,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570908968
    },
    {
        "content": "<p>Got it...</p>",
        "id": 178003387,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570909121
    },
    {
        "content": "<blockquote>\n<p>If we have <code>class C a : Prop := (...)</code>, and then <code>instance foo : C bar := (...)</code>, I guess Lean treats <code>foo</code> as a <code>def</code> not a <code>lemma</code>, right?<br>\nIs there ever an argument for writing <code>@[instance] lemma foo : C bar := (...)</code>?</p>\n</blockquote>\n<p>This is correct. And all <code>instances</code> also have a greater transparency than the default (<code>semireducible</code>).</p>\n<p>Maybe there is sometimes an argument for <code>@[instance] lemma</code>, but I don't think it matters very much when you use <code>def</code> instead of <code>lemma</code> (the other way around is bad). Note: for <code>#sanity_check</code> I explicitly omit everything tagged with <code>@[instance]</code> from the <code>lemma</code>/<code>def</code> check.</p>",
        "id": 178003459,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1570909278
    }
]