[
    {
        "content": "<p>Hello, </p>\n<p>I little question, i upgrate mathlib and the notation in tactic state for <code> to_matrix </code> change ! </p>\n<p>So the change is  <code> f.to_matrix </code> instead of  <code> to_matrix f </code>   can i do something to have the  <code> to_matrix f </code> ?   thx</p>",
        "id": 197818490,
        "sender_full_name": "orlando",
        "timestamp": 1589668543
    },
    {
        "content": "<p>ohhh it's also for <code> range f</code> and  <code>ker f </code> now it's <code> f.ker </code> and <code>f.range </code> <span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span></p>",
        "id": 197818549,
        "sender_full_name": "orlando",
        "timestamp": 1589668665
    },
    {
        "content": "<p>does this help?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">pequiv</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">pequiv</span><span class=\"bp\">.</span><span class=\"n\">to_matrix</span>\n</code></pre></div>",
        "id": 197819578,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1589670449
    },
    {
        "content": "<p>Some option about pretty printing changed its default value. Look at recently closed lean PRs</p>",
        "id": 197819692,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589670650
    },
    {
        "content": "<p>It's really hard to understand lean changes by just looking at old PRs if you are not one of the people who spends a lot of time looking at lean PRs</p>",
        "id": 197819853,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589670930
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252300\">@Jalex Stark</span>  :   hum no it's <code> linear_map.to_matrix </code> define in the file <code>linear algebra. matrix</code> !  </p>\n<p>i will see tomorrow <span aria-label=\"confused\" class=\"emoji emoji-1f615\" role=\"img\" title=\"confused\">:confused:</span></p>",
        "id": 197820040,
        "sender_full_name": "orlando",
        "timestamp": 1589671313
    },
    {
        "content": "<p><code>set_option pp.generalized_field_notation false</code> (the default changed to <code>true</code>)</p>",
        "id": 197821066,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589673121
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 197830413,
        "sender_full_name": "orlando",
        "timestamp": 1589690936
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"270476\">@orlando</span> In particular, nothing really changed. Only the way code was displayed in the tactic state. The entire mathlib code stayed the same.</p>",
        "id": 197831486,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589692833
    },
    {
        "content": "<p>Yes <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  it's just the tactic display, but  that stress me a lot </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">ker</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"bp\">^</span><span class=\"mi\">10</span><span class=\"bp\">+</span> <span class=\"mi\">147</span><span class=\"bp\">*</span> <span class=\"n\">f</span><span class=\"bp\">^</span><span class=\"mi\">15</span> <span class=\"bp\">+</span> <span class=\"mi\">4566</span> <span class=\"n\">f</span><span class=\"bp\">^</span><span class=\"mi\">10000</span><span class=\"bp\">+</span><span class=\"n\">f</span><span class=\"bp\">^</span><span class=\"mi\">795</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>\n<div class=\"codehilite\"><pre><span></span><code> <span class=\"o\">((</span><span class=\"n\">f</span><span class=\"bp\">^</span><span class=\"mi\">10</span><span class=\"bp\">+</span> <span class=\"mi\">147</span><span class=\"bp\">*</span> <span class=\"n\">f</span><span class=\"bp\">^</span><span class=\"mi\">15</span> <span class=\"bp\">+</span> <span class=\"mi\">4566</span> <span class=\"n\">f</span><span class=\"bp\">^</span><span class=\"mi\">10000</span><span class=\"bp\">+</span><span class=\"n\">f</span><span class=\"bp\">^</span><span class=\"mi\">795</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">rek</span>  <span class=\"err\">\\</span><span class=\"n\">ni</span>  <span class=\"n\">x</span>\n</code></pre></div>\n\n\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">x</span> <span class=\"err\">∈</span>  <span class=\"o\">((</span><span class=\"n\">f</span><span class=\"bp\">^</span><span class=\"mi\">10</span><span class=\"bp\">+</span> <span class=\"mi\">147</span><span class=\"bp\">*</span> <span class=\"n\">f</span><span class=\"bp\">^</span><span class=\"mi\">15</span> <span class=\"bp\">+</span> <span class=\"mi\">4566</span> <span class=\"n\">f</span><span class=\"bp\">^</span><span class=\"mi\">10000</span><span class=\"bp\">+</span><span class=\"n\">f</span><span class=\"bp\">^</span><span class=\"mi\">795</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">ker</span>\n</code></pre></div>\n\n\n<p><span aria-label=\"-1\" class=\"emoji emoji-1f44e\" role=\"img\" title=\"-1\">:-1:</span></p>",
        "id": 197831853,
        "sender_full_name": "orlando",
        "timestamp": 1589693640
    },
    {
        "content": "<p><span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 197831895,
        "sender_full_name": "orlando",
        "timestamp": 1589693689
    },
    {
        "content": "<p><code>2.gcd 5</code> looks funny too.</p>",
        "id": 197832164,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589694163
    },
    {
        "content": "<p>But you can change this option locally.</p>",
        "id": 197832181,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589694194
    },
    {
        "content": "<p>I often use <code>protected</code> definitions with long namespace names, and I like the new way.</p>",
        "id": 197832185,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1589694222
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>  :  in the expression <br>\n<code> x ∈  ((f^10+ 147* f^15 + 4566 f^10000+f^795).ker </code><br>\nMy problem is <code>    x ∈  ((f^10+ 147* f^15 + 4566 f^10000+f^795). </code> doesn't make sense  and You have to go look far to the right to see that  the right member of the formule <code> _  ∈  _ </code> is a module. </p>\n<p>When you see <code> x ∈ ker (... ) </code>  the Typage is directly ok  ! ( my english is bad <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> ). it's maybe it's a lack of habit. But I am very sensitive to the notation. For example, the big operator file became much clearer for me with the mathematical notation. Before I understood absolutely nothing at all !</p>",
        "id": 197832710,
        "sender_full_name": "orlando",
        "timestamp": 1589695096
    },
    {
        "content": "<p>Maybe it shouldn't apply to open namespaces? Though I could imagine that getting confusing perhaps...</p>",
        "id": 197834354,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589698301
    },
    {
        "content": "<p>I agree with Orlando that <code>x ∈  f.ker</code> is really bad. I love dot notation in general, but that one is clearly going in the wrong direction.</p>",
        "id": 197840925,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589709545
    },
    {
        "content": "<p>I wonder if you can also fix it with something like <code>notation `ker` := ker</code>.</p>",
        "id": 197841073,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589709733
    }
]