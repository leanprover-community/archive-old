[
    {
        "content": "<p>I'm getting timeouts in the simp_nf linter. Is there a command to run the simp_nf linter on a single declaration, or do I need to use the plumbing functions?</p>",
        "id": 308963237,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668077763
    },
    {
        "content": "<p>I usually put something together along the lines of <code>run_cmd tactic.get_decl </code>your_decl_name &gt;&gt;= linter.simp_nf.test`</p>",
        "id": 308966792,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1668079272
    },
    {
        "content": "<p>And if I have a \"non-local\" simp_nf timeout (i.e. running the linter in the same file as the declaration succeeds, but fails during CI when the linter is running with the whole library imported), then I have to do this in <code>all.lean</code>, right?</p>",
        "id": 308967540,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668079573
    },
    {
        "content": "<p>Seems a real headache to test solutions. I guess if I can reproduce the failure at the bottom of <code>all.lean</code> I can try to find a minimal set of imports that display the problem, and then just test solutions recompiling that.</p>",
        "id": 308967664,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668079632
    },
    {
        "content": "<p>I'm off to sleep, but if anyone is excited about fighting the simp_nf linter, I'd love some help with these: <a href=\"https://github.com/leanprover-community/mathlib/actions/runs/3435238591/jobs/5727462915\">https://github.com/leanprover-community/mathlib/actions/runs/3435238591/jobs/5727462915</a> from my last refactoring PR <a href=\"https://github.com/leanprover-community/mathlib/pull/17435\">#17435</a>.</p>",
        "id": 308967842,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668079694
    },
    {
        "content": "<p>I think I've dealt with the problems in <code>order/hom/set.lean</code> and <code>data/nat/cast/with_top.lean</code>, but all the others seem to be non-local.</p>",
        "id": 308967974,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668079754
    },
    {
        "content": "<p>I'm guessing some casting instances are firing in a different order than previously due to my import restructuring, but that's just a hunch.</p>",
        "id": 308968033,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668079790
    },
    {
        "content": "<p>I think there's a <code>lint only</code> command of some form</p>",
        "id": 308968102,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1668079805
    },
    {
        "content": "<p>I think that just restricts the set of linters, not the set of declarations.</p>",
        "id": 308968264,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668079855
    },
    {
        "content": "<p>Anne's suggestion above works fine. It's just a hassle to have to do the testing in <code>all.lean</code>...</p>",
        "id": 308968328,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1668079884
    }
]