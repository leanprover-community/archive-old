[
    {
        "content": "<p>The <code>injection</code> tactic (from core) currently introduces all pis in the target, rather than only the new hypotheses it introduced. Would anyone be unhappy if I changed this? Example:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"bp\">→</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">injection</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span>\n  <span class=\"c\">/-</span><span class=\"cm\"> actual goal:</span>\n<span class=\"cm\">     n m k : ℕ</span>\n<span class=\"cm\">     h : n + 1 = m + 1</span>\n<span class=\"cm\">     x : n = m</span>\n<span class=\"cm\">     y : m = k</span>\n<span class=\"cm\">     ⊢ n = k</span>\n\n<span class=\"cm\">     expected goal:</span>\n<span class=\"cm\">     n m k : ℕ</span>\n<span class=\"cm\">     h : n + 1 = m + 1</span>\n<span class=\"cm\">     x : n = m</span>\n<span class=\"cm\">     ⊢ m = k → n = k</span>\n\n<span class=\"cm\">     Nb: we could also clear h:</span>\n<span class=\"cm\">     n m k : ℕ</span>\n<span class=\"cm\">     x : n = m</span>\n<span class=\"cm\">     ⊢ m = k → n = k</span>\n<span class=\"cm\">  -/</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>Related issue: <a href=\"https://github.com/leanprover-community/lean/issues/400\">lean#400</a></p>",
        "id": 204558898,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1595343830
    },
    {
        "content": "<p>I agree that we should change it.</p>",
        "id": 204560240,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1595344407
    },
    {
        "content": "<p>Seems unanimous, so fixed in <a href=\"https://github.com/leanprover-community/lean/issues/407\">lean#407</a>.</p>",
        "id": 204907948,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1595592757
    }
]