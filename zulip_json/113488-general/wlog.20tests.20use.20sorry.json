[
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"simon.hudon@gmail.com\" data-user-id=\"110026\">@Simon Hudon</span>, I noticed your tests for the <code>wlog</code> tactic contain sorries, and these cause warning messages when compiling mathlib. Perhaps this is worth fixing, so we can all have clean outputs.</p>",
        "id": 123507100,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1520628000
    },
    {
        "content": "<p>And what about taking docstrings and tests and extract a documentation from them, as my conversion mode doc?</p>",
        "id": 123507647,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520628709
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"patrickmassot@free.fr\" data-user-id=\"110031\">@Patrick Massot</span> I'm looking at <a href=\"https://github.com/leanprover/mathlib/commit/fa255396ff01ea2c0aaef1a2a1000fb03f217468\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/commit/fa255396ff01ea2c0aaef1a2a1000fb03f217468\">https://github.com/leanprover/mathlib/commit/fa255396ff01ea2c0aaef1a2a1000fb03f217468</a> and I'm not sure what you're alluding to. Are you saying that this doc is extracted automatically from Lean code?</p>",
        "id": 123508868,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1520630310
    },
    {
        "content": "<p>No it's not. That why some more work is required (I could do it if nobody else does it but it will probably introduce errors).</p>",
        "id": 123508965,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520630436
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"scott@tqft.net\" data-user-id=\"110087\">@Scott Morrison</span> You're right, it is annoying. I try not to make my goals <code>true</code> so that tactics don't accidentally discharge it before the interesting bit of the proof. I'm going to try something less noisy</p>",
        "id": 123508966,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1520630439
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/mathlib/blob/master/docs/tactics.md\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/docs/tactics.md\">https://github.com/leanprover/mathlib/blob/master/docs/tactics.md</a> is _not_ autogenerated</p>",
        "id": 123508978,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520630464
    },
    {
        "content": "<p>I manually copied docstrings from the source</p>",
        "id": 123508988,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520630491
    },
    {
        "content": "<p>(and reorganized them a bit)</p>",
        "id": 123508995,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520630505
    },
    {
        "content": "<p>You could write a tactic program to do that <span class=\"emoji emoji-1f606\" title=\"laughing\">:laughing:</span></p>",
        "id": 123508998,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1520630514
    },
    {
        "content": "<p>(not the reorganization part)</p>",
        "id": 123509002,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1520630521
    },
    {
        "content": "<p>My hope is that this doc is more visible here than in the source code</p>",
        "id": 123509044,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520630530
    },
    {
        "content": "<p>But maybe it's me refusing to understand that source code is the documentation</p>",
        "id": 123509051,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520630545
    },
    {
        "content": "<p>I think we discussed tactics extracting docstrings back in the gitter days</p>",
        "id": 123509064,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520630582
    },
    {
        "content": "<p>We definitely want a documentation generator at some point</p>",
        "id": 123509092,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1520630623
    },
    {
        "content": "<p>I'm sure Simon could do it. Sebastian, have you seen the tactic Simon wrote for <a href=\"https://github.com/PatrickMassot/lean-differential-topology/pull/1/files\" target=\"_blank\" title=\"https://github.com/PatrickMassot/lean-differential-topology/pull/1/files\">https://github.com/PatrickMassot/lean-differential-topology/pull/1/files</a> ?</p>",
        "id": 123509141,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520630647
    },
    {
        "content": "<p>I think you should carefully read what that guy writes in the monad thread <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>",
        "id": 123509160,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520630677
    },
    {
        "content": "<p>When I have 5 minutes to kill I sometimes  randomly look at the monad review discussion.</p>",
        "id": 123509200,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520630761
    },
    {
        "content": "<p>But I resisted when reading <a href=\"https://github.com/leanprover/lean/pull/1881#discussion_r173307598\" target=\"_blank\" title=\"https://github.com/leanprover/lean/pull/1881#discussion_r173307598\">https://github.com/leanprover/lean/pull/1881#discussion_r173307598</a></p>",
        "id": 123509263,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520630815
    },
    {
        "content": "<p>I didn't create a fake Github account only to post a link to the Lean FAQ :<span class=\"emoji emoji-1f61c\" title=\"stuck out tongue winking eye\">:stuck_out_tongue_winking_eye:</span></p>",
        "id": 123509279,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1520630853
    },
    {
        "content": "<p>heh</p>",
        "id": 123509350,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1520630920
    }
]