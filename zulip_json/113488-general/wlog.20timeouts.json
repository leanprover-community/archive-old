[
    {
        "content": "<p>While solving an inequality, I would be interested in using the <code>wlog</code> tactic to only have to work under a specific assumption. For example, given the inequality to prove <code>0 ≤ a ^ 2 * b * (a - b) + b ^ 2 * c * (b - c) + c ^ 2 * a * (c - a)</code>, I would like to assume that <code>a ≤ b ∧ b ≤ c</code>. I tried using <code>wlog h : a ≤ b ∧ b ≤ c using [a b c, b c a, c a b, a c b, c b a, b a c]</code> but it keeps timing out on my machine. Is there a way to fix this while still using <code>wlog</code>? What would be the alternatives of <code>wlog</code>? Here's an MWE (the inequality itself is not provable without extra assumptions, which I didn't care to include). Thanks!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">inequality</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">wlog</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span> <span class=\"n\">using</span> <span class=\"o\">[</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">c</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"n\">b</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"n\">c</span><span class=\"o\">]</span> <span class=\"c1\">-- timeouts</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 278331682,
        "sender_full_name": "Mantas Baksys",
        "timestamp": 1649436594
    },
    {
        "content": "<p>some discussion on this:</p>\n<p><a href=\"#narrow/stream/113489-new-members/topic/.E2.9C.94.20Odd.20residues.20mod.208/near/272740760\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/.E2.9C.94.20Odd.20residues.20mod.208/near/272740760</a></p>",
        "id": 278332162,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649436811
    },
    {
        "content": "<p>hopefully it speeds up in lean4, I'd like wlog too :(</p>",
        "id": 278332181,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649436825
    },
    {
        "content": "<p>I don't think <code>swap_var</code> suffices for my use case. So I guess there's no other better way apart from just a case bash?</p>",
        "id": 278348804,
        "sender_full_name": "Mantas Baksys",
        "timestamp": 1649444789
    },
    {
        "content": "<p>you can maybe do a two-term wlog and then <code>swap_var</code> with some <code>le_or_le</code> stuff, but otherwise yes :/ it's very sad</p>",
        "id": 278349301,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649445032
    },
    {
        "content": "<p>Sorry if I am missing something obvious but isn't this inequality only cyclically symmetric? How are you getting to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>≤</mo><mi>b</mi><mo>≤</mo><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">a \\le b \\le c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span>?</p>",
        "id": 278349640,
        "sender_full_name": "Reid Barton",
        "timestamp": 1649445234
    },
    {
        "content": "<p>It is once you expand terms out.</p>",
        "id": 278349708,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649445254
    },
    {
        "content": "<p>I see <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>a</mi><mn>3</mn></msup><mi>b</mi><mo>+</mo><msup><mi>b</mi><mn>3</mn></msup><mi>c</mi><mo>+</mo><msup><mi>c</mi><mn>3</mn></msup><mi>a</mi><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">a^3 b + b^3 c + c^3 a + </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8974em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">+</span></span></span></span> (symmetric stuff)</p>",
        "id": 278349807,
        "sender_full_name": "Reid Barton",
        "timestamp": 1649445308
    },
    {
        "content": "<p>Oh wait, right.</p>",
        "id": 278349906,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649445360
    }
]