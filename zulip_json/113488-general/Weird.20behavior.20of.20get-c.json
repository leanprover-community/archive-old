[
    {
        "content": "<p>I was working with my mentee on mathlib and he was having trouble with orange bar hell. Something strange was happening that I haven't seen before: He merged master, ran  <code>leanproject get-c --rev origin/master</code>, and restarted lean, but the orange bars didn't go away. Any idea what could cause this?</p>",
        "id": 272556261,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645320652
    },
    {
        "content": "<p>That usually happens when you've modified a file early in the import tree. Can you make sure that didn't happen?</p>",
        "id": 272556292,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645320697
    },
    {
        "content": "<p>Yeah, that's not the case</p>",
        "id": 272556305,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645320720
    },
    {
        "content": "<p>We actually got it working by switching to the master branch, doing it all again, then switching back to the work branch</p>",
        "id": 272556365,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645320757
    },
    {
        "content": "<p>But then we visited other files in the tree and it went back to orange</p>",
        "id": 272556380,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645320779
    },
    {
        "content": "<p>Did he merge <code>master</code> or <code>origin/master</code>?</p>",
        "id": 272556396,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645320812
    },
    {
        "content": "<p><code>origin/master</code></p>",
        "id": 272556454,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645320848
    },
    {
        "content": "<p>And how far apart did you run the <code>git merge</code> and <code>leanproject get-c</code> commands? It might have very well happened that a commit landed in between.</p>",
        "id": 272556465,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645320865
    },
    {
        "content": "<p>It was only a few minutes I think it didn't change in between</p>",
        "id": 272556491,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645320911
    },
    {
        "content": "<p>Actually, nvm, seems like it did change</p>",
        "id": 272556508,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645320955
    },
    {
        "content": "<p>That might be worth checking! A few minutes is largely enough.</p>",
        "id": 272556510,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645320957
    },
    {
        "content": "<p>Ahah</p>",
        "id": 272556551,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645320964
    },
    {
        "content": "<p>That surely shouldn't matter: get-c will get the best possible cache. If you really want to diagnose you could just see which cache you got and then compare that commit with the commit you're working on and see if there are commits not covered by the cache.</p>",
        "id": 272556558,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1645320975
    },
    {
        "content": "<p>No, Kevin, not when you run it with the <code>--rev</code> attribute.</p>",
        "id": 272556574,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645320995
    },
    {
        "content": "<p>You should be running it with the \"get me the best possible oleans\" option, right?</p>",
        "id": 272556587,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1645321023
    },
    {
        "content": "<p>Agreed, but I don't even know what's the correct way to do this.</p>",
        "id": 272556603,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645321053
    },
    {
        "content": "<p>I'm just confused because I always run <code>get-m</code>, but that didn't work for him</p>",
        "id": 272556651,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645321086
    },
    {
        "content": "<p>Ok, it's working for him now, thanks Yael for the tip</p>",
        "id": 272556702,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645321187
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Weird.20behavior.20of.20get-c/near/272556587\">said</a>:</p>\n<blockquote>\n<p>You should be running it with the \"get me the best possible oleans\" option, right?</p>\n</blockquote>\n<p>Are you saying that if I just merge master to a branch with sorries in it, and run <code>leanproject get-c</code>, that it will fetch the oleans for  the correct version of master? When I do this with get-m, I expect it to tell me it can't find the oleans.</p>",
        "id": 272557359,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645322034
    },
    {
        "content": "<p>I think it will walk up the commit history until it finds one that has oleans. If there are multiple options then it shows both and you can pick</p>",
        "id": 272557444,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1645322146
    },
    {
        "content": "<p>Do I have to use the <code>--fallback</code> option?</p>",
        "id": 272557450,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645322161
    },
    {
        "content": "<p><code>get-m</code> or <code>get-c</code> won't work just after a merge because the machines haven't had a chance to make your oleans yet. The correct thing to do is to not merge if you want to work! When you've finished working, merge and then commit, and then in a few hours' time <code>get-c</code> will work for you. </p>\n<p>I'm saying that if you merge master to a branch with sorries then it is possible to use leanproject get-c to fetch oleans for the version of master which you just merged into your branch. However if you edited logic.basic or some other file high up then this won't do you any good. </p>\n<p>If you're working on mathlib you should never use get-m, you should always use get-c.</p>",
        "id": 272557491,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1645322179
    },
    {
        "content": "<p>I miss <code>up</code></p>",
        "id": 272557524,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1645322239
    },
    {
        "content": "<p>They won't make oleans at all, because there are sorrys and probably bugs that cause compilation to fail, right?</p>",
        "id": 272557528,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645322255
    },
    {
        "content": "<p>pretty sure it still makes oleans if there are bugs</p>",
        "id": 272557539,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1645322282
    },
    {
        "content": "<p>Oh interesting</p>",
        "id": 272557582,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645322298
    },
    {
        "content": "<p>at least, for all files upstream of the bugs (which is usually what you need to work on the bugs)</p>",
        "id": 272557586,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1645322309
    },
    {
        "content": "<p>Right, we're just working on a new file not imported by anything</p>",
        "id": 272557609,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645322345
    },
    {
        "content": "<p>Still, what I want is to be able to pull work that Sean does and have it run, and if my oleans are from a different version of master, then it won't compile.</p>",
        "id": 272557795,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645322486
    },
    {
        "content": "<p>What I want to be able to do is go to any of my branches and get the most recent ancestor of that commit that has oleans, and fetch those.</p>",
        "id": 272557875,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645322563
    },
    {
        "content": "<p>If they aren't changing files high up the file hierarchy then you can pull files from them and not much will be invalidated</p>",
        "id": 272557893,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1645322596
    },
    {
        "content": "<p>But if I switch branches to work on another project of mine, my oleans will be different</p>",
        "id": 272557989,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645322694
    },
    {
        "content": "<p>and keep in mind that there is no hard limit here; worst case scenario is you end up building a big chunk of mathlib on your computer</p>",
        "id": 272558128,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1645322882
    },
    {
        "content": "<p>when I have to go change logic.basic for a leaf file I'm working on, I just run <code>lean --make my_file.lean</code> and come back in 5 minutes</p>",
        "id": 272558163,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1645322885
    },
    {
        "content": "<p>you can use <code>get-c</code> to switch branches without losing oleans, that's the main purpose of it</p>",
        "id": 272558173,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1645322912
    },
    {
        "content": "<p>The \"walk the history\" options only happen if you ask for them with <code>--fallback</code></p>",
        "id": 272583107,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645353436
    },
    {
        "content": "<p>The default behavior is to walk the history to look for older caches, but not to actually download them</p>",
        "id": 272583171,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645353483
    },
    {
        "content": "<p>Walking the history indeed seems like a nice feature. Is this newly added?  I don't see it in my version of <code>leanproject</code></p>\n<div class=\"codehilite\" data-code-language=\"txt\"><pre><span></span><code>(base) 3:00:00 mathlib #=# leanproject get-c -h\nUsage: leanproject get-c [OPTIONS]\n\n  Restore cached olean files.\n\nOptions:\n  --force     Get cache even if the repository is dirty.\n  --rev TEXT  A git sha.\n  -h, --help  Show this message and exit.\n(base) 3:01:03 mathlib #=# leanproject --version\nleanproject, version 1.0.0\n(base) 3:01:06 mathlib #=#\n</code></pre></div>",
        "id": 272659077,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645434115
    },
    {
        "content": "<p>I think so, looks like version 1.1.0 was created the day after this feature was added (<a href=\"https://github.com/leanprover-community/mathlib-tools/pull/113\">https://github.com/leanprover-community/mathlib-tools/pull/113</a>)</p>",
        "id": 272660318,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645434769
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/Weird.20behavior.20of.20get-c/near/272557539\">said</a>:</p>\n<blockquote>\n<p>pretty sure it still makes oleans if there are bugs</p>\n</blockquote>\n<p>I was surprised when you told me this because I didn't think this was true. Sure enough, I'm working on my Complexity theory PR and when I run <code>leanproject get-c</code>, I get </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">base</span><span class=\"o\">)</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">56</span><span class=\"o\">:</span><span class=\"mi\">21</span> <span class=\"n\">mathlib</span> <span class=\"bp\">#=#</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">c</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"kn\">local</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">remote</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Trying</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">oleanstorage.azureedge.net</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"n\">c3228d4c16de2826a8229e36d805e3273d7178b.tar.xz</span> <span class=\"n\">to</span> <span class=\"bp\">/</span><span class=\"n\">Users</span><span class=\"bp\">/</span><span class=\"n\">boltonbailey</span><span class=\"bp\">/.</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"mi\">9</span><span class=\"n\">c3228d4c16de2826a8229e36d805e3273d7178b.tar.xz</span>\n<span class=\"n\">Failed</span> <span class=\"n\">to</span> <span class=\"n\">fetch</span> <span class=\"n\">cached</span> <span class=\"n\">oleans</span>\n</code></pre></div>\n<p>Am I missing something here?</p>",
        "id": 272746312,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645488000
    },
    {
        "content": "<p>I guess the issue is that it's still building, it just shows up as an X on github. My bad</p>",
        "id": 272746618,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645488239
    },
    {
        "content": "<p>there was an azure issue recently, but it should be fixed. maybe try push an empty commit to trigger a rebuild?</p>",
        "id": 272746677,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1645488285
    },
    {
        "content": "<p>No, the issue is that it's still building, the X is just due to the fact that it failed the linter. So it shows as an \"X\" on github, despite the fact that the build is still going. I guess I thought it would show as a yellow dot until all the in progress tests were done.</p>",
        "id": 272746971,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1645488612
    }
]