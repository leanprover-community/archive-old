[
    {
        "content": "<p>Right now we have 49993 theorems in mathlib according to <a href=\"https://leanprover-community.github.io/mathlib_stats.html\">https://leanprover-community.github.io/mathlib_stats.html</a> . I don't really know what they're counting and I'm very surprised that we only have twice as many theorems as definitions, but I guess tomorrow it will go past 50,000.</p>",
        "id": 230902498,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1616087318
    },
    {
        "content": "<p>One part of the large number of definitions is that instances are counted towards the definitions, and instances are about 1/3 of definitions:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- after running `scripts/mk_all.sh`</span>\n<span class=\"kn\">import</span> <span class=\"n\">all</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">run_cmd</span> <span class=\"k\">do</span>\n  <span class=\"n\">e</span> <span class=\"bp\">←</span> <span class=\"n\">get_env</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">decls</span> <span class=\"o\">:=</span> <span class=\"n\">e.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"bp\">¬</span> <span class=\"n\">d.is_auto_or_internal</span> <span class=\"n\">e</span><span class=\"o\">),</span>\n  <span class=\"c1\">-- let decls := e.filter (λ d, ¬ d.to_name.is_internal),</span>\n  <span class=\"n\">trace</span> <span class=\"n\">decls.length</span><span class=\"o\">,</span> <span class=\"c1\">-- 72149 declarations (excluding declarations auto-generated by Lean, including declarations auto-generated by attributes)</span>\n  <span class=\"n\">insts</span> <span class=\"bp\">←</span> <span class=\"n\">decls.mfilter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">is_instance</span> <span class=\"n\">d.to_name</span><span class=\"o\">),</span>\n  <span class=\"n\">trace</span> <span class=\"n\">insts.length</span><span class=\"o\">,</span> <span class=\"c1\">-- 7535 instances</span>\n  <span class=\"n\">non_insts</span> <span class=\"bp\">←</span> <span class=\"n\">decls.mfilter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">bnot</span> <span class=\"bp\">&lt;$&gt;</span> <span class=\"n\">is_instance</span> <span class=\"n\">d.to_name</span><span class=\"o\">),</span>\n  <span class=\"n\">trace</span> <span class=\"n\">non_insts.length</span><span class=\"o\">,</span> <span class=\"c1\">-- 64614 non-instances</span>\n  <span class=\"k\">let</span> <span class=\"n\">defs</span> <span class=\"o\">:=</span> <span class=\"n\">non_insts.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">d.is_definition</span><span class=\"o\">),</span>\n  <span class=\"n\">trace</span> <span class=\"n\">defs.length</span><span class=\"o\">,</span> <span class=\"c1\">-- 12715 (non-instance) definitions</span>\n  <span class=\"k\">let</span> <span class=\"n\">nonmeta_defs</span> <span class=\"o\">:=</span> <span class=\"n\">defs.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">d.is_trusted</span><span class=\"o\">),</span>\n  <span class=\"n\">trace</span> <span class=\"n\">nonmeta_defs.length</span><span class=\"o\">,</span> <span class=\"c1\">-- 9814 non-instance non-meta definitions</span>\n  <span class=\"k\">let</span> <span class=\"n\">thms</span> <span class=\"o\">:=</span> <span class=\"n\">non_insts.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">d.is_theorem</span><span class=\"o\">),</span>\n  <span class=\"n\">trace</span> <span class=\"n\">thms.length</span><span class=\"o\">,</span> <span class=\"c1\">-- 50062 (non-instance) theorems</span>\n  <span class=\"k\">let</span> <span class=\"n\">defs_incl_inst</span> <span class=\"o\">:=</span> <span class=\"n\">decls.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">d.is_definition</span><span class=\"o\">),</span>\n  <span class=\"n\">trace</span> <span class=\"n\">defs_incl_inst.length</span><span class=\"o\">,</span> <span class=\"c1\">-- 20196 definitions (including instances marked as definitions)</span>\n  <span class=\"n\">skip</span>\n</code></pre></div>\n<p>The numbers on the website also <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/blob/cf73eb228679e46299bae63cc35ee1ea858e38ee/make_site.py#L130\">include</a> the 1100+ inductive types/structures as definitions, but I'm not exactly sure what declarations are exported  in the <code>export_db.json</code>.</p>\n<p>If you compare the 50k theorems to the 10k non-instance non-meta definitions, that ratio makes more sense.</p>",
        "id": 231075631,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1616181160
    },
    {
        "content": "<p>woo 50023 :-)</p>",
        "id": 231076316,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1616181481
    }
]