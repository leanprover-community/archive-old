[
    {
        "content": "<p>Hi !<br>\nI have question concerning <code>pow_pos_iff</code>: when I try to use it like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">a</span><span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">)(</span><span class=\"n\">h</span><span class=\"o\">:</span><span class=\"n\">n</span><span class=\"bp\">&gt;</span><span class=\"mi\">0</span><span class=\"o\">)(</span><span class=\"n\">h₀</span><span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">&gt;</span><span class=\"mi\">0</span><span class=\"o\">):</span> <span class=\"mi\">0</span><span class=\"bp\">&lt;</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"n\">n</span><span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">pow_pos_iff</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>it gives a subgoal asking me to prove <code>no_zero_divisors nat</code>. Of course this is not very hard but it does not ask me to prove <code>linear_ordered_comm_monoid_with_zero nat</code> which is also an instance of <code>pow_pos_iff</code>. In fact in the nat framework it is the only rule that ever asked me to prove such obvious instances. Do you know if there is a logic behind it ? <br>\nThanks a lot in advance !</p>",
        "id": 278215218,
        "sender_full_name": "Amaury Hayat",
        "timestamp": 1649360007
    },
    {
        "content": "<p>I think <code>apply_instance</code> will prove it, but it is strange it asks for it.</p>",
        "id": 278215440,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1649360105
    },
    {
        "content": "<p>This is an elaboration issue, Lean looks for the type class before figuring the type of <code>a</code>.</p>",
        "id": 278215914,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1649360345
    },
    {
        "content": "<p>The proof term <code>(pow_pos_iff h).mpr h₀</code> will be probably be ok</p>",
        "id": 278215979,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1649360384
    },
    {
        "content": "<p>Ok thanks a lot ! But isn't it strange then that it does not ask me to prove <code>linear_ordered_comm_monoid_with_zero nat</code> ?  Thanks for the advice, <code>apply (pow_pos_iff h).mpr h₀</code> works perfectly</p>",
        "id": 278217269,
        "sender_full_name": "Amaury Hayat",
        "timestamp": 1649361019
    },
    {
        "content": "<p>Bugs be buggy. And this one is probably not getting fixed because Lean 4 is just around the corner.</p>",
        "id": 278218020,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649361412
    },
    {
        "content": "<p>Ok thanks ;)</p>",
        "id": 278220063,
        "sender_full_name": "Amaury Hayat",
        "timestamp": 1649362405
    }
]