[
    {
        "content": "<p>I'm looking at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/instance_derive_handler/src\">src#instance_derive_handler</a> but can't actually see where the name is being generated.</p>\n<p>I ask because something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[derive [add_comm_group, vector_space ℝ]</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">inner_product_space</span> <span class=\"n\">ℝ</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"n\">V</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span>\n</code></pre></div>\n<p>gives a lousy <code>foo.inst</code> name for the <code>vector_space</code></p>",
        "id": 224859199,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612265759
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.delta_instance_handler/src\">src#tactic.delta_instance_handler</a></p>",
        "id": 224859498,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1612265972
    },
    {
        "content": "<p>Is there an easy way to interactively ask lean to find everything tagged with <code>derive_handler</code>?</p>",
        "id": 224859627,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612266034
    },
    {
        "content": "<p><code>#eval attribute.get_instances `derive &gt;&gt;= tactic.trace</code> ?</p>",
        "id": 224859840,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1612266188
    },
    {
        "content": "<p>I guess ideally that derive handler would use <a href=\"https://github.com/leanprover-community/lean/blob/405273c925b7a088f09f78d640f5798a30f1f163/src/frontends/lean/decl_util.cpp#L104-L174\"><code>heuristic_inst_name</code></a> from the C++</p>",
        "id": 224860132,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612266370
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/6007\">#6007</a></p>",
        "id": 224861026,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612266921
    }
]