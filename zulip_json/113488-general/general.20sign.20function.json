[
    {
        "content": "<p>have we there been discussion about making sign(x) for x as general as possible? something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">sign</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">has_lt</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_zero</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"o\">((</span><span class=\"bp\">&lt;</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">if</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span> <span class=\"k\">then</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>I'm not too sure what's of more general use - for one, should we use <code>1/-1</code> in the type itself? then we need <code>has_neg</code> and <code>has_one</code>, that's something fairly big; we can always use zsmul, but that can be inconvenient. plus, is this the right way to state it for non total orders? do we care about what happens on partial orders at all?</p>",
        "id": 274428014,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1646674575
    },
    {
        "content": "<p>A version more general for some purposes but less for others would be <code>x/abs(x)</code>. This would include phase for complex numbers.</p>",
        "id": 274486947,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1646705586
    },
    {
        "content": "<p>Which would also work for zero, wouldn't it?</p>",
        "id": 274581228,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1646763076
    },
    {
        "content": "<p>Is <code>unitary α</code> a silly return type for this? (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/unitary\">docs#unitary</a>)</p>",
        "id": 274583184,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646763886
    },
    {
        "content": "<p>I think sign(0)=0 :-/</p>",
        "id": 274585683,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1646764733
    },
    {
        "content": "<p>What's the problem with <code>sign(0) = 0</code>? This is the only way for <code>sign</code> to be a morphism of hyperrings.</p>",
        "id": 274588176,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646765756
    },
    {
        "content": "<p>Codomain of <code>sign</code> as <code>with_zero (units int)</code>?</p>",
        "id": 274590111,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1646766446
    },
    {
        "content": "<p>Yeah, something like that.</p>",
        "id": 274590145,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646766461
    },
    {
        "content": "<p><del>Or <code>with_zero (roots_of_unity 2)</code> if we have <code>roots_of_unity ??</code>?</del><br>\nBah, it seems that we don't have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> as a type by itself (as opposed to a subgroup of the units of a monoid)</p>",
        "id": 274590214,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646766481
    },
    {
        "content": "<p>Isn't \"roots of unity\" close enough to <code>unitary</code>?</p>",
        "id": 274590817,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646766696
    },
    {
        "content": "<p>I'm not sure what you mean? Unitary as in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/unitary\">docs#unitary</a> ?</p>",
        "id": 274591194,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646766837
    },
    {
        "content": "<p>Yes, but admittedly I'm only thinking about the reals, complex numbers, and quarternions</p>",
        "id": 274591414,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646766918
    },
    {
        "content": "<p>In <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span></span></span></span>, if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>z</mi><mi mathvariant=\"normal\">∣</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">|z| = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> is unitary, but that would include many things that are not roots of unity!</p>",
        "id": 274591809,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646767079
    },
    {
        "content": "<p>We do have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/roots_of_unity\">docs#roots_of_unity</a></p>",
        "id": 274591926,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646767123
    },
    {
        "content": "<p>But in informal math there is a bit of overloading of notation: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> can refer to \"the\" group of roots of $n$-th roots of unity, which is just a (multiplicative) cyclic group of order <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>, or it could refer to the functor taking a commutative monoid <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> (well, usually a ring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>) to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>M</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mu_n(M)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mclose\">)</span></span></span></span> which is the set of all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>∈</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">m \\in M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> satisfying <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>m</mi><mi>n</mi></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">m^n = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6644em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>.</p>",
        "id": 274592176,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646767213
    },
    {
        "content": "<p>Ah, then I got confused by your suggestion, which isn't compatible with the suggestion above of having <code>sign (z : ℂ)</code> morally equal to <code>z / |z|</code></p>",
        "id": 274592314,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646767273
    },
    {
        "content": "<p>Ah! I see what you mean. Yes, this is the right approach for sure! <br>\nIf you take the unit circle in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> and add <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>, this is a multiplicative monoid, and you can give it one of the so-called hyperring structures making that sign function into a morphism of hyperrings.</p>",
        "id": 274592633,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646767394
    },
    {
        "content": "<p>Is <code>hyperring</code> something mathlib knows about?</p>",
        "id": 274592733,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646767434
    },
    {
        "content": "<p>see page 2 of <a href=\"https://arxiv.org/pdf/1601.01204.pdf\">https://arxiv.org/pdf/1601.01204.pdf</a> (hyperfield of phases)</p>",
        "id": 274592806,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646767454
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/general.20sign.20function/near/274592733\">said</a>:</p>\n<blockquote>\n<p>Is <code>hyperring</code> something mathlib knows about?</p>\n</blockquote>\n<p>No, but maybe it should. And I have some ideas for how one might do this.</p>",
        "id": 274592915,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646767517
    }
]