[
    {
        "content": "<p>I see that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/stream\">docs#stream</a> API prefers <code>stream.nth</code> over application. Should it be a structure?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">stream</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">nth</span> <span class=\"o\">:</span> <span class=\"n\">nat</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 258789477,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1634945941
    },
    {
        "content": "<p>This will make some things a bit harder but without this the definitional equality <code>s.nth n = s n</code> will come out of definitions/lemmas, and it will be hard to have a simp normal form.</p>",
        "id": 258789617,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1634946036
    },
    {
        "content": "<p>I think that's a good idea, just like <code>set</code> should be a structure.</p>",
        "id": 258925383,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1635147456
    },
    {
        "content": "<p>I think the eta(?)-reduction arguments for keeping <code>set</code> as is probably don't apply to stream since <code>stream</code> is just not used very much.</p>",
        "id": 258925815,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635147777
    }
]