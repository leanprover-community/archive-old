[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">ordered_group</span>\n\n<span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- Extend `nonneg_add_comm_group` to support ordered rings</span>\n<span class=\"cm\">  specified by their nonnegative elements -/</span>\n<span class=\"n\">class</span> <span class=\"n\">nonneg_ring</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">nonneg_add_comm_group</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">mul_nonneg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">},</span> <span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">mul_pos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">},</span> <span class=\"n\">pos</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">pos</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">pos</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">zero_ne_one</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- Extend `nonneg_add_comm_group` to support linearly ordered rings</span>\n<span class=\"cm\">  specified by their nonnegative elements -/</span>\n<span class=\"n\">class</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">domain</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">nonneg_add_comm_group</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">mul_nonneg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">},</span> <span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">nonneg_total</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">∨</span> <span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">))</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">nonneg_ring</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">to_linear_nonneg_ring</span>\n  <span class=\"o\">(</span><span class=\"n\">nonneg_total</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">∨</span> <span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">))</span>\n  <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">nonneg_total</span> <span class=\"o\">:=</span> <span class=\"n\">nonneg_total</span><span class=\"o\">,</span>\n  <span class=\"n\">eq_zero_or_eq_zero_of_mul_eq_zero</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span><span class=\"err\">‹</span><span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"err\">›</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">nonneg_ring</span>\n</code></pre></div>",
        "id": 199003107,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660230
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"kn\">structure</span> <span class=\"n\">value</span> <span class=\"o\">{</span><span class=\"bp\">...</span><span class=\"o\">},</span> <span class=\"n\">expected</span> <span class=\"n\">type</span> <span class=\"n\">is</span> <span class=\"n\">known</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"kn\">structure</span>\n  <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span>\n</code></pre></div>",
        "id": 199003122,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660240
    },
    {
        "content": "<p>the error is in the last declaration</p>",
        "id": 199003169,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660254
    },
    {
        "content": "<p>somehow Lean decided that I can't use <code>{</code> for <code>linear_nonneg_ring</code></p>",
        "id": 199003184,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660264
    },
    {
        "content": "<p>I get no errors on master</p>",
        "id": 199003352,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590660384
    },
    {
        "content": "<p>you could also try</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"o\">{</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"bp\">.</span>\n  <span class=\"n\">nonneg_total</span> <span class=\"o\">:=</span> <span class=\"n\">nonneg_total</span><span class=\"o\">,</span>\n  <span class=\"n\">eq_zero_or_eq_zero_of_mul_eq_zero</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span><span class=\"err\">‹</span><span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"err\">›</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 199003418,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590660421
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"kn\">structure</span> <span class=\"kn\">instance</span><span class=\"o\">,</span> <span class=\"err\">&#39;</span><span class=\"n\">linear_nonneg_ring&#39;</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">the</span> <span class=\"n\">name</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"kn\">structure</span> <span class=\"n\">type</span>\n</code></pre></div>",
        "id": 199003461,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660459
    },
    {
        "content": "<p><code>#print linear_nonneg_ring</code>?</p>",
        "id": 199003489,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590660479
    },
    {
        "content": "<p>also for some reason the definition of <code>linear_nonneg_ring</code> is a bit slow to elaborate</p>",
        "id": 199003588,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660518
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">class</span><span class=\"o\">,</span> <span class=\"n\">priority</span> <span class=\"mi\">100</span><span class=\"o\">]</span>\n<span class=\"kn\">inductive</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span>\n<span class=\"n\">constructors</span><span class=\"o\">:</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">to_ring</span> <span class=\"o\">:</span> <span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">to_no_zero_divisors</span> <span class=\"o\">:</span> <span class=\"n\">no_zero_divisors</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">to_nonzero</span> <span class=\"o\">:</span> <span class=\"n\">nonzero</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">add</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">add_assoc</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">zero</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">zero_add</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">add_zero</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">neg</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">add_left_neg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">add_comm</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">nonneg</span> <span class=\"n\">pos</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">pos_iff</span> <span class=\"o\">:</span>\n  <span class=\"n\">auto_param</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">pos</span> <span class=\"n\">a</span> <span class=\"bp\">↔</span> <span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span><span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">name</span><span class=\"bp\">.</span><span class=\"n\">mk_string</span> <span class=\"s2\">&quot;order_laws_tac&quot;</span> <span class=\"n\">name</span><span class=\"bp\">.</span><span class=\"n\">anonymous</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">zero_nonneg</span> <span class=\"o\">:</span> <span class=\"n\">nonneg</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">add_nonneg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span> <span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">nonneg_antisymm</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span> <span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">),</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span> <span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"bp\">→</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">∨</span> <span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"bp\">→</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span>\n</code></pre></div>",
        "id": 199003599,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660526
    },
    {
        "content": "<p>aha</p>",
        "id": 199003625,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590660541
    },
    {
        "content": "<p>wait where's my <code>nonneg_total</code></p>",
        "id": 199003647,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660558
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">linear_nonneg_ring</span>\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">class</span><span class=\"o\">]</span>\n<span class=\"kn\">structure</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span>\n<span class=\"n\">fields</span><span class=\"o\">:</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">add</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">add_assoc</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c_1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c_1</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c_1</span><span class=\"o\">)</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">zero</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">zero_add</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">add_zero</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">neg</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">add_left_neg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">add_comm</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">mul</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">mul_assoc</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c_1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c_1</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c_1</span><span class=\"o\">)</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">one_mul</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">mul_one</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">left_distrib</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c_1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c_1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c_1</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">right_distrib</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c_1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">c_1</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c_1</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c_1</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">eq_zero_or_eq_zero_of_mul_eq_zero</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">zero_ne_one</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">pos</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">pos_iff</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span>\n  <span class=\"n\">auto_param</span>\n    <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">pos</span> <span class=\"n\">a</span> <span class=\"bp\">↔</span> <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span><span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">name</span><span class=\"bp\">.</span><span class=\"n\">mk_string</span> <span class=\"s2\">&quot;order_laws_tac&quot;</span> <span class=\"n\">name</span><span class=\"bp\">.</span><span class=\"n\">anonymous</span><span class=\"o\">)</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">zero_nonneg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"mi\">0</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">add_nonneg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span>\n  <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg_antisymm</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span>\n  <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">mul_nonneg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span>\n  <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n<span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg_total</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">linear_nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">∨</span> <span class=\"n\">linear_nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 199003655,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590660562
    },
    {
        "content": "<p>you got an <code>inductive</code>, not a <code>structure</code></p>",
        "id": 199003679,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590660582
    },
    {
        "content": "<p>why?</p>",
        "id": 199003691,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660592
    },
    {
        "content": "<p>I didn't touch old_strcture_command</p>",
        "id": 199003701,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660599
    },
    {
        "content": "<p>this is very strange</p>",
        "id": 199003744,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660605
    },
    {
        "content": "<p>I wasn't even aware this was a fallback</p>",
        "id": 199003757,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590660618
    },
    {
        "content": "<p>maybe the latest version broke something</p>",
        "id": 199003772,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590660632
    },
    {
        "content": "<p>what's even stranger is the thing above it works</p>",
        "id": 199003802,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660655
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">ordered_ring</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">826</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">information</span> <span class=\"kn\">print</span> <span class=\"n\">result</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">class</span><span class=\"o\">,</span> <span class=\"n\">priority</span> <span class=\"mi\">100</span><span class=\"o\">]</span>\n<span class=\"kn\">structure</span> <span class=\"n\">nonneg_ring</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span>\n<span class=\"n\">fields</span><span class=\"o\">:</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">add</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">add_assoc</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c_1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c_1</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c_1</span><span class=\"o\">)</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">zero</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">zero_add</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">add_zero</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">neg</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">add_left_neg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">add_comm</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">mul</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">mul_assoc</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c_1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c_1</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c_1</span><span class=\"o\">)</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">one_mul</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">mul_one</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">left_distrib</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c_1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c_1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c_1</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">right_distrib</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c_1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">c_1</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c_1</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c_1</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">pos</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">pos_iff</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span>\n  <span class=\"n\">auto_param</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">pos</span> <span class=\"n\">a</span> <span class=\"bp\">↔</span> <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span><span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">name</span><span class=\"bp\">.</span><span class=\"n\">mk_string</span> <span class=\"s2\">&quot;order_laws_tac&quot;</span> <span class=\"n\">name</span><span class=\"bp\">.</span><span class=\"n\">anonymous</span><span class=\"o\">)</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">zero_nonneg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"mi\">0</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">add_nonneg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span>\n  <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg_antisymm</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span> <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">mul_nonneg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span>\n  <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">nonneg</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">mul_pos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span> <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">pos</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">pos</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">pos</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n<span class=\"n\">nonneg_ring</span><span class=\"bp\">.</span><span class=\"n\">zero_ne_one</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nonneg_ring</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"mi\">0</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span>\n</code></pre></div>",
        "id": 199003809,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660662
    },
    {
        "content": "<p>what's the difference</p>",
        "id": 199003825,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660670
    },
    {
        "content": "<p>aha!</p>",
        "id": 199003839,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660683
    },
    {
        "content": "<p>I used \"false\" to define <code>domain</code></p>",
        "id": 199003849,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660690
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">false</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- A domain is a ring with no zero divisors, i.e. satisfying</span>\n<span class=\"cm\">  the condition `a * b = 0 ↔ a = 0 ∨ b = 0`. Alternatively, a domain</span>\n<span class=\"cm\">  is an integral domain without assuming commutativity of multiplication. -/</span>\n<span class=\"n\">class</span> <span class=\"n\">domain</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">no_zero_divisors</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">nonzero</span> <span class=\"n\">α</span>\n</code></pre></div>",
        "id": 199003851,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660697
    },
    {
        "content": "<p>oh no</p>",
        "id": 199003859,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660701
    },
    {
        "content": "<p>no that means unit</p>",
        "id": 199003873,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590660713
    },
    {
        "content": "<p>oh you mean <code>old_structure_cmd false</code></p>",
        "id": 199003941,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590660750
    },
    {
        "content": "<p>looks like I cannot use any \"false\" ever</p>",
        "id": 199003988,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660785
    },
    {
        "content": "<p>but otherwise I get this error:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"bp\">@</span><span class=\"n\">ring</span><span class=\"bp\">.</span><span class=\"n\">to_semiring</span> <span class=\"n\">α</span> <span class=\"n\">right_distrib</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">right_distrib</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">ring</span> <span class=\"n\">α</span>\n</code></pre></div>",
        "id": 199004000,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660806
    },
    {
        "content": "<p>what's an mwe of creating a class that is registered as an inductive?</p>",
        "id": 199004011,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590660816
    },
    {
        "content": "<p>so my workaround is to declare the Props as parameters</p>",
        "id": 199004012,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660817
    },
    {
        "content": "<p>boom</p>",
        "id": 199004179,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660952
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n\n<span class=\"n\">class</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">has_zero</span> <span class=\"n\">α</span><span class=\"bp\">.</span>\n<span class=\"n\">class</span> <span class=\"n\">B</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">has_zero</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"bp\">.</span>\n\n<span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">false</span>\n\n<span class=\"n\">class</span> <span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">A</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">B</span> <span class=\"n\">α</span><span class=\"bp\">.</span>\n\n<span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n\n<span class=\"n\">class</span> <span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">C</span> <span class=\"n\">α</span><span class=\"bp\">.</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">D</span>\n</code></pre></div>",
        "id": 199004195,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660962
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">class</span><span class=\"o\">]</span>\n<span class=\"kn\">inductive</span> <span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span>\n<span class=\"n\">constructors</span><span class=\"o\">:</span>\n<span class=\"n\">D</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">to_A</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">to_B</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">α</span><span class=\"o\">],</span> <span class=\"n\">D</span> <span class=\"n\">α</span>\n</code></pre></div>",
        "id": 199004230,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590660969
    },
    {
        "content": "<p>hm, I get that too</p>",
        "id": 199004328,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590661069
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">class</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span><span class=\"bp\">.</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">A</span>\n</code></pre></div>",
        "id": 199004577,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590661250
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">class</span><span class=\"o\">]</span>\n<span class=\"kn\">inductive</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span>\n<span class=\"n\">constructors</span><span class=\"o\">:</span>\n<span class=\"n\">A</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">},</span> <span class=\"n\">A</span> <span class=\"n\">α</span>\n</code></pre></div>",
        "id": 199004586,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590661257
    },
    {
        "content": "<p>boom, guaranteed MWE</p>",
        "id": 199004599,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590661262
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">class</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">.</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">A</span>\n</code></pre></div>",
        "id": 199004615,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590661278
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">class</span><span class=\"o\">]</span>\n<span class=\"kn\">inductive</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">constructors</span><span class=\"o\">:</span>\n<span class=\"n\">A</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"o\">:</span> <span class=\"n\">A</span>\n</code></pre></div>",
        "id": 199004617,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590661283
    },
    {
        "content": "<p>this is more minimal</p>",
        "id": 199004626,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590661286
    },
    {
        "content": "<p>that's nuts</p>",
        "id": 199004730,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590661361
    },
    {
        "content": "<p>one would think this is in the test suite</p>",
        "id": 199004747,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590661383
    },
    {
        "content": "<p>but:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">class</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">.</span>\n<span class=\"n\">class</span> <span class=\"n\">C</span> <span class=\"kn\">extends</span> <span class=\"n\">A</span><span class=\"bp\">.</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">C</span>\n</code></pre></div>",
        "id": 199004791,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590661431
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">class</span><span class=\"o\">]</span>\n<span class=\"kn\">structure</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">fields</span><span class=\"o\">:</span>\n<span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">to_A</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">[</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">],</span> <span class=\"n\">A</span>\n</code></pre></div>",
        "id": 199004799,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590661436
    },
    {
        "content": "<p>maybe it's just the 0-arity?</p>",
        "id": 199004873,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590661478
    },
    {
        "content": "<p>If you give the class a field it probably works too</p>",
        "id": 199004893,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590661496
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">class</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">true</span><span class=\"o\">)</span>\n\n<span class=\"n\">class</span> <span class=\"n\">C</span> <span class=\"kn\">extends</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">true</span><span class=\"o\">)</span>\n\n<span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n<span class=\"n\">class</span> <span class=\"n\">E</span> <span class=\"kn\">extends</span> <span class=\"n\">C</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">true</span><span class=\"o\">)</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">E</span>\n</code></pre></div>",
        "id": 199005696,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590662065
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">class</span><span class=\"o\">]</span>\n<span class=\"kn\">inductive</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">constructors</span><span class=\"o\">:</span>\n<span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">to_A</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">],</span> <span class=\"n\">true</span> <span class=\"bp\">→</span> <span class=\"n\">true</span> <span class=\"bp\">→</span> <span class=\"n\">E</span>\n</code></pre></div>",
        "id": 199005702,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590662072
    },
    {
        "content": "<p>this is minimal</p>",
        "id": 199005705,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590662074
    },
    {
        "content": "<p>modulo each class having a parameter</p>",
        "id": 199005715,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590662086
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span></p>",
        "id": 199005718,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590662089
    },
    {
        "content": "<p>and finally, the glorious error:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">class</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">true</span><span class=\"o\">)</span>\n\n<span class=\"n\">class</span> <span class=\"n\">C</span> <span class=\"kn\">extends</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">D</span> <span class=\"o\">:</span> <span class=\"n\">true</span><span class=\"o\">)</span>\n\n<span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n<span class=\"n\">class</span> <span class=\"n\">E</span> <span class=\"kn\">extends</span> <span class=\"n\">C</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">true</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">B</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span><span class=\"o\">,</span>\n  <span class=\"n\">D</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span><span class=\"o\">,</span>\n  <span class=\"n\">F</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 199005741,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590662118
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"kn\">structure</span> <span class=\"n\">value</span> <span class=\"o\">{</span><span class=\"bp\">...</span><span class=\"o\">},</span> <span class=\"n\">expected</span> <span class=\"n\">type</span> <span class=\"n\">is</span> <span class=\"n\">known</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">it</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"kn\">structure</span>\n  <span class=\"n\">E</span>\n</code></pre></div>",
        "id": 199005748,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590662124
    },
    {
        "content": "<p>so <code>A</code> and <code>C</code> are both <code>structure</code>s</p>",
        "id": 199005875,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590662228
    },
    {
        "content": "<p>but <code>E</code> is <code>inductive</code></p>",
        "id": 199005880,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590662232
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/issues/285\">lean#285</a></p>",
        "id": 199024852,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590673989
    },
    {
        "content": "<p>I don't think it was ever supported to extend new-style structures using old-style structures.  Is it possible to just not do it here?</p>",
        "id": 199043298,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590682104
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> it would be, if not for this bug:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n<span class=\"n\">class</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span><span class=\"bp\">.</span>\n<span class=\"n\">class</span> <span class=\"n\">B</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">A</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">BB</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span>\n<span class=\"n\">class</span> <span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">A</span> <span class=\"n\">α</span><span class=\"o\">]</span><span class=\"bp\">.</span>\n<span class=\"n\">class</span> <span class=\"n\">D</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">B</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">C</span> <span class=\"n\">α</span><span class=\"bp\">.</span>\n</code></pre></div>",
        "id": 199046367,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590683560
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">add</span> <span class=\"n\">declaration</span> <span class=\"n\">to</span> <span class=\"n\">environment</span><span class=\"o\">,</span> <span class=\"n\">it</span> <span class=\"n\">contains</span> <span class=\"n\">local</span> <span class=\"kn\">constants</span>\n</code></pre></div>",
        "id": 199046373,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590683567
    },
    {
        "content": "<p>which can be fixed by using <code>old_structure_cmd false</code></p>",
        "id": 199046453,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590683610
    }
]