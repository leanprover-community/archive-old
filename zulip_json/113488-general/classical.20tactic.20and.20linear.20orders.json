[
    {
        "content": "<p>Is it a bug in the <code>classical</code> tactic that Lean still complains it can't find a <code>decidable_linear_order</code> instance even after calling <code>classical</code>?</p>",
        "id": 194046472,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586963786
    },
    {
        "content": "<p>Can you show your code?</p>",
        "id": 194048299,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1586964533
    },
    {
        "content": "<p>The standard way is <code>letI := classical.DLO Î³</code>.</p>",
        "id": 194048765,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1586964700
    },
    {
        "content": "<p>Yes, I know the standard way, but I thought <code>classical</code> would take care of that.</p>",
        "id": 194048889,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586964732
    },
    {
        "content": "<p><code>classical</code> only adds <code>decidable_prop</code> to the local set of instances.</p>",
        "id": 194049766,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1586965088
    },
    {
        "content": "<p>Unfortunately not; we could have an instance that derives DLO from LO but it would loop</p>",
        "id": 194049815,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1586965108
    },
    {
        "content": "<p>The problem is DLO extends LO</p>",
        "id": 194049966,
        "sender_full_name": "Reid Barton",
        "timestamp": 1586965187
    },
    {
        "content": "<p>would it be better if LO was an argument of DLO?</p>",
        "id": 194050124,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1586965255
    },
    {
        "content": "<p>I mean in general, with the rest of the library</p>",
        "id": 194050177,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1586965285
    },
    {
        "content": "<p>I don't know.</p>",
        "id": 194050414,
        "sender_full_name": "Reid Barton",
        "timestamp": 1586965390
    },
    {
        "content": "<p>If we compare with <code>is_lawful_functor</code>, <code>DLO</code> doesn't add propositional fields but it is a subsingleton</p>",
        "id": 194050719,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1586965519
    },
    {
        "content": "<p>I suppose that since <code>classical</code> is a tactic, it can do some intelligent things here. In particular, it can look for <code>linear_order foo</code> things in the local context and add <code>letI := classical.DLO foo</code> as necessary</p>",
        "id": 194052564,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1586966270
    },
    {
        "content": "<p>That's true, that would be simple enough.</p>",
        "id": 194052811,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1586966355
    }
]