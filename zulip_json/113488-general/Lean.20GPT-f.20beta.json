[
    {
        "content": "<p>Hi everyone! We (the <a href=\"https://docs.google.com/presentation/d/1poOu2gP9mSGAdAFvOupHvf4tpgD33jACQLJAVcphA1g/edit#slide=id.ga9357e61c4_0_495\">LeanStep</a> team) are excited to announce that we're releasing the interactive <code>gptf</code> tactic for beta testing by the Lean community: <a href=\"https://github.com/jesse-michael-han/lean-gptf\">https://github.com/jesse-michael-han/lean-gptf</a>. It was demo'd (<a href=\"https://www.youtube.com/watch?v=eSXiClL4COw\">link</a>, <a href=\"https://www.youtube.com/watch?v=tuFeHZeXVCs\">link</a>) during Jason's talk and is already responsible for some commits to mathlib (<a href=\"https://github.com/leanprover-community/mathlib/pull/5796\">link</a>, <a href=\"https://github.com/leanprover-community/mathlib/commit/f29d1c3038422168fbbdb2526abf7c0ff13e86db\">link</a>). We'd love to hear your feedback on how to make this tool better for Lean users.</p>\n<p>To participate in the beta, please register <a href=\"https://bit.ly/3nNWMyB\">here</a> to receive an OpenAI API key, and head over to the new <a class=\"stream\" data-stream-id=\"274007\" href=\"/#narrow/stream/274007-lean-gptf\">#lean-gptf</a> stream for discussion/troubleshooting/questions.</p>",
        "id": 223142036,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1610987932
    },
    {
        "content": "<p>We found a way to train a noticeably better (and smaller) model, which is responsible for a <a href=\"https://github.com/leanprover-community/mathlib/issues?q=label%3Alean-gptf+is%3Aclosed\">dozen new PRs</a>. The <code>lean-gptf</code> beta now supports using this new model by default. This one seems to really like chaining together lemma applications and tactics with semicolons, sometimes to surprising effect.</p>\n<p>If you haven't already, come <a href=\"https://bit.ly/3nNWMyB\">sign up</a> for an API key and join the beta to check it out!</p>",
        "id": 224288048,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1611814355
    },
    {
        "content": "<p>We describe in a <a href=\"https://arxiv.org/abs/2102.06203\">new paper</a> our novel training methodology, instrumentation of Lean, and evaluation results on <code>mathlib</code>. We introduce PACT, a method for co-training on abundant data (e.g. synthetic tactic states, <code>apply</code>/<code>exact</code> steps, elaboration, etc.) extracted from proof terms in <code>mathlib</code>. We show that PACT boosts theorem proving performance from 32% to 48% on a held out test split of theorems from <code>mathlib</code>. We hit a success rate of 37% on a collection of 2.8K theorems added <em>after</em> we last extracted our training data (between commit <code>33483a3de6</code> and <code>95454452f6</code>). We also verified that PACT improves the ability of our models to successfully predict multiple tactic steps at once using the semicolon combinator, which is remarkable because the semicolon idiom doesn't show up in the PACT data whatsoever. The new models are responsible for another dozen or so PRs, and so far there are 36 <code>lean-gptf</code> co-authored commits to <code>mathlib</code>.</p>\n<p>The new models are available in the <code>lean-gptf</code> beta. If you haven't already, come <a href=\"https://bit.ly/3nNWMyB\">sign up</a>, subscribe to the <a class=\"stream\" data-stream-id=\"274007\" href=\"/#narrow/stream/274007-lean-gptf\">#lean-gptf</a> stream, and help us develop the future of interactive theorem proving! <span aria-label=\"robot\" class=\"emoji emoji-1f916\" role=\"img\" title=\"robot\">:robot:</span></p>",
        "id": 226423733,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1613418274
    },
    {
        "content": "<p>Nice paper!</p>\n<blockquote>\n<p>Leanâ€™s mathlib is one of the most active open-source software projects in the world</p>\n</blockquote>\n<p>Surely this is a bit of an exaggeration? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 226425321,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613419445
    },
    {
        "content": "<p>I've wondered whether there are more detailed stats at how mathlib ranks here. I know that kubernetes is considered large, fast-moving, fast-growing. It seems that their main repo grows at a rate about 5x - 7x that of mathlib</p>",
        "id": 226425757,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613419843
    },
    {
        "content": "<p>good point, if we change \"software projects\" to \"formalized mathematics software projects\" then it should almost certainly be true <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 226425954,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1613420042
    },
    {
        "content": "<p>There are so few, \"one of\" might be true by default, hah. But yeah, I'd buy that</p>",
        "id": 226426224,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613420229
    },
    {
        "content": "<p>The AFP grows at ~300k loc/year: <a href=\"https://www.isa-afp.org/statistics.html\">https://www.isa-afp.org/statistics.html</a></p>",
        "id": 226426231,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613420242
    },
    {
        "content": "<p>mathlib did ~260k in the past year</p>",
        "id": 226426312,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613420293
    },
    {
        "content": "<p>But in general there are so many variables in how you measure \"growth\" that I don't know how to make a fair comparison</p>",
        "id": 226426380,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1613420383
    }
]