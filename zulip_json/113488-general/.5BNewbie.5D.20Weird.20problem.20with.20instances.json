[
    {
        "content": "<p>Hi there. I am relatively new at this. I hope that this is the right place to post this.</p>\n<p>I started working with classes and instances this week. I have been playing around a bit with groups, rings and categories. However, some weird thing happens. When defining a ring morphism structure on the composition of two ring morphisms, I have to explicitly specify the additive property, because if I don't, I get a \"maximum class-instance resolution depth\" error.</p>\n<p>Here is my code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- Groups</span>\n<span class=\"kd\">class</span> <span class=\"n\">group</span> <span class=\"o\">(</span><span class=\"n\">G</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">zero</span><span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">add</span><span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">→</span> <span class=\"n\">G</span> <span class=\"bp\">→</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">neg</span><span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">→</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">add_zero</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">add</span> <span class=\"n\">zero</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"bp\">∧</span> <span class=\"n\">add</span> <span class=\"n\">g</span> <span class=\"n\">zero</span> <span class=\"bp\">=</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">add_neg</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">add</span> <span class=\"o\">(</span><span class=\"n\">neg</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"n\">zero</span> <span class=\"bp\">∧</span> <span class=\"n\">add</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">neg</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">zero</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">add_assoc</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">add</span> <span class=\"o\">(</span><span class=\"n\">add</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">add</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">add</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">))</span>\n\n<span class=\"kd\">infix</span> <span class=\"bp\">+</span> <span class=\"o\">:=</span> <span class=\"n\">group.add</span>\n<span class=\"kd\">notation</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">group.zero</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">group_morphism</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"n\">H</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">H</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">→</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">additive</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"bp\">+</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">h</span><span class=\"o\">))</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">identity_group_morphism</span> <span class=\"o\">(</span><span class=\"n\">G</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">group_morphism</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">),</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">g</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"o\">⟩</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">compose_group_morphism</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">C</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">B</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"bp\">→</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">hg</span><span class=\"o\">:</span> <span class=\"n\">group_morphism</span> <span class=\"n\">g</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hf</span><span class=\"o\">:</span> <span class=\"n\">group_morphism</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">group_morphism</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">hf.additive</span><span class=\"o\">,</span> <span class=\"n\">hg.additive</span><span class=\"o\">]</span> <span class=\"o\">⟩</span>\n\n<span class=\"c1\">-- Rings</span>\n<span class=\"kd\">class</span> <span class=\"n\">ring</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">group</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">one</span><span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">mul</span><span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">→</span> <span class=\"n\">R</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">mul_one</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">r</span><span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">mul</span> <span class=\"n\">one</span> <span class=\"n\">r</span> <span class=\"bp\">=</span> <span class=\"n\">r</span> <span class=\"bp\">∧</span> <span class=\"n\">mul</span> <span class=\"n\">r</span> <span class=\"n\">one</span> <span class=\"bp\">=</span> <span class=\"n\">r</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">mul_assoc</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">mul</span> <span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">mul</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">mul_distrib</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">mul</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">add</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">add</span> <span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"n\">a</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">mul</span> <span class=\"o\">(</span><span class=\"n\">add</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">add</span> <span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"n\">a</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"n\">b</span> <span class=\"n\">c</span><span class=\"o\">))</span>\n\n<span class=\"kd\">infix</span> <span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"n\">ring.mul</span>\n<span class=\"kd\">notation</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">ring.one</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">ring_morphism</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">S</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">→</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">group_morphism</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">multiplicative</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">r</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">*</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">s</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">preserves_one</span><span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">identity_ring_morphism</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">ring_morphism</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">r</span><span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">),</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span>\n  <span class=\"n\">multiplicative</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">g</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">),</span>\n  <span class=\"n\">preserves_one</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n<span class=\"o\">}</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">compose_ring_morphism</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">C</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">B</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"bp\">→</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">hg</span><span class=\"o\">:</span> <span class=\"n\">ring_morphism</span> <span class=\"n\">g</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">hf</span><span class=\"o\">:</span> <span class=\"n\">ring_morphism</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">ring_morphism</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"o\">{</span>\n\n  <span class=\"n\">additive</span>        <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">hf.additive</span><span class=\"o\">,</span> <span class=\"n\">hg.additive</span><span class=\"o\">]),</span> <span class=\"c1\">-- THIS LINE</span>\n\n  <span class=\"n\">multiplicative</span>  <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">hf.multiplicative</span><span class=\"o\">,</span> <span class=\"n\">hg.multiplicative</span><span class=\"o\">]),</span>\n  <span class=\"n\">preserves_one</span>   <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">hf.preserves_one</span><span class=\"o\">,</span> <span class=\"n\">hg.preserves_one</span><span class=\"o\">]</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">-- Categories</span>\n\n<span class=\"kd\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">category</span> <span class=\"o\">(</span><span class=\"bp\">𝒞</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">Hom</span><span class=\"o\">:</span> <span class=\"bp\">𝒞</span> <span class=\"bp\">→</span> <span class=\"bp\">𝒞</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">id</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"bp\">𝒞</span><span class=\"o\">):</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">compose</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"bp\">𝒞</span><span class=\"o\">}:</span> <span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"bp\">→</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"bp\">→</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Z</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">compose_id</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"bp\">𝒞</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">,</span> <span class=\"n\">compose</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">id</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">compose</span> <span class=\"o\">(</span><span class=\"n\">id</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">compose_assoc</span> <span class=\"o\">{</span><span class=\"n\">W</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">:</span> <span class=\"bp\">𝒞</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">f</span><span class=\"o\">:</span> <span class=\"n\">Hom</span> <span class=\"n\">W</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">Hom</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">Hom</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">,</span> <span class=\"n\">compose</span> <span class=\"o\">(</span><span class=\"n\">compose</span> <span class=\"n\">h</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">compose</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">compose</span> <span class=\"n\">g</span> <span class=\"n\">f</span><span class=\"o\">))</span>\n\n<span class=\"c1\">-- Bundles</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">bundled</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">str</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"n\">α</span> <span class=\"bp\">.</span> <span class=\"n\">tactic.apply_instance</span><span class=\"o\">)</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">bundled_hom</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Y</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">str</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"n\">α</span> <span class=\"bp\">.</span> <span class=\"n\">tactic.apply_instance</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- Category instances</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">ring_category</span> <span class=\"o\">:</span> <span class=\"n\">category</span> <span class=\"o\">(</span><span class=\"n\">bundled</span> <span class=\"n\">ring</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">Hom</span>           <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">R</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">bundled_hom</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_morphism</span> <span class=\"n\">R.α</span> <span class=\"n\">S.α</span> <span class=\"n\">R.str</span> <span class=\"n\">S.str</span><span class=\"o\">),</span>\n  <span class=\"n\">id</span>            <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"o\">⟨(</span><span class=\"bp\">λ</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">r</span><span class=\"o\">),</span> <span class=\"bp\">@</span><span class=\"n\">identity_ring_morphism</span> <span class=\"n\">R.α</span> <span class=\"n\">R.str</span> <span class=\"o\">⟩,</span>\n  <span class=\"n\">compose</span>       <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"n\">g</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"o\">⟨</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">g.α</span> <span class=\"o\">(</span><span class=\"n\">f.α</span> <span class=\"n\">a</span><span class=\"o\">),</span> <span class=\"bp\">@</span><span class=\"n\">compose_ring_morphism</span> <span class=\"n\">A.α</span> <span class=\"n\">B.α</span> <span class=\"n\">C.α</span> <span class=\"n\">A.str</span> <span class=\"n\">B.str</span> <span class=\"n\">C.str</span> <span class=\"n\">g.α</span> <span class=\"n\">f.α</span> <span class=\"n\">g.str</span> <span class=\"n\">f.str</span> <span class=\"o\">⟩,</span>\n  <span class=\"n\">compose_id</span>    <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n    <span class=\"n\">intros</span><span class=\"o\">,</span>\n    <span class=\"n\">unfold</span> <span class=\"n\">compose_ring_morphism</span><span class=\"o\">,</span>\n    <span class=\"n\">cases</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n    <span class=\"n\">cases</span> <span class=\"n\">f_str</span><span class=\"o\">,</span>\n    <span class=\"n\">cases</span> <span class=\"n\">f_str__to_group_morphism</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"kd\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">compose_assoc</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n    <span class=\"n\">simp</span><span class=\"o\">,</span>\n    <span class=\"n\">intros</span><span class=\"o\">,</span>\n    <span class=\"n\">unfold</span> <span class=\"n\">compose_ring_morphism</span>\n  <span class=\"kd\">end</span><span class=\"o\">,</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>When I remove line 42, I get weird errors.<br>\nAlso, if you have any feedback about style or best practices, please let me know :-)</p>\n<p>Now we're at it, is there a tactic to prove that two class instances are equal (like, for example, in the proof of compose_id) from the fact that the constituents/parameters are equal?</p>",
        "id": 235022662,
        "sender_full_name": "Arnoud van der Leer",
        "timestamp": 1618697373
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/notes.html#no%20instance%20on%20morphisms\">https://leanprover-community.github.io/mathlib_docs/notes.html#no%20instance%20on%20morphisms</a> is relevant here, assuming <code>compose_ring_morphism</code> is the problem</p>",
        "id": 235023415,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618698162
    },
    {
        "content": "<p>yeah, you can see it loops with <code>set_option trace.class_instances true</code></p>",
        "id": 235023439,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1618698206
    },
    {
        "content": "<p>Oooooh, right. Thanks, that makes sense. So I should make this a lemma?<br>\nBut in the proof of compose_id (of <code>category (bundled ring)</code>), I can unfold an instance, whereas a lemma cannot be unfolded apparently. So should I make it a def? That sounds a bit weird too.</p>\n<p>Oooooh, I realize only now that setting an option can just be done inline, instead of in some settings panel.</p>",
        "id": 235050056,
        "sender_full_name": "Arnoud van der Leer",
        "timestamp": 1618728885
    }
]