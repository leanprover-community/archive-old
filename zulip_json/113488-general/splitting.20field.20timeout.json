[
    {
        "content": "<p>What's going on?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">field_theory</span><span class=\"bp\">.</span><span class=\"n\">splitting_field</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">K</span><span class=\"o\">}</span>\n\n<span class=\"n\">noncomputable</span> <span class=\"n\">theory</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">algebra</span> <span class=\"n\">K</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">splitting_field</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply_instance</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">- The canonical isomorphism between</span>\n<span class=\"cm\">the splitting field of a polynomial that splits and the base field. -/</span>\n<span class=\"n\">def</span> <span class=\"n\">equiv_of_splits</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">splits</span> <span class=\"o\">(</span><span class=\"n\">ring_hom</span><span class=\"bp\">.</span><span class=\"n\">id</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">splitting_field</span> <span class=\"err\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">K</span> <span class=\"o\">:=</span> <span class=\"c1\">-- deterministic timeout</span>\n<span class=\"n\">sorry</span>\n</code></pre></div>",
        "id": 203582540,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594446938
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> Can we somehow improve the diagnostics?</p>",
        "id": 203583049,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594447969
    },
    {
        "content": "<p>It would be very helpful if lean could give me a bit more hints about what is timing out.</p>",
        "id": 203583057,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594447998
    },
    {
        "content": "<p>This seems to work. But as soon as I uncomment the final tc search, it blows up.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\">- The canonical isomorphism between</span>\n<span class=\"cm\">the splitting field of a polynomial that splits and the base field. -/</span>\n<span class=\"n\">def</span> <span class=\"n\">equiv_of_splits</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span><span class=\"bp\">.</span><span class=\"n\">splits</span> <span class=\"o\">(</span><span class=\"n\">ring_hom</span><span class=\"bp\">.</span><span class=\"n\">id</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">@</span><span class=\"n\">alg_equiv</span> <span class=\"n\">K</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">splitting_field</span> <span class=\"n\">K</span>\n  <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">apply_instance</span> <span class=\"o\">})</span>\n  <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"c\">/-</span><span class=\"cm\"> apply_instance -/</span> <span class=\"o\">})</span>\n  <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">apply_instance</span> <span class=\"o\">})</span>\n  <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">apply_instance</span> <span class=\"o\">})</span>\n  <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">apply_instance</span> <span class=\"o\">})</span>\n   <span class=\"o\">:=</span> <span class=\"c1\">-- deterministic timeout</span>\n<span class=\"n\">sorry</span>\n</code></pre></div>",
        "id": 203583264,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594448501
    },
    {
        "content": "<p>what is it searching?</p>",
        "id": 203583305,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594448524
    }
]