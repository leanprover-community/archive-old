[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"c1\">-- Let X be the set {A,B,C}</span>\n<span class=\"kd\">@[derive fintype]</span> <span class=\"kd\">inductive</span> <span class=\"n\">X</span>\n<span class=\"bp\">|</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">X</span>\n<span class=\"bp\">|</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">X</span>\n<span class=\"bp\">|</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">X</span>\n\n<span class=\"c1\">-- Define a relation by R(A,B) and R(A,C) both true, and everything else false.</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">X</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span>\n<span class=\"bp\">|</span> <span class=\"n\">AB</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"n\">A</span> <span class=\"n\">B</span>\n<span class=\"bp\">|</span> <span class=\"n\">AC</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"n\">A</span> <span class=\"n\">C</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">decidable_rel</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">decidable_rel</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">a</span><span class=\"bp\">;</span> <span class=\"n\">cases</span> <span class=\"n\">b</span><span class=\"bp\">;</span>\n  <span class=\"o\">[</span><span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">]</span><span class=\"bp\">;</span>\n  <span class=\"n\">exact</span> <span class=\"n\">R.AB</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">exact</span> <span class=\"n\">R.AC</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">rintro</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"bp\">|</span> <span class=\"n\">_</span><span class=\"o\">),</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n\n<p>Am I missing a trick here? I couldn't derive decidable rel automatically. Or does my proof have too many ideas in?</p>",
        "id": 212182035,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1601747101
    },
    {
        "content": "<p>You could do this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"c1\">-- Let X be the set {A,B,C}</span>\n<span class=\"kd\">@[derive [fintype, decidable_eq]</span><span class=\"o\">]</span> <span class=\"kd\">inductive</span> <span class=\"n\">X</span>\n<span class=\"bp\">|</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">X</span>\n<span class=\"bp\">|</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">X</span>\n<span class=\"bp\">|</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">X</span>\n\n<span class=\"c1\">-- Define a relation by R(A,B) and R(A,C) both true, and everything else false.</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">X</span>\n\n<span class=\"kd\">@[derive decidable_pred]</span>\n<span class=\"kd\">def</span> <span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">B</span> <span class=\"bp\">∨</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">C</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">decidable_rel</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span>\n</code></pre></div>",
        "id": 212182317,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1601747465
    }
]