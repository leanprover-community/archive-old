[
    {
        "content": "<p>So the current definition of subfield is:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">class</span> <span class=\"n\">is_subfield</span> <span class=\"kn\">extends</span> <span class=\"n\">is_subring</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">inv_mem</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">F</span><span class=\"o\">},</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">x</span><span class=\"bp\">⁻¹</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>which is clearly wrong, as this requires the inverse of 0 to be inside the set.<br>\nHowever, if one fixes it, then a subfield would no longer be a field, because one would not have a computable inverse:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"n\">subset</span><span class=\"bp\">.</span><span class=\"n\">field</span> <span class=\"o\">[</span><span class=\"n\">is_subfield</span> <span class=\"n\">s</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">field</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">subtype_instance</span>\n</pre></div>",
        "id": 158993140,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550682234
    },
    {
        "content": "<p>Question: what to do?</p>",
        "id": 158993144,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550682239
    },
    {
        "content": "<p>I think the solution to this nonsense is to define a structure <code>field'</code> where <code>0⁻¹ = 0</code></p>",
        "id": 158993892,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550682923
    },
    {
        "content": "<p>Maybe something like <code>\\for a b, a * b = 1, a \\in S \\to b \\in S</code></p>",
        "id": 158994063,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1550683069
    },
    {
        "content": "<p>this won't solve the problem that a subfield won't be a field</p>",
        "id": 158994131,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550683105
    },
    {
        "content": "<p>It will be a field it just won't be a <code>field</code></p>",
        "id": 158994203,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1550683193
    }
]