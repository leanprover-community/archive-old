[
    {
        "content": "<p>In Lean 4 could we please please please have something like Haskell's <code>error</code>, just a pure function which takes a <code>string</code> or <code>format</code> or something and otherwise acts just like <code>sorry</code> (but gives no <code>sorry</code> used warnings). Of course, it would have to be meta.</p>\n<p>It would be a really big aid to metaprogramming, since right now every time I want to define a pure function used in a program which has some invalid arguments I have to make it fail silently for that invalid input, instead of returning a nice warning---or more likely from a practical perspective, make everything tactic for absolutely no reason and corrupt my entire program with <code>tactic</code>.</p>",
        "id": 148202175,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1542935865
    },
    {
        "content": "<p>I thought there was something like this already. <code>undefined_core</code>?</p>",
        "id": 148202217,
        "sender_full_name": "Reid Barton",
        "timestamp": 1542935899
    },
    {
        "content": "<p>Praise be! weird name</p>",
        "id": 148202274,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1542936118
    },
    {
        "content": "<p>Haha, yes</p>",
        "id": 148202315,
        "sender_full_name": "Reid Barton",
        "timestamp": 1542936159
    }
]