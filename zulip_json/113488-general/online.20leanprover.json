[
    {
        "content": "<p>just how outdated is this thing? I posted some code somewhere public and then one guy complained they can't run it in the online lean prover</p>",
        "id": 147701238,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542231305
    },
    {
        "content": "<p>and I verified it</p>",
        "id": 147701252,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542231308
    },
    {
        "content": "<p>and it's because the online lean prover doesn't have topological groups</p>",
        "id": 147701271,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542231320
    },
    {
        "content": "<p>this is very concerning</p>",
        "id": 147701275,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542231324
    },
    {
        "content": "<p>It's 3.4.1</p>",
        "id": 147701276,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1542231326
    },
    {
        "content": "<p>as far as I know</p>",
        "id": 147701281,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1542231331
    },
    {
        "content": "<p>or maybe even 3.4.0</p>",
        "id": 147701285,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1542231334
    },
    {
        "content": "<p>what would people think about lean if we keep spreading codes that can't run</p>",
        "id": 147701287,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542231337
    },
    {
        "content": "<p>and mathlib from the time 3.4.0 was invented</p>",
        "id": 147701295,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1542231344
    },
    {
        "content": "<p>unless you spend 2 hours installing everything</p>",
        "id": 147701296,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542231344
    },
    {
        "content": "<p>it gets updated when lean core does, I think</p>",
        "id": 147701303,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1542231353
    },
    {
        "content": "<p>when will lean quit its beta status</p>",
        "id": 147701470,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542231462
    },
    {
        "content": "<p>when it's not an academic playground app</p>",
        "id": 147701693,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1542231634
    },
    {
        "content": "<p>on the one hand me and kevin want to promote it</p>",
        "id": 147702245,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542232086
    },
    {
        "content": "<p>and on the other hand the big devs don't want it to be promoted</p>",
        "id": 147702249,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542232093
    },
    {
        "content": "<p>also it's quite ironic that the project is microsoft-funded and can't deal with windows paths</p>",
        "id": 147702271,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542232116
    },
    {
        "content": "<p>Lean or the online Lean thing?</p>",
        "id": 147702300,
        "sender_full_name": "Reid Barton",
        "timestamp": 1542232137
    },
    {
        "content": "<p>lean</p>",
        "id": 147702337,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542232172
    },
    {
        "content": "<p>aha I misremembered the original quote</p>",
        "id": 147702354,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542232187
    },
    {
        "content": "<p>I mean</p>",
        "id": 147702356,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542232188
    },
    {
        "content": "<p>it's quite ironic that the project is microsoft-funded and requires a linux emulator to be installed</p>",
        "id": 147702361,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542232200
    },
    {
        "content": "<p>Out of interest, why are Microsoft funding it. How do they make money on this free software?</p>",
        "id": 147702586,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1542232339
    },
    {
        "content": "<p>they are secretly using it to check windows 10 has no bugs</p>",
        "id": 147702605,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1542232355
    },
    {
        "content": "<p>and the NSA gets them to use it to find bugs in the Android kernel</p>",
        "id": 147702632,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1542232391
    },
    {
        "content": "<p>maybe</p>",
        "id": 147702640,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1542232398
    },
    {
        "content": "<blockquote>\n<p>and it's because the online lean prover doesn't have topological groups</p>\n</blockquote>\n<p>I recall it didn't have p-adic valuations either.</p>",
        "id": 147759375,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1542304059
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> </p>\n<blockquote>\n<p>when will lean quit its beta status</p>\n</blockquote>\n<p>Lean is a research project. I have no interest in building a product at this point.</p>\n<blockquote>\n<p>it's quite ironic that the project is microsoft-funded and requires a linux emulator to be installed</p>\n</blockquote>\n<p>MSYS2 is not a linux emulator, but a POSIX compatibility layer. It makes sure we can write build and test scripts that run in all platforms.</p>",
        "id": 147796514,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1542344786
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> </p>\n<blockquote>\n<p>Out of interest, why are Microsoft funding it. How do they make money on this free software?</p>\n</blockquote>\n<p>Lean is not a product. I work for Microsoft Research, and I can pick my own research projects. Nobody at Microsoft is expecting to make money with Lean.</p>",
        "id": 147796577,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1542344906
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> </p>\n<blockquote>\n<p>on the one hand me and kevin want to promote it<br>\nand on the other hand the big devs don't want it to be promoted</p>\n</blockquote>\n<p>I know Lean has serious performance and usability problems. I tried to make this clear in the FAQ document <a href=\"https://github.com/leanprover/lean/blob/master/doc/faq.md\" target=\"_blank\" title=\"https://github.com/leanprover/lean/blob/master/doc/faq.md\">https://github.com/leanprover/lean/blob/master/doc/faq.md</a>. I told the CMU guys many times it was a bad idea to develop mathlib at this point, and that they were going to hit performance problems and bugs. There is no point in promoting the system at this point. It is useful as a playground for trying ideas, but it is not ready for serious use.</p>",
        "id": 147796742,
        "sender_full_name": "Leonardo de Moura",
        "timestamp": 1542345209
    },
    {
        "content": "<p>Kenny -- the ideas we are currently trying include \"is dependent type theory actually robust enough in practice to deal with definitions and basic properties of the complex objects which serious research level mathematicians use in their daily work\" and \"is it possible to integrate formal proof verification systems into teaching of undergraduate mathematics\". I'm having quite a lot of fun investigating these things. I think it's pretty clear at this point that there are no optimal choices for the underlying software. There are problems with Coq, problems with Lean, problems with Isabelle HOL, problems with univalent foundations -- there seems to me to be currently no good answer to \"which system should we use\".  I am a mathematician and I cannot really help with these problems, which view as firmly living in the domain of computer science -- deciding whether it's this kind of type theory or that kind of type theory, and how the type class system should work, are not really things I can help with. This still seems to me to be a fairly young research area and what you are seeing is simply the consequences of the nature of cutting edge research. One thing I am convinced of is that to make progress with these questions we absolutely need to have mathematicians using this kind of software, so that is what I am promoting. Without mathematicians we're just going going to get more pieces of software and more proofs of Godel's incompleteness theorem. There is still a long journey ahead though. Maybe the software that mathematicians as a community end up using is some new piece of software that hasn't even been written yet. </p>\n<p>One thing I've always been adamant about though is that Lean 3.4.1 is perfectly adequate as a tool for working with undergraduate level mathematics; I see evidence of this time and time again. I have to figure out how to really use it to help more people to actually learn and do undergraduate level mathematics, and this is something I am actively working on, and for which the CS problems are now solved -- Lean 3.4.1 will do fine.</p>",
        "id": 147804573,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1542358646
    },
    {
        "content": "<p>how about adding the elaborator attributes back to <code>nat.strong_rec_on</code> and <code>int.induction_on</code>...</p>",
        "id": 147804890,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1542359096
    },
    {
        "content": "<p>How hard is it to build a custom version of the lean web editor? Are the instructions at <a href=\"https://github.com/leanprover/lean-web-editor\" target=\"_blank\" title=\"https://github.com/leanprover/lean-web-editor\">the \"lean-web-editor\" repo</a> still up to date?</p>",
        "id": 147806828,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1542361491
    },
    {
        "content": "<p>There was a lot of discussions about this at <a href=\"https://gitter.im/leanprover_public/lean_js?source=orgpage\" target=\"_blank\" title=\"https://gitter.im/leanprover_public/lean_js?source=orgpage\">https://gitter.im/leanprover_public/lean_js?source=orgpage</a></p>",
        "id": 147807616,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1542362620
    },
    {
        "content": "<p>I'm having trouble with <a href=\"https://leanprover.github.io/live/latest/\" target=\"_blank\" title=\"https://leanprover.github.io/live/latest/\">the live version of the lean-web-editor</a> in firefox (63.0.3) currently. The editor seems to work fine in Chrome though. In firefox, I'm not getting any messages when I type things like <code>#eval 2+2</code> in the window. If I refresh the window with some <code>#eval</code> code in the URL, then I get multiple <code>eval result</code> messages, but when I start typing it seems to break again. I didn't have these issues a few months ago when I last seriously tried using the editor so maybe some recent changes to firefox has messed things up somehow.</p>",
        "id": 147808794,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1542364314
    },
    {
        "content": "<p>I've always had trouble with the web editor in Firefox.</p>",
        "id": 147808895,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1542364434
    },
    {
        "content": "<p>Also, I just tried following the instructions on the lean-web-editor repo and things seem to work (in chrome), except that when I tried to create an up-to-date version of <code>library.zip</code> by editing <code>leanpkg.toml</code> and running <code>leanpkg upgrade</code> and then <code>mk_library.py</code>, I get <code>file '/library/init/default.lean' not found</code> in the web-editor (served locally by webpack-dev-server).  Chrome says that <code>library.zip</code> is loading, and when I unzip <code>library.zip</code> I do find <code>init/default.olean</code>.</p>",
        "id": 147809069,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1542364654
    },
    {
        "content": "<p>(Everything works fine if I just use the <code>library.zip</code> downloaded using <code>fetch_lean_js.sh</code>)</p>",
        "id": 147809134,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1542364744
    },
    {
        "content": "<p>OK, I managed to build a working <code>library.zip</code>. I had changed the <code>lean_version</code> in <code>combined_lib/leanpkg.toml</code> to <code>nightly</code>, so that <code>leanpkg upgrade</code> would put in an up-to-date commit of <code>mathlib</code>. But the instructions say \"Make sure you run the same Lean version locally as the javascript version you target\", so I changed it back to <code>3.4.1</code> and then running <code>mk_library.py</code> worked.</p>\n<p>Still no idea how to solve the firefox issues, but outside of that I support what <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> said in the <code>lean_js</code> gitter:</p>\n<blockquote>\n<p>We might consider adding the lean-web-editor to a travis build, so that there is an online version that is always tracking mathlib (and we get notifications as soon as something breaks).<br>\nMy guess is that this would be more appropriate at part of the mathlib travis build than the lean build.</p>\n</blockquote>\n<p>Perhaps we could set up github pages for <code>leanprover-community</code> with a copy of <code>lean-web-editor</code> including an automatically compiled version of <code>mathlib</code>?</p>",
        "id": 147878223,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1542462228
    },
    {
        "content": "<p>More on firefox issues: After playing around more with <code>lean-web-editor</code> and <code>lean-client-js-browser</code>, I think the issue is with the 3.4.1 wasm builds of lean. In particular, <a href=\"https://leanprover.github.io/live/3.3.0\" target=\"_blank\" title=\"https://leanprover.github.io/live/3.3.0\">the 3.3.0 version</a> works fine for me in firefox. Was something changed between 3.3.0 and 3.4.1  that could have broken firefox compatibility? <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> </p>\n<p>Unfortunately, <a href=\"#narrow/stream/113488-general/subject/lean-web-editor.20not.20compiling.3F/near/124566399\" title=\"#narrow/stream/113488-general/subject/lean-web-editor.20not.20compiling.3F/near/124566399\">per earlier discussion here</a>, compiling a wasm build with emscripten requires linux, so it will be hard for me to investigate this further on my own.</p>",
        "id": 147928323,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1542570512
    },
    {
        "content": "<p>Update: I gave this another shot tonight and I was able to build lean 3.4.2 with emscripten on macOS with a few changes that I'm <a href=\"https://github.com/leanprover-community/lean/pull/17\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/pull/17\">PR'ing</a> to community lean. In the meantime it also looks like all the Firefox issues have gone away (at least in firefox 66.0.3).</p>",
        "id": 163780716,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1555726167
    },
    {
        "content": "<p>Can you make a build which also imports mathlib and another arbitrary project? For things like an introductory analysis class, this is the sort of thing one would need.</p>",
        "id": 163781340,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1555727256
    },
    {
        "content": "<p>Well done, by the way! I tried all this in 2018 and it was a nightmare.</p>",
        "id": 163781344,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1555727278
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132175\">@Mohammad Pedramfar</span> this might be of interest to you.</p>",
        "id": 163781390,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1555727315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I think we could make a build in the mathlib repo to check various versions of Lean against mathlib</p>",
        "id": 163781415,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1555727401
    },
    {
        "content": "<p>Sure, you can do that with the <code>mk_library.py</code> script in lean-web-editor.</p>\n<p>My impression was Mohammed was already able to get that working <a href=\"#narrow/stream/113488-general/topic/Online.20Lean.20editor/near/163220532\" title=\"#narrow/stream/113488-general/topic/Online.20Lean.20editor/near/163220532\">here</a> though?</p>",
        "id": 163781458,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1555727405
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> maybe we could have a community version of the lean web editor with an up-to-date version of mathlib / other libraries?</p>",
        "id": 163781478,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1555727508
    },
    {
        "content": "<p>The last time I talked to him, it \"worked\" in the sense that if you went to the firefox page and then waited for ten minutes, everything would finish compiling and then things would work fine.</p>",
        "id": 163781527,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1555727573
    },
    {
        "content": "<p>I'm all for but I know next to nothing about the web editor</p>",
        "id": 163781531,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1555727580
    },
    {
        "content": "<p>If I can get lean + mathlib + xena running with zero start-up time in the Lean web editor I might be able to persuade my department to pay for hosting, because I will be able to use it for teaching.</p>",
        "id": 163781592,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1555727653
    },
    {
        "content": "<p>xena is just an example -- any repo which I can update and then recompile and get it all working, reliably, will do.</p>",
        "id": 163781596,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1555727684
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 163781667,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1555727820
    },
    {
        "content": "<p>On my laptop the editor starts working after a few seconds or so (including downloading files into the browser cache, etc.), though I'm just using mathlib and the other default libraries in the lean-web-editor leanpkg.toml . I haven't tried other packages there yet.</p>",
        "id": 163781797,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1555728050
    },
    {
        "content": "<p>There is something in the Haskell community called Stackage. It's a curated collection of Haskell packages together with a version GHC (the main Haskell compiler) in which all the packages work together. I'd like to do that with Lean. Have a monthly snapshot of the Lean ecosystem in such a way that all the versions picked for every package work together. We make sure to test all of them together.</p>",
        "id": 163781810,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1555728107
    },
    {
        "content": "<blockquote>\n<p>The last time I talked to him, it \"worked\" in the sense that if you went to the firefox page and then waited for ten minutes, everything would finish compiling and then things would work fine.</p>\n</blockquote>\n<p>Oh, that problem is solved now. What I put up in github can turn a Lean code and turn it into an interactive version that works as fast as the original online lean. (It imports more things which can slow it down, otherwise it's the same). <br>\nI couldn't build lean with emscripten, so the code would download compiled lean javascript server.</p>",
        "id": 163866745,
        "sender_full_name": "Mohammad Pedramfar",
        "timestamp": 1555879342
    },
    {
        "content": "<p>Another update: <a href=\"https://github.com/leanprover-community/lean-nightly/releases\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean-nightly/releases\">the nightly releases</a> of the community fork of Lean 3 now include the Emscripten build! If you want to try building it yourself, see <a href=\"https://github.com/leanprover-community/lean/blob/master/doc/make/index.md#building-js--wasm-binaries-with-emscripten\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/blob/master/doc/make/index.md#building-js--wasm-binaries-with-emscripten\">these instructions</a>. Thanks to <span class=\"user-mention\" data-user-id=\"220270\">@James King</span>, <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span>, and especially <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> for their help! </p>\n<p>You can <a href=\"https://bryangingechen.github.io/lean/lean-web-editor/\" target=\"_blank\" title=\"https://bryangingechen.github.io/lean/lean-web-editor/\">try it out online</a> with a recent build of mathlib, where it powers <a href=\"https://github.com/bryangingechen/lean-web-editor/tree/ui\" target=\"_blank\" title=\"https://github.com/bryangingechen/lean-web-editor/tree/ui\">a fork of the <code>lean-web-editor</code></a>. In the fork, I added:</p>\n<ul>\n<li>a form to load <code>.lean</code> files from the web (try pasting a \"raw\" link from github like <a href=\"https://raw.githubusercontent.com/leanprover-community/mathlib/master/src/meta/rb_map.lean\" target=\"_blank\" title=\"https://raw.githubusercontent.com/leanprover-community/mathlib/master/src/meta/rb_map.lean\">this</a> into the form). You can also append <code>#url=https://url/to/file.lean</code> to the link, like <a href=\"https://bryangingechen.github.io/lean/lean-web-editor/#url=https%3A%2F%2Fraw.githubusercontent.com%2Fleanprover-community%2Fmathlib%2Fmaster%2Fsrc%2Fmeta%2Frb_map.lean\" target=\"_blank\" title=\"https://bryangingechen.github.io/lean/lean-web-editor/#url=https%3A%2F%2Fraw.githubusercontent.com%2Fleanprover-community%2Fmathlib%2Fmaster%2Fsrc%2Fmeta%2Frb_map.lean\">this</a>,</li>\n<li>a button to load a <code>.lean</code> file from your computer into the editor,</li>\n<li>a save button,</li>\n<li>a basic \"about\" window (click the little purple ? button),</li>\n<li>the ability to hide/show the header (click the colored bar at the very top), and</li>\n<li>type information and docstrings for the term under the cursor are now displayed in the info view.<br>\nI also worked around an issue where the cursor position was incorrectly placed after inputting Unicode.</li>\n</ul>\n<p>There are a few non-UI changes: I <a href=\"https://github.com/bryangingechen/lean-web-editor/blob/ui/mk_library.py\" target=\"_blank\" title=\"https://github.com/bryangingechen/lean-web-editor/blob/ui/mk_library.py\">updated the <code>mk_library.py</code> script</a> to compress <code>library.zip</code> (which cuts its size by a factor of 4) and also gave it command-line options. Finally, I <a href=\"https://github.com/bryangingechen/lean-client-js/tree/cache\" target=\"_blank\" title=\"https://github.com/bryangingechen/lean-client-js/tree/cache\">edited the <code>lean-client-js-browser</code> dependency</a> so this web editor's version of <code>library.zip</code> will be cached in your browser's IndexedDB storage and only be re-downloaded if necessary (this seems to be more reliable than the browser cache).</p>",
        "id": 165682056,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1557889299
    },
    {
        "content": "<p>Wow, nice work! <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> (and all the others)</p>",
        "id": 165686877,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1557897046
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span>, how hard would it be to get a version online that uses a branch of mathlib?</p>",
        "id": 167352813,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1559701973
    },
    {
        "content": "<p>Not hard at all; I tried to update the instructions in my fork <a href=\"https://github.com/bryangingechen/lean-web-editor/\" target=\"_blank\" title=\"https://github.com/bryangingechen/lean-web-editor/\">here</a>.</p>",
        "id": 167353999,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1559703728
    },
    {
        "content": "<p>Which branch were you thinking of using? I can quickly upload another copy of the page if you want to just experiment with it.</p>",
        "id": 167354096,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1559703935
    },
    {
        "content": "<p>Hmm... could you do <code>back</code>?</p>",
        "id": 167354529,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1559704606
    },
    {
        "content": "<p>That would be amazingly lovely, and I would use it in a talk tomorrow.</p>",
        "id": 167354532,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1559704619
    },
    {
        "content": "<p>hang on one sec, let me commit a few final things to it :-)</p>",
        "id": 167354557,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1559704681
    },
    {
        "content": "<p>Yeah, it looks like it's not building at the moment...</p>",
        "id": 167354635,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1559704790
    },
    {
        "content": "<p>Oh wait, how do I use a custom branch in leanpkg.toml again? I tried changing the commit and it doesn't seem to be working</p>",
        "id": 167354775,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1559704951
    },
    {
        "content": "<p>Ah, I think I got it. Apparently comments aren't supported in leanpkg.toml.</p>",
        "id": 167355130,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1559705469
    },
    {
        "content": "<p>I think I have decided my branch is too messy to actually give to people to use tomorrow</p>",
        "id": 167355615,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1559706219
    },
    {
        "content": "<p>but I will be back to ask about this after tomorrow :-)</p>",
        "id": 167355616,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1559706229
    },
    {
        "content": "<p>I came across this today: <a href=\"https://jscoq.github.io/\" target=\"_blank\" title=\"https://jscoq.github.io/\">https://jscoq.github.io/</a></p>",
        "id": 168404998,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1560867394
    },
    {
        "content": "<p>I saw this a few weeks ago too. I don't know enough (any) Coq to play around with it, but one feature it has which the lean-web-editor is missing is a \"package manager\" which loads Coq packages in the background as needed. I've been messing around with getting the lean-web-editor to be able to load different ZIP bundles on-the-fly, but it seems it would be much harder to get it to download only the necessary .olean files.</p>",
        "id": 168407413,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1560868929
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span>, I see you have Lean 3.5 running at <a href=\"https://bryangingechen.github.io/lean/lean-web-editor/\" target=\"_blank\" title=\"https://bryangingechen.github.io/lean/lean-web-editor/\">https://bryangingechen.github.io/lean/lean-web-editor/</a>. Can we get it hosted on <code>leanprover-community</code>?</p>",
        "id": 168774880,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1561257678
    },
    {
        "content": "<p>Sure, it should just work if you mirror the files in <a href=\"https://github.com/bryangingechen/bryangingechen.github.io/tree/master/lean/lean-web-editor\" target=\"_blank\" title=\"https://github.com/bryangingechen/bryangingechen.github.io/tree/master/lean/lean-web-editor\">this repo</a>.</p>",
        "id": 168774939,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1561257794
    },
    {
        "content": "<p>I'm about to push a new version with some minor changes and update mathlib too.</p>",
        "id": 168775038,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1561258028
    },
    {
        "content": "<p>Cool, thanks! Would you mind creating a PR and link to it from <a href=\"https://github.com/leanprover-community/leanprover-community.github.io\" target=\"_blank\" title=\"https://github.com/leanprover-community/leanprover-community.github.io\">https://github.com/leanprover-community/leanprover-community.github.io</a>?</p>",
        "id": 168775044,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1561258066
    },
    {
        "content": "<p>Sure, but what do you think the best approach is? I've been force-pushing a lot in my <a href=\"http://github.io\" target=\"_blank\" title=\"http://github.io\">github.io</a> repo in an attempt to avoid having lots and lots of versions of the library.zip file in the git history.</p>",
        "id": 168775400,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1561258792
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/4\" target=\"_blank\" title=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/4\">PR here</a>. Thanks to <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> for hosting a bunch of files on <a href=\"http://tqft.net\" target=\"_blank\" title=\"http://tqft.net\">tqft.net</a>!</p>",
        "id": 168816629,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1561341112
    },
    {
        "content": "<p>The new version of the <code>lean-web-editor</code> is now hosted on the community github site! Not much has changed but it's a more official-looking link: <a href=\"https://leanprover-community.github.io/lean-web-editor\" target=\"_blank\" title=\"https://leanprover-community.github.io/lean-web-editor\">https://leanprover-community.github.io/lean-web-editor</a> </p>\n<p>Note that if you're using the uBlock extension to block ads, you will need to add the following custom filter in order for the editor to work properly: <code>@@||*$xmlhttprequest,domain=leanprover-community.github.io</code> due to <a href=\"https://github.com/uBlockOrigin/uAssets/issues/2309\" target=\"_blank\" title=\"https://github.com/uBlockOrigin/uAssets/issues/2309\">the rule discussed here</a>.</p>",
        "id": 169085049,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1561586918
    },
    {
        "content": "<p>Does anyone managed to use the <code>Load .lean from URL:</code> input from <a href=\"https://leanprover-community.github.io/lean-web-editor/\" target=\"_blank\" title=\"https://leanprover-community.github.io/lean-web-editor/\">https://leanprover-community.github.io/lean-web-editor/</a>? My browser keeps complaining about Cross-origin request security things</p>",
        "id": 169390768,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561984204
    },
    {
        "content": "<p>It does work if I copy the web-editor to my webpage. <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> Is there a way to update the translations file, and maybe also to change the leader key? Even better, could we have the Tab key to trigger translations as in the VScode plugin? Is there any way to have custom imports without modifying <code>library.zip</code>?</p>",
        "id": 169391530,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561984812
    },
    {
        "content": "<p>do you have any particular URLs as an example? I tried a few things and it seems to work</p>",
        "id": 169392288,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1561985535
    },
    {
        "content": "<p>also what browser are you using?</p>",
        "id": 169392308,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1561985564
    },
    {
        "content": "<p>Firefox</p>",
        "id": 169392318,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561985579
    },
    {
        "content": "<p>Could you try <a href=\"https://www.math.u-psud.fr/~pmassot/enseignement/math114/tds/td1/td1.lean\" target=\"_blank\" title=\"https://www.math.u-psud.fr/~pmassot/enseignement/math114/tds/td1/td1.lean\">https://www.math.u-psud.fr/~pmassot/enseignement/math114/tds/td1/td1.lean</a> for instance?</p>",
        "id": 169392395,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561985644
    },
    {
        "content": "<p>It works in <a href=\"https://www.math.u-psud.fr/~pmassot/lean-web/#url=https%3A%2F%2Fwww.math.u-psud.fr%2F~pmassot%2Fenseignement%2Fmath114%2Ftds%2Ftd1%2Ftd1.lean\" target=\"_blank\" title=\"https://www.math.u-psud.fr/~pmassot/lean-web/#url=https%3A%2F%2Fwww.math.u-psud.fr%2F~pmassot%2Fenseignement%2Fmath114%2Ftds%2Ftd1%2Ftd1.lean\">https://www.math.u-psud.fr/~pmassot/lean-web/#url=https%3A%2F%2Fwww.math.u-psud.fr%2F~pmassot%2Fenseignement%2Fmath114%2Ftds%2Ftd1%2Ftd1.lean</a> but not on the official website</p>",
        "id": 169392424,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561985671
    },
    {
        "content": "<p>ah yeah I get the same error:</p>\n<blockquote>\n<p>Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at <a href=\"https://www.math.u-psud.fr/~pmassot/enseignement/math114/tds/td1/td1.lean\" target=\"_blank\" title=\"https://www.math.u-psud.fr/~pmassot/enseignement/math114/tds/td1/td1.lean\">https://www.math.u-psud.fr/~pmassot/enseignement/math114/tds/td1/td1.lean</a>. (Reason: CORS header ‘Access-Control-Allow-Origin’ missing). <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSMissingAllowOrigin?utm_source=devtools&amp;utm_medium=firefox-cors-errors&amp;utm_campaign=default\" target=\"_blank\" title=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSMissingAllowOrigin?utm_source=devtools&amp;utm_medium=firefox-cors-errors&amp;utm_campaign=default\">[Learn more]</a></p>\n<p>TypeError: NetworkError when attempting to fetch resource.</p>\n</blockquote>",
        "id": 169392552,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1561985800
    },
    {
        "content": "<p>still, there is a fix suggested in the error itself. Is it possible to serve this header?</p>",
        "id": 169392599,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1561985852
    },
    {
        "content": "<p>serve from where?</p>",
        "id": 169392616,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561985870
    },
    {
        "content": "<p>oh, that's actually a good question. I'm not sure if github needs to serve it or <a href=\"http://u-psud.fr\" target=\"_blank\" title=\"http://u-psud.fr\">u-psud.fr</a></p>",
        "id": 169392725,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1561985962
    },
    {
        "content": "<p>what kind of url did you try when you wrote it worked?</p>",
        "id": 169392765,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561986000
    },
    {
        "content": "<p>GitHub raw lean files</p>",
        "id": 169392828,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1561986019
    },
    {
        "content": "<p>It's possible that GH-pages is actually on the same origin for that</p>",
        "id": 169392838,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1561986036
    },
    {
        "content": "<p>Oh but that probably counts as \"same origin\"</p>",
        "id": 169392842,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561986038
    },
    {
        "content": "<p>yes</p>",
        "id": 169392845,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561986044
    },
    {
        "content": "<p>In any case I'm not particularly surprised that this has happened. Browser security policies mostly don't allow unrelated sites to talk to each other like this</p>",
        "id": 169392869,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1561986077
    },
    {
        "content": "<p>Then I think the Lean web editor should print something instead of hoping the user will open the dev console and check for errors...</p>",
        "id": 169392950,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561986120
    },
    {
        "content": "<p>Anyway I think I'll use a self hosted Lean web-editor since I need extra supporting Lean files</p>",
        "id": 169393021,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561986153
    },
    {
        "content": "<p>The translations and leader key questions are actually more important then</p>",
        "id": 169393053,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561986175
    },
    {
        "content": "<p>Re: CORS errors, to fix them directly, you'd have to talk to the server admin of <code>www.math.u-psud.fr</code> and get them to add <code>Access-Control-Allow-Origin: *</code> to the http response. One easy workaround is to use a CORS proxy, one that I just got to work was to use <a href=\"https://cors-anywhere.herokuapp.com\" target=\"_blank\" title=\"https://cors-anywhere.herokuapp.com\">cors-anywhere</a>, i.e. paste the URL:<code>https://cors-anywhere.herokuapp.com/https://www.math.u-psud.fr/~pmassot/enseignement/math114/tds/td1/td1.lean</code> into the web-editor's url form.</p>",
        "id": 169393073,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1561986186
    },
    {
        "content": "<p>That's an interesting security feature...</p>",
        "id": 169393132,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561986236
    },
    {
        "content": "<p>I should be able to update the translations without too much trouble (what I may do is just fetch the most recent translations file from the vscode-lean github). The tab key thing will be a bit tougher, as it'll require me to figure out how to add new keybinds to the monaco editor.</p>",
        "id": 169393661,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1561986609
    },
    {
        "content": "<p>Is there any access to this project for us? Do we have a community version somewhere? Or is it only the official repo and your private stuff? Is there any build documentation? I don't know much javascript but maybe other people could help</p>",
        "id": 169393748,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561986709
    },
    {
        "content": "<p>My fork isn't private, and I'd gladly accept contributions: <a href=\"https://github.com/bryangingechen/lean-web-editor\" target=\"_blank\" title=\"https://github.com/bryangingechen/lean-web-editor\">https://github.com/bryangingechen/lean-web-editor</a></p>\n<p>I did try to add to the documentation in the README, do let me know if you need any additional instructions</p>",
        "id": 169393827,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1561986766
    },
    {
        "content": "<p>There should be a working link to that repo in the popup that appears if you click the purple ? button in the \"header\" of the web editor.</p>",
        "id": 169393867,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1561986812
    },
    {
        "content": "<p>Thanks! I was looking at the wrong repo (<a href=\"https://github.com/bryangingechen/bryangingechen.github.io/tree/master/lean/lean-web-editor\" target=\"_blank\" title=\"https://github.com/bryangingechen/bryangingechen.github.io/tree/master/lean/lean-web-editor\">https://github.com/bryangingechen/bryangingechen.github.io/tree/master/lean/lean-web-editor</a>)</p>",
        "id": 169394119,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1561987000
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> I tried following the instructions at <a href=\"https://github.com/bryangingechen/lean-web-editor\" target=\"_blank\" title=\"https://github.com/bryangingechen/lean-web-editor\">https://github.com/bryangingechen/lean-web-editor</a> and <a href=\"https://github.com/bryangingechen/lean-client-js\" target=\"_blank\" title=\"https://github.com/bryangingechen/lean-client-js\">https://github.com/bryangingechen/lean-client-js</a> but failed completely. I think I managed to get a recent <code>node+npm</code>that doesn't complain. But then running <code>npm run demo</code> inside <code>lean-client-js</code> fails with various messages depending on where I try to put the content of <a href=\"https://github.com/leanprover-community/lean-nightly/releases/download/nightly-2019-06-24/lean-3.5.0-nightly-2019-06-24-browser.zip\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean-nightly/releases/download/nightly-2019-06-24/lean-3.5.0-nightly-2019-06-24-browser.zip\">https://github.com/leanprover-community/lean-nightly/releases/download/nightly-2019-06-24/lean-3.5.0-nightly-2019-06-24-browser.zip</a></p>",
        "id": 169479963,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562073899
    },
    {
        "content": "<p>I manage to run the web editor simply by cloning <a href=\"https://github.com/bryangingechen/leanprover-community.github.io/tree/master/lean-web-editor\" target=\"_blank\" title=\"https://github.com/bryangingechen/leanprover-community.github.io/tree/master/lean-web-editor\">https://github.com/bryangingechen/leanprover-community.github.io/tree/master/lean-web-editor</a> and opening the index page. Now I only want to add one library in addition to mathlib. Is there anything I can do which would not involve the crazy npm stack? Naively I would try to compile my lib using the community Lean 3.5 and hope to follow <a href=\"https://github.com/bryangingechen/lean-web-editor#creating-a-customized-libraryzip\" target=\"_blank\" title=\"https://github.com/bryangingechen/lean-web-editor#creating-a-customized-libraryzip\">https://github.com/bryangingechen/lean-web-editor#creating-a-customized-libraryzip</a>. Is that hopeless?</p>",
        "id": 169480245,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562074111
    },
    {
        "content": "<p>I give up until Bryan comes back. There is too much guesswork involved.</p>",
        "id": 169481646,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562075180
    },
    {
        "content": "<p>I can't even manage to use the community fork of Lean with mathlib</p>",
        "id": 169481718,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562075241
    },
    {
        "content": "<p>I get wonderful errors like \"WARNING: Lean version mismatch: installed version is nightly-2019-06-24, but package requires leanprover-community-lean-nightly\"</p>",
        "id": 169481811,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562075295
    },
    {
        "content": "<p>Hmm. The version at <a href=\"http://leanprover-community.github.io\" target=\"_blank\" title=\"http://leanprover-community.github.io\">leanprover-community.github.io</a> is failing now with the error <code>The script at 'https://leanprover-community.github.io/lean-web-editor/lean_js_wasm.js' failed to load.</code></p>",
        "id": 169484103,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1562076756
    },
    {
        "content": "<p>I didn't touch anything there!</p>",
        "id": 169484157,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562076807
    },
    {
        "content": "<p>Oh, I wasn't blaming you, just another note for Bryan when he gets back!</p>",
        "id": 169484243,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1562076859
    },
    {
        "content": "<p>Oops! I'll fix the community lean web editor shortly. I forgot to change the URLs to point to Scott's site.</p>\n<p>Edit: Fixed now!</p>",
        "id": 169486235,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562078211
    },
    {
        "content": "<blockquote>\n<p>I manage to run the web editor simply by cloning <a href=\"https://github.com/bryangingechen/leanprover-community.github.io/tree/master/lean-web-editor\" target=\"_blank\" title=\"https://github.com/bryangingechen/leanprover-community.github.io/tree/master/lean-web-editor\">https://github.com/bryangingechen/leanprover-community.github.io/tree/master/lean-web-editor</a> and opening the index page. Now I only want to add one library in addition to mathlib. Is there anything I can do which would not involve the crazy npm stack? Naively I would try to compile my lib using the community Lean 3.5 and hope to follow <a href=\"https://github.com/bryangingechen/lean-web-editor#creating-a-customized-libraryzip\" target=\"_blank\" title=\"https://github.com/bryangingechen/lean-web-editor#creating-a-customized-libraryzip\">https://github.com/bryangingechen/lean-web-editor#creating-a-customized-libraryzip</a>. Is that hopeless?</p>\n</blockquote>\n<p>Sorry about the npm trouble. This second approach should indeed be possible. Let me try to figure out what's going on here.</p>",
        "id": 169486401,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562078343
    },
    {
        "content": "<blockquote>\n<p>I get wonderful errors like \"WARNING: Lean version mismatch: installed version is nightly-2019-06-24, but package requires leanprover-community-lean-nightly\"</p>\n</blockquote>\n<p>This warning in particular is harmless; could you share the rest of the output of <code>mk_library.py</code>?</p>",
        "id": 169486488,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562078403
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span></p>",
        "id": 169486511,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562078413
    },
    {
        "content": "<p>Unfortunately I had to go back home where internet is currently broken (except on my phone). Could you try to document the full procedure to get a Lean web using a custom library built on top of mathlib?</p>",
        "id": 169487877,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562079333
    },
    {
        "content": "<p>So the first few steps are as in the instructions on my <code>lean-web-editor</code> README you linked. Afterwards, if you copied the contents of the lean-web-editor directory from the <a href=\"http://bryangingechen.github.io\" target=\"_blank\" title=\"http://bryangingechen.github.io\">bryangingechen.github.io</a> repo somewhere, you'll overwrite its <code>library.zip</code>, <code>library.info.json</code>, and <code>library.olean_map.json</code> with the files generated by <code>mk_library.py</code>.</p>\n<p>Something seems to be unclear / wrong in the instructions I wrote in the README. It sounds like something is going wrong in step 4 when you're running <code>mk_library.py</code> but I need more output to figure out what is happening.</p>",
        "id": 169489667,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562080647
    },
    {
        "content": "<p>Unclear (to me) sentences include: \"If you plan to use the prebuilt JS/WASM versions of Lean,\" and \"lean_version needs to point to the same version of Lean as the Emscripten build of Lean you plan to use. \"</p>",
        "id": 169490307,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562081152
    },
    {
        "content": "<p>I have no idea which version I'm using when I clone the community <a href=\"http://github.io\" target=\"_blank\" title=\"http://github.io\">github.io</a> site</p>",
        "id": 169490405,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562081213
    },
    {
        "content": "<p>The first sentence should perhaps say \"If you plan to use the prebuilt JS/WASM versions of Lean downloaded from the leanprover-community/lean-nightly site, i.e. if you are not compiling Lean with emscripten yourself\".</p>",
        "id": 169490776,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562081450
    },
    {
        "content": "<p>Ok, let's say I want to use such a download. What version of mathlib should I use then? More to the point: where are the corresponding mathlib binaries?</p>",
        "id": 169490971,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562081587
    },
    {
        "content": "<p>The second sentence needs to be rewritten completely. I realized that my instructions will give rise to the confusing warning you pointed out above. However, for current purposes, you can ignore it safely.</p>\n<p>Also, I would suggest not cloning the community <a href=\"http://github.io\" target=\"_blank\" title=\"http://github.io\">github.io</a> repo, but rather the files in the <code>bryangingechen.github.io</code> repo instead because the version of the web editor app in the community repo grabs the dependencies from Scott's page rather than from the local folder.</p>",
        "id": 169490992,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562081606
    },
    {
        "content": "<p>You will have to recompile mathlib yourself since the olean files provided by e.g. <code>update-mathlib</code> are compiled with Lean 3.4.2, but the web-editor uses some version of Lean 3.5.0c</p>",
        "id": 169491093,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562081655
    },
    {
        "content": "<p>But the <code>mk_library.py</code> script will take care of compiling mathlib for you if you have edited <code>leanpkg.toml</code> as in the instructions (ignoring the harmless warning mentioned above).</p>",
        "id": 169491126,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562081680
    },
    {
        "content": "<p>You can put any commit of mathlib that you need in <code>combined_lib/leanpkg.toml</code>.</p>",
        "id": 169491181,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562081728
    },
    {
        "content": "<p>Ok, we really need Lean 3.5.0 versions of precompiled mathlib then. Compiling mathlib should happen only when working on mathlib</p>",
        "id": 169492023,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562082376
    },
    {
        "content": "<p>Thanks for all those explanations. I'll try again as soon as I'll get back to an internet enabled computer.</p>",
        "id": 169492077,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562082434
    },
    {
        "content": "<p>The whole point behind the 3.5.0 release is to be compatible with 3.4.2</p>",
        "id": 169492115,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562082477
    },
    {
        "content": "<p>3.5.1 is the backward-incompatible release</p>",
        "id": 169492168,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562082496
    },
    {
        "content": "<p>I agree about having precompiled mathlib. I meant to look into this with <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span> but forgot.</p>\n<p>No problem! Your questions should help me improve the process.</p>",
        "id": 169492180,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562082508
    },
    {
        "content": "<p>I think the warning should just be ignorable</p>",
        "id": 169492196,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562082525
    },
    {
        "content": "<p>The olean files get the exact version number baked into them (down to the commit) so it's pretty likely for those to mismatch but that doesn't guarantee incompatibility unless lean has some silly requirement on top of everything else</p>",
        "id": 169492253,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562082594
    },
    {
        "content": "<p>It's true that it's compatible, but unfortunately Lean still checks the version info in the olean file under the hood and refuses to accept it if it differs. If I remember correctly there is a compile option to have Lean ignore that but it didn't seem like a good idea to turn it on even for the Emscripten build.</p>",
        "id": 169492321,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562082619
    },
    {
        "content": "<p>I think we should just turn that check off then</p>",
        "id": 169492357,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562082658
    },
    {
        "content": "<p>Given how we are trafficking in olean files a lot more than they were originally intended for, it's better to just try to load them and hope for the best. I don't think we are likely to change the serialization format in community lean any time soon</p>",
        "id": 169492535,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562082790
    },
    {
        "content": "<p>It would be much better if the olean serialization had its own versioning system, because the vast majority of commits don't touch it</p>",
        "id": 169492679,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562082878
    },
    {
        "content": "<p>Right, that makes sense. It's even better for Emscripten Lean since the library/init files are bundled with library.zip. If someone wants to PR this, <a href=\"https://github.com/leanprover-community/lean/blob/master/src/CMakeLists.txt#L60\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/blob/master/src/CMakeLists.txt#L60\">here's the relevant line</a>.</p>",
        "id": 169493120,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562083223
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> I managed to run lean-web-editor with a custom library build on top of mathlib. Thank you very much for your help! Here are my notes/issue list:</p>\n<ul>\n<li>I cloned mathlib, changed its <code>leanpkg.toml</code> so that it contains <code>lean_version = \"leanprover-community-lean-nightly\"</code></li>\n<li>I compiled mathlib, ignoring the lean version mismatch warning</li>\n<li>In my custom lib <code>leanpkg.toml</code>, I used the same <code>lean_version</code> line as above, and in the <code>[dependencies]</code> section, I used <code>mathlib = { path = \"/home/pmassot/lean/mathlib_3.5\" }</code> featuring the path to my version of mathlib compiled using community Lean.</li>\n<li>\n<p>I cloned <code>https://github.com/bryangingechen/lean-web-editor</code> and edited <code>combined_lib/leanpkg.toml</code> to contain <br>\n<code>\n    [package]\n    name = \"combined_lib\"\n    version = \"3.5.0\"\n    lean_version = \"leanprover-community-lean-nightly\"\n    [dependencies]\n    mathlib = {path = \"/home/pmassot/lean/mathlib_3.5/\"}\n    lib114 = {path = \"/home/pmassot/lean/lib114/\"}\n    </code><br>\n  where <code>lib114</code> is my custom lib built on top of mathlib. </p>\n</li>\n<li>\n<p>Then I first to run <code>mk_library.py</code>. On the first try it complained the directory <code>dist</code> did not exist. So I created it. Then it complained my custom lib had no GitHub url. So I edited <code>mk_library.py</code> to use empty <code>lib_info[lib_name]</code> when the regex looking for GitHub failed. Then the script succeeded.</p>\n</li>\n<li>Then I cloned <code>https://github.com/bryangingechen/bryangingechen.github.io</code>, copied the content of <code>lean/lean-web-editor</code> to my website, and copied the three files created by <code>mk_library.py</code> into that directory in place of <a href=\"https://github.com/bryangingechen/bryangingechen.github.io/blob/master/lean/lean-web-editor/libcore.olean_map.json\" target=\"_blank\" title=\"https://github.com/bryangingechen/bryangingechen.github.io/blob/master/lean/lean-web-editor/libcore.olean_map.json\">https://github.com/bryangingechen/bryangingechen.github.io/blob/master/lean/lean-web-editor/libcore.olean_map.json</a> and its two friends.</li>\n</ul>\n<p>That's all! It could clear use some ironing, but it works. TODO list:</p>\n<ul>\n<li>solving the olean versionning check issue in Lean community</li>\n<li>providing mathlib nightly compiled by community Lean 3.5.0, with a corresponding <code>leanpkg.toml</code></li>\n<li>disentangling <code>combined_lib</code> from the <code>lean-web-editor</code> repository, so that we don't need to edit the git repository to use the tool.</li>\n<li>fix the non-existent <code>dist</code> folder and GitHub url check bugs in <code>mk_library.py</code></li>\n<li>make a user friendly script that download the precompiled website from <code>https://github.com/bryangingechen/bryangingechen.github.io</code> and move the output of <code>mk_library.py</code></li>\n<li>Document all that!<br>\nThanks for all your work and help!</li>\n</ul>",
        "id": 169562150,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562157372
    },
    {
        "content": "<p>Next, I'll need to investigate <span class=\"user-mention\" data-user-id=\"132175\">@Mohammad Pedramfar</span>'s effort to integrate this with <code>format_lean</code>. I also have one more question: will I get a noticeable speed gain if I use a trimmed down mathlib? Or is it ignoring unneeded files in mathlib anyway?</p>",
        "id": 169567837,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562161879
    },
    {
        "content": "<p>Glad you got things working! And your writeup looks really helpful!  I didn't even realize you could use local paths in <code>leanpkg.toml</code> until now...</p>\n<p>There will be a speedup for the initial start of the web editor with a trimmed down mathlib. The dominant effect is due to shortening download times (though after the first run, the ZIP file is cached). A smaller ZIP file might also make a difference when the Emscripten loader sets up the file system, but this should be a much smaller effect. Once the web editor is initialized though, I think unused .olean files won't change the speed at which Lean processes files.</p>",
        "id": 169568583,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562162364
    },
    {
        "content": "<p>What's the best way of \"minifying\" a Lean package right now? It would be useful to integrate that functionality into <code>mk_library.py</code>.</p>",
        "id": 169568724,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562162432
    },
    {
        "content": "<p>What do you mean by minifying?</p>",
        "id": 169568753,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562162452
    },
    {
        "content": "<p>Removing all lean / olean files which are not imported by those in the <code>src</code> directory.</p>",
        "id": 169568824,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562162489
    },
    {
        "content": "<p>Oh, that would be nice. I guess you need one of our Rust gurus to ask Mario's <code>olean</code> reader</p>",
        "id": 169568918,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562162548
    },
    {
        "content": "<p>Perhaps I should say <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Tree_shaking\" target=\"_blank\" title=\"https://developer.mozilla.org/en-US/docs/Glossary/Tree_shaking\">\"tree shaking\"</a> instead of \"minifying\".</p>",
        "id": 169569006,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562162622
    },
    {
        "content": "<blockquote>\n<p>Next, I'll need to investigate <span class=\"user-mention silent\" data-user-id=\"132175\">Mohammad Pedramfar</span>'s effort to integrate this with <code>format_lean</code>. I also have one more question: will I get a noticeable speed gain if I use a trimmed down mathlib? Or is it ignoring unneeded files in mathlib anyway?</p>\n</blockquote>\n<p>I started working on it a few days ago. I'll let you know when I get it to work.</p>",
        "id": 169603948,
        "sender_full_name": "Mohammad Pedramfar",
        "timestamp": 1562189752
    },
    {
        "content": "<blockquote>\n<p>Removing all lean / olean files which are not imported by those in the <code>src</code> directory.</p>\n</blockquote>\n<p>Try adding a line <code>path = \"src\"</code> into the <code>leanpkg.toml</code> before running <code>mk_library</code>.</p>",
        "id": 169604300,
        "sender_full_name": "Mohammad Pedramfar",
        "timestamp": 1562190109
    },
    {
        "content": "<p>Oh, that works. Though you'll have to delete all the other olean files first and then wait for lean to build everything from scratch.</p>",
        "id": 169606436,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562192417
    },
    {
        "content": "<p>Yeah, it takes a little time</p>",
        "id": 169606541,
        "sender_full_name": "Mohammad Pedramfar",
        "timestamp": 1562192529
    },
    {
        "content": "<blockquote>\n<ul>\n<li>fix the non-existent <code>dist</code> folder and GitHub url check bugs in <code>mk_library.py</code></li>\n</ul>\n</blockquote>\n<p>I made an attempt to fix these bugs in the last few commits to my fork of the <code>lean-web-editor</code>, but it's not well-tested yet. I don't have the bandwidth to follow up on the other items at the moment, though.</p>",
        "id": 169609403,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562196094
    },
    {
        "content": "<blockquote>\n<p>Oh, that works. Though you'll have to delete all the other olean files first and then wait for lean to build everything from scratch.</p>\n</blockquote>\n<p>What does \"that\" refers to in this sentence?</p>",
        "id": 169650590,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562248796
    },
    {
        "content": "<p>Adding the line <code>path = \"src\"</code> in <code>leanpkg.toml</code> and then putting some Lean files of interest in that directory before running <code>mk_library</code>.</p>",
        "id": 169650700,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562248880
    },
    {
        "content": "<p>which <code>leanpkg.toml</code>? The one in <code>combined_lib</code>?</p>",
        "id": 169650737,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562248921
    },
    {
        "content": "<p>Yes.</p>",
        "id": 169650783,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562248929
    },
    {
        "content": "<p>It relies on the fact that <code>leanpkg build</code> only builds the dependencies of the files in <code>src</code>.</p>",
        "id": 169650852,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562249002
    },
    {
        "content": "<p>Oooh</p>",
        "id": 169650869,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562249019
    },
    {
        "content": "<p>I need to try that</p>",
        "id": 169650872,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562249024
    },
    {
        "content": "<p>But I'm confused. Is <code>mk_library.py</code> running <code>leanpkg build</code>? Or do you mean I should have mathlib in the dependencies of <code>combined_lib</code> as a git repo and run <code>leanpkg build</code> there and then <code>mk_library_build</code>?</p>",
        "id": 169650981,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562249135
    },
    {
        "content": "<p><code>mk_library.py</code> runs <code>leanpkg build</code></p>",
        "id": 169650999,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562249160
    },
    {
        "content": "<p>And then it blindly copies all <code>.olean</code> files that it can find by looking in the directories provided by <code>lean -p</code> into the ZIP file; that's why I said you have to delete the other olean files.</p>",
        "id": 169651110,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562249270
    },
    {
        "content": "<p>I can confirm I successfully built a 5.7Mo library instead of 18Mo by removing every olean from mathlib and my small undergraduate lib, and then run <code>mk_library.py -i ~/lean/lib114/ -o dist114/library.zip</code> where <code>lib114</code> import not much from mathlib</p>",
        "id": 169884250,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562603794
    },
    {
        "content": "<p>Otoh, this tree-shaking means that users can't import things from mathlib that they suddenly would like to use...</p>",
        "id": 169884382,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1562603896
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> I can't open an issue in your fork, so let me continue using this thread. In the <a href=\"https://github.com/bryangingechen/lean-web-editor/blob/ui/README.md\" target=\"_blank\" title=\"https://github.com/bryangingechen/lean-web-editor/blob/ui/README.md\">README</a>, last item you wrote \"Run ./mk_library.py (requires Python 3.5 or greater)\" is wrong. Your script requires python 3.7. I discovered that when running it on an old Ubuntu.</p>",
        "id": 169884427,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562603946
    },
    {
        "content": "<p>From <a href=\"https://docs.python.org/3.7/library/subprocess.html#subprocess.run\" target=\"_blank\" title=\"https://docs.python.org/3.7/library/subprocess.html#subprocess.run\">https://docs.python.org/3.7/library/subprocess.html#subprocess.run</a>:</p>\n<blockquote>\n<p>Changed in version 3.7: Added the capture_output parameter.</p>\n</blockquote>",
        "id": 169884549,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562604052
    },
    {
        "content": "<p>On Ubuntu 18.04 (the latest LTS), python3 default to 3.6 but there is an official python 3.7. I only needed to use <code>python3.7 mk_library.py</code></p>",
        "id": 169884592,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562604102
    },
    {
        "content": "<p>Johan: yes indeed. But in the context of my teaching students don't want to import surprising things from mathlib. Remember we're not talking about Kevin's elite students. <em>None</em> of my 50 students created a Zulip account for instance. That's how curious they are</p>",
        "id": 169884684,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562604169
    },
    {
        "content": "<p>None of them asked whether there was any lemma they could add to Lean's library (I'm not even talking about knowing the name mathlib)</p>",
        "id": 169884720,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562604228
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Thanks! I still have yet to make the other changes you suggested...</p>",
        "id": 169886542,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562605674
    },
    {
        "content": "<p>One more suggestion about the Lean web editor: when clicking the Save button, inspiration for the file name could be taken from the name of the file that was last loaded (either from disk or url).</p>",
        "id": 170446659,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562673798
    },
    {
        "content": "<p>Maybe also turn \"no goal\" into \"goal accomplished\" as in VScode, for consistency</p>",
        "id": 170446735,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562673851
    },
    {
        "content": "<p>Otherwise the main thing is really getting Tab to autocomplete. Currently it seems only space works, which is really unconvenient</p>",
        "id": 170446766,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562673885
    },
    {
        "content": "<p>Thanks for the suggestions! The issue with Tab vs Space is indeed at the top of the list but I still haven't figured out a good approach to address it...</p>",
        "id": 170451249,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562677807
    },
    {
        "content": "<p>One more suggestion that came to me while documenting my use of this tool: in the top status bar, you could replace \"Lean is running...\" by \"Lean is loading...\" that is less ambiguous</p>",
        "id": 170465751,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562687585
    },
    {
        "content": "<p>I agree that \"Lean is running...\" is confusing.</p>",
        "id": 170465773,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562687623
    },
    {
        "content": "<p>So you would want \"Lean is loading...\" while it initializes but \"Lean is running\" afterwards, when it is actually processing the editor contents? That sounds reasonable.</p>",
        "id": 170465876,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562687726
    },
    {
        "content": "<p>\"Lean is ready!\" is also fine</p>",
        "id": 170465895,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562687760
    },
    {
        "content": "<p>Oh, I think I misunderstood the request at first. Would you be happy if the status bar showed either \"Lean is ready!\" or \"Lean is busy...\" ?</p>",
        "id": 170466554,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1562688303
    },
    {
        "content": "<p>Yes</p>",
        "id": 170468610,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562689907
    },
    {
        "content": "<p>Low priority, but I just tried it on my phone (android 9, chrome and Firefox) and the editor is unusable (backspace doesnt work). Possibly an issue in whatever text editor widget is used</p>",
        "id": 170927560,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1563221591
    },
    {
        "content": "<p>i doubt that monaco will work properly on mobile any time soon, and it probably doesn't make much sense to move away from it.<br>\nit's a pretty damn good web editor and also the backend for vscode.<br>\nthere's a github issue (<a href=\"https://github.com/Microsoft/monaco-editor/issues/246\" target=\"_blank\" title=\"https://github.com/Microsoft/monaco-editor/issues/246\">https://github.com/Microsoft/monaco-editor/issues/246</a>), but it doesn't look like there's any progress being made.</p>",
        "id": 170927874,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1563221857
    },
    {
        "content": "<p>It's too bad that it doesn't work on Android. I tested it a while back on an iPad and it seemed OK (if rather slow). I tested it just now on my iPhone and while backspace is OK, Safari zooms in way too far when I try to type, making it pretty much unusable.</p>\n<p>Re: monaco, I haven't updated the monaco version in my fork so it's probably out of date. Hopefully there aren't any big issues with it...</p>",
        "id": 170931183,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1563224397
    },
    {
        "content": "<p>the one we used for the wavelength ide has been frozen since early 2018 and it still seems to work fine</p>",
        "id": 170931794,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1563224792
    },
    {
        "content": "<p>while working through TPIL with the web editor i made a list with weird behavior, but that list seems to be gone now ...</p>",
        "id": 170931829,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1563224850
    },
    {
        "content": "<p>while opening it right now, just some quick weird things: <br>\n- there's no bracket matching overlay for the bracket at the position of the text cursor like in vs-code. i think you can enable it in the settings and configure which brackets to use (might be worth configuring \\&lt; \\&gt; and such).<br>\n- closing brackets are also seemingly not inserted automatically<br>\n- when using it while working through TPIL, i think i also had some issue with undo/redo, but i can't reproduce it right now</p>",
        "id": 170932288,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1563225182
    },
    {
        "content": "<p>It took me a while to get to this, but you can now use tab to perform translations to unicode in <a href=\"https://leanprover-community.github.io/lean-web-editor\" target=\"_blank\" title=\"https://leanprover-community.github.io/lean-web-editor\">the community lean-web-editor</a>! <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> </p>\n<p>I cleaned up some stuff in the meantime, in particular, it should now be much easier to build the web app from scratch with npm, etc. now that I've published my fork of <code>lean-client-js-browser</code> to npm. <span class=\"user-mention\" data-user-id=\"132175\">@Mohammad Pedramfar</span></p>",
        "id": 171490937,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1563859896
    },
    {
        "content": "<blockquote>\n<p>It took me a while to get to this, but you can now use tab to perform translations to unicode in <a href=\"https://leanprover-community.github.io/lean-web-editor\" target=\"_blank\" title=\"https://leanprover-community.github.io/lean-web-editor\">the community lean-web-editor</a>! <span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> </p>\n<p>I cleaned up some stuff in the meantime, in particular, it should now be much easier to build the web app from scratch with npm, etc. now that I've published my fork of <code>lean-client-js-browser</code> to npm. <span class=\"user-mention silent\" data-user-id=\"132175\">Mohammad Pedramfar</span></p>\n</blockquote>\n<p>Is it just me or is <a href=\"https://leanprover-community.github.io/lean-web-editor\" target=\"_blank\" title=\"https://leanprover-community.github.io/lean-web-editor\">the community lean-web-editor</a> not working at the moment?</p>",
        "id": 171683812,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564055387
    },
    {
        "content": "<p>Works for me</p>",
        "id": 171683901,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1564055447
    },
    {
        "content": "<p>uff, u-block origin was blocking a request to <a href=\"https://tqft.net/\" target=\"_blank\" title=\"https://tqft.net/\">https://tqft.net/</a> . thanks</p>",
        "id": 171684148,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564055729
    },
    {
        "content": "<p>Scott has actually decided to branch out and start an ad delivery network</p>",
        "id": 171743243,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1564108652
    }
]