[
    {
        "content": "<p>The current implementation of zorn is not exactly the most convenient, and require some casing to use (see: all the use cases). The more convenient statement would be \"a <strong>nonempty</strong> type such that every <strong>nonempty</strong> chain has an upper bound has a maximal element. Also, zorn.chain is for strict orders, which wouldn't be the best thing to use for partial orders (<code>zorn.zorn_partial_order</code>) and subsets (<code>zorn.zorn_subset</code>).</p>",
        "id": 136761477,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540887266
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> I'll create a PR if you approve</p>",
        "id": 136761481,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540887277
    },
    {
        "content": "<p>I think I have done this already</p>",
        "id": 136761489,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540887305
    },
    {
        "content": "<p>ok the latter problem is solved by <code>zorn.chain.total</code></p>",
        "id": 136761518,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540887356
    },
    {
        "content": "<p>but where can I find your work?</p>",
        "id": 136761564,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540887371
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/module/order/zorn.lean#L244-L258\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/module/order/zorn.lean#L244-L258\">https://github.com/leanprover-community/mathlib/blob/module/order/zorn.lean#L244-L258</a></p>",
        "id": 136761679,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540887570
    },
    {
        "content": "<p>I can merge that early if you want, or you can just copy it into your branch and it will get merged with mine eventually</p>",
        "id": 136761753,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540887606
    },
    {
        "content": "<p>Alternatively you might want a different interface; I played with a few alternatives but that's the only version I actually ended up using</p>",
        "id": 136761774,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540887649
    },
    {
        "content": "<p>oh</p>",
        "id": 136761788,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540887696
    },
    {
        "content": "<p>also zorn.chain is for strict or non-strict orders</p>",
        "id": 136761858,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540887796
    },
    {
        "content": "<p>yes but it's not convenient to use</p>",
        "id": 136762168,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540888281
    },
    {
        "content": "<p>?</p>",
        "id": 136762177,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540888320
    },
    {
        "content": "<p>that's why <code>zorn.chain.total</code> exists right</p>",
        "id": 136762236,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540888390
    },
    {
        "content": "<p>it's a wrapper for if you use <code>zorn.chain</code> on a non-strict order</p>",
        "id": 136762239,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540888405
    },
    {
        "content": "<p>(that's \"for if\" as in \"por si\")</p>",
        "id": 136762246,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540888429
    },
    {
        "content": "<p>(that I just googled to translate to \"just in case\")</p>",
        "id": 136762287,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540888449
    },
    {
        "content": "<p>s/googled to translate/googled which tells me that it translates/</p>",
        "id": 136762301,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540888510
    },
    {
        "content": "<p>I can't English</p>",
        "id": 136762302,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540888514
    },
    {
        "content": "<p>I'm not following. The definition makes sense for both strict and non-strict orders and there are lemmas to give you equivalent forms when you know one or the other</p>",
        "id": 136762440,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540888711
    },
    {
        "content": "<p>yes, so I say that <code>zorn.chain.total</code> solves the problem</p>",
        "id": 136762452,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540888749
    },
    {
        "content": "<p>do you mean <code>total_of_refl</code> by the way? I can't find <code>zorn.chain.total</code></p>",
        "id": 136762466,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540888800
    },
    {
        "content": "<p>maybe you <code>open</code>ed zorn</p>",
        "id": 136762547,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540888885
    },
    {
        "content": "<p>in which case it's <code>chain.total</code></p>",
        "id": 136762549,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540888890
    },
    {
        "content": "<p><code>_of_refl</code></p>",
        "id": 136762551,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540888899
    },
    {
        "content": "<p>actually I find <code>chain.directed</code> to be the most useful one; it is rare to actually need a chain as opposed to a directed set in zorn constructions</p>",
        "id": 136762555,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540888916
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/mathlib/blob/master/order/zorn.lean#L240\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/order/zorn.lean#L240\"><code>chain.total</code></a></p>",
        "id": 136762600,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540888933
    },
    {
        "content": "<p>oh, I guess that's just specializing to <code>le</code></p>",
        "id": 136762628,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540888993
    },
    {
        "content": "<p>That shouldn't be necessary (now?) since the <code>&lt;le_refl&gt;</code> part should be derivable by tc inference</p>",
        "id": 136762640,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540889040
    },
    {
        "content": "<p>it's shorter</p>",
        "id": 136762689,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540889073
    },
    {
        "content": "<p>also that's the first one I noticed</p>",
        "id": 136762695,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1540889085
    },
    {
        "content": "<p>well if I deleted it the other one would lose the <code>of_refl</code> part</p>",
        "id": 136762701,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1540889097
    },
    {
        "content": "<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/blob/module/order/zorn.lean#L244-L258\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/module/order/zorn.lean#L244-L258\">https://github.com/leanprover-community/mathlib/blob/module/order/zorn.lean#L244-L258</a></p>\n</blockquote>\n<p>Oh! Mario resumed work on modules! Is there hope to have modules before the Freiburg meeting next week? I see lots of underscores in that latest commit though <span class=\"emoji emoji-2639\" title=\"sad\">:sad:</span></p>",
        "id": 136763363,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1540890066
    },
    {
        "content": "<p>Hurray! We are cheering for you Mario!</p>",
        "id": 136802942,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1540929850
    }
]