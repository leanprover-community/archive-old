[
    {
        "content": "<p>Currently <a href=\"https://leanprover-community.github.io/mathlib_docs/find/subalgebra.coe_top/src\">src#subalgebra.coe_top</a> reads</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span> <span class=\"kd\">theorem</span> <span class=\"n\">coe_top</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">subalgebra</span> <span class=\"n\">R</span> <span class=\"n\">A</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">to_submodule</span> <span class=\"bp\">=</span> <span class=\"bp\">⊤</span> <span class=\"o\">:=</span>\n<span class=\"n\">submodule.ext</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">iff_of_true</span> <span class=\"n\">mem_top</span> <span class=\"n\">trivial</span>\n</code></pre></div>\n<p>It seems to me there's another theorem equally deserving that name, replacing <code>to_submodule</code> with <code>to_subsemiring</code>.</p>\n<p>Similarly, <code>coe_bot</code> is above the coercion to <code>set</code>. This is all a bit confusing, and in any case incomplete.</p>\n<p>Any suggestions about a good naming scheme for such lemmas? (<span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>?)</p>",
        "id": 235660458,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1619091437
    },
    {
        "content": "<p><code>top_to_submodule</code>, to match <a href=\"https://leanprover-community.github.io/mathlib_docs/find/submodule.top_to_add_submonoid\">docs#submodule.top_to_add_submonoid</a>?</p>",
        "id": 235660853,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1619091632
    },
    {
        "content": "<p>There's not a coe in that statement at all!</p>",
        "id": 235660911,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1619091657
    },
    {
        "content": "<p>(<a href=\"https://leanprover-community.github.io/mathlib_docs/find/submodule.coe_top\">docs#submodule.coe_top</a> says <code>↑⊤ = set.univ</code>, which is what I'd expect it to say)</p>",
        "id": 235660940,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1619091675
    }
]