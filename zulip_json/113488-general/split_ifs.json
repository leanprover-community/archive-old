[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span>, could we have <code>split_ifs</code> fail if there are no ifs to split? It's a trivial change, as in <a href=\"https://github.com/leanprover/mathlib/compare/master...semorrison:split_ifs?expand=1\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/compare/master...semorrison:split_ifs?expand=1\">https://github.com/leanprover/mathlib/compare/master...semorrison:split_ifs?expand=1</a>.</p>",
        "id": 127536409,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1528104212
    },
    {
        "content": "<p>In general I don't have a preference, as long as it is consistent.  So if we're changing all tactics to fail if they would do nothing, then that's ok.<br>\nBut this change will make <code>split_ifs</code> always fail, since it recursively calls itself.</p>",
        "id": 127536623,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1528104495
    },
    {
        "content": "<p>ugh, sorry. :-) I will actually test my next fix!</p>",
        "id": 127536647,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1528104581
    },
    {
        "content": "<p>At the moment it is really inconsistent. Last year sometime we convinced Leo that <code>simp</code> and <code>dsimp</code> should fail if they made no progress, and I would love to have everything else gradually switch to this convention.</p>",
        "id": 127536703,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1528104634
    },
    {
        "content": "<p>Okay, this one should actually work: <a href=\"https://github.com/leanprover/mathlib/compare/master...semorrison:split_ifs?expand=1\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/compare/master...semorrison:split_ifs?expand=1\">https://github.com/leanprover/mathlib/compare/master...semorrison:split_ifs?expand=1</a></p>",
        "id": 127536958,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1528105187
    },
    {
        "content": "<p>So far I am just sending PRs for tactics where I run into an inconvenience because they fail silently, and I have to test myself whether they worked. If it would be helpful, I could try to check that all the tactics in mathlib behave this way.</p>",
        "id": 127537017,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1528105253
    },
    {
        "content": "<p>Looks good to me if mathlib still builds.</p>",
        "id": 127537138,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1528105452
    }
]