[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">group_theory</span><span class=\"bp\">.</span><span class=\"n\">quotient_group</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n\n<span class=\"kn\">structure</span> <span class=\"n\">exact_couple</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">((</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Ag</span><span class=\"o\">:</span> <span class=\"n\">add_comm_group</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Eg</span><span class=\"o\">:</span> <span class=\"n\">add_comm_group</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→+</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→+</span> <span class=\"n\">E</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→+</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hij</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hji</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 194761783,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587446475
    },
    {
        "content": "<p>I can't <code>profiler</code> the time for some reason</p>",
        "id": 194761792,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587446482
    },
    {
        "content": "<p>but <code>has_coe_to_fun (A →+ E)</code> takes a long time to resolve according to <code>trace.class_instances</code></p>",
        "id": 194761845,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587446531
    },
    {
        "content": "<p>are we ready for bundled morphisms?</p>",
        "id": 194762205,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587447115
    },
    {
        "content": "<p>looks like I didn't do the control, because somehow this is slow also:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">structure</span> <span class=\"n\">exact_couple</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">((</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Ag</span><span class=\"o\">:</span> <span class=\"n\">add_comm_group</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Eg</span><span class=\"o\">:</span> <span class=\"n\">add_comm_group</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"c1\">--[hi : is_add_group_hom i]</span>\n<span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"c1\">--[hi : is_add_group_hom i]</span>\n<span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"c1\">--[hi : is_add_group_hom i]</span>\n<span class=\"o\">(</span><span class=\"n\">hij</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hji</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hjk</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hkj</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hki</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hik</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 194762272,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587447178
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span>  <span class=\"n\">class</span><span class=\"bp\">-</span><span class=\"kn\">instance</span> <span class=\"n\">resolution</span> <span class=\"n\">trace</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"err\">?</span><span class=\"n\">x_0</span> <span class=\"o\">:</span> <span class=\"n\">has_sizeof</span> <span class=\"o\">(</span><span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">add_submonoid</span><span class=\"bp\">.</span><span class=\"n\">has_sizeof_inst</span> <span class=\"err\">?</span><span class=\"n\">x_1</span> <span class=\"err\">?</span><span class=\"n\">x_2</span>\n<span class=\"n\">failed</span> <span class=\"n\">is_def_eq</span>\n<span class=\"o\">[</span><span class=\"bp\">...</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"err\">?</span><span class=\"n\">x_0</span> <span class=\"o\">:</span> <span class=\"n\">has_sizeof</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">is_lawful_traversable</span><span class=\"bp\">.</span><span class=\"n\">has_sizeof_inst</span> <span class=\"err\">?</span><span class=\"n\">x_128</span> <span class=\"err\">?</span><span class=\"n\">x_129</span>\n<span class=\"n\">failed</span> <span class=\"n\">is_def_eq</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"err\">?</span><span class=\"n\">x_0</span> <span class=\"o\">:</span> <span class=\"n\">has_sizeof</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">k</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">traversable</span><span class=\"bp\">.</span><span class=\"n\">has_sizeof_inst</span> <span class=\"err\">?</span><span class=\"n\">x_130</span>\n<span class=\"n\">failed</span> <span class=\"n\">is_def_eq</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"err\">?</span><span class=\"n\">x_</span>\n<span class=\"o\">(</span><span class=\"n\">message</span> <span class=\"n\">too</span> <span class=\"n\">long</span><span class=\"o\">,</span> <span class=\"n\">truncated</span> <span class=\"n\">at</span> <span class=\"mi\">262144</span> <span class=\"n\">characters</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 194762296,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587447238
    },
    {
        "content": "<p>does this mean I have to move everything to the left of the colon? I've never seen this before</p>",
        "id": 194762393,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587447346
    },
    {
        "content": "<p>but this is still slow:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">structure</span> <span class=\"n\">exact_couple</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"c1\">--[hi : is_add_group_hom i]</span>\n<span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"c1\">--[hi : is_add_group_hom i]</span>\n<span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"c1\">--[hi : is_add_group_hom i]</span>\n<span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">hij</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hji</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hjk</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hkj</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hki</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hik</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 194762450,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587447409
    },
    {
        "content": "<p>what's going on?</p>",
        "id": 194762469,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587447421
    },
    {
        "content": "<p>Lean is so slow, this is impossible to finish:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">group_theory</span><span class=\"bp\">.</span><span class=\"n\">quotient_group</span>\n\n<span class=\"n\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n\n<span class=\"kn\">structure</span> <span class=\"n\">exact_couple</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">((</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Ag</span><span class=\"o\">:</span> <span class=\"n\">add_comm_group</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">Eg</span><span class=\"o\">:</span> <span class=\"n\">add_comm_group</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">hi</span> <span class=\"o\">:</span> <span class=\"n\">is_add_group_hom</span> <span class=\"n\">i</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">hj</span> <span class=\"o\">:</span> <span class=\"n\">is_add_group_hom</span> <span class=\"n\">j</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">hk</span> <span class=\"o\">:</span> <span class=\"n\">is_add_group_hom</span> <span class=\"n\">k</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">hij</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hji</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hjk</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hkj</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hki</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hik</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"n\">Ag</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"n\">Eg</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"n\">hi</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"n\">hj</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"n\">hk</span>\n\n<span class=\"n\">def</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"n\">derived</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">})</span> <span class=\"o\">:</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">i</span><span class=\"o\">,</span>\n  <span class=\"c1\">--Ag := range.is_add_submonoid C.i,</span>\n  <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">letI</span> <span class=\"o\">:=</span> <span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"bp\">@</span><span class=\"n\">quotient_add_group</span><span class=\"bp\">.</span><span class=\"n\">quotient</span>\n    <span class=\"o\">(</span><span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">ker</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span> <span class=\"err\">∘</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">))</span> <span class=\"bp\">_</span>\n    <span class=\"o\">{</span> <span class=\"n\">y</span> <span class=\"bp\">|</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">}</span>\n    <span class=\"o\">{</span> <span class=\"n\">add_mem</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">rintros</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"n\">h1</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"n\">h2</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">x1</span><span class=\"o\">,</span> <span class=\"n\">h3</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">x2</span><span class=\"o\">,</span> <span class=\"n\">h4</span><span class=\"bp\">⟩;</span> <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"n\">at</span> <span class=\"n\">h3</span> <span class=\"n\">h4</span><span class=\"bp\">;</span> <span class=\"n\">substs</span> <span class=\"n\">h3</span> <span class=\"n\">h4</span><span class=\"bp\">;</span> <span class=\"n\">use</span> <span class=\"n\">x1</span><span class=\"bp\">+</span><span class=\"n\">x2</span><span class=\"bp\">;</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">is_add_monoid_hom</span><span class=\"bp\">.</span><span class=\"n\">map_add</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">is_add_monoid_hom</span><span class=\"bp\">.</span><span class=\"n\">map_add</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">refl</span><span class=\"o\">,</span>\n      <span class=\"n\">zero_mem</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">map_zero</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">map_zero</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">refl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n      <span class=\"n\">neg_mem</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">rintros</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">H</span><span class=\"bp\">⟩;</span> <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"n\">at</span> <span class=\"n\">H</span><span class=\"bp\">;</span> <span class=\"n\">subst</span> <span class=\"n\">H</span><span class=\"bp\">;</span> <span class=\"n\">use</span> <span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">;</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">map_neg</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">map_neg</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">refl</span> <span class=\"o\">}</span> <span class=\"o\">}</span>\n</pre></div>",
        "id": 194763260,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587448637
    },
    {
        "content": "<p>practically impossible</p>",
        "id": 194763266,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587448643
    },
    {
        "content": "<p>Why don't you factor out the construction of derived E? The derived E is just ker(d) over im(d), right? with d=j \\circ k. This construction deserves a bit of API of its own I should think. You seem to be proving that the image of d is a normal subgroup of the kernel of d in the middle of things. I should think that if you're going for the spectral sequence of an exact couple then the fact that d^2=0 gives some magic new ker(d)/im(d) which is functorial in (A,d) is a pretty important thing which needs maybe to be done first.</p>",
        "id": 194917439,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587555422
    },
    {
        "content": "<p>Note also that everything should be done for R-modules (and Scott would say everything needs to be done for abelian categories, but at the minute this would be out of the frying pan...)</p>",
        "id": 194917477,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587555464
    },
    {
        "content": "<p>It takes 1 second on my home PC to compile the partial derived couple code, it's not practically impossible at all to work with the definition as it stands, I just wrote <code>i := λ a, ⟨C.i a, a, rfl⟩,</code> no problem at all. Do you have access to a faster computer? It's holding you back. Still I think that pulling out the definition of derived E is the correct thing to do.</p>",
        "id": 194917707,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587555702
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Spectral_sequence#Exact_couples\" title=\"https://en.wikipedia.org/wiki/Spectral_sequence#Exact_couples\">link to what I think Kenny is doing</a></p>",
        "id": 194917781,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587555729
    },
    {
        "content": "<p>yes, there are work-arounds, but this shouldn't be slow is my point</p>",
        "id": 194917980,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587555886
    },
    {
        "content": "<p>particularly the definition of exact couple</p>",
        "id": 194918006,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587555901
    },
    {
        "content": "<p>\"Nothing is more permanent than a temporary solution.\" -- Russian Proverb</p>",
        "id": 194918068,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587555947
    },
    {
        "content": "<p>I just filled in all the remaining fields with <code>sorry</code> and I think there's a problem with your code.</p>",
        "id": 194918232,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587556064
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">type</span> <span class=\"n\">class</span> <span class=\"kn\">instance</span> <span class=\"n\">for</span>\n<span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">exact_couple</span>\n<span class=\"err\">⊢</span> <span class=\"n\">add_comm_group</span>\n    <span class=\"o\">(</span><span class=\"k\">let</span> <span class=\"bp\">_</span><span class=\"n\">inst</span> <span class=\"o\">:</span> <span class=\"n\">is_add_group_hom</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span> <span class=\"err\">∘</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">_</span>\n     <span class=\"k\">in</span> <span class=\"n\">quotient_add_group</span><span class=\"bp\">.</span><span class=\"n\">quotient</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"err\">↥</span><span class=\"o\">(</span><span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">ker</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span> <span class=\"err\">∘</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">))</span> <span class=\"bp\">|</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">E</span><span class=\"o\">),</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">})</span>\n</pre></div>",
        "id": 194918296,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587556091
    },
    {
        "content": "<p>could the slowness be the time it's taking this to fail?</p>",
        "id": 194918326,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587556112
    },
    {
        "content": "<p>it isn't an instance the composition of group hom is a group hom</p>",
        "id": 194918332,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587556123
    },
    {
        "content": "<p>maybe that's why</p>",
        "id": 194918337,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587556127
    },
    {
        "content": "<p>so maybe I should really factor this out</p>",
        "id": 194918350,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587556141
    },
    {
        "content": "<p>but then why is the exact couple definition slow?</p>",
        "id": 194918363,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587556148
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"n\">derived</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">})</span> <span class=\"o\">:</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">i</span><span class=\"o\">,</span>\n  <span class=\"c1\">--Ag := range.is_add_submonoid C.i,</span>\n  <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">letI</span> <span class=\"o\">:=</span> <span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"bp\">@</span><span class=\"n\">quotient_add_group</span><span class=\"bp\">.</span><span class=\"n\">quotient</span>\n    <span class=\"o\">(</span><span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">ker</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span> <span class=\"err\">∘</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">))</span> <span class=\"bp\">_</span>\n    <span class=\"o\">{</span> <span class=\"n\">y</span> <span class=\"bp\">|</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">}</span>\n    <span class=\"o\">{</span> <span class=\"n\">add_mem</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">rintros</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"n\">h1</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"n\">h2</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">x1</span><span class=\"o\">,</span> <span class=\"n\">h3</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">x2</span><span class=\"o\">,</span> <span class=\"n\">h4</span><span class=\"bp\">⟩;</span> <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"n\">at</span> <span class=\"n\">h3</span> <span class=\"n\">h4</span><span class=\"bp\">;</span> <span class=\"n\">substs</span> <span class=\"n\">h3</span> <span class=\"n\">h4</span><span class=\"bp\">;</span> <span class=\"n\">use</span> <span class=\"n\">x1</span><span class=\"bp\">+</span><span class=\"n\">x2</span><span class=\"bp\">;</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">is_add_monoid_hom</span><span class=\"bp\">.</span><span class=\"n\">map_add</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">is_add_monoid_hom</span><span class=\"bp\">.</span><span class=\"n\">map_add</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">refl</span><span class=\"o\">,</span>\n      <span class=\"n\">zero_mem</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">map_zero</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">map_zero</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">refl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n      <span class=\"n\">neg_mem</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">rintros</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">H</span><span class=\"bp\">⟩;</span> <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"n\">at</span> <span class=\"n\">H</span><span class=\"bp\">;</span> <span class=\"n\">subst</span> <span class=\"n\">H</span><span class=\"bp\">;</span> <span class=\"n\">use</span> <span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">;</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">map_neg</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">map_neg</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">refl</span> <span class=\"o\">},</span>\n  <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">i</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">hi</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">j</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hj</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hk</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hij</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hji</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hjk</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hkj</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hki</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hik</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"o\">}</span>\n</pre></div>\n\n\n<p>It's much faster for me now, when I fill in all the remaining fields</p>",
        "id": 194918414,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587556188
    },
    {
        "content": "<p>interesting</p>",
        "id": 194918471,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587556218
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"n\">derived</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">})</span> <span class=\"o\">:</span> <span class=\"n\">exact_couple</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">i</span><span class=\"o\">,</span>\n  <span class=\"c1\">--Ag := range.is_add_submonoid C.i,</span>\n  <span class=\"n\">Ag</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">letI</span> <span class=\"o\">:=</span> <span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"bp\">@</span><span class=\"n\">quotient_add_group</span><span class=\"bp\">.</span><span class=\"n\">quotient</span>\n    <span class=\"o\">(</span><span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">ker</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span> <span class=\"err\">∘</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">))</span> <span class=\"bp\">_</span>\n    <span class=\"o\">{</span> <span class=\"n\">y</span> <span class=\"bp\">|</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span> <span class=\"o\">(</span><span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">}</span>\n    <span class=\"o\">{</span> <span class=\"n\">add_mem</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">rintros</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"n\">h1</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"n\">h2</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">x1</span><span class=\"o\">,</span> <span class=\"n\">h3</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">x2</span><span class=\"o\">,</span> <span class=\"n\">h4</span><span class=\"bp\">⟩;</span> <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"n\">at</span> <span class=\"n\">h3</span> <span class=\"n\">h4</span><span class=\"bp\">;</span> <span class=\"n\">substs</span> <span class=\"n\">h3</span> <span class=\"n\">h4</span><span class=\"bp\">;</span> <span class=\"n\">use</span> <span class=\"n\">x1</span><span class=\"bp\">+</span><span class=\"n\">x2</span><span class=\"bp\">;</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">is_add_monoid_hom</span><span class=\"bp\">.</span><span class=\"n\">map_add</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">is_add_monoid_hom</span><span class=\"bp\">.</span><span class=\"n\">map_add</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">refl</span><span class=\"o\">,</span>\n      <span class=\"n\">zero_mem</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">map_zero</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">map_zero</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">refl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n      <span class=\"n\">neg_mem</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">rintros</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">H</span><span class=\"bp\">⟩;</span> <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"n\">at</span> <span class=\"n\">H</span><span class=\"bp\">;</span> <span class=\"n\">subst</span> <span class=\"n\">H</span><span class=\"bp\">;</span> <span class=\"n\">use</span> <span class=\"bp\">-</span><span class=\"n\">x</span><span class=\"bp\">;</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">map_neg</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">is_add_group_hom</span><span class=\"bp\">.</span><span class=\"n\">map_neg</span> <span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">j</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">refl</span> <span class=\"o\">},</span>\n  <span class=\"n\">Eg</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">i</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">C</span><span class=\"bp\">.</span><span class=\"n\">i</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">hi</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">j</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hj</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hk</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hij</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hji</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hjk</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hkj</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hki</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">hik</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"o\">}</span>\n</pre></div>",
        "id": 194918483,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587556229
    },
    {
        "content": "<p>Try that.</p>",
        "id": 194918490,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587556234
    },
    {
        "content": "<p>thanks</p>",
        "id": 194918497,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587556241
    },
    {
        "content": "<p>it's much better</p>",
        "id": 194918516,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587556252
    }
]