[
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.generate\">docs#filter.generate</a> says</p>\n<blockquote>\n<p><code>generate g</code> is the smallest filter containing the sets <code>g</code></p>\n</blockquote>\n<p>That should be the <em>largest</em> filter, right?</p>\n<p>In general, I think I recall that mathlib uses an ordering of filters that is opposite to the convention in most other literature. Is this explained, motivated somewhere in the docs? I couldn't find it.</p>",
        "id": 275472685,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1647413475
    },
    {
        "content": "<p>I don't think there is a strong literature convention on this, because filter inequality is generally denoted using <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊆</mo></mrow><annotation encoding=\"application/x-tex\">\\subseteq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">⊆</span></span></span></span> and there are no questions about what direction this goes</p>",
        "id": 275472828,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647413651
    },
    {
        "content": "<p>I was recently reading <br>\n<a href=\"https://leanprover-community.github.io/theories/topology.html\">https://leanprover-community.github.io/theories/topology.html</a><br>\nwhere the order is mentioned.</p>",
        "id": 275472837,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1647413668
    },
    {
        "content": "<p>I believe the reasoning behind the order is that it makes more sense if you treat filters as \"convergence spaces\"; more things converge in a filter which is larger in the order</p>",
        "id": 275472867,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647413723
    },
    {
        "content": "<p>in a sense this is abstracting away from the \"implementation detail\" of filters as sets of sets</p>",
        "id": 275472941,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647413809
    },
    {
        "content": "<p>I think it also makes more sense wrt <code>∀ᶠ x in l, p x</code></p>",
        "id": 275472978,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647413872
    },
    {
        "content": "<p>I certainly think that the mathlib convention makes sense. But it might be good to mention this in the module docstring of the file <code>order/filter/basic</code> as well.</p>",
        "id": 275473487,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1647414393
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/12734\">#12734</a> for the docstring of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.generate\">docs#filter.generate</a></p>",
        "id": 275473799,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1647414740
    }
]