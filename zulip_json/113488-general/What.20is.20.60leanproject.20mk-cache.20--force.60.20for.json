[
    {
        "content": "<p>I'm struggling to see why this command would ever be a good idea; it essentially builds a cache labelled as being for commit <code>A</code> that actually contains lean and olean files for some changes which were never assigned a sha. Some options that I think would be better:</p>\n<ul>\n<li>Just remove it, require users to run <code>git commit</code></li>\n<li>Have it run <code>git stash -k</code> first to actual create a real commit <code>B</code>, and then store the cache under that name</li>\n</ul>\n<p>The reason I ask is because I can't work out what the correct behavior of <code>leanproject get-cache --rev HEAD^</code> (when <strong>not</strong> in mathlib) should be; right now it essentially resets the entire working tree to whatever state it was in when <code>mk-cache</code> was run, which may or may not correspond to the contents off the git commit <code>HEAD^</code>.</p>",
        "id": 250270614,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629633577
    },
    {
        "content": "<p>I implemented the <code>git stash</code> version at <a href=\"https://github.com/leanprover-community/mathlib-tools/issues/115\">leanprover-community/mathlib-tools#115</a></p>",
        "id": 251559705,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1630503614
    }
]