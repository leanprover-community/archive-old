[
    {
        "content": "<p>Suppose I prove a goal using <code>by repeat {constructor}</code>. What is the syntax for creating a new def of type <code>tactic unit</code> that does the same thing? Do I have to drop down into using the non-interactive tactics?</p>",
        "id": 127458510,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1527927996
    },
    {
        "content": "<p>I guess handling the context and goals explicitly in a <code>do</code> block isn't so bad, but I was wondering if this is the correct way to do it</p>",
        "id": 127458561,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1527928141
    },
    {
        "content": "<p>ahh, figured it out. it's just <code>interactive.repeat interactive.constructor</code>. I didn't know about the <code>itactic</code> type</p>",
        "id": 127459735,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1527931014
    },
    {
        "content": "<p>1) Go to the definition of <code>tactic.interactive.repeat</code>and look how its defined.  I don't know if we have any documentation on how to write interactive tactics beyond the ICFP paper.  Short version: when you use <code>begin foo bar end</code>, lean looks for a definition named <code>tactic.interactive.foo</code>.  The type of the arguments of <code>tactic.interactive.foo</code> determine how the arguments to the tactic are parsed.  For example, <code>itactic</code> tells lean to parse a tactic block in curly braces.</p>",
        "id": 127460627,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1527933289
    },
    {
        "content": "<p>2) You can use <code> `[repeat {constructor}] </code> to use interactive tactic syntax outside of begin-end blocks.</p>",
        "id": 127460634,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1527933322
    }
]