[
    {
        "content": "<p>@maintainers: FYI, I got the following error for the dependent issues check on <a href=\"https://github.com/leanprover-community/mathlib/pull/13719\">#13719</a>.  Just thought someone should know.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">HttpError</span><span class=\"o\">:</span> <span class=\"n\">API</span> <span class=\"n\">rate</span> <span class=\"n\">limit</span> <span class=\"n\">exceeded</span> <span class=\"n\">for</span> <span class=\"n\">user</span> <span class=\"n\">ID</span> <span class=\"mi\">104808330</span><span class=\"bp\">.</span>\n</code></pre></div>",
        "id": 281043517,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1651596985
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/13902\">#13902</a> was merged earlier today which should help address this. Hopefully if you merge master again this shouldn't happen again.</p>",
        "id": 281046616,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1651598279
    },
    {
        "content": "<p>Do we know the userid of the new bot?</p>",
        "id": 281048082,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651598915
    },
    {
        "content": "<p>the new bot's github username is <code>mathlib-dependent-issues-bot</code>, but I don't know how to obtain the userid</p>",
        "id": 281097601,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651624508
    },
    {
        "content": "<p>Oh dear. This is the new bot! 104808330</p>",
        "id": 281097645,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651624562
    },
    {
        "content": "<p>So our dependent issues bot is hitting the rate limit all by itself. :-(</p>",
        "id": 281097694,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651624579
    },
    {
        "content": "<p>Options:</p>\n<ul>\n<li>find a better behaved bot</li>\n<li>write a better behaved bot</li>\n<li>working out how to divide up the work between multiple accounts</li>\n<li>...?</li>\n</ul>\n<p>Help very much appreciated!</p>",
        "id": 281097829,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651624713
    },
    {
        "content": "<p>I think the problem is that the bot touches every open PR every time a PR is built? Both seem to grow linearly, so...</p>",
        "id": 281097878,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651624771
    },
    {
        "content": "<p>Does anyone know how to get a list of all the \"mentions\" of a given PR by other PRs? Ideally when an issue is closed, rather than going through all open PRs to see if any depended on it, we could just go through the PRs which have already mentioned it.</p>",
        "id": 281098355,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651625224
    },
    {
        "content": "<p>(taking advantage of the fact that github itself has already noticed these mentions when the <code>- [ ] depends on #XXX</code> was written.</p>",
        "id": 281098372,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651625253
    },
    {
        "content": "<p>If we can't do this, I can only think of stateful solutions, which sounds unpleasant in a bot.</p>",
        "id": 281098425,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651625289
    },
    {
        "content": "<p>The \"stateful\" solution could be \"record backlinks in the PR description of the resolving PR\"</p>",
        "id": 281098480,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651625371
    },
    {
        "content": "<p>Which at least outsources the state tracking to github.</p>",
        "id": 281098495,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651625386
    },
    {
        "content": "<p>But makes the \"mentions\" idea much worse</p>",
        "id": 281098509,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651625400
    },
    {
        "content": "<p>I'll note that this happened to me just after I merged master from the other build issue yesterday. Perhaps it was just the case that everyone was doing this at the same time. The API rate limit is hourly, right? So maybe it's not really a problem in general (yet).</p>",
        "id": 281100395,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1651627424
    },
    {
        "content": "<p>If the bot runs once every 10 minutes, on all PRs, would that solve the issue? Because now, if 15 PRs are merged, it runs 15 times on all PRs. Do I understand that correctly?</p>",
        "id": 281119488,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651649252
    },
    {
        "content": "<p>I don't fully understand github actions, but I think our <a href=\"https://github.com/leanprover-community/mathlib/blob/master/.github/workflows/dependent-issues.yml\">YAML</a> file says that it is running every time a PR is edited.</p>",
        "id": 281121109,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651650467
    },
    {
        "content": "<p>And, besides that, every 15 minutes?</p>",
        "id": 281121172,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651650490
    },
    {
        "content": "<p>I guess we could just try turning off all the triggers except the 15 minute one and see what happens.</p>",
        "id": 281121206,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651650513
    },
    {
        "content": "<p>That's certainly worth a try, I think</p>",
        "id": 281123076,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651651745
    },
    {
        "content": "<p>Shouldn't <code>- cron: '15 * * * *'</code> be changed to <code>- cron: '*/15 * * * *'</code> if we want to run every 15 minutes? Otherwise it only runs 15 past every hour. (Which would match the comment on that line.)</p>",
        "id": 281123556,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651652092
    },
    {
        "content": "<p>Ah, yes, forgot my cron syntax.</p>",
        "id": 281128681,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651655306
    },
    {
        "content": "<blockquote>\n<p>Does anyone know how to get a list of all the \"mentions\" of a given PR by other PRs? Ideally when an issue is closed, rather than going through all open PRs to see if any depended on it, we could just go through the PRs which have already mentioned it.</p>\n</blockquote>\n<p>Something like this is possible via the GraphQL API (in a single request), I believe.  The sync-task-issues action uses this API, and I think it would be fairly straightforward to modify it so that we can use it instead of the dependent issues action.  This is what I wrote earlier on the topic:</p>\n<blockquote>\n<blockquote>\n<p>This action uses the GitHub GraphQL API to find references</p>\n</blockquote>\n<p>Maybe the dependent issues actions should do that as well.</p>\n<p>BTW, these actions seem to overlap very much.  Isn't the only difference that the dependent issues actions adds/removes labels?</p>\n<p>Yeah, I believe we just need to add a line or two here: <a href=\"https://github.com/jonabc/sync-task-issues/blob/8dda495be473d369c79f4161b0279b163933d333/src/sync-task-issues.js#L68\">https://github.com/jonabc/sync-task-issues/blob/8dda495be473d369c79f4161b0279b163933d333/src/sync-task-issues.js#L68</a></p>\n</blockquote>",
        "id": 281129927,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1651656073
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/113488-general/topic/CI.20.3A.20Dependent.20Issues/near/281043517\">said</a>:</p>\n<blockquote>\n<p>@maintainers: FYI, I got the following error for the dependent issues check on <a href=\"https://github.com/leanprover-community/mathlib/pull/13719\">#13719</a>.  Just thought someone should know.</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">HttpError</span><span class=\"o\">:</span> <span class=\"n\">API</span> <span class=\"n\">rate</span> <span class=\"n\">limit</span> <span class=\"n\">exceeded</span> <span class=\"n\">for</span> <span class=\"n\">user</span> <span class=\"n\">ID</span> <span class=\"mi\">104808330</span><span class=\"bp\">.</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>I just got this error too.</p>",
        "id": 281136537,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1651660393
    },
    {
        "content": "<p>If we make this a cron job rather than an on-pr job, then it won't mess up PR statuses, right?</p>",
        "id": 281139438,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651662401
    },
    {
        "content": "<p>What do you mean?</p>",
        "id": 281139459,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651662414
    },
    {
        "content": "<p>Right now everything new in the PR list has a red cross by it due to this rate limit</p>",
        "id": 281139493,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651662434
    },
    {
        "content": "<p>If we didn't run it as part of the PR suite then this wouldn't happen</p>",
        "id": 281139506,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651662446
    },
    {
        "content": "<p>Right</p>",
        "id": 281139880,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651662711
    },
    {
        "content": "<p>So that's a win, right?</p>",
        "id": 281139930,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651662723
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/13940\">#13940</a> switches to <code>*/15</code> cron</p>",
        "id": 281140233,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651662955
    },
    {
        "content": "<p>Please reply with <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span>  or <span aria-label=\"thumbs down\" class=\"emoji emoji-1f44e\" role=\"img\" title=\"thumbs down\">:thumbs_down:</span> if you think this should (not) be merged</p>",
        "id": 281140851,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651663338
    },
    {
        "content": "<p>I think we need to get everything unbroken quickly, and can restore functionality later.</p>",
        "id": 281140942,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651663410
    },
    {
        "content": "<p>Ok, fair enough, I kicked it on the queue.</p>",
        "id": 281141095,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651663512
    },
    {
        "content": "<p>Wait, for <a href=\"https://github.com/leanprover-community/mathlib/pull/13940\">#13940</a>, isn't \"every merged PR\" much less often than \"every 15min\"?</p>",
        "id": 281143583,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651665003
    },
    {
        "content": "<p>On average yes, but not worst-case</p>",
        "id": 281143612,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1651665027
    },
    {
        "content": "<p>Or is it running the same check several times for each bors batch?</p>",
        "id": 281143614,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651665028
    },
    {
        "content": "<p>I think it's every time a PR/issue is created or edited, as well as every time master changes</p>",
        "id": 281143680,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1651665067
    },
    {
        "content": "<p>Ah, that's what I thought too. So the description is erroneous.</p>",
        "id": 281143712,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1651665091
    },
    {
        "content": "<p>I think the really dangerous case is when bors merges a big batch, and then simultaneously edits all the PRs from that batch, triggering multiple simultaneous runs of the the dependent issues bot.</p>",
        "id": 281145353,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651666141
    },
    {
        "content": "<p>I'm not sure whether the last commit was meant to have fixed this, but it's still failing on my PRs</p>",
        "id": 281217827,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1651697550
    },
    {
        "content": "<p>You'll have to merge master still</p>",
        "id": 281220163,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651698784
    },
    {
        "content": "<p>I just got this error on <a href=\"https://github.com/leanprover-community/mathlib/pull/14017\">#14017</a></p>",
        "id": 281643289,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1652077101
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"282271\">@Bolton Bailey</span> <a href=\"#narrow/stream/113488-general/topic/unhappy.20user.20ID.20104802998/near/281642954\">this</a> may apply to you too.</p>",
        "id": 281644201,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1652077993
    },
    {
        "content": "<p>So what's the fix? Rerun at :00 flat?</p>",
        "id": 281773957,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652154712
    },
    {
        "content": "<p>Because this didn't work</p>",
        "id": 281774978,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652155885
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/13963\">#13963</a> and <a href=\"https://github.com/leanprover-community/mathlib/pull/14039\">#14039</a> are just stuck</p>",
        "id": 281774985,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652155901
    },
    {
        "content": "<p>At the moment there is not a fix. We're working on it. :-(</p>",
        "id": 281775038,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1652155936
    },
    {
        "content": "<p>Thanks a lot, and no hurries.</p>",
        "id": 281777155,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1652158719
    }
]