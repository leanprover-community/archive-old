[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> am I right that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.sigma_empty\">docs#set.sigma_empty</a> is not what you intended to write?</p>",
        "id": 315627170,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670947939
    },
    {
        "content": "<p>I'm porting that file to Lean 4 and the simp lemma linter complains about it, and seems right to me.</p>",
        "id": 315627273,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670947968
    },
    {
        "content": "<p>I guess you intended to write</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">sigma_empty</span> <span class=\"o\">:</span> <span class=\"n\">s.sigma</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∅</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">i</span><span class=\"o\">)))</span> <span class=\"bp\">=</span> <span class=\"bp\">∅</span> <span class=\"o\">:=</span> <span class=\"n\">ext</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">and_false</span> <span class=\"n\">_</span>\n</code></pre></div>",
        "id": 315627367,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670947994
    },
    {
        "content": "<p>Oh! Yes</p>",
        "id": 315627618,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670948051
    },
    {
        "content": "<p>It's nice that the Lean 4 linter got better at spotting that simp will never manage to apply this lemma.</p>",
        "id": 315628026,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670948162
    },
    {
        "content": "<p>If you open a PR to fix this then I'll merge it right away (I mean after CI).</p>",
        "id": 315628107,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1670948183
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/17929\">#17929</a></p>",
        "id": 315628813,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1670948369
    }
]