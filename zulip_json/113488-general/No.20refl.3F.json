[
    {
        "content": "<p>How come in this proof i dont need refl. I had to write it in the Natural Number Game.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">add_succ_zero</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">succ</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">add_succ</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">add_zero</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>when i write <code>refl,</code> at the end, it tells me</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">tactic</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">there</span> <span class=\"n\">are</span> <span class=\"n\">no</span> <span class=\"n\">goals</span> <span class=\"n\">to</span> <span class=\"n\">be</span> <span class=\"n\">solved</span>\n<span class=\"n\">state</span><span class=\"o\">:</span>\n<span class=\"n\">no</span> <span class=\"n\">goals</span>\n</code></pre></div>\n<p>is it implicit now?</p>",
        "id": 279766875,
        "sender_full_name": "Joseph O",
        "timestamp": 1650591395
    },
    {
        "content": "<p>The nng uses a simplified rw, essentially to make it a bit less confusing to learn</p>",
        "id": 279767138,
        "sender_full_name": "Julian Berman",
        "timestamp": 1650591609
    },
    {
        "content": "<p>But yes the real rw will basically automatically run refl after rewriting</p>",
        "id": 279767158,
        "sender_full_name": "Julian Berman",
        "timestamp": 1650591632
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321696\">Julian Berman</span> <a href=\"#narrow/stream/113488-general/topic/No.20refl.3F/near/279767138\">said</a>:</p>\n<blockquote>\n<p>The nng uses a simplified rw, essentially to make it a bit less confusing to learn</p>\n</blockquote>\n<p>what is the nng?</p>",
        "id": 279767664,
        "sender_full_name": "Joseph O",
        "timestamp": 1650592127
    },
    {
        "content": "<p>how can i use the real rw?</p>",
        "id": 279767688,
        "sender_full_name": "Joseph O",
        "timestamp": 1650592132
    },
    {
        "content": "<p>Nng= natural number game, outside of the game <code>rw</code> is the real rewrite and you don't need to do anything special to use it</p>",
        "id": 279767730,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1650592192
    },
    {
        "content": "<p>oh right</p>",
        "id": 279767809,
        "sender_full_name": "Joseph O",
        "timestamp": 1650592250
    },
    {
        "content": "<p>like im surprised with real <code>rw</code> <code>succ_eq_add_one</code> is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">succ_eq_add_one</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">succ</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">one_eq_succ_zero</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>but with nng its </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">succ_eq_add_one</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">succ</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">one_eq_succ_zero</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">add_succ</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">add_zero</span><span class=\"o\">,</span>\n  <span class=\"n\">refl</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>\n</code></pre></div>",
        "id": 279768065,
        "sender_full_name": "Joseph O",
        "timestamp": 1650592465
    },
    {
        "content": "<p>What happens if you try the first one in nng, just followed by refl?</p>",
        "id": 279771059,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1650595624
    },
    {
        "content": "<p>Does it work then? If <code>add_succ</code> and <code>add_zero</code> are proved by refl in the first place then it should be basically the same to do that</p>",
        "id": 279771084,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1650595667
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113488-general/topic/No.20refl.3F/near/279771084\">said</a>:</p>\n<blockquote>\n<p>Does it work then? If <code>add_succ</code> and <code>add_zero</code> are proved by refl in the first place then it should be basically the same to do that</p>\n</blockquote>\n<p>it doesn't prove it without them. It also seems like nng's <code>rwa</code> is analogous to the real <code>rw</code>.</p>",
        "id": 279816445,
        "sender_full_name": "Joseph O",
        "timestamp": 1650630506
    }
]