[
    {
        "content": "<p>Dear All,</p>\n<p>in <a href=\"https://github.com/leanprover-community/mathlib/pull/16091\">#16091</a>, I am introducing the following definition:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.finsupp.basic</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">finsupp</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">N</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_zero</span> <span class=\"n\">N</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">to_be_named</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→₀</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">f.support</span> <span class=\"bp\">∪</span> <span class=\"n\">g.support</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">finsupp</span>\n</code></pre></div>\n<p>Thus, <code>finsupp.to_be_named f g : finset α</code> is the finite subset of <code>α</code> where <code>f</code> and <code>g</code> differ.  For instance, in the case in which <code>N</code> is an additive group, <code>finsupp.to_be_named f g</code> coincides with <code>finsupp.support (f - g)</code>.</p>\n<p>I chose <code>diff</code> as the name.<br>\n<span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> suggested <code>ne_locus</code> as an alternative name.  I like both and am slightly in favour of <code>diff</code> just because it is shorter.</p>\n<p>Which name do you prefer?</p>",
        "id": 293922291,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1660750942
    },
    {
        "content": "<p>/poll to_be_named<br>\ndiff<br>\nne_locus<br>\nsomething else</p>",
        "id": 293922318,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1660750951
    },
    {
        "content": "<p>When seeing <code>diff</code>, I would think of set difference.</p>",
        "id": 293923672,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1660751319
    },
    {
        "content": "<p>I think <code>diff</code> slightly clashes with other names, like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/list.diff\">docs#list.diff</a> (which is the symmetric difference), <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.has_sdiff\">docs#finset.has_sdiff</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.has_sdiff\">docs#set.has_sdiff</a> (the set difference, with theorems named with diff instead of sdiff), and my instinct is to parse <code>diff</code> as some kind of (truncated) subtraction operation; <code>ne_locus</code> is more suggestive of what it actually is.</p>",
        "id": 293923784,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1660751366
    },
    {
        "content": "<p>These are all valid points.  I am not going to argue in favour or against: I like both suggestions, so I am happy to go with whatever the majority prefers!</p>",
        "id": 293924219,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1660751501
    },
    {
        "content": "<p>Note that <code>ne_locus</code> was suggested to match <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ring_hom.eq_locus\">docs#ring_hom.eq_locus</a> and similar names; although we don't seem to have any <code>ne_locus</code>es yet</p>",
        "id": 293930075,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660753241
    },
    {
        "content": "<p>I made the switch to <code>ne_locus</code>, which in hindsight does seem a better name!</p>\n<p>If anyone has any comments on the PR (or wants to approve it <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>), please let me know!</p>",
        "id": 294015865,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1660801178
    },
    {
        "content": "<p>I'm hoping to get <a href=\"https://github.com/leanprover-community/mathlib/pull/15699\">#15699</a> (the split of <code>data/finsupp/basic</code> into three parts) finished today.  I'm waiting for CI to confirm that I resolved the merge conflict correctly, then I just have to fix the docstrings in the three files.  It has one approval from <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> already, so I'm hopeful that this can be done and merged by the time your additions are ready to go.</p>",
        "id": 294021423,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1660805288
    },
    {
        "content": "<p><del>(Should your last post be in <a href=\"#narrow/stream/113488-general/topic/finsupp.20refactor\">this thread</a> instead?)</del> Nevermind, I understand the message now :)</p>",
        "id": 294022242,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1660805825
    },
    {
        "content": "<p>Stuart, thank you for the update!  I am creating a new file, precisely in the spirit of your refactor: to avoid overcharging <code>finsupp.basic</code> and also not to step on your PR!</p>\n<p>Currently, I am importing only <code>finsupp.basic</code> and mostly working with the support of <code>finsupp</code>s, so I will need very little from actual finsupps.  Anyway, I will figure out what to import, but, from the looks of it, it will still be <code>finsupp.basic</code>!</p>",
        "id": 294022798,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1660806218
    },
    {
        "content": "<p>Actually, I just merged your branch with mine: I only need <code>data.finsupp.defs</code>.</p>\n<p>So, whether or not my branch merges before yours, it will not cause issues.  The worst that can happen is that I am left with importing a file that is later than needed, but you would not notice that.  I think!</p>",
        "id": 294023560,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1660806696
    },
    {
        "content": "<p>(I am not going to officially make my PR dependent on yours, since currently yours does not seem to build, while I want to make sure that the linter is happy with mine!)</p>",
        "id": 294023723,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1660806796
    }
]