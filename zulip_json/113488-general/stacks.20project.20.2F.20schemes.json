[
    {
        "content": "<p>Thought this was worth its own topic because we all know there are people here who are less interested in the maths side of things. Here's an update.</p>",
        "id": 123081857,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809221
    },
    {
        "content": "<p>Kenny and I nearly have schemes. Not in a \"just about ready for mathlib\" sort of way -- far from it -- but in a \"the mathematically correct definition\" sort of way.</p>",
        "id": 123081905,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809297
    },
    {
        "content": "<p>It will need a lot more work before it goes anywhere near mathlib, but I am not going to do that work quite yet because for deadline reasons it would be nice to get perfectoid spaces before 10th March, or at least to get some way towards them. After that we can think about tidying up and deciding which bits mathlib might want and in what form.</p>",
        "id": 123081956,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809389
    },
    {
        "content": "<p>The reason I'm posting is because I need to make a call on categories. At the end of the day I currently need sheaves of commutative rings (for the _definition_ of a scheme), and to actually prove anything at all I need sheaves of modules for these rings. For perfectoid spaces I will need sheaves of topological rings on a site.</p>",
        "id": 123082015,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809496
    },
    {
        "content": "<p>So do I go with sheaves taking values in categories or do I just muddle on?</p>",
        "id": 123082023,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809514
    },
    {
        "content": "<p>If I go with sheaves taking values in categories then to put it bluntly it simply raises the bar even higher to getting anything in to mathlib.</p>",
        "id": 123082041,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809549
    },
    {
        "content": "<p>Now Patrick has urged to me to get this into mathlib-ready form, and I'll start on this after the 11th.</p>",
        "id": 123082042,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809566
    },
    {
        "content": "<p>Here's a question: what is the least common denominator of all the things you need sheaves of?</p>",
        "id": 123082046,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519809591
    },
    {
        "content": "<p>My hope is that it is at least a concrete category</p>",
        "id": 123082099,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519809644
    },
    {
        "content": "<p>If you project needing 3+ different kinds of sheaves, that's sufficient for making a single generalization, but it's not immediate that this generalization should be over categories in the usual sense</p>",
        "id": 123082110,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519809719
    },
    {
        "content": "<p>But this has always been an independent experiment for me -- can we actually even define a scheme / perfectoid space in Lean? For me that is an interesting independent question. I don't think it is for Mario, because he looks at maths very differently and, not unreasonably, I don't think he can tell the difference between a perfectoid space and a topological space in some sense -- they're both structures with a bunch of axioms to him. And for some reason he seems very much focussed on theorems rather than definitions -- a theorem for him is proof that the definition works, whereas if I know as a mathematician that a definition is correct then for me that might be enough.</p>",
        "id": 123082147,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809724
    },
    {
        "content": "<p>So there is certainly the possibility that my conclusion is \"look, here's a definition\" and Mario's response is \"who cares?\". And the definition might just then sit there for months just being something that mathematicians can look and go \"oh look what they can do now, how fancy, that's a million miles from the odd order theorem isn't it\".</p>",
        "id": 123082163,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809821
    },
    {
        "content": "<p>The Least Common Denominator depends very much on how far you want to go.</p>",
        "id": 123082209,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809854
    },
    {
        "content": "<p>I think you are right in that assessment. It seems to me obvious that one can make a definition of scheme / perfectoid space in lean; that's obviously within Lean's capabilities. The question is only if one can make a good or useful definition</p>",
        "id": 123082211,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519809860
    },
    {
        "content": "<p>The Weil Conjectures are a famous theorem.</p>",
        "id": 123082212,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809863
    },
    {
        "content": "<p>For them you ideally would have sheaves on a more general object than a topological space and then take the derived category.</p>",
        "id": 123082227,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809906
    },
    {
        "content": "<p>My gut feeling is that by that point you want to be using categories.</p>",
        "id": 123082229,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519809917
    },
    {
        "content": "<p>by that point...</p>",
        "id": 123082230,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519809929
    },
    {
        "content": "<p>I don't think you should be afraid of later revision</p>",
        "id": 123082233,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519809948
    },
    {
        "content": "<p>have goals, and plan for them. If you want the Weil Conjectures, then go for it</p>",
        "id": 123082273,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519809972
    },
    {
        "content": "<blockquote>\n<p>I think you are right in that assessment. It seems to me obvious that one can make a definition of scheme / perfectoid space in lean; that's obviously within Lean's capabilities. The question is only if one can make a good or useful definition</p>\n</blockquote>\n<p>No, that's just one question. Another question is how to get mathematicians talking about Lean. And we already have ample evidence that proving a theorem which is 400 pages of ingenious but relatively straightforward calculations in group theory and which was done by mathematicians before all of us were born, does not do it. But in the math community there is huge excitement about perfectoid spaces because they are new and they are demolishing bits of the Langlands Programme which people thought were hitherto inaccessible. They are <em>fashionable</em>.</p>",
        "id": 123082289,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810030
    },
    {
        "content": "<p>Is there positive evidence that writing down a definition will interest mathematicians?</p>",
        "id": 123082295,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519810076
    },
    {
        "content": "<p>This is the part that you (Mario) cannot see at all and this is unsurprising given where you are sitting and your background</p>",
        "id": 123082296,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810077
    },
    {
        "content": "<p>There is positive evidence that not writing down a definition will not interest them.</p>",
        "id": 123082335,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810090
    },
    {
        "content": "<p>In a sense it seems much the same as proving an old theorem formally - whoop-de-doo you formalized a definition we all know</p>",
        "id": 123082337,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519810126
    },
    {
        "content": "<p>I am going to give a talk at an undergraduate conference on the 11th, a theoretical talk, an introduction to perfectoid spaces and what they can do</p>",
        "id": 123082338,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810128
    },
    {
        "content": "<p>and I think it would be cool to unveil the definition there.</p>",
        "id": 123082349,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810140
    },
    {
        "content": "<p>There is a difference which you can't see.</p>",
        "id": 123082355,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810158
    },
    {
        "content": "<p>Proving an _old_ theorem formally -- you formalised a theorem that we all understand the statement of and which was proved before we were all born</p>",
        "id": 123082360,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810189
    },
    {
        "content": "<p>Making a _new_ definition which is extremely complex and most mathematicians don't understand has much more of an air of mystery about it.</p>",
        "id": 123082406,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810214
    },
    {
        "content": "<p>There is a subtlety.</p>",
        "id": 123082411,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810233
    },
    {
        "content": "<p>I assume that perfectoid spaces are not themselves the object of perfectoid theory, such as it is. Presumably they are being used in some way to get things done, some proof strategy that harnesses the power of the definition</p>",
        "id": 123082415,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519810260
    },
    {
        "content": "<p>Currently the word \"perfectoid space\" to most mathematicians means \"abstract structure whose definition I have not read and would probably not understand if I did read, but I know that in the number theory community everyone is talking about them and I get the feeling that there is a general sense of excitement happening right now\"</p>",
        "id": 123082425,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810292
    },
    {
        "content": "<p>this is absolutely absolutely the opposite of everyone's feeling about the odd order theorem</p>",
        "id": 123082429,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810306
    },
    {
        "content": "<p>I'm obviously in the wrong place to make such pronouncements, but I won't be convinced you've done a thing with substance until you mimic such proofs</p>",
        "id": 123082472,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519810325
    },
    {
        "content": "<p>Well there is a basic \"perfectoid theory\" which was only worked out a few years ago</p>",
        "id": 123082475,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810338
    },
    {
        "content": "<p>Mario I am not suggesting I have done anything of substance with perfectoid spaces even if I manage to define them.</p>",
        "id": 123082483,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810375
    },
    {
        "content": "<p>But I am suggesting that they might be a selling point.</p>",
        "id": 123082486,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810384
    },
    {
        "content": "<p>Because in contrast to the odd order theorem, which everyone understands and nobody cares about</p>",
        "id": 123082496,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810402
    },
    {
        "content": "<p>I freely admit I don't understand what makes a thing a selling point for mathematicians</p>",
        "id": 123082497,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519810412
    },
    {
        "content": "<p>perfectoid spaces have the property that nobody understands them and a lot of people care about them.</p>",
        "id": 123082499,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810424
    },
    {
        "content": "<blockquote>\n<p>I freely admit I don't understand what makes a thing a selling point for mathematicians</p>\n</blockquote>",
        "id": 123082500,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810435
    },
    {
        "content": "<p>Right, it's all just structures to you.</p>",
        "id": 123082540,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810448
    },
    {
        "content": "<p>It would be like me saying \"OK so you wrote a search engine and you wrote a space invaders game, they're all just computer programs at the end of the day though\"</p>",
        "id": 123082550,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810471
    },
    {
        "content": "<p>if I just couldn't tell the difference between them</p>",
        "id": 123082554,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810488
    },
    {
        "content": "<p>because I never used either of them</p>",
        "id": 123082555,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810494
    },
    {
        "content": "<p>I don't expect you to see any difference between the definition of a group and the definition of a perfectoid space</p>",
        "id": 123082566,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810517
    },
    {
        "content": "<p>however I do think you should know that one is more fashionable than the other currently, in some circles.</p>",
        "id": 123082571,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810531
    },
    {
        "content": "<blockquote>\n<p>Currently the word \"perfectoid space\" to most mathematicians means \"abstract structure whose definition I have not read and would probably not understand if I did read, but I know that in the number theory community everyone is talking about them and I get the feeling that there is a general sense of excitement happening right now\"</p>\n</blockquote>\n<p>I can confirm this.</p>",
        "id": 123082615,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519810562
    },
    {
        "content": "<p>Okay, by that analogy the proofs is where you \"run the program\" of the definition, that's where the differences become obvious</p>",
        "id": 123082620,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519810574
    },
    {
        "content": "<p>Otherwise I'm just staring at a bunch of code for space invaders / google, and I don't understand what does what or why</p>",
        "id": 123082631,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519810643
    },
    {
        "content": "<p>Right</p>",
        "id": 123082670,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810683
    },
    {
        "content": "<p>But on the other hand if you are in a community and there's a whole bunch of other people that you respect getting very excited by some computer program which you are not competent enough to use, then this might rub off.</p>",
        "id": 123082684,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810747
    },
    {
        "content": "<p>And if you're then on some grant committee that is deciding where the money is going and you see a proposal which mentions this fancy new program which you know there are experts raving about then perhaps you are favourably inclined towards that proposal even though you can't actually understand it.</p>",
        "id": 123082723,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810804
    },
    {
        "content": "<p>I think you need to get famous number theorist X involved in your project then</p>",
        "id": 123082729,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1519810817
    },
    {
        "content": "<p>I think I should write the definition first!</p>",
        "id": 123082733,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810842
    },
    {
        "content": "<blockquote>\n<p>I think you need to get famous number theorist X involved in your project then</p>\n</blockquote>\n<p>Yeah, who has Scholze's phone number?</p>",
        "id": 123082743,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519810874
    },
    {
        "content": "<p><em>That</em> would have an impact</p>",
        "id": 123082745,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519810890
    },
    {
        "content": "<p>I exchange emails with him from time to time</p>",
        "id": 123082746,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810891
    },
    {
        "content": "<p>but I've not mentioned this to him yet.</p>",
        "id": 123082748,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810896
    },
    {
        "content": "<p>Imagine Peter Scholze in Rio explaining he is now using Lean as a day to day tool</p>",
        "id": 123082750,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519810915
    },
    {
        "content": "<p>That is not going to happen, but when I finish it I will certainly mention it to him.</p>",
        "id": 123082792,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810932
    },
    {
        "content": "<p>[Note to non-mathematician: Rio is where Scholze will get his Fields medal this summer]</p>",
        "id": 123082798,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519810953
    },
    {
        "content": "<p>It would be interesting to hear his opinions.</p>",
        "id": 123082799,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810956
    },
    {
        "content": "<p>The non-mathematicians have all muted this thread ;-)</p>",
        "id": 123082803,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519810980
    },
    {
        "content": "<p>Damn Zulip!</p>",
        "id": 123082811,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519810998
    },
    {
        "content": "<p>This is exactly the sort of chat that takes up 200 messages on gitter and all the poor CS guys just have to scroll through and hope that they see the CS question somewhere in the middle that we all ignore</p>",
        "id": 123082818,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811042
    },
    {
        "content": "<p>I think that if we figure out how to make these topics work properly then it might be of benefit to everyone.</p>",
        "id": 123082864,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811082
    },
    {
        "content": "<p>Anyway, Patrick and Mario I suspect you have different opinions on this issue. Let's imagine I triumphantly define a perfectoid space structure at 4am on the morning of 11th March and then decide to move on to something else for a month</p>",
        "id": 123082877,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811142
    },
    {
        "content": "<p>and it's manifestly not mathlib-ready and I don't have the time to even prove Lemma 1 about perfectoid spaces</p>",
        "id": 123082920,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811165
    },
    {
        "content": "<p>Mario is then manifestly not interested in adding the definition to mathlib, and he has explained his reasons above.</p>",
        "id": 123082927,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811195
    },
    {
        "content": "<p>Patrick would you be happy with it just sitting there in some random repo on my github?</p>",
        "id": 123082929,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811210
    },
    {
        "content": "<p>a valid but potentially unusable definition?</p>",
        "id": 123082934,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811232
    },
    {
        "content": "<p>I wouldn't be happy, but who cares?</p>",
        "id": 123082936,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519811239
    },
    {
        "content": "<p>My plan is to make the definition and then just tell a bunch of undergraduates about it</p>",
        "id": 123082937,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811248
    },
    {
        "content": "<p>and maybe some graduate students</p>",
        "id": 123082939,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811254
    },
    {
        "content": "<p>until I find one or two people who are interested in taking it further.</p>",
        "id": 123082940,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811277
    },
    {
        "content": "<p>Undergraduates do do pretty weird things nowadays.</p>",
        "id": 123082981,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811298
    },
    {
        "content": "<p>Probably people have seen MO questions of the form \"I am an undergraduate but I have been reading Lurie's book and I have a question about infinity-categories\"</p>",
        "id": 123082994,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811329
    },
    {
        "content": "<p>and sometimes the questions are just plain stupid</p>",
        "id": 123082996,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811341
    },
    {
        "content": "<p>but sometimes they are graduate student level</p>",
        "id": 123083002,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811348
    },
    {
        "content": "<p>For me this is evidence of a big change in the way people are accessing and learning mathematics.</p>",
        "id": 123083007,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811369
    },
    {
        "content": "<p>Undergraduates have access to so much information now because of the web, so they find random things and attempt to engage with them.</p>",
        "id": 123083010,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811390
    },
    {
        "content": "<p>But this will happen one month after your talk. And by that time your lone repo won't be compiling against current Lean</p>",
        "id": 123083012,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519811399
    },
    {
        "content": "<p>I don't care</p>",
        "id": 123083056,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811410
    },
    {
        "content": "<p>because I am going to fix this problem if necessary by fixing which version of Lean I am using</p>",
        "id": 123083062,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811437
    },
    {
        "content": "<p>I would really really love for Leo to release 3.4.0. I would stick there like a shot.</p>",
        "id": 123083064,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811452
    },
    {
        "content": "<p>I am going to make a bunch of teaching material which will all run on some fixed version of Lean and then actively urge the undergrads not to upgrade.</p>",
        "id": 123083070,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811481
    },
    {
        "content": "<p>That's why I am excited about the project which is going to make old nightlies accessible.</p>",
        "id": 123083071,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811498
    },
    {
        "content": "<p>I just think that for certain people, a formal definition of a perfectoid space will be a really interesting looking carrot.</p>",
        "id": 123083114,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811569
    },
    {
        "content": "<p>Schemes was enough of a carrot for Kenny, for example.</p>",
        "id": 123083122,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811601
    },
    {
        "content": "<p>But actually I came here to ask whether I should use <span class=\"user-mention\" data-user-email=\"scott@tqft.net\" data-user-id=\"110087\">@Scott Morrison</span> 's category theory library or whether it's not yet ready. That's the call I have to make at the minute.</p>",
        "id": 123083167,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811664
    },
    {
        "content": "<p>If all I want is schemes then all I need is sheaves of rings which I can do by hand.</p>",
        "id": 123083168,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811677
    },
    {
        "content": "<p>But this doesn't scale.</p>",
        "id": 123083169,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519811684
    },
    {
        "content": "<p>People who care about schemes or perfectoid spaces will want the latest advances in Lean automatisation. They won't be happy with Lean 3.4.0</p>",
        "id": 123083179,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519811708
    },
    {
        "content": "<p>I see.</p>",
        "id": 123083465,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519812255
    },
    {
        "content": "<blockquote>\n<p>Proving an _old_ theorem formally -- you formalised a theorem that we all understand the statement of and which was proved before we were all born</p>\n</blockquote>\n<p>Come on <span class=\"user-mention\" data-user-email=\"assia.mahboubi@inria.fr\" data-user-id=\"110172\">@Assia Mahboubi</span> fight back!</p>",
        "id": 123084651,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519814550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"k.buzzard@imperial.ac.uk\" data-user-id=\"110038\">@Kevin Buzzard</span>, agreeing a bit with <span class=\"user-mention\" data-user-email=\"patrickmassot@free.fr\" data-user-id=\"110031\">@Patrick Massot</span> , I do think it's important that developments end up in mathlib (or otherwise in repositories with multiple contributors who may maintain things). In the current Lean ecosystem, bitrot happens incredibly quickly (in fact so much so that I think I actually agree with Leo --- possibly all of the current mathlib is doomed to need complete rewriting several times over in the next few years).</p>",
        "id": 123085930,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1519816988
    },
    {
        "content": "<p>It leaves me genuinely uncertain about the best path. I think you're fundamentally right in wanting to make a dash towards an important and impressive part of modern mathematics. I agree with everything you say concerning the odd order theorem. (The initial human proof of the odd order theorem was in some ways a huge disappointment --- it was one of the first times humans encountered an interesting theorem whose shortest proof was really long. Saying that computers are helpful for doing tedious mathematics is not really a selling point.)</p>",
        "id": 123086050,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1519817249
    },
    {
        "content": "<p>But I'm also pretty sceptical that the March 11 dash you have in mind is going to have much effect. It's too likely that the code will fall apart quickly afterwards, or otherwise be unusable because it was written hurriedly.</p>",
        "id": 123086093,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1519817335
    },
    {
        "content": "<p>I would like it to have an effect --- what we should dream about is a \"mathoverflow effect\", whereby one day a new thing appeared in the world that everyone realised they'd always wanted. I think there are potentially a huge number of students out there who would be interested in contributing to Lean libraries. However in combination with any \"publicity\", we would also need to have better strategy in place for teaching them how to work in Lean, and to productively organise their work. The current Lean community is realistically not yet ready for either of those.</p>",
        "id": 123086228,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1519817546
    },
    {
        "content": "<p>It's great that documentation is coming along. TPIL is a great resource, and it's fantastic to see the mathlib documentation growing.</p>",
        "id": 123086239,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1519817594
    },
    {
        "content": "<p>Unfortunately writing good Lean code is really hard (I still write lots of crappy code, after 18 months of learning Lean), and so any influx of new people could potentially just overwhelm those people in the community who can actually review PRs.</p>",
        "id": 123086293,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1519817692
    },
    {
        "content": "<p>Finally, to try to answer your question, <span class=\"user-mention\" data-user-email=\"k.buzzard@imperial.ac.uk\" data-user-id=\"110038\">@Kevin Buzzard</span>, I am trying to get the category theory library ready to PR into mathlib. But collaborators and postdocs and students are starting (ha!) to notice that I'm not getting much maths done...</p>",
        "id": 123086306,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1519817757
    },
    {
        "content": "<p>Hearing you wanting it of course motivates me, for better or worse. I think building good foundations (e.g. using category theory to avoid proving everything 5 times over when setting up algebraic geometry) will be really helpful.</p>\n<p>Also, I'm still a little proud of how few proofs I have in my library (i.e. how many are proved by <code>obviously</code> with little or no human intervention). :-)</p>",
        "id": 123086418,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1519817882
    },
    {
        "content": "<p>Oh -- and in some interesting news -- two mathematicians here at ANU, after coming to my undergraduate students' talks (on implementing Euclidean domains, and the first iso theorem for groups), said they were going home to install Lean over the weekend. There's hope. :-)</p>",
        "id": 123086446,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1519817976
    },
    {
        "content": "<blockquote>\n<p>I would like it to have an effect --- what we should dream about is a \"mathoverflow effect\", whereby one day a new thing appeared in the world that everyone realised they'd always wanted. I think there are potentially a huge number of students out there who would be interested in contributing to Lean libraries. However in combination with any \"publicity\", we would also need to have better strategy in place for teaching them how to work in Lean, and to productively organise their work. The current Lean community is realistically not yet ready for either of those.</p>\n</blockquote>\n<p>I am going to dedicate a lot of time over the summer to writing documentation for undergraduate mathematicians introducing them to how to use Lean via my introduction to proof course.</p>",
        "id": 123087019,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519818966
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>Proving an _old_ theorem formally -- you formalised a theorem that we all understand the statement of and which was proved before we were all born</p>\n</blockquote>\n<p>Come on <span class=\"user-mention\" data-user-email=\"assia.mahboubi@inria.fr\" data-user-id=\"110172\">@Assia Mahboubi</span> fight back!</p>\n</blockquote>\n<p>Ha ha! I was of course taking a very extreme viewpoint which I do not 100% believe in myself. I just wanted to highlight some of the obvious differences between defining a perfectoid space and proving the odd order theorem, even though \"they're both computer programs\".</p>",
        "id": 123087082,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519819111
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-email=\"patrickmassot@free.fr\" data-user-id=\"110031\">@Patrick Massot</span> ! Thanks for having pointed me to this new forum and thread!</p>",
        "id": 123089878,
        "sender_full_name": "Assia Mahboubi",
        "timestamp": 1519824891
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-email=\"k.buzzard@imperial.ac.uk\" data-user-id=\"110038\">@Kevin Buzzard</span> ! Thanks for this thread, it's extremely interesting. And no worries about the assessment of the odd order theorem: in fact, <br>\nI agree with many of the points you make.</p>",
        "id": 123089937,
        "sender_full_name": "Assia Mahboubi",
        "timestamp": 1519825023
    },
    {
        "content": "<p>Fortunately, I was told what a perfectoid space is 2 weeks ago, otherwise I wouldn't have dared joining the discussion :-).</p>",
        "id": 123089994,
        "sender_full_name": "Assia Mahboubi",
        "timestamp": 1519825173
    },
    {
        "content": "<p>I agree that the fact that it was possible to write down a formal proof of the odd order theorem only demonstrates that proof assistants can be used to represent good old undergraduate level algebra. Not that proof assistants are useful tools for research in mathematics.</p>",
        "id": 123090303,
        "sender_full_name": "Assia Mahboubi",
        "timestamp": 1519825715
    },
    {
        "content": "<p>Even if in fact parts of the proofs involve slightly more advanced representation/character theory, etc.</p>",
        "id": 123090373,
        "sender_full_name": "Assia Mahboubi",
        "timestamp": 1519825879
    },
    {
        "content": "<blockquote>\n<p>Fortunately, I was told what a perfectoid space is 2 weeks ago, otherwise I wouldn't have dared joining the discussion :-).</p>\n</blockquote>\n<p>Hi Assia! That's the point: Kevin wants to formalize stuff that mathematicians think are cool and intimidating</p>",
        "id": 123090534,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519826215
    },
    {
        "content": "<p>My hope is that one day proof assistants will be useful to discover new stuff, because the computer can in principle help you play with  the definitions, discover abstractions and test them. So yes, I agree, it would be really cool to have the definition of a perfectoid formalized, because then one could play with it interactively instead of staring at a paper definition like a fish out of water.</p>",
        "id": 123090587,
        "sender_full_name": "Assia Mahboubi",
        "timestamp": 1519826299
    },
    {
        "content": "<p>But then I am not sure that the main problem is to come up with a definition which is not usable. I would say that the problem would be to formalize what  a cat  is and then to call it a perfectoid. Specially if not many people both know what a perfectoid is and how to speak/read Lean.<br>\nLean checks proofs but only human readers check the definitions.  So a collection of theorems, and of convincing examples, helps this assessment.</p>",
        "id": 123090694,
        "sender_full_name": "Assia Mahboubi",
        "timestamp": 1519826511
    },
    {
        "content": "<p>As a regular reviewer of papers about formalized mathematics, I  often read papers which claim to formalize the theory of mystuffoids, it is very interesting and the authors prove a litany of lemmas, culminating with the Fundamental Theorem of Mystuffoids. But the authors never provide a (formalized) instance of mystuffoid. So as a reviewer, I try to verify that all the elementary examples of mystuffoids I know of can indeed by equipped with the structure provided by the authors. And that a few things that are not stuffoids for a good reason will not be instances. I had myself issues with my own tentative formal definitions at several occasions, and rejected several papers because this protocole made explicit flaws in the definitions.</p>",
        "id": 123090992,
        "sender_full_name": "Assia Mahboubi",
        "timestamp": 1519827067
    },
    {
        "content": "<p>I'm afraid there is no \"elementary example\" of a perfectoid space <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span>  And my daughter woke up, I need to rush to ski</p>",
        "id": 123091502,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519828121
    },
    {
        "content": "<p>Enjoy!</p>",
        "id": 123091630,
        "sender_full_name": "Assia Mahboubi",
        "timestamp": 1519828397
    },
    {
        "content": "<blockquote>\n<p>But I'm also pretty sceptical that the March 11 dash you have in mind is going to have much effect. It's too likely that the code will fall apart quickly afterwards, or otherwise be unusable because it was written hurriedly.</p>\n</blockquote>\n<p>Listen. I am in this unique position in that I get to give a lot of talks about a lot of random things to lots of people most of whom are under the age of 20 and some of whom are extremely smart. I am personally, after many conversations (and I'm sure Patrick feels the same way) no longer really interested in telling research mathematicians about formal theorem provers, because generally they are not interested. But on the other hand undergraduates are interested, and if you train them right they can really do stuff. Chris Hughes is answering other people's questions on this chat now and we all know what Kenny has done. There are other people \"bubbling under\" in my Thursday evening meetings and I'll train them up too. Remember that when those undergraduates started coming to my club I could not even use the software. I could not prove 2+2=4 in the reals, and nobody could prove anything about the complexes because there were no complexes. And yet a few people stuck around and are doing interesting things. Next year I am going to be a lot better and let's see what happens. But back to this conference. I think that if you're a smart 20 year old and you come to my talk on the 11th at some undergrad pure maths conference to learn about perfectoid spaces and then you hear me say that I've defined them in Lean and if you want to learn about Lean then you might want to try proving lemma 1 about them, then there is a chance that you will get curious and try. I do think there's a chance. And if you fail, which of course you might well, then you might instead want to try some of the easier lessons on my blog. And then you might get addicted, like I did and like Chris did. So I am going to continue going round the South East of the UK telling undergrads and schoolkids about Lean because there are random smart people out there who are bored at uni and who might actually want to goof around with trendy objects in a theorem prover. Maybe. I am genuinely trying to piggy back on the trendiness of the topic. I've written a paper about perfectoid spaces so I do have an excuse to talk about them, why shouldn't I tag Lean on and see what happens? I want to push undergraduates -- who don't know any better -- to start investigating theorem provers, because I think they're the future of pure mathematics and I think that thus far the CS community has singularly failed to demonstrate this to the maths community. I am trying a new idea from a new perspective, purely for fun. I want to introduce them from the bottom up and I am prepared to try lots of angles, and for me perfectoid spaces is definitely an angle worth trying. I want to try 10 different things and this is one.</p>",
        "id": 123106554,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519850228
    },
    {
        "content": "<blockquote>\n<p>As a regular reviewer of papers about formalized mathematics, I  often read papers which claim to formalize the theory of mystuffoids, it is very interesting and the authors prove a litany of lemmas, culminating with the Fundamental Theorem of Mystuffoids. But the authors never provide a (formalized) instance of mystuffoid. So as a reviewer, I try to verify that all the elementary examples of mystuffoids I know of can indeed by equipped with the structure provided by the authors. And that a few things that are not stuffoids for a good reason will not be instances. I had myself issues with my own tentative formal definitions at several occasions, and rejected several papers because this protocole made explicit flaws in the definitions.</p>\n</blockquote>\n<p>Oh this is a _great_ comment! Because basically it is pointing out that until I prove some lemmas, people can just say \"how do you know you have the right definition?\". I am not sure that undergraduates have the guts to say that ;-) but still this comment sticks in my head. So in fact I have to prove some lemmas just to check.</p>",
        "id": 123106807,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519850639
    },
    {
        "content": "<blockquote>\n<p>I'm afraid there is no \"elementary example\" of a perfectoid space <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span>  And my daughter woke up, I need to rush to ski</p>\n</blockquote>\n<p>I think the empty space is perfectoid. I'm not sure that it highlights the key features though.</p>",
        "id": 123106858,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519850700
    },
    {
        "content": "<blockquote>\n<p>Oh this is a _great_ comment! Because basically it is pointing out that until I prove some lemmas, people can just say \"how do you know you have the right definition?\". I am not sure that undergraduates have the guts to say that ;-) but still this comment sticks in my head. So in fact I have to prove some lemmas just to check.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-email=\"k.buzzard@imperial.ac.uk\" data-user-id=\"110038\">@Kevin Buzzard</span>: I interpreted the comment not as saying “prove some lemmas,” but as saying “give examples.” In other words, don't just give a definition and lemmas, but show that there are things that instantiate your definition. Otherwise, your lemmas might be wonderful but never be of any actual use.</p>",
        "id": 123125391,
        "sender_full_name": "Sean Leather",
        "timestamp": 1519885708
    },
    {
        "content": "<p>In fact for the definition I'm going to give, it will be really hard to give any examples, because we're going to cut corners and possibly come back later.</p>",
        "id": 123126888,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519889285
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-email=\"k.buzzard@imperial.ac.uk\" data-user-id=\"110038\">@Kevin Buzzard</span>: I interpreted the comment not as saying “prove some lemmas,” but as saying “give examples.” In other words, don't just give a definition and lemmas, but show that there are things that instantiate your definition. Otherwise, your lemmas might be wonderful but never be of any actual use.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-email=\"sean.leather@gmail.com\" data-user-id=\"110045\">@Sean Leather</span> I hope you realize you are being really rude here. We are talking about Algebraic Geometry and Langlands Program here, giving an example would be a disgrace.  If needed, google \"Grothendieck prime number 57\".</p>",
        "id": 123129163,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1519894004
    },
    {
        "content": "<blockquote>\n<p>I hope you realize you are being really rude here. We are talking about Algebraic Geometry and Langlands Program here, giving an example would be a disgrace.  If needed, google \"Grothendieck prime number 57\".</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-email=\"patrickmassot@free.fr\" data-user-id=\"110031\">@Patrick Massot</span>: You're right. I'm so accustomed to using the programs I write that I forget about mathematicians not needing to use the theorems they prove. <span class=\"emoji emoji-1f605\" title=\"sweat smile\">:sweat_smile:</span> I'm completely out of my depth here, and I apologize for any unintended insolence. <span class=\"emoji emoji-1f607\" title=\"innocent\">:innocent:</span></p>",
        "id": 123129419,
        "sender_full_name": "Sean Leather",
        "timestamp": 1519894599
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"sean.leather@gmail.com\" data-user-id=\"110045\">@Sean Leather</span>  I thought about your comment a bit more and it's more complicated than I first imagined. Somehow examples and lemmas all get mixed together in this game, and definitions too. It's a bit strange. I said to Mario earlier \"for you there is no difference between a perfectoid space and a group, they're both just structures\" but somehow this isn't right. A group really is just a structure defined by some axioms. For these more complex objects there are theorems that you need to prove before things even make sense. For example you sometimes want to say \"and my structure has an X, and if we choose a generator f of X then f also has property Y\" or maybe even \"and for all generators f of X, f also has property Y\" but then if you actually want to get anywhere you need some lemma to say that all X's have generators, or maybe even that one generator of X has property Y iff they all do. Either you prove these lemmas or you don't. If you don't (and there are going to be a couple of times with schemes where I propose not proving the lemmas just yet) then it really would be impossible to give any examples at all because the lemmas are somehow part of the infrastructure. So perhaps I interpreted <span class=\"user-mention\" data-user-email=\"assia.mahboubi@inria.fr\" data-user-id=\"110172\">@Assia Mahboubi</span> 's comments in a similar way to you but then went on and thought more about the consequences of constructing an example in the situation I had in mind, and realised that I was some genuine lemmas in algebraic geometry away from being able to give any example at all.</p>",
        "id": 123130673,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1519897039
    },
    {
        "content": "<p>Makes sense. I was thinking in the first order, whereas you were at a higher order. Good thing you're the mathematician. <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>",
        "id": 123130781,
        "sender_full_name": "Sean Leather",
        "timestamp": 1519897216
    },
    {
        "content": "<p>Kenny and I just finished the definition of a scheme.</p>",
        "id": 123414422,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1520455646
    },
    {
        "content": "<p><a href=\"https://github.com/kbuzzard/lean-stacks-project/blob/ed8a255cef466794d4d836ffa6ffc1093532fa4b/src/scheme.lean#L430\" target=\"_blank\" title=\"https://github.com/kbuzzard/lean-stacks-project/blob/ed8a255cef466794d4d836ffa6ffc1093532fa4b/src/scheme.lean#L430\">https://github.com/kbuzzard/lean-stacks-project/blob/ed8a255cef466794d4d836ffa6ffc1093532fa4b/src/scheme.lean#L430</a></p>",
        "id": 123414480,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1520455742
    },
    {
        "content": "<p>It passes no basic tests whatsoever, other than \"compiles\" and \"is mathematically correct\".</p>",
        "id": 123414490,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1520455771
    },
    {
        "content": "<p>In particular, for any commutative ring R we can build an affine scheme Spec(R), but we have not yet proved that this object is a scheme.</p>",
        "id": 123414608,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1520455924
    },
    {
        "content": "<p>We are a couple of theorems away from this.</p>",
        "id": 123414620,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1520455966
    },
    {
        "content": "<p>[the issue is that a scheme is a space with a sheaf, locally isomorphic to an affine scheme, but this isomorphism is an isomorphism of spaces with presheaves of rings (a morphism of sheaves is by definition a morphism of the underlying presheaves) so we do not logically need to check that the presheaf of rings that we have defined on Spec(R) is a sheaf]</p>",
        "id": 123414772,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1520456205
    },
    {
        "content": "<p>Now for perfectoid spaces ;-)</p>",
        "id": 123415572,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1520457333
    }
]