[
    {
        "content": "<p>How does <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∓</mo></mrow><annotation encoding=\"application/x-tex\">\\mp</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">∓</span></span></span></span> work in lean? I have the following code:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">basic</span> <span class=\"n\">init</span><span class=\"bp\">.</span><span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">complex</span><span class=\"bp\">.</span><span class=\"n\">exponential</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">special_functions</span><span class=\"bp\">.</span><span class=\"n\">trigonometric</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">real</span>\n\n<span class=\"kn\">notation</span> <span class=\"bp\">`|`</span><span class=\"n\">x</span><span class=\"bp\">`|`</span> <span class=\"o\">:=</span> <span class=\"n\">abs</span> <span class=\"n\">x</span>\n\n<span class=\"n\">def</span> <span class=\"n\">radius</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span> <span class=\"bp\">|</span><span class=\"n\">sin</span> <span class=\"n\">x</span><span class=\"bp\">|</span> <span class=\"bp\">^</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">cos</span> <span class=\"n\">x</span><span class=\"bp\">|</span> <span class=\"bp\">^</span> <span class=\"n\">m</span> <span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"n\">m</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">sinm</span> <span class=\"o\">(</span><span class=\"n\">θ</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">sin</span> <span class=\"n\">θ</span> <span class=\"bp\">*</span> <span class=\"n\">radius</span> <span class=\"n\">θ</span> <span class=\"n\">m</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">sinm_self_sim</span> <span class=\"o\">(</span> <span class=\"n\">x</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">sinm</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"err\">∓</span> <span class=\"n\">pi</span><span class=\"o\">)</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span> <span class=\"n\">sinm</span> <span class=\"n\">x</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>and the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∓</mo></mrow><annotation encoding=\"application/x-tex\">\\mp</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">∓</span></span></span></span> produces this error: <code>unexpected token</code>. Why does it do this?</p>",
        "id": 203811387,
        "sender_full_name": "James Arthur",
        "timestamp": 1594716706
    },
    {
        "content": "<p>it doesn't exist</p>",
        "id": 203811458,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1594716738
    },
    {
        "content": "<p>what would it mean?</p>",
        "id": 203811485,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1594716768
    },
    {
        "content": "<p>Note that just because vscode has a unicode abbreviation for a symbol doesn't mean it has a meaning in lean. Many of them exist simply to be available to be overwritten for user notations, and there are plenty more besides that I can't even imagine a use for</p>",
        "id": 203811656,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1594716910
    },
    {
        "content": "<p>Maybe the above is a bad example of its use, but the next identity I want to prove is this <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>o</mi><msub><mi>s</mi><mi>m</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo>∓</mo><mi>π</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>±</mo><mi>c</mi><mi>o</mi><msub><mi>s</mi><mi>m</mi></msub><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">cos_m (x \\mp \\pi ) = \\pm cos_m x</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">o</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∓</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73333em;vertical-align:-0.15em;\"></span><span class=\"mord\">±</span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">o</span><span class=\"mord\"><span class=\"mord mathdefault\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathdefault\">x</span></span></span></span>. It would be the inverse of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>±</mo></mrow><annotation encoding=\"application/x-tex\">\\pm</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">±</span></span></span></span>, so in very bad notation <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>±</mo><mi>x</mi><mo>=</mo><mo>−</mo><mo stretchy=\"false\">(</mo><mo>∓</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\pm x = - (\\mp x)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">±</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mopen\">(</span><span class=\"mord\">∓</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 203811663,
        "sender_full_name": "James Arthur",
        "timestamp": 1594716923
    },
    {
        "content": "<p>The way to state this theorem would just be to prove two separate theorems <br>\n<code>sinm (x + pi) m = - sinm x m</code> and <code>sinm (x - pi) m = sinm x m</code>. It would be hard to get this notation working in Lean</p>",
        "id": 203811668,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1594716938
    },
    {
        "content": "<p>and what should <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>±</mo></mrow><annotation encoding=\"application/x-tex\">\\pm</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">±</span></span></span></span> mean?</p>",
        "id": 203811717,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594716965
    },
    {
        "content": "<p>You could do something with a multivalued monad but it probably won't reflect the consistent choices convention anyway (which is itself inconsistently applied in maths)</p>",
        "id": 203811729,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1594716984
    },
    {
        "content": "<p>oh right, monads</p>",
        "id": 203811733,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594716996
    },
    {
        "content": "<p>Thankyou. I shall just prove two theorems</p>",
        "id": 203811783,
        "sender_full_name": "James Arthur",
        "timestamp": 1594717052
    },
    {
        "content": "<p>Sometimes it can be convenient to prove the theorem using an element of <code>units ℤ</code>. With <code>ε : units ℤ</code>, you could say<br>\n<code>sinm (x + ε * pi) m = - ε * sinm x m</code>. I have used this in the past to write a prof, but it probably doesn't make this example any easier, and you usually will want both statements, even if the <code>ε</code> trick makes the proof easier.</p>",
        "id": 203822734,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1594726507
    }
]