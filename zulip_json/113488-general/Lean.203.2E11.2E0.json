[
    {
        "content": "<p>I am proud to announce the release of the latest and greatest version of the Lean community fork, Lean 3.11.0!  Thanks to <span class=\"user-mention\" data-user-id=\"256311\">@Jannis Limperg</span>, <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span>, <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>, and <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> for their contributions!  Here is the excerpt from the changelog:</p>\n<p>Feature:</p>\n<p>- Do not unfold irreducible definitions in unification (<a href=\"https://github.com/leanprover-community/lean/issues/211\" title=\"https://github.com/leanprover-community/lean/issues/211\">lean#211</a>)<br>\n  - Instantiate metavariables in <code>rw</code> (<a href=\"https://github.com/leanprover-community/lean/issues/213\" title=\"https://github.com/leanprover-community/lean/issues/213\">lean#213</a>)</p>\n<p>Bug fixes:</p>\n<p>- Fix docstring of tactic.interactive.rename (<a href=\"https://github.com/leanprover-community/lean/issues/210\" title=\"https://github.com/leanprover-community/lean/issues/210\">lean#210</a>)</p>\n<p>This is the first release with the new CI using github actions and bors.  There are probably issues with the binaries.  Please test the release and report any issues!</p>",
        "id": 196926937,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588959656
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> Are you starting a PR to bump mathlib?</p>",
        "id": 196927027,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588959718
    },
    {
        "content": "<p>I hope that the <code>lean_211_pr</code> branch can be merged cleanly</p>",
        "id": 196927121,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588959742
    },
    {
        "content": "<p>I'll leave the updating PR to somebody else.</p>",
        "id": 196927124,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588959743
    },
    {
        "content": "<p>If no one else gets to it before me I'll open one tonight based on <code>lean_211_pr</code>.</p>",
        "id": 196929091,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588960684
    },
    {
        "content": "<p>I've battled through my teaching duties¹, so now I can work on this PR (-;</p>\n<p>——</p>\n<p>¹ And created a python script that will generate LaTeX code for Gaussian elimination exercises with all the intermediate steps for the solution. (Speaking of structured procrastination²…)</p>\n<p>² <a href=\"http://www.structuredprocrastination.com/\" title=\"http://www.structuredprocrastination.com/\">http://www.structuredprocrastination.com/</a></p>",
        "id": 196931483,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588961827
    },
    {
        "content": "<p>I've started the <code>lean-3-11-0</code> branch on top of <code>lean_211_pr</code></p>",
        "id": 196932574,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588962438
    },
    {
        "content": "<p>I think <code>lean-3*</code> matches some branch protection rules, so we've been using <code>lean_3</code> for the PR branches.</p>",
        "id": 196932762,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588962524
    },
    {
        "content": "<p>This probably won't be a problem until we try to delete the branch after it merges.</p>",
        "id": 196932817,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588962555
    },
    {
        "content": "<p>Oh, it also looks like only admins can push to that branch, though this might also not be a problem.</p>",
        "id": 196932965,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588962615
    },
    {
        "content": "<p>Ooops... I wasn't aware of that</p>",
        "id": 196933002,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588962632
    },
    {
        "content": "<p>Shall I change the branch name?</p>",
        "id": 196933022,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588962643
    },
    {
        "content": "<p>Hmm, I don't think it's necessary. I think we can change the branch protection to be more specific (e.g. to only match stuff starting with <code>lean-3.</code>). <strong>edit</strong>: done. This also makes it match up better with <a href=\"https://github.com/leanprover-community/mathlib/blob/master/.github/workflows/build.yml#L12\" title=\"https://github.com/leanprover-community/mathlib/blob/master/.github/workflows/build.yml#L12\">our github actions workflow</a>.</p>",
        "id": 196933232,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588962762
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> Future me will forget this again and use <code>lean-3.12.0</code> for the next bump PR <span aria-label=\"oops\" class=\"emoji emoji-1f643\" role=\"img\" title=\"oops\">:oops:</span></p>",
        "id": 196933707,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588963025
    },
    {
        "content": "<p>I'm at 15% of the build. No errors so far. <span aria-label=\"fencing\" class=\"emoji emoji-1f93a\" role=\"img\" title=\"fencing\">:fencing:</span></p>",
        "id": 196933725,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588963039
    },
    {
        "content": "<p>Do we actually expect any errors?<br>\nInstantiating metavariables in <code>rw</code> shouldn't cause new errors, I hope.</p>",
        "id": 196933919,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588963146
    },
    {
        "content": "<p>And fixing a docstring.... (-;</p>",
        "id": 196933944,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588963159
    },
    {
        "content": "<p>Let's see if my build finishes before CI</p>",
        "id": 196933958,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588963171
    },
    {
        "content": "<p>~ 50% and still no errors</p>",
        "id": 196935991,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588964171
    },
    {
        "content": "<p>A <code>rw</code> error <span aria-label=\"boom\" class=\"emoji emoji-1f4a5\" role=\"img\" title=\"boom\">:boom:</span></p>",
        "id": 196937590,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588964906
    },
    {
        "content": "<p>Somewhere deep in <code>data/polynomial</code></p>",
        "id": 196937617,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588964935
    },
    {
        "content": "<p>The <code>rw</code> in question hasn't been touched in 2 years <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 196937809,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588965049
    },
    {
        "content": "<p><span aria-label=\"fencing\" class=\"emoji emoji-1f93a\" role=\"img\" title=\"fencing\">:fencing:</span>  is done <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <br>\n<a href=\"https://github.com/leanprover-community/mathlib/issues/2632\" title=\"https://github.com/leanprover-community/mathlib/issues/2632\">#2632</a></p>",
        "id": 196944128,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588968259
    },
    {
        "content": "<p>Thanks Johan!</p>",
        "id": 196944234,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588968327
    },
    {
        "content": "<p>I'm curious about <a href=\"https://github.com/leanprover-community/mathlib/pull/2632/commits/52b910ef0392a7675899a236e75697f7ed0cc634\" title=\"https://github.com/leanprover-community/mathlib/pull/2632/commits/52b910ef0392a7675899a236e75697f7ed0cc634\">https://github.com/leanprover-community/mathlib/pull/2632/commits/52b910ef0392a7675899a236e75697f7ed0cc634</a>. What was the issue here?</p>",
        "id": 196944247,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588968337
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/2632/commits/40f0f53b66f6d57989580d49f80f5e27725bf0ee\" title=\"https://github.com/leanprover-community/mathlib/pull/2632/commits/40f0f53b66f6d57989580d49f80f5e27725bf0ee\">https://github.com/leanprover-community/mathlib/pull/2632/commits/40f0f53b66f6d57989580d49f80f5e27725bf0ee</a> <span aria-label=\"head bandage\" class=\"emoji emoji-1f915\" role=\"img\" title=\"head bandage\">:head_bandage:</span> what happened here?</p>",
        "id": 196944336,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588968381
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E11.2E0/near/196944247\" title=\"#narrow/stream/113488-general/topic/Lean.203.2E11.2E0/near/196944247\">said</a>:</p>\n<blockquote>\n<p>I'm curious about <a href=\"https://github.com/leanprover-community/mathlib/pull/2632/commits/52b910ef0392a7675899a236e75697f7ed0cc634\" title=\"https://github.com/leanprover-community/mathlib/pull/2632/commits/52b910ef0392a7675899a236e75697f7ed0cc634\">https://github.com/leanprover-community/mathlib/pull/2632/commits/52b910ef0392a7675899a236e75697f7ed0cc634</a>. What was the issue here?</p>\n</blockquote>\n<p>With the hyperreals... I don't really know. The little black triangle sometimes still fails for reasons that I find mysterious.</p>",
        "id": 196945005,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588968754
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Lean.203.2E11.2E0/near/196944336\" title=\"#narrow/stream/113488-general/topic/Lean.203.2E11.2E0/near/196944336\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/pull/2632/commits/40f0f53b66f6d57989580d49f80f5e27725bf0ee\" title=\"https://github.com/leanprover-community/mathlib/pull/2632/commits/40f0f53b66f6d57989580d49f80f5e27725bf0ee\">https://github.com/leanprover-community/mathlib/pull/2632/commits/40f0f53b66f6d57989580d49f80f5e27725bf0ee</a> <span aria-label=\"head bandage\" class=\"emoji emoji-1f915\" role=\"img\" title=\"head bandage\">:head_bandage:</span> what happened here?</p>\n</blockquote>\n<p>This is indeed a bit sad. I don't completely understand what happens there. Maybe <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> can explain.</p>",
        "id": 196945065,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588968795
    },
    {
        "content": "<p>Yes I guess anything involving the cursed triangle hardly counts as a new mystery.</p>",
        "id": 196945108,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588968832
    },
    {
        "content": "<p>The hyperreals: I think <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> conjectured that the proofs relied on the definitional reduction of real numbers, in particular that <code>(0 + 0 : ℝ) = 0</code> is true <em>definitionally</em>.</p>",
        "id": 196945368,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588968981
    },
    {
        "content": "<p>The manifolds: I have changed the proofs almost back, you just need to provide some arguments explicitly.  I've got no good explanation here.</p>",
        "id": 196945531,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1588969088
    },
    {
        "content": "<p>Oh nice, I didn't see this.</p>",
        "id": 196945644,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588969155
    },
    {
        "content": "<p>Little variation on elaboration results are probably not surprising.</p>",
        "id": 196945804,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1588969224
    },
    {
        "content": "<p>What should go into the commit message? I fixed a bunch of errors, but I'm bad at explaining why things were broken in the first place.</p>",
        "id": 196970970,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588994706
    },
    {
        "content": "<p>I'm hoping <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> can give some suggestions...</p>",
        "id": 196971303,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1588995341
    },
    {
        "content": "<p>And... mathlib is now using lean 3.11.0 <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 197031423,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1589083726
    }
]