[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">eq_default</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">inhabited</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">subsingleton</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">default</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"n\">subsingleton</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span>\n</pre></div>",
        "id": 160972030,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552777595
    },
    {
        "content": "<p>Should this be a simp lemma?</p>",
        "id": 160972033,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552777600
    },
    {
        "content": "<p>Or maybe should we say that all punits are punit.star instead?</p>",
        "id": 160972034,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552777611
    },
    {
        "content": "<p>I seem to remember trying a simp lemaa like this ages ago and it never triggering.</p>",
        "id": 160980026,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1552792185
    },
    {
        "content": "<p>this won't trigger because the LHS is arbitrary</p>",
        "id": 160980076,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1552792246
    },
    {
        "content": "<p>If you are <code>inhabited</code> and <code>subsingleton</code> than you are <code>unique</code>. I wrote a tiny api for <code>unique</code> some time ago. Does that help, or is it maybe not constructive enough for your purposes?</p>",
        "id": 160985496,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1552802166
    },
    {
        "content": "<blockquote>\n<p>this won't trigger because the LHS is arbitrary</p>\n</blockquote>\n<p>why does that mean it wouldn't trigger?</p>",
        "id": 160991494,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552814838
    },
    {
        "content": "<p>is it because it's a loop?</p>",
        "id": 160991496,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1552814845
    },
    {
        "content": "<p>It doesn’t trigger because its RHS is only a variable, therefore no head symbol to match on</p>",
        "id": 161025432,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1552874949
    }
]