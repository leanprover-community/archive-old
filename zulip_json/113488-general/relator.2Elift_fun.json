[
    {
        "content": "<p>What's the logic behind calling this <code>relator.lift_fun</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">lift_fun</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">γ</span> <span class=\"bp\">→</span> <span class=\"n\">δ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">δ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∀</span> <span class=\"o\">⦃</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">⦄,</span> <span class=\"n\">R</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Is it because it lifts two relations <code>α → β → Prop</code>, <code>γ → δ → Prop</code> to a relation <code>(α → γ) → (β → δ) → Prop</code>? Also, what does this <code>relator</code> stand for? This has nothing to do with the group-theoric relator, right?</p>",
        "id": 249693997,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1629191340
    },
    {
        "content": "<p>Bump! Does anybody know?</p>",
        "id": 250098852,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1629453395
    },
    {
        "content": "<p>I think \"relator\" is just another word for \"relation\", \"lift\" is as usual meaningless, and \"fun\" refers to <code>f</code> and <code>g</code></p>",
        "id": 250106925,
        "sender_full_name": "Reid Barton",
        "timestamp": 1629459589
    },
    {
        "content": "<p>Wait no, \"fun\" is probably because it produces a relation between function types</p>",
        "id": 250107465,
        "sender_full_name": "Reid Barton",
        "timestamp": 1629459985
    },
    {
        "content": "<p>Aha, apparently \"relator\" means something like a functor that operates on relations rather than functions, see <a href=\"https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.26.4213&amp;rep=rep1&amp;type=pdf\">https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.26.4213&amp;rep=rep1&amp;type=pdf</a></p>",
        "id": 250109747,
        "sender_full_name": "Reid Barton",
        "timestamp": 1629461662
    },
    {
        "content": "<p>Ahah! I couldn't find anything about it.</p>",
        "id": 250156066,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1629484492
    },
    {
        "content": "<p>Interesting, <code>lift_fun R S f g</code> indicates that <code>(f, g)</code> is a morphism between <code>R</code> and <code>S</code> in the \"subscone of Set x Set.\"  It seems that this subscone can be used to define a double category on Set?  Objects are sets, vertical morphisms are functions, horizontal morphisms are relations, and 2-morphisms correspond to quadruples satisfying <code>lift_fun</code>.</p>\n<p>Maybe another description is that if you take the functor F : Set -&gt; Rel that sends functions to their graph, then <code>lift_fun</code> describes the morphisms in the comma category (F/F).  (It's interesting how <code>lift_fun R S</code> is a relation in its own right, so it is itself an object in this category.)</p>",
        "id": 250162005,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1629487555
    }
]