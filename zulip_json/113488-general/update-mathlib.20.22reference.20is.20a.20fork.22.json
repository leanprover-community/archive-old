[
    {
        "content": "<p>A student (<span class=\"user-mention\" data-user-id=\"232317\">@Ainsley Pahljina</span>) cloned mathlib from git@github.com:leanprover-community/mathlib.git, installed <code>update-mathlib</code> via <code>curl https://raw.githubusercontent.com/leanprover-community/mathlib-tools/master/scripts/remote-install-update-mathlib.sh -sSf | bash</code>, restarted to get paths right, then ran <code>update-mathlib</code> and received an error message saying \"reference is a fork\".</p>\n<p>What's going on? (Can we have a more helpful error message, that explains the fix?)</p>",
        "id": 172172108,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1564611966
    },
    {
        "content": "<p>From looking at the <a href=\"https://github.com/leanprover-community/mathlib-tools/blob/master/scripts/update-mathlib.py#L39-L54\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib-tools/blob/master/scripts/update-mathlib.py#L39-L54\">source code</a> it seems that this means that the dependency specified in <code>leanpkg.toml</code> is a fork of mathlib</p>",
        "id": 172172342,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1564612217
    },
    {
        "content": "<p>I'm not sure why that wouldn't be allowed, since forks share the same revision sha's, right? So as long as the revision has a corresponding compiled version to download, that seems fine.</p>",
        "id": 172172499,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1564612345
    },
    {
        "content": "<p>As far as I can tell Ainsley didn't add a fork, in any case. <span class=\"user-mention\" data-user-id=\"232317\">@Ainsley Pahljina</span>, would you mind posting the contents of your <code>leanpkg.toml</code> file here for us? (If you surround blocks of code with triple backticks it typesets nicely.)</p>",
        "id": 172172553,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1564612413
    },
    {
        "content": "<p>Was the error message indeed <code>Error: mathlib reference is a fork</code>?</p>",
        "id": 172172667,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1564612501
    },
    {
        "content": "<p>I'm pretty sure it was, but I didn't write it down exactly when looking at her computer. She hadn't added any other dependencies, certainly, besides mathlib.</p>",
        "id": 172173016,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1564612809
    },
    {
        "content": "<p>Update-mathlib doesn't work on mathlib as far as I know</p>",
        "id": 172196131,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1564642036
    },
    {
        "content": "<p>It only works on projects that have mathlib as a dependency</p>",
        "id": 172196142,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1564642063
    },
    {
        "content": "<p>Right, you need <code>cache-olean --fetch</code> for updating mathlib itself (when it is not a dependency).</p>",
        "id": 172196144,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1564642070
    },
    {
        "content": "<p>That's the situation we're in --- Ainsley made a new package, and added mathlib as a dependency, but <code>update-mathlib</code> isn't working.</p>",
        "id": 172201950,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1564648333
    },
    {
        "content": "<p>So by \"cloned mathlib\" in the first post, you just mean \"added mathlib as a dependency to an existing project and typed <code>leanpkg configure</code>\"?</p>",
        "id": 172202113,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1564648500
    },
    {
        "content": "<p>What does their <code>leanpkg.toml</code> look like?</p>",
        "id": 172202134,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1564648539
    },
    {
        "content": "<p>Did you follow instructions <a href=\"https://github.com/leanprover-community/mathlib/blob/master/docs/install/project.md\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/docs/install/project.md\">https://github.com/leanprover-community/mathlib/blob/master/docs/install/project.md</a> or did you actually type \"git\" ?</p>",
        "id": 172202541,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1564648977
    },
    {
        "content": "<p>I think we followed those instructions. No use of git involved (except to commit the main package directory to a private gitlab repository).</p>",
        "id": 172205128,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1564651567
    },
    {
        "content": "<p>Weird. I gues we can't do anything without seeing the <code>leanpkg.toml</code></p>",
        "id": 172205155,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1564651609
    },
    {
        "content": "<p>Dumb related question -- if I just pulled mathlib and I want to get all the olean files, what's the best way of doing it? Currently the only way I know is by going to a random project which has mathlib as a dependency and running <code>update-mathlib</code> and then moving all the olean files, being careful to not mess with the timestamps.</p>",
        "id": 172213711,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1564660526
    },
    {
        "content": "<p>A - presumably not so great - alternative is to download the sources including olean files from here: <a href=\"https://github.com/leanprover-community/mathlib-nightly/releases/\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib-nightly/releases/\">https://github.com/leanprover-community/mathlib-nightly/releases/</a></p>",
        "id": 172214294,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564661149
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> The command <code>cache-olean --fetch</code> is exactly for that (assuming you're fine with the branch <code>lean-3.4.2</code>). Or am I misunderstanding your question?</p>",
        "id": 172224005,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1564668684
    },
    {
        "content": "<p>That's surely exactly what I'm looking for. I usually don't edit mathlib so didn't know this trick (I never use cache-olean)</p>",
        "id": 172224249,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1564668849
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 172224255,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1564668853
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> The command <code>cache-olean --fetch</code> is exactly for that (assuming you're fine with the branch <code>lean-3.4.2</code>). Or am I misunderstanding your question?</p>\n</blockquote>\n<p>Doesn't work for me :-/</p>\n<div class=\"codehilite\"><pre><span></span>$ git pull\nAlready up-to-date.\n$ cache-olean --fetch\nNo github section found in &#39;git config&#39;\nQuerying GitHub...\nError: no nightly archive found\nno cache found\n</pre></div>",
        "id": 172329893,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1564769517
    },
    {
        "content": "<p><code>cache-olean --fetch</code> only works on the remote <code>lean-3.4.2</code> branch (or previous versions of that branch), so first do <code>git checkout origin/lean-3.4.2</code> (assuming <code>origin</code> is your name for the <code>leanprover-community</code> version).</p>",
        "id": 172334776,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1564773323
    },
    {
        "content": "<p>and as discussed in the other stream, you might have to do <code>find src/ -name '*.olean' -exec touch {} +</code> afterwards to update the timestamps of your olean files.</p>",
        "id": 172334878,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1564773388
    },
    {
        "content": "<p>you can <code>checkout</code> another commit afterwards (of course, you will have to recompile all the changed files and the files depending on those afterwards)</p>",
        "id": 172334946,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1564773460
    }
]