[
    {
        "content": "<p>Since I was encountering problems with my local copy of <code>lean-liquid</code>, I have thrown it away and I have downloaded (<code>leanproject get lean-liquid</code>) a fresh new copy. Still, in one file I get errors (I have checked both online and with other colleagues, it properly compiles elsewhere). I do not know what to try any more... any suggestion?</p>",
        "id": 278826498,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649855543
    },
    {
        "content": "<p>What errors? With no other information, my best guess is that you could have a corrupted olean cache in ~/.mathlib.</p>",
        "id": 278829179,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649856967
    },
    {
        "content": "<p><code>git pull</code> (on <code>master</code>) then <code>./scripts/get-cache.sh</code> and then <code>leanproject build</code> works for me -- no warnings or errors, and finishes quickly</p>",
        "id": 278833015,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649858719
    },
    {
        "content": "<p>Let me try</p>",
        "id": 278835311,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649859817
    },
    {
        "content": "<p>Is it normal that when I try to get the cache, it finds the local <code>olean</code>s for mathlib (and extracts the files), but says <code>Trying to dowload project cache</code> and returns <code>No olean cache available</code>?</p>",
        "id": 278835593,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649859934
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> Can you find your <code>~/./mathlib</code> folder? Just blow away whatever is in there and I'll bet everything will just work.</p>",
        "id": 278835782,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1649860011
    },
    {
        "content": "<p>No, unfortunately it does not; I have tried it several times already.</p>",
        "id": 278835829,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649860034
    },
    {
        "content": "<p>What happens if you type <code>git rev-parse HEAD</code> in your <code>lean-liquid</code> directory?</p>",
        "id": 278836122,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1649860176
    },
    {
        "content": "<p>5618fc7844c798f00a0d29c3a70433d3d2e40f03</p>",
        "id": 278836185,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649860203
    },
    {
        "content": "<p>(One behind HEAD). Weird, that looks fine. In that case I'm stumped.</p>",
        "id": 278836432,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1649860312
    },
    {
        "content": "<p>Although I do note it failed to build (though only because of linting). Maybe try <code>git checkout 9fc85b0e58a2c9aa4752bcb9e073794b76ade06b</code> and then try.</p>",
        "id": 278836637,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1649860387
    },
    {
        "content": "<p>What's the error message you're getting?</p>",
        "id": 278836668,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649860400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span>  Well, I have a lemma whose proof (which is a <code>rfl</code>) makes it unhappy, saying <code>type mismatch, term rfl has type...</code> as usual.</p>",
        "id": 278836819,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649860466
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"240862\">Oliver Nash</span> <a href=\"#narrow/stream/113488-general/topic/Newly.20downloaded.20repo.20has.20errors/near/278836637\">said</a>:</p>\n<blockquote>\n<p>Although I do note it failed to build (though only because of linting). Maybe try <code>git checkout 9fc85b0e58a2c9aa4752bcb9e073794b76ade06b</code> and then try.</p>\n</blockquote>\n<p>Trying it...</p>",
        "id": 278836948,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649860528
    },
    {
        "content": "<p>At any rate, is it normal that there are no project cache available? Or am I misunderstanding the error <code>No olean cache available</code>?</p>",
        "id": 278837685,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649860837
    },
    {
        "content": "<p>If you want to check your Mathlib cache, the MD5 for <code>ef51d2324e937c8883ac8d1781dfc9168668e451.tar.xz</code> is <code>3bd64d96788c5b3f3fcf5ee2b3a1272f</code>. But here <code>./scripts/get-cache.sh</code> finds cached oleans for both mathlib and the project.</p>",
        "id": 278837849,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649860921
    },
    {
        "content": "<p>What do you mean by \"here\"?</p>",
        "id": 278838145,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649861038
    },
    {
        "content": "<p>On your pc?</p>",
        "id": 278838200,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649861047
    },
    {
        "content": "<p>And the MD5 sum for the lean-liquid cache (<code>5618fc7844c798f00a0d29c3a70433d3d2e40f03.tar.xz</code>) is <code>f6ab7e1db3179ee0eac82524fd1aaa24</code>.</p>",
        "id": 278838233,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649861059
    },
    {
        "content": "<p>Yes, I mean on my PC.</p>",
        "id": 278838239,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649861064
    },
    {
        "content": "<p>Oh, interesting. This means that for some reason my git repo is not dowloading the cache for the project, only for mathlib.</p>",
        "id": 278838315,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649861101
    },
    {
        "content": "<p>I have just <em>unistalled and reinstalled</em> both <code>elan</code> and <code>mathtools</code>...</p>",
        "id": 278838376,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649861130
    },
    {
        "content": "<blockquote>\n<p>for some reason my git repo is not dowloading the cache for the project, only for mathlib.</p>\n</blockquote>\n<p><code>mathlibtools</code> does not (yet) know how to <em>download</em> caches for things that aren't mathlib</p>",
        "id": 278841073,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649862282
    },
    {
        "content": "<p>Ah, but then how was <span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span> getting both cache?</p>",
        "id": 278841752,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649862586
    },
    {
        "content": "<p>I ran <code>./scripts/get-cache.sh</code>, which uses leanproject only for getting the mathlib cache (and wgets the project cache directly)</p>",
        "id": 278843667,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649863451
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Newly.20downloaded.20repo.20has.20errors/near/278833015\">said</a>:</p>\n<blockquote>\n<p><code>git pull</code> (on <code>master</code>) then <code>./scripts/get-cache.sh</code> and then <code>leanproject build</code> works for me -- no warnings or errors, and finishes quickly</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  When you do <code>.scripts/get-cache.sh</code> do you get <code>Trying to dowload project cache</code> and then <code>No olean cache available</code>?</p>",
        "id": 278843823,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649863515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/113488-general/topic/Newly.20downloaded.20repo.20has.20errors/near/278843667\">said</a>:</p>\n<blockquote>\n<p>I ran <code>./scripts/get-cache.sh</code>, which uses leanproject only for getting the mathlib cache (and wgets the project cache directly)</p>\n</blockquote>\n<p>And have you also tried a <code>leanproject build</code>? Kevin says \" it was ok pretty quickly\" whereas to me it seems my PC is trying to take off quickly...</p>",
        "id": 278843980,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649863581
    },
    {
        "content": "<p>I ran <code>lean -j8 --make src</code> without a project cache, just to be sure. It built the project in roughly half an hour.</p>",
        "id": 278844115,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649863648
    },
    {
        "content": "<p>WOW! Half an hour is fast, thanks.</p>",
        "id": 278844238,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649863697
    },
    {
        "content": "<p>And what is the <code>-j8</code>?</p>",
        "id": 278844686,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649863907
    },
    {
        "content": "<p>I don't know if lean or leanproject uses multiple cores by default. This instructs lean to use 8 threads to compile (my CPU has 8 cores).</p>",
        "id": 278844955,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649864025
    },
    {
        "content": "<p>Ah, wow! Mine has one, so it will probably explain why your system is much faster.</p>",
        "id": 278845656,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649864318
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> here's what a fresh install looks like for me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">liquid</span>\n<span class=\"o\">[</span><span class=\"n\">normal</span> <span class=\"n\">git</span><span class=\"bp\">/</span><span class=\"n\">leanproject</span> <span class=\"n\">download</span> <span class=\"n\">stuff</span><span class=\"o\">]</span>\n<span class=\"bp\">$</span> <span class=\"n\">cd</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">liquid</span><span class=\"bp\">/</span>\n<span class=\"bp\">$</span> <span class=\"bp\">./</span><span class=\"n\">scripts</span><span class=\"bp\">/</span><span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">cache.sh</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">liquid</span> <span class=\"n\">oleans</span> <span class=\"n\">for</span> <span class=\"n\">ef51d2324e</span>\n  <span class=\"n\">locally...</span>\n  <span class=\"n\">Found</span> <span class=\"kn\">local</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">liquid</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Located</span> <span class=\"n\">matching</span> <span class=\"n\">cache</span>\n<span class=\"n\">Applying</span> <span class=\"n\">cache</span>\n  <span class=\"n\">files</span> <span class=\"n\">extracted</span><span class=\"o\">:</span> <span class=\"mi\">2351</span> <span class=\"o\">[</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">04</span><span class=\"o\">,</span> <span class=\"mi\">516</span><span class=\"bp\">.</span><span class=\"mi\">21</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">]</span>\n<span class=\"n\">Trying</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"n\">project</span> <span class=\"n\">cache</span>\n<span class=\"n\">Found</span> <span class=\"n\">oleans</span> <span class=\"n\">at</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">oleanstorage.azureedge.net</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">liquid</span><span class=\"bp\">/</span>\n<span class=\"n\">Extracted</span> <span class=\"n\">oleans</span> <span class=\"n\">into</span> <span class=\"n\">src</span> <span class=\"n\">and</span> <span class=\"n\">deleted</span> <span class=\"n\">archive</span>\n<span class=\"bp\">$</span> <span class=\"n\">leanproject</span> <span class=\"n\">build</span>\n<span class=\"o\">[</span><span class=\"n\">small</span> <span class=\"n\">amount</span> <span class=\"n\">of</span> <span class=\"n\">git</span> <span class=\"n\">stuff</span> <span class=\"n\">and</span> <span class=\"k\">then</span> <span class=\"n\">a</span> <span class=\"n\">pause</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"n\">few</span> <span class=\"n\">seconds</span> <span class=\"n\">and</span> <span class=\"k\">then</span> <span class=\"n\">returns</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>and I have oleans for everything in <code>src</code> and also for everything in <code>_target/deps_mathlib</code>.</p>",
        "id": 278849805,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649865956
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Thanks! I see a (big) difference then: when it tries to dowload the project cache, it finds them in azureedge, and this fails on my side.</p>",
        "id": 278850062,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866062
    },
    {
        "content": "<p>Are you on <code>master</code> branch?</p>",
        "id": 278850185,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649866105
    },
    {
        "content": "<p>I am</p>",
        "id": 278850207,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866113
    },
    {
        "content": "<p>I am trying to manually add the <code>lean-liquid</code> part of the path to my url file, seeing if I get anywhere.</p>",
        "id": 278850383,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866189
    },
    {
        "content": "<p>Do you have local work you need to save? What happens if you just nuke the repo and start again with <code>leanproject get lean-liquid</code>?</p>",
        "id": 278850406,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649866197
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> Can you paste the output of <code>get-cache.sh</code> here?</p>",
        "id": 278850472,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649866208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  No, I can throw everything away, but I have already tried severl times and I end up with the same problem.</p>",
        "id": 278850584,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866265
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"bp\">./</span><span class=\"n\">scripts</span><span class=\"bp\">/</span><span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">cache.sh</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span> <span class=\"n\">for</span> <span class=\"n\">ef51d2324e</span>\n  <span class=\"n\">locally...</span>\n  <span class=\"n\">Found</span> <span class=\"kn\">local</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Located</span> <span class=\"n\">matching</span> <span class=\"n\">cache</span>\n<span class=\"n\">Applying</span> <span class=\"n\">cache</span>\n  <span class=\"n\">files</span> <span class=\"n\">extracted</span><span class=\"o\">:</span> <span class=\"mi\">2351</span> <span class=\"o\">[</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">,</span> <span class=\"mi\">213</span><span class=\"bp\">.</span><span class=\"mi\">47</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">]</span>\n<span class=\"n\">Trying</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"n\">project</span> <span class=\"n\">cache</span>\n<span class=\"n\">No</span> <span class=\"n\">olean</span> <span class=\"n\">cache</span> <span class=\"n\">available</span>\n</code></pre></div>",
        "id": 278850615,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866276
    },
    {
        "content": "<p>Can I ask you how your <code>url</code> file looks like?</p>",
        "id": 278850639,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866288
    },
    {
        "content": "<p>The one in the <code>~/./mathlib</code> folder</p>",
        "id": 278850691,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866309
    },
    {
        "content": "<p>It contains a single line: <code>https://oleanstorage.azureedge.net/mathlib/</code>.</p>",
        "id": 278850774,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649866339
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">~/.</span><span class=\"n\">mathlib</span><span class=\"bp\">$</span> <span class=\"n\">more</span> <span class=\"n\">url</span>\n<span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">oleanstorage.azureedge.net</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span>\n</code></pre></div>",
        "id": 278850779,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649866341
    },
    {
        "content": "<p>Can you download <a href=\"https://oleanstorage.azureedge.net/mathlib/lean-liquid/5618fc7844c798f00a0d29c3a70433d3d2e40f03.tar.xz\">https://oleanstorage.azureedge.net/mathlib/lean-liquid/5618fc7844c798f00a0d29c3a70433d3d2e40f03.tar.xz</a> from your browser, say? It should have 6548180 bytes.</p>",
        "id": 278850829,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649866365
    },
    {
        "content": "<p>Oh, identical to mine!</p>",
        "id": 278850847,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866372
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/113488-general/topic/Newly.20downloaded.20repo.20has.20errors/near/278850829\">said</a>:</p>\n<blockquote>\n<p>Can you download <a href=\"https://oleanstorage.azureedge.net/mathlib/lean-liquid/5618fc7844c798f00a0d29c3a70433d3d2e40f03.tar.xz\">https://oleanstorage.azureedge.net/mathlib/lean-liquid/5618fc7844c798f00a0d29c3a70433d3d2e40f03.tar.xz</a> from your browser, say?</p>\n</blockquote>\n<p>Are these the <code>olean</code> I should put in the <code>~/./mathlib</code> folder?</p>",
        "id": 278850898,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866405
    },
    {
        "content": "<p>I should think you should put them in the <code>lean-liquid</code> folder</p>",
        "id": 278851092,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649866472
    },
    {
        "content": "<p>If you want to do it manually, you should extract those files at the lean-liquid root directory by running something like <code>tar xvf ~/Downloads/5618fc7844c798f00a0d29c3a70433d3d2e40f03.tar.xz</code></p>",
        "id": 278851230,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649866530
    },
    {
        "content": "<p>Ok, let me try.</p>",
        "id": 278851313,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866561
    },
    {
        "content": "<p>Done</p>",
        "id": 278851528,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866627
    },
    {
        "content": "<p>In theory, <code>leanproject build</code> should now be quick, right?</p>",
        "id": 278851556,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866644
    },
    {
        "content": "<p>and /src should look something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">ls</span> <span class=\"bp\">-</span><span class=\"n\">l</span>\n<span class=\"n\">total</span> <span class=\"mi\">1348</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">-- 1 buzzard buzzard   9876 Apr 13 17:02 banach.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r-- 1 buzzard buzzard 106348 Apr 10 14:19 banach.olean</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">breen_deligne</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">-- 1 buzzard buzzard   1855 Apr 13 17:02 challenge.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">-- 1 buzzard buzzard    690 Apr 13 17:02 challenge_notations.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r-- 1 buzzard buzzard   2833 Apr 11 20:37 challenge_notations.olean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r-- 1 buzzard buzzard  13274 Apr 13 16:22 challenge.olean</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">combinatorial_lemma</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">3</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">condensed</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">facts</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">9</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">for_mathlib</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">free_pfpng</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">hacks_and_tricks</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">invpoly</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">laurent_measures</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">Lbar</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">-- 1 buzzard buzzard   3923 Apr 13 17:02 liquid.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r-- 1 buzzard buzzard  16241 Apr 11 02:47 liquid.olean</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">locally_constant</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">normed_group</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">-- 1 buzzard buzzard  19812 Apr 13 17:02 normed_snake_dual.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r-- 1 buzzard buzzard 230539 Apr 10 14:38 normed_snake_dual.olean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">-- 1 buzzard buzzard   7371 Apr 13 17:02 normed_snake.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r-- 1 buzzard buzzard 104440 Apr 10 14:23 normed_snake.olean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">-- 1 buzzard buzzard  17649 Apr 13 17:02 normed_spectral.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r-- 1 buzzard buzzard 293048 Apr 10 14:49 normed_spectral.olean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">-- 1 buzzard buzzard   1133 Apr 13 17:02 normed_to_cond.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r-- 1 buzzard buzzard   6990 Apr 13 16:20 normed_to_cond.olean</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">polyhedral_lattice</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">prop819</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">-- 1 buzzard buzzard  20178 Apr 13 17:02 prop819.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r-- 1 buzzard buzzard 404583 Apr 10 15:07 prop819.olean</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">prop_92</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">3</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">pseudo_normed_group</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">real_measures</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">rescale</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">-- 1 buzzard buzzard    763 Apr 13 17:02 statement.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">rw</span><span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r-- 1 buzzard buzzard   3350 Apr 11 02:40 statement.olean</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">2</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">system_of_complexes</span>\n<span class=\"n\">drwxrwxr</span><span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"mi\">3</span> <span class=\"n\">buzzard</span> <span class=\"n\">buzzard</span>   <span class=\"mi\">4096</span> <span class=\"n\">Apr</span> <span class=\"mi\">13</span> <span class=\"mi\">17</span><span class=\"o\">:</span><span class=\"mi\">04</span> <span class=\"n\">thm95</span>\n<span class=\"bp\">$</span>\n</code></pre></div>",
        "id": 278851764,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649866721
    },
    {
        "content": "<p>and for a bonus point can someone tell me what definition of alphabetical order gives <code>challenge.lean</code> and then <code>challenge_notations.lean</code> and then <code>challenge_notaitons.olean</code> and then <code>challenge.olean</code>?</p>",
        "id": 278851935,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649866791
    },
    {
        "content": "<p>Well, quite similar</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">ls</span>\n<span class=\"n\">banach.lean</span>                <span class=\"n\">normed_snake.lean</span>\n<span class=\"n\">banach.olean</span>               <span class=\"n\">normed_snake.olean</span>\n<span class=\"n\">breen_deligne</span><span class=\"bp\">/</span>             <span class=\"n\">normed_snake_dual.lean</span>\n<span class=\"n\">challenge.lean</span>             <span class=\"n\">normed_snake_dual.olean</span>\n<span class=\"n\">challenge.olean</span>            <span class=\"n\">normed_spectral.lean</span>\n<span class=\"n\">challenge_notations.lean</span>   <span class=\"n\">normed_spectral.olean</span>\n<span class=\"n\">challenge_notations.olean</span>  <span class=\"n\">normed_to_cond.lean</span>\n<span class=\"n\">combinatorial_lemma</span><span class=\"bp\">/</span>       <span class=\"n\">normed_to_cond.olean</span>\n<span class=\"n\">condensed</span><span class=\"bp\">/</span>                 <span class=\"n\">polyhedral_lattice</span><span class=\"bp\">/</span>\n<span class=\"n\">facts</span><span class=\"bp\">/</span>                     <span class=\"n\">prop_92</span><span class=\"bp\">/</span>\n<span class=\"n\">for_mathlib</span><span class=\"bp\">/</span>               <span class=\"n\">prop819</span><span class=\"bp\">/</span>\n<span class=\"n\">free_pfpng</span><span class=\"bp\">/</span>                <span class=\"n\">prop819.lean</span>\n<span class=\"n\">hacks_and_tricks</span><span class=\"bp\">/</span>          <span class=\"n\">prop819.olean</span>\n<span class=\"n\">invpoly</span><span class=\"bp\">/</span>                   <span class=\"n\">pseudo_normed_group</span><span class=\"bp\">/</span>\n<span class=\"n\">laurent_measures</span><span class=\"bp\">/</span>          <span class=\"n\">real_measures</span><span class=\"bp\">/</span>\n<span class=\"n\">Lbar</span><span class=\"bp\">/</span>                      <span class=\"n\">rescale</span><span class=\"bp\">/</span>\n<span class=\"n\">liquid.lean</span>                <span class=\"n\">statement.lean</span>\n<span class=\"n\">liquid.olean</span>               <span class=\"n\">statement.olean</span>\n<span class=\"n\">locally_constant</span><span class=\"bp\">/</span>          <span class=\"n\">system_of_complexes</span><span class=\"bp\">/</span>\n<span class=\"n\">normed_group</span><span class=\"bp\">/</span>              <span class=\"n\">thm95</span><span class=\"bp\">/</span>\n</code></pre></div>",
        "id": 278851950,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866796
    },
    {
        "content": "<p>this looks great</p>",
        "id": 278852014,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649866807
    },
    {
        "content": "<p>and does <code>leanproject build</code> work?</p>",
        "id": 278852036,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649866817
    },
    {
        "content": "<p>Oh, it finished!</p>",
        "id": 278852063,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866829
    },
    {
        "content": "<p>And my laptop is still on the desk, not yet in the sky.</p>",
        "id": 278852083,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866840
    },
    {
        "content": "<p>Let me try to open VSCode</p>",
        "id": 278852093,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866845
    },
    {
        "content": "<p>There is still the question of what is going on because tomorrow you pull and then it doesn't work again :-/</p>",
        "id": 278852151,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649866872
    },
    {
        "content": "<p>I wonder if you don't have <code>wget</code> installed</p>",
        "id": 278852177,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649866888
    },
    {
        "content": "<p>Ah</p>",
        "id": 278852190,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866895
    },
    {
        "content": "<p>Well, first of all, even in VSCode it works! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>",
        "id": 278852240,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866916
    },
    {
        "content": "<p>But now Kevin's point is crucial. How to avoid this tomorrow?</p>",
        "id": 278852376,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649866954
    },
    {
        "content": "<p>Do not wake up</p>",
        "id": 278852391,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649866966
    },
    {
        "content": "<p>Indeed, I have a </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">wget</span>\n<span class=\"n\">bash</span><span class=\"o\">:</span> <span class=\"n\">wget</span><span class=\"o\">:</span> <span class=\"n\">command</span> <span class=\"n\">not</span> <span class=\"n\">found</span>\n</code></pre></div>",
        "id": 278852462,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649867002
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 278852483,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649867017
    },
    {
        "content": "<p>Ah!</p>",
        "id": 278852493,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649867022
    },
    {
        "content": "<p>Nice!</p>",
        "id": 278852611,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649867061
    },
    {
        "content": "<p>Ok, let me install <code>wget</code> and re-try everything.</p>",
        "id": 278852650,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649867085
    },
    {
        "content": "<p>YES!!!!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"bp\">./</span><span class=\"n\">scripts</span><span class=\"bp\">/</span><span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">cache.sh</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span> <span class=\"n\">for</span> <span class=\"n\">ef51d2324e</span>\n  <span class=\"n\">locally...</span>\n  <span class=\"n\">Found</span> <span class=\"kn\">local</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Located</span> <span class=\"n\">matching</span> <span class=\"n\">cache</span>\n<span class=\"n\">Applying</span> <span class=\"n\">cache</span>\n  <span class=\"n\">files</span> <span class=\"n\">extracted</span><span class=\"o\">:</span> <span class=\"mi\">2351</span> <span class=\"o\">[</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">11</span><span class=\"o\">,</span> <span class=\"mi\">212</span><span class=\"bp\">.</span><span class=\"mi\">76</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">]</span>\n<span class=\"n\">Trying</span> <span class=\"n\">to</span> <span class=\"n\">download</span> <span class=\"n\">project</span> <span class=\"n\">cache</span>\n<span class=\"n\">Found</span> <span class=\"n\">oleans</span> <span class=\"n\">at</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">oleanstorage.azureedge.net</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">liquid</span><span class=\"bp\">/</span>\n<span class=\"n\">Extracted</span> <span class=\"n\">oleans</span> <span class=\"n\">into</span> <span class=\"n\">src</span> <span class=\"n\">and</span> <span class=\"n\">deleted</span> <span class=\"n\">archive</span>\n</code></pre></div>",
        "id": 278853446,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649867424
    },
    {
        "content": "<p>Thank you so much <span class=\"user-mention\" data-user-id=\"325367\">@Mauricio Collares</span> and <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span></p>",
        "id": 278853494,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649867444
    },
    {
        "content": "<p>But now a final question: is it me that on a drunk evening decided to <em>uninstall</em> <code>wget</code> and don't have any recollection, or is it something that does not come with Win10? Perhaps <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  has a clue?</p>",
        "id": 278853579,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649867495
    },
    {
        "content": "<p>It seems likely that it would not come with Windows</p>",
        "id": 278854570,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1649867912
    },
    {
        "content": "<p>The failure mode is pretty poor, though</p>",
        "id": 278854590,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1649867928
    },
    {
        "content": "<p>By \"failure mode\"  you mean the way Win has <em>not</em> to inform the user of the problem?</p>",
        "id": 278854674,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649867977
    },
    {
        "content": "<p>We should probably add \"install wget\" to our installation instructions for windows, and possibly leanproject should mention the possibility that wget is missing in the error message.</p>",
        "id": 278859103,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1649869775
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Newly.20downloaded.20repo.20has.20errors/near/278851935\">said</a>:</p>\n<blockquote>\n<p>and for a bonus point can someone tell me what definition of alphabetical order gives <code>challenge.lean</code> and then <code>challenge_notations.lean</code> and then <code>challenge_notaitons.olean</code> and then <code>challenge.olean</code>?</p>\n</blockquote>\n<p><code>ls</code> uses your locale's collation rules (via <code>LC_COLLATE</code>), and I guess <code>_</code> and <code>.</code> are considered equivalent? My locale has the same behaviour and I guess this is related to ISO/IEC 14651, but I don't want to buy the standard to discover why :) You can do <code>LC_COLLATE=C ls -l</code> to override it.</p>",
        "id": 278859145,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649869800
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113488-general/topic/Newly.20downloaded.20repo.20has.20errors/near/278859103\">said</a>:</p>\n<blockquote>\n<p>We should probably add \"install wget\" to our installation instructions for windows, and possibly leanproject should mention the possibility that wget is missing in the error message.</p>\n</blockquote>\n<p>It's not leanproject's fault, though: lean-liquid has a custom script which invokes wget. Leanproject uses Python's <code>requests</code> library.</p>",
        "id": 278859479,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1649869926
    },
    {
        "content": "<p>Ah! I stand corrected then.</p>",
        "id": 278859564,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1649869963
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/113488-general/topic/Newly.20downloaded.20repo.20has.20errors/near/278859479\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113488-general/topic/Newly.20downloaded.20repo.20has.20errors/near/278859103\">said</a>:</p>\n<blockquote>\n<p>We should probably add \"install wget\" to our installation instructions for windows, and possibly leanproject should mention the possibility that wget is missing in the error message.</p>\n</blockquote>\n<p>It's not leanproject's fault, though: lean-liquid has a custom script which invokes wget. Leanproject uses Python's <code>requests</code> library.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> We then need to add it to the LTE <code>docs</code>?</p>",
        "id": 278861544,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649870865
    },
    {
        "content": "<p>We just need to finish LTE :-)</p>",
        "id": 278861753,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649870952
    },
    {
        "content": "<p>Indeed this wget issue has nothing to do with <code>leanproject</code>. However avoiding  Windows is still a great general purpose advice.</p>",
        "id": 278862053,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1649871095
    },
    {
        "content": "<p>Thanks for the great general purpose advice! <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 278870440,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649874841
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/Newly.20downloaded.20repo.20has.20errors/near/278852391\">said</a>:</p>\n<blockquote>\n<p>Do not wake up</p>\n</blockquote>\n<p>I woke up and it still works! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 278938392,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1649925991
    },
    {
        "content": "<p>Yeah but now you have a git security issue ;-)</p>",
        "id": 278945579,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649930507
    }
]