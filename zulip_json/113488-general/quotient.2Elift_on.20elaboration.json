[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"c1\">-- works</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">setoid</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">setoid</span> <span class=\"n\">s</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf2</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">≈</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">⟨</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hf1</span> <span class=\"n\">x</span><span class=\"bp\">⟩</span> <span class=\"o\">:</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">≈</span> <span class=\"bp\">⟨</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hf1</span> <span class=\"n\">y</span><span class=\"bp\">⟩</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">quotient</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"bp\">→</span> <span class=\"n\">quotient</span> <span class=\"bp\">_</span><span class=\"n\">inst_2</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"err\">⟦</span><span class=\"o\">(</span><span class=\"bp\">⟨</span><span class=\"n\">f</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">hf1</span> <span class=\"n\">r</span><span class=\"bp\">⟩</span> <span class=\"o\">:</span> <span class=\"n\">s</span><span class=\"o\">)</span><span class=\"err\">⟧</span><span class=\"o\">)</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span> <span class=\"err\">$</span> <span class=\"n\">hf2</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">hxy</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">invalid constructor ⟨...⟩, expected type is not an inductive type</span>\n<span class=\"cm\">  ?m_1</span>\n<span class=\"cm\">-/</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">setoid</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">setoid</span> <span class=\"n\">s</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf2</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">≈</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"bp\">⟨</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hf1</span> <span class=\"n\">x</span><span class=\"bp\">⟩</span> <span class=\"o\">:</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">≈</span> <span class=\"bp\">⟨</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hf1</span> <span class=\"n\">y</span><span class=\"bp\">⟩</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">quotient</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"bp\">→</span> <span class=\"n\">quotient</span> <span class=\"bp\">_</span><span class=\"n\">inst_2</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"err\">⟦</span><span class=\"bp\">⟨</span><span class=\"n\">f</span> <span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">hf1</span> <span class=\"n\">r</span><span class=\"bp\">⟩</span><span class=\"err\">⟧</span><span class=\"o\">)</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span> <span class=\"err\">$</span> <span class=\"n\">hf2</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">hxy</span>\n</pre></div>",
        "id": 169751281,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1562387039
    },
    {
        "content": "<p>why does it fail when I have an inductive type?</p>",
        "id": 169751321,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1562387071
    },
    {
        "content": "<p>it's an elaboration order problem. Anonymous constructors must resolve to an inductive type straight away, but I guess the other stuff is getting elaborated before lean knows what the target type is of the function</p>",
        "id": 169752140,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562388871
    }
]