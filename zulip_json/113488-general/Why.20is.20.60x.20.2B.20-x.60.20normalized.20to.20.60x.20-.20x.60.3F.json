[
    {
        "content": "<p>Hi, everyone!</p>\n<p>I am trying to use the tactics <code>ring_nf</code> and <code>norm_num</code> to prove <code>x + -x ≠ 1</code> for any real number <code>x</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">ring_nf</span><span class=\"o\">,</span>\n  <span class=\"n\">norm_num</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>It worked, but in a way different from my expectation. I expected <code>ring_nf</code> to change the goal to <code>0 ≠ 1</code>, but it actually changed the goal to <code>x - x ≠ 1</code>. I also noticed that <code>ring_nf raw</code> would give <code>0 ≠ 1</code>. I thought <code>norm_num</code> could only normalize numerical expressions, but it did work with <code>x - x ≠ 1</code>; it even worked with <code>x + -x ≠ 1</code> directly.</p>\n<p>My questions  are:</p>\n<ul>\n<li>Why is <code>x + -x</code> not normalized to <code>0</code> by default?</li>\n<li>What does the <code>raw</code> option of <code>ring_nf</code> do?</li>\n<li>Why can <code>norm_num</code> normalize expressions not purely numerical?</li>\n</ul>\n<p>Thank you.</p>",
        "id": 277811169,
        "sender_full_name": "Ruotong Cheng",
        "timestamp": 1649117593
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"457927\">Ruotong Cheng</span> <a href=\"#narrow/stream/113488-general/topic/Why.20is.20.60x.20.2B.20-x.60.20normalized.20to.20.60x.20-.20x.60.3F/near/277811169\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Why is <code>x + -x</code> not normalized to <code>0</code> by default?</li>\n</ul>\n</blockquote>\n<p>Puzzling indeed!</p>",
        "id": 277814519,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1649119613
    },
    {
        "content": "<p>This might be <a href=\"https://github.com/leanprover-community/mathlib/pull/12430\">#12430</a> again <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> .<br>\nWhat does <code>repeat { ring_nf }</code> do?</p>",
        "id": 277838039,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1649144023
    },
    {
        "content": "<p><code>norm_num</code> calls simp often as part of it's execution so I'd guess it's just one of the simp calls that makes norm num close this goal</p>",
        "id": 277838212,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1649144139
    },
    {
        "content": "<p>yes, the issue is fixed on that PR. I will try to get it merged</p>",
        "id": 277849943,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649151109
    }
]