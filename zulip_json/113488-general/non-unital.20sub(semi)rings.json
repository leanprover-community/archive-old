[
    {
        "content": "<p>I'm ready to define non-unital sub(semi)rings. Is there anything I should know about the current sub(semi)ring API which is outdated or deprecated? Otherwise I am planning to base my work on that.</p>",
        "id": 279595213,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650484619
    },
    {
        "content": "<p>The deprecated stuff is hopefully all in <code>src/deprecated</code> nowadays</p>",
        "id": 279610114,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650492769
    },
    {
        "content": "<p>And Scott is about to delete it!</p>",
        "id": 279610145,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1650492793
    },
    {
        "content": "<p>Sorry, I think what I mean is the parallel of the hom refactor. There the refactor is not complete and even the parts that are still have vestiges of the old format. I'm not sure if there is any similarity with the <code>set_like</code> stuff.</p>",
        "id": 279617497,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650498061
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> is in the middle of such a refactor, but is away from lean at the moment</p>",
        "id": 279638394,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650519319
    },
    {
        "content": "<p>Thanks for the ping! I was ill last week but slowly doing better. The current state is indeed that there are still some vestiges of the old approach around, especially for subobjects. But you should be able to already use the new <code>set_like</code> subclasses like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mul_mem_class\">docs#mul_mem_class</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_submonoid_class\">docs#add_submonoid_class</a>.</p>",
        "id": 279649844,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1650529501
    },
    {
        "content": "<p>Essentially, if you copy the current <code>subsemiring</code> definition <a href=\"https://github.com/leanprover-community/mathlib/commit/df6db67d3d27fda2ea8a91f12b4689befe2283e1#diff-08fe87a9f361e6c9f6fab1a8420cf254614b3618b3c75db4f4f2431f8f668e0c\">and make sure to remove the instances that directly reference <code>subsemiring</code>, rather than <code>subsemiring_class</code></a> then you should be up to date with the refactor.</p>",
        "id": 279650170,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1650529720
    },
    {
        "content": "<p>Glad to hear you're doing a bit better! I was indeed thinking of <a href=\"https://github.com/leanprover-community/mathlib/pull/11759\">#11759</a> when I remarked it was in progress.</p>",
        "id": 279660759,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650536540
    },
    {
        "content": "<p>Got it, thanks! I suspected something like this must be the case.</p>",
        "id": 279673721,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650544575
    }
]