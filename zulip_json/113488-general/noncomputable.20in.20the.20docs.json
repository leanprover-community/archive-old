[
    {
        "content": "<p>Currently I've gone for</p>\n<p><a href=\"/user_uploads/3121/4IswWzoxvr-CHozFe-9A6xsL/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/4IswWzoxvr-CHozFe-9A6xsL/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/4IswWzoxvr-CHozFe-9A6xsL/image.png\"></a></div><p>Which is a bit more mathematician-friendly than <code>repeating-linear-gradient(  45deg,  #FFFFE0,  #FFFFE0 10px,  #E0E0E0 10px,  #E0E0E0 20px)</code>:</p>\n<p><a href=\"/user_uploads/3121/0wJcahV4nSJQKO7KjLWDBJ4z/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/0wJcahV4nSJQKO7KjLWDBJ4z/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/0wJcahV4nSJQKO7KjLWDBJ4z/image.png\"></a></div>",
        "id": 259726585,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635594660
    },
    {
        "content": "<p>Too bad, this looked funky.</p>",
        "id": 259726596,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635594692
    },
    {
        "content": "<p>There could be an \"I'm a computer scientist\" preference checkbox, and a similar one for mathematicians that makes <code>meta</code> look scary</p>",
        "id": 259726646,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635594726
    },
    {
        "content": "<p>What about applying the construction zone layout to only the left bar?</p>",
        "id": 259726647,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635594728
    },
    {
        "content": "<p>Feel free to play around with styles at <a href=\"https://leanprover-community.github.io/mathlib_docs_demo/data/real/ereal.html\">https://leanprover-community.github.io/mathlib_docs_demo/data/real/ereal.html</a></p>",
        "id": 259726654,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635594746
    },
    {
        "content": "<p>You can adjust the style for <code>.noncomputable</code> in the chrome inspector</p>",
        "id": 259726655,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635594752
    },
    {
        "content": "<p>I'm afraid I don't know how to CSS.</p>",
        "id": 259726753,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635594951
    },
    {
        "content": "<p>Here's the result of</p>\n<div class=\"codehilite\" data-code-language=\"CSS\"><pre><span></span><code>    <span class=\"nt\">border-image-source</span><span class=\"o\">:</span> <span class=\"nt\">repeating-linear-gradient</span><span class=\"o\">(</span>\n<span class=\"nt\">45deg</span><span class=\"o\">,</span> <span class=\"p\">#</span><span class=\"nn\">FFFF80</span><span class=\"o\">,</span> <span class=\"p\">#</span><span class=\"nn\">FFFF80</span> <span class=\"nt\">10px</span><span class=\"o\">,</span> <span class=\"p\">#</span><span class=\"nn\">808080</span> <span class=\"nt\">10px</span><span class=\"o\">,</span> <span class=\"p\">#</span><span class=\"nn\">808080</span> <span class=\"nt\">20px</span><span class=\"o\">);</span>\n    <span class=\"nt\">border-image-slice</span><span class=\"o\">:</span> <span class=\"nt\">10</span><span class=\"o\">;</span>\n</code></pre></div>\n<p><a href=\"/user_uploads/3121/m0qPB76U7XQ14xhzaBKRVaZk/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/m0qPB76U7XQ14xhzaBKRVaZk/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/m0qPB76U7XQ14xhzaBKRVaZk/image.png\"></a></div>",
        "id": 259727428,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635595754
    },
    {
        "content": "<p>Okay the top looks terrible, but I like the left!</p>",
        "id": 259727436,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635595785
    },
    {
        "content": "<p><code>noncomputable</code> isn't really the right thing to be flagging anyways, it should be whether the definition depends on arbitrary choices, but we don't have a way to track that yet</p>",
        "id": 259732028,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635601921
    },
    {
        "content": "<p>I don't understand what you mean by that</p>",
        "id": 259733339,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635603533
    },
    {
        "content": "<p>Can you give an example of something that makes an \"arbitrary choice\" but is computable?</p>",
        "id": 259733350,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635603562
    },
    {
        "content": "<p>No but I can give examples of things that don't make arbitrary choices yet are noncomputable</p>",
        "id": 259733701,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635603975
    },
    {
        "content": "<p>I think just the word \"noncomputable\" is plenty</p>",
        "id": 259733957,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635604270
    },
    {
        "content": "<p>My thinking was that the word <code>noncomputable</code> might be too noisy, so we could use color or something to indicate it <em>instead</em> without making it take longer to find the lemma name in the decl header</p>",
        "id": 259734218,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635604530
    },
    {
        "content": "<p>Writing it as</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span> <span class=\"kd\">noncomputable</span>\n<span class=\"kd\">def</span> <span class=\"n\">some_def</span>\n</code></pre></div>\n<p>might also be the way to go, which I think someone suggested earlier; it just would be a little odd to use a different convention to the mathlib source code in that regard</p>",
        "id": 259734277,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635604617
    },
    {
        "content": "<p>I was thinking that <code>noncomputable</code> could go on the previous line too. I guess it costs an extra line when there weren't any other attributes, but that seems pretty minor.</p>",
        "id": 259734935,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635605434
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/noncomputable.20in.20the.20docs/near/259734218\">said</a>:</p>\n<blockquote>\n<p>My thinking was that the word <code>noncomputable</code> might be too noisy, so we could use color or something to indicate it <em>instead</em> without making it take longer to find the lemma name in the decl header</p>\n</blockquote>\n<p>For me any kind of visual distinction (like the dashed bar) is more distracting than just some more plain text. It's still easy enough to find the declaration name with <code>noncomputable</code> on the same line. I notice that compared to your screenshot, plain and bold text are more distinct on my system/display, which probably helps.</p>",
        "id": 259735210,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635605735
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/noncomputable.20in.20the.20docs/near/259734218\">said</a>:</p>\n<blockquote>\n<p>My thinking was that the word <code>noncomputable</code> might be too noisy, so we could use color or something to indicate it <em>instead</em> without making it take longer to find the lemma name in the decl header</p>\n</blockquote>\n<p>I feel like I would take a long time to figure out what the alternate styling meant, if the word \"noncomputable\" wasn't there, but maybe that's just me</p>",
        "id": 259739799,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1635611973
    },
    {
        "content": "<p>We can just move <code>noncomputable</code> to the previous line throughout mathlib as well. I like it.</p>",
        "id": 259758487,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1635637886
    },
    {
        "content": "<p>Should we do the same with meta?</p>",
        "id": 259758490,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635637913
    },
    {
        "content": "<p>It would be better if it was an attribute. But I don't want to diverge too much from lean 4 style here</p>",
        "id": 259759371,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1635639271
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/noncomputable.20in.20the.20docs/near/259758490\">said</a>:</p>\n<blockquote>\n<p>Should we do the same with meta?</p>\n</blockquote>\n<p>A separate question, but I think a different color border makes a lot more sense for <code>meta</code></p>",
        "id": 259761957,
        "sender_full_name": "Reid Barton",
        "timestamp": 1635644077
    },
    {
        "content": "<p>I'd argue that <code>meta</code>and <code>noncomputable</code> should be treated pretty much the same way' one is a \"don't care about soundness\" flag, and the other is a \"don't care about computation\" flag.</p>",
        "id": 259785128,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635682544
    },
    {
        "content": "<p>I'm really not a fan of the broken bars for <code>noncomputable</code>. It's a very loud flag for something that most people won't care about, and there's no obvious connection between them and the <code>noncomputable</code> word, so people will wonder what this glaring marker means and assume it's relevant.</p>",
        "id": 259793712,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1635695084
    },
    {
        "content": "<p>If anything I'd prefer a visual notice like that for <code>meta</code>, but really, the word is plenty for both.</p>",
        "id": 259793730,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1635695112
    },
    {
        "content": "<p>Alright, I've backed out the stylesheet change</p>",
        "id": 259794863,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635696301
    },
    {
        "content": "<p>Someone can add styling for meta in a follow-up PR, the css class is now there so it's easy to experiment in-browser</p>",
        "id": 259796114,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635697842
    }
]