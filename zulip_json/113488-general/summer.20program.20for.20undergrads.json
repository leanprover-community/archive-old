[
    {
        "content": "<p>Carnegie Mellon Summer School in Logic and Formal Epistemology:<br>\n<a href=\"https://www.cmu.edu/dietrich/philosophy/undergraduate/summer-school/\" target=\"_blank\" title=\"https://www.cmu.edu/dietrich/philosophy/undergraduate/summer-school/\">https://www.cmu.edu/dietrich/philosophy/undergraduate/summer-school/</a><br>\nIt's a good deal : free classes and dorm rooms for three weeks, and they have a great time. Please share this with promising young people! We can accept 25 students (we typically get about four times that many applicants).</p>",
        "id": 187842059,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1581358803
    },
    {
        "content": "<p>Not sure if this is the right topic for <a href=\"http://wwwf.imperial.ac.uk/~buzzard/xena/UROP2020.html\" title=\"http://wwwf.imperial.ac.uk/~buzzard/xena/UROP2020.html\">The Xena Project summer projects, 2020</a> but I was just wondering what is the preferred method of application and deadline?</p>",
        "id": 196615480,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1588761425
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 196616434,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588762088
    },
    {
        "content": "<p>So apparently announcing this but giving no preferred method for anything because I am not even going to think about stuff until June, is causing some issues :-)</p>",
        "id": 196621763,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588765523
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"264734\">@Donald Sebastian Leung</span> you are young. What do you suggest that the preferred method of application should be? People are getting in touch with me saying \"OK so what now?\" and my answer is \"nothing, yet, just learn some Lean\"</p>",
        "id": 196621860,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588765569
    },
    {
        "content": "<p>Should I be sending them to Discord or Instagram or something?</p>",
        "id": 196621879,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588765582
    },
    {
        "content": "<p>I'm looking to join in here and I think it would be great to get in touch with others, I think you should set up a place (discord would work great) where undergrads who want to be part of this can chat about maths and lean and get to know each other?</p>",
        "id": 196629902,
        "sender_full_name": "Alastair Horn",
        "timestamp": 1588769915
    },
    {
        "content": "<p>I already have a discord Lean server, but I've not really used it to do any Lean yet: <a href=\"https://discord.gg/AnHKcDm\" title=\"https://discord.gg/AnHKcDm\">https://discord.gg/AnHKcDm</a></p>",
        "id": 196630098,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1588770000
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/summer.20program.20for.20undergrads/near/196621860\" title=\"#narrow/stream/113488-general/topic/summer.20program.20for.20undergrads/near/196621860\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"264734\">Donald Sebastian Leung</span> you are young. What do you suggest that the preferred method of application should be? People are getting in touch with me saying \"OK so what now?\" and my answer is \"nothing, yet, just learn some Lean\"</p>\n</blockquote>\n<p>I haven't used Discord myself (I'm kinda old-fashioned for someone my age <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61d\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span> ) but <span class=\"user-mention\" data-user-id=\"274262\">@Alastair Horn</span> 's idea sounds great. Though I think it would still be beneficial to maintain a certain level of formality and require interested applicants to contact you by email to prove their sincerity.</p>",
        "id": 196645494,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1588776708
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I've also never used Discord. But why don't you set up a Xena stream here, and tell people to start there?</p>",
        "id": 196645807,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588776827
    },
    {
        "content": "<p>Then they \"close to the fire\" so to speak</p>",
        "id": 196645815,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1588776835
    },
    {
        "content": "<p>I'd like to understand more about <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> summer project. I have precise questions:</p>\n<ul>\n<li>What are the students commitments? What do you expect them to promise to do?</li>\n<li>What are Kevin's commitments? What do <em>you</em> promise to do? In particular, could you clarify that, contrary to your regular UROPs, there is no money involved.</li>\n<li>Is there anything like a selection, or a cap on the number of involved students?</li>\n<li>Should I ask my students whether they are interested in participating?</li>\n</ul>",
        "id": 198311275,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590061328
    },
    {
        "content": "<p>I ran summer projects in 2018 and it was kind of chaos. Some people took money and did nothing. Some people had no money and did lots of things. Some had filled in the UROP form. Some hadn't. I had no formal record of who was involved but a few times a week I would spend the day in Imperial's math department computer room talking to people, listening to their issues and then explaining that they would have to ask Chris</p>",
        "id": 198330620,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073093
    },
    {
        "content": "<p>Or, if I was lucky, I could sometimes help</p>",
        "id": 198330658,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073111
    },
    {
        "content": "<p>And then some people made mathlib PRs, some people made standalone projects, and nobody really wrote anything up but we all agreed we'd learnt a lot</p>",
        "id": 198330788,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073178
    },
    {
        "content": "<p>This year my aims are slightly higher</p>",
        "id": 198330814,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073195
    },
    {
        "content": "<p>I am not a fan of administration so there is no registration process and no money involved. I will spend tuesdays and Thursdays online at Zulip and Discord answering questions</p>",
        "id": 198330954,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073258
    },
    {
        "content": "<p>But the advice I will be giving everyone is just to make their own lean project, host it on GitHub, prove a theorem or make a conjecture or a definition but then they have to promise two things: firstly that their code compiles with no errors and with the version of mathlib stated in their toml</p>",
        "id": 198331212,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073361
    },
    {
        "content": "<p>And second that they attempt to document their code</p>",
        "id": 198331236,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073378
    },
    {
        "content": "<p>And then we leave the code to rot because if it compiles once, you win</p>",
        "id": 198331293,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073402
    },
    {
        "content": "<p>I know it's not how you'd do it Patrick</p>",
        "id": 198331332,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073427
    },
    {
        "content": "<p>But it's all I can manage</p>",
        "id": 198331349,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073441
    },
    {
        "content": "<p>Why do you say this is not how I would do it?</p>",
        "id": 198331413,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590073457
    },
    {
        "content": "<p>In particular no cap and sure tell your students</p>",
        "id": 198331435,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073466
    },
    {
        "content": "<p>Because you would organise something properly</p>",
        "id": 198331463,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073480
    },
    {
        "content": "<p>Whereas I prefer chaos</p>",
        "id": 198331518,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590073505
    },
    {
        "content": "<p>Oh I see. But the question is moot anyway. I would never promise to do so much during summer. My kids are too young.</p>",
        "id": 198331588,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590073540
    },
    {
        "content": "<p>I think it would be nice to put all those answers on your dedicated web page.</p>",
        "id": 198331978,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590073715
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> It would be nice to have a list of these students' repos somewhere in mathlib (either as a <code>github</code> issue or as an <code>.md</code>/<code>.yaml</code> file with links and short descriptions).</p>",
        "id": 198354710,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590084085
    },
    {
        "content": "<p>And now the twitch streaming has ended, Kevin should update his website.</p>",
        "id": 198354940,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590084197
    },
    {
        "content": "<p>Or replace \"have a repo with code that compiles\" with \"have a PR that compiles (no requirement to have it merged)\".</p>",
        "id": 198355087,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590084262
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> this is a great idea. I would happily make the yaml file. Can you start it off for me? I've never made one before. I know a bunch of repos which I would loosely associate with \"the Xena project\". For example this: <a href=\"https://github.com/LAC1213/compact_unit_ball\">https://github.com/LAC1213/compact_unit_ball</a> or this <a href=\"https://github.com/ImperialCollegeLondon/xena-UROP-2018/tree/master/src/Geometry\">https://github.com/ImperialCollegeLondon/xena-UROP-2018/tree/master/src/Geometry</a></p>",
        "id": 198363954,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590088679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  : the object of the summer program is to add to the forthcoming yaml file which I will populate once I know what a yaml file looks like.</p>",
        "id": 198364149,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590088786
    },
    {
        "content": "<p>Which yaml file? We have lots of them nowadays</p>",
        "id": 198364294,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590088859
    },
    {
        "content": "<p>Here's a pretty crazy project <a href=\"https://github.com/kckennylau/local-langlands-abelian\">https://github.com/kckennylau/local-langlands-abelian</a></p>",
        "id": 198364351,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590088897
    },
    {
        "content": "<p>I just want to know how to turn these random URLs which I am posting here (and there are plenty more things -- stuff which compiled, some of it really interesting</p>",
        "id": 198364470,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590088964
    },
    {
        "content": "<p>An undergraduate made fundamental groups. Do we even have them in mathlib?</p>",
        "id": 198364504,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590088985
    },
    {
        "content": "<p>No we don't</p>",
        "id": 198364521,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590088997
    },
    {
        "content": "<p>More and more of these projects are appearing. That's the job of the Xena Project -- to get maths students that I know or have met online to formalise interesting stuff. <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> 's very impressive work on the Kruskal Katona theorem is something which I really encouraged him to work on and helped him to start out with it. I have no idea whether it will end up in mathlib before we are engulfed by Lean 4 but as far as I'm concerned, if it worked once, and if I could kind of see what you had done, then you had passed.</p>",
        "id": 198364898,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590089171
    },
    {
        "content": "<p>Talking of which, Ali Sever passed this week</p>",
        "id": 198364926,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590089185
    },
    {
        "content": "<p>For what it's worth, the proof still works on yesterday's version of mathlib and lean: <a href=\"https://github.com/leanprover-community/mathlib/tree/combinatorics/src\">https://github.com/leanprover-community/mathlib/tree/combinatorics/src</a></p>",
        "id": 198365037,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1590089251
    },
    {
        "content": "<p>Yesterday?! That's pretty old! It means you're probably still fighting <code>(|</code></p>",
        "id": 198365134,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590089285
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Why not open PRs for all of this?</p>",
        "id": 198365274,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590089357
    },
    {
        "content": "<p>If the author doesn't want to polish it, then add a <code>please-adopt</code> label right away.<br>\n<span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 198365329,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590089389
    },
    {
        "content": "<p>Yaml is easy enough, its just data in record, you could lay it out like this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p p-Indicator\">-</span> <span class=\"nt\">link</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">https://github.com/leanprover-community/mathlib/tree/combinatorics/src</span>\n  <span class=\"nt\">author</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Bhavik Mehta</span>\n  <span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">&gt;</span>\n    <span class=\"no\">Kruskal-Katona is great</span>\n  <span class=\"nt\">status</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">finished</span>\n<span class=\"p p-Indicator\">-</span> <span class=\"nt\">link</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">https://github.com/alexjbest/fakeproject</span>\n  <span class=\"nt\">author</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Alex</span>\n  <span class=\"nt\">description</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">&gt;</span>\n    <span class=\"no\">Who&#39;s reading this</span>\n  <span class=\"nt\">status</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">in progress</span>\n</code></pre></div>",
        "id": 198365346,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1590089399
    },
    {
        "content": "<p>you could add whatever fields you like, \"mathlib-version : 3.14\" for instance</p>",
        "id": 198365666,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1590089543
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/113488-general/topic/summer.20program.20for.20undergrads/near/198365329\">said</a>:</p>\n<blockquote>\n<p>If the author doesn't want to polish it, then add a <code>please-adopt</code> label right away.<br>\n<span class=\"user-mention silent\" data-user-id=\"246273\">Bhavik Mehta</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/pull/2770\">https://github.com/leanprover-community/mathlib/pull/2770</a> Done</p>",
        "id": 198366499,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1590089988
    },
    {
        "content": "<p>Yury is pretty efficient at threatening people until they PR. We should use that more often</p>",
        "id": 198366741,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590090112
    },
    {
        "content": "<p>I had already made a few PRs from there but I didn't realise there was an option to dump it in someone else's lap</p>",
        "id": 198366824,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1590090151
    },
    {
        "content": "<p>Possibly no one will pick it up but at least someone who'll decide to formalize the same theorem will see what's already done.</p>",
        "id": 198367030,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590090274
    },
    {
        "content": "<p>Many of my students write code which is not appropriate for mathlib and have no desire to get it into a state which would be appropriate</p>",
        "id": 198375788,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590094292
    },
    {
        "content": "<p>I like the #please-adopt label</p>",
        "id": 198379740,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590096541
    },
    {
        "content": "<p>That sounds like something I can pick up and fix it while not thinking too much</p>",
        "id": 198379758,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590096552
    },
    {
        "content": "<p>This is not the usual situation</p>",
        "id": 198379871,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590096616
    },
    {
        "content": "<p>You should rather expect to have quite a bit of work</p>",
        "id": 198379895,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590096643
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"262143\">@Ryan Lahfa</span> Awesome, I'm assigning the PR to you, let us know when it's ready for review.</p>",
        "id": 198380594,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1590097166
    },
    {
        "content": "<p>.... or rather, I'll assign it to you once you accept the invitation to collaborate on mathlib.</p>",
        "id": 198380924,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1590097333
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113488-general/topic/summer.20program.20for.20undergrads/near/198380924\">said</a>:</p>\n<blockquote>\n<p>.... or rather, I'll assign it to you once you accept the invitation to collaborate on mathlib.</p>\n</blockquote>\n<p>accepted</p>",
        "id": 198380984,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590097375
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/summer.20program.20for.20undergrads/near/198379895\">said</a>:</p>\n<blockquote>\n<p>You should rather expect to have quite a bit of work</p>\n</blockquote>\n<p>But it's \"repeat {here's a more mathlib-way of doing stuff, are core maintainers okay with it now? — Patrick: no}\" until it works?<br>\nI'm okay with spending time to do iterations between reviews, I'm even accustomed to the red button \"Changes requested\" nowadays</p>",
        "id": 198381115,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590097440
    },
    {
        "content": "<p>Yes, that seems accurate.</p>",
        "id": 198381194,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1590097474
    },
    {
        "content": "<p>If there's other people like Ryan who want to make PRs from existing proofs I have many!</p>",
        "id": 198381802,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1590097834
    },
    {
        "content": "<p>I'd say just PR them all with the label.</p>",
        "id": 198382220,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1590098145
    },
    {
        "content": "<p>I'm significantly more likely to browse your PRs than I am to ask you directly what you've done and convince you to start a PR for part of it</p>",
        "id": 198383079,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590098699
    },
    {
        "content": "<p>Also if there are orphaned PRs sitting around with your code, then people who are not you can answer \"is there code for X\" questions with PR links instead of \"I heard bhavik worked on that\"</p>",
        "id": 198383241,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590098798
    }
]