[
    {
        "content": "<p>Hi, how does Lean decide which simp lemma to apply? I'm trying to add</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">ball_image_iff</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"n\">f</span> <span class=\"err\">&#39;&#39;</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"n\">iff</span><span class=\"bp\">.</span><span class=\"n\">intro</span>\n  <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">h</span> <span class=\"n\">a</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"bp\">_</span> <span class=\"err\">$</span> <span class=\"n\">mem_image_of_mem</span> <span class=\"n\">f</span> <span class=\"n\">ha</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">ball_image_of_ball</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>but Lean always applies <code>mem_image</code> before it, and for <code>∀ y ∈ f '' s, p y</code> it leads to worse results. I tried adding <code>@[simp, priority=20]</code> to <code>mem_image</code>, with no effect.</p>",
        "id": 180476873,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1573526597
    },
    {
        "content": "<p>I think <code>simp</code> simplifies starting at the leaves (atomic expressions) and then building up. So it will always simplify subexpressions of <code>t</code> before simplifying <code>t</code>. You probably get the desired behavior if you put the LHS of the above theorem in simp-normal form.</p>",
        "id": 180542751,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1573581492
    }
]