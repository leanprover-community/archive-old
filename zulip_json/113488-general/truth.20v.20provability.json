[
    {
        "content": "<p>I'm writing natnumgame docs and I am being forced to wade into the truth v provability issue. \"Proper mathematicians\" are notoriously bad at this sort of thing -- they read a popular article about Goedel once and then think they're an expert. I am talking about <code>P : Prop</code> being a true/false statement and <code>h : P</code> being a proof of <code>P</code>. But every mathematician knows that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">P\\implies Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.70733em;vertical-align:-0.024em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span> means \"If <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> is true then <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span> is true\", not \"if <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> is provable then <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span> is provable\". So my problem is that I need to justify the idea that <code>f : P -&gt; Q</code> means \"<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is a function from proofs of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> to proofs of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span>\" without exposing mathematician users to the possible confusion that they don't really understand truth and provability, but they are absolutely sure that they are not the same thing, and I am definitely talking about them as if they were. Can I argue that <code>h : P</code> means something like \"<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">h</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">h</span></span></span></span> is evidence for the truth of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span>\" or something? I'm sure this is all very well understood, but being a \"proper mathematician\" it's not very well understood by me ;-)</p>",
        "id": 180331726,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573333807
    },
    {
        "content": "<p>TPIL says this </p>\n<blockquote>\n<p>Some simplifications are possible, however. To start with, we can avoid writing the term Proof repeatedly by conflating Proof p with p itself. In other words, whenever we have p : Prop, we can interpret p as a type, namely, the type of its proofs. We can then read t : p as the assertion that t is a proof of p</p>\n</blockquote>",
        "id": 180332663,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1573335186
    },
    {
        "content": "<p>But then <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">P\\implies Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.70733em;vertical-align:-0.024em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span> is <em>not</em> a function from proofs of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> to proofs of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span>, at least not to a mathematician</p>",
        "id": 180332732,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573335269
    },
    {
        "content": "<p>I can isolate my confusion. LEM, which I am happy to assume as a mathematician, seems to say that for all P we can either find a proof of P or a proof of not P. So by \"proof\" this can't mean \"proof from the axioms of maths\", this must mean something more like \"proof that this is true in this specific model I'm looking at\"</p>",
        "id": 180332776,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573335341
    },
    {
        "content": "<p>Can't you just say it doesn't really matter. We just conflate provable and true, because they're the same thing in practice. I think of <code>p or not p</code> as a non constructive proof of the existence of a proof. Like, there is a proof, but I can't write one down. We don't mind that with reals.</p>",
        "id": 180332855,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1573335461
    },
    {
        "content": "<p>I can say \"it doesn't really matter\" to undergraduates but I am concerned about saying that to people like Emily Riehl, who have played my natural number game and know full well that this isn't true.</p>",
        "id": 180332928,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573335559
    },
    {
        "content": "<p>I usually think of \"proof\" as meaning \"proof from the axioms of maths\" and Goedel gives you statements which are true but not provable. Worse, statements like the continuum hypothesis can be easily formalised in Lean and these are true in some models of maths and false in others. LEM provides me with a \"proof\" of either one or the other, so \"proof\" must not mean \"proof from the axioms of maths\", it must means something more like \"proof that it's true in the model you're working in\"</p>",
        "id": 180333001,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573335648
    },
    {
        "content": "<p>An element s of a set S is _____ that S is nonempty.<br>\nA term <code>h : P</code> is _____ that <code>P</code> is true.</p>",
        "id": 180333026,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573335693
    },
    {
        "content": "<p>You should fill in the same word here. What that word is and what you think the word means might depend on your background</p>",
        "id": 180333044,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573335717
    },
    {
        "content": "<p>witness?</p>",
        "id": 180333098,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1573335759
    },
    {
        "content": "<p>An element of a set is a constructive proof from the axioms of maths that the set is non-empty. I'm not so sure that <code>h : P</code> is a constructive proof from the axioms of maths that the set is non-empty, because then I would be forced to reject Lean's LEM.</p>",
        "id": 180333211,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573335905
    },
    {
        "content": "<p>Why is an element of a set a constructive proof? By that logic, all sets are countable. So clearly not all elements of sets are constructive proofs.</p>",
        "id": 180333314,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1573336068
    },
    {
        "content": "<p>I thought the original issue was that both elements and sets belong to the object theory, while a proof is something in the metatheory, therefore an element cannot be a proof</p>",
        "id": 180333374,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573336127
    },
    {
        "content": "<p>The original issue is that Kevin doesn't understand Goedel properly.</p>",
        "id": 180333459,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573336238
    },
    {
        "content": "<p>I think the issue is that nobody invented a word for what <code>h : P</code> is, even though we all understand what it is.</p>",
        "id": 180333475,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1573336281
    },
    {
        "content": "<p>I just want to argue that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">P\\implies Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.70733em;vertical-align:-0.024em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟹</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span> can be thought of as a function from proofs of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">P</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> to proofs of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span>, when \"clearly\" it doesn't mean that at all, it is a true-false statement defined by some stupid truth table diagram corresponding to the four possibilities TT,TF,FT,FF.</p>",
        "id": 180333485,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573336309
    },
    {
        "content": "<p>I want to be able to explain that concept to people like me in such a way that they don't go \"wait a minute, we all know that truth isn't provability, how come these concepts are being conflated here?\"</p>",
        "id": 180333543,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573336349
    },
    {
        "content": "<p>and such people will not know the difference between a theory and a metatheory, but they might well know that CH is not provable.</p>",
        "id": 180333555,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573336385
    },
    {
        "content": "<p>OK so I'm up and running. If I notice that compilation has produced some errors but is still running, can I just ctrl-C and type <code>git bisect bad</code> and then go back to <code>git bisect run compile.sh</code>?</p>",
        "id": 180333656,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573336560
    },
    {
        "content": "<p>It suffices to provide a function from proofs of <code>p</code> to proofs of <code>q</code> to prove <code>p</code> implies <code>q</code>.</p>",
        "id": 180333785,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1573336707
    },
    {
        "content": "<p>You can't avoid using the word \"proof\" forever, given that <code>(h h' : P) -&gt; h = h'</code> is called \"proof irrelevance\" by everybody</p>",
        "id": 180333803,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573336802
    },
    {
        "content": "<p>Can't you just use the analogy, whilst saying it is only an analogy, and refer people to TPIL if they want some different explanation.</p>",
        "id": 180333877,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1573336913
    },
    {
        "content": "<p>TPIL says that <code>h : P</code> is the fact that <code>P</code> is true</p>",
        "id": 180334010,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1573337103
    },
    {
        "content": "<p>You could say something along the lines that a Prop is really just a Type for which Lean has the built-in knowledge that it has at most one element. We think of <code>P : Prop</code> as encoding the proposition that this type is inhabited and by convention we call a term <code>h : P</code> a \"proof\" of this proposition.</p>",
        "id": 180334079,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573337209
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Welcome to (classical) modal logic? <a href=\"https://plato.stanford.edu/entries/logic-provability/\" target=\"_blank\" title=\"https://plato.stanford.edu/entries/logic-provability/\">https://plato.stanford.edu/entries/logic-provability/</a></p>",
        "id": 180335706,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1573339714
    },
    {
        "content": "<p>As usual, logic is not essential to _do_ things, but it is useful and sometimes essential to _answer_ things<br>\n....</p>",
        "id": 180335868,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1573339938
    },
    {
        "content": "<p>ha ha I knew someone like you would be pointing me to that encyclopedia at some point :D Many thanks Francois!</p>",
        "id": 180336217,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573340530
    },
    {
        "content": "<p>Happy to help!(?)</p>",
        "id": 180336749,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1573341480
    },
    {
        "content": "<p>I think bringing in, and linking, the concepts of hypothetical proof and reasoning from hypotheses may help. Even classically, when doing a proof by contradiction, you eventually have to reason from hypotheses to derive a contradiction. So just as <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mo>:</mo><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\"> f : A \\to B </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> maps hypothetical elements of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\"> A </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">A</span></span></span></span> to elements of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\"> B </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>f</mi><mo>:</mo><mi>P</mi><mo>→</mo><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\"> f : P \\to Q </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span> maps hypothetical proofs of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\"> P </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> to proofs of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\"> Q </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span>, and we may well have more hypothetical proofs of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\"> P </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> than actual, canonical proofs. (And maybe throw in a link/reference to <em>What the Tortoise Said to Achilles</em>!)</p>",
        "id": 180354461,
        "sender_full_name": "Ulrik Buchholtz",
        "timestamp": 1573376276
    },
    {
        "content": "<p>But it is tricky,  as is illustrated by the story of Brouwer's Fan Theorem: It's an implication <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo>→</mo><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\"> P \\to Q </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo>≡</mo><mi mathvariant=\"normal\">∀</mi><mi>α</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∃</mi><mi>n</mi><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>α</mi><mo>ˉ</mo></mover><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\"> P \\equiv \\forall \\alpha, \\exists n, \\bar\\alpha(n) \\in V </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∃</span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.56778em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\">ˉ</span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>Q</mi><mo>≡</mo><mi mathvariant=\"normal\">∃</mi><mi>N</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∀</mi><mi>α</mi><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>α</mi><mo>ˉ</mo></mover><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\"> Q \\equiv \\exists N, \\forall \\alpha, \\bar\\alpha(N) \\in V </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">Q</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≡</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∃</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.56778em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\">ˉ</span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span></span></span></span>. (Here <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding=\"application/x-tex\"> P </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> is a decidable property of finite sequences of zeroes and ones, <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\"> \\alpha </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span> ranges over infinite sequences, and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mover accent=\"true\"><mi>α</mi><mo>ˉ</mo></mover><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> \\bar\\alpha(n) </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.56778em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.22222em;\">ˉ</span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span></span></span></span> is the initial <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\"> n </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span>-element subsequence of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\"> \\alpha </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span>.) So the theorem expresses the compactness of Cantor space (classically true), but Brouwer's “proof” proceeded by assuming that a hypothetical <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mo>:</mo><mi>P</mi></mrow><annotation encoding=\"application/x-tex\"> p : P </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span></span></span></span> could be brought into canonical form. Kleene later showed that the Fan Theorem fails in a computable model.</p>",
        "id": 180356224,
        "sender_full_name": "Ulrik Buchholtz",
        "timestamp": 1573378986
    },
    {
        "content": "<p>I think there are two questions here.  </p>\n<p>- Question 1, what is really happening logically here.  <br>\n- Question 2 is how to explain this to mathematicians without saying something false, but also not going down a logical rabbit hole.  </p>\n<p>I agree with others that TPIL does a fairly good job at the second problem, but you may feel otherwise.  As for the first problem, the advantage and pain of logic is that it has many valid interpretations.  Two broad categories are proof theory and model theory.  In proof theory, we think about this logical framework as pure symbol manipulation.  So if we have <code>hp : P</code> and <code>hpq : P -&gt; Q</code>, then we can create <code>hq : Q</code> via <code>hq := hpq hp</code>.  Now, one can just stick to the proof-theory viewpoint and say that all this is merely a symbolic contrivance which lets us treat <code>hpq : P -&gt; Q</code> as \"if it were a function\" which takes a proof/witness of <code>P</code> and turns it into a proof/witness of <code>Q</code>.  In other words, just think of it as a useful analogy that works.  </p>\n<p>One can also take a model theoretic viewpoint where we give a specific interpretation to all the symbols.  There are a number of models which probably work here.  (The picture is clear in my mind for classical first order logic, but I think an expert in categorical semantics might want to chime in to correct me here if I say anything slightly wrong.)  Now, one has to fix a model to interpret the meaning of all the types <code>A</code> and the meaning of <code>x : A</code>.  Then as for how to interpret <code>h : P</code> one still has multiple valid interpretations.  Now if one is working in constructive logic only, then one can interpret a proposition <code>P</code> as the set of all proofs of <code>P</code>, in which case <code>P</code> is only inhabited if it is provable.  Then <code>P -&gt; Q</code> is simultaneously the proofs of <code>P -&gt; Q</code> and all function from proofs of <code>P</code> to proofs of <code>Q</code>.  Now, there is still a sticking point of what it means for two proofs to be the same.  For example, if one just changes the variable names, is it the same proof?  One viewpoint is that all proofs are the same (equal) so there is at most one proof of a proposition.  This is proof irrelevance, and is consistent with the rest of constructive mathematics.  However, once one moves to classical logic, I don't know how well the \"<code>P</code> is the set of all proofs of <code>P</code>\" interpretation works, specifically for the reasons you mentioned.  (Actually, in Lean, since the logic is constructive but non-constructive axioms are added to the context, I think it makes sense to really say that the proposition <code>CH \\or \\not CH</code> is actually a different proposition that includes the full context.  In that case, it would still make sense to say that the full proposition including the context, something like <code>LEM -&gt; (CH \\or \\not CH)</code> can still be interpreted in this constructive propositions as types interpretation.  It would also explain why both <code>CH</code> and <code>\\not CH</code> could be empty but <code>LEM -&gt; (CH \\or \\not CH)</code> is not, even though it would be appear locally as <code>CH \\or \\not CH</code>.)   </p>\n<p>In classical logic, one can take a more standard model theoretic approach.  Fix a model of mathematics (something like a fixed model of the category of SET, but also taking into account universes, so a higher category of SET?  I really don't understand categorical logic!).  Then I think it would be consistent to interpret <code>P</code> as being inhabited with exactly one element if <code>P</code> is true in this model and uninhabited otherwise.  (Yes, \"truth\" makes sense here since every proposition, including CH is either true or false in this model.)  Then <code>hp : P</code> means that <code>hp</code> is that one element of <code>P</code> which witnesses that <code>P</code> is true.  It is probably best to call it a \"witness\" to the truth of <code>P</code>.  Since this interpretation is (hopefully) sound (it follows the rules of Lean's type theory), if there are witnesses <code>hp  : P</code> and <code>hpq: P -&gt; Q</code>, then <code>Q</code> is true in our model and <code>hpq hp</code> is a witness to that truth.</p>\n<p>I hope this helps, and that I didn't say anything too false or just confuse you more.</p>",
        "id": 180368429,
        "sender_full_name": "Jason Rute",
        "timestamp": 1573400963
    },
    {
        "content": "<p>one thing I absolutely want to stress here is that 99% of mathematicians have absolutely no idea what constructive logic is, and probably have never heard of the law of the excluded middle because it's obviously true. This means that I can't really say anything about constructive logic.</p>",
        "id": 180370649,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573404843
    },
    {
        "content": "<blockquote>\n<p>99% of mathematicians have absolutely no idea what constructive logic is</p>\n</blockquote>\n<p>More or less true (except that maybe about 5% or so of mathematicians are logicians, but that is still true of many logicians)</p>\n<blockquote>\n<p>and probably have never heard of the law of the excluded middle</p>\n</blockquote>\n<p>I find this doubtful.  I bet 75% of mathematicians or more have heard of the the law of excluded middle.</p>",
        "id": 180370825,
        "sender_full_name": "Jason Rute",
        "timestamp": 1573405168
    },
    {
        "content": "<p>Also, to be clear, that long explanation was not for you to share to the users of the natural number game, but for your understanding.  I find the better I understand something, the better I can know what I can brush under the rug without saying something completely false.</p>",
        "id": 180371067,
        "sender_full_name": "Jason Rute",
        "timestamp": 1573405518
    },
    {
        "content": "<p>Yes, I thoroughly appreciate the explanations you and Ulrik have posted. Many thanks to both of you!</p>",
        "id": 180371602,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573406470
    }
]