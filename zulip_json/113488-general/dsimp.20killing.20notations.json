[
    {
        "content": "<p>In </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">measure_theory.integral.interval_integral</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">topological_space</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">normed_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n          <span class=\"o\">[</span><span class=\"n\">complete_space</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">second_countable_topology</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n          <span class=\"o\">[</span><span class=\"n\">measurable_space</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">borel_space</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∫</span> <span class=\"n\">t</span> <span class=\"k\">in</span> <span class=\"n\">a..b</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">dsimp</span><span class=\"o\">,</span> <span class=\"c1\">-- new goal is: interval_integral f a b measure_theory.measure_space.volume</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>Does anyone understand why <code>dsimp</code> is killing the notation?</p>",
        "id": 260150294,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1635953127
    },
    {
        "content": "<p>Probably because it reduces <code>λ t, f t</code> to <code>f</code>.</p>",
        "id": 260150585,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1635953243
    },
    {
        "content": "<p>This sounds plausible indeed. Do you see any way to prevent that?</p>",
        "id": 260151284,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1635953522
    },
    {
        "content": "<p>Maybe we should add something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">notation</span> <span class=\"bp\">`∫</span><span class=\"n\">_</span><span class=\"bp\">`</span> <span class=\"n\">a</span> <span class=\"bp\">`..`</span> <span class=\"n\">b</span> <span class=\"bp\">`</span><span class=\"o\">,</span> <span class=\"bp\">`</span> <span class=\"n\">f</span> <span class=\"bp\">`</span> <span class=\"bp\">∂`</span> <span class=\"n\">μ</span><span class=\"o\">:</span><span class=\"mi\">70</span> <span class=\"o\">:=</span> <span class=\"n\">interval_integral</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">μ</span>\n<span class=\"kd\">notation</span> <span class=\"bp\">`∫</span><span class=\"n\">_</span><span class=\"bp\">`</span> <span class=\"n\">a</span> <span class=\"bp\">`..`</span> <span class=\"n\">b</span> <span class=\"bp\">`</span><span class=\"o\">,</span> <span class=\"bp\">`</span> <span class=\"n\">f</span><span class=\"o\">:</span><span class=\"mi\">70</span> <span class=\"o\">:=</span> <span class=\"n\">interval_integral</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">measure_theory.measure_space.volume</span>\n</code></pre></div>",
        "id": 260151808,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1635953705
    },
    {
        "content": "<p>Does <code>dsimp { beta := ff }</code> prevent it?</p>",
        "id": 260158212,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1635956231
    },
    {
        "content": "<p>It doesn't prevent it.</p>",
        "id": 260158374,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1635956300
    },
    {
        "content": "<p>Oh, I should have paid more attention to Floris's reduction: <code>dsimp {eta := ff}</code> prevents it.</p>",
        "id": 260158556,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1635956389
    }
]