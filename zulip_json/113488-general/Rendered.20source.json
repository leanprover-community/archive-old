[
    {
        "content": "<p>We periodically discuss the idea of having html file showing the source files together with links to definitions and tactic state information, see for instance <a href=\"#narrow/stream/113488-general/topic/_theory.20top.20folders\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/_theory.20top.20folders</a> for a recent discussion, and <a href=\"https://agda.github.io/agda-stdlib/Algebra.Structures.html\">https://agda.github.io/agda-stdlib/Algebra.Structures.html</a> for an Agda source file rendered with links (but no tactic state). In principle <a href=\"https://github.com/cpitclaudel/alectryon/\">Alectryon</a> should be a natural starting point. But it uses <code>lean --server</code> which is meant for editor integration and is awfully unreliable for this purpose. Running alectryon on a Lean 3 file has a rather low probability of success when it comes to displaying tactic state. Note that <a href=\"https://github.com/leanprover-community/lean-client-python\">lean-client-python</a> is not more successful, it will also randomly fail (either reporting excessive memory consumption or not returning anything). </p>\n<p>Of course the standard answer to all this is that we should wait for Lean 4. But I think we are missing opportunities. I have quite a few propaganda talks to give in the near future and it's really a shame that we can't tell people they can inspect  Lean proofs in a webpage. Even during talks, I always want to show how nice it is to be able to jump to definitions, but it actually isn't because you need to wait for orange bars to be able to jump (and of course there is also a risk that Lean will jump to a tactic definition instead of the definition you asked for...). </p>\n<p>It's hard to believe that we can have a powerful mathport tool but we can't produce this kind of webpage. I understand that expert time is very scarce. But I'd like to read what <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> and <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> think about how hard it would be to get something that works, either by hacking Lean3 some more or using the existing pipeline (maybe <code>lean --ast</code>?).</p>",
        "id": 275362233,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647345277
    },
    {
        "content": "<p>The AST output doesn't contain tactic states, but that seems relatively easy to add: <a href=\"https://github.com/leanprover-community/lean/pull/681\">https://github.com/leanprover-community/lean/pull/681</a></p>",
        "id": 275362366,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1647345351
    },
    {
        "content": "<p>I have no idea how good the tactic states are that Daniel picked (since you mention that the alectryon version is highly unreliable).</p>",
        "id": 275362577,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1647345518
    },
    {
        "content": "<p>Alectryon uses <code>--server</code> just for tactic states; with this new patch (which I didn't know was a possibility!) it could easily be reworked to use that.  It's also much faster, because the <code>--server</code> call is single-threaded (or at least very blocking), due to how the threading model of the lean server works</p>",
        "id": 275362768,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647345610
    },
    {
        "content": "<p>After quite a lot of experimentation, I'm convinced that anything that uses <code>lean --server</code> for this purpose won't be reliable.</p>",
        "id": 275363050,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647345781
    },
    {
        "content": "<p>That patch by Daniel doesn't seem to be related to the server, so I'm optimistic</p>",
        "id": 275363114,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647345828
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"230999\">@Daniel Selsam</span> what do you think? Could you reopen that PR?</p>",
        "id": 275363216,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647345885
    },
    {
        "content": "<p>Eric, do you think you understand alectryon enough to be able to add those missing features? Note that alectryon is also missing links to definitions.</p>",
        "id": 275363361,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647345972
    },
    {
        "content": "<p>Note that it is easy to get information about location of declaration after the fact, as long as we have fully qualified names, because this can be asked using Lean metaprogramming, without using the server.</p>",
        "id": 275363414,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647346025
    },
    {
        "content": "<p>for FQNs yes, we can use the docgen style</p>",
        "id": 275363447,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647346048
    },
    {
        "content": "<p>but in actual code I think it's much much harder</p>",
        "id": 275363466,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647346059
    },
    {
        "content": "<p>I think most constant nodes now contain a fully-qualified name in the AST (there were some recent changes here to support mathport).</p>",
        "id": 275363657,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1647346195
    },
    {
        "content": "<p>that's amazing, so this could also be done as a post-processing step (one per file, but still). I guess you'd have to make a file with the required imports and get the links from the FQNs there</p>",
        "id": 275363775,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647346259
    },
    {
        "content": "<p>I'm not fully sure how the doc-gen approach works, mind, but I just know it does :b</p>",
        "id": 275363833,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647346300
    },
    {
        "content": "<p>I guess doc-gen does the same thing leancrawler does: create a lean file importing everything and simply iterate on the environment.</p>",
        "id": 275363920,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647346343
    },
    {
        "content": "<p>This is also what the blueprint framework does.</p>",
        "id": 275363939,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647346359
    },
    {
        "content": "<p>the \"issue\" is that alectryon works on a per-file model</p>",
        "id": 275364591,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647346790
    },
    {
        "content": "<p>so I think we could use the doc-gen style where each FQN gets its own page that redirects to where it actually is</p>",
        "id": 275364662,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647346808
    },
    {
        "content": "<p>and then we can just say that the FQN links to <code>website/find/FQN</code></p>",
        "id": 275364692,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647346829
    },
    {
        "content": "<p>In the worst case we could simply need a post-processing pass on generated html file, replacing dummy urls written by alectryon. We also need alectryon to put anchors. But modifying the HTML template is not the difficult part of course.</p>",
        "id": 275366440,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647347818
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Rendered.20source/near/275363216\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"230999\">Daniel Selsam</span> what do you think? Could you reopen that PR?</p>\n</blockquote>\n<p>With that commit enabled, and <a href=\"https://github.com/dselsam/mathport/commit/1e46c138f85a0be0d3c36410434b1fad10fc04cd\">this commit</a> on the mathport side, and then a little more lean4 code that processes the mathport dump, one can enumerate (tactic-start-pos, tactic-end-pos, tactic-state) triples. The export includes data at multiple granularities, e.g. <code>tacA ; tacB</code> will induce <code>tacA ; tacB</code>, <code>tacA</code> and <code>tacB</code> so there is a design decision about how to handle the overlaps.</p>",
        "id": 275378715,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1647353920
    },
    {
        "content": "<p>the alectryon design decision on tactic combinators was just to just show the result after all the combinators, so I guess this could be carried forward</p>",
        "id": 275378985,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647354037
    },
    {
        "content": "<p>Daniel, what do you mean by \"commit enabled\"? Do you mean we should use a fork of lean3? Or could you reopen that PR and add a flag so that tactic state isn't exported by default?</p>",
        "id": 275381185,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647355056
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Rendered.20source/near/275381185\">said</a>:</p>\n<blockquote>\n<p>Daniel, what do you mean by \"commit enabled\"? Do you mean we should use a fork of lean3? Or could you reopen that PR and add a flag so that tactic state isn't exported by default?</p>\n</blockquote>\n<p>If the plan sounds good, I will PR the feature. The change I made is tiny, it will be more code to weave a flag through.</p>",
        "id": 275382122,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1647355428
    },
    {
        "content": "<p>is it worth benchmarking the performance difference?</p>",
        "id": 275382209,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647355447
    },
    {
        "content": "<p>The reason I wanted a flag because it generates a lot more json output and the ast files already take half a gigabyte.</p>",
        "id": 275382266,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1647355473
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> I am happy to PR the feature to Lean3, to PR the sister commit to mathport, and to write a Lean4 script that enumerates those triples.</p>",
        "id": 275382471,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1647355558
    },
    {
        "content": "<p>(But I am fine with enabling it by default if the size increase and extra runtime turns out to be reasonable.)</p>",
        "id": 275382473,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1647355559
    },
    {
        "content": "<p>That would be really nice.</p>",
        "id": 275386450,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647357215
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110043\">Gabriel Ebner</span> <a href=\"#narrow/stream/113488-general/topic/Rendered.20source/near/275362366\">said</a>:</p>\n<blockquote>\n<p>The AST output doesn't contain tactic states, but that seems relatively easy to add: <a href=\"https://github.com/leanprover-community/lean/pull/681\">https://github.com/leanprover-community/lean/pull/681</a></p>\n</blockquote>\n<p>The AST output already includes tactic states, in the sense of having structured tactic state objects with the exact expression, associated to the span of each tactic application. This PR was only about pretty printing those states.</p>",
        "id": 275408520,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647366023
    },
    {
        "content": "<p>Does this help you if you want to print it to a web page?  (Serious question.  The AST format does not have much documentation, and pretty-printing the JSON gets you loads of opaque numeric references.)</p>",
        "id": 275410781,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1647366802
    },
    {
        "content": "<p>I mean I see the following in the JSON file, but it doesn't really help me:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">\"decl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s2\">\"nat\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s2\">\"div_eq_sub_mod_div\"</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">\"goals\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"s2\">\"_fresh\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"mi\">803</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"mi\">138642</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"nt\">\"pp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"m\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">39601</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"s2\">\"_fresh\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"mi\">803</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"mi\">138643</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"nt\">\"pp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"n\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">39601</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"s2\">\"_fresh\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"mi\">810</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"mi\">34738</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"nt\">\"pp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"n0\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">              </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">62105</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"mi\">62120</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 275411129,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1647366921
    },
    {
        "content": "<p>Apparently the numbers are indices in the expr array, which contains a serialized version of the expression like in the textual export.  No wonder the AST files are so huge...</p>",
        "id": 275411742,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1647367107
    },
    {
        "content": "<p>I also stared at the ast output without being able to decide whether it would be possible to do use it for this purpose. Mario, do you have some documentation to share?</p>",
        "id": 275425277,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647373297
    },
    {
        "content": "<p>i think the expr array can largely be ignored for this purpose</p>",
        "id": 275434395,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647377991
    },
    {
        "content": "<p>especially with Daniel's pp patch</p>",
        "id": 275434466,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647378006
    },
    {
        "content": "<p>Mario, is there any documentation about the <code>lean --ast</code> output apart from reading the source code of lean3 and mathport?</p>",
        "id": 275570433,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647461381
    },
    {
        "content": "<p><a href=\"https://hackmd.io/8Dr1Me6DSGaoUeuqFd3ZmA\">https://hackmd.io/8Dr1Me6DSGaoUeuqFd3ZmA</a></p>",
        "id": 275570607,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647461465
    },
    {
        "content": "<p>is an outdated one</p>",
        "id": 275570614,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647461468
    },
    {
        "content": "<p>This is a nice find but indeed it claims to be 9 months old...</p>",
        "id": 275570707,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647461524
    },
    {
        "content": "<p>that's when the exporter was written</p>",
        "id": 275570753,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647461547
    },
    {
        "content": "<p>There is also some documentation on the PR/commit that added the ast feature <a href=\"https://github.com/leanprover-community/lean/pull/608\">lean#608</a></p>",
        "id": 275571180,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647461664
    },
    {
        "content": "<p>But indeed, writing a proper documentation has been on my todo list for a while and I have a half written doc on my computer that I need to get back to</p>",
        "id": 275571367,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647461704
    },
    {
        "content": "<p>That could be very useful.</p>",
        "id": 275571535,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647461781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> Like I said a while ago, the ast files can actually replace tlean in the sense that they contain all the same information. Expressions are stored as actual parsed data structures, which is why you have a bunch of numbers. Pretty printing these expressions is nontrivial because you would have to replicate lean 3's pretty printing functionality, but if you are running inside lean 3 itself then you can deserialize the expressions and pretty print them using lean 3's pretty printer</p>",
        "id": 275571870,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647461984
    },
    {
        "content": "<p>I guess for rendered source you might want more than plain pretty printing anyway since you want things like declaration links</p>",
        "id": 275572222,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647462186
    },
    {
        "content": "<p>it would be great if there was a way for lean to be able to produce this information on demand instead of just dumping giant files to be read by docgen</p>",
        "id": 275572343,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1647462254
    },
    {
        "content": "<p>Clearly we are missing a lot of tooling, and I hope the situation will improve with Lean 4. Our traditional hack is to hack the editor integration framework, but this really doesn't work (at least nobody managed to make it work). My new hope is to hack the porting infrastructure, but this is still a hack.</p>",
        "id": 275572855,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647462523
    },
    {
        "content": "<p>I don't know which language we should be using to produce rendered source code. Using Lean3 indeed gives access to the pretty-printer, and Ed also had great success in his widget framework to render stuff. Using Lean4 has the advantage that mathport is already written in Lean4 so we could try to start from there. We could also use a completely different language reading the json file.</p>",
        "id": 275573091,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647462658
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  not sure if you still wanted these features but FYI:</p>\n<ul>\n<li>lean3 PR: <a href=\"https://github.com/leanprover-community/lean/pull/702\">https://github.com/leanprover-community/lean/pull/702</a></li>\n<li>mathport PR: <a href=\"https://github.com/leanprover-community/mathport/pull/136\">https://github.com/leanprover-community/mathport/pull/136</a></li>\n</ul>\n<p>Here is a Python script to build the data from the AST files exported from lean (when <code>--tspp</code> flag is passed):</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n<span class=\"kn\">import</span> <span class=\"nn\">jsonlines</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">()</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--in-dir\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"directory to crawl\"</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"--out\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"output file\"</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n<span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">jsonlines</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">out</span><span class=\"p\">,</span> <span class=\"s2\">\"w\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">dirname</span><span class=\"p\">,</span> <span class=\"n\">files</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">walk</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">in_dir</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">files</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">\".ast.json\"</span><span class=\"p\">):</span>\n            <span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">)))</span>\n            <span class=\"k\">if</span> <span class=\"s2\">\"tactics\"</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"k\">continue</span>\n            <span class=\"k\">for</span> <span class=\"n\">tactic</span> <span class=\"ow\">in</span> <span class=\"n\">doc</span><span class=\"p\">[</span><span class=\"s2\">\"tactics\"</span><span class=\"p\">]:</span>\n                <span class=\"c1\"># {'ast': 46, 'end': 1, 'start': 0, 'success': True}</span>\n                <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">tactic</span><span class=\"p\">[</span><span class=\"s2\">\"success\"</span><span class=\"p\">]:</span> <span class=\"k\">continue</span>\n                <span class=\"k\">if</span> <span class=\"n\">tactic</span><span class=\"p\">[</span><span class=\"s2\">\"start\"</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">tactic</span><span class=\"p\">[</span><span class=\"s2\">\"end\"</span><span class=\"p\">]:</span> <span class=\"k\">continue</span>\n                <span class=\"k\">if</span> <span class=\"n\">tactic</span><span class=\"p\">[</span><span class=\"s2\">\"ast\"</span><span class=\"p\">]</span> <span class=\"o\">&gt;=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">[</span><span class=\"s2\">\"ast\"</span><span class=\"p\">]):</span> <span class=\"k\">continue</span>\n                <span class=\"n\">tac_ast</span> <span class=\"o\">=</span> <span class=\"n\">doc</span><span class=\"p\">[</span><span class=\"s2\">\"ast\"</span><span class=\"p\">][</span><span class=\"n\">tactic</span><span class=\"p\">[</span><span class=\"s2\">\"ast\"</span><span class=\"p\">]]</span>\n                <span class=\"c1\"># {'children': [47], 'end': [17, 13], 'kind': 'tactic', 'pexpr': 62, 'start': [17, 3], 'value': 'by_cases'}</span>\n                <span class=\"k\">if</span> <span class=\"s2\">\"end\"</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">tac_ast</span><span class=\"p\">:</span> <span class=\"k\">continue</span>\n                <span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">({</span>\n                   <span class=\"s2\">\"filename\"</span> <span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">relpath</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">[:</span><span class=\"o\">-</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"s2\">\"ast.json\"</span><span class=\"p\">)]</span> <span class=\"o\">+</span> <span class=\"s2\">\"lean\"</span><span class=\"p\">),</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">in_dir</span><span class=\"p\">),</span>\n                    <span class=\"s2\">\"start_pos\"</span> <span class=\"p\">:</span><span class=\"n\">tac_ast</span><span class=\"p\">[</span><span class=\"s2\">\"start\"</span><span class=\"p\">],</span>\n                    <span class=\"s2\">\"end_pos\"</span> <span class=\"p\">:</span> <span class=\"n\">tac_ast</span><span class=\"p\">[</span><span class=\"s2\">\"end\"</span><span class=\"p\">],</span>\n                    <span class=\"s2\">\"start_pp\"</span> <span class=\"p\">:</span> <span class=\"n\">doc</span><span class=\"p\">[</span><span class=\"s2\">\"tspps\"</span><span class=\"p\">][</span><span class=\"n\">tactic</span><span class=\"p\">[</span><span class=\"s2\">\"start\"</span><span class=\"p\">]],</span>\n                    <span class=\"s2\">\"end_pp\"</span> <span class=\"p\">:</span> <span class=\"n\">doc</span><span class=\"p\">[</span><span class=\"s2\">\"tspps\"</span><span class=\"p\">][</span><span class=\"n\">tactic</span><span class=\"p\">[</span><span class=\"s2\">\"end\"</span><span class=\"p\">]]</span>\n                <span class=\"p\">})</span>\n</code></pre></div>\n<p>It produces a <code>jsonl</code> file with lines like:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"nt\">\"filename\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"init/meta/well_founded_tactics.lean\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start_pos\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">17</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"end_pos\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">17</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"start_pp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"a : ℕ,\\nthis : 0 &lt; a + 1\\n⊢ 0 &lt; 1 + a\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"end_pp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"a : ℕ,\\nthis : 0 &lt; a + 1\\n⊢ 0 &lt; a + 1\"</span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>If you want the tactic text itself, it can be extracted from the source files using the <code>start_pos</code> and <code>end_pos</code> information.</p>",
        "id": 275604189,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1647488230
    },
    {
        "content": "<p>Yes, I'm very much still interested, thanks a lot Daniel. I'll process this message as soon as I'll be able to find one hour (probably not today).</p>",
        "id": 275611680,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647498256
    },
    {
        "content": "<p>I've managed to use the new pretty-printed tactic state export to fix Alectryon rendering of one of my file where Alectryon couldn't find any tactic state. This is already great. But what would make it actually useful would be to add the \"jump to definition\" feature. However it seems that the ast exporter doesn't always keep track of full names. For instance, assume that <code>test.lean</code> contains </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">nat</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">exact</span> <span class=\"n\">succ_ne_zero</span> <span class=\"n\">n</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>then, using lean 3.42.1, <code>lean --ast --tspp --tsast test.lean</code> produces a json file which contains no indication that <code>succ_ne_zero</code> is <code>nat.succ_ne_zero</code>. Note that this work in term mode:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">nat</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"n\">succ_ne_zero</span> <span class=\"n\">n</span>\n</code></pre></div>\n<p>has all the information. <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span class=\"user-mention\" data-user-id=\"230999\">@Daniel Selsam</span> is there any hope to fix this? I guess it would also help mathport.</p>",
        "id": 277650967,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1649006760
    },
    {
        "content": "<p>The <code>expr</code> associated to that syntax should contain a reference to the constant <code>nat.succ_ne_zero</code>, but this connection is not always easy to trace through. I think <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> added some additional support for tracking name resolution for use in mathport?</p>",
        "id": 277681705,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649047986
    },
    {
        "content": "<p>I don't think it contains any such reference:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"nt\">\"ast\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"err\">No</span><span class=\"kc\">ne</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"file\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"imports\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"commands\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"open\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"group\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ident\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"nat\"</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">17</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"example\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"binders\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"vars\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"binder_0\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ident\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"n\"</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"notation\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"exprℕ\"</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ident\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"n\"</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"nat\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"1\"</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"notation\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"expr + \"</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"nat\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"0\"</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"notation\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"expr ≠ \"</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"begin\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">79</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">20</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"tactic\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">57</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"exact\"</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">24</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"parse\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">54</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ident\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">49</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"succ_ne_zero\"</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ident\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">51</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"n\"</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">21</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"app\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">52</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">23</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"expr\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"children\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">18</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"notation\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">80</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"begin\"</span><span class=\"p\">}],</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">\"comments\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">\"expr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"err\">No</span><span class=\"kc\">ne</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"nat\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"local\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"bi\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"n\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"pp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"n\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"1\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"s2\">\"has_add\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"add\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"0\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"ne\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"s2\">\"interactive\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"executor\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"execute_explicit\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"tactic\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"s2\">\"has_bind\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"seq\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"s2\">\"has_bind\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"seq\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"s2\">\"tactic\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"save_info\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"_\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"4\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">17</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">18</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"0\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">19</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"annotation\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">21</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"anonymous_constructor\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"s2\">\"has_bind\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"seq\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"s2\">\"has_bind\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"seq\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"s2\">\"tactic\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"save_info\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"_\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"5\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">28</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">29</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"2\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">30</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">31</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"annotation\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">32</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"anonymous_constructor\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">27</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">33</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">26</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">34</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"s2\">\"tactic\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"istep\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"5\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">36</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">37</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"2\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">38</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">39</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"5\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">40</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">41</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"2\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">42</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"19\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">44</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">45</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"s2\">\"tactic\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"interactive\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"exact\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"_\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"local\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"bi\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"succ_ne_zero\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"pp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"succ_ne_zero\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">48</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"_\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"local\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"bi\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"n\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"pp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"n\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">49</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">51</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"expr_quote_macro\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"reflected\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"err\">False</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">52</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"annotation\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">53</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"as_is\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">47</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">54</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">46</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">55</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">35</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">56</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">25</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">57</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"s2\">\"tactic\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"save_info\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"_\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"6\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">60</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">61</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"1\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">62</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">63</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"annotation\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">64</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"anonymous_constructor\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">59</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">65</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">58</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">66</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">24</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">67</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">68</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"s2\">\"tactic\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"save_info\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"const\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[[</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"_\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[]]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"6\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">71</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">72</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"prenum\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\"> </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"0\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">73</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">74</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"annotation\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">75</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"anonymous_constructor\"</span><span class=\"p\">}},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">70</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">76</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">69</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">77</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"app\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">78</span><span class=\"p\">]},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"annotation\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"args\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">79</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"by\"</span><span class=\"p\">}}],</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">\"file\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"nt\">\"level\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"0\"</span><span class=\"p\">]}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 277687346,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1649054114
    },
    {
        "content": "<p>The only places where <code>succ_ne_zero</code> are mentioned are:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"w\">  </span><span class=\"p\">{</span><span class=\"nt\">\"end\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"kind\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ident\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"pexpr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">49</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"succ_ne_zero\"</span><span class=\"p\">},</span><span class=\"w\"></span>\n</code></pre></div>\n<p>in the ast section, and then the referenced expr, number 49, which is:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"nt\">\"local\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"nt\">\"bi\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"succ_ne_zero\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"pp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"succ_ne_zero\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">48</span><span class=\"p\">}},</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 277687544,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1649054322
    },
    {
        "content": "<p>hm, there is an optional <code>expr</code> field on ast nodes which supplies the elaborated expression associated to a piece of syntax, but it is not being attached in the majority of cases, it looks like. This was a low priority for mathport so I think it got left by the wayside</p>",
        "id": 277711937,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649068702
    },
    {
        "content": "<p>Do you think you could easily fix this? Or would it be too much work and you prefer to focus on mathport or other things?</p>",
        "id": 277712882,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1649069312
    },
    {
        "content": "<p>Why would <code>succ_ne_zero</code> be a local and not a const?</p>",
        "id": 277931499,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1649186645
    },
    {
        "content": "<p>it's a local in the pexpr, probably because it wasn't resolved immediately?</p>",
        "id": 277931623,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649186711
    },
    {
        "content": "<p>if it's in <code>exact</code> then we don't know at parse time whether it's going to refer to a local variable in the context</p>",
        "id": 277931700,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649186757
    },
    {
        "content": "<p>I've got a debug loop set up to sort this out but I don't know where the relevant <code>ast_data</code> is set for the the \"ident\" type.</p>",
        "id": 277939904,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1649191052
    },
    {
        "content": "<p>not sure what you mean</p>",
        "id": 277940377,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649191278
    },
    {
        "content": "<p>Like the problem is that the ast json is only emitting the pexpr identifier that hasn't been resolved yet?</p>",
        "id": 277940616,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1649191390
    },
    {
        "content": "<p>yes, that part is working as intended</p>",
        "id": 277940815,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649191488
    },
    {
        "content": "<p>But Patrick wants the resolved name</p>",
        "id": 277940844,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1649191509
    },
    {
        "content": "<p>what isn't being done yet is the association of the resolved expression once elaboration of that pexpr completes</p>",
        "id": 277940868,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649191526
    },
    {
        "content": "<p>I don't think you need to worry about the \"ident\" token itself</p>",
        "id": 277940915,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649191561
    },
    {
        "content": "<p>the trick that is used to track the ast_data in pexprs is the \"tag\" field which you can get with <code>get_tag(e)</code></p>",
        "id": 277941143,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649191669
    },
    {
        "content": "<p>or <code>parser::get_id(e)</code></p>",
        "id": 277941235,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649191702
    },
    {
        "content": "<p>It's not totally clear to me but I think what Patrick wants is to take a position in code and use the  <code>\"ast\"</code> emitted json to figure out what the resolved name is of  the identifier to get <code>nat.succ_ne_asdf</code></p>",
        "id": 277941263,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1649191727
    },
    {
        "content": "<p>and ast nodes can have <code>expr</code> fields as well as <code>pexpr</code> fields.</p>",
        "id": 277941320,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1649191762
    },
    {
        "content": "<p>they already do</p>",
        "id": 277941332,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649191768
    },
    {
        "content": "<p>the <code>expr</code> field is just not set most of the time</p>",
        "id": 277941353,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649191779
    },
    {
        "content": "<p>so the fix here is to find suitable places in the elaborator where an expr is \"done\" and attach it to the ast_data as given by <code>get_id(pexpr)</code></p>",
        "id": 277941479,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649191828
    },
    {
        "content": "<p>ok the suitable places here are: whenever name resolution finishes</p>",
        "id": 277941537,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1649191871
    },
    {
        "content": "<p>sure, but in the elaborator that's mixed in with everything else</p>",
        "id": 277941566,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649191893
    },
    {
        "content": "<p>oof</p>",
        "id": 277941569,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1649191900
    },
    {
        "content": "<p>there must be like a method called 'resolve name' or something</p>",
        "id": 277941588,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1649191917
    },
    {
        "content": "<p>I was thinking more like <code>elaborate(e)</code></p>",
        "id": 277941744,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649192000
    },
    {
        "content": "<p>the input is a pexpr and the output is an expr , so you can just take the tag of the input pexpr and attach the output expr to the ast_data</p>",
        "id": 277941797,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649192040
    },
    {
        "content": "<p>and in  the end you will get an <code>expr.const</code> associated to that pexpr local</p>",
        "id": 277941889,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649192078
    },
    {
        "content": "<p>with the resolved name in it</p>",
        "id": 277941899,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649192084
    },
    {
        "content": "<p>Almost there, with <code>parser::set_ast_expr</code> and <code>parser::get_id</code>, but <code>parser::elaborate</code> already calls this, so I guess <code>set_ast_expr</code> also needs to be called within <code>elaborator::elaborate</code> too. I'm not sure how to get parser's state from inside the elaborator.</p>",
        "id": 277956990,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1649200643
    },
    {
        "content": "<p>something similar needed to be done to get the parser AST data accessible to tactics, which run during elaboration</p>",
        "id": 277957410,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649200984
    },
    {
        "content": "<p>since tactics have to push their tactic states to the \"tactics\" array</p>",
        "id": 277957427,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649201006
    },
    {
        "content": "<p>this is the <code>scope_tactic_log</code> value in <code>elaborate_proof</code>, which puts the tactic log in a thread local that is picked up in <code>log_tactic</code></p>",
        "id": 277957622,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649201171
    },
    {
        "content": "<p><code>elaborate_proof</code> has a whole bunch of arguments that are all passed by value because the caller puts all that data in a closure as part of a \"proof elaboration\" task that can outlive the parser itself</p>",
        "id": 277957956,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649201439
    },
    {
        "content": "<p>I'm starting to remember why I didn't implement this in the first pass</p>",
        "id": 277958119,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649201591
    }
]