[
    {
        "content": "<p>This gives a deterministic timeout for me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.polynomial.basic</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">F</span><span class=\"o\">]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">5</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">X</span> <span class=\"bp\">*</span> <span class=\"n\">X</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"mi\">4</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">X</span> <span class=\"bp\">*</span> <span class=\"n\">X</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">convert</span> <span class=\"n\">h</span> <span class=\"n\">using</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>Can someone reproduce it and/or explain it?</p>",
        "id": 217843736,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1606278831
    },
    {
        "content": "<p>Without trying to reproduce this, this is probably related to <a href=\"https://github.com/leanprover-community/mathlib/issues/4678\">#4678</a>, and the reason is that <code>convert</code> tries to apply <code>refl</code> (which likely fails, but causes a lot of unfolding).</p>",
        "id": 217844162,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1606279474
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 217844386,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1606279819
    }
]