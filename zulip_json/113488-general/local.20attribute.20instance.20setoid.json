[
    {
        "content": "<p>Some parts of the library define non-canonical setoids (e.g., <a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_space.separation_setoid\">docs#uniform_space.separation_setoid</a> or <a href=\"https://leanprover-community.github.io/mathlib_docs/find/path.homotopic.setoid\">docs#path.homotopic.setoid</a>) then use <code>local attribute [instance] *setoid</code> to deal with the corresponding quotients.</p>",
        "id": 269894530,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643497421
    },
    {
        "content": "<p>I don't like this design choice for the following reason: once you want to deal with two non-canonical setoids on a space, you just can't do it.</p>",
        "id": 269894594,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643497493
    },
    {
        "content": "<p>better yet, remove <code>setoid</code> and <code>quotient</code> taking it as a type class altogether</p>",
        "id": 269894623,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643497544
    },
    {
        "content": "<p>I don't think it's ever done me any favors</p>",
        "id": 269894662,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643497563
    },
    {
        "content": "<p>This way we loose <code>[[x]]</code>, what else?</p>",
        "id": 269894679,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643497590
    },
    {
        "content": "<p>not necessarily; you could still have <code>quotient.mk {A} {r : A -&gt; A -&gt; Prop} {h : equivalence r} : A -&gt; quotient A r</code></p>",
        "id": 269894706,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643497650
    },
    {
        "content": "<p>Would it possible for the relation in question to be inferred from the expected type of <code>[[x]]</code>, rather than the type of <code>x</code>?</p>",
        "id": 269894710,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643497656
    },
    {
        "content": "<p>it would often not be usable because it has to infer the type from the outside but I think that's par for the course</p>",
        "id": 269894722,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643497678
    },
    {
        "content": "<p>Actually, we can use <code>quot.mk</code> and have an argument <code>[is_equivalence α r]</code> in some lemmas.</p>",
        "id": 269894773,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643497711
    },
    {
        "content": "<p>not to mention that best practice is to alias <code>quot.mk</code> for each individual quotient anyway</p>",
        "id": 269894774,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643497713
    },
    {
        "content": "<p>Adding aliases for <code>quot.mk</code> is what I was going to propose.</p>",
        "id": 269894789,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643497741
    },
    {
        "content": "<p>(side note: am I right that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pseudo_metric.dist_setoid\">docs#pseudo_metric.dist_setoid</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_space.separation_setoid\">docs#uniform_space.separation_setoid</a> are equivalent?)</p>",
        "id": 269894878,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643497858
    },
    {
        "content": "<p>What's the advantage of removing <code>setoid</code> instead of just making it a non-<code>class</code>?</p>",
        "id": 269896641,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1643500312
    },
    {
        "content": "<p>It's not very useful on its own, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equivalence\">docs#equivalence</a> and/or <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_equiv\">docs#is_equiv</a> seem to be reasonable replacements</p>",
        "id": 269896696,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643500373
    },
    {
        "content": "<p>We have some theory of bundled setoids but I think that we should use <code>quot.*</code> + <code>[is_equiv α r]</code> in lemmas that need <code>r</code> to be an equivalence relation + instances <code>[is_equiv]</code> for <code>setoid</code> (no longer a typeclass), <code>con</code> etc.</p>",
        "id": 269896807,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643500529
    },
    {
        "content": "<p>Right, I had the lattice structures on bundled setoids in mind</p>",
        "id": 269896886,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1643500623
    },
    {
        "content": "<p>(Just to remark that Leo recently changed setoid in lean 4 not to be a class IIRC)</p>",
        "id": 269896901,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1643500653
    },
    {
        "content": "<p>Isn't <code>[is_equiv α r]</code> going to run into the same problems as <code>[is_monoid_hom f]</code> did?</p>",
        "id": 269896978,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1643500745
    },
    {
        "content": "<p>It's not like there are a lot of equivalence combinators</p>",
        "id": 269897211,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1643500942
    },
    {
        "content": "<p>Usually it will find a high priority instance for this particular relation.</p>",
        "id": 269901567,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643506537
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/113488-general/topic/local.20attribute.20instance.20setoid/near/269894530\">said</a>:</p>\n<blockquote>\n<p>Some parts of the library define non-canonical setoids (e.g., <a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_space.separation_setoid\">docs#uniform_space.separation_setoid</a> or <a href=\"https://leanprover-community.github.io/mathlib_docs/find/path.homotopic.setoid\">docs#path.homotopic.setoid</a>) then use <code>local attribute [instance] *setoid</code> to deal with the corresponding quotients.</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/pull/11728\">#11728</a> does precisely that and I don't like it either.</p>",
        "id": 269915386,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643525420
    },
    {
        "content": "<p>Then why don't you use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/quotient.mk'\">docs#quotient.mk'</a> etc?</p>",
        "id": 269915949,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643526153
    },
    {
        "content": "<p>Because there is still missing API or am I getting confused?</p>",
        "id": 269916540,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643526998
    },
    {
        "content": "<p>For example, we don't have the primed version of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/quotient.inhabited\">docs#quotient.inhabited</a>.</p>",
        "id": 269916547,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643527014
    },
    {
        "content": "<p>Does the unprimed version really not match in the case you have in mind?</p>",
        "id": 269961358,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1643581307
    },
    {
        "content": "<p>You can change the unprimed version to use <code>{sa : setoid α}</code> in this case.</p>",
        "id": 269961432,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643581390
    },
    {
        "content": "<p>It doesn't <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 269961435,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643581391
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/113488-general/topic/local.20attribute.20instance.20setoid/near/269961432\">said</a>:</p>\n<blockquote>\n<p>You can change the unprimed version to use <code>{sa : setoid α}</code> in this case.</p>\n</blockquote>\n<p>Sniped</p>",
        "id": 269961439,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643581402
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/local.20attribute.20instance.20setoid/near/269894774\">said</a>:</p>\n<blockquote>\n<p>not to mention that best practice is to alias <code>quot.mk</code> for each individual quotient anyway</p>\n</blockquote>\n<p>I think it would be nice to have <code>[[...]]</code> as a notation typeclass, as a universal constructor these aliases (for those types that opt in).</p>",
        "id": 269962421,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1643582581
    }
]