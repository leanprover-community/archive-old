[
    {
        "content": "<p>in <a href=\"https://github.com/leanprover-community/flt-regular/blob/94d42b688da75450b99517fe4f5be6db0ee5bf32/src/number_theory/cyclotomic/cyclotomic_units.lean#L226\">here</a>, I seem to be running into a lot of problems with typeclasses; the thing seems to work, if pushed, but you really have to tell Lean exactly everything for it to work, and I don't know why. Do I have to re-derive the <code>no_zero_smul_divisors</code> instance for <code>ring_of_integers</code>? Is there an algebra diamond? There's some comments around there that are helpful, and I've got a 250K line output ot <code>trace_instances</code> saved if it helps debugging. I really have no clue where to start looking.</p>",
        "id": 266120670,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640542793
    },
    {
        "content": "<p>There's a problem even outside of your <code>ring_of_integers</code> usage: this doesn't typecheck</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.roots_of_unity</span>\n\n<span class=\"k\">#check</span> <span class=\"bp\">@</span><span class=\"n\">is_primitive_root.of_map_of_injective</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"n\">no_zero_smul_divisors.algebra_map_injective</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n</code></pre></div>",
        "id": 266136188,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640565726
    },
    {
        "content": "<p>I had to do the following to get it to be happy</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.roots_of_unity</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">nontrivial</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">R</span> <span class=\"n\">S</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">no_zero_smul_divisors</span> <span class=\"n\">R</span> <span class=\"n\">S</span><span class=\"o\">]</span>\n\n<span class=\"k\">#check</span> <span class=\"n\">is_primitive_root.of_map_of_injective</span>\n  <span class=\"o\">(</span><span class=\"n\">no_zero_smul_divisors.algebra_map_injective</span> <span class=\"n\">R</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n</code></pre></div>",
        "id": 266136331,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640566009
    },
    {
        "content": "<p>Here's your proof restated to show more explicitly the TC issue you've identified:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">zeta_primitive_root</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_primitive_root</span> <span class=\"o\">(</span><span class=\"n\">zeta</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">))</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">is_primitive_root</span>\n    <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"o\">(</span><span class=\"n\">ring_of_integers</span> <span class=\"bp\">$</span> <span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n      <span class=\"o\">((</span><span class=\"n\">zeta</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ring_of_integers</span> <span class=\"bp\">$</span> <span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">))</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">refine</span> <span class=\"n\">this.of_map_of_injective</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"bp\">@</span><span class=\"n\">no_zero_smul_divisors.algebra_map_injective</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"c1\">-- nontrivial (cyclotomic_field n K)</span>\n      <span class=\"n\">apply_instance</span> <span class=\"c1\">-- fast</span>\n    <span class=\"o\">},</span>\n    <span class=\"o\">{</span>\n      <span class=\"c1\">-- no_zero_smul_divisors â†¥(ring_of_integers (cyclotomic_field n K)) (cyclotomic_field n K)</span>\n      <span class=\"n\">apply_instance</span> <span class=\"c1\">-- slow</span>\n    <span class=\"o\">},</span>\n  <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"n\">zeta'_primitive_root</span> <span class=\"n\">n</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 266137030,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640566991
    },
    {
        "content": "<p>I get ~63 seconds for the second <code>apply_instance</code> in this case:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">elaboration</span><span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">execution</span> <span class=\"n\">took</span> <span class=\"mi\">63</span><span class=\"bp\">.</span><span class=\"mi\">8</span><span class=\"n\">s</span>\n<span class=\"n\">num.</span> <span class=\"n\">allocated</span> <span class=\"n\">objects</span><span class=\"o\">:</span>  <span class=\"mi\">487</span>\n<span class=\"n\">num.</span> <span class=\"n\">allocated</span> <span class=\"n\">closures</span><span class=\"o\">:</span> <span class=\"mi\">1446</span>\n<span class=\"mi\">63763</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.istep</span>\n<span class=\"mi\">63763</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.step</span>\n<span class=\"mi\">63763</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.with_ast</span>\n<span class=\"mi\">63763</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">_interaction</span>\n<span class=\"mi\">63763</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.istep._lambda_1</span>\n<span class=\"mi\">63763</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">_interaction._lambda_2</span>\n<span class=\"mi\">63763</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">scope_trace</span>\n<span class=\"mi\">63602</span><span class=\"n\">ms</span>    <span class=\"mi\">99</span><span class=\"bp\">.</span><span class=\"mi\">7</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.solve1</span>\n<span class=\"mi\">63602</span><span class=\"n\">ms</span>    <span class=\"mi\">99</span><span class=\"bp\">.</span><span class=\"mi\">7</span><span class=\"bp\">%</span>   <span class=\"n\">_interaction._lambda_5</span>\n<span class=\"mi\">63518</span><span class=\"n\">ms</span>    <span class=\"mi\">99</span><span class=\"bp\">.</span><span class=\"mi\">6</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.apply_instance</span>\n<span class=\"mi\">63518</span><span class=\"n\">ms</span>    <span class=\"mi\">99</span><span class=\"bp\">.</span><span class=\"mi\">6</span><span class=\"bp\">%</span>   <span class=\"n\">_interaction._lambda_4</span>\n<span class=\"mi\">63499</span><span class=\"n\">ms</span>    <span class=\"mi\">99</span><span class=\"bp\">.</span><span class=\"mi\">6</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.mk_instance</span>\n  <span class=\"mi\">190</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">3</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.to_expr</span>\n  <span class=\"mi\">124</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.interactive.suffices</span>\n  <span class=\"mi\">124</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.interactive.have._lambda_1</span>\n   <span class=\"mi\">54</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.interactive.apply._lambda_1</span>\n   <span class=\"mi\">54</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">%</span>   <span class=\"n\">interaction_monad.monad._lambda_9</span>\n   <span class=\"mi\">54</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.interactive.concat_tags._lambda_5</span>\n   <span class=\"mi\">53</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.apply</span>\n   <span class=\"mi\">53</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.apply_core</span>\n   <span class=\"mi\">37</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.interactive.exact</span>\n   <span class=\"mi\">29</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.refine</span>\n   <span class=\"mi\">20</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.exact</span>\n    <span class=\"mi\">1</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.i_to_expr_for_apply</span>\n    <span class=\"mi\">1</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.get_goals</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">zeta_primitive_root</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_primitive_root</span> <span class=\"o\">(</span><span class=\"n\">zeta</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">))</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">is_primitive_root</span>\n    <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"o\">(</span><span class=\"n\">ring_of_integers</span> <span class=\"bp\">$</span> <span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n      <span class=\"o\">((</span><span class=\"n\">zeta</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ring_of_integers</span> <span class=\"bp\">$</span> <span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">))</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">refine</span> <span class=\"n\">this.of_map_of_injective</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"bp\">@</span><span class=\"n\">no_zero_smul_divisors.algebra_map_injective</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"c1\">-- nontrivial (cyclotomic_field n K)</span>\n      <span class=\"n\">exact</span> <span class=\"n\">local_ring.to_nontrivial</span>\n    <span class=\"o\">},</span>\n    <span class=\"o\">{</span>\n      <span class=\"c1\">-- no_zero_smul_divisors â†¥(ring_of_integers (cyclotomic_field n K)) (cyclotomic_field n K)</span>\n      <span class=\"n\">apply_instance</span> <span class=\"c1\">-- slow</span>\n    <span class=\"o\">},</span>\n  <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"n\">zeta'_primitive_root</span> <span class=\"n\">n</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 266137579,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640567691
    },
    {
        "content": "<p>However, on a naked goal that is seemingly the same, it takes &lt;1s:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">â„•</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">fact</span> <span class=\"o\">(((</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">â„•</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"bp\">â‰ </span> <span class=\"mi\">0</span><span class=\"o\">)]</span> <span class=\"o\">:</span>\n  <span class=\"n\">no_zero_smul_divisors</span> <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">apply_instance</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">elaboration</span><span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">execution</span> <span class=\"n\">took</span> <span class=\"mi\">542</span><span class=\"n\">ms</span>\n<span class=\"n\">num.</span> <span class=\"n\">allocated</span> <span class=\"n\">objects</span><span class=\"o\">:</span>  <span class=\"mi\">24</span>\n<span class=\"n\">num.</span> <span class=\"n\">allocated</span> <span class=\"n\">closures</span><span class=\"o\">:</span> <span class=\"mi\">65</span>\n  <span class=\"mi\">542</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">_interaction._lambda_2</span>\n  <span class=\"mi\">542</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.step</span>\n  <span class=\"mi\">542</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">_interaction</span>\n  <span class=\"mi\">542</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.istep</span>\n  <span class=\"mi\">542</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.with_ast</span>\n  <span class=\"mi\">542</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.istep._lambda_1</span>\n  <span class=\"mi\">542</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.apply_instance</span>\n  <span class=\"mi\">542</span><span class=\"n\">ms</span>   <span class=\"mi\">100</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">%</span>   <span class=\"n\">scope_trace</span>\n  <span class=\"mi\">541</span><span class=\"n\">ms</span>    <span class=\"mi\">99</span><span class=\"bp\">.</span><span class=\"mi\">8</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.mk_instance</span>\n    <span class=\"mi\">1</span><span class=\"n\">ms</span>     <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">%</span>   <span class=\"n\">tactic.exact</span>\n</code></pre></div>",
        "id": 266137653,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640567776
    },
    {
        "content": "<p>So maybe there's something hidden in the <code>pp.all</code>, I'll check that.</p>",
        "id": 266137659,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640567793
    },
    {
        "content": "<p>Here is the difference that makes it slower. This part makes it fast:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">module_left</span><span class=\"o\">)))</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>but this one makes it slow:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">algebra.to_module</span>\n                <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_comm_semiring</span>\n                   <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_comm_ring</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">division_ring.to_ring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">field.to_division_ring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))))</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_algebra</span><span class=\"o\">))))</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 266138736,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640569316
    },
    {
        "content": "<p>inside <code>smul_with_zero.to_has_scalar</code></p>",
        "id": 266138793,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640569387
    },
    {
        "content": "<p>So I don't know why that particular module definition makes it slow, but that's the smallest quantum of difference I could find that led to the slowdown.</p>",
        "id": 266139351,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640570319
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>-- fast</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.roots_of_unity</span>\n<span class=\"kn\">import</span> <span class=\"n\">number_theory.number_field</span>\n<span class=\"kn\">import</span> <span class=\"n\">ready_for_mathlib.cyclotomic.basic</span>\n\n<span class=\"kd\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">number_field</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">profiler</span> <span class=\"n\">true</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">â„•</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">_inst_4</span> <span class=\"o\">:</span> <span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"bp\">@</span><span class=\"n\">no_zero_smul_divisors</span>\n    <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_class.to_has_zero</span>\n       <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_mul_zero_class</span>\n          <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span>\n             <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span>\n                <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span>\n                   <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_ring</span>\n                      <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span>\n                            <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_comm_ring</span><span class=\"o\">))))))</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_mul_zero_class</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">division_ring.to_ring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">field.to_division_ring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))))))))</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">smul_with_zero.to_has_scalar</span>\n       <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_class.to_has_zero</span>\n          <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_one_class.to_mul_zero_class</span>\n             <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">monoid_with_zero.to_mul_zero_one_class</span>\n                <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_monoid_with_zero</span>\n                   <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span>\n                      <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_comm_semiring</span>\n                         <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span>\n                               <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_comm_ring</span><span class=\"o\">))))))</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_monoid.to_add_zero_class</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_comm_monoid.to_add_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">division_ring.to_ring</span>\n                               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">field.to_division_ring</span>\n                                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))))))))))</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_action_with_zero.to_smul_with_zero</span>\n          <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_monoid_with_zero</span>\n             <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span>\n                <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_comm_semiring</span>\n                   <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_comm_ring</span><span class=\"o\">)))</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_monoid.to_add_zero_class</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_comm_monoid.to_add_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span>\n                            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">division_ring.to_ring</span>\n                                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">field.to_division_ring</span>\n                                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span>\n                                        <span class=\"n\">_inst_4</span><span class=\"o\">))))))))))</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">module.to_mul_action_with_zero</span>\n             <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span>\n                <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_comm_semiring</span>\n                   <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_comm_ring</span><span class=\"o\">))</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">division_ring.to_ring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">field.to_division_ring</span>\n                               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)))))))</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">module_left</span><span class=\"o\">)))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">apply_instance</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n</div></div>",
        "id": 266139366,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640570341
    },
    {
        "content": "<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>--slow</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.roots_of_unity</span>\n<span class=\"kn\">import</span> <span class=\"n\">number_theory.number_field</span>\n<span class=\"kn\">import</span> <span class=\"n\">ready_for_mathlib.cyclotomic.basic</span>\n\n<span class=\"kd\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">number_field</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">profiler</span> <span class=\"n\">true</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">â„•</span><span class=\"bp\">+</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">_inst_4</span> <span class=\"o\">:</span> <span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"bp\">@</span><span class=\"n\">no_zero_smul_divisors</span>\n    <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_class.to_has_zero</span>\n       <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_mul_zero_class</span>\n          <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span>\n             <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span>\n                <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span>\n                   <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_ring</span>\n                      <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span>\n                            <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_comm_ring</span><span class=\"o\">))))))</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_mul_zero_class</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">division_ring.to_ring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">field.to_division_ring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))))))))</span>\n    <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">smul_with_zero.to_has_scalar</span>\n       <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_class.to_has_zero</span>\n          <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_zero_one_class.to_mul_zero_class</span>\n             <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">monoid_with_zero.to_mul_zero_one_class</span>\n                <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_monoid_with_zero</span>\n                   <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span>\n                      <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                           <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_comm_semiring</span>\n                         <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                              <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span>\n                               <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_comm_ring</span><span class=\"o\">))))))</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_monoid.to_add_zero_class</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_comm_monoid.to_add_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">division_ring.to_ring</span>\n                               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">field.to_division_ring</span>\n                                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))))))))))</span>\n       <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_action_with_zero.to_smul_with_zero</span>\n          <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_monoid_with_zero</span>\n             <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span>\n                <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_comm_semiring</span>\n                   <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_comm_ring</span><span class=\"o\">)))</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_zero_class.to_has_zero</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_monoid.to_add_zero_class</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">add_comm_monoid.to_add_monoid</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span>\n                            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">division_ring.to_ring</span>\n                                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">field.to_division_ring</span>\n                                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span>\n                                        <span class=\"n\">_inst_4</span><span class=\"o\">))))))))))</span>\n          <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">module.to_mul_action_with_zero</span>\n             <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span>\n                <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_comm_semiring</span>\n                   <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_comm_ring</span><span class=\"o\">))</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_non_assoc_semiring.to_add_comm_monoid</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.to_non_unital_non_assoc_semiring</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">division_ring.to_ring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                            <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">field.to_division_ring</span>\n                               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                               <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)))))))</span>\n             <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">algebra.to_module</span>\n                <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_comm_semiring</span>\n                   <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_comm_ring</span><span class=\"o\">)</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">division_ring.to_ring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                      <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">field.to_division_ring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                         <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))))</span>\n                <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span>\n                   <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_algebra</span><span class=\"o\">))))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"c1\">-- apply_instance</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n</div></div>",
        "id": 266139434,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640570408
    },
    {
        "content": "<p>The lack of typechecking originally is worrying, but I think in unrelated to my problem; if we specialize <code>of_map_of_injective</code> to <code>comm_ring \\to field</code> (like what's used in the lemma) it still typechecks, but the proof fails:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>code</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">is_primitive_root.of_map_of_injective'</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">S</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">â„•</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">â†’+*</span> <span class=\"n\">S</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Î¶</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span>\n<span class=\"o\">:</span> <span class=\"n\">function.injective</span> <span class=\"n\">f</span> <span class=\"bp\">â†’</span> <span class=\"n\">is_primitive_root</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">Î¶</span><span class=\"o\">)</span> <span class=\"n\">k</span> <span class=\"bp\">â†’</span> <span class=\"n\">is_primitive_root</span> <span class=\"n\">Î¶</span> <span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"n\">is_primitive_root.of_map_of_injective</span>\n\n<span class=\"k\">#check</span> <span class=\"bp\">@</span><span class=\"n\">is_primitive_root.of_map_of_injective'</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"n\">no_zero_smul_divisors.algebra_map_injective</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"c1\">-- works</span>\n\n  <span class=\"n\">is_primitive_root</span> <span class=\"o\">(</span><span class=\"n\">zeta</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">))</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">is_primitive_root.of_map_of_injective'</span> <span class=\"o\">(</span><span class=\"n\">no_zero_smul_divisors.algebra_map_injective</span> <span class=\"o\">(</span><span class=\"n\">ring_of_integers</span> <span class=\"bp\">$</span> <span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span><span class=\"o\">)),</span> <span class=\"c1\">--times out</span>\n  <span class=\"n\">exact</span> <span class=\"n\">zeta'_primitive_root</span> <span class=\"n\">n</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n</div></div>\n<p>the reason it doesn't typecheck seems to be something weird about <code>ring.to_semiring</code>; I'm not too sure what it is but that seems to be the only diff obvious to a difftool.</p>",
        "id": 266145627,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640579925
    },
    {
        "content": "<p>also, if you <code>exact</code> the right instance, it doesn't seem to take too long on the second one, so it's not some sort of heavy <code>refl</code></p>",
        "id": 266145704,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640580083
    },
    {
        "content": "<p>the <code>trace.class_instances</code> log for the slow example seems to consist of mainly lines looking like this (~240K of them):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"n\">cached</span> <span class=\"n\">failure</span> <span class=\"n\">for</span> <span class=\"bp\">@</span><span class=\"n\">algebra</span> <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span> <span class=\"n\">K</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_ring.to_comm_semiring</span>\n     <span class=\"bp\">â†¥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring_of_integers</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">cyclotomic_field.field</span> <span class=\"n\">n</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_comm_ring</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">ring.to_semiring</span> <span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">division_ring.to_ring</span> <span class=\"n\">K</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">field.to_division_ring</span> <span class=\"n\">K</span> <span class=\"n\">_inst_4</span><span class=\"o\">)))</span>\n</code></pre></div>\n<p>Weirdly, none of these say <code>failed is_def_eq</code>, which is the usual error message I see for these sorts of traces the few times I've seen them, except at the very, very end of the repetition. The fact that it looped for so long and yet terminated... mysteries of computers. Then it fails a couple more times and only then it finds the right instance.</p>",
        "id": 266146112,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640580731
    },
    {
        "content": "<p>Thanks so much for looking at this, Yakov. I'm going to sleep on it and hopefully some idea as to what's going on appears, because this is mysterious...</p>",
        "id": 266146120,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640580760
    },
    {
        "content": "<p>The repeated inference of the same(?) instance looks like this issue: <a href=\"#narrow/stream/113488-general/topic/odd.20repeated.20type.20class.20search\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/odd.20repeated.20type.20class.20search</a></p>",
        "id": 266160921,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1640599450
    }
]