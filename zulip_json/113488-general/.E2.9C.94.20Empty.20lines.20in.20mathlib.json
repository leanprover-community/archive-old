[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> pointed out (in a discussion below my pull request) that mathlib never uses more than one empty line between anything. Why is it so?</p>",
        "id": 266076005,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640467020
    },
    {
        "content": "<p>Convention?</p>",
        "id": 266076212,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640467417
    },
    {
        "content": "<p>Is there any rationale behind this convention? I like to make two or three empty lines in a row when I want to hint that \"something very different follows\".</p>",
        "id": 266076549,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640467970
    },
    {
        "content": "<p>Make a section instead</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\">! ### And now for something completely different -/</span>\n</code></pre></div>",
        "id": 266076570,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640468025
    },
    {
        "content": "<p>Do you mean a section or a comment?</p>",
        "id": 266076608,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640468052
    },
    {
        "content": "<p>I used to like having empty lines, too, but somehow it looks strange to me now.  Naming conventions, <code>section</code>s, and sectioning comments (like what Yael mentioned) seem to be sufficient.</p>",
        "id": 266076615,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1640468078
    },
    {
        "content": "<p>What do you mean? A section <em>is</em> a comment.</p>",
        "id": 266076616,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640468081
    },
    {
        "content": "<p>Ah sorry, I do not mean the literal <code>section</code>, although I usually use them jointly</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\">! ### Fancy thing -/</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">fancy_thing</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">fancy_thing</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">! ### Next fancy thing -/</span>\n\n<span class=\"bp\">...</span>\n</code></pre></div>",
        "id": 266076648,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640468161
    },
    {
        "content": "<p>Oh, thanks.</p>",
        "id": 266076691,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640468181
    },
    {
        "content": "<p>I'm a huge proponent of sectioning comments <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 266076697,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640468212
    },
    {
        "content": "<p>Have been adding them to files every time I get the chance.</p>",
        "id": 266076702,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640468229
    },
    {
        "content": "<p>In my PR<br>\n<a href=\"https://github.com/leanprover-community/mathlib/pull/10959\">https://github.com/leanprover-community/mathlib/pull/10959</a><br>\nI feel like <code>def cross_product</code> and <code>localized \"infixl ×₃ </code> and <code>lemma cross_product_def</code> belong together. On the other hand, the following <code>lemma cross_product_anticomm</code> seems that it should be separated from the previous. Should I create a names section something like \"basic lemmata\"?</p>",
        "id": 266076770,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640468330
    },
    {
        "content": "<p>Nah, all this file is (currently) so basic that I wouldn't do any sectioning.</p>",
        "id": 266076848,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640468499
    },
    {
        "content": "<p>Sectioning is worth it when about 200-300 at least.</p>",
        "id": 266076892,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640468533
    },
    {
        "content": "<p>IMO sectioning would be overkill for this document, we agree on that. However, I would still like to make <code>lemma cross_product_anticomm</code> more separated (visually) from <code>lemma cross_product_def</code> than how much  <code>lemma cross_product_def</code> is separated from the definition.</p>",
        "id": 266077092,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640468996
    },
    {
        "content": "<p>And I'm saying that it's not mathlib style. Both are very direct one-liners from the definition.</p>",
        "id": 266077148,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640469047
    },
    {
        "content": "<p>Even within proofs, I sometimes wish for some spacing. I agree that this one line only spacing can sometimes really not be helpful on the eyes.</p>",
        "id": 266077410,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1640469560
    },
    {
        "content": "<p>OK. Thanks for your replies! I just wanted to ask whether there is an acceptable way to express the grouping (in my small case), which turned out to be impossible. I will cope with that.</p>",
        "id": 266077515,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640469637
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 266077516,
        "sender_full_name": "Notification Bot",
        "timestamp": 1640469638
    },
    {
        "content": "<p>Note that we also sometimes skip the line break, when a bunch of one-liners are nearly identical.</p>",
        "id": 266077825,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640470146
    },
    {
        "content": "<p>Oh! So I can choose between 0 and 1 empty lines, right?</p>",
        "id": 266077952,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640470340
    },
    {
        "content": "<p>Yes! But you should only skip the line between <strong>lemmas</strong> that literally hold <strong>on one line</strong>. So no grouping <code>cross_product</code> with <code>cross_product_def</code>, sorry.</p>",
        "id": 266077985,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640470428
    },
    {
        "content": "<p>OK</p>",
        "id": 266078106,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640470613
    },
    {
        "content": "<p>Meh, this doesn't look good.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">cross_product_anticomm</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"bp\">×₃</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">w</span> <span class=\"bp\">×₃</span> <span class=\"n\">v</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">cross_product_def</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">cross_product_anticomm'</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">v</span> <span class=\"bp\">×₃</span> <span class=\"n\">w</span> <span class=\"bp\">+</span> <span class=\"n\">w</span> <span class=\"bp\">×₃</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_eq_zero_iff_eq_neg</span><span class=\"o\">,</span> <span class=\"n\">cross_product_anticomm</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>Imma put a single empty break everywhere and that will be it.</p>",
        "id": 266078375,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640471138
    },
    {
        "content": "<p>Yeah, because those do not hold on one line.</p>",
        "id": 266078488,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640471298
    },
    {
        "content": "<p>Btw, you can put the type of a lemma on same line as the lemma name if it fits.</p>",
        "id": 266078497,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640471337
    },
    {
        "content": "<p>I thought that \"hold on one line\" meant \"one-line proof\". Nevermind.</p>",
        "id": 266078513,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640471391
    },
    {
        "content": "<p>I hope that newline at the end of file is fine.</p>",
        "id": 266078561,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640471414
    },
    {
        "content": "<p>It seems that other files in mathlib have it.</p>",
        "id": 266078566,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640471441
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> <a href=\"#narrow/stream/113488-general/topic/.E2.9C.94.20Empty.20lines.20in.20mathlib/near/266078513\">said</a>:</p>\n<blockquote>\n<p>I thought that \"hold on one line\" meant \"one-line proof\". Nevermind.</p>\n</blockquote>\n<p>I specifically said \"hold on one line\" instead of \"one-liner\" <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61b\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>",
        "id": 266078685,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640471673
    },
    {
        "content": "<p>I am sorry; my English isn't that good to distinguish them.</p>",
        "id": 266078700,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1640471731
    },
    {
        "content": "<p>No worries!</p>",
        "id": 266078847,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640471981
    }
]