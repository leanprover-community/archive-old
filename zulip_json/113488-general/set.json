[
    {
        "content": "<p>Hi there, I'm a total newbee for using Lean. Can anyone tell me how to prove (6 : ℝ) ∈ ({6} : set ℝ) ? Which tactic should I use? And in general how should I find which tactic to apply whenever I encounter a new symbol?</p>",
        "id": 273605118,
        "sender_full_name": "Zhengying",
        "timestamp": 1646123647
    },
    {
        "content": "<p>I would definitely try <code>library_search</code> but actually before that I would start guessing at names, for example this is almost certainly called <code>set.mem_singletom</code> or something. In particular I would use the <code>exact</code> tactic because exactly the result that x is in {x} is already in the library. There are not thousands of tactics, it doesn't work like that. There are probably less than 100 tactics in total. There are tens of thousands of already proven theorems and that's what you need. When encountering a new symbol you should find the files in the maths library which talk about the symbol and read the docstrings and theorem statements.</p>",
        "id": 273605751,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1646123937
    },
    {
        "content": "<p>In this case it should be a direct application of some lemma, rather than a tactic that does many things for you. And the tactic <code>library_search</code> should find the lemma for you</p>",
        "id": 273605777,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1646123949
    },
    {
        "content": "<p>You need to learn the API for the concept, not a new tactic</p>",
        "id": 273605804,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1646123968
    },
    {
        "content": "<p>It's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.mem_singleton\">docs#set.mem_singleton</a>. But I totally agree with Kevin and Alex that the most important thing to understand is that such a lemma is surely already in mathlib and that <code>library_search</code> will find it for you. After some time you will also be able to guess its name.</p>",
        "id": 273607769,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646125040
    }
]