[
    {
        "content": "<p>I've just come back from the workshop in Bonn where <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> patiently answered lots of questions about the Lean 4 API, and I managed to write a small importer from mathlib to Lean 4.  This just creates a Lean 4 olean file with all the mathlib declarations (taken from the textual export format), so don't get your hopes up for converting the mathlib source code.  There's no notation and no tactics.  My main motivation for this importer is to try writing automation in Lean 4. <a href=\"https://github.com/gebner/lean4-mathlib-import\" target=\"_blank\" title=\"https://github.com/gebner/lean4-mathlib-import\">https://github.com/gebner/lean4-mathlib-import</a></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">Import</span><span class=\"bp\">.</span><span class=\"n\">Mathlib</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"o\">(</span><span class=\"n\">deriv</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">real</span> <span class=\"bp\">→</span> <span class=\"n\">real</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">real</span> <span class=\"bp\">→</span> <span class=\"n\">real</span><span class=\"o\">))</span>\n</pre></div>\n\n\n<p>It takes about 6 minutes and 13.5 gigabytes of RAM to import the 213 megabyte export file.  The resulting <code>Mathlib.olean</code> file is 3.2 gigabytes large (and it doesn't even contain proofs).  However importing this 3.2 gigabyte file is surprisingly snappy: it only takes 1.8 seconds on my machine.</p>",
        "id": 187561178,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1581005156
    },
    {
        "content": "<p>Any ideas on where the massive blowup is from? Does it compress well?</p>",
        "id": 187562294,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1581005767
    },
    {
        "content": "<p>the large size of the olean file is surprising to me, since tree duplication doesn't explain that</p>",
        "id": 187562377,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1581005830
    },
    {
        "content": "<p>unless it was reduplicated and not merged again</p>",
        "id": 187562417,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1581005866
    },
    {
        "content": "<p>If terms are getting split out into different identical subtrees with different term IDs, it might not compress well because all the addresses are different</p>",
        "id": 187562596,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1581005975
    },
    {
        "content": "<blockquote>\n<p>Any ideas on where the massive blowup is from? Does it compress well?</p>\n</blockquote>\n<p><code>zstd</code> compresses it to 362M, the Lean 3 olean files are 70M uncompressed (including proofs).  The blowup is probably in part because I'm not deduplicating the terms (and I guess the <code>writeModule</code> function doesn't either).  Every definition duplicates the term, since I replace the names.</p>",
        "id": 187569653,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1581010326
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> It does now! <a href=\"https://github.com/leanprover/lean4/commit/469562d524adf9fefbbfa6904d8a7f24dff7b009\" target=\"_blank\" title=\"https://github.com/leanprover/lean4/commit/469562d524adf9fefbbfa6904d8a7f24dff7b009\">https://github.com/leanprover/lean4/commit/469562d524adf9fefbbfa6904d8a7f24dff7b009</a> <a href=\"https://github.com/leanprover/lean4/commit/3c5b3cd91f1e059e73dfbc82e042a6eec1bc8fdc\" target=\"_blank\" title=\"https://github.com/leanprover/lean4/commit/3c5b3cd91f1e059e73dfbc82e042a6eec1bc8fdc\">https://github.com/leanprover/lean4/commit/3c5b3cd91f1e059e73dfbc82e042a6eec1bc8fdc</a></p>",
        "id": 187622914,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1581065870
    },
    {
        "content": "<p>Oh wow, this moves quickly.  I've already added support for <code>Expr.replace</code>, I'll run the import again.</p>",
        "id": 187623099,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1581066106
    },
    {
        "content": "<p>Now <code>Mathlib.olean</code> is just 89 megabytes, and the importer only requires 2 gigabytes of RAM!</p>",
        "id": 187623462,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1581066540
    },
    {
        "content": "<p>Dear Friends, I need to import a theory, but lean returns the following:</p>\n<p>file 'Kenny_comm_alg/ideal_operations' not found in the LEAN_PATH</p>\n<p>Can you help me?</p>",
        "id": 217192992,
        "sender_full_name": "Regivan Hugo Nunes Santiago",
        "timestamp": 1605731652
    }
]