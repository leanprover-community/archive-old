[
    {
        "content": "<p><code>leanproject new</code> adds git tracking to the project it creates. But what if I want to create a lean project in a subdirectory within another preexisting git-tracked directory. Can I create a lean project with mathlib without this git being added?</p>",
        "id": 288737766,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1657145596
    },
    {
        "content": "<p>git tracking is really just a <code>.git</code> folder with a bunch of files in it. I see no problems with making a <code>leanproject new</code> and then simply deleting the <code>.git</code> folder.</p>",
        "id": 288738359,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1657146031
    },
    {
        "content": "<p>What if I want to create a lean project in the root of an existing git repository?  <code>leanproject new</code> fails with <code>fatal: A branch named 'master' already exists.</code></p>",
        "id": 302525274,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1664996621
    },
    {
        "content": "<p>Also, if there is no problem with deleting the <code>.git</code> folder after creating a new lean project, why does <code>leanproject</code> initialize a git repository at all?</p>",
        "id": 302525427,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1664996665
    },
    {
        "content": "<p>I think <code>leanpkg</code> is the more low level tool.  <code>leanproject</code> I think was designed as a higher level tool to accommodate the needs of most lean community users including automatically making git repos, downloading mathlib, etc.</p>",
        "id": 302526492,
        "sender_full_name": "Jason Rute",
        "timestamp": 1664997068
    },
    {
        "content": "<p>I think that if you want to make a new project you need to type <code>leanproject new name-of-project</code>. It will then create a directory with that name and you should be fine.</p>",
        "id": 302526963,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1664997217
    },
    {
        "content": "<p>I don't want it in a new directory, I want it in the current directory, which already has a git repository.  <code>leanproject new</code> without another argument creates a project in the current directory, but it also tries to create a new git repository.</p>",
        "id": 302527265,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1664997316
    },
    {
        "content": "<p>How do I use <code>leanpkg</code> to do everything that <code>leanproject new</code> does except create a git repository?</p>",
        "id": 302527423,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1664997368
    },
    {
        "content": "<p>I could be wrong, but I don’t think leanproject or the files it creates uses any global paths, so a simple workaround is to make a project elsewhere and move it to where you want.  I haven’t tested though.</p>",
        "id": 302527470,
        "sender_full_name": "Jason Rute",
        "timestamp": 1664997386
    },
    {
        "content": "<p>yeah, leanproject probably needs a parameter to turn git off if it is going to complain like this.</p>",
        "id": 302527635,
        "sender_full_name": "Jason Rute",
        "timestamp": 1664997447
    },
    {
        "content": "<p>For what it is worth, I think, besides convenience to most users, this is the reason for making each lean project a git repo: <a href=\"https://leanprover-community.github.io/leanproject.html#git-hooks\">https://leanprover-community.github.io/leanproject.html#git-hooks</a></p>",
        "id": 302528980,
        "sender_full_name": "Jason Rute",
        "timestamp": 1664997917
    },
    {
        "content": "<p>But I don’t know the motivation for sure.</p>",
        "id": 302529031,
        "sender_full_name": "Jason Rute",
        "timestamp": 1664997932
    },
    {
        "content": "<p>Each project needs to be its own git repo because <code>leanpkg.toml</code> refers to projects by their git urls. So nothing can depend on your project if it's not at the root of the repo.</p>",
        "id": 302533420,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1664999588
    },
    {
        "content": "<p>I'm referring to lines like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">dependencies</span><span class=\"o\">]</span>\n<span class=\"n\">mathlib</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">git</span> <span class=\"bp\">=</span> <span class=\"s2\">\"https://github.com/leanprover-community/mathlib\"</span><span class=\"o\">,</span> <span class=\"n\">rev</span> <span class=\"bp\">=</span> <span class=\"s2\">\"de62604b58cf61aad9188a41aa7d9f51cfe73245\"</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>This syntax only works if the repo has <code>leanpkg.toml</code> in the root, and there can obviously be only one such toml file</p>",
        "id": 302533747,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1664999715
    },
    {
        "content": "<p>You can of course ignore this advice if you don't intend to ever list your package as a dependency of something else (or expect anyone else to ever want to do so)</p>",
        "id": 302533995,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1664999803
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> I assume even if the project needs to be a repo, there shouldn’t in theory be a problem putting a lean project (with a git repo at the root of the lean project) inside a larger git repo, right?  (I’m not sure the <a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a> of doing that, but that seems to be what the OP wants.)  I assume the current <code>leanproject new</code> is just being too cautious, right?</p>",
        "id": 302536120,
        "sender_full_name": "Jason Rute",
        "timestamp": 1665000540
    },
    {
        "content": "<p>That would be a git submodule if you have a repo within a repo</p>",
        "id": 302536214,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1665000578
    },
    {
        "content": "<p>Which would be fine, but is unlikely to be what the OP wants</p>",
        "id": 302536312,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1665000613
    },
    {
        "content": "<p>Yeah, I didn’t think that through.  I agree this isn’t what the OP wants.</p>",
        "id": 302536360,
        "sender_full_name": "Jason Rute",
        "timestamp": 1665000635
    },
    {
        "content": "<p>But yes, <code>leanproject new</code> is just being cautious. You can totally copy its generated files to wherever you want them</p>",
        "id": 302536584,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1665000729
    },
    {
        "content": "<p>Just make sure to put the lean project.toml into the root of the new repo if you want dependencies to work</p>",
        "id": 302536653,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1665000759
    },
    {
        "content": "<p>Thanks everyone!  I do think it would be useful to be able to separate the setup necessary for <em>using</em> Lean locally in a given directory from the setup necessary for <em>sharing</em> that code to other projects.</p>",
        "id": 302539002,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1665001605
    },
    {
        "content": "<p>It's likely not really worth the effort of making the change since Lean4 has a different package structure. Note that even <code>leanpkg init</code>assumes you want a git respository.</p>",
        "id": 302543683,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1665003554
    }
]