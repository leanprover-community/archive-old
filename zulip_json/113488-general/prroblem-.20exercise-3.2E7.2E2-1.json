[
    {
        "content": "<p>Hi,</p>\n<p>I am trying to prove the below in tactic mode, and not with cc:</p>\n<p>open classical</p>\n<p>variables p q r s : Prop</p>\n<p>example : (p → r ∨ s) → ((p → r) ∨ (p → s)) :=  sorry</p>\n<p>I got to this point:</p>\n<p>example : (p → r ∨ s) → ((p → r) ∨ (p → s)) := <br>\nbegin<br>\nintros prs,<br>\nleft, <br>\nintro hp,<br>\nhave hors := prs hp,<br>\ncases hors with hr hs,<br>\nexact hr,<br>\nhave hors1 := prs hp,<br>\nend</p>\n<p>Any help is appreciated. Thank you.</p>",
        "id": 242915753,
        "sender_full_name": "Jagadish Bapanapally",
        "timestamp": 1623865162
    },
    {
        "content": "<p>Can you please reformat using <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a>?</p>",
        "id": 242915816,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623865197
    },
    {
        "content": "<p><code>example : (p → r ∨ s) → ((p → r) ∨ (p → s)) :=\nbegin\nintros prs,\nleft,\nintro hp,\nhave hors := prs hp,\ncases hors with hr hs,\nexact hr,\nhave hors1 := prs hp,\nend</code></p>",
        "id": 242915991,
        "sender_full_name": "Jagadish Bapanapally",
        "timestamp": 1623865265
    },
    {
        "content": "<p>Write three of them consecutive just before your code and three of them on the line just after <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 242916182,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1623865343
    },
    {
        "content": "<p>And you can edit your messages.</p>",
        "id": 242916202,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1623865351
    },
    {
        "content": "<p>I am trying to prove the below in tactic mode, and not with cc:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">classical</span>\n\n<span class=\"kd\">variables</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"n\">r</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span> <span class=\"bp\">∨</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">s</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">intros</span> <span class=\"n\">prs</span><span class=\"o\">,</span>\n<span class=\"n\">left</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">hors</span> <span class=\"o\">:=</span> <span class=\"n\">prs</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">hors</span> <span class=\"k\">with</span> <span class=\"n\">hr</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"n\">hr</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">hors1</span> <span class=\"o\">:=</span> <span class=\"n\">prs</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 242916287,
        "sender_full_name": "Jagadish Bapanapally",
        "timestamp": 1623865411
    },
    {
        "content": "<p>What's the math proof? Once you use <code>left</code> on the second line of the proof, you've lost</p>",
        "id": 242916994,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1623865761
    },
    {
        "content": "<p>So, what's the next step after intros prs?</p>",
        "id": 242917778,
        "sender_full_name": "Jagadish Bapanapally",
        "timestamp": 1623866119
    },
    {
        "content": "<p>You might need to use classical logic (e.g., use the law of the excluded middle on p)</p>",
        "id": 242917915,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1623866170
    },
    {
        "content": "<p>this one is throwing error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span> <span class=\"bp\">∨</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">s</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">or.elim</span> <span class=\"o\">(</span><span class=\"n\">em</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 242918335,
        "sender_full_name": "Jagadish Bapanapally",
        "timestamp": 1623866376
    },
    {
        "content": "<p><code>or.elim (em p)</code> is a <code>Prop</code>, not a tactic</p>",
        "id": 242918470,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1623866405
    },
    {
        "content": "<p>you could do <code>apply or.elim (em p)</code> or <code>cases em p</code></p>",
        "id": 242918588,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1623866453
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span> <span class=\"bp\">∨</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">s</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">intro</span> <span class=\"n\">prs</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">or.elim</span> <span class=\"o\">(</span><span class=\"n\">em</span> <span class=\"n\">p</span><span class=\"o\">),</span>\n<span class=\"n\">intro</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">hors</span> <span class=\"o\">:=</span> <span class=\"n\">prs</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">hors</span><span class=\"o\">,</span>\n<span class=\"n\">left</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">hp1</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"n\">hors</span><span class=\"o\">,</span>\n<span class=\"n\">right</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">hp1</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"n\">hors</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">nhp</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>what is the next step after intro nhp?</p>",
        "id": 242927772,
        "sender_full_name": "Jagadish Bapanapally",
        "timestamp": 1623870538
    },
    {
        "content": "<p><code>left</code> (or, <code>right</code>!)</p>",
        "id": 242928099,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623870653
    },
    {
        "content": "<p>Sorry, I did not understand that. After intro nhp, the goal I have is :<br>\np r s : Prop,<br>\nprs : p → r ∨ s,<br>\nnhp : ¬p<br>\n⊢ (p → r) ∨ (p → s)</p>",
        "id": 242929332,
        "sender_full_name": "Jagadish Bapanapally",
        "timestamp": 1623871251
    },
    {
        "content": "<p>Well use either of <code>left</code> and <code>right</code>. Both subsequent goals will be true because <code>p</code> is false!</p>",
        "id": 242930702,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1623871901
    },
    {
        "content": "<p>Got it. Thanks. Below is the proof:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span> <span class=\"bp\">∨</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">s</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">intro</span> <span class=\"n\">prs</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">or.elim</span> <span class=\"o\">(</span><span class=\"n\">em</span> <span class=\"n\">p</span><span class=\"o\">),</span>\n<span class=\"n\">intro</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">hors</span> <span class=\"o\">:=</span> <span class=\"n\">prs</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">hors</span><span class=\"o\">,</span>\n<span class=\"n\">left</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">hp1</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"n\">hors</span><span class=\"o\">,</span>\n<span class=\"n\">right</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">hp1</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"n\">hors</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">nhp</span><span class=\"o\">,</span>\n<span class=\"n\">left</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">hp10</span><span class=\"o\">,</span>\n<span class=\"n\">contradiction</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 242931006,
        "sender_full_name": "Jagadish Bapanapally",
        "timestamp": 1623872021
    },
    {
        "content": "<p>If you want to compare, here's the mathlib proof: <a href=\"https://leanprover-community.github.io/mathlib_docs/logic/basic.html#imp_or_distrib\"><code>imp_or_distrib</code></a></p>",
        "id": 242931742,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1623872295
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 242932620,
        "sender_full_name": "Jagadish Bapanapally",
        "timestamp": 1623872678
    },
    {
        "content": "<p>If you use mathlib then </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">r</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span> <span class=\"bp\">∨</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">((</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">s</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">tauto</span><span class=\"bp\">!</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 242933214,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1623872933
    }
]