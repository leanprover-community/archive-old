[
    {
        "content": "<p>How on earth does this work?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.module.basic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">wat</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">semimodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">has_scalar</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"o\">:=</span>\n<span class=\"n\">h.to_has_scalar</span>\n\n<span class=\"k\">#print</span> <span class=\"n\">semimodule.to_has_scalar</span> <span class=\"c1\">-- doesn't exist</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">pp.implicit</span> <span class=\"n\">true</span>\n<span class=\"k\">#print</span> <span class=\"n\">wat</span> <span class=\"c1\">-- a long chain of projections!</span>\n</code></pre></div>",
        "id": 235159402,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618828573
    },
    {
        "content": "<p>Oh, it's only available on new structures:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.module.basic</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">new</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">A1</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n<span class=\"kd\">structure</span> <span class=\"n\">A2</span> <span class=\"kd\">extends</span> <span class=\"n\">A1.</span>\n<span class=\"kd\">structure</span> <span class=\"n\">A3</span> <span class=\"kd\">extends</span> <span class=\"n\">A2.</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A3</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A1</span> <span class=\"o\">:=</span> <span class=\"n\">a.to_A1</span>  <span class=\"c1\">-- ok</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">new</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">old</span>\n\n<span class=\"kd\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">A1</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n<span class=\"kd\">structure</span> <span class=\"n\">A2</span> <span class=\"kd\">extends</span> <span class=\"n\">A1.</span>\n<span class=\"kd\">structure</span> <span class=\"n\">A3</span> <span class=\"kd\">extends</span> <span class=\"n\">A2.</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A3</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A1</span> <span class=\"o\">:=</span> <span class=\"n\">a.to_A1</span>  <span class=\"c1\">-- fail</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">old</span>\n</code></pre></div>",
        "id": 235160341,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618829191
    },
    {
        "content": "<p>Do we have documentation for it? <del>docs#old_structure_cmd</del>?</p>",
        "id": 235160364,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618829213
    },
    {
        "content": "<p>I would have guessed this was the other way round. I note that:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A3</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A1</span> <span class=\"o\">:=</span> <span class=\"n\">a.to_A2.to_A1</span>\n</code></pre></div>\n<p>works.</p>",
        "id": 235160875,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1618829519
    }
]