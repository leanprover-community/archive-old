[
    {
        "content": "<p>Anyone know why there are no docs generated for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/eq.rec\">docs#eq.rec</a>?</p>",
        "id": 261499825,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636984793
    },
    {
        "content": "<p>We don't generate docs for any \"autogenerated\" lemmas</p>",
        "id": 261501563,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636985668
    },
    {
        "content": "<p>oh weird</p>",
        "id": 261501923,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636985837
    },
    {
        "content": "<p>I guess there are a lot of them, but <code>X.rec</code> seems important no? I mean there are many occurrences of <code>eq.rec</code> in the statements of other lemmas</p>",
        "id": 261502076,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636985927
    },
    {
        "content": "<p>I guess the argument is that <code>.rec</code> is \"obvious\" from the <code>inductive</code> declaration</p>",
        "id": 261502254,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636986022
    },
    {
        "content": "<p>Maybe we should have a collapsed panel of \"subdeclarations\" inside <code>inductive</code> boxes which shows all the autogenerated definitions  like <code>rec</code>, <code>rec_on</code>, <code>cases</code>, ...</p>",
        "id": 261502359,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636986087
    },
    {
        "content": "<p>It would be nice if <code>eq.rec</code> redirects to <code>eq</code> in the same way as <a href=\"https://leanprover-community.github.io/mathlib_docs/find/eq.refl\">docs#eq.refl</a> does. I don't think we need to change the entry of <code>eq</code> to include information about <code>eq.rec</code> though.</p>",
        "id": 261503029,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1636986393
    },
    {
        "content": "<p>Having something to link to for <code>eq.rec</code> is useful for explaining to users of other proof assistants (why this just came up now for me).</p>",
        "id": 261503345,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636986540
    },
    {
        "content": "<p>Maybe we can have some mechanism whereby we manually indicate to the documentation generator that it should include documentation for indicated autogenerated definitions (e.g. <code>eq.rec</code>, <code>eq.rec_on</code> but not the recursors for every random inductive type)</p>",
        "id": 261503484,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636986600
    },
    {
        "content": "<p>Or maybe just for <code>rec</code> that actually appear in statement of other lemmas?</p>",
        "id": 261503585,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636986627
    },
    {
        "content": "<p>That also sounds reasonable but I am not sure if the documentation generator has access to that information at an appropriate time</p>",
        "id": 261503652,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636986663
    },
    {
        "content": "<p>If the lean exporter just wrote out all definitions including autogenerated ones (rather than <a href=\"https://github.com/leanprover-community/doc-gen/blob/master/src/export_json.lean#L310\">filtering them out</a>), then the python script could filter them back out again, at the point when it has all the information</p>",
        "id": 261503739,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636986715
    },
    {
        "content": "<p>We could try to include the auto-generated declarations in the documentation, but collapse them by default.  (Not sure how much space they take up.  There's also various kinds of auto-generated declarations, equation lemmas, no_confusion, injectivity lemmas, sizeof, sunfold, expansion of general inductive types, ...).</p>",
        "id": 261517121,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1636991818
    },
    {
        "content": "<p>Equation lemmas are already included as part of the definition, and also they have the same name as the corresponding definition so I wouldn't include them.</p>",
        "id": 261520143,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1636993041
    },
    {
        "content": "<blockquote>\n<p>and also they have the same name as the corresponding definition</p>\n</blockquote>\n<p>That's not true, they are called <code>foo.equations._eqn_1</code>. <code>rw</code> and <code>simp</code> just know how to desugar <code>foo</code> into that name</p>",
        "id": 261520501,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636993183
    },
    {
        "content": "<p>We already handle these in doc_gen by putting an \"Equations\" section after the def, so the proposal is just to do the same with \"Auxiliary declarations\" too right</p>",
        "id": 261520741,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1636993281
    },
    {
        "content": "<p>Yes, although the \"auxiliary declarations\" will likely need explicit arguments unlike the equations which mostly just reuse the arguments of the parent</p>",
        "id": 261520904,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636993337
    },
    {
        "content": "<p>I guess we'd add all of these?<br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/ca61dbffa497f43e2bdf6c4c6f446c112043ecd1/src/meta/expr.lean#L1086-L1088\">https://github.com/leanprover-community/mathlib/blob/ca61dbffa497f43e2bdf6c4c6f446c112043ecd1/src/meta/expr.lean#L1086-L1088</a></p>",
        "id": 261523340,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636994296
    },
    {
        "content": "<p>I think it could be helpful to show them.  I don't how many people know all the auto-generated definitions, nevermind how they are defined.</p>",
        "id": 261525368,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1636995207
    },
    {
        "content": "<p>I like this idea to make the autogenerated definitions more documented.  I remember it being frustrating while learning when I'd follow definitions and hit one of them.  It was very unclear what they were or what they were for, and there's not much that helps direct you to the answer (save asking Zulip or thinking to check the right textbook).</p>\n<p>Would it be a good idea to modify <code>#print</code> so that it directs you to how an automatically generated definition was created?  I imagine <code>#print eq.rec</code> could at the least be like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">protected</span> <span class=\"n\">eliminator</span> <span class=\"n\">eq.rec</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">motive</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Sort</span> <span class=\"n\">l</span><span class=\"o\">},</span> <span class=\"n\">motive</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">ᾰ</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">},</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">ᾰ</span> <span class=\"bp\">→</span> <span class=\"n\">motive</span> <span class=\"n\">ᾰ</span>\n\n<span class=\"n\">Generated</span> <span class=\"n\">for</span> <span class=\"n\">the</span> <span class=\"kd\">inductive</span> <span class=\"n\">type</span> <span class=\"n\">eq.</span>\n</code></pre></div>\n<p>and maybe even point you to where in the Lean source code it's generated.</p>",
        "id": 261526127,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636995564
    },
    {
        "content": "<p>(Relatedly, sometimes I feel like it would be nice to have provenance information for other automatically generated objects, like things created by <code>to_additive</code>.  Could there be something like a \"from\" attribute that the docs could include and linkify?)</p>",
        "id": 261526581,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636995731
    },
    {
        "content": "<p>We already have \"to\" attributes, so it could be enough to just reverse that map.</p>",
        "id": 261527022,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1636995925
    },
    {
        "content": "<p>There are also lemmas semi-auto-generated by @[simps], reassoc, elementwise etc. which can be lengthy. For example, I'd rather have <a href=\"https://leanprover-community.github.io/mathlib_docs/topology/sheaves/presheaf.html#Top.presheaf.pullback_map_app\">this</a> collapsed.</p>",
        "id": 261556156,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1637008975
    },
    {
        "content": "<p>I think that also needs <code>open category_theory topological_space opposite</code>, which is another reasonable feature request.</p>",
        "id": 261556519,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1637009179
    }
]