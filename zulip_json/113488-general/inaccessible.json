[
    {
        "content": "<p>Yaël recently made me aware of <code>inaccessible</code>, an abandoned branch by <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> from 2019. I'm interested in reviving it and PR-ing it.</p>",
        "id": 269307771,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1643137846
    },
    {
        "content": "<p>What was the goal of this branch? Was it just to add a few theorems on cofinality?</p>",
        "id": 269307802,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1643137859
    },
    {
        "content": "<p>(Also, some help on the remaining theorems would be nice...)</p>",
        "id": 269314097,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1643140321
    },
    {
        "content": "<p>Yes, I just wanted to add some results about inaccessible cardinals. I don't think I had a specific goal in mind.</p>",
        "id": 269380009,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1643187880
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/inaccessible\">branch#inaccessible</a></p>",
        "id": 269380016,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1643187886
    },
    {
        "content": "<p>For the two sorry's that I had remaining when I ended, <code>cof_bsup_le_cof_of_nondecreasing</code> has mathematically a very similar statement to <code>cof_sup_le_cof</code> and <code>cof_bsup_eq</code> is similar to <code>cof_sup_eq_cof</code>. I remember that I still had some difficulties in proving them, but maybe following a similar proof strategy helps.</p>",
        "id": 269381823,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1643188997
    },
    {
        "content": "<p>I hope this helps. Thanks for and good luck on reviving it!</p>",
        "id": 269381957,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1643189072
    },
    {
        "content": "<p>A few of these theorems had the assumption <code>∀ i, f i &lt; sup f</code>. As it turns out, these were actually theorems about least strict upper bounds, and I've restated them accordingly.</p>",
        "id": 269786415,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1643396796
    },
    {
        "content": "<p>With that said, I'm a bit skeptical about one of the yet-unproven statements:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">cof_lsub_eq_cof</span> <span class=\"o\">{</span><span class=\"n\">ι</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">is_well_order</span> <span class=\"n\">ι</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">ordinal</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">r</span> <span class=\"n\">i</span> <span class=\"n\">j</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">cof</span> <span class=\"o\">(</span><span class=\"n\">lsub.</span><span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">type</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">lift.cof</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 269786648,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1643396872
    },
    {
        "content": "<p>Well orders are supposed to be strict, right? If so, wouldn't the correct assumption be <code>∀ i j, r i j → f i &lt; f j</code>?</p>",
        "id": 269786809,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1643396919
    },
    {
        "content": "<p>Otherwise you'd get issues with constant functions.</p>",
        "id": 269786913,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1643396956
    }
]