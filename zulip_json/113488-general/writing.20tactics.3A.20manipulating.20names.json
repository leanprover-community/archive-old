[
    {
        "content": "<p>I have just written my first tactic \"defi\" below, which allow to call a lemma whose name is \"lemme_defi_<em>something</em>\" for rewriting the target, by typing \"defi <em>something</em>\". I struggled with the different types involved: I had to transform \"something\" into a string, add to it the prefix \"lemme_defi_\", then transform this into a name using mk_simple_name, then the name into a constant using mk_const, then the constant into an expression (through a pre-expression). </p>\n<p>Is there a more direct way??</p>\n<p>Could I have found the command mk_simple_name by a smarter way than searching randomly into the doc ?</p>\n<p><code>meta def defi (name : parse ident) : tactic unit :=\ndo\n    let nom_lemme := \"lemme_defi_\" ++ to_string name,\n    trace (\"J'appelle le lemme \" ++ nom_lemme),\n    let name := mk_simple_name nom_lemme, \n    name ← mk_const name,\n    expr ←  to_expr ```(%%name),\n    do {rewrite_target expr, trace \"sens direct\"}\n            &lt;|&gt;  do {rewrite_target expr {symm := tt}, trace \"sens réciproque\"}</code></p>",
        "id": 194297338,
        "sender_full_name": "Frédéric Le Roux",
        "timestamp": 1587041068
    },
    {
        "content": "<p>I don't think there is a simpler way. This is a bit of an unusual operation; more common would be to put something in a namespace, that is, <code>lemme_defi.something</code>, in which case you could use <code>&lt;.&gt;</code> for doing the name append operation</p>",
        "id": 194299050,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587041899
    },
    {
        "content": "<p>I don't see the reason for the <code>to_expr</code> step though. <code>mk_const</code> should have already returned an expr</p>",
        "id": 194299182,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587041981
    },
    {
        "content": "<p>I would have found <code>mk_simple_name</code> by looking around in the file where <code>name</code> is defined, which has a number of useful operations on names</p>",
        "id": 194299343,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587042037
    },
    {
        "content": "<p>Indeed it works without the <code>to_expr</code>step. I will consider using a namespace. Thanks!</p>",
        "id": 194302988,
        "sender_full_name": "Frédéric Le Roux",
        "timestamp": 1587043471
    }
]