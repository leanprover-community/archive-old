[
    {
        "content": "<p>I've got a function from N -&gt; R, which is defined as <code>f(N) = \\sum_{k = 0}^N (-1)^k / k!</code>, and I want to show that <code>f(N) -&gt; exp(-1)</code> as <code>N \\to \\infty</code>.</p>\n<p>It seems like this should be straightforward, but I'm having significant trouble with it. Specifically, the limit is defined as a <code>tendsto</code>/filter kind of thing, but the exponential is defined as a Cauchy sequence. I tried to find a lemma that says \"the tendsto-limit of a cau_seq is just cau_seq.lim\", but I can't seem to find it.</p>\n<p>Is there something I've overlooked here?</p>\n<p><a href=\"https://github.com/leanprover-community/mathlib/pull/7526/files#diff-e8e1ec6b399bfba2de121c17168d48fae7dbd157dad77a519b84f97f5254b301R126-R157\">link to the relevant code</a></p>",
        "id": 242422227,
        "sender_full_name": "Henry Swanson",
        "timestamp": 1623465387
    },
    {
        "content": "<p>You almost always want to avoid working with <code>cau_seq</code>; there should be some API for the exponential function that lets you avoid it.  What's the goal state before you start unfolding?</p>",
        "id": 242422620,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623465982
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"402311\">Henry Swanson</span> <a href=\"#narrow/stream/113488-general/topic/cau_seq.20and.20tendsto/near/242422227\">said</a>:</p>\n<blockquote>\n<p>I tried to find a lemma that says \"the tendsto-limit of a cau_seq is just cau_seq.lim\", but I can't seem to find it.</p>\n</blockquote>\n<p>This lemma is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cau_seq.tendsto_limit\">docs#cau_seq.tendsto_limit</a>. This whole <code>cau_seq</code> shouldn't exist at all. It's a historical accident, we're sorry about that. After escaping <code>cau_seq</code> hell you'll run into coercion hell. You can do something like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">open</span> <span class=\"n\">finset</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">complex.re_sum</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">‚ÑÇ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">‚àë</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">u</span> <span class=\"n\">k</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">re</span> <span class=\"bp\">=</span> <span class=\"bp\">‚àë</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">k</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">re</span> <span class=\"o\">:=</span>\n<span class=\"n\">complex.re_lm.map_sum</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">topological_space</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">complex.tendsto_exp_series</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">‚ÑÇ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">‚àë</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">z</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"n\">k.factorial</span><span class=\"o\">)</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"bp\">$</span> <span class=\"n\">z.exp</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">convert</span> <span class=\"n\">z.exp'.tendsto_limit</span><span class=\"o\">,</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">complex.exp</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">real.tendsto_exp_series</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">‚àë</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"n\">k.factorial</span><span class=\"o\">)</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"bp\">$</span> <span class=\"n\">x.exp</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">),</span> <span class=\"bp\">‚àë</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"n\">k.factorial</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n  <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">‚àë</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">‚ÑÇ</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">k.factorial</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">re</span><span class=\"o\">),</span>\n  <span class=\"o\">{</span> <span class=\"n\">ext</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">complex.re_sum</span><span class=\"o\">,</span>\n    <span class=\"n\">congr'</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"n\">ext</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">‚ÑÇ</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">k.factorial</span> <span class=\"o\">:</span> <span class=\"n\">‚ÑÇ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">x</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"n\">k.factorial</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">‚ÑÇ</span><span class=\"o\">),</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">,</span>\n        <span class=\"n\">complex.of_real_re</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">complex.continuous_re.tendsto</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">complex.tendsto_exp_series</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">num_derangements_tendsto_e</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">num_derangements</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">n.factorial</span><span class=\"o\">)</span> <span class=\"n\">at_top</span>\n  <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"o\">(</span><span class=\"n\">real.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÄ</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">num_derangements</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">n.factorial</span> <span class=\"bp\">=</span>\n    <span class=\"bp\">‚àë</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">finset.range</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"n\">k.factorial</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">num_derangements_sum</span><span class=\"o\">,</span>\n    <span class=\"n\">push_cast</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">finset.sum_div</span><span class=\"o\">,</span>\n    <span class=\"n\">refine</span> <span class=\"n\">finset.sum_congr</span> <span class=\"o\">(</span><span class=\"n\">refl</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">intros</span> <span class=\"n\">k</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">h_le</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">‚â§</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"n\">finset.mem_range_succ_iff.mp</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">nat.desc_fac_eq_div</span><span class=\"o\">,</span> <span class=\"n\">nat.add_sub_cancel'</span> <span class=\"n\">h_le</span><span class=\"o\">],</span>\n    <span class=\"n\">push_cast</span> <span class=\"o\">[</span><span class=\"n\">nat.factorial_dvd_factorial</span> <span class=\"n\">h_le</span><span class=\"o\">],</span>\n    <span class=\"n\">field_simp</span> <span class=\"o\">[</span><span class=\"n\">nat.factorial_ne_zero</span><span class=\"o\">],</span>\n    <span class=\"n\">ring</span><span class=\"o\">,</span>\n  <span class=\"o\">},</span>\n  <span class=\"n\">simp_rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">set</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">‚Ñù</span> <span class=\"o\">:=</span> <span class=\"bp\">Œª</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">),</span> <span class=\"bp\">‚àë</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"n\">k.factorial</span><span class=\"o\">,</span>\n  <span class=\"n\">change</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"n\">at_top</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">tendsto_add_at_top_iff_nat</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">real.tendsto_exp_series</span><span class=\"o\">,</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 242441134,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623492079
    },
    {
        "content": "<p>Clearly this shouldn't be in the <code>data</code> folder since it contains actual math.</p>",
        "id": 242441147,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623492110
    },
    {
        "content": "<p>Yeah, I'd move it to a separate file as well Henry, as it's quite heavy with the extra imports:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.metric_space.cau_seq_filter</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.complex.module</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.complex.basic</span>\n</code></pre></div>",
        "id": 242442953,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1623494312
    },
    {
        "content": "<p>I had a plan to redefine exp in a more general setting this summer, I'll get back to it hopefully.</p>",
        "id": 242467320,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1623525977
    }
]