[
    {
        "content": "<p>The printout here looks wrong: <a href=\"https://leanprover-community.github.io/mathlib_docs/computability/turing_machine.html#turing.TM2.stmt\">https://leanprover-community.github.io/mathlib_docs/computability/turing_machine.html#turing.TM2.stmt</a></p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">inductive</span> <span class=\"n\">turing</span><span class=\"bp\">.</span><span class=\"err\">​</span><span class=\"n\">TM2</span><span class=\"bp\">.</span><span class=\"err\">​</span><span class=\"n\">stmt</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u_2</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u_3</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u_4</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"n\">u_1</span> <span class=\"n\">u_2</span> <span class=\"n\">u_3</span> <span class=\"n\">u_4</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">push</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"err\">Γ</span> <span class=\"o\">:</span> <span class=\"n\">K</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u_2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"err\">Λ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"err\">Γ</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">turing</span><span class=\"bp\">.</span><span class=\"n\">TM2</span><span class=\"bp\">.</span><span class=\"n\">stmt</span> <span class=\"err\">Γ</span> <span class=\"err\">Λ</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">turing</span><span class=\"bp\">.</span><span class=\"n\">TM2</span><span class=\"bp\">.</span><span class=\"n\">stmt</span> <span class=\"err\">Γ</span> <span class=\"err\">Λ</span> <span class=\"n\">σ</span>\n<span class=\"bp\">|</span> <span class=\"n\">peek</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"err\">Γ</span> <span class=\"o\">:</span> <span class=\"n\">K</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u_2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"err\">Λ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">option</span> <span class=\"o\">(</span><span class=\"err\">Γ</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">turing</span><span class=\"bp\">.</span><span class=\"n\">TM2</span><span class=\"bp\">.</span><span class=\"n\">stmt</span> <span class=\"err\">Γ</span> <span class=\"err\">Λ</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">turing</span><span class=\"bp\">.</span><span class=\"n\">TM2</span><span class=\"bp\">.</span><span class=\"n\">stmt</span> <span class=\"err\">Γ</span> <span class=\"err\">Λ</span> <span class=\"n\">σ</span>\n<span class=\"bp\">|</span> <span class=\"n\">pop</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">decidable_eq</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"err\">Γ</span> <span class=\"o\">:</span> <span class=\"n\">K</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">u_2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"err\">Λ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_3</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_4</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">option</span> <span class=\"o\">(</span><span class=\"err\">Γ</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">σ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">turing</span><span class=\"bp\">.</span><span class=\"n\">TM2</span><span class=\"bp\">.</span><span class=\"n\">stmt</span> <span class=\"err\">Γ</span> <span class=\"err\">Λ</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">turing</span><span class=\"bp\">.</span><span class=\"n\">TM2</span><span class=\"bp\">.</span><span class=\"n\">stmt</span> <span class=\"err\">Γ</span> <span class=\"err\">Λ</span> <span class=\"n\">σ</span>\n<span class=\"bp\">...</span>\n</code></pre></div>\n\n\n<ol>\n<li>The arguments <code>K _inst_1 Γ Λ σ</code> should be elided from the constructors</li>\n<li>The colon should be to the right of these arguments in the type itself</li>\n</ol>",
        "id": 209934888,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1600008744
    },
    {
        "content": "<p>I thought that (1) was an issue related to the use of parameters in this file, but even <a href=\"https://leanprover-community.github.io/mathlib_docs/core/init/core.html#list\"><code>list</code></a> has the same issue</p>",
        "id": 209934973,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1600008880
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/leanprover-community/doc-gen/pull/159\">leanprover-community/doc-gen#159</a> to track this</p>",
        "id": 272268885,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645109053
    }
]