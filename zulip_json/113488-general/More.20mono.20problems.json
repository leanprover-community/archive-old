[
    {
        "content": "<p>I still can't get <code>mono</code> to work in <a href=\"https://github.com/leanprover-community/mathlib/issues/835\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/835\">#835</a> -- in Line 467 <a href=\"https://github.com/leanprover-community/mathlib/blob/hyperreal/src/data/real/hyperreal.lean\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/hyperreal/src/data/real/hyperreal.lean\">here</a>, I get the <a href=\"https://travis-ci.org/leanprover-community/mathlib/jobs/528428924\" target=\"_blank\" title=\"https://travis-ci.org/leanprover-community/mathlib/jobs/528428924\">error</a>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">travis</span><span class=\"bp\">/</span><span class=\"n\">build</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">data</span><span class=\"bp\">/</span><span class=\"n\">real</span><span class=\"bp\">/</span><span class=\"n\">hyperreal</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">467</span><span class=\"o\">:</span><span class=\"mi\">14</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">type</span> <span class=\"n\">mismatch</span> <span class=\"n\">at</span> <span class=\"n\">application</span>\n  <span class=\"n\">le_of_lt</span> <span class=\"o\">(</span><span class=\"n\">hxr&#39;</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"bp\">/</span> <span class=\"n\">abs</span> <span class=\"n\">s</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">half_pos</span> <span class=\"o\">(</span><span class=\"n\">div_pos</span> <span class=\"n\">hd</span> <span class=\"o\">(</span><span class=\"n\">abs_pos_of_ne_zero</span> <span class=\"n\">hs</span><span class=\"o\">))))</span>\n<span class=\"n\">term</span>\n  <span class=\"n\">hxr&#39;</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"bp\">/</span> <span class=\"n\">abs</span> <span class=\"n\">s</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">half_pos</span> <span class=\"o\">(</span><span class=\"n\">div_pos</span> <span class=\"n\">hd</span> <span class=\"o\">(</span><span class=\"n\">abs_pos_of_ne_zero</span> <span class=\"n\">hs</span><span class=\"o\">)))</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"err\">↑</span><span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"err\">↑</span><span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"bp\">/</span> <span class=\"n\">abs</span> <span class=\"n\">s</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">of</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">of</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">of</span> <span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"bp\">/</span> <span class=\"n\">abs</span> <span class=\"n\">s</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">of</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>This doesn't seem to make much sense, since I've already performed <code>mono with 0 ≤ abs (of s)</code> to simplify the goal to <code>abs (x - ↑r) &lt; ↑(d / abs s / 2)</code>.</p>",
        "id": 165058523,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1557224081
    },
    {
        "content": "<p>Ah, never mind, I can do this without mono.</p>",
        "id": 165059601,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1557225330
    }
]