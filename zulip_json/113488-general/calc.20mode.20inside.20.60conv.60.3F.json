[
    {
        "content": "<p>It would be really useful to be able to use <code>calc</code> inside a <code>conv</code> block, but this currently fails with <code>unknown declaration 'conv.interactive.refine'</code>.</p>\n<p>Anyone either want to do this, or could summarise what would be involved to make this work?</p>",
        "id": 202075537,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593168718
    },
    {
        "content": "<p><del>Ah, I think this is still fallout from the change where <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> modified the tactic-mode calc block so that it uses <code>refine</code> instead of <code>exact</code>.</del></p>",
        "id": 202075816,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1593168945
    },
    {
        "content": "<p>Now that I look at the lean code, it seems like there is no <code>conv.interactive.exact</code> either.</p>",
        "id": 202075944,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1593169027
    },
    {
        "content": "<p>I think it should be enough to add a <code>conv.interactive.refine</code> function that takes a proof of an equality and then applies it using transitivity:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"bp\">â„•</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">conv</span> <span class=\"o\">{</span>\n<span class=\"n\">to_lhs</span><span class=\"o\">,</span>\n<span class=\"c1\">-- | a</span>\n<span class=\"n\">exact</span> <span class=\"k\">show</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"c1\">-- | b</span>\n<span class=\"n\">exact</span> <span class=\"k\">show</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">sorry</span>\n<span class=\"c1\">-- | c</span>\n<span class=\"o\">}</span>\n</code></pre></div>",
        "id": 202076076,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1593169128
    },
    {
        "content": "<p>Great! I've been missing that anyway.</p>",
        "id": 202082362,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593173941
    }
]