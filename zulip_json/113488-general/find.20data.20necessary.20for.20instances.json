[
    {
        "content": "<p>Is there an easy way to find which fields should be provided when defining an instance?<br>\nFor example making an instance of a ring requires you to fill in a lot of data from different classes and manually going through each class in the hierarchy and finding the names of the respective data is quite some work</p>",
        "id": 154708830,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547023648
    },
    {
        "content": "<p>One method is a hole command, as seen briefly in Mario's coding session yesterday:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">variable</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">ring</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span><span class=\"bp\">!</span> <span class=\"bp\">!</span><span class=\"o\">}</span>\n</pre></div>\n\n\n<p>In VSCode, click on the lightbulb and choose \"generate a skeleton for the structure.\"</p>",
        "id": 154708917,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1547023761
    },
    {
        "content": "<p>(You'll need the right import, probably mathlib's <code>tactic.interactive</code>, I don't remember.)</p>",
        "id": 154708931,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1547023793
    },
    {
        "content": "<p>If I type</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ring</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n\n<span class=\"o\">}</span>\n</pre></div>\n\n\n<p>then (in VS Code) in the \"problems\" window (which I sometimes need to create by \"pulling up\" near the bottom of VS Code) then I see 15 problems, one for each field I need to create. Does this help?</p>",
        "id": 154708988,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1547023815
    },
    {
        "content": "<p>Alternatively, you can just write an empty structure {} and look at the error messages. (What Kevin said.)</p>",
        "id": 154708993,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1547023820
    },
    {
        "content": "<p>Within the <code>{ }</code> Lean is expecting me to write <code>add := blah</code> etc, and I get a problem for each missing field.</p>",
        "id": 154709008,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1547023837
    },
    {
        "content": "<p>Rob's import is correct -- I just tried it.</p>",
        "id": 154709107,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1547023963
    },
    {
        "content": "<p>Thanks! Is there also a generate skeleton for emacs?</p>",
        "id": 154709132,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547024031
    },
    {
        "content": "<p>Yes, move the cursor inside the <code>{! !}</code> and press C-c SPC</p>",
        "id": 154709175,
        "sender_full_name": "Reid Barton",
        "timestamp": 1547024053
    },
    {
        "content": "<p>Not having much succes with the C-c SPC. What should I enter when asked for a hole command?</p>",
        "id": 154709342,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547024310
    },
    {
        "content": "<p>If you press tab, one of the options should be \"Instance Stub — Generate a skeleton for the structure under construction.\"</p>",
        "id": 154709443,
        "sender_full_name": "Reid Barton",
        "timestamp": 1547024419
    },
    {
        "content": "<p>It requires importing the mathlib module that Rob mentioned</p>",
        "id": 154709450,
        "sender_full_name": "Reid Barton",
        "timestamp": 1547024444
    }
]