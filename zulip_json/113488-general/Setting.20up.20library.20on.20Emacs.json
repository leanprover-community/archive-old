[
    {
        "content": "<p>Hi, I'm learning Lean in a course I'm taking and the professor provides us the course's Lean library but as a collections of .lean files, instead of packaging properly, since it's supposed to be used with the VSCode binary that he also provides. I use Emacs so when I copy-and-paste the .lean files onto my own working directory, it doesn't import correctly. Does anyone have experience with using a library on Emacs?</p>",
        "id": 225340547,
        "sender_full_name": "Pradana Aumars",
        "timestamp": 1612551260
    },
    {
        "content": "<p>Just to be sure -- is this Lean 3 or Lean 4, and are you using mathlib? Finally, if you let me use the standard VS Code (and had all the Lean files) do you think I would be able to get it up and running, or is there some more trickery going on?</p>",
        "id": 225341285,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612551611
    },
    {
        "content": "<p>The modified VSCode is almost unmodified, it's simply <a href=\"https://github.com/VSCodium/vscodium/blob/master/README.md\">VSCodium</a> for licence reasons (you are not allowed to distribute VSCode with Microsoft branding, and VSCodium has the added bonus of being telemetry-free) and it comes with a very slightly modified Lean extension (adding syntax highlighting for my custom verbose tactics). None of this has anything to do with importing files. If emacs cannot find files it mean it's not finding the <code>leanpkg.path</code> file. I don't know how the emacs lean-mode searches for this file, or actually how it searches for the lean executable.</p>",
        "id": 225346504,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1612554009
    },
    {
        "content": "<p>I should add you are creating artificial difficulties by using emacs since the Lean support in emacs is way below the support in VSCode (no <a href=\"https://youtu.be/8NUBQEZYuis?list=PLlF-CfQhukNnO8z3TcFcoKozif9gbl7Yt\">tactic state widgets</a>).</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"8NUBQEZYuis\" href=\"https://youtu.be/8NUBQEZYuis?list=PLlF-CfQhukNnO8z3TcFcoKozif9gbl7Yt\"><img src=\"https://i.ytimg.com/vi/8NUBQEZYuis/default.jpg\"></a></div>",
        "id": 225347579,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1612554586
    },
    {
        "content": "<p>Packaging information is stored in the <code>leanpkg.toml</code> file. If you've installed <a href=\"https://github.com/Kha/elan\">elan</a>, you should have a <code>leanpkg</code> binary on the PATH. Then run <code>leanpkg configure</code> in the directory where <code>leanpkg.toml</code> is stored. This should set up <code>leanpkg.path</code> and install the correct Lean version. At this point Emacs' <code>lean-mode</code>should pick everything up.</p>",
        "id": 225348995,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1612555316
    },
    {
        "content": "<p>If <code>lean-mode</code> needs the toml file then you can create a file <code>leanpkg.toml</code> inside the <code>exos</code> folder with content</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[package]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"mdd154\"</span>\n<span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"0.1\"</span>\n<span class=\"n\">lean_version</span> <span class=\"o\">=</span> <span class=\"s\">\"leanprover-community/lean:3.24.0\"</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s\">\"..\"</span>\n\n<span class=\"k\">[dependencies]</span>\n<span class=\"n\">mathlib</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s\">\"../mathlib\"</span><span class=\"p\">}</span>\n</code></pre></div>\n<p>But again using emacs is a very bad idea.</p>",
        "id": 225350637,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1612556083
    }
]