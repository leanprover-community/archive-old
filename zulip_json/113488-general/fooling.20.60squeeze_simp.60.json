[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">â„¤</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">3</span><span class=\"bp\">=</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">3</span><span class=\"bp\">+</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">+</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">3</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">squeeze_simp</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">3</span><span class=\"bp\">=</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">3</span><span class=\"bp\">+</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">+</span><span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"bp\">+</span><span class=\"n\">b</span><span class=\"bp\">^</span><span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">ring</span><span class=\"o\">]</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>succeeds, and suggests</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Try</span> <span class=\"n\">this</span><span class=\"o\">:</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"o\">((</span><span class=\"k\">fun</span> <span class=\"o\">(</span><span class=\"n\">this</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">frozen_name</span> <span class=\"n\">eq</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_pow.pow</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_add.add</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_add.add</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_add.add</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_add.add</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_pow.pow</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_mul.mul</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_mul.mul</span><span class=\"o\">)</span> <span class=\"mi\">3</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_pow.pow</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_mul.mul</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_mul.mul</span><span class=\"o\">)</span> <span class=\"mi\">3</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_pow.pow</span><span class=\"o\">)</span> <span class=\"n\">b</span> <span class=\"mi\">2</span><span class=\"o\">)))</span> <span class=\"o\">((</span><span class=\"n\">frozen_name</span> <span class=\"n\">has_pow.pow</span><span class=\"o\">)</span> <span class=\"n\">b</span> <span class=\"mi\">3</span><span class=\"o\">))),</span> <span class=\"n\">this</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"o\">(</span><span class=\"n\">typed_expr</span> <span class=\"o\">(</span><span class=\"n\">tactic</span> <span class=\"n\">unit</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">interactive.executor.execute_explicit</span> <span class=\"n\">tactic</span> <span class=\"o\">(</span><span class=\"n\">has_bind.seq</span> <span class=\"o\">(</span><span class=\"n\">tactic.save_info</span> <span class=\"o\">(</span><span class=\"n\">anonymous_constructor</span> <span class=\"o\">(</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"n\">_.9</span> <span class=\"mi\">5</span> <span class=\"mi\">57</span><span class=\"o\">)))</span> <span class=\"o\">(</span><span class=\"n\">tactic.istep</span> <span class=\"mi\">5</span> <span class=\"mi\">57</span> <span class=\"mi\">5</span> <span class=\"mi\">57</span> <span class=\"mi\">80</span> <span class=\"o\">(</span><span class=\"n\">tactic.interactive.ring</span> <span class=\"o\">(</span><span class=\"n\">as_is</span> <span class=\"o\">(</span><span class=\"n\">option.none.</span><span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"n\">unit</span><span class=\"o\">)))))))))]</span>\n</code></pre></div>\n<p>which unsurprisingly doesn't work. Probably a <code>wontfix</code> but thought it was good for a laugh on a Friday afternoon.</p>",
        "id": 283083185,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1653059216
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span>  - can we make a whacky amalgamation of <code>pp</code> and <code>to_string</code> to fix this?</p>",
        "id": 283086536,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1653060728
    },
    {
        "content": "<p>do people know if this was an issue in the past? I'm wondering how to control this</p>",
        "id": 283086576,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1653060747
    },
    {
        "content": "<p>Given the priority I would mark it to be solved in Lean 4 since we have more metaprogramming power there</p>",
        "id": 283086705,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1653060805
    },
    {
        "content": "<p>(not that this would be too complicated, it's just that the solution here wouldn't necessarily be translated to Lean 4)</p>",
        "id": 283086858,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1653060867
    },
    {
        "content": "<p>there's a similar issue that <span class=\"user-mention\" data-user-id=\"321696\">@Julian Berman</span>  reported: </p>\n<blockquote>\n<p>changed line 526 of measure_theory/decomposition/jordan.lean to squeeze_simp</p>\n</blockquote>\n<p>I'll try some quick fixes and see what it can do</p>",
        "id": 283087001,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1653060928
    },
    {
        "content": "<p>I'm not really suggesting this needs fixing, I just thought it was funny :-)</p>",
        "id": 283116776,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1653075439
    },
    {
        "content": "<p>Yep, this is ~hopeless in lean 3, it needs actual AST data. We have that now, but not AST printing</p>",
        "id": 283116796,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1653075454
    },
    {
        "content": "<p>it is something that occasionally annoys me about squeeze_simp, it might be better if it just tells me what to add and delete from my list instead of trying and failing to print what I wrote</p>",
        "id": 283116910,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1653075520
    }
]