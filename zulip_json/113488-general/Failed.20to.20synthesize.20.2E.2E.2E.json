[
    {
        "content": "<p>What am I doing wrong here?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">normed_space</span><span class=\"bp\">.</span><span class=\"n\">operator_norm</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"err\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">normed_field</span> <span class=\"err\">𝕜</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">normed_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"err\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">normed_group</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"err\">𝕜</span> <span class=\"n\">F</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">normed_group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"err\">𝕜</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">E</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"err\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"err\">𝕜</span><span class=\"o\">]</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>gives the error \"failed to synthesize type class instance for ... ⊢ <code>topological_space (F →L[𝕜] G)</code>\".</p>",
        "id": 198563142,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1590289407
    },
    {
        "content": "<p>I would have thought that Lean could infer a topological space structure on <code>F →L[𝕜] G</code>, because (1) in <code>analysis.normed_space.operator_norm</code> we have</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">instance</span> <span class=\"n\">to_normed_space</span> <span class=\"o\">:</span> <span class=\"n\">normed_space</span> <span class=\"err\">𝕜</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"err\">𝕜</span><span class=\"o\">]</span> <span class=\"n\">F</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>(2) in <code>analysis.normed_space.basic</code> we have, for <code>[normed_space α E]</code>,</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">instance</span> <span class=\"n\">normed_space</span><span class=\"bp\">.</span><span class=\"n\">topological_vector_space</span> <span class=\"o\">:</span> <span class=\"n\">topological_vector_space</span> <span class=\"n\">α</span> <span class=\"n\">E</span>\n</code></pre></div>\n\n\n<p>(3) in <code>topology.algebra.module</code> we have</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">abbreviation</span> <span class=\"n\">topological_vector_space</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 198563145,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1590289409
    },
    {
        "content": "<p>Does <code>to_normed_space</code> need a <code>nondiscrete_normed_field</code>?</p>",
        "id": 198563883,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590290818
    },
    {
        "content": "<p>Wow, I would never have caught that.  Thank you, Yury!</p>",
        "id": 198563932,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1590290944
    },
    {
        "content": "<p>BTW, could you please rename <code>to_normed_space</code> in section <code>normed_algebra</code> to <code>normed_algebra.to_normed_space</code>?</p>",
        "id": 198563934,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590290992
    },
    {
        "content": "<p>Sure.</p>",
        "id": 198563983,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1590291070
    }
]