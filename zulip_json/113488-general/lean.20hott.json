[
    {
        "content": "<p>There is some form of HoTT for Lean 3. <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> I think you know more about this.<br>\nWith all our new cool tools, can I now easily work on this in one directory, and after that seamlessly switch VS code to a mathlib project?<br>\nCan <code>leanproject</code> support HoTT? Or does it already do it by chance?</p>",
        "id": 190502443,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584106299
    },
    {
        "content": "<p>The <code>hott3</code> project doesn't require any modifications to Lean.  There is a <code>@[hott]</code> attribute that forbids the use of <code>eq.rec</code> and <code>heq.rec</code>, and that's it.</p>",
        "id": 190502896,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584106549
    },
    {
        "content": "<p>However, as soon as you forbid <code>eq.rec</code> you can essentially say goodbye to the core library (or mathlib).  You can use the same <code>list</code>, <code>nat</code>, <code>prod</code>, etc.  But you can't reuse any theorems.</p>",
        "id": 190503013,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584106600
    },
    {
        "content": "<p>If you want to check it out, you can just <code>leanproject get gebner/hott3</code>.</p>",
        "id": 190503063,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584106646
    },
    {
        "content": "<p>I've just added a <code>lean_version</code> field so that elan should pick up the right lean version.</p>",
        "id": 190503100,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584106667
    },
    {
        "content": "<p>You also need to say goodbye to lots of built-in features such as <code>cases</code> or <code>rw</code> or the equation compiler (in general, it still works for lists and natural numbers and such).  So we have <code>eq_cases</code>, <code>hinduction</code>, <code>hsimp</code>, <code>hintro</code>.</p>",
        "id": 190503377,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584106808
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Cloning from https://github.com/gebner/hott3.git\nerror: override toolchain &#39;leanprover-community/lean:3.7.0&#39; is not installed\ninfo: caused by: the toolchain file at &#39;/home/jmc/data/math/hott3/leanpkg.toml&#39; specifies an uninstalled toolchain\n</pre></div>\n\n\n<p>Should leanproject install this for me automatically?</p>",
        "id": 190504528,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584107473
    },
    {
        "content": "<p>Or do we want users to ask elan to do this</p>",
        "id": 190504544,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584107489
    },
    {
        "content": "<p>Are you by any chance on windows?  The 3.7.0 builds will probably take another hour or so.</p>",
        "id": 190504757,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584107623
    },
    {
        "content": "<p>Nope... linux <span aria-label=\"penguin\" class=\"emoji emoji-1f427\" role=\"img\" title=\"penguin\">:penguin:</span></p>",
        "id": 190504830,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584107666
    },
    {
        "content": "<p>Mmmh, then it should work out of the box.  And if doesn't, then mathlib will break for you as well soon.</p>",
        "id": 190504908,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584107739
    },
    {
        "content": "<p>Did you need to do anything for the mathlib upgrade to 3.6.0?</p>",
        "id": 190504972,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584107765
    },
    {
        "content": "<p>I haven't done that yet on this box. Let me try.</p>",
        "id": 190504999,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584107806
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> </p>\n<div class=\"codehilite\"><pre><span></span>(error: override toolchain &#39;leanprover-community/lean:3.6.1&#39; is not installed, the toolchain file at &#39;/home/jmc/data/math/mathlib/leanpkg.toml&#39; specifies an uninstalled toolchain)\n</pre></div>",
        "id": 190505204,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584107941
    },
    {
        "content": "<p>Maybe my <code>elan</code> is really old...</p>",
        "id": 190505215,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584107948
    },
    {
        "content": "<p>I think elan can update itself.</p>",
        "id": 190505223,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584107960
    },
    {
        "content": "<p><code>elan self update</code></p>",
        "id": 190505238,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584107970
    },
    {
        "content": "<p>Does this work for you?</p>",
        "id": 190505245,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584107974
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>$ elan self update\ninfo: checking <span class=\"k\">for</span> self-updates\ninfo: downloading self-update\nError<span class=\"o\">(</span>Download<span class=\"o\">(</span>HttpStatus<span class=\"o\">(</span><span class=\"m\">404</span><span class=\"o\">))</span>, State <span class=\"o\">{</span> next_error: None, backtrace: None <span class=\"o\">})</span>\nerror: could not download file from <span class=\"s1\">&#39;https://github.com/Kha/elan/releases/download/v0.8.0&amp;quot;,&amp;quot;user_id&amp;quot;:null%7D%7D/elan-x86_64-unknown-linux-gnu.tar.gz&#39;</span> to <span class=\"s1\">&#39;/tmp/elan-update.xzw5tBCb62Kj/elan-x86_64-unknown-linux-gnu.tar.gz&#39;</span>\ninfo: caused by: http request returned an unsuccessful status code: <span class=\"m\">404</span>\n</pre></div>",
        "id": 190505272,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584107993
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> This looks like an elan bug ^^</p>",
        "id": 190505378,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584108035
    },
    {
        "content": "<p>I guess you need to reinstall elan.</p>",
        "id": 190505389,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584108042
    },
    {
        "content": "<p>FWIW, I get the same error too.</p>",
        "id": 190505412,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1584108059
    },
    {
        "content": "<p>Huh, I guess HTML parsing isn't very stable after all</p>",
        "id": 190505483,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1584108105
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110024\">Sebastian Ullrich</span> <a href=\"#narrow/stream/113488-general/topic/update-mathlib.20update/near/188675980\" title=\"#narrow/stream/113488-general/topic/update-mathlib.20update/near/188675980\">said</a>:</p>\n<blockquote>\n<p>I parse HTML using regexes, of course</p>\n</blockquote>",
        "id": 190505731,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1584108250
    },
    {
        "content": "<blockquote>\n<p>he comes he comes do not fi​ght he com̡e̶s, ̕h̵i​s un̨ho͞ly radiańcé destro҉ying all enli̍̈́̂̈́ghtenment, HTML tags lea͠ki̧n͘g fr̶ǫm ̡yo​͟ur eye͢s̸ ̛l̕ik͏e liq​uid pain, the song of re̸gular exp​ression parsing will exti​nguish the voices of mor​tal man from the sp​here I can see it can you see ̲͚̖͔̙î̩́t̲͎̩̱͔́̋̀ it is beautiful t​he final snuffing of the lie​s of Man ALL IS LOŚ͖̩͇̗̪̏̈́T ALL I​S LOST the pon̷y he comes he c̶̮omes he comes the ich​or permeates all MY FACE MY FACE</p>\n</blockquote>",
        "id": 190505847,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584108337
    },
    {
        "content": "<p>even joking about it will attract h̵i​s wrath</p>",
        "id": 190506418,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1584108714
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> Reinstalling <code>elan</code> helped</p>",
        "id": 190507199,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584109122
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> Does the error persist after the manual update?</p>",
        "id": 190508554,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1584109829
    },
    {
        "content": "<p>No, it seems to be gone.</p>",
        "id": 190508608,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584109862
    },
    {
        "content": "<p>My CPU's are currently maxing out while checking <code>cubical/*.lean</code></p>",
        "id": 190508656,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584109897
    },
    {
        "content": "<p>Great, then the bug has been long fixed</p>",
        "id": 190508859,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1584109960
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> Currently <code>master</code> contains <code>sorry</code>. Do you have any idea how hard it would be to make it <code>sorry</code>-free?</p>",
        "id": 190509922,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584110401
    },
    {
        "content": "<p><code>hott3</code> is pretty much unmaintained.  <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> has been merging a lot of PRs, but I don't think anybody actually has a use for it.</p>",
        "id": 190510451,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584110663
    },
    {
        "content": "<p>Also <code>hott3</code> is far from \"finished\".  Most of the files are a direct port of the Lean 2 HoTT library.  But only like 5% is ported.  The <code>sorry</code> should be the least of your worries.</p>",
        "id": 190510512,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584110705
    },
    {
        "content": "<p>Is it at all reasonable to think that we can try to prove quadratic reciprocity in HoTT3?</p>",
        "id": 190513293,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584111975
    },
    {
        "content": "<p>Or should we switch to cubical agda, or something similar, if we want to do such an experiment?</p>",
        "id": 190513333,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1584111994
    },
    {
        "content": "<p>Other people are probably more qualified than me to answer this question.  <code>hott3</code> is at a point where I think you could try this experiment (if you have way too much free time).  On the plus side, there is a simplifier and you already know the syntax.  If I wanted to it, I would probably also look at other HoTT systems with mathematical libraries first, such as the HoTT library in Coq.  I wouldn't do it in cubical Agda, because AFAICT there are no tactics and I wouldn't want to work without <code>rw</code> or <code>simp</code>.</p>",
        "id": 190515365,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1584112906
    }
]