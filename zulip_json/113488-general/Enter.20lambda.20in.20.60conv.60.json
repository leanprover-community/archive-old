[
    {
        "content": "<p>I should read <a href=\"https://leanprover-community.github.io/mathlib_docs/conv.html\" title=\"https://leanprover-community.github.io/mathlib_docs/conv.html\">docs</a> before asking questions.</p>",
        "id": 192717651,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585857469
    },
    {
        "content": "<p>Though I still have a question: how hard is it to make <code>conv</code> aware of <code>ext</code>? Now I can call <code>funext</code> to enter a function but it would be nice to be able to call <code>ext</code> to enter anything.</p>",
        "id": 192718251,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585857726
    },
    {
        "content": "<p>Actually, I think <code>congr</code> or <code>to_args</code> or whatever it is called should do this</p>",
        "id": 192718692,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585857934
    },
    {
        "content": "<p><code>ext</code> doesn't make as much sense inside <code>conv</code> since most extensionality lemmas don't have the right form</p>",
        "id": 192718801,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585857968
    },
    {
        "content": "<p><code>congr</code> doesn't.</p>",
        "id": 192718830,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585857978
    },
    {
        "content": "<p><code>funext</code> worked but it doesn't allow me to name the new variable.</p>",
        "id": 192718872,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585857999
    },
    {
        "content": "<p>that's odd</p>",
        "id": 192718897,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585858009
    },
    {
        "content": "<p><code>intro</code> is also a reasonable synonym here</p>",
        "id": 192718940,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585858022
    },
    {
        "content": "<p>I think the story for navigating terms in <code>conv</code> needs improvement on the whole. <code>to_lhs</code> and <code>to_rhs</code> aren't nearly enough</p>",
        "id": 192719176,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585858124
    },
    {
        "content": "<p>Here are the basic conv tactics I can see a use for. I've tried to borrow names when the tactics have a similar effect, but the underlying theorems are often quite different. It's hard to say which drives the mental model more.</p>\n<ul>\n<li><code>arg i</code>: enter the <code>i</code>-th nondependent argument of an application, <code>intro</code> on binders</li>\n<li><code>args</code>: enter all nondependent arguments of an application</li>\n<li><code>left</code>, <code>to_lhs</code>: synonym for <code>arg n-2</code></li>\n<li><code>right</code>, <code>to_rhs</code>: synonym for <code>arg n-1</code></li>\n<li><code>intro x</code>, <code>ext x</code>, <code>funext x</code>: enter the body of a pi or lambda.</li>\n<li><code>intros</code>: same repetition behavior as <code>intros</code> tactic</li>\n<li><code>apply h</code>: rewrite the entire goal with <code>h</code> by transitivity</li>\n<li><code>rw h</code>: rewrite with <code>h</code> somewhere in the goal</li>\n<li><code>enter [1,3,x,y]</code>:  iterate <code>arg</code> and <code>intro</code> with the given arguments</li>\n<li><code>pattern (_+_)</code>: find the first matching subterm (in top down left right order)</li>\n</ul>\n<p>Many of these already have equivalent functions, but I think we should try to organize the whole set and bikeshed on names until this is as usable as regular tactic mode</p>",
        "id": 192720964,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585858962
    },
    {
        "content": "<p>One reason why I don't use <code>conv</code> mode that much is that it seems to me it is often quite slow and not so responsive... do others recognise this?</p>",
        "id": 192723220,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1585860084
    },
    {
        "content": "<p>It shouldn't be any slower than any other tactic; what <code>conv</code> does in its most basic mode is extremely simple, essentially just <code>apply eq.mp</code></p>",
        "id": 192724042,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585860487
    },
    {
        "content": "<p>More conv tactics:</p>\n<ul>\n<li><code>convert y</code>: produce a subgoal <code>|- goal = y</code> in regular tactic mode</li>\n<li><code>trans y</code>: produce a tactic subgoal <code>|- goal = y</code> and a conv subgoal <code>| y</code></li>\n<li><code>tactic { tac }</code>: use a regular tactic as a conv tactic (the tactic sees the goal <code>|- goal = ?m1</code>). (This is the identity function under the hood)</li>\n<li><code>done</code>, <code>refl</code>: close the goal by reflexivity (should be optional most of the time)</li>\n</ul>",
        "id": 192724548,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585860739
    },
    {
        "content": "<p>Please don't make <code>intro</code> different from <code>intros</code>.</p>",
        "id": 192806193,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1585921803
    }
]