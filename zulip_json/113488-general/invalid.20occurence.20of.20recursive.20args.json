[
    {
        "content": "<p>Not sure if it's a place for routine trouble shooting, but I'm trying to do some theory inside lean, I defined a inductive family but lean is not happy with it. <a href=\"https://ptpb.pw/3O0a\" target=\"_blank\" title=\"https://ptpb.pw/3O0a\">https://ptpb.pw/3O0a</a><br>\nThe error is at the constructor satlem, \"invalid occurence of recursive arg#5, the body of the functional type depends on it\".</p>",
        "id": 128381305,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1529526105
    },
    {
        "content": "<p>I don't think lean likes that you have placed the recursive argument before the variable <code>v</code></p>",
        "id": 128381813,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1529526656
    },
    {
        "content": "<p>you had:</p>\n<div class=\"codehilite\"><pre><span></span>| satlem (c : context) (cl cl&#39; : clause) :\n  proof c (type.holds cl) →\n  ∀ v : string, proof ((v, type.holds cl) :: c) (type.holds cl&#39;) →\n  proof c (type.holds cl&#39;)\n</pre></div>\n\n\n<p>This works:</p>\n<div class=\"codehilite\"><pre><span></span>| satlem (c : context) (cl cl&#39; : clause) :\n  ∀ v : string, proof c (type.holds cl) →\n  proof ((v, type.holds cl) :: c) (type.holds cl&#39;) →\n  proof c (type.holds cl&#39;)\n</pre></div>\n\n\n<p>Or maybe you got the parentheses wrong? This works too, but means something different:</p>\n<div class=\"codehilite\"><pre><span></span>| satlem (c : context) (cl cl&#39; : clause) :\n  proof c (type.holds cl) →\n  (∀ v : string, proof ((v, type.holds cl) :: c) (type.holds cl&#39;)) →\n  proof c (type.holds cl&#39;)\n</pre></div>",
        "id": 128381941,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1529526793
    },
    {
        "content": "<p>Thanks! this works. I also fixed similar issues in the code.<br>\nquestion tho: why is this required? intuitively I don't see how it's invalid.</p>",
        "id": 128382752,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1529527822
    },
    {
        "content": "<p>There was a restriction along the lines that recursive arguments must come after non-recursive args, mostly for convenience of implementation, but last I checked that restriction had been lifted, so I'm not sure why you are getting the error still</p>",
        "id": 128383088,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1529528224
    },
    {
        "content": "<p>maybe because it's inductive family, so impl. could be harder.</p>",
        "id": 128383377,
        "sender_full_name": "Zesen Qian",
        "timestamp": 1529528630
    },
    {
        "content": "<p>There is still a restriction on <em>dependent</em> arguments, none of the arguments after the first recursive argument may occur in other arguments.  In this case <code>v</code> comes after the first recursive argument and occurs in the second recursive argument.</p>",
        "id": 128403732,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1529565116
    }
]