[
    {
        "content": "<p>any of the coq experts out there know what the most complete linalg / tensor package is out there for theorem provers? I'd like to look into what's out there for computing with complex matrices. quaternions would be cool too</p>",
        "id": 124777985,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1523141414
    },
    {
        "content": "<p>the top referenced paper is this: <a href=\"http://www.math.ias.edu/~amortberg/papers/coqeal.pdf\" target=\"_blank\" title=\"http://www.math.ias.edu/~amortberg/papers/coqeal.pdf\">http://www.math.ias.edu/~amortberg/papers/coqeal.pdf</a></p>",
        "id": 124778185,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1523141890
    },
    {
        "content": "<p>I am slightly stuck on the definition of a GL group,  has anyone defined matrices yet?</p>",
        "id": 129593334,
        "sender_full_name": "Yulia Zaplatina",
        "timestamp": 1531478402
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> your year 2 student?</p>",
        "id": 129593382,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531478416
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120469\">@Ellen Arlt</span> wrote some very basic code for matrices -- defining not much more than addition and multiplication, but it might be enough to define GL. <span class=\"user-mention\" data-user-id=\"119876\">@Blair Shi</span> <span class=\"user-mention\" data-user-id=\"119876\">@Blair Shi</span> I should tell you about this too. I think that both of you might be thinking about linear algebra and more specifically finite-dimensional vector spaces. </p>\n<p>Oh -- I found Ellen's code! <a href=\"https://github.com/kbuzzard/xena/blob/master/student_contributions/Ellen_Arlt_matrix_rings.lean\" target=\"_blank\" title=\"https://github.com/kbuzzard/xena/blob/master/student_contributions/Ellen_Arlt_matrix_rings.lean\">https://github.com/kbuzzard/xena/blob/master/student_contributions/Ellen_Arlt_matrix_rings.lean</a> . She proves that square matrices form a ring. <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> presumably there is \"units of a ring\" somewhere?</p>",
        "id": 129593530,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531478724
    },
    {
        "content": "<p>yes</p>",
        "id": 129593729,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531479029
    },
    {
        "content": "<p><code>units \\a</code></p>",
        "id": 129593730,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531479033
    },
    {
        "content": "<p>works for fake rings also</p>",
        "id": 129593732,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531479047
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  Thank you!</p>",
        "id": 129593733,
        "sender_full_name": "Yulia Zaplatina",
        "timestamp": 1531479055
    },
    {
        "content": "<p>Could we add <span class=\"user-mention\" data-user-id=\"120469\">@Ellen Arlt</span> 's code to mathlib so we don't have to define matrices every time?</p>",
        "id": 129593868,
        "sender_full_name": "Yulia Zaplatina",
        "timestamp": 1531479221
    },
    {
        "content": "<p>Wow, I think this might be useful for my vector space. Thank you for telling me about this.</p>",
        "id": 129594650,
        "sender_full_name": "Blair Shi",
        "timestamp": 1531480269
    },
    {
        "content": "<p>I think it would be easier to just put it into our UROP repo. It's time to start a xenalib!</p>",
        "id": 129598579,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531485455
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> <span class=\"user-mention\" data-user-id=\"120469\">@Ellen Arlt</span> I suggest you remove the <code>ring</code> constraint in:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">definition</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:=</span>  <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span><span class=\"o\">(</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">R</span> <span class=\"o\">)</span>\n</pre></div>\n\n\n<p>It makes it less useable in new and creative ways and it doesn't add any value: the ring assumption is really useful only for the operations and lemmas.</p>",
        "id": 129602034,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1531490059
    },
    {
        "content": "<p>I'm busy today doing admin but I dumped ellen's code and Sean's comments on it here <a href=\"https://github.com/ImperialCollegeLondon/xena-UROP-2018/tree/master/src/xenalib\" target=\"_blank\" title=\"https://github.com/ImperialCollegeLondon/xena-UROP-2018/tree/master/src/xenalib\">https://github.com/ImperialCollegeLondon/xena-UROP-2018/tree/master/src/xenalib</a></p>",
        "id": 129604111,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531492343
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120736\">@Yulia Zaplatina</span> if you pull the xena-UROP-2018 repo and open the folder in VS Code then you should be able to type stuff like <code>import xenalib/Ellen_Arlt_matrix_rings</code> and get her definitions. Someone should merge Sean's edits as well but I need to go and throw eggs at Trump</p>",
        "id": 129604201,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531492453
    }
]