[
    {
        "content": "<p>If I have <code>X Y Z : expr</code>, and a <code>P : expr</code> representing a proof that <code>X = Y</code>, how do I make the expression that says <code>(X = Z) = (Y = Z)</code>?</p>",
        "id": 124867540,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1523330749
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 124867582,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1523330780
    },
    {
        "content": "<p><code>to_expr ``(congr_arg (λ x, x = %%Z) %%P)</code></p>",
        "id": 124867698,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1523331035
    },
    {
        "content": "<p>woah, okay, that's much better than what I was doing.</p>",
        "id": 124867800,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1523331243
    },
    {
        "content": "<p>I was trying things along the lines of </p>\n<div class=\"codehilite\"><pre><span></span>eq ← mk_const `eq,\nprf&#39; ← mk_congr_arg eq prf,\nprf&#39; ← mk_congr_fun prf&#39; rhs,\n ````\n</pre></div>",
        "id": 124867805,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1523331276
    },
    {
        "content": "<p>but quotations are much nicer</p>",
        "id": 124867808,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1523331290
    },
    {
        "content": "<p>so people are making programs that program</p>",
        "id": 124867815,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523331307
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span>, this has been happening since the dawn of time :-)</p>",
        "id": 124867818,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1523331327
    },
    {
        "content": "<p>you might even call them... <em>metaprograms</em></p>",
        "id": 124867819,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523331330
    },
    {
        "content": "<p>I guess now is a good time to bring up the Curry-Howard-Lambek correspondence and point out that, similarly, you can use a logical system to show that another logic is sound or complete. You can also use category theory to study the category of categories</p>",
        "id": 124868318,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1523332394
    },
    {
        "content": "<p>Whoa, slow down there, <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span>. Next thing you know, we'll be using English to describe... English. (Or choose your preferred self-describing language of choice.)</p>",
        "id": 124872852,
        "sender_full_name": "Sean Leather",
        "timestamp": 1523342181
    },
    {
        "content": "<p>isn't that what dictionaries do?</p>",
        "id": 124872856,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523342203
    },
    {
        "content": "<p>Also, hi, everyone. <span class=\"emoji emoji-1f44b\" title=\"wave\">:wave:</span> I've been away for a while.</p>",
        "id": 124872858,
        "sender_full_name": "Sean Leather",
        "timestamp": 1523342209
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> OMG! You mean it's already happening?!</p>",
        "id": 124872864,
        "sender_full_name": "Sean Leather",
        "timestamp": 1523342227
    },
    {
        "content": "<p>The end of the world is nigh!</p>",
        "id": 124872866,
        "sender_full_name": "Sean Leather",
        "timestamp": 1523342242
    },
    {
        "content": "<p>Hi Sean! We missed you! I hope you still managed to get your daily recommended dose of math and nerdiness ;-)</p>",
        "id": 124872868,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1523342271
    },
    {
        "content": "<p>I tried here and there, but nothing came close to this. <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>",
        "id": 124872909,
        "sender_full_name": "Sean Leather",
        "timestamp": 1523342327
    },
    {
        "content": "<p>i'm high rn</p>",
        "id": 124872918,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523342346
    },
    {
        "content": "<p>high on homological algebra / wedderburn's theorem</p>",
        "id": 124872919,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523342366
    }
]