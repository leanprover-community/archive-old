[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112165\">rss-bot</span> <a href=\"#narrow/stream/116290-rss/topic/Recent.20Commits.20to.20lean.3Amaster/near/197727879\">said</a>:</p>\n<blockquote>\n<p><strong><a href=\"https://github.com/leanprover-community/lean/commit/a1bf3fd63336d28697a1e0a69f5753b913f3b39a\">feat(library/class): support <code>local attribute [-instance]</code> (#240)</a></strong><br>\nfeat(library/class): support <code>local attribute [-instance]</code> (<a href=\"https://github.com/leanprover-community/mathlib/issues/240\">#240</a>)</p>\n<p>Fixes <a href=\"https://github.com/leanprover-community/mathlib/issues/27\">#27</a>.<br>\n<a href=\"https://github.com/leanprover-community/lean/commit/a1bf3fd63336d28697a1e0a69f5753b913f3b39a\">https://github.com/leanprover-community/lean/commit/a1bf3fd63336d28697a1e0a69f5753b913f3b39a</a></p>\n</blockquote>\n<p>Would it be easy to support <code>local attribute [-class]</code>? Classes are way too hard for me.</p>",
        "id": 198560153,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590283147
    },
    {
        "content": "<p>I guess it wouldn't accomplish what I really want, namely, turning <code>[]</code> parameters back into <code>()</code> parameters</p>",
        "id": 198560210,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590283287
    },
    {
        "content": "<p>In coq you can change the sort of variables after the definition, from <code>()</code> to <code>{}</code> etc... it would be nice to occasionally do that</p>",
        "id": 198563778,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590290594
    },
    {
        "content": "<p>Well you can, with a type ascription, but this is more verbose than just using <code>@foo _ _ _ _</code></p>",
        "id": 198564906,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590293146
    },
    {
        "content": "<p>I think that Johan was talking about something like Coq <a href=\"https://coq.inria.fr/distrib/current/refman/language/gallina-extensions.html#coq:cmd.arguments-implicits\">https://coq.inria.fr/distrib/current/refman/language/gallina-extensions.html#coq:cmd.arguments-implicits</a></p>",
        "id": 198565019,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590293327
    },
    {
        "content": "<p>I think that <code>global</code> version is a bad idea but I'd love to have <code>local arguments</code></p>",
        "id": 198565029,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590293402
    }
]