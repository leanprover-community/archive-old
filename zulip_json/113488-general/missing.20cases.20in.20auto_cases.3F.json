[
    {
        "content": "<p><code>Auto_cases</code> seems to miss some possible <code>induction</code> hypotheses. One example of this is</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">test_one</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"c1\">--auto_cases,</span>\n  <span class=\"n\">induction</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>Here <code>auto_cases</code> says that it \"did not find any hypotheses to apply <code>cases</code> or <code>induction</code> to\", but <code>induction h</code> works.</p>\n<p>Another example is</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">test_three</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"c1\">--auto_cases,</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p><code>auto_cases</code> gives the same message, but <code>induction n</code> works, I don't know if this is what it's supposed to do though.</p>",
        "id": 180930789,
        "sender_full_name": "Lucas Allen",
        "timestamp": 1573943024
    },
    {
        "content": "<p><code>auto_cases</code> isn't really intended for the end user</p>",
        "id": 180930839,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573943100
    },
    {
        "content": "<p>It's part of <code>tidy</code>. It has a list of known types for which it's usually a good idea to apply <code>cases</code> (or occasionally <code>induction</code>, I don't really understand why <code>induction</code> is even necessary)</p>",
        "id": 180930897,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573943181
    },
    {
        "content": "<p>I see. If I wanted something like this for the end user, would it make more sense to just run <code>cases</code> and <code>induction</code> on each hypothesis and report the ones which work?</p>",
        "id": 180931311,
        "sender_full_name": "Lucas Allen",
        "timestamp": 1573943934
    },
    {
        "content": "<p>I assumed you were the end user</p>",
        "id": 180931367,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573944051
    },
    {
        "content": "<p>What are you really trying to do?</p>",
        "id": 180931368,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573944055
    },
    {
        "content": "<p>I'm writing a tactic called <code>check</code> which goes through a list of tactics (an extended version of the list from <code>tidy</code>) and reports which ones succeed without modifying the tactic state. The idea is that this might be helpful when I get stuck proving something. Would something like this be suitable for mathlib?</p>",
        "id": 180931801,
        "sender_full_name": "Lucas Allen",
        "timestamp": 1573944880
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"209436\">@Lucas Allen</span>, look for <code>case_bash</code>, hiding somewhere in mathlib.</p>",
        "id": 181595153,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1574378473
    },
    {
        "content": "<p>II found it, it's in core.lean. A few modifications and it'll do what I want it to. Thanks.</p>",
        "id": 181604471,
        "sender_full_name": "Lucas Allen",
        "timestamp": 1574388481
    }
]