[
    {
        "content": "<p>Hi, how do we type commutative diagrams in API docs? What styles are supported (if any)? amscd? xypic? tikz? I'm looking at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/dense_inducing.tendsto_comap_nhds_nhds\">docs#dense_inducing.tendsto_comap_nhds_nhds</a></p>",
        "id": 272522061,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1645281667
    },
    {
        "content": "<p>Are you saying you don't like <code>γ -f→ α g↓ ↓e δ -h→ β</code>? Hmm, you are right: it does <a href=\"https://github.com/leanprover-community/mathlib/blob/518b5d25c0dc227a0d1d230d055d1da5c5bef46e/src/topology/dense_embedding.lean#L100-L104\">look better in the source</a>.</p>",
        "id": 272523409,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1645283276
    },
    {
        "content": "<p>The site uses mathjax3 so I guess amscd would work</p>",
        "id": 272523933,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1645283870
    },
    {
        "content": "<p>If not, katex supports it</p>",
        "id": 272523999,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1645283915
    },
    {
        "content": "<p><a href=\"https://github.com/kisonecat/tikzjax\">TikzJax</a> also exists but renders slowly in my experience</p>",
        "id": 272524499,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1645284532
    },
    {
        "content": "<p>Admittedly, these last two address what is possible rather than what is currently supported. But amscd is your best bet</p>",
        "id": 272525368,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1645285544
    },
    {
        "content": "<p>I think we are simply hitting the limit of what browser rendering of tex can do here. Rather than necromancing amscd we should rather switch to server-side rendering of a png (here servver-side means doc-gen side).</p>",
        "id": 272527530,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645287900
    },
    {
        "content": "<p>Yes, I agree server side is the correct choice the majority of the time.</p>",
        "id": 272528751,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1645289461
    },
    {
        "content": "<p>I think mathjax can be prerendered, which still has the advantage of being searchable unlike an image</p>",
        "id": 272531117,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645291997
    },
    {
        "content": "<p>You can prerender mathjax for what mathjax can render, and a SVG image for what it cannot</p>",
        "id": 272531530,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645292514
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/commutative.20diagrams.20in.20doc-gen/near/272523409\">said</a>:</p>\n<blockquote>\n<p>Are you saying you don't like <code>γ -f→ α g↓ ↓e δ -h→ β</code>? Hmm, you are right: it does <a href=\"https://github.com/leanprover-community/mathlib/blob/518b5d25c0dc227a0d1d230d055d1da5c5bef46e/src/topology/dense_embedding.lean#L100-L104\">look better in the source</a>.</p>\n</blockquote>\n<p>The source would work just fine if the author remembered to include <code> ``` </code> around it</p>",
        "id": 272531789,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645292815
    },
    {
        "content": "<p>This was written long before it made sense to put any backquote in Lean comments.</p>",
        "id": 272532188,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1645293270
    },
    {
        "content": "<p>A recent github blog post seems relevant: <a href=\"https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/\">https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/</a></p>",
        "id": 272589370,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1645360231
    }
]