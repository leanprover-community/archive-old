[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">subtype</span> <span class=\"bp\">ℕ</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"bp\">λ</span> <span class=\"bp\">⟨</span><span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">hn</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 134001592,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536997908
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>don&#39;t know how to synthesize placeholder\ncontext:\n_x : {_x // true},\n_fun_match : {_x // true} → 0 = 0,\nn : ℕ,\nhn : true\n⊢ 0 = 0\nstate:\n⊢ {_x // true} → 0 = 0\n</pre></div>",
        "id": 134001614,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536997922
    },
    {
        "content": "<p>no, it can't</p>",
        "id": 134001717,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1536998125
    },
    {
        "content": "<p>obvious workarounds include using <code>rintro</code> instead</p>",
        "id": 134001720,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1536998152
    },
    {
        "content": "<p>Neither will using <code>match</code> or anything else that triggers the equation compiler</p>",
        "id": 134001759,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1536998179
    }
]