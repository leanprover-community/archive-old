[
    {
        "content": "<p>In PR <a href=\"https://github.com/leanprover-community/mathlib/pull/15513\">#15513</a> one of the reviewers suggested that a particular lemma (<a href=\"https://github.com/leanprover-community/mathlib/blob/5a2072bf702b04e91672fcb979db07236497e38c/src/linear_algebra/symplectic_group.lean#L177\">coe_inv</a>) would make for a good <code>simp</code> lemma (which it definitely does!)...</p>\n<p>Unfortunately I keep running into a <code>simp_nf</code> linter error with it, in particular the <code>try_for</code> tactic failing variety. The suggestions in the mathlib docs <a href=\"https://leanprover-community.github.io/mathlib_docs/notes.html#simp-normal%20form\">here</a> are a little unclear on how to troubleshoot the issue. What does it mean to apply <code>squeeze_simp</code> (or <code>try_for { simp }</code>) to the \"right hand side\"? The proof of the lemma doesn't use any simps, and if I extract the statement of the lemma into a separate example I'm not getting any looping issues when I try to use <code>simp</code> <span aria-label=\"neutral\" class=\"emoji emoji-1f610\" role=\"img\" title=\"neutral\">:neutral:</span> .</p>\n<p>Any help would be appreciated!</p>",
        "id": 296234223,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1661900775
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"455674\">@Matej Penciak</span> What happens if you do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">the_LHS</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- did the LHS simplify</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>And idem dito with the RHS.</p>\n<p>I'm just guessing, but I think at least one of those two is simplifying...</p>",
        "id": 296263195,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1661927165
    },
    {
        "content": "<p>You wrote the lemma the wrong way around. Also, isn't the proof <code>rfl</code>?</p>",
        "id": 296264200,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661927855
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/Confused.20about.20simp_nf.20linter/near/296263195\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"455674\">Matej Penciak</span> What happens if you do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">the_LHS</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- did the LHS simplify</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>And idem dito with the RHS.</p>\n<p>I'm just guessing, but I think at least one of those two is simplifying...</p>\n</blockquote>\n<p>If I put in the RHS then simp fails and nothing happens, but putting in the LHS it simplifies according to the lemma </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">0</span><span class=\"bp\">.</span> <span class=\"o\">[</span><span class=\"n\">simplify.rewrite</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">symplectic_group.coe_inv</span><span class=\"o\">]:</span> <span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">J</span> <span class=\"n\">l</span> <span class=\"n\">R</span> <span class=\"bp\">⬝</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">A</span><span class=\"o\">)</span><span class=\"bp\">ᵀ</span> <span class=\"bp\">⬝</span> <span class=\"n\">J</span> <span class=\"n\">l</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">==&gt;</span> <span class=\"bp\">↑</span><span class=\"n\">A</span><span class=\"bp\">⁻¹</span>\n</code></pre></div>\n<p>This seems like it's behaving as it should, right?</p>",
        "id": 296310874,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1661947796
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/Confused.20about.20simp_nf.20linter/near/296264200\">said</a>:</p>\n<blockquote>\n<p>You wrote the lemma the wrong way around. Also, isn't the proof <code>rfl</code>?</p>\n</blockquote>\n<p>The lemma originally was the other way around, and was proved with <code>rfl</code> but in the last commit I fixed another <code>simp_nf</code> linter issue telling me to swap the sides and fix the LHS, so the proof is no longer <code>refl</code>. </p>\n<p>My understanding was that the LHS should always be more complicated than the RHS?</p>",
        "id": 296311059,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1661947871
    },
    {
        "content": "<p>Yes, and <code>↑A⁻¹</code> contains something more complicated than everything else: the inverse operation on <code>symplectic_group</code>. Everything in <code>-(J l R ⬝ (↑A)ᵀ ⬝ J l R)</code> is already defined at that point.</p>",
        "id": 296311554,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661948094
    },
    {
        "content": "<p>The LHS should indeed be more complicated than the RHS. At the same time the LHS should not be simplifiable by other simp lemmas, otherwise it doesn't get a chance to trigger.</p>",
        "id": 296312198,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1661948336
    }
]