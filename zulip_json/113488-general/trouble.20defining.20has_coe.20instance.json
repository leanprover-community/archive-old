[
    {
        "content": "<p>For some reason, this doesn't work:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">order.filter.partial</span>\n\n<span class=\"kd\">noncomputable theory</span>\n<span class=\"kn\">open</span> <span class=\"n\">set</span> <span class=\"n\">filter</span> <span class=\"n\">classical</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span> <span class=\"n\">filter</span>\n<span class=\"kn\">open</span> <span class=\"n\">has_sup</span>\n\n<span class=\"kd\">variable</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">convergence_space</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">converges</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"n\">a</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">a</span> <span class=\"bp\">-&gt;</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n\n<span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"kd\">class</span><span class=\"o\">]</span> <span class=\"n\">convergence_space</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">convergence_space</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">kent_convergence_space</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"kd\">extends</span> <span class=\"n\">convergence_space</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">kent_converges</span> <span class=\"o\">:</span> <span class=\"k\">forall</span> <span class=\"o\">{</span><span class=\"n\">x</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">l</span><span class=\"o\">},</span> <span class=\"n\">converges</span> <span class=\"n\">l</span> <span class=\"n\">x</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">converges</span> <span class=\"o\">(</span><span class=\"n\">sup</span> <span class=\"n\">l</span> <span class=\"o\">(</span><span class=\"n\">pure</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"kd\">class</span><span class=\"o\">]</span> <span class=\"n\">kent_convergence_space</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">kent_convergence_space</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">has_coe</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">kent_convergence_space</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">convergence_space</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span>\n  <span class=\"n\">coe</span> <span class=\"o\">:=</span> <span class=\"k\">fun</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">p.to_convergence_space</span><span class=\"o\">,</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>I can't figure out what I am doing wrong here.</p>",
        "id": 265311672,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1639755364
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"416322\">@Bernd Losert</span> Do you know about unicode input? (not really related to your issue)</p>",
        "id": 265314806,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1639756377
    },
    {
        "content": "<p>Yes. I am avoiding it at the moment until I get a better set up.</p>",
        "id": 265314886,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1639756418
    },
    {
        "content": "<p>Ok, just checking.</p>",
        "id": 265314998,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1639756453
    },
    {
        "content": "<p>The issue here is that you did not write <code>has_coe : has_coe _ _</code></p>",
        "id": 265315126,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1639756504
    },
    {
        "content": "<p>Instead you wrote <code>has_coe : _ _</code></p>",
        "id": 265315172,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1639756519
    },
    {
        "content": "<p>Also, I think the name <code>has_coe</code> will cause issues. I suggest replacing the -3 line with </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_coe</span> <span class=\"o\">(</span><span class=\"n\">kent_convergence_space</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">convergence_space</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span>\n</code></pre></div>\n<p>and see whether lean is able to automatically generate a good name for you</p>",
        "id": 265315483,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1639756583
    },
    {
        "content": "<p>A crap. It's the colon that is in the wrong spot. Duh!</p>",
        "id": 265316461,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1639756761
    },
    {
        "content": "<p>Thanks for pointing that out.</p>",
        "id": 265316628,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1639756791
    },
    {
        "content": "<p>No problem!</p>",
        "id": 265316890,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1639756826
    }
]