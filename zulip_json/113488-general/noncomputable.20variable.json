[
    {
        "content": "<p>More random parser facts:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">private</span> <span class=\"kd\">noncomputable</span> <span class=\"kd\">mutual</span> <span class=\"kd\">variable</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"c1\">-- not an error</span>\n</code></pre></div>\n<p>In fact, the modifiers here are not unused; from the code it seems like the declaration modifiers will be propagated to nested definitions. I challenge anyone to find an example of a variable declaration that compiles differently depending on the modifiers</p>",
        "id": 242430833,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1623478329
    },
    {
        "content": "<p>apparently square bracket args aren't parsed like the other kinds:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">]</span> <span class=\"c1\">-- parse error</span>\n</code></pre></div>",
        "id": 242432713,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1623480749
    }
]