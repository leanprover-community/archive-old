[
    {
        "content": "<p>I noticed that some <code>.default</code> files weren't for importing all other files in the directory, but rather were basic theory setup. i think those should become <code>.basic</code>, unless people are really attached to be able to not write <code>.basic</code>. Here's the list (thanks Shing!):</p>\n<ul>\n<li><code>category_theory.category.default</code></li>\n<li><code>category_theory.linear.default</code></li>\n<li><code>category_theory.preadditive.default</code></li>\n<li><code>tactic.lint.default</code> (this one seems to actually be about something default)</li>\n<li><code>tactic.nth_rewrite.default</code></li>\n<li><code>topology.category.CompHaus.default</code></li>\n<li><code>topology.category.Profinite.default</code></li>\n</ul>",
        "id": 255099965,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632768511
    },
    {
        "content": "<p>I already opened <a href=\"https://github.com/leanprover-community/mathlib/issues/9412\">#9412</a> for <code>category_theory.category.default</code>.</p>",
        "id": 255100023,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632768541
    },
    {
        "content": "<p>This has been discussed many times. We don't want <code>.default</code> to import everything, we want them to import the default things.</p>",
        "id": 255101186,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1632768985
    },
    {
        "content": "<p>(I don't think Yaël's point was about what <code>.default</code> imports, but rather the files in the list above are definitions and basic theory, and not just importing other files in the directory. Eg. <code>category_theory.category.default</code> was being imported by other files in <code>category_theory.category/</code>)</p>",
        "id": 255101355,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1632769053
    },
    {
        "content": "<p>Yup, I think it would be good if <code>.default</code> would contain only <code>import</code> statements.</p>",
        "id": 255104115,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632770133
    },
    {
        "content": "<p>Yeah I didn't mean <code>.default</code> files were bad. I meant those were making for bad <code>.default</code> files and should probably be called <code>.basic</code> instead.</p>",
        "id": 255108600,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632771949
    },
    {
        "content": "<p>I think <code>tactic.lint.default</code> is justified though. It's not quite only <code>import</code>s, because there is also the default linter. But I think that's on point?</p>",
        "id": 255109143,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632772148
    },
    {
        "content": "<p>The name of the module is <code>category_theory.category</code>, because it contains the definition of a category. It was moved to a <code>default.lean</code> file when other modules <code>category_theory.category.foo</code> were added. Is the rule we can't have both <code>X.Y</code> and <code>X.Y.Z</code> (if, say, <code>X.Y.Z</code> imports <code>X.Y</code>)?</p>",
        "id": 255135992,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632784861
    },
    {
        "content": "<p>I don't think there are strict rules. On the other hand, I think there are plenty of examples where the definition of <code>X.Y</code> is contained in <code>X.Y.basic</code>.</p>",
        "id": 255139871,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632787327
    },
    {
        "content": "<p>And I think that pattern is a bit cleaner.</p>",
        "id": 255139892,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632787342
    },
    {
        "content": "<p>Note that Lean 4 uses <code>X.Y</code> in place of <code>X.Y.default</code></p>",
        "id": 255186699,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1632821167
    },
    {
        "content": "<p>As in <code>X/Y.lean</code> instead of <code>X/Y/default.lean</code>?</p>",
        "id": 255186790,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632821227
    },
    {
        "content": "<p>Yes</p>",
        "id": 255186957,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1632821306
    }
]