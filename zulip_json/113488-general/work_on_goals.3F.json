[
    {
        "content": "<p>Is there a tactic or recommended way to work on a specific subset of the set of current goals, (I have 5 and I want to run one set of tactics on 3 of them and one set on the other two)? Currently all I can think of is naming my tactics scripts and calling the relevant one on each, but this would be unwieldy on more than 5.</p>",
        "id": 193204723,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1586273108
    },
    {
        "content": "<p>Actually I guess this is a duplicate of the goal selectors topic we had recently, sorry!</p>",
        "id": 193205313,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1586273317
    },
    {
        "content": "<p><code>focus</code> might be the what you're looking for.</p>",
        "id": 193208168,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1586274513
    },
    {
        "content": "<p>Maybe not exactly what I'm looking for but definitely useful and not something I was aware of, thanks!</p>",
        "id": 193208482,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1586274640
    },
    {
        "content": "<p>My students at one point had <code>work_on_goals</code> as a homework assignment. :-) It's only a few lines long  --- someone should PR it!</p>",
        "id": 193255346,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1586297903
    },
    {
        "content": "<p>I don't know how good this is.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">namespace</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interactive</span>\n\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">work_on_goals</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">interactive</span><span class=\"bp\">.</span><span class=\"n\">parse</span> <span class=\"n\">lean</span><span class=\"bp\">.</span><span class=\"n\">parser</span><span class=\"bp\">.</span><span class=\"n\">pexpr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">tac</span> <span class=\"o\">:</span> <span class=\"n\">itactic</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"n\">do</span> <span class=\"n\">gs</span> <span class=\"err\">←</span> <span class=\"n\">get_goals</span><span class=\"o\">,</span>\n   <span class=\"n\">e</span> <span class=\"err\">←</span> <span class=\"n\">to_expr</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n   <span class=\"n\">l</span> <span class=\"err\">←</span> <span class=\"n\">eval_expr</span> <span class=\"o\">(</span><span class=\"n\">list</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"n\">e</span><span class=\"o\">,</span>\n   <span class=\"k\">let</span> <span class=\"n\">gl</span> <span class=\"o\">:=</span> <span class=\"n\">l</span><span class=\"bp\">.</span><span class=\"n\">filter_map</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">gs</span><span class=\"bp\">.</span><span class=\"n\">nth</span> <span class=\"n\">x</span><span class=\"o\">),</span>\n   <span class=\"k\">let</span> <span class=\"n\">glc</span> <span class=\"o\">:=</span> <span class=\"n\">gs</span><span class=\"bp\">.</span><span class=\"n\">remove_all</span> <span class=\"n\">gl</span><span class=\"o\">,</span>\n   <span class=\"n\">set_goals</span> <span class=\"n\">gl</span><span class=\"o\">,</span>\n   <span class=\"n\">all_goals</span> <span class=\"n\">tac</span><span class=\"o\">,</span>\n   <span class=\"n\">gs</span> <span class=\"err\">←</span> <span class=\"n\">get_goals</span><span class=\"o\">,</span>\n   <span class=\"n\">set_goals</span> <span class=\"o\">(</span><span class=\"n\">gs</span> <span class=\"bp\">++</span> <span class=\"n\">glc</span><span class=\"o\">)</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interactive</span>\n</pre></div>",
        "id": 193265658,
        "sender_full_name": "Lucas Allen",
        "timestamp": 1586306650
    },
    {
        "content": "<p>Oh, I wasn't certain what the intended semantics was here. I'd expected just <code>tac</code>, rather than <code>all_goals tac</code>.</p>",
        "id": 193266452,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1586307717
    },
    {
        "content": "<p>i.e., the interactive tactic was for entering a scope in which you could only see a subset of the goals.</p>",
        "id": 193266498,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1586307735
    },
    {
        "content": "<p>perhaps then <code>some_goals [3,5,8] { ... }</code> could be defined as <code>work_on_goals [3,5,8] { all_goals { ... } }</code>.</p>",
        "id": 193266514,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1586307781
    },
    {
        "content": "<p>But besides deciding this, and giving an error message if <code>eval_expr</code> fails, and addings docs, yes, someone should PR this!</p>",
        "id": 193266556,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1586307808
    }
]