[
    {
        "content": "<p>I'm stuck in this state:</p>\n<div class=\"codehilite\"><pre><span></span>A : orbits G X,\nx : X,\nhx : ⟦x⟧ = A,\nz : ↥(stab G X ↑⟨x, hx⟩)\n⊢ ((eq.rec ⟨⟨x, rfl ⟦x⟧⟩, z⟩ hx).fst).val = x\n</pre></div>",
        "id": 125134272,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523853329
    },
    {
        "content": "<p>I don't see any way to destruct <code>eq.rec</code></p>",
        "id": 125134273,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523853340
    },
    {
        "content": "<p><code>⟨⟨x, rfl ⟦x⟧⟩, z⟩</code> is subtype inside sigma</p>",
        "id": 125134275,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523853355
    },
    {
        "content": "<p><code>pp.all</code>?</p>",
        "id": 125134314,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523853399
    },
    {
        "content": "<p>You should probably <code>subst A</code></p>",
        "id": 125134321,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523853438
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>@eq.{v+1} X\n    (@subtype.val.{v+1} X\n       (λ (x : X),\n          @eq.{v+1} (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n            (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)\n            A)\n       (@sigma.fst.{v u}\n          (@subtype.{v+1} X\n             (λ (x : X),\n                @eq.{v+1} (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                  (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)\n                  A))\n          (λ\n           (a :\n             @subtype.{v+1} X\n               (λ (x : X),\n                  @eq.{v+1} (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                    (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)\n                    A)),\n             @subtype.{u+1} G\n               (λ (x : G),\n                  @has_mem.mem.{u u} G (set.{u} G) (@set.has_mem.{u} G) x\n                    (@group_action.stab.{u v} G _inst_1 X _inst_2\n                       (@coe.{(max 1 (v+1)) v+1}\n                          (@subtype.{v+1} X\n                             (λ (x : X),\n                                @eq.{v+1} (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                                  (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)\n                                  A))\n                          X\n                          (@coe_to_lift.{(max 1 (v+1)) v+1}\n                             (@subtype.{v+1} X\n                                (λ (x : X),\n                                   @eq.{v+1} (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                                     (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)\n                                     A))\n                             X\n                             (@coe_base.{(max 1 (v+1)) v+1}\n                                (@subtype.{v+1} X\n                                   (λ (x : X),\n                                      @eq.{v+1} (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                                        (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)\n                                        A))\n                                X\n                                (@coe_subtype.{v+1} X\n                                   (λ (x : X),\n                                      @eq.{v+1} (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                                        (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)\n                                        A))))\n                          a))))\n          (@eq.rec.{(max v u)+1 v+1} (@group_action.orbits.{u v} G _inst_1 X _inst_2)\n             (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)\n             (λ (_x : @group_action.orbits.{u v} G _inst_1 X _inst_2),\n                @sigma.{v u}\n                  (@subtype.{v+1} X\n                     (λ (x : X),\n                        @eq.{v+1} (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                          (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)\n                          _x))\n                  (λ\n                   (x :\n                     @subtype.{v+1} X\n                       (λ (x : X),\n                          @eq.{v+1} (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                            (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)\n                            _x)),\n                     @subtype.{u+1} G\n                       (λ (x_1 : G),\n                          @has_mem.mem.{u u} G (set.{u} G) (@set.has_mem.{u} G) x_1\n                            (@group_action.stab.{u v} G _inst_1 X _inst_2\n                               (@coe.{(max 1 (v+1)) v+1}\n                                  (@subtype.{v+1} X\n                                     (λ (x : X),\n                                        @eq.{v+1}\n                                          (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                                          (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)\n                                          _x))\n                                  X\n                                  (@coe_to_lift.{(max 1 (v+1)) v+1}\n                                     (@subtype.{v+1} X\n                                        (λ (x : X),\n                                           @eq.{v+1}\n                                             (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                                             (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2)\n                                                x)\n                                             _x))\n                                     X\n                                     (@coe_base.{(max 1 (v+1)) v+1}\n                                        (@subtype.{v+1} X\n                                           (λ (x : X),\n                                              @eq.{v+1}\n                                                (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                                                (@quotient.mk.{v+1} X\n                                                   (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2)\n                                                   x)\n                                                _x))\n                                        X\n                                        (@coe_subtype.{v+1} X\n                                           (λ (x : X),\n                                              @eq.{v+1}\n                                                (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                                                (@quotient.mk.{v+1} X\n                                                   (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2)\n                                                   x)\n                                                _x))))\n                                  x)))))\n             (@sigma.mk.{v u}\n                (@subtype.{v+1} X\n                   (λ (x_1 : X),\n                      @eq.{v+1} (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                        (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x_1)\n                        (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)))\n                (λ\n                 (x_1 :\n                   @subtype.{v+1} X\n                     (λ (x_1 : X),\n                        @eq.{v+1} (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                          (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x_1)\n                          (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x))),\n                   @subtype.{u+1} G\n                     (λ (x_2 : G),\n                        @has_mem.mem.{u u} G (set.{u} G) (@set.has_mem.{u} G) x_2\n                          (@group_action.stab.{u v} G _inst_1 X _inst_2\n                             (@coe.{(max 1 (v+1)) v+1}\n                                (@subtype.{v+1} X\n                                   (λ (x_1 : X),\n                                      @eq.{v+1} (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                                        (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x_1)\n                                        (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2) x)))\n                                X\n                                (@coe_to_lift.{(max 1 (v+1)) v+1}\n                                   (@subtype.{v+1} X\n                                      (λ (x_1 : X),\n                                         @eq.{v+1}\n                                           (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                                           (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2)\n                                              x_1)\n                                           (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2)\n                                              x)))\n                                   X\n                                   (@coe_base.{(max 1 (v+1)) v+1}\n                                      (@subtype.{v+1} X\n                                         (λ (x_1 : X),\n                                            @eq.{v+1}\n                                              (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                                              (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2)\n                                                 x_1)\n                                              (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2)\n                                                 x)))\n                                      X\n                                      (@coe_subtype.{v+1} X\n                                         (λ (x_1 : X),\n                                            @eq.{v+1}\n                                              (@quotient.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2))\n                                              (@quotient.mk.{v+1} X (@group_action.orbit_rel.{u v} G _inst_1 X _inst_2)\n                                                 x_1)\n                                              (@quotien\n</pre></div>",
        "id": 125134322,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523853442
    },
    {
        "content": "<p>lol too long</p>",
        "id": 125134323,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523853448
    },
    {
        "content": "<p>oh, lol, <code>subst</code> did the job</p>",
        "id": 125134365,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523853493
    },
    {
        "content": "<p>how does it work?</p>",
        "id": 125134366,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523853495
    },
    {
        "content": "<p>You have an equality assumption <code>[[x]] = A</code>, and a bunch of complicated stuff that depends on it</p>",
        "id": 125134368,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523853527
    },
    {
        "content": "<p>to reduce an <code>eq.rec</code> you need the major premise to become <code>refl</code> somehow</p>",
        "id": 125134372,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523853544
    },
    {
        "content": "<p>that usually means finding the appropriate equality in the context and generalizing it until one side is a variable, and then <code>subst</code>, which is to say use <code>eq.rec</code> in the proof term</p>",
        "id": 125134375,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523853585
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>eq.rec ⟨⟨x, rfl ⟦x⟧⟩, z⟩ hx = ⟨⟨x, hx⟩, z⟩\n\nis cleared by:\n\n(eq.drec\n   (λ (z : ↥(stab G X ↑⟨snd_fst_val, eq.refl ⟦snd_fst_val⟧⟩)),\n      eq.refl\n        (eq.rec_on (eq.refl ⟦snd_fst_val⟧)\n           (((λ (z : Σ (x : X), ↥(stab G X x)),\n             ⟨⟦z.fst⟧, ⟨⟨z.fst, rfl ⟦z.fst⟧⟩, z.snd⟩⟩)\n            ((λ\n              (z :\n                Σ (A : orbits G X) (x : ↥{x : X | ⟦x⟧ = A}), ↥(stab G X ↑x)),\n                ⟨((z.snd).fst).val, (z.snd).snd⟩)\n               ⟨⟦snd_fst_val⟧, ⟨⟨snd_fst_val, eq.refl ⟦snd_fst_val⟧⟩, z⟩⟩)).snd)))\n   snd_fst_property\n   snd_snd)\n</pre></div>",
        "id": 125134465,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523853827
    },
    {
        "content": "<p>I <code>print</code>ed to look at the proof term</p>",
        "id": 125134466,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523853833
    },
    {
        "content": "<p>so maybe <code>drec</code> would have worked?</p>",
        "id": 125134505,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1523853869
    },
    {
        "content": "<p>I guess it uses <code>eq.drec</code> since you also need to replace <code>hx</code> in the term with <code>eq.refl</code>, but it's not necessary provided you generalize <code>hx</code> by proof irrelevance</p>",
        "id": 125134506,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523853890
    }
]