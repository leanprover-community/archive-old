[
    {
        "content": "<p>How do I download a specific version of mathlib (and Lean)?</p>",
        "id": 197414333,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589377497
    },
    {
        "content": "<p>currently I just created a new project using <code>leanproject new</code>and then changed the <code>leanpkg.toml</code>manually (by copying from another repo and changing the commit to what I need) and then using <code>leanproject get-mathlib-cache</code></p>",
        "id": 197417910,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589379033
    },
    {
        "content": "<p>do I need to do this every time?</p>",
        "id": 197417941,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589379043
    },
    {
        "content": "<p>what would you want to see in terms of workflow?</p>",
        "id": 197851544,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589725172
    },
    {
        "content": "<p>it could be possible I guess to have leanproject new --leanversion XXX, but for mathlib, I don't know if there's any proper tagging or versioning beyond the commit SHA256</p>",
        "id": 197851588,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589725206
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>kc_ke@LAPTOP-DBUNR5U5 MINGW64 /c/mathlib <span class=\"o\">(</span>master<span class=\"o\">)</span>\n$ leanproject get-cache\n ** On entry to DGEBAL parameter number  <span class=\"m\">3</span> had an illegal value\n ** On entry to DGEHRD  parameter number  <span class=\"m\">2</span> had an illegal value\n ** On entry to DORGHR DORGQR parameter number  <span class=\"m\">2</span> had an illegal value\n ** On entry to DHSEQR parameter number  <span class=\"m\">4</span> had an illegal value\n ** On entry to DGEBAL parameter number  <span class=\"m\">3</span> had an illegal value\n ** On entry to DGEHRD  parameter number  <span class=\"m\">2</span> had an illegal value\n ** On entry to DORGHR DORGQR parameter number  <span class=\"m\">2</span> had an illegal value\n ** On entry to DHSEQR parameter number  <span class=\"m\">4</span> had an illegal value\nTraceback <span class=\"o\">(</span>most recent call last<span class=\"o\">)</span>:\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\runpy.py\"</span>, line <span class=\"m\">197</span>, in _run_module_as_main\n    <span class=\"k\">return</span> _run_code<span class=\"o\">(</span>code, main_globals, None,\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\runpy.py\"</span>, line <span class=\"m\">87</span>, in _run_code\n    exec<span class=\"o\">(</span>code, run_globals<span class=\"o\">)</span>\n  File <span class=\"s2\">\"C:\\Users\\kc_ke\\AppData\\Local\\Programs\\Python\\Python39\\Scripts\\leanproject.exe\\__main__.py\"</span>, line <span class=\"m\">4</span>, in &lt;module&gt;\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\mathlibtools\\leanproject.py\"</span>, line <span class=\"m\">11</span>, in &lt;module&gt;\n    from mathlibtools.lib import <span class=\"o\">(</span>LeanProject, log, LeanDirtyRepo,\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\mathlibtools\\lib.py\"</span>, line <span class=\"m\">17</span>, in &lt;module&gt;\n    import networkx as nx <span class=\"c1\"># type: ignore</span>\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\networkx\\__init__.py\"</span>, line <span class=\"m\">64</span>, in &lt;module&gt;\n    import networkx.readwrite\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\networkx\\readwrite\\__init__.py\"</span>, line <span class=\"m\">16</span>, in &lt;module&gt;\n    from networkx.readwrite.gexf import *\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\networkx\\readwrite\\gexf.py\"</span>, line <span class=\"m\">173</span>, in &lt;module&gt;\n    class GEXF:\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\networkx\\readwrite\\gexf.py\"</span>, line <span class=\"m\">211</span>, in GEXF\n    import numpy as np\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\numpy\\__init__.py\"</span>, line <span class=\"m\">305</span>, in &lt;module&gt;\n    _win_os_check<span class=\"o\">()</span>\n  File <span class=\"s2\">\"c:\\users\\kc_ke\\appdata\\local\\programs\\python\\python39\\lib\\site-packages\\numpy\\__init__.py\"</span>, line <span class=\"m\">302</span>, in _win_os_check\n    raise RuntimeError<span class=\"o\">(</span>msg.format<span class=\"o\">(</span>__file__<span class=\"o\">))</span> from None\nRuntimeError: The current Numpy installation <span class=\"o\">(</span><span class=\"s1\">'c:\\\\users\\\\kc_ke\\\\appdata\\\\local\\\\programs\\\\python\\\\python39\\\\lib\\\\site-packages\\\\numpy\\\\__init__.py'</span><span class=\"o\">)</span> fails to pass a sanity check due to a bug in the windows runtime. See this issue <span class=\"k\">for</span> more information: https://tinyurl.com/y3dm3h86\n</code></pre></div>",
        "id": 221511733,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1609758477
    },
    {
        "content": "<p><a href=\"https://github.com/twintproject/twint/issues/1030\">https://github.com/twintproject/twint/issues/1030</a> ?</p>",
        "id": 221511839,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1609758545
    },
    {
        "content": "<p>Don't forget to add a \"Thanks a lot!\" message at the bottom.</p>",
        "id": 221511951,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609758602
    },
    {
        "content": "<p>Thanks, that worked</p>",
        "id": 221511997,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1609758642
    },
    {
        "content": "<p>I think this came up elsewhere - leanproject should not even attempt to import numpy /networkx until asked for the import graph</p>",
        "id": 221512072,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609758712
    },
    {
        "content": "<p>Doing so just makes leanproject slow and fragile</p>",
        "id": 221512120,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609758728
    },
    {
        "content": "<p>I just set up a repo for the formalization of Con(NF) that will happen this summer and people seem unable to get it using leanproject. Namely, running <code>leanproject get con-nf</code> (the repository is <a href=\"https://github.com/leanprover-community/con-nf\">https://github.com/leanprover-community/con-nf</a>) returns</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--detach de5038953210a6ffb013340c7bf82243be226f1c    # in directory _target/deps/mathlib</span>\n<span class=\"n\">fatal</span><span class=\"o\">:</span> <span class=\"n\">reference</span> <span class=\"n\">is</span> <span class=\"n\">not</span> <span class=\"n\">a</span> <span class=\"n\">tree</span><span class=\"o\">:</span> <span class=\"n\">de5038953210a6ffb013340c7bf82243be226f1c</span>\n<span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"n\">exited</span> <span class=\"k\">with</span> <span class=\"n\">status</span> <span class=\"mi\">128</span>\n<span class=\"n\">Command</span> <span class=\"sc\">'['</span><span class=\"n\">leanpkg'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">configure'</span><span class=\"o\">]</span><span class=\"bp\">'</span> <span class=\"n\">returned</span> <span class=\"n\">non</span><span class=\"bp\">-</span><span class=\"n\">zero</span> <span class=\"n\">exit</span> <span class=\"n\">status</span> <span class=\"mi\">1</span><span class=\"bp\">.</span>\n</code></pre></div>\n<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>, did I miss something obvious by any chance?</p>",
        "id": 277339131,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1648760383
    },
    {
        "content": "<p>(This likely isn't related to your issue, but you should add <code>/_target</code> and <code>leanpkg.path</code> to a <code>.gitignore</code> file. See e.g. <a href=\"https://github.com/leanprover-community/mathlib/blob/master/.gitignore\">mathlib's</a>.)</p>",
        "id": 277339886,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1648760683
    },
    {
        "content": "<p>I independently came to the conclusion that this <strong>was</strong> my issue, because deleting <code>_target</code> and <code>leanpkg.path</code> and running <code>leanproject get-m</code> fixed the install.</p>",
        "id": 277340361,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1648760800
    },
    {
        "content": "<p>Ah, I see. You had mathlib set up as a submodule in <code>_target/deps</code>, which I don't think <code>leanproject</code> supports.</p>",
        "id": 277340444,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1648760863
    },
    {
        "content": "<p>Do you mean my error is deeper?</p>",
        "id": 277340507,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1648760886
    },
    {
        "content": "<p>If you make a new commit with a <code>.gitignore</code> like I suggested and <code>git</code> doesn't complain then you've probably fixed it.</p>",
        "id": 277340584,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1648760967
    },
    {
        "content": "<p>I'm not sure how you created mathlib as a submodule, so I can't be sure if there's a deeper issue.</p>",
        "id": 277340626,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1648760999
    },
    {
        "content": "<p>I ran <code>leanproject get-m</code></p>",
        "id": 277340796,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1648761095
    },
    {
        "content": "<p>(the reference at the bottom of the readme refers to LTE still btw)</p>",
        "id": 277340841,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1648761119
    },
    {
        "content": "<p>Someone with more git knowledge should probably jump in, but it looks like creating a commit which contains the mathlib git repo as a subdirectory tells git to treat it like a submodule. Anyways, adding a proper <code>.gitignore</code> file and removing <code>_target</code> from the repo if necessary should hopefully fix things.</p>",
        "id": 277341213,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1648761327
    }
]