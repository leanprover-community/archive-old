[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">index_of_nth_le</span> <span class=\"bp\">_</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">list.nth_le ?M_4 (list.index_of ?M_3 ?M_4) ?M_5 = ?M_3</span>\n<span class=\"cm\">-/</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">nth_le_index_of</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">list.index_of (list.nth_le ?M_3 ?M_5 ?M_6) ?M_3 = ?M_5</span>\n<span class=\"cm\">-/</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">nth_le_of_fn</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">list.nth_le (list.of_fn ?M_3) (?M_4.val) _ = ?M_3 ?M_4</span>\n<span class=\"cm\">-/</span>\n</pre></div>",
        "id": 130393117,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1532675121
    },
    {
        "content": "<p>all three examples consist of a function followed by another function in the name</p>",
        "id": 130393127,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1532675145
    },
    {
        "content": "<p>in the last example, the actual order in the statement is the same as the order in the name, i.e. <code>nth_le</code> and then <code>of_fn</code></p>",
        "id": 130393168,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1532675168
    },
    {
        "content": "<p>but in the first two examples, the order is swapped</p>",
        "id": 130393173,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1532675184
    }
]