[
    {
        "content": "<p>Using:</p>\n<div class=\"codehilite\"><pre><span></span>C:\\Users\\FruitfulApproach\\Desktop\\BlocksAndArrows\\lean\\bin\\leanpkg new my_project\nfailed to start child process\n</pre></div>\n\n\n<p>manually at the comand line.</p>",
        "id": 182676978,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575563663
    },
    {
        "content": "<p>I have to get this to work manually, not with VSCode, because I'm making an IDE for lean.</p>",
        "id": 182677703,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575564062
    },
    {
        "content": "<p>does it work with git bash?</p>",
        "id": 182679499,
        "sender_full_name": "Marc Huisinga",
        "timestamp": 1575565021
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221921\">@Marc Huisinga</span>  yes that works:<br>\nFruitfulApproach@DESKTOP-T49RGUJ MINGW64 ~/Desktop/BlocksAndArrows<br>\n$ lean/bin/leanpkg new my_project</p>\n<blockquote>\n<p>mkdir -p my_project<br>\ncd my_project<br>\nmkdir src<br>\ngit init -q<br>\ngit checkout -b lean-3.4.2<br>\nSwitched to a new branch 'lean-3.4.2'<br>\nconfiguring my_project 0.1</p>\n</blockquote>\n<p>It did not work though when calling using <code>subprocess.check_output()</code> from code.  Seems to have the same issue as non-bash command prompt.</p>",
        "id": 182680038,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575565364
    },
    {
        "content": "<p>Found this: <a href=\"https://stackoverflow.com/questions/4256107/running-bash-commands-in-python\" target=\"_blank\" title=\"https://stackoverflow.com/questions/4256107/running-bash-commands-in-python\">https://stackoverflow.com/questions/4256107/running-bash-commands-in-python</a></p>\n<p>Will read through it and try some things out with code.</p>",
        "id": 182680453,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575565650
    },
    {
        "content": "<p>Hmm, I remember having an issue with subprocesses on Windows. I thought it was fixed by <a href=\"https://github.com/leanprover/lean/commit/34426341813082e0953d323836d8ea193b3f7ffb\" target=\"_blank\" title=\"https://github.com/leanprover/lean/commit/34426341813082e0953d323836d8ea193b3f7ffb\">https://github.com/leanprover/lean/commit/34426341813082e0953d323836d8ea193b3f7ffb</a>. Might be a place to start reading if you get stuck; I do not know if this is the same problem you are having without taking a closer look.</p>",
        "id": 182680787,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1575565822
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110025\">@Andrew Ashworth</span>  I can't apply any of that code to my problem - it's in a different language from python.</p>",
        "id": 182681025,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575565985
    },
    {
        "content": "<p>You said you need to get this to work manually, though. Lean is written in C++</p>",
        "id": 182681096,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1575566042
    },
    {
        "content": "<p>This is some problem with operating system process spawning, so somewhere in there is the solution, maybe?</p>",
        "id": 182681176,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1575566074
    },
    {
        "content": "<blockquote>\n<p>This is some problem with operating system process spawning, so somewhere in there is the solution, maybe?</p>\n</blockquote>\n<p>There could be a solution in there, but so far just trying different ways of calling subprocess methods (python library) has brought success.  For example getting standard output from lean was crashing the process, but I just changed that to use the .communicate() method and it worked.  So I will try some more things out before I check out that C++ code.  Thanks though! :D</p>",
        "id": 182681712,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575566436
    },
    {
        "content": "<blockquote>\n<p>You said you need to get this to work manually, though. Lean is written in C++</p>\n</blockquote>\n<p>It's nice to know that Lean is written in speedy C++, the fastest higher-level language really.</p>",
        "id": 182681786,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575566498
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>You said you need to get this to work manually, though. Lean is written in C++</p>\n</blockquote>\n<p>It's nice to know that Lean is written in speedy C++, the fastest higher-level language really.</p>\n</blockquote>\n<p>Other than Nim, Rust and a few others of course!   </p>\n<p>OTOH, when doing a GUI, python is best since there's a pyqt5 binding in existence.  I have been doing pyqt5 apps for over 5 years, and it works great.  When there is a computational part such as computing LED glow effect in one of my apps, I wrote a DLL in C++ that my app connects to using the ctypes library.   It's similar here except we're communicating over stdin/stdout instead of by DLL.</p>\n<p>By the way C++ was over 100 times faster at rendering a single LED than the python code, lol.</p>",
        "id": 182681880,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575566535
    },
    {
        "content": "<p>Which brings me to the question:  Why don't they write Lean in D?</p>",
        "id": 182682368,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575566821
    },
    {
        "content": "<p>I'm fairly sure someone diagnosed the \"failed to start child process\" error to <code>leanpkg</code> not finding required executables like <code>git</code> (which <em>are</em> available in a Git Bash, of course)</p>",
        "id": 182682570,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1575566923
    },
    {
        "content": "<blockquote>\n<p>I'm fairly sure someone diagnosed the \"failed to start child process\" error to <code>leanpkg</code> not finding required executables like <code>git</code> (which <em>are</em> available in a Git Bash, of course)</p>\n</blockquote>\n<p>Does that imply that the user of my IDE needs git installed first?</p>",
        "id": 182682630,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575566958
    },
    {
        "content": "<p>Basically, yes. And even then the <code>PATH</code> outside of a Git Bash might not be correct, apparently</p>",
        "id": 182682761,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1575567020
    },
    {
        "content": "<blockquote>\n<p>Basically, yes. And even then the <code>PATH</code> outside of a Git Bash might not be correct, apparently</p>\n</blockquote>\n<p>git is present on my regular windows command prompt, when I type <code>where git</code> etc.  So maybe I should see how I can package this with and call the git bash.</p>",
        "id": 182682846,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575567075
    },
    {
        "content": "<blockquote>\n<p>Which brings me to the question:  Why don't they write Lean in D?</p>\n</blockquote>\n<p>I imagine it's because the core developers are C++ veterans, and when Lean was started, D wasn't in gcc yet, its future wasn't that <del>walter</del> bright.</p>",
        "id": 182682870,
        "sender_full_name": "Simon Cruanes",
        "timestamp": 1575567104
    },
    {
        "content": "<blockquote>\n<p>git is present on my regular windows command prompt, when I type <code>where git</code> etc.</p>\n</blockquote>\n<p>Interesting. It might be missing some other executable. I don't remember all the ones <code>leanpkg</code> depends on.</p>",
        "id": 182683016,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1575567176
    },
    {
        "content": "<p>It's okay, I've already thought it out:  Either I provide a link in installer to install Git-for-[insert OS / or do nothing for linux], I then do a subprocess call:<br>\n<code>git-bash</code> and beforehand ensure that [on windows] the Path contains git-bash dir.   The hardest part will be automating the setting of Path.</p>",
        "id": 182683436,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575567448
    },
    {
        "content": "<p>Would anyone like to test my code on linux / macOS's?</p>",
        "id": 182683945,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575567808
    },
    {
        "content": "<p>Looks like I'll be doing this for windows users:<br>\n<a href=\"https://stackoverflow.com/questions/27901880/how-to-use-python-script-to-automate-software-installation/27923165\" target=\"_blank\" title=\"https://stackoverflow.com/questions/27901880/how-to-use-python-script-to-automate-software-installation/27923165\">https://stackoverflow.com/questions/27901880/how-to-use-python-script-to-automate-software-installation/27923165</a></p>",
        "id": 182684225,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575568016
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/aZx2tPEnbYM80R9PUhTYuONz/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/aZx2tPEnbYM80R9PUhTYuONz/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/3121/aZx2tPEnbYM80R9PUhTYuONz/pasted_image.png\"></a></div>",
        "id": 182688665,
        "sender_full_name": "Daniel Donnelly",
        "timestamp": 1575570888
    }
]