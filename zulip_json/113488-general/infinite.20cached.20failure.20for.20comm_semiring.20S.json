[
    {
        "content": "<p>I'm trying to debug a \"fails-quickly\" linter error in <a href=\"https://github.com/leanprover-community/mathlib/tree/eric-wieser/caching-failure-for-comm_semiring-S\">branch#eric-wieser/caching-failure-for-comm_semiring-S</a>. Following the instructions there, <a href=\"https://github.com/leanprover-community/mathlib/blob/a2b69e6fd841845e4d9667505d38deb8e1072be4/src/algebra/algebra/restrict_scalars.lean#L92-L96\">I do an instance search with a deliberately missing <code>[I : module Sᵐᵒᵖ M]</code> argument</a>, and what I get are more lines of diagnostic than fit in my clipboard. It starts off sane, as:</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\"><pre><span></span><code>[class_instances]  class-instance resolution trace\n[class_instances] (0) ?x_0 : @module Sᵐᵒᵖ (restrict_scalars R S M) (@mul_opposite.semiring S _inst_1)\n  (@restrict_scalars.add_comm_monoid R S M _inst_2) := @restrict_scalars.op_module_orig ?x_1 ?x_2 ?x_3 ?x_4 ?x_5 ?x_6\n[class_instances]  class-instance resolution trace\n[class_instances] (0) ?x_7 : semiring S := _inst_1\n[class_instances] caching instance for semiring S\n_inst_1\n[class_instances]  class-instance resolution trace\n[class_instances] (0) ?x_8 : add_comm_monoid M := _inst_2\n[class_instances] caching instance for add_comm_monoid M\n_inst_2\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @restrict_scalars.op_module_orig ?x_9 ?x_10 ?x_11 ?x_12 ?x_13 ?x_14\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @restrict_scalars.module_orig ?x_15 ?x_16 ?x_17 ?x_18 ?x_19 ?x_20\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @finsupp.module ?x_21 ?x_22 ?x_23 ?x_24 ?x_25 ?x_26\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @dfinsupp.module ?x_27 ?x_28 ?x_29 ?x_30 ?x_31 ?x_32\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @punit.module ?x_33 ?x_34\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @submodule.restrict_scalars.orig_module ?x_35 ?x_36 ?x_37 ?x_38 ?x_39 ?x_40 ?x_41 ?x_42 ?x_43 ?x_44 ?x_45\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := ?x_51.module\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @submodule.module&#39; ?x_52 ?x_53 ?x_54 ?x_55 ?x_56 ?x_57 ?x_58 ?x_59 ?x_60 ?x_61 ?x_62\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @linear_map.apply_module ?x_63 ?x_64 ?x_65 ?x_66 ?x_67\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @linear_map.module ?x_68 ?x_69 ?x_70 ?x_71 ?x_72 ?x_73 ?x_74 ?x_75 ?x_76 ?x_77 ?x_78 ?x_79 ?x_80 ?x_81 ?x_82\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := ?x_88.module\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := ?x_94.module\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @prod.module ?x_95 ?x_96 ?x_97 ?x_98 ?x_99 ?x_100 ?x_101 ?x_102\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @add_monoid_hom.module ?x_103 ?x_104 ?x_105 ?x_106 ?x_107 ?x_108 ?x_109\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @pi.module&#39; ?x_110 ?x_111 ?x_112 ?x_113 ?x_114 ?x_115\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @pi.module ?x_116 ?x_117 ?x_118 ?x_119 ?x_120 ?x_121\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @add_comm_group.int_op_module ?x_122 ?x_123\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @add_comm_group.int_module ?x_124 ?x_125\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @add_comm_monoid.nat_op_module ?x_126 ?x_127\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @add_comm_monoid.nat_module ?x_128 ?x_129\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @semiring.to_opposite_module ?x_130 ?x_131\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @semiring.to_module ?x_132 ?x_133\nfailed is_def_eq\n[class_instances] (1) ?x_6 : @module Sᵐᵒᵖ M (@mul_opposite.semiring S _inst_1) _inst_2 := @algebra.to_opposite_module ?x_134 ?x_135 ?x_136 ?x_137 ?x_138\n[class_instances]  class-instance resolution trace\n[class_instances] (0) ?x_139 : comm_semiring S := @subsemiring.center.comm_semiring ?x_140 ?x_141\nfailed is_def_eq\n[class_instances] (0) ?x_139 : comm_semiring S := ?x_144.to_comm_semiring\nfailed is_def_eq\n[class_instances] (0) ?x_139 : comm_semiring S := @prod.comm_semiring ?x_145 ?x_146 ?x_147 ?x_148\nfailed is_def_eq\n[class_instances] (0) ?x_139 : comm_semiring S := @set.set_semiring.comm_semiring ?x_149 ?x_150\nfailed is_def_eq\n[class_instances] (0) ?x_139 : comm_semiring S := @pi.comm_semiring ?x_151 ?x_152 ?x_153\nfailed is_def_eq\n[class_instances] (0) ?x_139 : comm_semiring S := rat.comm_semiring\nfailed is_def_eq\n[class_instances] (0) ?x_139 : comm_semiring S := int.comm_semiring\nfailed is_def_eq\n[class_instances] (0) ?x_139 : comm_semiring S := @mul_opposite.comm_semiring ?x_154 ?x_155\nfailed is_def_eq\n[class_instances] (0) ?x_139 : comm_semiring S := nat.comm_semiring\nfailed is_def_eq\n[class_instances] (0) ?x_139 : comm_semiring S := @with_bot.comm_semiring ?x_156 ?x_157 ?x_158 ?x_159\nfailed is_def_eq\n[class_instances] (0) ?x_139 : comm_semiring S := @with_top.comm_semiring ?x_160 ?x_161 ?x_162 ?x_163\nfailed is_def_eq\n[class_instances] (0) ?x_139 : comm_semiring S := @canonically_ordered_comm_semiring.to_comm_semiring ?x_164 ?x_165\n[class_instances] (1) ?x_165 : canonically_ordered_comm_semiring S := nat.canonically_ordered_comm_semiring\nfailed is_def_eq\n[class_instances] (1) ?x_165 : canonically_ordered_comm_semiring S := @with_top.canonically_ordered_comm_semiring ?x_166 ?x_167 ?x_168 ?x_169\nfailed is_def_eq\n[class_instances] caching failure for canonically_ordered_comm_semiring S\n[class_instances] (0) ?x_139 : comm_semiring S := @ordered_comm_semiring.to_comm_semiring ?x_140 ?x_141\n[class_instances] (1) ?x_141 : ordered_comm_semiring S := ?x_144.to_ordered_comm_semiring\nfailed is_def_eq\n[class_instances] (1) ?x_141 : ordered_comm_semiring S := nat.ordered_comm_semiring\nfailed is_def_eq\n[class_instances] (1) ?x_141 : ordered_comm_semiring S := @ordered_comm_ring.to_ordered_comm_semiring ?x_145 ?x_146\n[class_instances] (2) ?x_146 : ordered_comm_ring S := ?x_149.to_ordered_comm_ring\nfailed is_def_eq\n[class_instances] (2) ?x_146 : ordered_comm_ring S := @linear_ordered_comm_ring.to_ordered_comm_ring ?x_150 ?x_151\n[class_instances] (3) ?x_151 : linear_ordered_comm_ring S := ?x_154.to_linear_ordered_comm_ring\nfailed is_def_eq\n[class_instances] (3) ?x_151 : linear_ordered_comm_ring S := rat.linear_ordered_comm_ring\nfailed is_def_eq\n[class_instances] (3) ?x_151 : linear_ordered_comm_ring S := int.linear_ordered_comm_ring\nfailed is_def_eq\n[class_instances] (3) ?x_151 : linear_ordered_comm_ring S := @linear_ordered_field.to_linear_ordered_comm_ring ?x_155 ?x_156\n[class_instances] (4) ?x_156 : linear_ordered_field S := rat.linear_ordered_field\nfailed is_def_eq\n[class_instances] caching failure for linear_ordered_field S\n[class_instances] caching failure for linear_ordered_comm_ring S\n[class_instances] caching failure for ordered_comm_ring S\n[class_instances] caching failure for ordered_comm_semiring S\n[class_instances] (0) ?x_139 : comm_semiring S := @comm_ring.to_comm_semiring ?x_140 ?x_141\n[class_instances] (1) ?x_141 : comm_ring S := punit.comm_ring\nfailed is_def_eq\n[class_instances] (1) ?x_141 : comm_ring S := @subring.center.comm_ring ?x_142 ?x_143\nfailed is_def_eq\n[class_instances] (1) ?x_141 : comm_ring S := ?x_146.to_comm_ring\nfailed is_def_eq\n[class_instances] (1) ?x_141 : comm_ring S := @prod.comm_ring ?x_147 ?x_148 ?x_149 ?x_150\nfailed is_def_eq\n[class_instances] (1) ?x_141 : comm_ring S := @pi.comm_ring ?x_151 ?x_152 ?x_153\nfailed is_def_eq\n[class_instances] (1) ?x_141 : comm_ring S := rat.comm_ring\nfailed is_def_eq\n[class_instances] (1) ?x_141 : comm_ring S := int.comm_ring\nfailed is_def_eq\n[class_instances] (1) ?x_141 : comm_ring S := @mul_opposite.comm_ring ?x_154 ?x_155\nfailed is_def_eq\n[class_instances] (1) ?x_141 : comm_ring S := @euclidean_domain.to_comm_ring ?x_156 ?x_157\n[class_instances] (2) ?x_157 : euclidean_domain S := int.euclidean_domain\nfailed is_def_eq\n[class_instances] (2) ?x_157 : euclidean_domain S := @field.to_euclidean_domain ?x_158 ?x_159\n[class_instances] (3) ?x_159 : field S := @subring.center.field ?x_160 ?x_161\nfailed is_def_eq\n[class_instances] (3) ?x_159 : field S := @mul_opposite.field ?x_162 ?x_163\nfailed is_def_eq\n[class_instances] (3) ?x_159 : field S := rat.field\nfailed is_def_eq\n[class_instances] (3) ?x_159 : field S := @linear_ordered_field.to_field ?x_164 ?x_165\n[class_instances] cached failure for linear_ordered_field S\n[class_instances] caching failure for field S\n[class_instances] caching failure for euclidean_domain S\n[class_instances] (1) ?x_141 : comm_ring S := @field.to_comm_ring ?x_142 ?x_143\n[class_instances] cached failure for field S\n[class_instances] (1) ?x_141 : comm_ring S := @ordered_comm_ring.to_comm_ring ?x_142 ?x_143\n[class_instances] cached failure for ordered_comm_ring S\n[class_instances] caching failure for comm_ring S\n[class_instances] caching failure for comm_semiring S\n[class_instances] cached failure for comm_semiring S\n</code></pre></div>\n</div></div>\n<p>But then for the next <strong>250 thousand</strong> lines:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"n\">cached</span> <span class=\"n\">failure</span> <span class=\"n\">for</span> <span class=\"n\">comm_semiring</span> <span class=\"n\">S</span>\n</code></pre></div>",
        "id": 267181466,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641557157
    },
    {
        "content": "<p>Unfortunately this is on a branch with a large refactor, so it's difficult to produce a mwe</p>",
        "id": 267181653,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641557281
    },
    {
        "content": "<p>Sounds like it's <a href=\"#narrow/stream/113488-general/topic/odd.20repeated.20type.20class.20search\">this issue</a> appearing again</p>",
        "id": 267181740,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1641557338
    },
    {
        "content": "<p>This seems different though - it doesn't even attempt any further searches, it just gets stuck in an infinite loop recording its cache</p>",
        "id": 267181775,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641557389
    },
    {
        "content": "<p>True, I guess it's more like <a href=\"#narrow/stream/113488-general/topic/Why.20is.20.60int.2Ecast_abs.60.20so.20slow.3F\">this one</a></p>",
        "id": 267181843,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1641557424
    },
    {
        "content": "<p>Is there any way to get some additional trace messages between the <code>[class_instances] cached failure for comm_semiring S</code> lines?</p>",
        "id": 267182797,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641558119
    },
    {
        "content": "<p>To see whether it's the same as the second link, <code>trace.type_context.is_def_eq_detail true</code></p>",
        "id": 267182922,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1641558188
    },
    {
        "content": "<p>Note: this will apparently slow down your computer by a factor 800 or so, if your setup is like mine :P</p>",
        "id": 267183054,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1641558269
    },
    {
        "content": "<p>Maybe things will go better if I run it in a terminal</p>",
        "id": 267183557,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641558674
    },
    {
        "content": "<p>Yes, this seems more sustainable - maybe I'll find out if something comes after the 250k lines</p>",
        "id": 267183921,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641558965
    },
    {
        "content": "<p>Here's a bit from the beginning:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]:</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">unfold</span> <span class=\"n\">right</span><span class=\"o\">:</span> <span class=\"n\">comm_semiring.to_semiring</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"o\">]:</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">semiring.mk</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.add</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.zero</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.nsmul</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.mul</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.one</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.npow</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">on</span> <span class=\"n\">failure</span><span class=\"o\">:</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">semiring.mk</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.add</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.zero</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.nsmul</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.mul</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.one</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.npow</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">unfold</span> <span class=\"n\">left</span><span class=\"bp\">&amp;</span><span class=\"n\">right</span><span class=\"o\">:</span> <span class=\"n\">mul_opposite.semiring</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]:</span> <span class=\"bp\">@</span><span class=\"n\">semiring.mk</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span><span class=\"bp\">ᵐᵒᵖ</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.add</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span><span class=\"bp\">ᵐᵒᵖ</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"bp\">?</span><span class=\"n\">x_4</span><span class=\"o\">)))</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.zero</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span><span class=\"bp\">ᵐᵒᵖ</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"bp\">?</span><span class=\"n\">x_4</span><span class=\"o\">)))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.nsmul</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span><span class=\"bp\">ᵐᵒᵖ</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"bp\">?</span><span class=\"n\">x_4</span><span class=\"o\">)))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.mul</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span><span class=\"bp\">ᵐᵒᵖ</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"bp\">?</span><span class=\"n\">x_4</span><span class=\"o\">)))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.one</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span><span class=\"bp\">ᵐᵒᵖ</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_assoc_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"bp\">?</span><span class=\"n\">x_4</span><span class=\"o\">)))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">monoid_with_zero.npow</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span><span class=\"bp\">ᵐᵒᵖ</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.monoid_with_zero</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_monoid_with_zero</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"bp\">?</span><span class=\"n\">x_4</span><span class=\"o\">)))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">semiring.mk</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span><span class=\"bp\">ᵐᵒᵖ</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.add</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span><span class=\"bp\">ᵐᵒᵖ</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))))</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.zero</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span><span class=\"bp\">ᵐᵒᵖ</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.nsmul</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span><span class=\"bp\">ᵐᵒᵖ</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.mul</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span><span class=\"bp\">ᵐᵒᵖ</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">non_assoc_semiring.one</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span><span class=\"bp\">ᵐᵒᵖ</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_assoc_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_assoc_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">monoid_with_zero.npow</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span><span class=\"bp\">ᵐᵒᵖ</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.monoid_with_zero</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span>\n        <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_monoid_with_zero</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"o\">]:</span> <span class=\"n\">semiring.mk</span> <span class=\"bp\">=?=</span> <span class=\"n\">semiring.mk</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"o\">]:</span> <span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.add</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span><span class=\"bp\">ᵐᵒᵖ</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_2</span> <span class=\"bp\">?</span><span class=\"n\">x_4</span><span class=\"o\">))</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.add</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span><span class=\"bp\">ᵐᵒᵖ</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span>\n     <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"bp\">?</span><span class=\"n\">x_134</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)))</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"n\">cached</span> <span class=\"n\">failure</span> <span class=\"n\">for</span> <span class=\"n\">comm_semiring</span> <span class=\"n\">S</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">5</span><span class=\"o\">]:</span> <span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_unital_semiring</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">mul_opposite.non_unital_semiring</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"n\">cached</span> <span class=\"n\">failure</span> <span class=\"n\">for</span> <span class=\"n\">comm_semiring</span> <span class=\"n\">S</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"o\">]:</span> <span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">semiring.to_non_unital_semiring</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"n\">cached</span> <span class=\"n\">failure</span> <span class=\"n\">for</span> <span class=\"n\">comm_semiring</span> <span class=\"n\">S</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">7</span><span class=\"o\">]:</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">unfold</span> <span class=\"n\">right</span><span class=\"o\">:</span> <span class=\"n\">comm_semiring.to_semiring</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">8</span><span class=\"o\">]:</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">semiring.mk</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.add</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.zero</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.nsmul</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.mul</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.one</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.npow</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">on</span> <span class=\"n\">failure</span><span class=\"o\">:</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">semiring.mk</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.add</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.zero</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.nsmul</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.mul</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.one</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.npow</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">unfold</span> <span class=\"n\">left</span><span class=\"bp\">&amp;</span><span class=\"n\">right</span><span class=\"o\">:</span> <span class=\"n\">semiring.to_non_unital_semiring</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">7</span><span class=\"o\">]:</span> <span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.mk</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.add</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.zero</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.nsmul</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.mul</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.mk</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.add</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))</span> <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.zero</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.nsmul</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.mul</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">8</span><span class=\"o\">]:</span> <span class=\"bp\">@</span><span class=\"n\">semiring.add</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">semiring.add</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"n\">cached</span> <span class=\"n\">failure</span> <span class=\"n\">for</span> <span class=\"n\">comm_semiring</span> <span class=\"n\">S</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">9</span><span class=\"o\">]:</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">unfold</span> <span class=\"n\">right</span><span class=\"o\">:</span> <span class=\"n\">comm_semiring.to_semiring</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">10</span><span class=\"o\">]:</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">semiring.mk</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.add</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.zero</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.nsmul</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.mul</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.one</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.npow</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">on</span> <span class=\"n\">failure</span><span class=\"o\">:</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">semiring.mk</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.add</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.zero</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.nsmul</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.mul</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.one</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.npow</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">9</span><span class=\"o\">]:</span> <span class=\"bp\">@</span><span class=\"n\">semiring.add</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">comm_semiring.add</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"mi\">10</span><span class=\"o\">]:</span> <span class=\"n\">semiring.add</span> <span class=\"bp\">=?=</span> <span class=\"n\">comm_semiring.add</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">on</span> <span class=\"n\">failure</span><span class=\"o\">:</span> <span class=\"n\">semiring.add</span> <span class=\"bp\">=?=</span> <span class=\"n\">comm_semiring.add</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">on</span> <span class=\"n\">failure</span><span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">semiring.add</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">comm_semiring.add</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span>\n<span class=\"o\">[</span><span class=\"n\">class_instances</span><span class=\"o\">]</span> <span class=\"n\">cached</span> <span class=\"n\">failure</span> <span class=\"n\">for</span> <span class=\"n\">comm_semiring</span> <span class=\"n\">S</span>\n<span class=\"o\">[</span><span class=\"n\">type_context.is_def_eq_detail</span><span class=\"o\">]</span> <span class=\"n\">on</span> <span class=\"n\">failure</span><span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.mk</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.add</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.zero</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.nsmul</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.mul</span> <span class=\"n\">S</span> <span class=\"n\">_inst_1</span><span class=\"o\">)</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=?=</span> <span class=\"bp\">@</span><span class=\"n\">non_unital_semiring.mk</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.add</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))</span> <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.zero</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.nsmul</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">semiring.mul</span> <span class=\"n\">S</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">comm_semiring.to_semiring</span> <span class=\"n\">S</span> <span class=\"bp\">?</span><span class=\"n\">x_136</span><span class=\"o\">))</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n  <span class=\"n\">_</span>\n</code></pre></div>",
        "id": 267184233,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641559213
    },
    {
        "content": "<p>Indeed, this looks more like exponential blow-up than an infinite loop, there's no obvious fixed period of repetition</p>",
        "id": 267184249,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641559238
    },
    {
        "content": "<p>I've updated the description of <a href=\"https://github.com/leanprover-community/mathlib/pull/10716\">#10716</a> with an example of where the timeout does and does not occur</p>",
        "id": 281424349,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651836103
    },
    {
        "content": "<p>The timeout disappears if I add</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"n\">irreducible</span><span class=\"o\">]</span> <span class=\"n\">mul_opposite.add_comm_monoid</span>\n</code></pre></div>",
        "id": 281424534,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651836240
    },
    {
        "content": "<p>Apparently this is the fix:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"w\"> </span>instance [semiring α] : semiring αᵐᵒᵖ :=<span class=\"w\"></span>\n<span class=\"gd\">-{ .. mul_opposite.non_unital_semiring α, .. mul_opposite.non_assoc_semiring α,</span><span class=\"w\"></span>\n<span class=\"gi\">+{ one := 1,</span><span class=\"w\"></span>\n<span class=\"gi\">+  zero := 0,</span><span class=\"w\"></span>\n<span class=\"gi\">+  add := (+),</span><span class=\"w\"></span>\n<span class=\"gi\">+  mul := (*),</span><span class=\"w\"></span>\n<span class=\"gi\">+  .. mul_opposite.non_unital_semiring α, .. mul_opposite.non_assoc_semiring α,</span><span class=\"w\"></span>\n<span class=\"w\"> </span>  .. mul_opposite.monoid_with_zero α }<span class=\"w\"></span>\n</code></pre></div>",
        "id": 281425978,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651837223
    },
    {
        "content": "<p>Should <code>..</code> just be defined to mean this automatically?</p>",
        "id": 281426013,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651837243
    },
    {
        "content": "<p>what's the difference? I thought this was how <code>..</code> was defined</p>",
        "id": 281426052,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1651837277
    },
    {
        "content": "<p>The <code>one := 1</code> version uses <code>opposite.has_one</code>, the <code>..</code>-only version uses <code>mul_one_class.to_has_one $ ... $ non_unital_semiring.to_non_unital_non_assoc_semiring $ mul_opposite.non_unital_semiring</code></p>",
        "id": 281426238,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651837416
    },
    {
        "content": "<p>Basically, I'm suggesting that <code>..</code> should unfold all reducible definitions</p>",
        "id": 281426258,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651837434
    },
    {
        "content": "<p>Or alternative, we need a tactic <code>by reduced foo</code> which basically amounts to</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">begin</span>\n   <span class=\"k\">have</span> <span class=\"o\">:=</span>  <span class=\"n\">foo</span><span class=\"o\">,</span>\n   <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>  <span class=\"c1\">-- or whatever the right level of \"unfold reducible things\" is</span>\n   <span class=\"n\">exact</span> <span class=\"n\">this</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 281426383,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651837511
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>, hopefully <code>dsimp_result { exact foo }</code> already does this.</p>",
        "id": 281433715,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651841657
    },
    {
        "content": "<p>You can pass the usual <code>dsimp</code> arguments to <code>dsimp_result</code>. There is also <code>simp_result</code>.</p>",
        "id": 281433773,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651841683
    },
    {
        "content": "<p>Neither have been battle-tested much!</p>",
        "id": 281433785,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651841692
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.interactive.dsimp_result\">docs#tactic.interactive.dsimp_result</a></p>",
        "id": 281433789,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651841695
    },
    {
        "content": "<p>I think they have only been used inside other tactic implementations to date, not out in the wild. :-)</p>",
        "id": 281433859,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1651841738
    }
]