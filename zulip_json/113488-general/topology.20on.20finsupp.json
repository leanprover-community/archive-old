[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/Convexity.20refactor/near/255040107\">said</a>:</p>\n<blockquote>\n<p>Okay so I have <a href=\"https://github.com/leanprover-community/mathlib/tree/std_simplex_finsupp\">branch#std_simplex_finsupp</a> (currently a mess, feel free to help!) to change <a href=\"https://leanprover-community.github.io/mathlib_docs/find/std_simplex\">docs#std_simplex</a> to a set of <code>finsupp</code>s, hence relaxing the fintype assumption.</p>\n</blockquote>\n<p>I took a brief look at this branch and as far as I can tell, mathlib doesn't actually have the topology on <code>ι →₀ ℝ</code> defined yet--is that right?</p>",
        "id": 255117367,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632775668
    },
    {
        "content": "<p>I just want to comment that this <code>std_simplex ι</code> does arise in algebraic topology and the correct topology on it is not the subspace topology from <code>ι → ℝ</code>. It is the subspace topology from <code>ι →₀ ℝ</code> where the latter is topologized as the union of the subspaces of functions with support contained in <code>s</code> for each finite subset <code>s</code>.</p>",
        "id": 255118235,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632776033
    },
    {
        "content": "<p>And <code>std_simplex ℝ ι</code> is only compact when <code>ι</code> is finite.</p>",
        "id": 255122207,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632777639
    },
    {
        "content": "<p>is this the box/product topology stuff?</p>",
        "id": 255125488,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1632779164
    },
    {
        "content": "<p>Might be actually, I never thought about it that way.</p>",
        "id": 255126235,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632779583
    },
    {
        "content": "<p>It's not the product topology, that's exactly your point, right? If you put the product topology on <code>ι → ℝ</code>, and then take the subspace topology for <code>std_simplex ℝ ι</code> you get something compact. But if you take this \"colimit\" topology on <code>ι →₀ ℝ</code>, and then take the subspace topology, you get something different?<br>\nOr am I misunderstanding one/both of you?</p>",
        "id": 255140301,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632787569
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/113488-general/topic/topology.20on.20finsupp/near/255117367\">said</a>:</p>\n<blockquote>\n<p>I took a brief look at this branch and as far as I can tell, mathlib doesn't actually have the topology on <code>ι →₀ ℝ</code> defined yet--is that right?</p>\n</blockquote>\n<p>Yup, that's what I meant by \"hitting a wall of bricks\".</p>",
        "id": 255162071,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632805491
    },
    {
        "content": "<p>Well, of missing bricks!</p>",
        "id": 255162081,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632805503
    },
    {
        "content": "<p>I have no ideas what those different topologies are on about, so I'll just ask the obvious questions.</p>\n<ul>\n<li>Does the topology you're talking about coincide with the subspace topology when <code>ι</code> is a fintype?</li>\n<li>Does the topology matter somewhere else?</li>\n<li>Is it relevant for the topological results we already have about <code>std_simplex</code>?</li>\n</ul>",
        "id": 255162423,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632805807
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/topology.20on.20finsupp/near/255162423\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Does the topology you're talking about coincide with the subspace topology when <code>ι</code> is a fintype?</li>\n</ul>\n</blockquote>\n<p>Up to propeq, yes, but not defeq.</p>",
        "id": 255165170,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632808307
    },
    {
        "content": "<p>And how hard is it to define that topology?</p>",
        "id": 255165408,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632808472
    },
    {
        "content": "<p>I don't think it is too hard. Otoh, I've never used infinite-dimensional simplices myself. So it would be good to hear from Reid about the other two questions.</p>",
        "id": 255165792,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632808786
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113488-general/topic/topology.20on.20finsupp/near/255140301\">said</a>:</p>\n<blockquote>\n<p>It's not the product topology, that's exactly your point, right? If you put the product topology on <code>ι → ℝ</code>, and then take the subspace topology for <code>std_simplex ℝ ι</code> you get something compact. But if you take this \"colimit\" topology on <code>ι →₀ ℝ</code>, and then take the subspace topology, you get something different?<br>\nOr am I misunderstanding one/both of you?</p>\n</blockquote>\n<p>Yes that's right. But the <a href=\"https://en.wikipedia.org/wiki/Box_topology\">box topology</a> is another topology on the product of topological spaces, finer than the product topology, and if you restrict that to <code>finsupp</code> or <code>std_simplex</code>, it seems like it does give the correct \"colimit\" topology. But I'm not sure if that is really a useful fact.</p>",
        "id": 255206754,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632831683
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/topology.20on.20finsupp/near/255162423\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Does the topology matter somewhere else?</li>\n<li>Is it relevant for the topological results we already have about <code>std_simplex</code>?</li>\n</ul>\n</blockquote>\n<p>I don't think I understand either of these questions, can you be more specific?</p>",
        "id": 255207210,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632831893
    },
    {
        "content": "<p>They are now caduque as Johan said the correct topology on <code>ι →₀ ℝ</code> is an extension of the topology on <code>ι → ℝ</code> for fintype <code>ι</code>.</p>",
        "id": 255207423,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632832007
    },
    {
        "content": "<p>I meant \"Does it matter if the lemmas now apply to a different topology?\". And they actually will apply to the same topology.</p>",
        "id": 255207493,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632832042
    },
    {
        "content": "<p>I see.</p>",
        "id": 255207525,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632832057
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/topology.20on.20finsupp/near/255165408\">said</a>:</p>\n<blockquote>\n<p>And how hard is it to define that topology?</p>\n</blockquote>\n<p>There are a few equivalent ways, but if you want to make it definitionally a subspace of <code>finsupp</code>, then you could do it like this. For any <code>s : finset ι</code> there is a function <code>(s -&gt; X) -&gt; (ι  →₀ X)</code> which \"extends by zero\", and the topology on <code>finsupp</code> is the join of the <a href=\"https://leanprover-community.github.io/mathlib_docs/find/topological_space.coinduced\">docs#topological_space.coinduced</a> of all the product topologies on the <code>s -&gt; X</code>s.</p>",
        "id": 255207940,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632832239
    },
    {
        "content": "<p>Or you can also do the same type of construction directly on <code>std_simplex</code> and not all of <code>finsupp</code></p>",
        "id": 255208209,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632832366
    },
    {
        "content": "<p>Well, <code>std_simplex</code> should be a <code>set</code>, not a topological space.</p>",
        "id": 255208292,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632832411
    },
    {
        "content": "<p>Does it matter that the maps are going <code>↥s → X</code>? Or is it preferable to avoid this <code>coe_to_sort</code>?</p>",
        "id": 255208322,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632832425
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/topology.20on.20finsupp/near/255208292\">said</a>:</p>\n<blockquote>\n<p>Well, <code>std_simplex</code> should be a <code>set</code>, not a topological space.</p>\n</blockquote>\n<p>Or at least I think so? How do you use it in algebraic geometry?</p>",
        "id": 255208441,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632832468
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/topology.20on.20finsupp/near/255208292\">said</a>:</p>\n<blockquote>\n<p>Well, <code>std_simplex</code> should be a <code>set</code>, not a topological space.</p>\n</blockquote>\n<p>What do you mean by this? A <code>set</code> gives you a <code>subtype</code> which has the subspace topology.</p>",
        "id": 255220425,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1632837444
    },
    {
        "content": "<p>Yes. I mean that we shouldn't endow the set itself with the topology, but leave the subspace topology instance do its job.</p>",
        "id": 255221010,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632837639
    },
    {
        "content": "<p>Sorry, this was highly unclear.</p>",
        "id": 255221267,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632837739
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/topology.20on.20finsupp/near/255208441\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/topology.20on.20finsupp/near/255208292\">said</a>:</p>\n<blockquote>\n<p>Well, <code>std_simplex</code> should be a <code>set</code>, not a topological space.</p>\n</blockquote>\n<p>Or at least I think so? How do you use it in algebraic geometry?</p>\n</blockquote>\n<p>AG doesn't use simplices at all. In algebraic topology they are used a lot (as topological space), but in 99% of the use cases, the <code>ι</code> will be finite.</p>",
        "id": 255222158,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632838058
    },
    {
        "content": "<p>Argh sorry I always write AG when I mean AT.</p>",
        "id": 255222307,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632838102
    },
    {
        "content": "<p>The (potentially) infinite case comes up in conjunction with partitions of unity. A partition of unity on X with index set I determines a map from X into the I-simplex (equipped with this CW/colimit-type topology). If you have a map from X <em>into</em> a CW complex, then you have a pretty good handle on the homotopy type (as opposed to weak homotopy type) of X.</p>",
        "id": 255223639,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632838575
    },
    {
        "content": "<p>The fact that a partition of unity is locally finite is enough to get a map into the I-simplex with its CW topology. To get a map into the one with the topology that comes from the product topology, you would just need a point-finite partition of unity.</p>",
        "id": 255223830,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632838651
    },
    {
        "content": "<p>So for example, suppose you have a cover of X by open subsets (indexed by a set I) such that every finite intersection of the open subsets is contractible or empty, and the cover is numerable (admits a partition of unity). Inside the I-simplex, you can consider the union of those simplices whose vertices correspond to a family of members of the cover with nonempty intersection. The partition of unity determines a map from X to this subcomplex, and it will be a <a href=\"https://ncatlab.org/nlab/show/nerve+theorem\">homotopy equivalence</a>.</p>",
        "id": 255225441,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632839188
    },
    {
        "content": "<p>That said, I agree that the case of finite <code>ι</code> (or just <code>fin (n+1)</code>) is way more important overall.</p>",
        "id": 255225579,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632839243
    }
]