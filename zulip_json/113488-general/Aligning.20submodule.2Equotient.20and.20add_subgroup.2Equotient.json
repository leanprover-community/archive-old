[
    {
        "content": "<p>Right now these two aren't defeq:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.rat.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.quotient</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.algebra.basic</span>\n<span class=\"kd\">def</span> <span class=\"n\">qmodz</span> <span class=\"o\">:=</span> <span class=\"n\">ℚ</span> <span class=\"bp\">⧸</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">ℤ</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">range.to_add_subgroup</span>\n<span class=\"kd\">def</span> <span class=\"n\">qmodz'</span> <span class=\"o\">:=</span> <span class=\"n\">ℚ</span> <span class=\"bp\">⧸</span> <span class=\"o\">(</span><span class=\"n\">algebra.linear_map</span> <span class=\"n\">ℤ</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">range</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">qmodz</span> <span class=\"bp\">=</span> <span class=\"n\">qmodz'</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>  <span class=\"c1\">-- fails</span>\n</code></pre></div>\n<p>The first quotient is by the relation <code>-x + y ∈ s</code> (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/quotient_add_group.left_rel\">docs#quotient_add_group.left_rel</a>), the second by <code>x - y ∈ s</code> (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/submodule.quotient_rel\">docs#submodule.quotient_rel</a>). Can we change them to match? Or is there a good reason for different conventions here?</p>",
        "id": 272184938,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645048730
    },
    {
        "content": "<p>Mathematically there's no reason of course -- I can quite imagine people chose essentially randomly</p>",
        "id": 272187049,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1645049726
    },
    {
        "content": "<p>I remember there being some reason to prefer one over the other... cancellation happening better one way, but I don't remember the details.</p>",
        "id": 272187458,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645049963
    },
    {
        "content": "<p>Presumably we're stuck with the add_group one because left cosets are \"standard\" for quotients?</p>",
        "id": 272192829,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645053023
    },
    {
        "content": "<p>In which case, I guess we only have the option of changing the submodule one</p>",
        "id": 272193025,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645053145
    },
    {
        "content": "<p>See also <a href=\"#narrow/stream/116395-maths/topic/quotient.20vs.20orbits\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/quotient.20vs.20orbits</a></p>",
        "id": 272198582,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1645057259
    },
    {
        "content": "<p>What do you think about using <code>orbits.rel</code> for all these quotients? This way we don't get nice definitional equalities for <code>x ≈ y</code> but we'll be able to apply theorems about quotients by group actions to group/module quotients.</p>",
        "id": 272198721,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1645057372
    },
    {
        "content": "<p>(<a href=\"https://leanprover-community.github.io/mathlib_docs/find/orbits.rel\">docs#orbits.rel</a>? <a href=\"https://leanprover-community.github.io/mathlib_docs/find/orbit_rel\">docs#orbit_rel</a>?)</p>",
        "id": 272198751,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645057409
    },
    {
        "content": "<p>Ah, it's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mul_action.orbit_rel\">docs#mul_action.orbit_rel</a></p>",
        "id": 272198861,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645057502
    },
    {
        "content": "<p>Seems reasonable to me because \"by hand\" reasoning about elements that become equal in the quotient should go through some API anyways. On the other hand, it's not yet clear to me what specifically we gain</p>",
        "id": 272244453,
        "sender_full_name": "Reid Barton",
        "timestamp": 1645096376
    },
    {
        "content": "<p>but it seems plausible that somewhere, you would want to think of G/H as the orbits of G under multiplication by H (probably in the non-abelian and maybe non-normal case)</p>",
        "id": 272244589,
        "sender_full_name": "Reid Barton",
        "timestamp": 1645096480
    },
    {
        "content": "<p>I want to generalize <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.is_fundamental_domain.smul_invariant_measure_map\">docs#measure_theory.is_fundamental_domain.smul_invariant_measure_map</a> and other theorems in the same files from \"quotient group\" to \"quotient by a group action\", then be able to apply the more general theorem to get the old one for free.</p>",
        "id": 272256486,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1645103535
    },
    {
        "content": "<p>I've made the change to align these in <a href=\"https://github.com/leanprover-community/mathlib/pull/13620\">#13620</a></p>",
        "id": 279906807,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650690373
    },
    {
        "content": "<p>I haven't gone as far as using <code>orbit.rel</code>, mainly because it creates more work and I don't care about it (yet)</p>",
        "id": 279906828,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650690444
    }
]