[
    {
        "content": "<p>I'm trying to reproduce Lean 3 emscripten builds with emscripten â‰¥ 2 toolchain, but I am having a lot of difficulties (mainly because emscripten has very difficult constraints on LLVM / Binaryen versions).</p>\n<p>I wanted to understand if Lean 3 WASM builds were built under which version, reading the CI code leads to this Docker image: <a href=\"https://hub.docker.com/r/trzeci/emscripten\">https://hub.docker.com/r/trzeci/emscripten</a> with the tag <code>sdk-incoming-64bits</code>, so I suppose this host an emscripten 1.X.Y toolchain?</p>\n<p>Is anyone able to compile the builds using a recent emscripten? Thanks!</p>",
        "id": 250122575,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1629468713
    },
    {
        "content": "<p>Precisely: <code>CC=\"/emsdk_portable/emscripten/tag-1.38.43/emcc\"</code></p>",
        "id": 250122974,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1629468906
    },
    {
        "content": "<p>FWIW, I have setup'd some code to build emscripten bundles from Nix: <a href=\"https://github.com/RaitoBezarius/nixexprs/blob/master/pkgs/science/lean/emscripten.nix\">https://github.com/RaitoBezarius/nixexprs/blob/master/pkgs/science/lean/emscripten.nix</a> but unfortunately, the emscripten toolchain seems to be broken on nixpkgs for now, so I cannot get any bundle :-).</p>",
        "id": 250168963,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1629491479
    },
    {
        "content": "<p>(but with this, once it's fixed, it should be possible to produce any JavaScript WASM/JS files for any version of Lean, put it in a CI and cache it, then produce any kind of Lean 3 game, put it in a CI, then cache it :&gt;)</p>",
        "id": 250169100,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1629491536
    }
]