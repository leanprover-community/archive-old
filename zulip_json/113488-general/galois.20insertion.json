[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">archimedean</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">floor_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">galois_insertion</span> <span class=\"o\">(</span><span class=\"n\">ceil</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"n\">coe</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">choice</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"err\">⌈</span><span class=\"n\">x</span><span class=\"err\">⌉</span><span class=\"o\">,</span>\n  <span class=\"n\">gc</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ceil_le</span><span class=\"o\">,</span>\n  <span class=\"n\">le_l_u</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">le_of_eq</span> <span class=\"o\">(</span><span class=\"n\">ceil_coe</span> <span class=\"bp\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n  <span class=\"n\">choice_eq</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">rfl</span> <span class=\"o\">}</span>\n</pre></div>",
        "id": 134575752,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1537853553
    },
    {
        "content": "<p>let's come up with more examples</p>",
        "id": 134575753,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1537853563
    },
    {
        "content": "<p>nice observation. Of course <code>floor</code> is also in an adjoint pair, this time on the right side</p>",
        "id": 134575821,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537853708
    },
    {
        "content": "<p>also natural number subtraction is best understood in terms of the galois connection it forms with addition</p>",
        "id": 134575944,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537853975
    },
    {
        "content": "<p>same with natural/integer division</p>",
        "id": 134575949,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537853996
    },
    {
        "content": "<blockquote>\n<p>also natural number subtraction is best understood in terms of the galois connection it forms with addition</p>\n</blockquote>\n<p>previously unsaid sentence in human history <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span></p>",
        "id": 134576084,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1537854223
    },
    {
        "content": "<p>Sorry, I have to contradict you. I wrote those Galois connection and PRed them to the core library while I was interning at Galois. And I thought that was a beautiful coincidence and wouldn't shut up about it :P</p>",
        "id": 134576195,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1537854372
    },
    {
        "content": "<p>did you make any galois connections while you were there? :)</p>",
        "id": 134576211,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537854436
    },
    {
        "content": "<p>I certainly did :D</p>",
        "id": 134576214,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1537854455
    },
    {
        "content": "<p>Kenny can you remind me what a Galois connection and Galois insertion is?</p>",
        "id": 134578923,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537859115
    },
    {
        "content": "<p>If it helps, Galois connection ~ adjunction and Galois insertion ~ reflective subcategory, i.e. one of the adjoints is the inclusion of a full subcategory (or possibly coreflective, probably the other one is called a Galois coinsertion)</p>",
        "id": 134591243,
        "sender_full_name": "Reid Barton",
        "timestamp": 1537876744
    },
    {
        "content": "<p>where ~ means \"is what you get by specializing to preorders = categories with at most one morphism in each hom set\"</p>",
        "id": 134591256,
        "sender_full_name": "Reid Barton",
        "timestamp": 1537876764
    },
    {
        "content": "<p>so a pair of adjoint functors and one is inclusion of a full subcategory. Aren't there lots of examples then? e.g. metric spaces &lt;-&gt; complete metric spaces and lots of other examples of when you drop a property of X and then find some adjoint?</p>",
        "id": 134592595,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537878280
    },
    {
        "content": "<p>Yes except metric spaces don't form a preorder</p>",
        "id": 134592862,
        "sender_full_name": "Reid Barton",
        "timestamp": 1537878560
    },
    {
        "content": "<p>So the flavor of the examples tends to be a bit different, e.g., sub-R-modules inside all subsets or these floor/ceiling examples. But the theorems are largely the same--the left half of the connection preserves sups and so on</p>",
        "id": 134592982,
        "sender_full_name": "Reid Barton",
        "timestamp": 1537878667
    },
    {
        "content": "<p>Aah! At most one morphism between two objects, and a pair of adjoint functors, and inclusion of a full subcategory. That's the question.</p>",
        "id": 134593292,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537878944
    },
    {
        "content": "<p>Is <code>nat.pred</code> and <code>nat.succ</code> a galois insertion?</p>",
        "id": 134878359,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538218799
    },
    {
        "content": "<p>I can't seem to prove it</p>",
        "id": 134878360,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1538218801
    },
    {
        "content": "<p>a&lt;= succ b iff pred a &lt;= b looks true to me</p>",
        "id": 134879239,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538220578
    },
    {
        "content": "<p>succ is inclusion of a full subcategory</p>",
        "id": 134879241,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538220590
    },
    {
        "content": "<p>succ a &lt;= b iff a &lt;= pred b is false though</p>",
        "id": 134879290,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538220634
    },
    {
        "content": "<p>And pred is not an inclusion of a full subcategory</p>",
        "id": 134879307,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538220678
    },
    {
        "content": "<p>So it's 50-50 from where I'm sitting as to whether it's an insertion or a coinsertion</p>",
        "id": 134879423,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538220931
    },
    {
        "content": "<p>But it's not both</p>",
        "id": 134879424,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538220935
    },
    {
        "content": "<p>I was surprised to find that this wasn't already proven... more accurately there were some silly assumptions</p>",
        "id": 134879960,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538221823
    },
    {
        "content": "<p><code>a - b &lt;= c &lt;-&gt; a &lt;= b + c</code> is the galois connection, which is an insertion since <code>(a + b) - b = a</code>. Take <code>b = 1</code> and you have succ/pred</p>",
        "id": 134879976,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538221884
    }
]