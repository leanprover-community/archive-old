[
    {
        "content": "<p>Does Lean need a <code>simp</code> lemma for this?</p>",
        "id": 193291186,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586336236
    },
    {
        "content": "<p>I think it's one of the simp options (delta? iota?)</p>",
        "id": 193291360,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586336317
    },
    {
        "content": "<p><code>dsimp</code> unfolds it, <code>simp</code> (sometimes?) fails.</p>",
        "id": 193294452,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586338294
    },
    {
        "content": "<p>The problem with all those \"greek letter\" reductions is that those who understand them probably don't understand why, e.g., <a href=\"https://en.wikipedia.org/wiki/Lambda_calculus#Reduction\" title=\"https://en.wikipedia.org/wiki/Lambda_calculus#Reduction\">wiki</a> is not very helpful for others.</p>",
        "id": 193295527,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586338951
    },
    {
        "content": "<p>I hope someone will do <a href=\"https://github.com/leanprover-community/mathlib/issues/2102\" title=\"https://github.com/leanprover-community/mathlib/issues/2102\">#2102</a></p>",
        "id": 193295565,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1586338975
    },
    {
        "content": "<p>If <code>simp</code> fails when <code>dsimp</code> succeeds then I would guess it's because something else depends on this value and adding a <code>simp</code> lemma would make no difference.</p>",
        "id": 193323561,
        "sender_full_name": "Reid Barton",
        "timestamp": 1586354331
    }
]