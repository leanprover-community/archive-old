[
    {
        "content": "<p>If I have a family of rings <code>{gamma : Type} (R : gamma -&gt; Type) [forall i, ring (R i)]</code></p>",
        "id": 127447537,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527902839
    },
    {
        "content": "<p>For a mathematician it would look clearer if I could write <code>forall i, ring R_i</code></p>",
        "id": 127447541,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527902862
    },
    {
        "content": "<p>can i make R an instance of some notation typeclass or use some other notation gimmick to do this?</p>",
        "id": 127447585,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527902896
    },
    {
        "content": "<p>madness</p>",
        "id": 127447591,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527902914
    },
    {
        "content": "<p>you're such a pessimist</p>",
        "id": 127447595,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527902926
    },
    {
        "content": "<p>just because it could be another valid variable name</p>",
        "id": 127447597,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527902938
    },
    {
        "content": "<p>what about some weird unicode underline that's not valid</p>",
        "id": 127447606,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527902972
    },
    {
        "content": "<p>This was a proposal on core lean a while back</p>",
        "id": 127447664,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527903078
    },
    {
        "content": "<p>That's a terrible idea.</p>",
        "id": 127447665,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1527903079
    },
    {
        "content": "<p>oh wait I misunderstood</p>",
        "id": 127447666,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527903100
    },
    {
        "content": "<p>I thought you wanted to avoid the <code>gamma</code> and <code>R</code> decls</p>",
        "id": 127447670,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527903116
    },
    {
        "content": "<p>it's the underscore I want</p>",
        "id": 127447712,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527903130
    },
    {
        "content": "<p>sorry</p>",
        "id": 127447715,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527903141
    },
    {
        "content": "<p><code>R_i</code> parsed as nonatomic is a terrible idea, underscores are used <em>gratuitously</em> in lean as spaces that don't break the identifier</p>",
        "id": 127447716,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527903159
    },
    {
        "content": "<p>We would always talk about a family <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">R_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"base\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathit mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"></span></span></span></span></span></span></span></span> of rings</p>",
        "id": 127447718,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527903161
    },
    {
        "content": "<p>how about subscript i?</p>",
        "id": 127447722,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527903182
    },
    {
        "content": "<p>That's actually been discussed before too</p>",
        "id": 127447728,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527903206
    },
    {
        "content": "<p>proper subscript would be brilliant</p>",
        "id": 127447730,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527903223
    },
    {
        "content": "<p>Did you know there is a subscript for every letter except q?</p>",
        "id": 127447731,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527903230
    },
    {
        "content": "<p>sometimes I know that</p>",
        "id": 127447734,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527903240
    },
    {
        "content": "<p>I have been browsing that file</p>",
        "id": 127447776,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527903253
    },
    {
        "content": "<p>I was looking for cool curly sheaf notation :-)</p>",
        "id": 127447778,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527903263
    },
    {
        "content": "<p>Anyway I suggest you don't try too hard to perfectly replicate all the inconsistencies in math notation</p>",
        "id": 127447796,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527903337
    },
    {
        "content": "<p>As an additional note, I believe an identifier followed by a subscript (like <code>fooₐ</code>) is treated as one big identifier, not as <code>foo</code> followed by <code>ₐ</code></p>",
        "id": 127447893,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1527903538
    },
    {
        "content": "<p>Yes I'm sure you're right. It would just look less nerdy</p>",
        "id": 127448374,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527904483
    },
    {
        "content": "<p>Hmmm, a mathematician complaining about looking too nerdy ...</p>",
        "id": 127448450,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1527904653
    }
]