[
    {
        "content": "<p>On a few occasions, I've found that <code>simp at h, simp [h]</code> works when <code>simpa using h</code> does not. I thought the latter was intended to replace the former. Is this not the case?</p>",
        "id": 134084181,
        "sender_full_name": "Sean Leather",
        "timestamp": 1537167678
    },
    {
        "content": "<p>They are not equivalent. <code>simpa using h</code> is equivalent to <code>simp at h |-, exact h</code></p>",
        "id": 134084418,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537168113
    },
    {
        "content": "<p>in particular, <code>simp at h, simp [h]</code> may use <code>h</code> to rewrite in subterms, while <code>simpa</code> is just preparing to match it directly against the goal</p>",
        "id": 134084429,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537168172
    },
    {
        "content": "<p>This makes <code>simpa</code> less powerful but more controlled, especially when quantifiers get involved</p>",
        "id": 134084491,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537168271
    },
    {
        "content": "<p>Ah, okay. Thanks.</p>",
        "id": 134084497,
        "sender_full_name": "Sean Leather",
        "timestamp": 1537168297
    },
    {
        "content": "<p>Sean -- do you fancy editing the simp docs to explain this? I never really feel on top of this subtlety so never feel equipped to change them to explain it. I am still at the stage where I just try random combinations of simp, simpa, simp!, <code>simp * at *</code> and just keep going until it works.</p>",
        "id": 134086319,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537170988
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/mathlib/blob/master/docs/extras/simp.md\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/docs/extras/simp.md\">https://github.com/leanprover/mathlib/blob/master/docs/extras/simp.md</a></p>",
        "id": 134086363,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537171074
    },
    {
        "content": "<p>Just edit the community one I guess</p>",
        "id": 134086406,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537171093
    },
    {
        "content": "<p>Hmm, I don't know. I'm just looking at that document for the first time. I don't find it very easy to follow for reference, and I wouldn't know where to put what. I think Mario answering Zulip questions in a document would be better. <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>",
        "id": 134087022,
        "sender_full_name": "Sean Leather",
        "timestamp": 1537172012
    },
    {
        "content": "<p>To make matters even more interesting, I have a goal that isn't solved by <code>by simp at h, simp [h]</code> but is solved by <code>by simp at h; simp; exact h</code> or <code>by simp at h; simp [h] {contextual := tt}</code> or <code>Î» x, by simpa using h x</code>. After <code>by simp at h; simp</code>, <code>h</code> and the goal look exactly the same (with <code>set_option pp.all true</code>). I'm not clear on why it can't be solved.</p>",
        "id": 134101631,
        "sender_full_name": "Sean Leather",
        "timestamp": 1537192239
    }
]