[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> You might find this paper of interest: Verifying X86 Instruction Implementations (<a href=\"https://arxiv.org/pdf/1912.10285.pdf\" target=\"_blank\" title=\"https://arxiv.org/pdf/1912.10285.pdf\">https://arxiv.org/pdf/1912.10285.pdf</a>)</p>",
        "id": 186352033,
        "sender_full_name": "Tim Daly",
        "timestamp": 1579746054
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> The x86 instruction verification paper is impressive. They start with the RTL (register transfer logic) specified in SystemVerilog (hardware circuit definitions), move through micro-ops, all the way up to user-visible instructions. I worked with their example instruction (SHRD, shift right double) in a different context and I'm quite impressed. Apparently their work is available on github.</p>",
        "id": 186398256,
        "sender_full_name": "Tim Daly",
        "timestamp": 1579792574
    }
]