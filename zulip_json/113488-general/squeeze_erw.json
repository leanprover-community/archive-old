[
    {
        "content": "<p>The <code>rw</code> technology I'd most love would be <code>squeeze_erw</code> that gave some hint why an <code>erw</code> was necessary rather than a <code>rw</code>.</p>",
        "id": 202211506,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593303594
    },
    {
        "content": "<p>Yes, I'm with you on that. I have no idea where to begin there</p>",
        "id": 202211552,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593303616
    },
    {
        "content": "<p>I tried thinking about it at one point, and it seemed hard. :-)</p>",
        "id": 202211560,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593303647
    },
    {
        "content": "<p>Actually, for <code>squeeze_erw</code>, maybe we could start with <code>erw h, rw &lt;- h</code> and then do a diff. We'd expect to land back on the initial state but the differences should be telling</p>",
        "id": 202211570,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593303704
    },
    {
        "content": "<p>Huh!</p>",
        "id": 202211681,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593303870
    },
    {
        "content": "<p>I'm not sure how to translate those differences into something the user can find helpful</p>",
        "id": 202211693,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593303911
    },
    {
        "content": "<p>Can we do a <code>convert</code> to compare the initial and final terms?</p>",
        "id": 202211748,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593303987
    },
    {
        "content": "<p>I like the idea but because the two terms should be definitionally equal, <code>congr</code> should close the proof with <code>refl</code>. We might need a customized version of <code>convert</code> / <code>congr</code> that refrains from using <code>refl</code> unless we have syntactic equality.</p>",
        "id": 202211934,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593304399
    },
    {
        "content": "<p>Maybe that could get us to a series of equalities of the form <code>f x y z = _</code> where we need to unfold <code>f</code></p>",
        "id": 202212061,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593304651
    },
    {
        "content": "<p>We might want to advise to user to do <code>unfold f</code> before the rewrite but it might also mess our opportunity to rewrite</p>",
        "id": 202212108,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593304729
    },
    {
        "content": "<p>Do we have in Lean the equivalent of <code>rewrite _ at 3</code> in Coq? That would allow us to have very targeted pieces of advice</p>",
        "id": 202212114,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593304798
    },
    {
        "content": "<p>There's <code>rw _ {occs := occurrences.pos [3]}</code> <a href=\"#narrow/stream/113489-new-members/topic/Sam.20Estep/near/201095954\">as I recently learned</a>.</p>",
        "id": 202212379,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1593305227
    },
    {
        "content": "<p>Has this been there all along?</p>",
        "id": 202212628,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593305684
    },
    {
        "content": "<p>Yes</p>",
        "id": 202212700,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593305862
    },
    {
        "content": "<p>Uh! I learn every day</p>",
        "id": 202213033,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1593306523
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110026\">Simon Hudon</span> <a href=\"#narrow/stream/113488-general/topic/squeeze_erw/near/202212114\">said</a>:</p>\n<blockquote>\n<p>Do we have in Lean the equivalent of <code>rewrite _ at 3</code> in Coq? That would allow us to have very targeted pieces of advice</p>\n</blockquote>\n<p>And there is <code>nth_rewrite</code></p>",
        "id": 202218621,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593317252
    }
]