[
    {
        "content": "<p>If <code>include blah</code> occurs in my current namespace, is there a way to make a special definition which doesn't take <code>blah</code> as an argument?</p>",
        "id": 134878195,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1538218339
    },
    {
        "content": "<p><code>omit blah</code></p>",
        "id": 134878197,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1538218355
    },
    {
        "content": "<p>and then reinclude</p>",
        "id": 134878199,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1538218362
    },
    {
        "content": "<p>awesome cheers!</p>",
        "id": 134878790,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1538219666
    },
    {
        "content": "<p>how about turning a <code>list Î±</code> into an <code>expr</code>?</p>",
        "id": 134878828,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1538219754
    },
    {
        "content": "<p>I think <code>reflect</code> is what you want?</p>",
        "id": 134879034,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1538220115
    },
    {
        "content": "<p>Sweet!</p>",
        "id": 134879356,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1538220760
    },
    {
        "content": "<p>Has anyone ever gotten the error <code>VM does not have code for 'xyz.abc'</code> after trying to use something they <code>environment.add</code>ed?</p>",
        "id": 134879364,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1538220807
    },
    {
        "content": "<p>The only time I get that error is when I've accidentally used <code>theorem</code> to make a definition</p>",
        "id": 134879479,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538221048
    },
    {
        "content": "<p>it turned out to be a really obscure problem, where if you call user_attribute.get_param with someone who doesn't have the attribute set, the vm un-gracefully shoots you down without a catchable <code>fail</code></p>",
        "id": 134880407,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1538222679
    },
    {
        "content": "<p>If this ever comes up for anyone else, <code>environment.add</code> is a little messed up if you want to later add attributes<br>\nInstead use <code>tactic.add_decl</code> (both are implemented in C++)</p>",
        "id": 134881168,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1538224316
    },
    {
        "content": "<blockquote>\n<p>it turned out to be a really obscure problem, where if you call user_attribute.get_param with someone who doesn't have the attribute set, the vm un-gracefully shoots you down without a catchable <code>fail</code></p>\n</blockquote>\n<p>Are you sure? <code>get_param</code> has issues because it uses <code>eval_expr</code> which is kind of broken. Try <code>get_param_untyped</code> instead to see if it crashes uglily, still</p>",
        "id": 134895695,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1538254129
    }
]