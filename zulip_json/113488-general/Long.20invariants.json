[
    {
        "content": "<p>[soft question]<br>\nHow do you structure proofs which are based on invariants that are too long to state?</p>\n<p>I am formalizing this proof:<br>\n<a href=\"https://github.com/madvorak/grammars/blob/main/informal/KleeneStar.pdf\">https://github.com/madvorak/grammars/blob/main/informal/KleeneStar.pdf</a></p>\n<p>The critical part, originally called Lemma 2, is stated here:<br>\n<a href=\"https://github.com/madvorak/grammars/blob/58466a1ead6fc9ad3f989915e03f94777fe45363/src/unrestricted/closure_properties/unary/star_RE.lean#L373\">https://github.com/madvorak/grammars/blob/58466a1ead6fc9ad3f989915e03f94777fe45363/src/unrestricted/closure_properties/unary/star_RE.lean#L373</a></p>\n<p>Naturally, I want to make a lemma for each case (of six in total), and possibly even more granularity. If I take the goal for each case and literally extract the goal (with the necessary context) into a new lemma, I will end having something very similar to lines 375–389 in each of the lemma statement. That would be a lot of boilerplate code.</p>\n<p>What can I do about it? There are a few options that came to my mind.<br>\n(1) Fuck DRY. Just copy the invariant into each lemma statement.<br>\n(2) Turn the invariant into a definition. Then unfold the definition inside each proof.<br>\n(3) Carefully pass only those terms (disjuncts that can result from the given case) into each lemma. Then I cannot <code>apply</code> the lemma directly; I will have to do <code>cases</code> on the output of the lemma in order to map them into how the overall invariant is satisfied in each case.</p>\n<p>Any recommendation, please?</p>",
        "id": 307066092,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1667209603
    },
    {
        "content": "<p>I would go for option 1, if the invariant does not have any use outside of these lemmas. Otherwise 2 might be a good option. Basically I'd try and avoid mathematically unnecessary clutter like <code>cases</code>.</p>",
        "id": 307074683,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1667212913
    },
    {
        "content": "<p>For comparison, the hairiest invariant I ever had to set up was in the chain <a href=\"https://leanprover-community.github.io/mathlib_docs/find/submodule.basis_of_pid_aux\">docs#submodule.basis_of_pid_aux</a> → <a href=\"https://leanprover-community.github.io/mathlib_docs/find/submodule.nonempty_basis_of_pid\">docs#submodule.nonempty_basis_of_pid</a> → <a href=\"https://leanprover-community.github.io/mathlib_docs/find/submodule.exists_smith_normal_form_of_le\">docs#submodule.exists_smith_normal_form_of_le</a>: in this proof you have to do induction in <code>submodule.basis_of_pid_aux</code> on essentially its own result. Maybe this gives some inspiration?</p>",
        "id": 307074784,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1667212945
    },
    {
        "content": "<p>Wow! You managed to prove <code>submodule.basis_of_pid_aux</code> in circa 100 lines. Hence you didn't need to copy the invariant into any other lemma. Am I right?</p>",
        "id": 307077978,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1667214215
    },
    {
        "content": "<p>I guess that's one way to say it: I managed to put the invariant into the statement of one definition so it didn't have to be repeated across all usages.</p>",
        "id": 307078492,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1667214397
    },
    {
        "content": "<p>Which definition are you talking about?</p>",
        "id": 307078704,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1667214504
    },
    {
        "content": "<p>I mean <code>submodule.basis_of_pid_aux</code></p>",
        "id": 307081876,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1667215601
    },
    {
        "content": "<p>My point was that you didn't need and didn't have motivation to extract the invariant into a definition because you found a pretty compact proof. I am not that good at proving things concisely, hence I will have a lot of lemmata with my invariant.</p>",
        "id": 307082851,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1667215943
    }
]