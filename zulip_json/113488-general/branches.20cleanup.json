[
    {
        "content": "<p>There are <a href=\"https://github.com/leanprover-community/mathlib/branches\">951 branches</a> in the mathlib repository right now. Even though the cost of a branch is very low, this feels messy -- I'm guessing many of those branches will never be touched. So, PSA, consider taking a look and cleaning up your dead branches! Err on the side of caution and don't delete anything that other people might be using. But if you created a branch and its usefulness is over, let's get rid of it.</p>",
        "id": 258216395,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1634657729
    },
    {
        "content": "<p>Here's <a href=\"https://github.com/leanprover-community/mathlib/branches/stale\">a list of the least active branches</a></p>",
        "id": 258220268,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634658925
    },
    {
        "content": "<p>All the stuff in <a href=\"https://github.com/leanprover-community/mathlib/tree/fundamental-groupoid\">branch#fundamental-groupoid</a> is now in mathlib in one form or another.</p>",
        "id": 258222711,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634659634
    },
    {
        "content": "<p>I am personally reviving <a href=\"https://github.com/leanprover-community/mathlib/issues/2770\">#2770</a> and <a href=\"https://github.com/leanprover-community/mathlib/issues/5104\">#5104</a>.</p>",
        "id": 258222903,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634659694
    },
    {
        "content": "<p>I am also taking care of <a href=\"https://github.com/leanprover-community/mathlib/tree/fin_range\">branch#fin_range</a> some time soon.</p>",
        "id": 258223075,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634659752
    },
    {
        "content": "<p>All the stuff in <a href=\"https://github.com/leanprover-community/branch/issues/100\">branch#100</a>-theorems-73 is now in mathlib.</p>",
        "id": 258223942,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634660036
    },
    {
        "content": "<p>(uh? Zulip formatting go weee)</p>",
        "id": 258224053,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634660060
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/seminorm-etc\">branch#seminorm-etc</a> can straight up be deleted as <a href=\"https://github.com/leanprover-community/mathlib/issues/1926\">#1926</a> has been superseded by <a href=\"https://github.com/leanprover-community/mathlib/issues/4827\">#4827</a></p>",
        "id": 258225775,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634660622
    },
    {
        "content": "<p>Would be nice if someone else could make the final call on each of these.</p>",
        "id": 258225881,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634660647
    },
    {
        "content": "<p>I noticed some merged branches aren't deleted by bors, e.g. alexjbest/add_subgroup_nsmul (<a href=\"https://github.com/leanprover-community/mathlib/pull/9594\">https://github.com/leanprover-community/mathlib/pull/9594</a>) was merged but bors never deleted it? Does anyone know the reason for this? I for one assumed bors was deleting all old branches and never paid any attention. Can we run a script that deletes merged branches to clean this up?</p>",
        "id": 258250586,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1634668938
    },
    {
        "content": "<p>Yes, it is running now and called Yaël <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 258251345,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634669241
    },
    {
        "content": "<p>I think bors only deletes branches if GitHub reports that there are no unmerged commits, but sometimes GitHub is wrong. That seems to be the case with <a href=\"https://github.com/leanprover-community/mathlib/issues/9594\">#9594</a>.</p>",
        "id": 258252142,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1634669561
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"294142\">@Chris Wong</span>, do you wanna PR your Fibonacci words? <a href=\"https://github.com/leanprover-community/mathlib/compare/fibword?expand=1\">https://github.com/leanprover-community/mathlib/compare/fibword?expand=1</a> It looks good.</p>",
        "id": 258257640,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634671789
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252627\">@Jujian Zhang</span>, what's the status of <a href=\"https://github.com/leanprover-community/mathlib/issues/3884\">#3884</a>? We don't seem to have the juicy bits in mathlib yet.</p>",
        "id": 258259192,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634672433
    },
    {
        "content": "<p>We have Fermat's Last Theorem on <a href=\"https://github.com/leanprover-community/mathlib/tree/fermat4P2\">branch#fermat4P2</a> for the case <code>n = 4</code>. <span class=\"user-mention\" data-user-id=\"255743\">@Paul van Wamelen</span>, will you PR it?</p>",
        "id": 258264016,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634674345
    },
    {
        "content": "<p>I thought we already had FLT for n=4 in master</p>",
        "id": 258317273,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1634710208
    },
    {
        "content": "<p>We do <a href=\"https://leanprover-community.github.io/mathlib_docs/find/not_fermat_4\">docs#not_fermat_4</a></p>",
        "id": 258322179,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1634713817
    },
    {
        "content": "<p>Time for <code>n=3</code>?</p>",
        "id": 258322207,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1634713842
    },
    {
        "content": "<p>I have n=3 sorry-free, but I got distracted by other things before figuring out how to best PR it</p>",
        "id": 258324005,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1634714864
    },
    {
        "content": "<p>So maybe it's time for regular primes? This seems an ambitious but not out of reach project.</p>",
        "id": 258332215,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1634719382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>, do you think we should push for <a href=\"https://github.com/leanprover-community/mathlib/issues/4753\">#4753</a> to go through?</p>",
        "id": 258539448,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634820789
    },
    {
        "content": "<p>And in general what do we want to do with those forgotten branches? I'm trying to revive some of them, but I obviously can't do it all.</p>",
        "id": 258539548,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1634820833
    },
    {
        "content": "<p>Yes, that one certainly deserves to be revived.</p>",
        "id": 258539611,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634820845
    },
    {
        "content": "<p>It's useful for smooth/étale ring homs.</p>",
        "id": 258539643,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1634820858
    },
    {
        "content": "<p>We absolutely need Kahler differentials. I thought a bit about it, but it's not clear how to characterize them without quantifying over universes.</p>",
        "id": 258540082,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1634821043
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113488-general/topic/branches.20cleanup/near/258257640\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"294142\">Chris Wong</span>, do you wanna PR your Fibonacci words? <a href=\"https://github.com/leanprover-community/mathlib/compare/fibword?expand=1\">https://github.com/leanprover-community/mathlib/compare/fibword?expand=1</a> It looks good.</p>\n</blockquote>\n<p>Hi Yaël! I've got a lot on my plate at the moment, but I'm happy for you (or anyone else) to PR it in my stead :)</p>",
        "id": 258916452,
        "sender_full_name": "Chris Wong",
        "timestamp": 1635137464
    },
    {
        "content": "<p>The approach I used for <code>palindrome_fibword</code> was a bit strange – it invokes the substitution directly, instead of the standard strategy using concatenation (i.e. <a href=\"https://math.stackexchange.com/a/3142787/18486\">https://math.stackexchange.com/a/3142787/18486</a>). It might be worth investigating whether the concatenation approach is better.</p>",
        "id": 258916617,
        "sender_full_name": "Chris Wong",
        "timestamp": 1635137734
    }
]