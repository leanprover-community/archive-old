[
    {
        "content": "<p>Could <code>#where</code> also show the sections? That would allow me to quickly debug bad sectioning.</p>",
        "id": 253546565,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1631781043
    },
    {
        "content": "<p>Do you guys think it would be useful to have the output of <code>#where</code> somewhere in the Lean infoview, like in a expandable tab in the bottom portion of the window? The use case is when you're exploring code of a file you don't want to touch so you don't trigger a rebuild. Or simply for the agility of a click instead of having to type out <code>#where</code> in a line just to erase it afterward</p>",
        "id": 262130184,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1637356127
    },
    {
        "content": "<p>It would be very useful, but I don't think that'd be easy to do in Lean 3, <del>because currently the only way that I know of to get the server to return the output of <code>#where</code> at some point in a file is to tell the server that you've edited the file to add <code>#where</code> there and wait for it to respond.</del></p>",
        "id": 262130445,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1637356271
    },
    {
        "content": "<p>Hmm, actually maybe the widget framework could somehow do it.</p>",
        "id": 262130512,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1637356306
    },
    {
        "content": "<p>Yeah, I think one could potentially modify the infoview widgets to run something like <code>#where</code>. The docs are here if you want to look into it: <a href=\"https://github.com/leanprover-community/lean/blob/master/doc/widget_server.md#widgets\">https://github.com/leanprover-community/lean/blob/master/doc/widget_server.md#widgets</a></p>",
        "id": 262130795,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1637356448
    },
    {
        "content": "<p>Of course it would be useful! But I think this is already completely solved in Lean 4 so maybe it shouldn't be a priority to hack something in Lean 3 (unless it's rather easy).</p>",
        "id": 262130931,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1637356531
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/.23where/near/262130931\">said</a>:</p>\n<blockquote>\n<p>Of course it would be useful! But I think this is already completely solved in Lean 4 so maybe it shouldn't be a priority to hack something in Lean 3 (unless it's rather easy).</p>\n</blockquote>\n<p>How do you mean? The React component is already implemented and working in the Lean 4 plugin? Or is it that Lean 4 offers this query interface but the plugin doesn't consume it yet? It's been a while since I tested the Lean 4 plugin and I don't remember seeing it</p>",
        "id": 262131480,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1637356794
    },
    {
        "content": "<p>If I remember correctly I saw a breadcrumb like interface.</p>",
        "id": 262131921,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1637357009
    },
    {
        "content": "<p>Well, it's not telling you everything <code>#where</code> is telling you. But it gives the <em>crucial</em> information of the current namespace.</p>",
        "id": 262132042,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1637357057
    }
]