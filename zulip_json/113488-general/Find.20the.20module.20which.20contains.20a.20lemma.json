[
    {
        "content": "<p>Let's say I remember the name of a lemma/def/structure/..., but not the file I need to import to get it.</p>\n<p>Does vs-code have any automation to find and add the imports for me?</p>",
        "id": 206015707,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1596630359
    },
    {
        "content": "<p>No. Unfortunately vscode is limited by what lean knows, and lean doesn't know about any files that are not imported</p>",
        "id": 206016133,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1596630690
    },
    {
        "content": "<p>Could such a database be shipped alongside the mathlib oleans?</p>",
        "id": 206016360,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1596630901
    },
    {
        "content": "<p>I just search; VS Code does have pretty good search, and there are tricks (like searching for exact words etc).</p>",
        "id": 206016365,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1596630904
    },
    {
        "content": "<p>Of course there's also the docs. If you want to want to find <code>real.exp</code> you can do <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.exp\">docs#real.exp</a> and then see where the link leads. Rob explained a way of doing this within a browser, where you don't even have to spam zulip.</p>",
        "id": 206016461,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1596630973
    },
    {
        "content": "<p>It should be possible to rig up a search using olean-rs to quickly process the olean files without compiling everything</p>",
        "id": 206016463,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1596630974
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Find.20the.20module.20which.20contains.20a.20lemma/near/206016461\">said</a>:</p>\n<blockquote>\n<p>Of course there's also the docs. If you want to want to find <code>real.exp</code> you can do <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.exp\">docs#real.exp</a> and then see where the link leads. Rob explained a way of doing this within a browser, where you don't even have to spam zulip.</p>\n</blockquote>\n<p>I've used this approach before in private messages with welcome bot</p>",
        "id": 206016480,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1596630996
    },
    {
        "content": "<p>(as everyone knows, <code>real.exp</code> is in <code>data.complex.exponential</code> ;-) )</p>",
        "id": 206016529,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1596631041
    },
    {
        "content": "<p>Unfortunately this only works if you get the name and namespace exactly right, which in practice usually means you already know what it is</p>",
        "id": 206016539,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1596631051
    },
    {
        "content": "<p>for definitions like <code>real.exp</code> that's not so bad but for theorems you usually want some amount of autocomplete to get the name right</p>",
        "id": 206016742,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1596631189
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/exp\">docs#exp</a> does something useful btw</p>",
        "id": 206016806,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1596631215
    },
    {
        "content": "<p>oh nice, I hadn't thought of using the 404 for this</p>",
        "id": 206016832,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1596631245
    },
    {
        "content": "<p>I'm confused. How is that helpful? I just land at a 404 that says \"Please wait a second. I'll try to help you.\", but then nothing happens.</p>",
        "id": 206016885,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1596631285
    },
    {
        "content": "<p>it took about 3 seconds for me</p>",
        "id": 206016923,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1596631317
    },
    {
        "content": "<p>Still nothing for me (chrome on macos).</p>",
        "id": 206016993,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1596631344
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/z\">docs#z</a></p>",
        "id": 206016999,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1596631350
    },
    {
        "content": "<p>Nothing happens for me too, only seeing \"Please wait a second. I'll try to help you.\"</p>",
        "id": 206017020,
        "sender_full_name": "Utensil Song",
        "timestamp": 1596631368
    },
    {
        "content": "<p>(Chrome on Windows)</p>",
        "id": 206017038,
        "sender_full_name": "Utensil Song",
        "timestamp": 1596631382
    },
    {
        "content": "<p>Ah, should've tested in chromium.  \"please wait a minute\"</p>",
        "id": 206017043,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1596631386
    },
    {
        "content": "<p>I see \"exp:45 Uncaught TypeError: window.location.href.replaceAll is not a function<br>\n    at exp:45\" in the javascript console.</p>",
        "id": 206017051,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1596631389
    },
    {
        "content": "<p>On Ubuntu works for me on firefox and not on Chrome</p>",
        "id": 206017058,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1596631393
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/7llzhJs12pVPFRlGxUgLPwfz/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/7llzhJs12pVPFRlGxUgLPwfz/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/7llzhJs12pVPFRlGxUgLPwfz/image.png\"></a></div>",
        "id": 206017086,
        "sender_full_name": "Utensil Song",
        "timestamp": 1596631426
    },
    {
        "content": "<blockquote>\n<p>As of August 2020 the <code>replaceAll()</code> method is supported by Firefox but not by Chrome. It will become available in Chrome 85.</p>\n</blockquote>",
        "id": 206017249,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1596631540
    },
    {
        "content": "<p>I just pushed a fix, should be online in a few minutes.</p>",
        "id": 206017393,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1596631619
    },
    {
        "content": "<p>I now get a different problem \"Uncaught (in promise) ReferenceError: declSearch is not defined\"</p>",
        "id": 206019014,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1596632585
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/1d4NgnCxSBp-ktNnwheSppLC/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/1d4NgnCxSBp-ktNnwheSppLC/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/1d4NgnCxSBp-ktNnwheSppLC/image.png\"></a></div>",
        "id": 206019089,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1596632627
    },
    {
        "content": "<p>Ubuntu Chromium does seem to work now</p>",
        "id": 206019480,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1596632859
    },
    {
        "content": "<p>It seems like the code is assuming <code>nav.js</code> is loaded when <code>setTimeout</code> calls the callback; I don't suppose that's guaranteed.</p>",
        "id": 206019688,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1596632979
    },
    {
        "content": "<p>Quite a lot slower than in Firefox though</p>",
        "id": 206019742,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1596633002
    },
    {
        "content": "<p>Moved into <code>nav.js</code>.</p>",
        "id": 206020077,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1596633198
    },
    {
        "content": "<p>Works now, thanks (although rather slowly)</p>",
        "id": 206021529,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1596634059
    },
    {
        "content": "<p>Works beautifully, thanks! Combining this with <a href=\"#narrow/stream/113488-general/topic/browser.20extension.20for.20Lean/near/204644416\">the trick of setting this as a search engine</a> with a prefix of \"ml\", <a href=\"https://leanprover-community.github.io/mathlib_docs/find/z\">docs#z</a> is just \"ml z\" for me in the browser.</p>",
        "id": 206021997,
        "sender_full_name": "Utensil Song",
        "timestamp": 1596634310
    },
    {
        "content": "<p>I wonder if it's worth adopting <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\">JavaScript modules</a> here. That would solve the problem of files being loaded in the wrong order.</p>",
        "id": 206122304,
        "sender_full_name": "Chris Wong",
        "timestamp": 1596707823
    }
]