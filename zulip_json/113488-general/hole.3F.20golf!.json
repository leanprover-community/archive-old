[
    {
        "content": "<p>Is this a hole in the library? What is the shortest proof?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">dvd_sub_mod</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"err\">∣</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"err\">%</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n</pre></div>",
        "id": 194792504,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1587471037
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">dvd_sub_mod</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"err\">∣</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"err\">%</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span><span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">sub_eq_of_eq_add</span> <span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">mod_add_div</span> <span class=\"n\">k</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"bp\">⟩</span>\n</pre></div>",
        "id": 194792900,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587471274
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">dvd_sub_mod</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"err\">∣</span> <span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">k</span> <span class=\"err\">%</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span><span class=\"n\">k</span> <span class=\"bp\">/</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">sub_eq_iff_eq_add</span> <span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">mod_le</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"err\">$</span>\n  <span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">mod_add_div</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"o\">(</span><span class=\"n\">add_comm</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span><span class=\"bp\">⟩</span>\n</pre></div>",
        "id": 194793056,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587471387
    },
    {
        "content": "<p>yay my proof is shorter</p>",
        "id": 194793071,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587471394
    },
    {
        "content": "<p>Damn you autocomplete<br>\n<a href=\"/user_uploads/3121/_akZAjQopWE9XHbV0kOxsrav/Screenshot-from-2020-04-21-05-17-09.png\" title=\"Screenshot-from-2020-04-21-05-17-09.png\">Screenshot-from-2020-04-21-05-17-09.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/_akZAjQopWE9XHbV0kOxsrav/Screenshot-from-2020-04-21-05-17-09.png\" title=\"Screenshot-from-2020-04-21-05-17-09.png\"><img src=\"/user_uploads/3121/_akZAjQopWE9XHbV0kOxsrav/Screenshot-from-2020-04-21-05-17-09.png\"></a></div>",
        "id": 194793276,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587471519
    },
    {
        "content": "<p>looks like you have no imports?</p>",
        "id": 194793340,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587471573
    },
    {
        "content": "<p>Oh, yes <code>import data.nat.basic</code> solves the problem</p>",
        "id": 194793367,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587471598
    },
    {
        "content": "<p>The nat subtraction makes this annoying.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">dvd_sub_mod</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"err\">∣</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"err\">%</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">modeq</span><span class=\"bp\">.</span><span class=\"n\">modeq_iff_dvd</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"o\">(</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">modeq</span><span class=\"bp\">.</span><span class=\"n\">mod_modeq</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 194793500,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587471680
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113488-general/topic/hole.3F.20golf!/near/194793276\" title=\"#narrow/stream/113488-general/topic/hole.3F.20golf!/near/194793276\">said</a>:</p>\n<blockquote>\n<p>Damn you autocomplete<br>\n<a href=\"/user_uploads/3121/_akZAjQopWE9XHbV0kOxsrav/Screenshot-from-2020-04-21-05-17-09.png\" title=\"Screenshot-from-2020-04-21-05-17-09.png\">Screenshot-from-2020-04-21-05-17-09.png</a></p>\n</blockquote>\n<p>(entirely unrelated - which theme is this? I quite like it)</p>",
        "id": 194793533,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1587471702
    },
    {
        "content": "<p>night owl</p>",
        "id": 194793563,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587471720
    },
    {
        "content": "<p>name checks out</p>",
        "id": 194793625,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1587471737
    },
    {
        "content": "<p>cheater</p>",
        "id": 194793635,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587471742
    },
    {
        "content": "<p>maybe another hole is, in <code>data.nat.modeq</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">modeq_iff_dvd_of_le</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≡</span> <span class=\"n\">b</span> <span class=\"o\">[</span><span class=\"n\">MOD</span> <span class=\"n\">n</span><span class=\"o\">]</span> <span class=\"bp\">↔</span> <span class=\"n\">n</span> <span class=\"err\">∣</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span>\n</pre></div>",
        "id": 194793874,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587471861
    },
    {
        "content": "<p>I like the statement golfing</p>",
        "id": 194793923,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587471889
    },
    {
        "content": "<p>removed an extraneous space to make it shorter</p>",
        "id": 194793979,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587471922
    },
    {
        "content": "<p>I would skip the <code>of_le</code> in the name</p>",
        "id": 194794107,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587471990
    },
    {
        "content": "<p>unless you want another version when it's not <code>of_le</code></p>",
        "id": 194794125,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587472002
    },
    {
        "content": "<p>The nonunits make this annoying.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">euclidean_domain</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">dvd_sub_mod</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"err\">∣</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"err\">%</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"k\">if</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">euclidean_domain</span><span class=\"bp\">.</span><span class=\"n\">mod_zero</span><span class=\"o\">,</span> <span class=\"n\">sub_self</span><span class=\"o\">]</span>\n<span class=\"k\">else</span> <span class=\"bp\">⟨</span><span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">-</span> <span class=\"n\">k</span> <span class=\"err\">%</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">mul_div_cancel&#39;</span> <span class=\"bp\">_</span> <span class=\"n\">H</span><span class=\"bp\">⟩</span>\n</pre></div>",
        "id": 194794210,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1587472062
    },
    {
        "content": "<p>There's an existing <code>theorem modeq_iff_dvd : a ≡ b [MOD n] ↔ (n:ℤ) ∣ b - a</code> but maybe that should be the one with the altered name</p>",
        "id": 194794214,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587472063
    },
    {
        "content": "<p>Yeah but that's in a different namespace, right?</p>",
        "id": 194794302,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587472102
    },
    {
        "content": "<p>Oh I see this is for nats</p>",
        "id": 194794358,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587472146
    },
    {
        "content": "<p>No this is for <code>nat</code>s (<code>MOD</code> is for <code>nat</code>)--there's <em>also</em> <code>theorem modeq_iff_dvd : a ≡ b [ZMOD n] ↔ (n:ℤ) ∣ b - a :=</code> in <code>int.zmod</code></p>",
        "id": 194794393,
        "sender_full_name": "Reid Barton",
        "timestamp": 1587472172
    }
]