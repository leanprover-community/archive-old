[
    {
        "content": "<p><code>simp</code> can't prove <code>0 &lt; 1</code>? Or, more specifically:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">@</span><span class=\"n\">has_lt</span><span class=\"bp\">.</span><span class=\"n\">lt</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"n\">nat</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">has_lt</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">has_zero</span><span class=\"bp\">.</span><span class=\"n\">zero</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"n\">nat</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">has_zero</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">has_one</span><span class=\"bp\">.</span><span class=\"n\">one</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"n\">nat</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">has_one</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 133801225,
        "sender_full_name": "Sean Leather",
        "timestamp": 1536761478
    },
    {
        "content": "<p>No, but <code>simp [nat.pos_iff_ne_zero']</code> can.</p>",
        "id": 133801432,
        "sender_full_name": "Sean Leather",
        "timestamp": 1536761665
    },
    {
        "content": "<p>What about <code>norm_num</code>?</p>",
        "id": 133803706,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1536763784
    },
    {
        "content": "<p>what about rfl?</p>",
        "id": 133805913,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536765837
    },
    {
        "content": "<p><code>by refl</code></p>",
        "id": 133805936,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536765843
    },
    {
        "content": "<p>darn it, doesn't work!</p>",
        "id": 133805978,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536765870
    },
    {
        "content": "<p><code>le_refl 1</code> does</p>",
        "id": 133806086,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536765965
    },
    {
        "content": "<p><code>simp</code> proves equalities, not inequalities</p>",
        "id": 133806101,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1536765981
    },
    {
        "content": "<blockquote>\n<p><code>simp</code> proves equalities, not inequalities</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Not strictly true. <span class=\"emoji emoji-1f642\" title=\"slight smile\">:slight_smile:</span> </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">le_refl</span> <span class=\"mi\">1</span>\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">simp</span>\n</pre></div>",
        "id": 133813069,
        "sender_full_name": "Sean Leather",
        "timestamp": 1536772575
    },
    {
        "content": "<p>The reason I wanted <code>simp</code> to simplify this was to use it as a terminating tactic.</p>",
        "id": 133813085,
        "sender_full_name": "Sean Leather",
        "timestamp": 1536772607
    },
    {
        "content": "<p>simpa using zero_lt_one</p>",
        "id": 133813379,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536772984
    },
    {
        "content": "<blockquote>\n<p>simpa using zero_lt_one</p>\n</blockquote>\n<p>Oh, that's more descriptive than mine. And I see that <code>zero_lt_one</code> is in the core library and not <code>@[simp]</code>. I wonder if it would be worth making it <code>@[simp]</code> in mathlib.</p>",
        "id": 133815354,
        "sender_full_name": "Sean Leather",
        "timestamp": 1536774925
    }
]