[
    {
        "content": "<p>Suppose I have ./a/b/c.lean.<br>\nI do:</p>\n<div class=\"codehilite\"><pre><span></span><code>segfault@cirno-6:~/src/lean/cwd-bug$ lean4 -c c.cpp a/b/c.lean\n</code></pre></div>\n\n\n<p>Then there is <code>initialize_a_b_c</code> in c.cpp:</p>\n<div class=\"codehilite\"><pre><span></span><code>segfault@cirno-6:~/src/lean/cwd-bug$ cat c.cpp <span class=\"p\">|</span> grep initialize_a_b_c\nlean_object* initialize_a_b_c<span class=\"o\">(</span>lean_object* w<span class=\"o\">)</span> <span class=\"o\">{</span>\n</code></pre></div>\n\n\n<p>Then I go into a/ and generate new c.cpp inside of a/:</p>\n<div class=\"codehilite\"><pre><span></span><code>segfault@cirno-6:~/src/lean/cwd-bug/a$ lean4 -c c.cpp b/c.lean\n</code></pre></div>\n\n\n<p>And in new c.cpp there is <code>initialize_b_c</code> instead of <code>initialize_a_b_c</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>segfault@cirno-6:~/src/lean/cwd-bug/a$ cat c.cpp <span class=\"p\">|</span> grep initialize_b_c\nlean_object* initialize_b_c<span class=\"o\">(</span>lean_object* w<span class=\"o\">)</span> <span class=\"o\">{</span>\n</code></pre></div>\n\n\n<p>Is this a bug or a feature?</p>",
        "id": 199714379,
        "sender_full_name": "Uranus Testing",
        "timestamp": 1591256799
    },
    {
        "content": "<p>Lean 4 version:</p>\n<div class=\"codehilite\"><pre><span></span><code>segfault@cirno-6:~/src/lean/cwd-bug$ lean4 -v\nLean <span class=\"o\">(</span>version <span class=\"m\">4</span>.0.0, commit 9aa5a5c29838, Release<span class=\"o\">)</span>\n</code></pre></div>",
        "id": 199714525,
        "sender_full_name": "Uranus Testing",
        "timestamp": 1591256937
    },
    {
        "content": "<p>This is intentional. We expect multi-file projects with code generation not to be built by hand but with some build tool, e.g. the new <code>leanmake</code>, which should take care of this issue.</p>",
        "id": 199715014,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1591257346
    },
    {
        "content": "<p>Another problem appears here: any other .lean-file will always refer to <code>initialize_a_b_c</code> regardless of cwd. Therefore the generation of .cpp-files outside «.» becomes impossible.</p>\n<blockquote>\n<p>which should take care of this issue</p>\n</blockquote>\n<p>So, should build-system fix this?</p>",
        "id": 199715639,
        "sender_full_name": "Uranus Testing",
        "timestamp": 1591257729
    },
    {
        "content": "<p>There is nothing to fix. Just make sure to always call <code>lean</code> from the package root and everything will work out.</p>",
        "id": 199716794,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1591258623
    },
    {
        "content": "<p>Thanks for the explanation.</p>",
        "id": 199716838,
        "sender_full_name": "Uranus Testing",
        "timestamp": 1591258667
    }
]