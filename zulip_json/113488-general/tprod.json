[
    {
        "content": "<p>there are currently two PRs that introduce <code>tprod</code>:</p>\n<ul>\n<li><a href=\"https://github.com/leanprover-community/mathlib/issues/5311\">#5311</a> for indexed tensor products</li>\n<li><a href=\"https://github.com/leanprover-community/mathlib/issues/5385\">#5385</a> for finite products of types</li>\n</ul>\n<p>I don't have a strong opinion. But it would be good to resolve the conflict before merging.<br>\ncc: <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> <span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span></p>",
        "id": 220083148,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1608101811
    },
    {
        "content": "<p><code>tprod</code> seems like a natural extension of <code>tmul</code> to me, so I'd favor letting 5311 keep the name and renaming the other.</p>",
        "id": 220088615,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608107469
    },
    {
        "content": "<p>Ok, I'll rename it. How about <code>typeprod</code>? (I prefer a name without underscore, because I'm planning to have lemmas with names like <code>typeprod_typeprod</code>.)</p>",
        "id": 220097325,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1608113392
    },
    {
        "content": "<p><code>list.tprod</code>?</p>",
        "id": 220097501,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608113490
    },
    {
        "content": "<p>I would also like to see if we can avoid it entirely</p>",
        "id": 220097580,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608113529
    },
    {
        "content": "<p>I'm happy with <code>list.tprod</code>, then I will also define <code>set.tprod</code> and <code>measure.tprod</code>.<br>\nI think this is the most convenient way to do things, see comment in <a href=\"https://github.com/leanprover-community/mathlib/issues/5385\">#5385</a></p>",
        "id": 220168761,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1608150608
    },
    {
        "content": "<p>That seems fine to me, as long as the use is limited to these kind of proofs and isn't some new \"vocabulary type\" that we want to prove all sorts of things about</p>",
        "id": 220169076,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608150767
    },
    {
        "content": "<p>A question about <a href=\"https://github.com/leanprover-community/mathlib/issues/5385\">#5385</a>, defining using foldr places a punit at the end of the product. Why not a foldr1, so that the list of two elements is more directly equivalent to the regular Cartesian product, etc?</p>",
        "id": 220169801,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1608151157
    },
    {
        "content": "<p>that makes the inductive arguments more complicated, especially here where defeq is important</p>",
        "id": 220172382,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608152427
    },
    {
        "content": "<p>using <code>foldr1</code> would mean that <code>pempty</code> is either a special case or not included at all</p>",
        "id": 220172482,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1608152479
    },
    {
        "content": "<p>Indeed, I care more about simple proofs than a superfluous <code>× punit</code>, so I prefer <code>foldr</code>.</p>",
        "id": 220185554,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1608159455
    }
]