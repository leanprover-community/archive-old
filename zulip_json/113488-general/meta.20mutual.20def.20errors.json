[
    {
        "content": "<p>Does anyone know the source of this error? I get <code>unexpected error, failed to generate equational lemmas in the front-end</code> even though it's a meta def so it shouldn't have equations</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">meta</span> <span class=\"n\">mutual</span> <span class=\"n\">def</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">B</span>\n<span class=\"k\">with</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">unit</span> <span class=\"bp\">→</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"bp\">|</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"n\">return</span> <span class=\"o\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">unit</span> <span class=\"bp\">→</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"bp\">|</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"n\">return</span> <span class=\"o\">()</span>\n</pre></div>",
        "id": 132697613,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1535118878
    },
    {
        "content": "<p>(Mario and I are sitting next to each other and just discovered the curious answer. I'll explain while he does something useful. :-)</p>",
        "id": 132697723,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535119044
    },
    {
        "content": "<p>This doesn't work:</p>\n<div class=\"codehilite\"><pre><span></span>meta mutual def A, B\nwith A : ℕ → ℕ\n| n := 0\nwith B : ℕ → ℕ\n| n := 0\n</pre></div>",
        "id": 132697746,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535119077
    },
    {
        "content": "<p>with the same error.</p>",
        "id": 132697747,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535119080
    },
    {
        "content": "<p>However</p>\n<div class=\"codehilite\"><pre><span></span>meta mutual def A, B\nwith A : ℕ → ℕ\n| 0 := 0\n| (n+1) := B 0\nwith B : ℕ → ℕ\n| n := 0\n</pre></div>",
        "id": 132697787,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535119089
    },
    {
        "content": "<p>or even </p>\n<div class=\"codehilite\"><pre><span></span>meta mutual def A, B\nwith A : ℕ → ℕ\n| 0 := 0\n| (n+1) := A 0\nwith B : ℕ → ℕ\n| n := 0\n</pre></div>",
        "id": 132697792,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535119102
    },
    {
        "content": "<p>Somehow the compiler is insisting that the definitions actually refer to either themselves or each other.</p>",
        "id": 132697840,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535119191
    },
    {
        "content": "<p>And this only happens in <code>meta</code>.</p>",
        "id": 132697844,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535119196
    },
    {
        "content": "<p>Oh well! :-)</p>",
        "id": 132697846,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1535119200
    }
]