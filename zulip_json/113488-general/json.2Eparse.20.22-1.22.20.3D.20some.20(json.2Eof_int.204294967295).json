[
    {
        "content": "<p>This looks like a bug to me</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">run_cmd</span> <span class=\"k\">do</span>\n  <span class=\"n\">j</span><span class=\"bp\">@</span><span class=\"o\">(</span><span class=\"n\">json.of_int</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">json.parse</span> <span class=\"s2\">\"-1\"</span><span class=\"o\">,</span>\n  <span class=\"n\">tactic.trace</span> <span class=\"n\">i</span><span class=\"o\">,</span>            <span class=\"c1\">-- `4294967295`</span>\n  <span class=\"n\">tactic.trace</span> <span class=\"n\">j.to_format</span><span class=\"o\">,</span>  <span class=\"c1\">-- `4294967295`</span>\n  <span class=\"n\">tactic.trace</span> <span class=\"n\">j.unparse</span>     <span class=\"c1\">-- `-1`</span>\n\n<span class=\"c1\">-- succeeds</span>\n<span class=\"kd\">run_cmd</span> <span class=\"n\">guard</span> <span class=\"o\">(</span><span class=\"n\">json.parse</span> <span class=\"s2\">\"4294967295\"</span> <span class=\"bp\">=</span> <span class=\"n\">json.parse</span> <span class=\"s2\">\"-1\"</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>at least <a href=\"https://leanprover-community.github.io/mathlib_docs/find/json.parse\">docs#json.parse</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/json.unparse\">docs#json.unparse</a> round trip, but they don't decode to the expected result</p>",
        "id": 289104898,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657461717
    },
    {
        "content": "<p>I thought <span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> added the json stuff to Lean 3, so maybe he has some thoughts on this.</p>",
        "id": 289106271,
        "sender_full_name": "Jason Rute",
        "timestamp": 1657463406
    },
    {
        "content": "<p>I haven't really looked in detail at the lean3 source yet, but would be surprised if nothing similar has been noticed before</p>",
        "id": 289110190,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657468308
    },
    {
        "content": "<p>Yep definitely a bug</p>",
        "id": 289157295,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1657526746
    },
    {
        "content": "<p>Fix here: <a href=\"https://github.com/leanprover-community/lean/pull/740\">https://github.com/leanprover-community/lean/pull/740</a></p>",
        "id": 289159873,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1657528356
    },
    {
        "content": "<p>What does <code>4294967295</code> now parse as?</p>",
        "id": 289160577,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657528732
    }
]