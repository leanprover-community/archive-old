[
    {
        "content": "<p>I'm attempting to assert whether two elements of a list are equal, and then act on that assertion in an <code>if-then-else</code> manner, but for my <code>x = y</code> assertion, there is no <code>decidable</code> instance. Perhaps there's a different approach I ought to be taking?</p>",
        "id": 128673907,
        "sender_full_name": "dan pittman",
        "timestamp": 1530040308
    },
    {
        "content": "<p>Using the line <code>local attribute [instance] classical.prop_decidable</code> should help, but it will stop your functions being computable. What type do <code>x</code> and <code>y</code> have? You could also make <code>[decidable_eq Î±]</code> an argument to your function, if it's defined on an arbitrary type.</p>",
        "id": 128674057,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1530040453
    },
    {
        "content": "<p>Thanks! <code>decidable_eq</code> is what I was looking for! I'd written this in Haskell first, and was of course using <code>Eq a =&gt; ...</code>.</p>",
        "id": 128676882,
        "sender_full_name": "dan pittman",
        "timestamp": 1530043576
    }
]