[
    {
        "content": "<p>I've been playing around with displaying and interacting with Lean files on the web using \"Observable notebooks\" recently. See this page for a demonstration:</p>\n<p><a href=\"https://observablehq.com/@bryangingechen/fibonacci-formalized-1-some-sums\" target=\"_blank\" title=\"https://observablehq.com/@bryangingechen/fibonacci-formalized-1-some-sums\">https://observablehq.com/@bryangingechen/fibonacci-formalized-1-some-sums</a></p>\n<p>Basically, the notebook displays some simple Lean code in several embedded Lean editors with lots of markdown / LaTeX explanation around them. You can click to the left of any of the \"cells\" to see their Javascript source code. You can write and edit notebooks like this directly in your browser if you create a free account on <a href=\"http://observablehq.com\" target=\"_blank\" title=\"http://observablehq.com\">observablehq.com</a> by e.g. signing in with Github.</p>\n<p>One feature I rigged into the Lean editor cells is that they pass their messages from the Lean server back to Javascript. Since Observable notebooks work like spreadsheets, I could make \"Lean-driven\" graphics like the ones in the following notebook:</p>\n<p><a href=\"https://observablehq.com/@bryangingechen/fibonacci-formalized-2-bees-and-cars\" target=\"_blank\" title=\"https://observablehq.com/@bryangingechen/fibonacci-formalized-2-bees-and-cars\">https://observablehq.com/@bryangingechen/fibonacci-formalized-2-bees-and-cars</a></p>\n<p>Try changing the numbers in the <code>#eval</code> statements in the editors above the family tree graphic and the car configuration graphic and seeing how they change. (Don't make them too large or else browser Lean will run out of memory). </p>\n<p>It'd be interesting to see what else this could be used for!</p>\n<p>I wrote a little bit more about Observable notebooks and how you can write notebooks like these at the end of the first notebook above, but feel free to ask here if you have any questions.</p>",
        "id": 171903627,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1564346906
    },
    {
        "content": "<p>I haven't seen anyone do anything except D3 visualizations on Observable. This is great!</p>",
        "id": 171904372,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1564348234
    },
    {
        "content": "<p>This is really cool!</p>",
        "id": 171904627,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1564348745
    },
    {
        "content": "<p>I love reading interactive notebook explanations; I still look at Peter Norvig's Jupyter notebooks from time to time for reference.</p>",
        "id": 171904709,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1564348911
    },
    {
        "content": "<p>Thanks, glad you guys like it! I'm hoping other folks will try out writing some notebooks with Lean. I'm sure the code I wrote could be improved so I'm looking forward to feedback.</p>",
        "id": 171904870,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1564349130
    },
    {
        "content": "<p>I might give it a shot in the next couple weeks. I'm mostly a Jupyter person since I like to program in languages that don't have a native WASM backend like Lean, so this is incentive to figure out how ObservableHQ works.</p>",
        "id": 171905124,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1564349525
    },
    {
        "content": "<p>Great! I'll see if I can learn some basics of Lean this way. I love Observable for the ability to easily write in LaTeX. For suggestions, as much as I like to write long posts to explain, Observable is at its best for smallish notebook so people could fork out and tinker with (and also making PR). I recall Kevin's suggestion for math people was to start off by reading definitions and statements, not the proofs, of interesting theorems, to get familiar with the syntax. Fibonacci stuff is as good as any.</p>",
        "id": 171953699,
        "sender_full_name": "Yao Liu",
        "timestamp": 1564412785
    },
    {
        "content": "<p>Yeah, point taken about the long notebooks. In fact, Fibonacci parts 1 and 2 were actually originally one super-long notebook.</p>",
        "id": 171955577,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1564414086
    },
    {
        "content": "<p>It's now possible to use Lean running on your computer as a backend to the Lean editors on Observable!</p>\n<p><a href=\"https://observablehq.com/@bryangingechen/lean-websocketd\" target=\"_blank\" title=\"https://observablehq.com/@bryangingechen/lean-websocketd\">https://observablehq.com/@bryangingechen/lean-websocketd</a></p>\n<p>In short, <a href=\"http://websocketd.com/\" target=\"_blank\" title=\"http://websocketd.com/\">websocketd</a> makes it really convenient to turn any program that reads from stdin and writes to stdout to a local webserver, so I wrote a little bit of code to replace the connection to Emscripten Lean with a connection to that server.</p>\n<p>Using this, you can play around with Lean in notebooks without being constrained by the various shortcomings of Lean in the browser. For instance, you can import from Lean packages on your computer without having to create and upload some <code>library.zip</code> bundle.</p>",
        "id": 172151354,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1564596890
    },
    {
        "content": "<p>Whoah! That's really wicked! Well done.</p>",
        "id": 172151658,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1564597072
    },
    {
        "content": "<p>I guess it also gives some speed up. wasm can only do so much.</p>",
        "id": 172151727,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1564597093
    },
    {
        "content": "<p>Very true, particularly since it is single-threaded. However, Emscripten Lean does seem to be able to avoid some crashes. Something to do with the way it treats null pointer dereferences I guess.</p>",
        "id": 172152690,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1564597697
    },
    {
        "content": "<blockquote>\n<p>It's now possible to use Lean running on your computer as a backend to the Lean editors on Observable!</p>\n<p><a href=\"https://observablehq.com/@bryangingechen/lean-websocketd\" target=\"_blank\" title=\"https://observablehq.com/@bryangingechen/lean-websocketd\">https://observablehq.com/@bryangingechen/lean-websocketd</a></p>\n<p>In short, <a href=\"http://websocketd.com/\" target=\"_blank\" title=\"http://websocketd.com/\">websocketd</a> makes it really convenient to turn any program that reads from stdin and writes to stdout to a local webserver, so I wrote a little bit of code to replace the connection to Emscripten Lean with a connection to that server.</p>\n<p>Using this, you can play around with Lean in notebooks without being constrained by the various shortcomings of Lean in the browser. For instance, you can import from Lean packages on your computer without having to create and upload some <code>library.zip</code> bundle.</p>\n</blockquote>\n<p>what the... this is insane! <span aria-label=\"flushed\" class=\"emoji emoji-1f633\" role=\"img\" title=\"flushed\">:flushed:</span></p>",
        "id": 172156464,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564600269
    },
    {
        "content": "<p>why have I never heard of observablehq?! It's so slick!</p>",
        "id": 172157020,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564600718
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span>  On the website, it says <code>Unlimited free viewers</code> for the paid version. Does this mean your notebooks can only be viewed a certain number of times if you don't have a subscription?</p>",
        "id": 172157355,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564600964
    },
    {
        "content": "<p>I think that's referring to private team notebooks where you can give out some login keys for other people to view (but not edit). I haven't noticed any restrictions with my free account yet.</p>",
        "id": 172157741,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1564601316
    },
    {
        "content": "<p>Maybe <a href=\"https://talk.observablehq.com/t/teams-features/1937/2\" target=\"_blank\" title=\"https://talk.observablehq.com/t/teams-features/1937/2\">this post</a> will clarify things.</p>",
        "id": 172157804,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1564601377
    },
    {
        "content": "<p>Nice! I'll start reading observablehq tutorials then! :)</p>",
        "id": 172157986,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564601522
    },
    {
        "content": "<p>Great, feel free to reach out if you have any questions!</p>",
        "id": 172158086,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1564601610
    },
    {
        "content": "<p>I most certainly will - thanks! :)</p>",
        "id": 172167088,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564608082
    },
    {
        "content": "<p>I built an interactive <a href=\"https://observablehq.com/@kappelmann/lean-proof-view\" target=\"_blank\" title=\"https://observablehq.com/@kappelmann/lean-proof-view\">Lean proof view</a> on top of <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span>'s neat work - feel free to check it out and tell me what you like and what you miss :) Its purpose is to interactively compare a standard maths proof and Lean proof, side by side. <a href=\"/user_uploads/3121/BCMJzTQuKsSjtjHWJce7sQ4R/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">image</a> (note: first page visit downloads ~20MB of Lean files, so it might take a bit).</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/BCMJzTQuKsSjtjHWJce7sQ4R/pasted_image.png\" target=\"_blank\" title=\"image\"><img src=\"/user_uploads/3121/BCMJzTQuKsSjtjHWJce7sQ4R/pasted_image.png\"></a></div>",
        "id": 173975032,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1566572122
    },
    {
        "content": "<p>Nice!</p>",
        "id": 173975321,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1566572326
    },
    {
        "content": "<p>This is read-only Lean, right? So what is the difference with <code>format_lean</code> (apart from slow loading time and dependence on observablehq)?</p>",
        "id": 173975402,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1566572389
    },
    {
        "content": "<p>It is fully interactive</p>",
        "id": 173975508,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1566572436
    },
    {
        "content": "<p>How do you interact?</p>",
        "id": 173975529,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1566572458
    },
    {
        "content": "<p>You can use the Lean editor below the proof view</p>",
        "id": 173975550,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1566572478
    },
    {
        "content": "<p>or you can change the proof view command to </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nx\">proofView</span><span class=\"p\">({</span><span class=\"nx\">proof</span><span class=\"o\">:</span> <span class=\"nx\">sqrtTwoIrrat</span><span class=\"p\">,</span> <span class=\"nx\">invalidation</span><span class=\"p\">,</span> <span class=\"nx\">indexOffset</span><span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"nx\">editorOpts</span><span class=\"o\">:</span> <span class=\"p\">{</span><span class=\"nx\">readOnly</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">}})</span>\n</pre></div>",
        "id": 173975562,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1566572489
    },
    {
        "content": "<p>Is it meant to update the top of the page (with step by step proof)?</p>",
        "id": 173975718,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1566572626
    },
    {
        "content": "<p>It looks very promising anyway.</p>",
        "id": 173975806,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1566572664
    },
    {
        "content": "<p>Changing the proof in the editor below does not automatically update the step by step proof at the top (there was an attempt to do so, but it's not straightforward). If you want to update the proof at the top, you need to replace the value of <code>sqrtTwoIrrat</code>(just below the step by step proof view) with the new content</p>",
        "id": 173975901,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1566572756
    },
    {
        "content": "<p>Could you get rid of that awful green, it looks a lot like <a href=\"https://upload.wikimedia.org/wikipedia/commons/7/74/Coq_8.5_stdlib_proof.png\" target=\"_blank\" title=\"https://upload.wikimedia.org/wikipedia/commons/7/74/Coq_8.5_stdlib_proof.png\">https://upload.wikimedia.org/wikipedia/commons/7/74/Coq_8.5_stdlib_proof.png</a> which is one of those things from the past that make people not even try Coq and come here instead</p>\n<div class=\"message_inline_image\"><a href=\"https://upload.wikimedia.org/wikipedia/commons/7/74/Coq_8.5_stdlib_proof.png\" target=\"_blank\" title=\"https://upload.wikimedia.org/wikipedia/commons/7/74/Coq_8.5_stdlib_proof.png\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/7/74/Coq_8.5_stdlib_proof.png\"></a></div>",
        "id": 173975904,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1566572757
    },
    {
        "content": "<p>It says \"You have 1 unsaved change. Fork this notebook to save.\" when I try to edit that</p>",
        "id": 173976027,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1566572845
    },
    {
        "content": "<p>Yep, that means you can now create a fork of my notebook if you want to - just like in git.</p>",
        "id": 173976110,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1566572901
    },
    {
        "content": "<p>Anyway, I think we need a lighter variation on this in order to display read-only Lean files (something we could host on <a href=\"http://github.io\" target=\"_blank\" title=\"http://github.io\">github.io</a> pages for instances).</p>",
        "id": 173976136,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1566572926
    },
    {
        "content": "<p>Today I wanted to try to get into this more but found out that all notebooks stopped working on my Firefox. What happened?</p>",
        "id": 176951617,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1569863016
    },
    {
        "content": "<p>Interesting, they are working for me. Do you mean that every Observable notebook is failing, or just the ones with Lean editors?</p>",
        "id": 176951701,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1569863071
    },
    {
        "content": "<p>More precisely the notebooks are working, but none of the Lean editors are working.</p>",
        "id": 176951867,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1569863191
    },
    {
        "content": "<p>In what way precisely do they fail to work? Can you share a screenshot? Do you see any errors in your browser's dev console?</p>",
        "id": 176951951,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1569863240
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/_0L3-7qmzc_2J7_ebXVE_zM9/Screen-Shot-2019-09-30-at-13.07.13.png\" target=\"_blank\" title=\"Screen-Shot-2019-09-30-at-13.07.13.png\">Screen-Shot-2019-09-30-at-13.07.13.png</a> <br>\nlog:</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/_0L3-7qmzc_2J7_ebXVE_zM9/Screen-Shot-2019-09-30-at-13.07.13.png\" target=\"_blank\" title=\"Screen-Shot-2019-09-30-at-13.07.13.png\"><img src=\"/user_uploads/3121/_0L3-7qmzc_2J7_ebXVE_zM9/Screen-Shot-2019-09-30-at-13.07.13.png\"></a></div><div class=\"codehilite\"><pre><span></span>Content Security Policy: Couldn’t process unknown directive ‘prefetch-src’\nContent Security Policy: The page’s settings blocked the loading of a resource at eval (“script-src”).\nContent Security Policy: The page’s settings blocked the loading of a resource at inline (“script-src”). 3 proof-view-designer-template:1:1\nresetting open lean files... hello-lean-prover.js:483:11\ndownloading lean... 9aa8d4b2-493f-404a-802d-bd2bf573409f:8:49093\nstarting lean... 9aa8d4b2-493f-404a-802d-bd2bf573409f:8:48228\n</pre></div>",
        "id": 176952090,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1569863323
    },
    {
        "content": "<p>Ah, OK, the cells aren't loading for me either. <span class=\"user-mention\" data-user-id=\"198376\">@Kevin Kappelmann</span> </p>\n<p>Does the editor for this notebook load for you? <a href=\"https://observablehq.com/@kappelmann/lean-proof-view\" target=\"_blank\" title=\"https://observablehq.com/@kappelmann/lean-proof-view\">https://observablehq.com/@kappelmann/lean-proof-view</a></p>",
        "id": 176952263,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1569863424
    },
    {
        "content": "<p>Because that one and the <a href=\"https://observablehq.com/@bryangingechen/hello-lean-prover\" target=\"_blank\" title=\"https://observablehq.com/@bryangingechen/hello-lean-prover\">notebook that implements the editor</a> both work for me.</p>",
        "id": 176952312,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1569863463
    },
    {
        "content": "<p>lol it took a looooong time</p>",
        "id": 176952327,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1569863473
    },
    {
        "content": "<p>but i loaded it</p>",
        "id": 176952374,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1569863509
    },
    {
        "content": "<p>I guess it was just slow on cold boot</p>",
        "id": 176952443,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1569863529
    },
    {
        "content": "<p>Hmm. When I refreshed <a href=\"https://observablehq.com/@kappelmann/proof-view-designer-template\" target=\"_blank\" title=\"https://observablehq.com/@kappelmann/proof-view-designer-template\">the Proof View Designer Template notebook</a> it loaded quickly, but then I get the message: <code>file '/library/init/default.lean' not found</code> which means that something screwed up the notebook's IndexedDB cache on my end. I'll have to investigate this further.</p>\n<p>Glad you got things working though! Feel free to ask here if you run into more trouble!</p>",
        "id": 176952808,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1569863816
    },
    {
        "content": "<p><a href=\"https://observablehq.com/@kappelmann/lean-proof-view\" target=\"_blank\" title=\"https://observablehq.com/@kappelmann/lean-proof-view\">https://observablehq.com/@kappelmann/lean-proof-view</a> still doesn't display any of the lean cells.</p>\n<p>log:</p>\n<div class=\"codehilite\"><pre><span></span>Content Security Policy: Couldn’t process unknown directive ‘prefetch-src’\nContent Security Policy: The page’s settings blocked the loading of a resource at eval (“script-src”).\nContent Security Policy: The page’s settings blocked the loading of a resource at inline (“script-src”). 3 lean-proof-view:1:1\nresetting open lean files... hello-lean-prover.js:483:11\ndownloading lean... 2a56e349-1112-a845-b6e5-28d9d8a66f8c:8:49093\nTypeError: First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object. 2a56e349-1112-a845-b6e5-28d9d8a66f8c:8:1610\n    u blob:https://kappelmann.static.observableusercontent.com/2a56e349-1112-a845-b6e5-28d9d8a66f8c:8\n    u blob:https://kappelmann.static.observableusercontent.com/2a56e349-1112-a845-b6e5-28d9d8a66f8c:8\n    c blob:https://kappelmann.static.observableusercontent.com/2a56e349-1112-a845-b6e5-28d9d8a66f8c:8\n    onsuccess blob:https://kappelmann.static.observableusercontent.com/2a56e349-1112-a845-b6e5-28d9d8a66f8c:8\nstarting lean... 2a56e349-1112-a845-b6e5-28d9d8a66f8c:8:48228\n</pre></div>",
        "id": 176953205,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1569864124
    },
    {
        "content": "<p><a href=\"https://observablehq.com/@bryangingechen/hello-lean-prover\" target=\"_blank\" title=\"https://observablehq.com/@bryangingechen/hello-lean-prover\">https://observablehq.com/@bryangingechen/hello-lean-prover</a> displays everything normally</p>",
        "id": 176953464,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1569864355
    },
    {
        "content": "<p>Could you try the following:<br>\n- navigate to the \"Storage\" tab in the Firefox dev tools from the lean-proof-view notebook<br>\n- click on Indexed DB in the list on the left<br>\n- open the <a href=\"https://kappelmann.static.observableusercontent.com\" target=\"_blank\" title=\"https://kappelmann.static.observableusercontent.com\">https://kappelmann.static.observableusercontent.com</a> entry<br>\n- right click and delete the \"leanlibrary (default)\" entry<br>\n- refresh</p>",
        "id": 176953772,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1569864536
    },
    {
        "content": "<p>Ah, the TypeError disappeared.</p>",
        "id": 177090577,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1569959043
    },
    {
        "content": "<p>OK, great. I made a small change so that the libraries get loaded more robustly going forward. Do share in this thread if you end up making anything with Observable+Lean!</p>",
        "id": 177090871,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1569959268
    },
    {
        "content": "<p>I did not have time and I confirmed it loads well now. Thank you! I will!</p>",
        "id": 177110244,
        "sender_full_name": "Yufan Lou",
        "timestamp": 1569974834
    }
]