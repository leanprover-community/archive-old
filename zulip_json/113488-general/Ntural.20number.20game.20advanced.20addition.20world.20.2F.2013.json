[
    {
        "content": "<p>So the problem is the following:  <a href=\"https://wwwf.imperial.ac.uk/~buzzard/xena/natural_number_game/?world=8&amp;level=13\">https://wwwf.imperial.ac.uk/~buzzard/xena/natural_number_game/?world=8&amp;level=13</a> And this proof works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">symmetry</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n<span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">d</span> <span class=\"n\">hd</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"n\">succ_ne_zero</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)(</span><span class=\"n\">p</span><span class=\"o\">),</span>\n<span class=\"n\">exact</span> <span class=\"n\">hd</span><span class=\"o\">(</span><span class=\"n\">succ_inj</span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">)),</span>\n</code></pre></div>\n<p>My question is if I want to introduce a new variable for <code>succ_inj(p)</code> before the last line how should I parametrize the <code>succ_inj</code> function/theorem to make this work. I tried something like <code>have tmp := (succ_inj (succ d) d)(p)</code> but that didn't seem to work. Not sure if such lisp-like syntax is allowed here or not.</p>",
        "id": 222231505,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1610299160
    },
    {
        "content": "<p>Note that I would like to be explicit about the parameters for the theorem I know <code>have tmp := succ_inj(p)</code> would work just fine.</p>",
        "id": 222231571,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1610299241
    },
    {
        "content": "<p>Because the definition of <code>succ_inj</code> is:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">succ_inj</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">succ</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span>\n</code></pre></div>\n<p>those curly braces mean that the arguments are implicit. To prove arguments explicitly to <code>succ_inj</code> for the <code>a b</code>, you can use <code>@</code> like so:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">succ_inj</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">d</span><span class=\"o\">)</span> <span class=\"n\">d</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n</code></pre></div>\n<p>But in any case, a proper <code>p</code> hypothesis will always allow both <code>a b</code> to be inferred.</p>",
        "id": 222232229,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1610300338
    },
    {
        "content": "<p>I see. so does this also mean that the above case I can use <code>hd(succ_inj (succ d) d p)</code> as well?</p>\n<p>What do you mean by proper hypothesis? Also could you give me some link on how lean infers this?</p>\n<p>Thanks for your help btw!</p>",
        "id": 222233058,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1610301610
    },
    {
        "content": "<p>You can read this section of TPIL: <a href=\"https://leanprover.github.io/theorem_proving_in_lean/quantifiers_and_equality.html\">https://leanprover.github.io/theorem_proving_in_lean/quantifiers_and_equality.html</a> and TPIL in general is a good resource.</p>",
        "id": 222234911,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1610304309
    },
    {
        "content": "<p>You would have to say <code>hd (@succ_inj (succ d) d p)</code> if you really wanted to be explicit</p>",
        "id": 222234924,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1610304336
    },
    {
        "content": "<p>Your <code>p</code> is a hypothesis that says <code>p : succ (succ d) = succ d</code>. And you have a theorem that says that for any <code>a b</code> such that <code>succ a = succ b</code> then <code>a = b</code>. <br>\nWhat does that look like?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">succ_inj</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n    <span class=\"n\">succ</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span><span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span>\n</code></pre></div>\n<p>The implicit arguments mean -- infer which <code>a</code> and <code>b</code> I'm talking about from the hypothesis given. So, when you say <code>succ_inj p</code>, that is <code>succ_inj</code> over a hypothesis that <code>succ (succ d) = succ d</code>, then of course it is obvious that the only <code>a</code> and <code>b</code> being discussed here are <code>succ d</code> and <code>d</code>, respectively.</p>",
        "id": 222235061,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1610304531
    },
    {
        "content": "<p>Thanks Yakov! </p>\n<p>I think I more or less understand it. I mean I was going through the exercises in the natural number game. Sometimes it feels a bit like magic. I have to get used to this language I guess.</p>\n<p>Thanks for the link too!</p>",
        "id": 222235827,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1610305625
    },
    {
        "content": "<p>Lean does not do magic. After a while you can start asking yourself how it just did what it did, and finding the logical explanation.</p>",
        "id": 222237202,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1610306517
    },
    {
        "content": "<p>Yes, I get that. I really like this tool. I hope it will be more widespread in the future. It would be interesting to see sites similar to <a href=\"http://math.stackexchange.com\">math.stackexchange.com</a> to use lean or having competition sites like codeforces but for math.</p>",
        "id": 222282674,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1610362518
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"373947\">Daniel Papp</span> <a href=\"#narrow/stream/113488-general/topic/Ntural.20number.20game.20advanced.20addition.20world.20.2F.2013/near/222282674\">said</a>:</p>\n<blockquote>\n<p>Yes, I get that. I really like this tool. I hope it will be more widespread in the future. It would be interesting to see sites similar to <a href=\"http://math.stackexchange.com\">math.stackexchange.com</a> to use lean or having competition sites like codeforces but for math.</p>\n</blockquote>\n<p>In case it's of interest there are some Lean challenges on Codewars <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> - <a href=\"https://www.codewars.com/kata?language=lean\">https://www.codewars.com/kata?language=lean</a></p>",
        "id": 222289058,
        "sender_full_name": "Alex Peattie",
        "timestamp": 1610367031
    },
    {
        "content": "<p>Thanks Alex! I check that out in the evening.</p>",
        "id": 222289915,
        "sender_full_name": "Daniel Papp",
        "timestamp": 1610367588
    }
]