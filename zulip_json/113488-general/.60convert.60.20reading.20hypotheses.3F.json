[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">convert</span> <span class=\"n\">h2</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>This closes the goal. Did it always used to be like that? <code>convert</code> closes goals which it would otherwise return, if they're hypotheses?</p>",
        "id": 232100506,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1616861788
    },
    {
        "content": "<p>I think it happens because it calls <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#congr'\">tactic#congr'</a> which calls <code>assumption</code>. I don't think this behavior has been changed recently unless <a href=\"https://github.com/leanprover-community/mathlib/issues/6011\">#6011</a> fixed some cases where this was broken.</p>",
        "id": 232101397,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1616862734
    }
]