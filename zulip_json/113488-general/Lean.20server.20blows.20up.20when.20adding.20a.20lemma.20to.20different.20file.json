[
    {
        "content": "<p>So, I'm working on a copy of mathlib, on a branch that corresponds to a PR, so I can run <code>leanproject get-mathlib-cache</code> to get updated oleans for the tip of that branch. <br>\nI'm working in file 1, writing a theorem. Everything works great. Then, I go to file 2 to write a lemma I plan on using. After adding the lemma to file 2 and saving, upon returning to file 1, the lean infoview gets stuck on \"Loading...\" forever until it runs out of memory. It seems the trigger for this is simply trying to work in file 1 after changing/adding contents to file 2 (I haven't even referenced the new lemma in file 1 or anything yet).</p>\n<p>I suspect maybe I need to rebuild/recompile file 2, but when I run \"leanproject build\" I think it tries to build everything, which happens to slam my CPU and slowly consume all of the memory on my machine, so I think maybe I'm doing something wrong <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n<p>Can anyone help me out?</p>",
        "id": 223767936,
        "sender_full_name": "Chase Meadors",
        "timestamp": 1611429572
    },
    {
        "content": "<p>which file is <code>file 2</code>?</p>",
        "id": 223768866,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611430089
    },
    {
        "content": "<p>We can't help you without any information about the import structure here.</p>",
        "id": 223768886,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611430103
    },
    {
        "content": "<p><code>logic/basic.lean</code> by chance?</p>",
        "id": 223768899,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611430114
    },
    {
        "content": "<p>In this case file one is <code>ring_theory/noetherian.lean</code> and file 2 is <code>data/finset/lattice.lean</code></p>",
        "id": 223768913,
        "sender_full_name": "Chase Meadors",
        "timestamp": 1611430123
    },
    {
        "content": "<p>That's almost as good as logic/basic <span aria-label=\"lol\" class=\"emoji emoji-1f606\" role=\"img\" title=\"lol\">:lol:</span></p>",
        "id": 223768940,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611430143
    },
    {
        "content": "<p>that will cause lots of rebuilding</p>",
        "id": 223768958,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611430153
    },
    {
        "content": "<p>Yeah, ok, that's what I suspected.</p>",
        "id": 223768970,
        "sender_full_name": "Chase Meadors",
        "timestamp": 1611430161
    },
    {
        "content": "<p>if you want to save time, and not rebuild everything, but only the critical path to <code>noetherian.lean</code>, you can run</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>lean --make src/ring_theory/noetherian.lean\n</code></pre></div>",
        "id": 223769010,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611430188
    },
    {
        "content": "<p>and get yourself a nice cup of tea (-;</p>",
        "id": 223769025,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611430200
    },
    {
        "content": "<p>The actual answer is you shouldn't edit such a low-level file until you are ready to either rebuild all of mathlib or push to GitHub to let GitHub do it for you.</p>",
        "id": 223769157,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611430259
    },
    {
        "content": "<p>I see. I believe the last time (before I knew about <code>get-mathlib-cache</code>) I tried to do <code>leanproject build</code> in mathlib, it consumed all 16 GB of RAM on my machine and slammed the CPU until the whole OS was locked up.</p>",
        "id": 223769243,
        "sender_full_name": "Chase Meadors",
        "timestamp": 1611430312
    },
    {
        "content": "<p>So, perhaps I'll just keep the lemma in file 1 for now until I would be ready to push to Github.</p>",
        "id": 223769328,
        "sender_full_name": "Chase Meadors",
        "timestamp": 1611430342
    },
    {
        "content": "<p>Note that it's totally fine to push commits to GitHub just to have their servers build mathlib instead of your own PC (and a lot of us do so). All PRs are squashed before merging into master so you don't have to worry about screwing up the commit history. Just keep in mind that GitHub Actions imposes some limits on the number of concurrent jobs, so try not to trigger more than say 10 jobs within 1-2 hours.</p>",
        "id": 223770490,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611430978
    }
]