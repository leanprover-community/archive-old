[
    {
        "content": "<p>Please minimize tactic changes as it requires the recompiling of essentially the whole mathlib, so the cache is essentially useless, which would cause quite some inconvenience...</p>",
        "id": 157346599,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549020710
    },
    {
        "content": "<p>particularly the file <code>tactic.interactive</code></p>",
        "id": 157346602,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549020722
    },
    {
        "content": "<p>AFAICT it takes travis ~ 1 hour to compile the whole mathlib</p>",
        "id": 157346652,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549020764
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> What are L349 and L480 doing here? <a href=\"https://github.com/leanprover-community/mathlib/commit/c9e4f8edc30da76ffa740000957e26aaf79cc31e\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/commit/c9e4f8edc30da76ffa740000957e26aaf79cc31e\">https://github.com/leanprover-community/mathlib/commit/c9e4f8edc30da76ffa740000957e26aaf79cc31e</a></p>",
        "id": 157346922,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549021095
    },
    {
        "content": "<p>(no, don't add another commit to delete those lines, just keep them there)</p>",
        "id": 157346935,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549021133
    },
    {
        "content": "<p>Kenny, I'm not sure what your goal is here. Some things invalidate the cache, it's a fact of life. The solution is to make caching better or more precise, not to avoid improvements</p>",
        "id": 157347046,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549021304
    },
    {
        "content": "<p>I said minimize, not avoid.</p>",
        "id": 157347095,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549021336
    },
    {
        "content": "<p>So for example we can discuss the details before making changes in order to not generate a situation where A made changes and B is unhappy and then make more changes and then C comes along and make 10 more changes</p>",
        "id": 157347122,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549021388
    },
    {
        "content": "<p>sure, but tactic changes require some iteration to get right anyway. I assume it's in a branch, so that's the right place for it</p>",
        "id": 157347143,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549021425
    },
    {
        "content": "<p>And also we can double check the changes before pushing it to mathlib to make sure that it doesn't contain extra lines.</p>",
        "id": 157347151,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549021442
    },
    {
        "content": "<blockquote>\n<p>sure, but tactic changes require some iteration to get right anyway. I assume it's in a branch, so that's the right place for it</p>\n</blockquote>\n<p>it's in the master branch...</p>",
        "id": 157347200,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549021455
    },
    {
        "content": "<p>Have you clicked on the link above?</p>",
        "id": 157347213,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549021471
    },
    {
        "content": "<p>there are obviously some commented trace lines that were added. They can be removed</p>",
        "id": 157347327,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549021617
    },
    {
        "content": "<p>but it's absolutely the wrong idea to change commit or PR habits for worry of recompilation. Problems that need fixing should be fixed</p>",
        "id": 157347430,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549021760
    },
    {
        "content": "<p>I am the anti-Kenny on this one. What is the hurry? Who cares if something takes an hour to compile? It will take less than an hour next year. Kenny just needs a better computer, that's the real problem. We can't change our behaviour to work around the fact that Kenny needs a better computer.</p>",
        "id": 157348123,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549022643
    },
    {
        "content": "<p>also it's an hour of Travis's time, not mine</p>",
        "id": 157348249,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549022766
    },
    {
        "content": "<p>(thanks travis for your donation of significant computing time to FOSS projects)</p>",
        "id": 157348278,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549022825
    },
    {
        "content": "<p>I definitely consider imports and impact of frequent changes on compilation in developing Haskell.  Like I'll think about partitioning a module if part of it changes frequently, but modules that import it tend to only need the stable parts.<br>\nThat said, you shouldn't hold off deleting dead code just to avoid recompiling a module.</p>",
        "id": 157405161,
        "sender_full_name": "Joe Hendrix",
        "timestamp": 1549078396
    },
    {
        "content": "<p>mathlib could definitely stand to be divided more finely and its dependencies need to be disentangled. But we don't have a warning on spurious imports. We need to build a tool for that</p>",
        "id": 157405636,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1549079390
    },
    {
        "content": "<p>I think someone can produce an import graph... I don't know enough programming to do that</p>",
        "id": 157405698,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549079510
    },
    {
        "content": "<p>Mario wrote a parser for olean files. I think that will be a good starting point. It's on my todo list</p>",
        "id": 157405749,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1549079592
    }
]