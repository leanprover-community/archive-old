[
    {
        "content": "<p>If you have a look at <a href=\"https://tqft.net/mathlib/algebra/order/group\">file#algebra/order/group</a> around line 500, you'll see that the <code>to_additive</code> attribute is not automatically bestowed onto aliases created using <code>alias</code>. Could we make it so that an alias of a declaration marked <code>to_additive</code> is automatically additivized?</p>",
        "id": 274892512,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1646945110
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"470149\">@Joachim Breitner</span> you might be interested in doing this.</p>",
        "id": 274892546,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1646945135
    },
    {
        "content": "<p>Whoever does this should be aware that the relevant existing uses of <code>to_additive</code> <strong>won't</strong> break because <code>to_additive</code> silently fails when a lemma name is already taken: <a href=\"#narrow/stream/113488-general/topic/alias.20silently.20succeeds.20when.20name.20already.20exists\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/alias.20silently.20succeeds.20when.20name.20already.20exists</a></p>",
        "id": 274892774,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1646945272
    },
    {
        "content": "<p>Joachim, this will also fix a bunch of the current <code>to_additive_doc</code> nolints: When  <code>bar</code> is declared an alias of <code>foo</code>, it gets a docstring <code>**Alias** of `foo`.</code>, but additivizing them both does not make <code>add_bar</code> have docstring <code>**Alias** of `add_foo`.</code>.<br>\nExample: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/inv_le_of_inv_le'\">docs#inv_le_of_inv_le'</a> vs <a href=\"https://leanprover-community.github.io/mathlib_docs/find/neg_le_of_neg_le\">docs#neg_le_of_neg_le</a></p>",
        "id": 274893502,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1646945674
    },
    {
        "content": "<p>I think at one point I made it so that to_additive would copy the alias attribute, with the intention that if someone to_additived an alias probably the original name was to_additived too</p>",
        "id": 274895707,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1646946851
    },
    {
        "content": "<p>What you suggest also makes sense, but thats something to keep in mind if someone ends up adding this</p>",
        "id": 274895884,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1646946946
    },
    {
        "content": "<p>Given that <code>alias</code> is something you do post declaration (although I guess that could change) while <code>to_additive</code> is used on the spot, it makes more sense to me that the default behavior is <code>to_additive</code> first, then <code>alias</code>.</p>",
        "id": 274896048,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1646947049
    }
]