[
    {
        "content": "<p>Hello, </p>\n<p>I have a little problem, it's just computation but i can't do !!! Is there a tatict how deal with ring morphism ? At the end of the code ' hom_map_group_comp' ! </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"c\">/-</span><span class=\"cm\">-</span>\n<span class=\"cm\">##  It&#39;s the group functor  Idem,</span>\n<span class=\"cm\">##  e1 × e2 = e1 e2 + (1-e1)(1-e2)</span>\n<span class=\"cm\">-/</span>\n<span class=\"kn\">structure</span> <span class=\"n\">Idem</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">e</span>  <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">certif</span> <span class=\"o\">:</span>  <span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"n\">e</span><span class=\"o\">)</span>\n<span class=\"kn\">namespace</span>  <span class=\"n\">Idem</span>\n <span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">}[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>                              <span class=\"c1\">--   &quot;&quot;</span>\n    <span class=\"c\">/-</span><span class=\"cm\"> extention lemma : E = E&#39; ↔  E.e = E&#39;.e</span>\n<span class=\"cm\">    -/</span>\n    <span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">ext</span><span class=\"o\">]</span><span class=\"kn\">lemma</span> <span class=\"n\">ext</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">g1</span> <span class=\"n\">g2</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">},</span> <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">→</span> <span class=\"n\">g1</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">g1</span> <span class=\"n\">g2</span><span class=\"o\">,</span>\n        <span class=\"k\">begin</span>\n            <span class=\"n\">intros</span> <span class=\"n\">h1</span> <span class=\"o\">,</span>\n            <span class=\"n\">cases</span> <span class=\"n\">g1</span><span class=\"o\">,</span>\n            <span class=\"n\">cases</span> <span class=\"n\">g2</span><span class=\"o\">,</span>\n            <span class=\"n\">congr</span> <span class=\"bp\">;</span> <span class=\"n\">try</span> <span class=\"o\">{</span> <span class=\"n\">assumption</span> <span class=\"o\">},</span>   <span class=\"c1\">---</span>\n        <span class=\"kn\">end</span>\n    <span class=\"c1\">-- We start to define one element : neutral element</span>\n    <span class=\"n\">def</span> <span class=\"n\">one</span>  <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">,</span>  <span class=\"n\">certif</span> <span class=\"o\">:=</span> <span class=\"n\">mul_one</span> <span class=\"mi\">1</span><span class=\"o\">}</span>\n    <span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_one</span> <span class=\"o\">(</span><span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">one</span><span class=\"bp\">⟩</span>\n    <span class=\"c1\">-- lemma !</span>\n    <span class=\"kn\">lemma</span> <span class=\"n\">one_e</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n    <span class=\"c1\">-- comm ring calculation !</span>\n    <span class=\"kn\">lemma</span> <span class=\"n\">alg_calc</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"bp\">=</span><span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">+</span>\n                         <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">ring</span>\n\n    <span class=\"kn\">lemma</span> <span class=\"n\">compl_e</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">)</span>  <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">)</span>  <span class=\"o\">:=</span>\n        <span class=\"k\">begin</span>\n            <span class=\"k\">have</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"bp\">-</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">+</span> <span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">*</span><span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">,</span>\n                <span class=\"n\">ring</span><span class=\"o\">,</span>\n            <span class=\"n\">rw</span> <span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">certif</span> <span class=\"n\">at</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n            <span class=\"n\">rw</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n            <span class=\"n\">ring</span><span class=\"o\">,</span>\n        <span class=\"kn\">end</span>\n    <span class=\"c\">/-</span><span class=\"cm\">   e → 1-e</span>\n<span class=\"cm\">    -/</span>\n    <span class=\"n\">def</span> <span class=\"n\">ortho</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span> <span class=\"bp\">→</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">E</span><span class=\"o\">,</span>\n        <span class=\"k\">begin</span>\n            <span class=\"n\">exact</span> <span class=\"o\">{</span><span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"n\">certif</span> <span class=\"o\">:=</span> <span class=\"n\">compl_e</span> <span class=\"n\">E</span><span class=\"o\">}</span>\n        <span class=\"kn\">end</span>\n    <span class=\"kn\">lemma</span> <span class=\"n\">ortho_comp</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ortho</span> <span class=\"n\">E</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n    <span class=\"kn\">lemma</span> <span class=\"n\">ortho_is_involution</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ortho</span> <span class=\"o\">(</span><span class=\"n\">ortho</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n    <span class=\"k\">begin</span>\n        <span class=\"n\">ext</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"n\">ortho_comp</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"n\">ortho_comp</span><span class=\"o\">,</span>\n        <span class=\"n\">ring</span><span class=\"o\">,</span>\n    <span class=\"kn\">end</span>\n\n    <span class=\"kn\">lemma</span> <span class=\"n\">ortho_e</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">-</span><span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n        <span class=\"k\">begin</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_sub_left_distrib</span><span class=\"o\">,</span><span class=\"n\">mul_one</span><span class=\"o\">,</span><span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">certif</span><span class=\"o\">],</span>\n            <span class=\"n\">exact</span> <span class=\"n\">sub_self</span> <span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">,</span>\n        <span class=\"kn\">end</span>\n    <span class=\"n\">def</span> <span class=\"n\">mul_map&#39;</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">→</span>  <span class=\"n\">Idem</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Idem</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">g1</span> <span class=\"n\">g2</span><span class=\"o\">,</span> <span class=\"k\">begin</span>\n        <span class=\"n\">exact</span> <span class=\"o\">{</span> <span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">-</span><span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">-</span><span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">),</span><span class=\"n\">certif</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n            <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">alg_calc</span> <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">,</span><span class=\"n\">ortho_e</span> <span class=\"n\">g1</span><span class=\"o\">,</span><span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">certif</span><span class=\"o\">,</span><span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">certif</span><span class=\"o\">,</span><span class=\"n\">mul_zero</span><span class=\"o\">,</span><span class=\"n\">zero_mul</span><span class=\"o\">,</span><span class=\"n\">add_zero</span><span class=\"o\">,</span><span class=\"n\">compl_e</span> <span class=\"n\">g1</span><span class=\"o\">,</span><span class=\"n\">compl_e</span> <span class=\"n\">g2</span><span class=\"o\">],</span> <span class=\"kn\">end</span> <span class=\"o\">}</span>\n    <span class=\"kn\">end</span>\n    <span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">inhabited</span> <span class=\"o\">(</span><span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"mi\">1</span><span class=\"bp\">⟩</span>\n\n    <span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_mul</span> <span class=\"o\">(</span><span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">Idem</span><span class=\"bp\">.</span><span class=\"n\">mul_map&#39;</span><span class=\"bp\">⟩</span>\n\n    <span class=\"kn\">lemma</span> <span class=\"n\">e_comp</span> <span class=\"o\">(</span><span class=\"n\">g1</span> <span class=\"n\">g2</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">g1</span> <span class=\"bp\">*</span> <span class=\"n\">g2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"bp\">+</span><span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"o\">:</span><span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">-</span><span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">-</span><span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">:=</span>  <span class=\"n\">rfl</span>\n\n    <span class=\"n\">def</span> <span class=\"n\">mul_inv</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span> <span class=\"bp\">→</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">g</span>\n\n    <span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_inv</span> <span class=\"o\">(</span><span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">Idem</span><span class=\"bp\">.</span><span class=\"n\">mul_inv</span><span class=\"bp\">⟩</span>\n\n    <span class=\"kn\">lemma</span> <span class=\"n\">e_comp_inv</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">g</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">=</span><span class=\"n\">g</span><span class=\"bp\">.</span><span class=\"n\">e</span>  <span class=\"o\">:=</span>  <span class=\"n\">rfl</span>\n    <span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">Idem_ring</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n            <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">one_e</span><span class=\"o\">,</span> <span class=\"n\">e_comp</span> <span class=\"o\">,</span><span class=\"n\">e_comp_inv</span><span class=\"o\">],</span> <span class=\"n\">ring</span><span class=\"o\">]</span>\n\n    <span class=\"n\">run_cmd</span> <span class=\"n\">add_interactive</span> <span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"n\">Idem_ring</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">mul_one&#39;</span>  <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>  <span class=\"n\">g</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"bp\">;</span> <span class=\"n\">Idem_ring</span><span class=\"o\">,</span> <span class=\"kn\">end</span>\n<span class=\"n\">def</span> <span class=\"n\">one_mul&#39;</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span>  <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span> <span class=\"bp\">;</span><span class=\"n\">Idem_ring</span><span class=\"o\">,</span> <span class=\"kn\">end</span>\n<span class=\"n\">def</span> <span class=\"n\">mul_assoc&#39;</span> <span class=\"o\">(</span><span class=\"n\">g1</span> <span class=\"n\">g2</span> <span class=\"n\">g3</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>  <span class=\"o\">(</span><span class=\"n\">g1</span> <span class=\"bp\">*</span> <span class=\"n\">g2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">g3</span> <span class=\"bp\">=</span> <span class=\"n\">g1</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">g2</span> <span class=\"bp\">*</span> <span class=\"n\">g3</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"bp\">;</span> <span class=\"n\">Idem_ring</span><span class=\"o\">,</span> <span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">mul_right_inv&#39;</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">g</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n   <span class=\"k\">begin</span>\n        <span class=\"n\">ext</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">e_comp</span><span class=\"o\">,</span><span class=\"n\">e_comp_inv</span><span class=\"o\">,</span><span class=\"n\">g</span><span class=\"bp\">.</span><span class=\"n\">certif</span><span class=\"o\">,</span><span class=\"n\">compl_e</span><span class=\"o\">,</span><span class=\"n\">one_e</span><span class=\"o\">],</span>\n        <span class=\"n\">simp</span><span class=\"o\">,</span>\n    <span class=\"kn\">end</span>\n\n <span class=\"kn\">lemma</span> <span class=\"n\">mul_left_inv&#39;</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>  <span class=\"n\">g</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n    <span class=\"k\">begin</span>\n        <span class=\"n\">ext</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">e_comp</span><span class=\"o\">,</span><span class=\"n\">e_comp_inv</span><span class=\"o\">,</span><span class=\"n\">g</span><span class=\"bp\">.</span><span class=\"n\">certif</span><span class=\"o\">,</span><span class=\"n\">compl_e</span><span class=\"o\">,</span><span class=\"n\">one_e</span><span class=\"o\">],</span>\n        <span class=\"n\">simp</span><span class=\"o\">,</span>\n    <span class=\"kn\">end</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">group</span> <span class=\"o\">(</span><span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"n\">mul</span>             <span class=\"o\">:=</span> <span class=\"n\">mul_map&#39;</span><span class=\"o\">,</span>\n    <span class=\"n\">one</span>             <span class=\"o\">:=</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"n\">one_mul</span>         <span class=\"o\">:=</span> <span class=\"n\">one_mul&#39;</span><span class=\"o\">,</span>\n    <span class=\"n\">mul_one</span>         <span class=\"o\">:=</span> <span class=\"n\">mul_one&#39;</span><span class=\"o\">,</span>\n    <span class=\"n\">inv</span>             <span class=\"o\">:=</span>  <span class=\"n\">mul_inv</span><span class=\"o\">,</span>\n    <span class=\"n\">mul_assoc</span>       <span class=\"o\">:=</span> <span class=\"n\">mul_assoc&#39;</span><span class=\"o\">,</span>\n    <span class=\"n\">mul_left_inv</span>    <span class=\"o\">:=</span> <span class=\"n\">mul_left_inv&#39;</span><span class=\"o\">,}</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">is_ring_hom</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">R&#39;</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">}[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R&#39;</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">→</span>  <span class=\"n\">R&#39;</span><span class=\"o\">)[</span><span class=\"n\">is_ring_hom</span> <span class=\"n\">f</span><span class=\"o\">]</span>\n<span class=\"n\">def</span> <span class=\"n\">hom_map</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">→</span>  <span class=\"n\">R&#39;</span><span class=\"o\">)[</span><span class=\"n\">is_ring_hom</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Idem</span> <span class=\"o\">(</span><span class=\"n\">R&#39;</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span>\n        <span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">,</span>\n        <span class=\"n\">certif</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">map_mul</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">),</span><span class=\"n\">g</span><span class=\"bp\">.</span><span class=\"n\">certif</span><span class=\"o\">],</span> <span class=\"kn\">end</span>\n    <span class=\"o\">}</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">e_comp_hom</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">hom_map</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">Idem_hom</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">one_e</span><span class=\"o\">,</span> <span class=\"n\">e_comp</span> <span class=\"o\">,</span><span class=\"n\">e_comp_inv</span><span class=\"o\">,</span><span class=\"n\">e_comp_hom</span><span class=\"o\">,</span><span class=\"n\">map_add</span><span class=\"o\">,</span><span class=\"n\">map_mul</span><span class=\"o\">],</span> <span class=\"n\">ring</span><span class=\"o\">]</span>\n\n<span class=\"n\">run_cmd</span> <span class=\"n\">add_interactive</span> <span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"n\">Idem_hom</span><span class=\"o\">]</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">hom_map_group_comp</span>  <span class=\"o\">(</span><span class=\"n\">g1</span> <span class=\"n\">g2</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n     <span class=\"n\">hom_map</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g1</span> <span class=\"bp\">*</span> <span class=\"n\">g2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">hom_map</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">g1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">hom_map</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">g2</span>  <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n        <span class=\"n\">ext</span><span class=\"o\">,</span>\n        <span class=\"n\">sorry</span><span class=\"o\">,</span>   <span class=\"c1\">---------- BRUTAL COMPUTATION ! But i can&#39;t !</span>\n     <span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">hom_map_one</span>  <span class=\"o\">(</span><span class=\"n\">g1</span> <span class=\"n\">g2</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">hom_map</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"n\">ext</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">map_one</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n<span class=\"kn\">end</span> <span class=\"n\">Idem</span>\n</pre></div>",
        "id": 191954059,
        "sender_full_name": "orlando",
        "timestamp": 1585259695
    },
    {
        "content": "<p>ouf ! it's ok ! I just change </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">idem_hom</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">map_add</span> <span class=\"n\">f</span><span class=\"o\">,</span><span class=\"n\">map_mul</span> <span class=\"n\">f</span><span class=\"o\">,</span><span class=\"n\">map_mul</span> <span class=\"n\">f</span><span class=\"o\">,</span><span class=\"n\">map_sub</span> <span class=\"n\">f</span><span class=\"o\">,</span><span class=\"n\">map_sub</span> <span class=\"n\">f</span><span class=\"o\">,</span><span class=\"n\">map_one</span> <span class=\"n\">f</span><span class=\"o\">,</span><span class=\"n\">e_comp_hom</span><span class=\"o\">,</span><span class=\"n\">e_comp</span><span class=\"o\">]]</span>\n\n<span class=\"n\">run_cmd</span> <span class=\"n\">add_interactive</span> <span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"n\">idem_hom</span><span class=\"o\">]</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">hom_map_group_comp</span>  <span class=\"o\">(</span><span class=\"n\">g1</span> <span class=\"n\">g2</span> <span class=\"o\">:</span> <span class=\"n\">Idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n     <span class=\"n\">hom_map</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g1</span> <span class=\"bp\">*</span> <span class=\"n\">g2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">hom_map</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">g1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">hom_map</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">g2</span>  <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n        <span class=\"n\">ext</span><span class=\"o\">,</span>\n        <span class=\"n\">idem_hom</span><span class=\"o\">,</span>\n        <span class=\"c1\">-- rw [e_comp_hom,e_comp,map_add f,map_mul f,map_mul f,map_sub f,map_sub f,map_one f],</span>\n     <span class=\"kn\">end</span>\n</pre></div>",
        "id": 191957869,
        "sender_full_name": "orlando",
        "timestamp": 1585262200
    },
    {
        "content": "<p>This would be better with <a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/ring.html#ring_hom\" title=\"https://leanprover-community.github.io/mathlib_docs/algebra/ring.html#ring_hom\">bundled ring homs</a>. Then you can just do stuff like <code>rw f.map_mul</code></p>",
        "id": 191958903,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585262997
    },
    {
        "content": "<p>Why <code>mul_one'</code> when it could just be <code>mul_one</code>?</p>",
        "id": 191959832,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585263662
    },
    {
        "content": "<p><code>mul_one</code> and <code>one_mul</code> and <code>mul_right_inv</code> and <code>mul_left_inv</code> could probably all be <code>simp</code> lemmas. In fact I think that you are making some kind of lattice structure, aren't you? Why don't you show that <code>Idem R</code> is a partial order with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>≤</mo><mi>b</mi><mtext>  </mtext><mo>⟺</mo><mtext>  </mtext><mi>a</mi><mi>b</mi><mo>=</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a\\leq b\\iff ab=a</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.71844em;vertical-align:-0.024em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟺</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span></span></span></span>? Is this how it works? Then I think multiplication is some kind of <code>inf</code> operator, and you have a <code>bot</code> and a <code>top</code>.</p>",
        "id": 191960018,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585263809
    },
    {
        "content": "<p>In fact I think that you define <code>has_mul</code> on <code>Idem R</code> but I think that this should be <code>has_inf</code>. The symbol for <code>inf</code> is <code>\\glb</code>.</p>",
        "id": 191960147,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585263879
    },
    {
        "content": "<p>I think you are basically rediscovering some standard lattice structure on the idempotents of a ring. My guess is that you would be better off making an instance of <code>lattice (Idem R)</code> or <code>semilattice_inf_top (Idem R)</code> or whatever it is.</p>",
        "id": 191960391,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585264098
    },
    {
        "content": "<p>Then hopefully several of the lemmas you want to prove will already be proved for you because they will be proved for all lattices.</p>",
        "id": 191960435,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585264149
    },
    {
        "content": "<p>But you have to use lattice notation <code>⊓</code> and not <code>*</code></p>",
        "id": 191960455,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585264172
    },
    {
        "content": "<p>hum interesting !</p>",
        "id": 191960469,
        "sender_full_name": "orlando",
        "timestamp": 1585264186
    },
    {
        "content": "<p>It was a big shock to me when Kenny defined a lattice structure on the bundled ideals of a ring and then told me I had to use <code>≤</code> when I meant <code>⊆</code>. But actually now I can see the benefits of using the \"correct\" lattice notation.</p>",
        "id": 191960557,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585264244
    },
    {
        "content": "<p>In fact Idem R, is isomorphic to connected composant of Spec (R), so perhaps, geometricaly, the order is inclusion of component ?</p>",
        "id": 191960726,
        "sender_full_name": "orlando",
        "timestamp": 1585264393
    },
    {
        "content": "<p>order i mean the lattice</p>",
        "id": 191960745,
        "sender_full_name": "orlando",
        "timestamp": 1585264430
    },
    {
        "content": "<p>Idem R is not just the connected components, it's all the clopen subspaces</p>",
        "id": 191960828,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585264481
    },
    {
        "content": "<p>Yes true !</p>",
        "id": 191960833,
        "sender_full_name": "orlando",
        "timestamp": 1585264490
    },
    {
        "content": "<p>And the order is inclusion yes</p>",
        "id": 191960841,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585264499
    },
    {
        "content": "<p>You have to decide whether <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mi>f</mi><mo>=</mo><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">ef=e</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">e</span></span></span></span> will be <code>e&lt;=f</code> or <code>f&lt;=e</code></p>",
        "id": 191960871,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585264551
    },
    {
        "content": "<p>Then one lattice law is just multiplication and the other is 1- then multiply then 1- again</p>",
        "id": 191960973,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585264619
    },
    {
        "content": "<p>It sounds like a lattice to me</p>",
        "id": 191961972,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585265411
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"270476\">@orlando</span> here is the lattice structure.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">order</span><span class=\"bp\">.</span><span class=\"n\">bounded_lattice</span>\n<span class=\"c\">/-</span><span class=\"cm\">-</span>\n<span class=\"cm\">##  It&#39;s the group functor  idem,</span>\n<span class=\"cm\">##  e1 × e2 = e1 e2 + (1-e1)(1-e2)</span>\n<span class=\"cm\">-/</span>\n<span class=\"kn\">structure</span> <span class=\"n\">idem</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">certif</span> <span class=\"o\">:</span> <span class=\"n\">e</span> <span class=\"bp\">*</span> <span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"n\">e</span><span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">idem</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">! extension lemma : E = E&#39; ↔  E.e = E&#39;.e -/</span>\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">ext</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">ext</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">g1</span> <span class=\"n\">g2</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">},</span> <span class=\"n\">g1</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">→</span> <span class=\"n\">g1</span> <span class=\"bp\">=</span> <span class=\"n\">g2</span>\n<span class=\"bp\">|</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"bp\">_⟩</span> <span class=\"bp\">⟨_</span><span class=\"o\">,</span> <span class=\"bp\">_⟩</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">congr</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">h</span>\n\n<span class=\"c1\">-- add a coercion from `idem R` to `R`</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_coe</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">e</span><span class=\"bp\">⟩</span>\n\n<span class=\"c1\">-- Now if `E : idem R` you can just talk about `E : R` and this is the same as `↑E : R`</span>\n<span class=\"c1\">-- You don&#39;t have to put `E.e` any more</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">certif_def</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">E</span> <span class=\"bp\">=</span> <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">certif</span>\n\n<span class=\"n\">def</span> <span class=\"n\">bot</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">certif</span> <span class=\"o\">:=</span> <span class=\"n\">mul_zero</span> <span class=\"mi\">0</span><span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_bot</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">bot</span><span class=\"bp\">⟩</span>\n\n<span class=\"n\">def</span> <span class=\"n\">inf</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"n\">E</span> <span class=\"bp\">*</span> <span class=\"n\">F</span><span class=\"o\">,</span>\n  <span class=\"n\">certif</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[(</span><span class=\"k\">show</span> <span class=\"o\">((</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"bp\">*</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">E</span> <span class=\"bp\">*</span> <span class=\"n\">E</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"bp\">*</span> <span class=\"n\">F</span><span class=\"o\">),</span> <span class=\"k\">by</span> <span class=\"n\">ring</span><span class=\"o\">),</span> <span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">certif_def</span><span class=\"o\">,</span> <span class=\"n\">F</span><span class=\"bp\">.</span><span class=\"n\">certif_def</span><span class=\"o\">]</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">-- `\\glb` notation ⊓</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_inf</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">inf</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">inf_comm</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"err\">⊓</span> <span class=\"n\">F</span> <span class=\"bp\">=</span> <span class=\"n\">F</span> <span class=\"err\">⊓</span> <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">ext</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">mul_comm</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">inf_def</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"err\">↑</span><span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"err\">⊓</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">E</span> <span class=\"bp\">*</span> <span class=\"n\">F</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"n\">def</span> <span class=\"n\">le</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">E</span> <span class=\"err\">⊓</span> <span class=\"n\">F</span> <span class=\"bp\">=</span> <span class=\"n\">E</span>\n\n<span class=\"c1\">-- ≤ notation</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_le</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">le</span><span class=\"bp\">⟩</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">le_def</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">≤</span> <span class=\"n\">F</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">F</span> <span class=\"bp\">=</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"k\">begin</span> <span class=\"n\">change</span> <span class=\"n\">E</span> <span class=\"err\">⊓</span> <span class=\"n\">F</span> <span class=\"bp\">=</span> <span class=\"n\">E</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"err\">⊓</span> <span class=\"n\">F</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">e</span> <span class=\"bp\">=</span> <span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">e</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">h</span> <span class=\"kn\">end</span><span class=\"o\">,</span> <span class=\"bp\">@</span><span class=\"n\">ext</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"err\">⊓</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"n\">E</span><span class=\"bp\">⟩</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">partial_order</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">le</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">),</span>\n  <span class=\"n\">le_refl</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"k\">begin</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">certif</span> <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">le_trans</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"n\">G</span> <span class=\"n\">hEF</span> <span class=\"n\">hFG</span><span class=\"o\">,</span> <span class=\"k\">begin</span>\n    <span class=\"n\">ext</span><span class=\"o\">,</span>\n    <span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">G</span> <span class=\"bp\">=</span> <span class=\"n\">E</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">le_def</span> <span class=\"n\">at</span> <span class=\"n\">hEF</span> <span class=\"n\">hFG</span><span class=\"o\">,</span>\n    <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">F</span> <span class=\"bp\">*</span> <span class=\"n\">G</span> <span class=\"bp\">=</span> <span class=\"n\">E</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">rwa</span> <span class=\"n\">hEF</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">hFG</span><span class=\"o\">,</span> <span class=\"n\">hEF</span><span class=\"o\">],</span>\n  <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">le_antisymm</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"n\">hEF</span> <span class=\"n\">hFE</span><span class=\"o\">,</span> <span class=\"k\">begin</span>\n    <span class=\"n\">change</span> <span class=\"n\">E</span> <span class=\"err\">⊓</span> <span class=\"n\">F</span> <span class=\"bp\">=</span> <span class=\"n\">E</span> <span class=\"n\">at</span> <span class=\"n\">hEF</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span><span class=\"n\">hEF</span><span class=\"o\">,</span> <span class=\"n\">inf_comm</span><span class=\"o\">],</span>\n    <span class=\"n\">exact</span> <span class=\"n\">hFE</span>\n  <span class=\"kn\">end</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">bot_le</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"err\">⊥</span> <span class=\"bp\">≤</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">ext</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">zero_mul</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">inf_le_left</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"err\">⊓</span> <span class=\"n\">F</span> <span class=\"bp\">≤</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">F</span> <span class=\"bp\">*</span> <span class=\"n\">E</span> <span class=\"bp\">=</span> <span class=\"n\">E</span> <span class=\"bp\">*</span> <span class=\"n\">F</span><span class=\"o\">,</span>\n    <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"err\">←</span><span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">E</span><span class=\"bp\">.</span><span class=\"n\">certif_def</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">inf_le_right</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"err\">⊓</span> <span class=\"n\">F</span> <span class=\"bp\">≤</span> <span class=\"n\">F</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">inf_comm</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">inf_le_left</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">le_inf</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hEF</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">≤</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hEG</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">≤</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">≤</span> <span class=\"n\">F</span> <span class=\"err\">⊓</span> <span class=\"n\">G</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"bp\">*</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">E</span><span class=\"o\">,</span>\n    <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">le_def</span> <span class=\"n\">at</span> <span class=\"n\">hEF</span> <span class=\"n\">hEG</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span><span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">hEF</span><span class=\"o\">,</span> <span class=\"n\">hEG</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">order_bot</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">bot_le</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">bot_le</span><span class=\"o\">,</span> <span class=\"bp\">..</span><span class=\"n\">idem</span><span class=\"bp\">.</span><span class=\"n\">has_bot</span><span class=\"o\">,</span> <span class=\"bp\">..</span><span class=\"n\">idem</span><span class=\"bp\">.</span><span class=\"n\">partial_order</span><span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">semilattice_inf_bot</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">inf_le_left</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">inf_le_left</span><span class=\"o\">,</span>\n  <span class=\"n\">inf_le_right</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">inf_le_right</span><span class=\"o\">,</span>\n  <span class=\"n\">le_inf</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">le_inf</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span><span class=\"n\">idem</span><span class=\"bp\">.</span><span class=\"n\">has_inf</span><span class=\"o\">,</span> <span class=\"bp\">..</span><span class=\"n\">idem</span><span class=\"bp\">.</span><span class=\"n\">order_bot</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">-- Should automation generate semilattice_sup_top instance</span>\n<span class=\"c1\">-- after this definition of inv,</span>\n<span class=\"c1\">-- and inv_inv and le_of_inv_le_inv?</span>\n\n<span class=\"n\">def</span> <span class=\"n\">inv</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">e</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">E</span><span class=\"o\">,</span>\n  <span class=\"n\">certif</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[(</span><span class=\"k\">show</span> <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">E</span> <span class=\"bp\">+</span> <span class=\"n\">E</span> <span class=\"bp\">*</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">ring</span><span class=\"o\">),</span> <span class=\"n\">certif_def</span><span class=\"o\">],</span>\n    <span class=\"n\">ring</span><span class=\"o\">,</span>\n  <span class=\"kn\">end</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">-- ⁻¹ notation for `inv`</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_inv</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">inv</span><span class=\"bp\">⟩</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">inv_def</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"err\">↑</span><span class=\"n\">E</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">inv_inv</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"bp\">⁻¹⁻¹</span> <span class=\"bp\">=</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">E</span> <span class=\"k\">with</span> <span class=\"n\">e</span> <span class=\"n\">he</span><span class=\"o\">,</span>\n  <span class=\"n\">ext</span><span class=\"o\">,</span>\n  <span class=\"k\">show</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">e</span><span class=\"o\">,</span>\n  <span class=\"n\">ring</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">eq_of_inv_eq</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"n\">F</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">→</span> <span class=\"n\">E</span> <span class=\"bp\">=</span> <span class=\"n\">F</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span><span class=\"n\">inv_inv</span> <span class=\"n\">E</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">inv_inv</span> <span class=\"n\">F</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">le_of_inv_le_inv</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"n\">F</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">→</span> <span class=\"n\">F</span> <span class=\"bp\">≤</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">le_def</span> <span class=\"n\">at</span> <span class=\"n\">h</span> <span class=\"err\">⊢</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">E</span><span class=\"o\">,</span>\n    <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">show</span> <span class=\"o\">((</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">F</span> <span class=\"bp\">*</span> <span class=\"n\">E</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"bp\">+</span> <span class=\"n\">F</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"k\">by</span> <span class=\"n\">ring</span><span class=\"o\">,</span> <span class=\"n\">sub_eq_iff_eq_add</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h2</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">h2</span><span class=\"o\">,</span>\n  <span class=\"n\">ring</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">inv_le_inv_of_le</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">≤</span> <span class=\"n\">F</span> <span class=\"bp\">→</span> <span class=\"n\">F</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">≤</span> <span class=\"n\">E</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">le_of_inv_le_inv</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n\n<span class=\"c1\">-- I want the next part to be automatically generated</span>\n<span class=\"n\">def</span> <span class=\"n\">sup</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">F</span><span class=\"bp\">⁻¹</span> <span class=\"err\">⊓</span> <span class=\"n\">E</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span>\n\n<span class=\"c1\">-- ⊔ notation (\\lub)</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_sup</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">sup</span><span class=\"bp\">⟩</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">sup_def</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"err\">⊔</span> <span class=\"n\">F</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">F</span><span class=\"bp\">⁻¹</span> <span class=\"err\">⊓</span> <span class=\"n\">E</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"n\">def</span> <span class=\"n\">top</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span> <span class=\"o\">:=</span> <span class=\"err\">⊥</span><span class=\"bp\">⁻¹</span>\n\n<span class=\"c1\">-- ⊤ notation (\\top)</span>\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_top</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">top</span><span class=\"bp\">⟩</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">top_def</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"err\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"err\">⊥</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">theorem</span> <span class=\"n\">inv_top</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"err\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"err\">⊥</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">eq_of_inv_eq</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">le_top</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">≤</span> <span class=\"err\">⊤</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">le_of_inv_le_inv</span><span class=\"o\">,</span>\n  <span class=\"n\">convert</span> <span class=\"n\">bot_le</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">order_top</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">le_top</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">le_top</span><span class=\"o\">,</span> <span class=\"bp\">..</span><span class=\"n\">idem</span><span class=\"bp\">.</span><span class=\"n\">has_top</span><span class=\"o\">,</span> <span class=\"bp\">..</span><span class=\"n\">idem</span><span class=\"bp\">.</span><span class=\"n\">partial_order</span><span class=\"o\">}</span>\n\n<span class=\"c1\">-- a machine could write these</span>\n<span class=\"kn\">instance</span><span class=\"o\">:</span> <span class=\"n\">semilattice_sup_top</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">le_sup_left</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">E</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"k\">begin</span>\n    <span class=\"n\">apply</span> <span class=\"n\">le_of_inv_le_inv</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">sup_def</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">inv_inv</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">inf_le_right</span><span class=\"o\">,</span>\n  <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">le_sup_right</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">E</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"k\">begin</span>\n    <span class=\"n\">apply</span> <span class=\"n\">le_of_inv_le_inv</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">sup_def</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">inv_inv</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">inf_le_left</span><span class=\"o\">,</span>\n  <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">sup_le</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">E</span> <span class=\"n\">F</span> <span class=\"n\">G</span> <span class=\"n\">hEF</span> <span class=\"n\">hFG</span><span class=\"o\">,</span> <span class=\"k\">begin</span>\n    <span class=\"n\">apply</span> <span class=\"n\">le_of_inv_le_inv</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">sup_def</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">inv_inv</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">le_inf</span> <span class=\"o\">(</span><span class=\"n\">inv_le_inv_of_le</span> <span class=\"n\">hFG</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">inv_le_inv_of_le</span> <span class=\"n\">hEF</span><span class=\"o\">),</span>\n  <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span><span class=\"n\">idem</span><span class=\"bp\">.</span><span class=\"n\">has_sup</span><span class=\"o\">,</span> <span class=\"bp\">..</span><span class=\"n\">idem</span><span class=\"bp\">.</span><span class=\"n\">order_top</span>\n<span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"o\">:</span> <span class=\"n\">bounded_lattice</span> <span class=\"o\">(</span><span class=\"n\">idem</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"bp\">..</span><span class=\"n\">idem</span><span class=\"bp\">.</span><span class=\"n\">semilattice_inf_bot</span><span class=\"o\">,</span> <span class=\"bp\">..</span><span class=\"n\">idem</span><span class=\"bp\">.</span><span class=\"n\">semilattice_sup_top</span>\n<span class=\"o\">}</span>\n</pre></div>",
        "id": 192132752,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585415808
    },
    {
        "content": "<p>ohhh thx kevin !!!</p>",
        "id": 192132997,
        "sender_full_name": "orlando",
        "timestamp": 1585416147
    },
    {
        "content": "<p>I think that this bounded lattice structure is somehow the fundamental structure on <code>idem</code>. I believe that you can make it into a ring as well -- you just made it a group I think.</p>",
        "id": 192132999,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585416150
    },
    {
        "content": "<p>hum i don't know if there is a natural ring structure !</p>",
        "id": 192133080,
        "sender_full_name": "orlando",
        "timestamp": 1585416279
    },
    {
        "content": "<p>Lenstra told me about it in 1996 :-) it's a Boolean ring IIRC</p>",
        "id": 192133272,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585416579
    },
    {
        "content": "<p>I try to  explain a little the maths ! (in english it's difficult <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>) !  </p>\n<p>I use idempotent,  for \" sheafifying \" finite constant group (for Zariski topology).  Here it's just a little example, the good objet is the functor of complete  indempotent orthogonal familly i.e ( <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>e</mi><mi>i</mi></msub><msub><mo stretchy=\"false\">)</mo><mrow><mi>i</mi><mo>∈</mo><mo stretchy=\"false\">{</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">}</mo></mrow></msub></mrow><annotation encoding=\"application/x-tex\">(e_i)_{ i \\in \\{ 1,\\dots,n\\}}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1052em;vertical-align:-0.3551999999999999em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.34480000000000005em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">∈</span><span class=\"mopen mtight\">{</span><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"minner mtight\">…</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathdefault mtight\">n</span><span class=\"mclose mtight\">}</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3551999999999999em;\"><span></span></span></span></span></span></span></span></span></span> s.t <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo><msub><mi>e</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\sum e_i = 1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>e</mi><mi>i</mi></msub><msub><mi>e</mi><mi>j</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">e_i e_j =0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathdefault\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>e</mi><mi>i</mi><mn>2</mn></msubsup><mo>=</mo><msub><mi>e</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">e_i^2 = e_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.072772em;vertical-align:-0.258664em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.441336em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> ! </p>\n<p>Little exemple with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Idem</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Idem}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord\">Idem</span></span></span></span></span> and the finite constant group  generate by the matrix <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">[</mo><mtable columnspacing=\"1em\" rowspacing=\"0.15999999999999992em\"><mtr><mtd><mstyle displaystyle=\"false\" scriptlevel=\"0\"><mn>0</mn></mstyle></mtd><mtd><mstyle displaystyle=\"false\" scriptlevel=\"0\"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle displaystyle=\"false\" scriptlevel=\"0\"><mn>1</mn></mstyle></mtd><mtd><mstyle displaystyle=\"false\" scriptlevel=\"0\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><annotation encoding=\"application/x-tex\"> \\begin{bmatrix} 0  &amp; 1\\\\ 1 &amp; 0 \\end{bmatrix}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span></span></span> ! </p>\n<p>I make <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> objet (= functor), </p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>:</mo><mi>R</mi><mo>↦</mo><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><msup><mi>R</mi><mn>2</mn></msup><mo>∣</mo><msup><mi>a</mi><mn>2</mn></msup><mo>−</mo><mn>4</mn><mi>b</mi><mtext> invertible</mtext><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">  B:  R \\mapsto \\{ (a,b) \\in R^2 \\mid a^2-4b \\text{ invertible} \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141079999999999em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9474379999999999em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">4</span><span class=\"mord mathdefault\">b</span><span class=\"mord text\"><span class=\"mord\"> invertible</span></span><span class=\"mclose\">}</span></span></span></span></span></p>\n<p>And </p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>:</mo><mi>R</mi><mo>↦</mo><mo stretchy=\"false\">{</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>∈</mo><msup><mi>R</mi><mn>2</mn></msup><mo>∣</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mi>y</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> invertible</mtext><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">X : R \\mapsto \\{ (x,y) \\in R^2 \\mid (x-y)^2 \\text{ invertible} \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141079999999999em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1141079999999999em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord text\"><span class=\"mord\"> invertible</span></span><span class=\"mclose\">}</span></span></span></span></span></p>\n<p>You have a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi><mo>:</mo><mi>X</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">\\pi : X \\to B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">π</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> given by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>↦</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo separator=\"true\">,</mo><mi>x</mi><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x,y) \\mapsto (x+y,xy)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>.  </p>\n<p>The fact is that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Idem</mtext><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\text{Idem}(R)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Idem</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span> act on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span>, the action is given by </p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mo>⋆</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>a</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>b</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mo>:</mo><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>e</mi></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>1</mn><mo>−</mo><mi>e</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mn>1</mn><mo>−</mo><mi>e</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>e</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.15999999999999992em\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>a</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi>b</mi></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">e \\star \\begin{bmatrix} a \\\\ b \\end{bmatrix} :=     \\begin{bmatrix} e  &amp; 1-e\\\\ 1-e &amp; e \\end{bmatrix}  \\begin{bmatrix} a \\\\ b \\end{bmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">e</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋆</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.40003em;vertical-align:-0.95003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">e</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">e</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">e</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">[</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span></span><span style=\"top:-2.4099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">]</span></span></span></span></span></span></span></p>\n<p>For exemple if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">e=0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">e</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> the action is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>↦</mo><mo stretchy=\"false\">(</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a,b) \\mapsto (b,a)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mclose\">)</span></span></span></span> ! (classical one, the system is symmetric) ! </p>\n<p>And all this stuff are functorial ! </p>\n<p>The fact is that the action is \" simply transitive \" (i thinck it's the official terminology) i.e  transitive without fixed point !  So the group act simply transitive on fiber like topological cover ! </p>\n<p>As an example : </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">sage</span><span class=\"p\">:</span> <span class=\"n\">R</span>\n<span class=\"n\">Ring</span> <span class=\"n\">of</span> <span class=\"n\">integers</span> <span class=\"n\">modulo</span> <span class=\"mi\">2457</span>\n<span class=\"n\">sage</span><span class=\"p\">:</span> <span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">e</span> <span class=\"p\">:</span> <span class=\"n\">M</span><span class=\"p\">([</span><span class=\"n\">R</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">),</span><span class=\"n\">R</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"p\">),</span><span class=\"n\">R</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"p\">),</span><span class=\"n\">R</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)])</span>  <span class=\"c1\"># M</span>\n<span class=\"n\">sage</span><span class=\"p\">:</span> <span class=\"n\">idem</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">351</span><span class=\"p\">,</span> <span class=\"mi\">378</span><span class=\"p\">,</span> <span class=\"mi\">729</span><span class=\"p\">,</span> <span class=\"mi\">1729</span><span class=\"p\">,</span> <span class=\"mi\">2080</span><span class=\"p\">,</span> <span class=\"mi\">2107</span><span class=\"p\">]</span>\n<span class=\"n\">sage</span><span class=\"p\">:</span> <span class=\"n\">R</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"mi\">409</span>\n<span class=\"n\">sage</span><span class=\"p\">:</span> <span class=\"n\">R</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"mi\">2268</span>\n<span class=\"n\">sage</span><span class=\"p\">:</span> <span class=\"n\">S</span>                              <span class=\"c1\">#### couple solution x+y = a   &amp;  x*y = b</span>\n<span class=\"p\">[[</span><span class=\"mi\">189</span><span class=\"p\">,</span> <span class=\"mi\">220</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">220</span><span class=\"p\">,</span> <span class=\"mi\">189</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">675</span><span class=\"p\">,</span> <span class=\"mi\">2191</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">787</span><span class=\"p\">,</span> <span class=\"mi\">2079</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">1242</span><span class=\"p\">,</span> <span class=\"mi\">1624</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">1624</span><span class=\"p\">,</span> <span class=\"mi\">1242</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">2079</span><span class=\"p\">,</span> <span class=\"mi\">787</span><span class=\"p\">],</span>\n <span class=\"p\">[</span><span class=\"mi\">2191</span><span class=\"p\">,</span> <span class=\"mi\">675</span><span class=\"p\">]]</span>\n<span class=\"n\">sage</span><span class=\"p\">:</span> <span class=\"n\">v</span>                           <span class=\"c1\">#### a particular solution</span>\n<span class=\"p\">(</span><span class=\"mi\">220</span><span class=\"p\">,</span> <span class=\"mi\">189</span><span class=\"p\">)</span>\n<span class=\"n\">sage</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">G</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"ow\">in</span> <span class=\"n\">idem</span><span class=\"p\">]</span>   <span class=\"c1\">####  orbit of v for  Idem action  ---&gt; all the solution !!!</span>\n<span class=\"p\">[(</span><span class=\"mi\">189</span><span class=\"p\">,</span> <span class=\"mi\">220</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mi\">220</span><span class=\"p\">,</span> <span class=\"mi\">189</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mi\">1242</span><span class=\"p\">,</span> <span class=\"mi\">1624</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mi\">2079</span><span class=\"p\">,</span> <span class=\"mi\">787</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mi\">675</span><span class=\"p\">,</span> <span class=\"mi\">2191</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mi\">2191</span><span class=\"p\">,</span> <span class=\"mi\">675</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mi\">787</span><span class=\"p\">,</span> <span class=\"mi\">2079</span><span class=\"p\">),</span>\n <span class=\"p\">(</span><span class=\"mi\">1624</span><span class=\"p\">,</span> <span class=\"mi\">1242</span><span class=\"p\">)]</span>\n</pre></div>",
        "id": 192133878,
        "sender_full_name": "orlando",
        "timestamp": 1585417508
    },
    {
        "content": "<p>Thanks for the ring structure, I'm going to meditate on it to see if there is anything interesting to say !</p>",
        "id": 192133969,
        "sender_full_name": "orlando",
        "timestamp": 1585417680
    },
    {
        "content": "<p>coersion is good !!!</p>",
        "id": 192135667,
        "sender_full_name": "orlando",
        "timestamp": 1585420131
    },
    {
        "content": "<p>If you think about the elements as clopen sets, then addition is symmetric difference and multiplication is intersection.</p>",
        "id": 192136607,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585421587
    },
    {
        "content": "<p>After I add the coercion, I am careful to never mention <code>.e</code> again. I only talk about <code>(E : R)</code> or <code>\\u E</code>, and I train all my <code>simp</code> lemmas using the coercion notation.</p>",
        "id": 192136665,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585421676
    },
    {
        "content": "<p>The coercion is the \"canonical notation\" for the confluent rewriting thingamajig that we are trying to set up with <code>simp</code></p>",
        "id": 192140748,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585428138
    },
    {
        "content": "<p>Darn it, I am one buzzword short</p>",
        "id": 192140751,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585428157
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  : For the structure of ring. I'am not good with the prime spectrum and topology but : <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Idem</mtext><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\"> \\text{Idem}(R)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Idem</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span> \"is equivalent\" to locally constant fonction <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Spec</mtext><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo><mo>→</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\"> \\text{Spec} (R) \\to \\{ 0,1\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord text\"><span class=\"mord\">Spec</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span> and on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{0,1\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span> there is ring structure. </p>\n<p>For the lattice, i don't really  use this kind of structure (in maths) ! So i will take some time !</p>",
        "id": 192160992,
        "sender_full_name": "orlando",
        "timestamp": 1585466867
    },
    {
        "content": "<p>Lattice: it is not difficult. It's just a partial order with sup and inf and some axioms. inf is the min of two things, id is the min of one thing, top is the min of 0 things, so now by induction we can take the minimum of any finite set. Same for max</p>",
        "id": 192164795,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585473442
    },
    {
        "content": "<p>Functions to {0,1}: yes that's what's going on</p>",
        "id": 192164840,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585473484
    }
]