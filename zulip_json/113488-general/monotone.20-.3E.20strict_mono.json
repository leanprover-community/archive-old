[
    {
        "content": "<p>Is there anything like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">γ</span><span class=\"o\">]</span>\n\n<span class=\"n\">noncomputable</span> <span class=\"n\">def</span> <span class=\"n\">strict_monotone_inc_subseq</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span>       <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">strict_monotone_inc_subseq</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">some</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">strict_monotone_inc_subseq</span> <span class=\"n\">n</span><span class=\"o\">))</span>\n</pre></div>\n\n\n<p>in mathlib? I.e. creating a strictly monotone subsequence of a sequence that is not eventually monotone decreasing.</p>\n<p>the important property being</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">strict_monotone_inc_subseq_spec</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">strict_mono</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"err\">∘</span> <span class=\"o\">(</span><span class=\"n\">strict_monotone_inc_subseq</span> <span class=\"n\">h</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"n\">refine</span> <span class=\"n\">strict_mono</span><span class=\"bp\">.</span><span class=\"n\">nat</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">intro</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">comp_app</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">comp_app</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">strict_monotone_inc_subseq</span><span class=\"o\">],</span>\n\n    <span class=\"n\">convert</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">some_spec</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">strict_monotone_inc_subseq</span> <span class=\"n\">h</span> <span class=\"n\">n</span><span class=\"o\">)),</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">add_comm</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 184598410,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1577885022
    },
    {
        "content": "<p>We have <code>directed.sequence</code> in <code>data/equiv/encodable</code>.</p>",
        "id": 184598975,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1577886137
    },
    {
        "content": "<p>Though it doesn't ensure that the sequence itself is monotone.</p>",
        "id": 184598992,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1577886207
    },
    {
        "content": "<p>It might be a good idea to create a version for <code>nat</code> with more guaranteed properties, then define the <code>encodable</code> version using it.</p>",
        "id": 184599041,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1577886288
    },
    {
        "content": "<p>On the other hand, the <code>encodable</code> version gives you a (strict) monotone sequence with a prescribed rate of convergence to infinity.</p>",
        "id": 184599054,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1577886345
    },
    {
        "content": "<p>Or you can get the <code>nat</code> version from <code>directed.sequence</code> applied to the relation <code>λ m n, m &lt; n ∧ f m &lt; f n</code>.</p>",
        "id": 184599226,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1577886681
    },
    {
        "content": "<p>Not sure if we already have a <code>nat</code> version.</p>",
        "id": 184599277,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1577886762
    }
]