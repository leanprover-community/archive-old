[
    {
        "content": "<p>I'm taking a stab at the <code>tfae</code> tactic. This is what I have so far:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">tfae_have</span>\n  <span class=\"o\">(</span><span class=\"n\">p₁</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"n\">small_nat</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">re</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"o\">(((</span><span class=\"n\">tk</span> <span class=\"s2\">&quot;→&quot;</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">tk</span> <span class=\"s2\">&quot;-&gt;&quot;</span><span class=\"o\">)</span> <span class=\"bp\">*&gt;</span> <span class=\"n\">return</span> <span class=\"n\">tt</span><span class=\"o\">)</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"o\">((</span><span class=\"n\">tk</span> <span class=\"s2\">&quot;↔&quot;</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">tk</span> <span class=\"s2\">&quot;&lt;-&gt;&quot;</span><span class=\"o\">)</span> <span class=\"bp\">*&gt;</span> <span class=\"n\">return</span> <span class=\"n\">ff</span><span class=\"o\">)))</span>\n  <span class=\"o\">(</span><span class=\"n\">p₂</span> <span class=\"o\">:</span> <span class=\"n\">parse</span> <span class=\"n\">small_nat</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">discharger</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n    <span class=\"o\">(</span><span class=\"n\">solve_by_elim</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">tauto</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">using_smt</span> <span class=\"o\">(</span><span class=\"n\">smt_tactic</span><span class=\"bp\">.</span><span class=\"n\">intros</span> <span class=\"bp\">&gt;&gt;</span> <span class=\"n\">smt_tactic</span><span class=\"bp\">.</span><span class=\"n\">solve_goals</span><span class=\"o\">)))</span> <span class=\"o\">:</span>\n  <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span> <span class=\"n\">do</span>\n    <span class=\"n\">g</span> <span class=\"bp\">&lt;-</span> <span class=\"n\">get_goals</span><span class=\"o\">,</span>\n</pre></div>\n\n\n<p>Now I would like to loop over my goals, and check if any of them has the form <code>tfae [P, Q, ..., bla]</code>. How do I do that?</p>",
        "id": 133947182,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536926053
    },
    {
        "content": "<p>maybe we can cocalc this?</p>",
        "id": 133947374,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536926343
    },
    {
        "content": "<p>Sure!</p>",
        "id": 133947386,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536926370
    },
    {
        "content": "<p>Just in the big project?</p>",
        "id": 133947393,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536926381
    },
    {
        "content": "<p>Seems easiest</p>",
        "id": 133947467,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536926443
    },
    {
        "content": "<p>I'm there</p>",
        "id": 133947471,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1536926455
    },
    {
        "content": "<p>Maybe working on the main goal (<code>target</code>) is good enough. I'm looking at the split_ifs code and that is what it does</p>",
        "id": 133947610,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536926612
    },
    {
        "content": "<p>I think this is going to need the tfae stuff to be defined already</p>",
        "id": 133947696,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536926712
    }
]