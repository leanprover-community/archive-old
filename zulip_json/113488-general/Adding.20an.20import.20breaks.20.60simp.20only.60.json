[
    {
        "content": "<p>I'm getting something pretty scary in <a href=\"https://github.com/leanprover-community/mathlib/issues/7163\">#7163</a>. My change ends up breaking <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.ndunion_le\">docs#finset.ndunion_le</a>, presumably due to <code>order.directed</code> being imported in <del>places it previously was not</del> a slightly different order to before.</p>\n<p>However, what really worries me is that the lemma is still broken even if I replace <code>simp</code> with <code>simp only [...]</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- works before the PR, breaks on the `simp only` with the PR.</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">ndunion_le</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">ndunion</span> <span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"bp\">≤</span> <span class=\"n\">u</span> <span class=\"bp\">↔</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">u</span> <span class=\"bp\">∧</span> <span class=\"n\">t</span> <span class=\"bp\">≤</span> <span class=\"n\">u</span> <span class=\"o\">:=</span>\n<span class=\"n\">multiset.induction_on</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ndinsert_le</span><span class=\"o\">,</span> <span class=\"n\">and_comm</span><span class=\"o\">,</span> <span class=\"n\">and.left_comm</span><span class=\"o\">,</span> <span class=\"n\">iff_self</span><span class=\"o\">,</span>\n    <span class=\"n\">forall_2_true_iff</span><span class=\"o\">,</span> <span class=\"n\">implies_true_iff</span><span class=\"o\">,</span> <span class=\"n\">cons_ndunion</span><span class=\"o\">,</span> <span class=\"n\">cons_subset</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">contextual</span> <span class=\"o\">:=</span> <span class=\"n\">tt</span><span class=\"o\">})</span>\n</code></pre></div>\n<p>What else could be causing this action at a distance?</p>",
        "id": 234062540,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618162634
    },
    {
        "content": "<p>My only guess so far is that I'm running into a hash collision in olean files again, and the error isn't \"real\", but only because I have no other ideas</p>",
        "id": 234063222,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618163326
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/Adding.20an.20import.20breaks.20.60simp.20only.60/near/234063222\">said</a>:</p>\n<blockquote>\n<p>My only guess so far is that I'm running into a hash collision in olean files again, and the error isn't \"real\", but only because I have no other ideas</p>\n</blockquote>\n<p>Does <code>leanproject clean &amp;&amp; leanproject build</code> help with this?</p>",
        "id": 234063915,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1618163924
    },
    {
        "content": "<p>Probably, but then my CPU will be monopolized by lean for an hour or so!</p>",
        "id": 234106861,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618206857
    },
    {
        "content": "<p>I tried making a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> of this: adding the new imports alone as in <a href=\"https://github.com/leanprover-community/mathlib/compare/eric-wieser/directed-import-debug\">https://github.com/leanprover-community/mathlib/compare/eric-wieser/directed-import-debug</a> result in <a href=\"https://github.com/leanprover-community/mathlib/runs/2322365446?check_suite_focus=true\">the error</a> \"definition <a href=\"https://leanprover-community.github.io/mathlib_docs/find/setoid.gi\">docs#setoid.gi</a> is noncomputable, it depends on <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Prop.linear_order\">docs#Prop.linear_order</a>\"</p>",
        "id": 234149924,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618231228
    },
    {
        "content": "<p>It seems like when searching for <code>preorder Prop</code>, it's by coincidence that it currently finds <a href=\"https://leanprover-community.github.io/mathlib_docs/find/complete_lattice_Prop\">docs#complete_lattice_Prop</a> before <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Prop.linear_order\">docs#Prop.linear_order</a>, the latter of which is non-computable</p>",
        "id": 234150402,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618231428
    }
]