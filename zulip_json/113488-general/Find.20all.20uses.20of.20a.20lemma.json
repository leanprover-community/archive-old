[
    {
        "content": "<p>To get a better feeling for the dependency structure of mathlib, I sometimes wish to look up all places where a lemma of a given name is used in a proof. Is there some tool for this, maybe in VSCode?</p>",
        "id": 237295939,
        "sender_full_name": "Justus Springer",
        "timestamp": 1620121728
    },
    {
        "content": "<p>I assume you also want to know when that lemma is used by <code>simp</code>?</p>",
        "id": 237298770,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620123110
    },
    {
        "content": "<p>Not really, I want to see where a lemma is used at all</p>",
        "id": 237302755,
        "sender_full_name": "Justus Springer",
        "timestamp": 1620125268
    },
    {
        "content": "<p>Sorry, what I mean is that if a proof is <code>by simp</code>, and that happens to use the lemma <code>foo</code>, then do you want your search for <code>foo</code> to find that proof?</p>",
        "id": 237302950,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1620125367
    },
    {
        "content": "<p>Do you mean by <code>simp?</code></p>",
        "id": 237303106,
        "sender_full_name": "Justus Springer",
        "timestamp": 1620125446
    },
    {
        "content": "<p>No I mean more like this: Sometimes I see a lemma in some part of the library and I wonder why we need it, i.e. where it is used.</p>",
        "id": 237303160,
        "sender_full_name": "Justus Springer",
        "timestamp": 1620125500
    },
    {
        "content": "<p><code>simp</code> and <code>simp?</code> are the same tactic. You said \"I want to find all the places where a lemma is used\" and Eric's question is \"what you mean exactly by \"used\"\"? Sometimes a lemma is used without its name being explicitly mentioned.</p>",
        "id": 237303180,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1620125515
    },
    {
        "content": "<p>If you just want to see where its name is mentioned, why not just use search?</p>",
        "id": 237303286,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1620125544
    },
    {
        "content": "<p>Eric, Justus obviously also want to know when <code>simp</code> silently uses a lemma.</p>",
        "id": 237303303,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620125553
    },
    {
        "content": "<p>Our only answer is leancrawler as far as I know, which is not very convenient to use.</p>",
        "id": 237303339,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1620125582
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/Find.20all.20uses.20of.20a.20lemma/near/237303339\">said</a>:</p>\n<blockquote>\n<p>Our only answer is leancrawler as far as I know, which is not very convenient to use.</p>\n</blockquote>\n<p>Thanks, that's exactly what I was looking for!</p>",
        "id": 237303397,
        "sender_full_name": "Justus Springer",
        "timestamp": 1620125627
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113488-general/topic/Find.20all.20uses.20of.20a.20lemma/near/237303286\">said</a>:</p>\n<blockquote>\n<p>If you just want to see where its name is mentioned, why not just use search?</p>\n</blockquote>\n<p>How can I quickly search through all files of mathlib?</p>",
        "id": 237303482,
        "sender_full_name": "Justus Springer",
        "timestamp": 1620125662
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"384542\">@Justus Springer</span> There is a search tool in VScode</p>",
        "id": 237303524,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620125688
    },
    {
        "content": "<p>I use the magnifying glass icon in VS Code?</p>",
        "id": 237303528,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1620125691
    },
    {
        "content": "<p>Sorry this might be a newbie question, someone better move it to \"new members\" <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 237303532,
        "sender_full_name": "Justus Springer",
        "timestamp": 1620125694
    },
    {
        "content": "<p>But you can also use the command line, if you know that</p>",
        "id": 237303549,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1620125703
    },
    {
        "content": "<p>Ok thanks!</p>",
        "id": 237303772,
        "sender_full_name": "Justus Springer",
        "timestamp": 1620125830
    },
    {
        "content": "<p>So does leancrawler also find hidden uses by <code>simp</code>?</p>",
        "id": 237303801,
        "sender_full_name": "Justus Springer",
        "timestamp": 1620125848
    },
    {
        "content": "<p>Yes leancrawler actually looks at the generated proof objects.</p>",
        "id": 237303822,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1620125870
    },
    {
        "content": "<p>It doesn't care what you wrote in the tactic block.</p>",
        "id": 237303832,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1620125877
    },
    {
        "content": "<p>Great, I'm going to start playing with that then :)</p>",
        "id": 237303929,
        "sender_full_name": "Justus Springer",
        "timestamp": 1620125922
    },
    {
        "content": "<p>The search tool in VSCode is absolutely essentially --- learning to use basic regular expressions (even just <code>foo.*bar</code>, to find occurrences of <code>foo</code> and <code>bar</code> on the same line) is probably the <a href=\"https://github.com/leanprover-community/mathlib/issues/1\">#1</a> way to find results in the library.</p>",
        "id": 237303942,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1620125932
    }
]