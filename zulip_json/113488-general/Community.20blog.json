[
    {
        "content": "<p>The mathlib maintainers team is proud to announce that we created a <a href=\"https://leanprover-community.github.io/blog/\">blog</a> on the Lean community website. It will feature:</p>\n<ul>\n<li>posts highlighting some new contributions to mathlib or papers</li>\n<li>news about ongoing projects such as the Liquid tensor experiment or the sphere eversion project</li>\n<li>news about exciting developments in other proofs assistants</li>\n<li>announcements of conferences and talks </li>\n<li>some explanations of specific topics in a less formal context than the documentations</li>\n<li>speculations about future developments or somewhat philosophical discussions</li>\n</ul>\n<p>There is no predefined list of authors. Everybody can submit a pull-request with a post. If you are unsure whether your post will be welcome then don't hesitate to first discuss the topic of your post on Zulip before investing too much time writing it. We wrote a couple of example posts, but we hope the community will write many more.</p>",
        "id": 254120642,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1632173001
    },
    {
        "content": "<p>I like the idea of the \"this month in mathlib\" posts. I did a few of these on Twitter and they seemed to go down very well. My main problem with these was that I'd see something in #rss and want to tweet about it instantly but the PR wouldn't be in the docs yet and then I'd forget about it. Somehow the hardest thing to do is to make sure you mention all the cool stuff in the appropriate post</p>",
        "id": 254124528,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632174932
    },
    {
        "content": "<p>Don't miss the September version of this month in mathlib in <a href=\"https://leanprover-community.github.io/blog/\">the blog</a> as well as a nice post about Radon-Nikodym that we forgot to announce here.</p>",
        "id": 255851077,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633160950
    },
    {
        "content": "<p>Oh nice -- I'd just commented on Twitter that I was looking forward to this :-)</p>",
        "id": 255853508,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633163575
    },
    {
        "content": "<p>\"the class group of an integral closure is finite\" is as it stands an incorrect or ambiguous statement. My memory is that what's going on is that finiteness of class group is preserved by integral closure.</p>",
        "id": 255853647,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633163750
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> <span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> have I got this straight?</p>",
        "id": 255853775,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633163881
    },
    {
        "content": "<p>You don't have to ask experts, this is all formalized!</p>",
        "id": 255853858,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633163957
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/class_group.fintype_of_admissible_of_finite\">docs#class_group.fintype_of_admissible_of_finite</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/class_group.fintype_of_admissible_of_algebraic\">docs#class_group.fintype_of_admissible_of_algebraic</a></p>",
        "id": 255853926,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633164014
    },
    {
        "content": "<p>you will need to read  <a href=\"https://leanprover-community.github.io/mathlib_docs/find/absolute_value.is_admissible\">docs#absolute_value.is_admissible</a></p>",
        "id": 255853973,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633164077
    },
    {
        "content": "<p>But a better one sentence summary would be welcome.</p>",
        "id": 255853987,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633164088
    },
    {
        "content": "<p>Note that we will very soon have a full blog post about this.</p>",
        "id": 255854001,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633164103
    },
    {
        "content": "<p>My point is simply that it's not true that if A is some random ID then its integral closure in something is finite. In fact my memory is faulty because I think the integral closure of the PID <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi><mo stretchy=\"false\">[</mo><mi>X</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}[X]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">]</span></span></span></span> in the field of fractions of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi><mo stretchy=\"false\">[</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><msup><mi>Y</mi><mn>2</mn></msup><mo>−</mo><msup><mi>X</mi><mn>3</mn></msup><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}[X,Y]/(Y^2-X^3-1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">]</span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> is not finite</p>",
        "id": 255854169,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633164246
    },
    {
        "content": "<p>Oh that's right there's some weird assumption which happens to be satisfied in the global field case</p>",
        "id": 255854313,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633164443
    },
    {
        "content": "<p>Is \"in the presence of an admissible absolute value, the class group of an integral closure is finite\" too long/clunky? You can leave it if you like. But for me the current version reads very oddly because it's so obviously wrong. It would be like saying \"culminating in a proof that the square of a function is continuous\", the statement as it stands is so manifestly false that it's really hard to imagine what we really mean</p>",
        "id": 255854470,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633164604
    },
    {
        "content": "<p>Or you could just say \"reduces the proof that the class group of a global field is finite to an admissibility assertion\"</p>",
        "id": 255854724,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633164876
    },
    {
        "content": "<p>The second proposition came too late, I already pushed the first one</p>",
        "id": 255854820,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633164971
    },
    {
        "content": "<p>Or maybe just \"the class group of a certain kind of integral closure is finite\"</p>",
        "id": 255854822,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633164974
    },
    {
        "content": "<p>Ok the push is fine. Sorry for the noise.</p>",
        "id": 255854847,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633165022
    },
    {
        "content": "<p>No need to be sorry! Thanks!</p>",
        "id": 255854862,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633165048
    },
    {
        "content": "<p>Everything else looks great :-)</p>",
        "id": 255854947,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633165138
    },
    {
        "content": "<p>PS another observation is that my temporary mathematical confusion was resolved because somebody wrote docstrings for theorems rather than just for definitions. Thanks!</p>",
        "id": 255855111,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633165288
    },
    {
        "content": "<p>The blog has a <a href=\"https://leanprover-community.github.io/blog/posts/contributions-to-mathlib-from-lte-about-normed-groups/\">new post</a> listing ways LTE contributed to the theory of normed groups in mathlib.</p>",
        "id": 260026955,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1635872862
    },
    {
        "content": "<p>Also don't miss <a href=\"https://leanprover-community.github.io/blog/posts/month-in-mathlib-oct-2021/\">this month in mathlib</a> which has been published this morning but appears before the above post before it's dated from November 1st. It has been quite a productive month (see also our <a href=\"https://leanprover-community.github.io/mathlib_stats.html\">mathlib statistics page</a> for raw quantitative information).</p>",
        "id": 260245512,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1636017894
    },
    {
        "content": "<p>I just tweeted about the blog and it looks like this:</p>\n<p><a href=\"/user_uploads/3121/Ml27tn0bgazDRDKKo2F2SE-e/twitter.png\">twitter.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Ml27tn0bgazDRDKKo2F2SE-e/twitter.png\" title=\"twitter.png\"><img src=\"/user_uploads/3121/Ml27tn0bgazDRDKKo2F2SE-e/twitter.png\"></a></div><p>Is there a way of making it say some Lean logo (or even a mathlib logo!) instead of that \"missing picture\" icon?</p>",
        "id": 260289685,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636040890
    },
    {
        "content": "<p>I think you want to follow the directions at <a href=\"https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/summary-card-with-large-image\">https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/summary-card-with-large-image</a></p>",
        "id": 260290855,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1636041319
    },
    {
        "content": "<p>or, I guess that needs to be in the leanprover-community web site source</p>",
        "id": 260290967,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1636041356
    },
    {
        "content": "<p>Yeah, on the docs pages we have in the header</p>\n<div class=\"codehilite\" data-code-language=\"HTML\"><pre><span></span><code>    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">\"twitter:card\"</span> <span class=\"na\">content</span><span class=\"o\">=</span><span class=\"s\">\"summary\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">\"twitter:title\"</span> <span class=\"na\">content</span><span class=\"o\">=</span><span class=\"s\">\"algebra.algebra.basic - mathlib docs\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">\"twitter:description\"</span> <span class=\"na\">content</span><span class=\"o\">=</span><span class=\"s\">\"Algebras over commutative semirings. In this file we define `algebra`s over commutative (semi)rings, algebra homomorphisms `alghom`, and algebra equivalences `algequiv`. We also define the usual…\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">\"twitter:image\"</span> <span class=\"na\">content</span><span class=\"o\">=</span><span class=\"s\">\"https://leanprover-community.github.io/mathlib_docs/meta-twitter.png\"</span><span class=\"p\">&gt;</span>\n</code></pre></div>",
        "id": 260291086,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1636041385
    },
    {
        "content": "<p>So idealy we'd have a blog version of <a href=\"https://leanprover-community.github.io/mathlib_docs/meta-twitter.png\">https://leanprover-community.github.io/mathlib_docs/meta-twitter.png</a></p>\n<div class=\"message_inline_image\"><a href=\"https://leanprover-community.github.io/mathlib_docs/meta-twitter.png\"><img src=\"https://uploads.zulipusercontent.net/edc5dec4bec452d38dd4062998b2d16185a4f08d/68747470733a2f2f6c65616e70726f7665722d636f6d6d756e6974792e6769746875622e696f2f6d6174686c69625f646f63732f6d6574612d747769747465722e706e67\"></a></div>",
        "id": 260291163,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1636041416
    },
    {
        "content": "<p>There's also <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/issues/131\">this open issue for the community website</a>. If someone wants to make the images, the rest shouldn't be too hard.</p>",
        "id": 260291440,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1636041517
    },
    {
        "content": "<p>On the community blog, don't miss <a href=\"https://leanprover-community.github.io/blog/posts/dedekind-domains-and-class-number-in-lean/\">Anne's blog post</a> about mathlib's recent advances in number theory!</p>",
        "id": 262290415,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1637569576
    },
    {
        "content": "<p>We're a bit late this month, but your wait is over: the <a href=\"https://leanprover-community.github.io/blog/\">community blog</a> has its post on mathlib news from November!</p>",
        "id": 263972138,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1638866866
    },
    {
        "content": "<p>We have a <a href=\"https://leanprover-community.github.io/blog/posts/semilinear-maps/\">new blog post</a>, by <span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span>, about the long awaited semi-linear map refactor, unlocking access to work in (bi)linear algebra over real and complex numbers in particular.</p>",
        "id": 264559420,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1639224821
    },
    {
        "content": "<p>We're introducing a new category of blog post: backstage interviews with mathlib's active contributors, check out the <a href=\"https://leanprover-community.github.io/blog/posts/backstage-with-dillies/\">first one</a>!</p>",
        "id": 265268617,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1639731252
    },
    {
        "content": "<p>Great interview. Pleasure to read. Small style comment: Not all the questions are boldface.</p>",
        "id": 265275117,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1639735253
    },
    {
        "content": "<p>I think that's on purpose? The main questions should be bolded, and then came some discussion.</p>",
        "id": 265275321,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639735377
    },
    {
        "content": "<p>Thanks again to the contributors for thinking I would be worth interviewing. That means a lot <span aria-label=\"hearts\" class=\"emoji emoji-2665\" role=\"img\" title=\"hearts\">:hearts:</span></p>",
        "id": 265275371,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639735409
    },
    {
        "content": "<p>Thank you for the shoutouts!</p>",
        "id": 265295406,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1639747875
    },
    {
        "content": "<p>Very nice, <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> !</p>",
        "id": 265307158,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1639753520
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/113488-general/topic/Community.20blog/near/265295406\">said</a>:</p>\n<blockquote>\n<p>Thank you for the shoutouts!</p>\n</blockquote>\n<p>You wholly deserve it! Wouldn't have embarked on the convexity refactor without you.</p>",
        "id": 265325664,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639759993
    },
    {
        "content": "<p>I just read the interview and it was a great experience. Thanks for the effort put into it!</p>",
        "id": 265325806,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1639760055
    },
    {
        "content": "<p>We have a new blog post, by <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>: an <a href=\"https://leanprover-community.github.io/blog/posts/intro-to-mathport/\">Update on mathlib Lean 4 porting effort</a>!</p>",
        "id": 265810799,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1640183348
    },
    {
        "content": "<p>This is a great post! It's perhaps too early to ask this, but will the final mathlib4 repo have the whole mathlib3 git history? This seems very tricky to get right but also a very worthwhile goal.</p>",
        "id": 265814809,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1640185676
    },
    {
        "content": "<p>I guess history preservation itself can be done after the fact (migrate to a history-less version, get the merged history to be perfect and then rewrite the repo once), but it at least ffects the choice of final repo location (/mathlib vs /mathlib4).</p>",
        "id": 265815230,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1640185924
    },
    {
        "content": "<p>Please see <a href=\"#narrow/stream/113488-general/topic/mathport.20and.20git.20history/near/265814809\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/mathport.20and.20git.20history/near/265814809</a> for a discussion about mathport and preserving git history from mathlib3 to mathlib4.</p>",
        "id": 265820521,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1640188792
    },
    {
        "content": "<p>Thanks again for the effort! This part was a highlight for me:</p>\n<blockquote>\n<p>Porting missing tactics from mathlib3 to mathlib4. This is still a huge task, and will not be automated in any way. If you've contributed tactics to mathlib3, please consider trying to port them to Lean 4. If you're interested in learning some Lean 4 metaprogramming, what better way to do that than porting tactics? We'll write more about this in a future post, with some pointers about places to get started, and how to hook up new tactic implementations to the existing tactic parsers that Mario has already ported to mathlib4.</p>\n</blockquote>\n<p>I will definitely try it when I feel more ready</p>",
        "id": 265821359,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1640189154
    },
    {
        "content": "<p>In the context of metaprogramming tactics, I'm finding <a href=\"https://www.youtube.com/watch?v=o6oUjcE6Nz4&amp;list=PLlF-CfQhukNnq2kDCw2P_vI5AfXN7egP2&amp;index=1\">these videos</a> super helpful!</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"o6oUjcE6Nz4\" href=\"https://www.youtube.com/watch?v=o6oUjcE6Nz4&amp;list=PLlF-CfQhukNnq2kDCw2P_vI5AfXN7egP2&amp;index=1\"><img src=\"https://uploads.zulipusercontent.net/91bdd8086a19f2547ba6eb478268759aecf3a000/68747470733a2f2f692e7974696d672e636f6d2f76692f6f366f556a6345364e7a342f64656661756c742e6a7067\"></a></div>",
        "id": 265975032,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1640318488
    },
    {
        "content": "<p>The last blog post for 2021 is an <a href=\"https://leanprover-community.github.io/blog/posts/lte-update/\">update about the Liquid Tensor Experiment</a>!</p>",
        "id": 266524402,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1640985600
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> You're not tempted to say far more explicitly \"look we simplified the argument because we formalised it and it made us abstract the properties we needed\"? People like de Jong proved great theorems in maths because they thought about what people were actually using when they were relying on resolution of singularities and then made a weaker construction which sufficed -- this was his big breakthrough. To say that a computer is helping us to do this is something which I think should be emphasized</p>",
        "id": 266536096,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1641005283
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> You are right. But it's been a subtle interplay between me abstracting the properties we needed, and Scholze immediately recognizing that all the pieces fit together. Without his input, I don't think I would have connected the dots.<br>\nLean forced me to do the abstraction, but it didn't help us with connecting the existing puzzle pieces when it comes to this Breen-Deligne lemma.</p>",
        "id": 266544598,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1641020255
    },
    {
        "content": "<p>Where I see genuine help from Lean is in untangling the rest of the proof. That was one complicated tangle, and with Lean we managed to find a precise path through the maze. I wasn't able to find that path without Lean.</p>",
        "id": 266544656,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1641020353
    },
    {
        "content": "<p>At some point in time, we should write down these findings in a careful way. Probably when we write a paper about the whole journey.</p>",
        "id": 266544663,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1641020396
    },
    {
        "content": "<p>The traditional monthly recap is now available for <a href=\"https://leanprover-community.github.io/blog/posts/month-in-mathlib-dec-2021/\">December 2021</a>!</p>",
        "id": 266869589,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1641333537
    },
    {
        "content": "<p>Thanks, Patrick! I was not aware of <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> 's work on <a href=\"https://github.com/leanprover-community/mathlib/pull/9888\">#9888</a> and I find it really cool.</p>",
        "id": 266929952,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1641386429
    },
    {
        "content": "<p>A summary/overview of what happened last year in the Lean community: <a href=\"https://leanprover-community.github.io/blog/posts/2021-the-bottom-line/\">2021 - The Bottom Line</a></p>",
        "id": 267311654,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1641670848
    },
    {
        "content": "<p>Thanks for the shoutout!</p>",
        "id": 267315281,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641675691
    },
    {
        "content": "<p>The next backstage interview with <a href=\"https://leanprover-community.github.io/blog/posts/backstage-with-pechersky/\">Yakov Pechersky</a>.</p>",
        "id": 270037008,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1643638403
    },
    {
        "content": "<p>Thank you to the blog organizers for reaching out. It was such a fun experience to have a chat about mathlib. And in general, to reiterate what I said in the chat, huge thanks to the community in general.</p>",
        "id": 270037705,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1643638707
    },
    {
        "content": "<p>From Yakov interview</p>\n<blockquote>\n<p>In DNA, you know, DNA is replicated, and there's a 5' strand and a 3' strand. And DNA can really only get replicated in one direction by the replicating enzyme. So one of the strands, and it just goes through the enzyme and goes and goes and goes. And then the other one strand, it has to go forward, go back a little bit, go forward, go back a little bit. And so it has these fragments -- they are called Okazaki fragments. It's really cool that it does that.</p>\n</blockquote>\n<p>If a picture is worth a thousand words a video is worth a million, enjoy. <a href=\"https://www.youtube.com/watch?v=bee6PWUgPo8\">Mechanism of DNA Replication (Basic)</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"bee6PWUgPo8\" href=\"https://www.youtube.com/watch?v=bee6PWUgPo8\"><img src=\"https://uploads.zulipusercontent.net/8f8357765813a7927d4fca27fc5613a07c9cc9c1/68747470733a2f2f692e7974696d672e636f6d2f76692f6265653650575567506f382f64656661756c742e6a7067\"></a></div>",
        "id": 270068073,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1643649279
    },
    {
        "content": "<p>The traditional monthly recap is now available for <a href=\"https://leanprover-community.github.io/blog/posts/month-in-mathlib-jan-2022/\">January 2022</a>!</p>",
        "id": 270940257,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644217811
    },
    {
        "content": "<p>Don't miss the wonderful <a href=\"https://leanprover-community.github.io/blog/posts/adventure-10000/\">story of mathlib's PR #10000</a> by Yury on the blog!</p>",
        "id": 271692494,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644677920
    },
    {
        "content": "<p>Great story, <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> !</p>",
        "id": 271697876,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1644685221
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> fascinating story, thanks for making Gelfand's formula possible!</p>",
        "id": 271707684,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1644696960
    },
    {
        "content": "<p>The traditional monthly recap is now available for <a href=\"https://leanprover-community.github.io/blog/posts/month-in-mathlib-feb-2022/\">February 2022</a>!</p>",
        "id": 274420603,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646671926
    },
    {
        "content": "<p>Will there be no recap for March?</p>",
        "id": 278295851,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1649420565
    },
    {
        "content": "<p>There is one in preparation! <a href=\"https://github.com/leanprover-community/blog/tree/month-mar-2022\">https://github.com/leanprover-community/blog/tree/month-mar-2022</a></p>",
        "id": 278295890,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649420593
    },
    {
        "content": "<p>ah, thanks. I just looked at the PRs. Stupid me.</p>",
        "id": 278295945,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1649420639
    },
    {
        "content": "<p>I think everyone is feeling pretty busy. If anyone would like to suggest some sentences to go in between the selected PRs, at <a href=\"https://github.com/leanprover-community/blog/blob/month-mar-2022/posts/month-in-mathlib-mar-2022.md\">https://github.com/leanprover-community/blog/blob/month-mar-2022/posts/month-in-mathlib-mar-2022.md</a>, please go ahead!!</p>",
        "id": 278298047,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1649421751
    },
    {
        "content": "<p>I have some things I could add. Should I just push to the <code>month-mar-2022</code> branch? Or do I need write access? Or should I fork and PR?</p>",
        "id": 278390011,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1649483439
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span> I think that for the blog repo a fork an PR method is the best for now</p>",
        "id": 278391361,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1649485567
    },
    {
        "content": "<p>Finally the blogpost for March is out: <a href=\"https://leanprover-community.github.io/blog/posts/month-in-mathlib-mar-2022/\">https://leanprover-community.github.io/blog/posts/month-in-mathlib-mar-2022/</a><br>\nCongrats to everyone who helped with the record number of PRs!</p>",
        "id": 278689152,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1649768678
    },
    {
        "content": "<p>Oh sorry! I meant to make the graph theory section a bit more readable.</p>",
        "id": 278689502,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649768858
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/blog/pull/39\">blog#39</a></p>",
        "id": 278697787,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649772535
    },
    {
        "content": "<p>I wish we had stats for how many people are looking at these blog posts. I've already tweeted about it; I think that it's really fascinating that four years ago we were saying \"we proved the complex numbers are a ring!\" (which would have been of no interest to me as a researcher) but now we're saying early graduate level/\"Part III\" stuff and it's far more eye-catching</p>",
        "id": 278698524,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1649772876
    },
    {
        "content": "<p>Absolutely. And there's more of this sort of combinatorics coming your way!</p>",
        "id": 278699655,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649773338
    },
    {
        "content": "<p>It wouldn't be too hard to add some privacy friendly analytics to the blog, such as <a href=\"https://counter.dev/\">https://counter.dev/</a> or <a href=\"https://www.goatcounter.com/\">https://www.goatcounter.com/</a> if we wanted to.</p>",
        "id": 278699849,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1649773427
    },
    {
        "content": "<p>The link lean pr 696 points to a wrong url</p>",
        "id": 278702534,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1649774550
    },
    {
        "content": "<p>Whoops, good catch. Will fix</p>",
        "id": 278702832,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1649774683
    },
    {
        "content": "<p>That's my bad, sorry.</p>",
        "id": 278707871,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1649776568
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> in the graph theory section there's also a stray display style ε, as in <code>$$\\varepsilon$$</code>, which should be just <code>$\\varepsilon$</code>.</p>",
        "id": 278708563,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1649776844
    },
    {
        "content": "<p>Argh, that's my bad.</p>",
        "id": 278708586,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649776857
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/113488-general/topic/Community.20blog/near/278708563\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> in the graph theory section there's also a stray display style ε, as in <code>$$\\varepsilon$$</code>, which should be just <code>$\\varepsilon$</code>.</p>\n</blockquote>\n<p>Fixed, thanks!</p>",
        "id": 278711221,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1649778111
    },
    {
        "content": "<p>Don't miss Riccardo's post on <a href=\"https://leanprover-community.github.io/blog/posts/the-ring-of-integers-of-a-cyclotomic-field/\">the ring of integers of a cyclotomic field</a> on the community blog! And while you're there, make sure you didn't miss the <a href=\"https://leanprover-community.github.io/blog/posts/month-in-mathlib-may-2022/\">latest monthly recap</a>.</p>",
        "id": 286543304,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1655500132
    },
    {
        "content": "<p>\" In particular we need to know that Q[ζp]] is a Dedekind domain.\" -- that should be Z not Q I think (sorry, on mobile)</p>",
        "id": 286552096,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1655506584
    },
    {
        "content": "<p>You're right, thanks.</p>",
        "id": 286554999,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1655509104
    },
    {
        "content": "<p>Today on the community blog, don't miss the <a href=\"https://leanprover-community.github.io/blog/posts/lte-final/\">official announcement of LTE completion</a>!</p>",
        "id": 289757687,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1657906073
    },
    {
        "content": "<p>Doesn't the linter complain it's not a <code>theorem</code> but a <code>def</code>?</p>",
        "id": 289758647,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1657906503
    },
    {
        "content": "<p>It probably complains</p>",
        "id": 289758779,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1657906566
    },
    {
        "content": "<p>I think keeping it as <code>theorem</code> is good (for the sake of publicity <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span> )</p>",
        "id": 289758973,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1657906664
    },
    {
        "content": "<p>I guess we could change the statement to <code>is_zero ...</code></p>",
        "id": 289759074,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1657906689
    },
    {
        "content": "<p>but that doesn't look as nice</p>",
        "id": 289759102,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1657906703
    },
    {
        "content": "<p>Did we intentionally give credit to <code>leanprover-community-bot</code>?</p>",
        "id": 289761061,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657907751
    },
    {
        "content": "<p>Yes <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 289762068,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1657908177
    },
    {
        "content": "<p>They made a substantial number of contributions to the repo.</p>",
        "id": 289777585,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657915908
    },
    {
        "content": "<p>Your weekend reading: <span class=\"user-mention\" data-user-id=\"479618\">@David Chanin</span> on the new mathlib changelog, now live on the community blog.<br>\n<a href=\"https://leanprover-community.github.io/blog/posts/mathlib-changelog/\">https://leanprover-community.github.io/blog/posts/mathlib-changelog/</a><br>\nThanks David!</p>",
        "id": 291376194,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1659126325
    },
    {
        "content": "<p>I just came across <a href=\"https://utteranc.es/\">https://utteranc.es/</a> , should we try to enable this on the community blog?</p>",
        "id": 292020664,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1659625659
    },
    {
        "content": "<p>Or the very similar <a href=\"https://giscus.app/\">https://giscus.app/</a></p>",
        "id": 292020873,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1659625749
    },
    {
        "content": "<p>Of course, the most on-brand thing to do would be to host the discussion on Zulip!</p>",
        "id": 292021174,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1659625869
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/Community.20blog/near/292021174\">said</a>:</p>\n<blockquote>\n<p>Of course, the most on-brand thing to do would be to host the discussion on Zulip!</p>\n</blockquote>\n<p>Embedding a Zulip topic at the bottom of each blog post would be very cool, but I think that'd definitely be a custom project! Hah</p>",
        "id": 292021487,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1659626008
    },
    {
        "content": "<p>The nice thing about  using giscus over utterances is we can put it in the same repo as the blog, and not have discussions mixed with actual technical issues with the blog infrastructure</p>",
        "id": 292022154,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1659626259
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/blog/pull/50\">blog#50</a></p>",
        "id": 292023972,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1659626992
    },
    {
        "content": "<p>Today on the blog, <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> and I write about classifying isocrysals! <a href=\"https://leanprover-community.github.io/blog/posts/classification-of-one-dimensional-isocrystals/\">https://leanprover-community.github.io/blog/posts/classification-of-one-dimensional-isocrystals/</a></p>",
        "id": 292309596,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1659864456
    },
    {
        "content": "<p>We are quite late but the blog now has monthly recaps for June and July: <a href=\"https://leanprover-community.github.io/blog/\">https://leanprover-community.github.io/blog/</a></p>",
        "id": 292941611,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1660228494
    },
    {
        "content": "<p>The monthly recap blog post for August is available at <a href=\"https://leanprover-community.github.io/blog/posts/month-in-mathlib-aug-2022/\">https://leanprover-community.github.io/blog/posts/month-in-mathlib-aug-2022/</a>!</p>",
        "id": 298286408,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1662927106
    },
    {
        "content": "<p>there's a typo in the rep theory section!</p>",
        "id": 298289073,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1662929481
    },
    {
        "content": "<p>I am watching the us open final, so I am too busy to fix it, but you can always open a PR in the blog repository!</p>",
        "id": 298292923,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1662932792
    },
    {
        "content": "<p>that's very ruud... ;b</p>",
        "id": 298294226,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1662934333
    },
    {
        "content": "<p>Oh, we could have <a href=\"https://github.com/leanprover-community/mathlib/pull/16033\">#16033</a> and <a href=\"https://github.com/leanprover-community/mathlib/pull/16257\">#16257</a> next to the Heyting algebra PR.</p>",
        "id": 298294372,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662934524
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/blog/pull/57\">blog#57</a> and <a href=\"https://github.com/leanprover-community/blog/pull/56\">blog#56</a> for a separate issue</p>",
        "id": 298294463,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1662934634
    },
    {
        "content": "<p>The monthly recap for September is available at <a href=\"https://leanprover-community.github.io/blog/posts/month-in-mathlib-sep-2022/\">https://leanprover-community.github.io/blog/posts/month-in-mathlib-sep-2022/</a>!</p>",
        "id": 303318921,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665432128
    },
    {
        "content": "<blockquote>\n<p>Algebraic topology<br>\n    PR <a href=\"https://github.com/leanprover-community/mathlib/pull/16403\">#16403</a> proves the category of sheaves on a site with values is an abelian category is abelian. It also proves that sheafification is an additive functor.</p>\n</blockquote>\n<p>This should be algebraic geometry right?</p>",
        "id": 303342336,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1665447480
    },
    {
        "content": "<p>I guess maybe it should be just \"category theory\"? It's sort of all 3 of them, maybe?</p>",
        "id": 303344389,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1665449139
    },
    {
        "content": "<p>I would describe that fact as category theory that has its best-known applications in algebraic geometry.</p>",
        "id": 303465802,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1665502815
    },
    {
        "content": "<p>Yeah I would label this under category theory. Although \"algebraic topology\" == \"category theory\" nowadays, so who knows!?</p>",
        "id": 303467795,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1665503445
    },
    {
        "content": "<p>I think there is still a difference.  I might be more convinced by \"homotopy theory\" == \"higher category theory\".</p>",
        "id": 303469670,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1665504069
    },
    {
        "content": "<p>(I wasn't being too serious here ;))</p>",
        "id": 303469722,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1665504090
    },
    {
        "content": "<p>Ok.  Sometimes it's hard to tell on the Internet.  (-:</p>",
        "id": 303470097,
        "sender_full_name": "Mike Shulman",
        "timestamp": 1665504209
    },
    {
        "content": "<p>Don't miss <a href=\"https://leanprover-community.github.io/blog/posts/lte-examples/\">https://leanprover-community.github.io/blog/posts/lte-examples/</a> and its very interesting discussion of how to make sure we formalize what we intend to formalize in case of very sophisticated theories.</p>",
        "id": 304190809,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1665835327
    },
    {
        "content": "<p>There is a small typo in the first paragraph of \"Definitions and Examples in Lean\": defEnition should be defInition</p>",
        "id": 304197809,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1665838923
    },
    {
        "content": "<p>There is a small typo in the \"Pseudo-normed groups\" section: <code>CHFPNG₁_tto_CHFPNGₑₗ</code> should be <code>CHFPNG₁_to_CHFPNGₑₗ</code>.</p>",
        "id": 304199320,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1665839658
    },
    {
        "content": "<p>Thanks for pointing these out! I'm sure there are other typos as well, so I'll wait a little while then fix everything found in one batch.</p>",
        "id": 304206803,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1665843476
    },
    {
        "content": "<p>I'm glad to see <a href=\"https://github.com/leanprover-community/mathlib/pull/3292\">#3292</a> being put to good use!</p>",
        "id": 304261533,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1665886763
    },
    {
        "content": "<p>Yeah, the proof that we're using the real reals</p>",
        "id": 304284120,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1665911518
    }
]