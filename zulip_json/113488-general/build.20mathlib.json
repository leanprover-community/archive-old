[
    {
        "content": "<p>How long should <code>leanproject build</code> take on a cloned copy of mathlib?</p>",
        "id": 270743604,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1643994466
    },
    {
        "content": "<p>Depends on your machine/number of threads, currently CI takes &gt; 3hrs</p>",
        "id": 270743729,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1643994510
    },
    {
        "content": "<p>Memory?</p>",
        "id": 270743776,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1643994532
    },
    {
        "content": "<p>Probably around 20gb?</p>",
        "id": 270743888,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1643994591
    },
    {
        "content": "<p>Adam suggested I benchmark my laptop using this: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">leanproject</span> <span class=\"n\">build</span>  <span class=\"mi\">41572</span><span class=\"bp\">.</span><span class=\"mi\">15</span><span class=\"n\">s</span> <span class=\"n\">user</span> <span class=\"mi\">82</span><span class=\"bp\">.</span><span class=\"mi\">95</span><span class=\"n\">s</span> <span class=\"n\">system</span> <span class=\"mi\">913</span><span class=\"bp\">%</span> <span class=\"n\">cpu</span> <span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">02</span><span class=\"bp\">.</span><span class=\"mi\">15</span> <span class=\"n\">total</span>\n</code></pre></div>\n<p>and I wanted to see how this compared.</p>",
        "id": 270744057,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1643994665
    },
    {
        "content": "<p>Once again it depends how many threads you are using</p>",
        "id": 270744059,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1643994667
    },
    {
        "content": "<p>Yeah that seems fairly reasonable at a glance. There is a reason most of us try to use pre-compiled oleans files as much as possible and never build mathlib ourselves any more!</p>",
        "id": 270744258,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1643994768
    },
    {
        "content": "<p>I tried it on the old laptop for comparison and it is still going...</p>",
        "id": 270744383,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1643994837
    },
    {
        "content": "<p>This gave me an idea: <code>lake build</code> or <code>lake build --pretty</code> would show a completion bar from 0 to 100%, an ETA and the current file being built</p>",
        "id": 270745091,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1643995157
    },
    {
        "content": "<p>I left my old computer running for the weekend compiling mathlib. I was hoping to to have an amusing comparison with new one. Perhaps it is still amusing </p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>Process:               lean [36557]<br>\nPath:                  /Users/USER/*/lean<br>\nIdentifier:            lean<br>\nVersion:               ???<br>\nCode Type:             X86-64 (Translated)<br>\nParent Process:        node [36548]<br>\nUser ID:               502</p>\n<p>Date/Time:             2022-02-01 19:21:44.7102 -0500<br>\nOS Version:            macOS 12.1 (21C52)<br>\nReport Version:        12<br>\nAnonymous UUID:        BF09A2FC-EBDF-0218-4FD6-F5D2B942D66E</p>\n<p>Sleep/Wake UUID:       77DBCD8F-8CAF-4F28-9EFB-2E5711ACFA68</p>\n<p>Time Awake Since Boot: 400000 seconds<br>\nTime Since Wake:       37626 seconds</p>\n<p>System Integrity Protection: enabled</p>\n<p>Crashed Thread:        10</p>\n<p>Exception Type:        EXC_BAD_ACCESS (SIGSEGV)<br>\nException Codes:       KERN_INVALID_ADDRESS at 0x000000000000000c<br>\nException Codes:       0x0000000000000001, 0x000000000000000c<br>\nException Note:        EXC_CORPSE_NOTIFY</p>\n<p>Termination Reason:    Namespace SIGNAL, Code 11 Segmentation fault: 11</p>\n</div></div>",
        "id": 270994814,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1644247806
    },
    {
        "content": "<p>TLDR: building mathlib? </p>\n<ul>\n<li>M1 Max with 64 gb: ~75 minutes</li>\n<li>M1 with 8 gb: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infty</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span></li>\n</ul>",
        "id": 270994921,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1644247853
    },
    {
        "content": "<p>8gb? Then it was just drowning with swap memory I guess?</p>",
        "id": 270995444,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1644248042
    },
    {
        "content": "<p>My guess also. I didn't copy over the full log entry from the other machine. I would be great in DevOps.</p>",
        "id": 270995583,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1644248108
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113488-general/topic/build.20mathlib/near/270744258\">said</a>:</p>\n<blockquote>\n<p>Yeah that seems fairly reasonable at a glance. There is a reason most of us try to use pre-compiled oleans files as much as possible and never build mathlib ourselves any more!</p>\n</blockquote>\n<p>Is that what you get with <code>leanproject --get-cache</code>?   I usually do that but still need to spend quite a while coimpiling before i can work interactively.</p>",
        "id": 271042969,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1644268620
    },
    {
        "content": "<p>Miguel, we would need more information about your workflow to help you.</p>",
        "id": 271043346,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644268810
    },
    {
        "content": "<p>I basically run <code>leanproject new</code> and start editing a file in <code>src</code> (I use mostly emacs with lean mode). </p>\n<p>Just typing <code>import tactic</code> triggers a loooong process until i can interactively prove something seeing the goal in tactic mode and so on.</p>",
        "id": 271044217,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1644269256
    },
    {
        "content": "<p>I don't know anything about Lean in emacs, but that doesn't sound right</p>",
        "id": 271044493,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644269392
    },
    {
        "content": "<p>I don't think emacs is relevant here. Didn't notice anything different one I tried vscode.</p>\n<p>Which should be the correct workflow?</p>",
        "id": 271044680,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1644269467
    },
    {
        "content": "<p>If you are working on a project that depends on mathlib (via <code>leanproject new</code>) the right command would be <code>leanproject --get-mathlib-cache</code> (though get-cache might do this automatically, I'm not sure) when you run this what does the output look like?</p>",
        "id": 271047838,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1644270840
    },
    {
        "content": "<p>leanproject new should do that automatically</p>",
        "id": 271048289,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644271068
    },
    {
        "content": "<p>I get this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">mmarco</span><span class=\"bp\">@</span><span class=\"n\">neumann</span> <span class=\"bp\">~/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">pr</span> <span class=\"bp\">$</span> <span class=\"n\">leanproject</span> <span class=\"n\">new</span>\n<span class=\"n\">Move</span> <span class=\"n\">existing</span> <span class=\"bp\">.</span><span class=\"n\">lean</span> <span class=\"n\">files</span> <span class=\"n\">into</span> <span class=\"n\">the</span> <span class=\"bp\">'</span><span class=\"n\">src'</span> <span class=\"n\">folder.</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">init</span> <span class=\"bp\">-</span><span class=\"n\">q</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">35</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">Cambiado</span> <span class=\"n\">a</span> <span class=\"n\">nueva</span> <span class=\"n\">rama</span> <span class=\"bp\">'</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">35</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">'</span>\n<span class=\"n\">configuring</span> <span class=\"n\">pr</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">Adding</span> <span class=\"n\">mathlib</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github.com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"n\">Clonando</span> <span class=\"n\">en</span> <span class=\"bp\">'</span><span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib'...</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Enumerating</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">241581</span><span class=\"o\">,</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Counting</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">376</span><span class=\"bp\">/</span><span class=\"mi\">376</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Compressing</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">52</span><span class=\"bp\">/</span><span class=\"mi\">52</span><span class=\"o\">),</span> <span class=\"n\">done.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Total</span> <span class=\"mi\">241581</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">360</span><span class=\"o\">),</span> <span class=\"n\">reused</span> <span class=\"mi\">332</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">324</span><span class=\"o\">),</span> <span class=\"n\">pack</span><span class=\"bp\">-</span><span class=\"n\">reused</span> <span class=\"mi\">241205</span>\n<span class=\"n\">Recibiendo</span> <span class=\"n\">objetos</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">241581</span><span class=\"bp\">/</span><span class=\"mi\">241581</span><span class=\"o\">),</span> <span class=\"mi\">121</span><span class=\"bp\">.</span><span class=\"mi\">90</span> <span class=\"n\">MiB</span> <span class=\"bp\">|</span> <span class=\"mi\">15</span><span class=\"bp\">.</span><span class=\"mi\">05</span> <span class=\"n\">MiB</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">listo.</span>\n<span class=\"n\">Resolviendo</span> <span class=\"n\">deltas</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">192813</span><span class=\"bp\">/</span><span class=\"mi\">192813</span><span class=\"o\">),</span> <span class=\"n\">listo.</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--detach dd1242d2aec84561c8f8651721ea1c1d8d25007a    # in directory _target/deps/mathlib</span>\n<span class=\"n\">HEAD</span> <span class=\"n\">est</span><span class=\"bp\">á</span> <span class=\"n\">ahora</span> <span class=\"n\">en</span> <span class=\"n\">dd1242d2a</span> <span class=\"n\">feat</span><span class=\"o\">(</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">associated</span><span class=\"o\">):</span> <span class=\"n\">generalize</span> <span class=\"n\">nat.prime.pow_dvd_of_dvd_mul_</span><span class=\"o\">{</span><span class=\"n\">left</span><span class=\"o\">,</span><span class=\"n\">right</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"mi\">11301</span><span class=\"o\">)</span>\n\n<span class=\"n\">WARNING</span><span class=\"o\">:</span> <span class=\"n\">Lean</span> <span class=\"n\">version</span> <span class=\"n\">mismatch</span><span class=\"o\">:</span> <span class=\"n\">installed</span> <span class=\"n\">version</span> <span class=\"n\">is</span> <span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">35</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">package</span> <span class=\"n\">requires</span> <span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">39</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n\n\n<span class=\"n\">WARNING</span><span class=\"o\">:</span> <span class=\"n\">Lean</span> <span class=\"n\">version</span> <span class=\"n\">mismatch</span><span class=\"o\">:</span> <span class=\"n\">installed</span> <span class=\"n\">version</span> <span class=\"n\">is</span> <span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">35</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">but</span> <span class=\"n\">package</span> <span class=\"n\">requires</span> <span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">39</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n\n<span class=\"n\">configuring</span> <span class=\"n\">pr</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">trying</span> <span class=\"n\">to</span> <span class=\"n\">update</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"n\">dd1242d2aec84561c8f8651721ea1c1d8d25007a</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--detach dd1242d2aec84561c8f8651721ea1c1d8d25007a    # in directory _target/deps/mathlib</span>\n<span class=\"n\">HEAD</span> <span class=\"n\">est</span><span class=\"bp\">á</span> <span class=\"n\">ahora</span> <span class=\"n\">en</span> <span class=\"n\">dd1242d2a</span> <span class=\"n\">feat</span><span class=\"o\">(</span><span class=\"n\">algebra</span><span class=\"bp\">/</span><span class=\"n\">associated</span><span class=\"o\">):</span> <span class=\"n\">generalize</span> <span class=\"n\">nat.prime.pow_dvd_of_dvd_mul_</span><span class=\"o\">{</span><span class=\"n\">left</span><span class=\"o\">,</span><span class=\"n\">right</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"mi\">11301</span><span class=\"o\">)</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">pr</span> <span class=\"n\">oleans</span> <span class=\"n\">for</span> <span class=\"n\">dd1242d2a</span>\n  <span class=\"n\">locally...</span>\n  <span class=\"n\">Found</span> <span class=\"kn\">local</span> <span class=\"n\">pr</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Located</span> <span class=\"n\">matching</span> <span class=\"n\">cache</span>\n<span class=\"n\">Applying</span> <span class=\"n\">cache</span>\n  <span class=\"n\">files</span> <span class=\"n\">extracted</span><span class=\"o\">:</span> <span class=\"mi\">2063</span> <span class=\"o\">[</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">07</span><span class=\"o\">,</span> <span class=\"mi\">277</span><span class=\"bp\">.</span><span class=\"mi\">28</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">]</span>\n<span class=\"n\">mmarco</span><span class=\"bp\">@</span><span class=\"n\">neumann</span> <span class=\"bp\">~/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">pr</span> <span class=\"bp\">$</span> <span class=\"n\">leanproject</span> <span class=\"c1\">--get-mathlib-cache</span>\n<span class=\"n\">Usage</span><span class=\"o\">:</span> <span class=\"n\">leanproject</span> <span class=\"o\">[</span><span class=\"n\">OPTIONS</span><span class=\"o\">]</span> <span class=\"n\">COMMAND</span> <span class=\"o\">[</span><span class=\"n\">ARGS</span><span class=\"o\">]</span><span class=\"bp\">...</span>\n<span class=\"n\">Try</span> <span class=\"bp\">'</span><span class=\"n\">leanproject</span> <span class=\"bp\">-</span><span class=\"n\">h'</span> <span class=\"n\">for</span> <span class=\"n\">help.</span>\n\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">No</span> <span class=\"n\">such</span> <span class=\"n\">option</span><span class=\"o\">:</span> <span class=\"c1\">--get-mathlib-cache</span>\n<span class=\"n\">mmarco</span><span class=\"bp\">@</span><span class=\"n\">neumann</span> <span class=\"bp\">~/</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">pr</span> <span class=\"bp\">$</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">cache</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">pr</span> <span class=\"n\">oleans</span> <span class=\"n\">for</span> <span class=\"n\">dd1242d2a</span>\n  <span class=\"n\">locally...</span>\n  <span class=\"n\">Found</span> <span class=\"kn\">local</span> <span class=\"n\">pr</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Located</span> <span class=\"n\">matching</span> <span class=\"n\">cache</span>\n<span class=\"n\">Applying</span> <span class=\"n\">cache</span>\n  <span class=\"n\">files</span> <span class=\"n\">extracted</span><span class=\"o\">:</span> <span class=\"mi\">2063</span> <span class=\"o\">[</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">07</span><span class=\"o\">,</span> <span class=\"mi\">273</span><span class=\"bp\">.</span><span class=\"mi\">11</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>And still the long computation (and memory consuming) before being able to interactively prove anything.</p>\n<p>If I just create a file with the imports, and then run <code>leanproject build</code>, I still get the long computation, but after that, I don't have to wait for it every time i open the files from the beginning.</p>\n<p>Maybe I have something not well configured?</p>",
        "id": 271048916,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1644271307
    },
    {
        "content": "<p>Did you run that from a directory that already has lean files? It seems like possibly?</p>",
        "id": 271049226,
        "sender_full_name": "Julian Berman",
        "timestamp": 1644271469
    },
    {
        "content": "<p>No, It was a freshly created directory. It is located inside a general directory where i store all my lean projects though.</p>",
        "id": 271049459,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1644271600
    },
    {
        "content": "<p>Please try to run this command in <code>/tmp</code></p>",
        "id": 271049466,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644271603
    },
    {
        "content": "<p>Which command do you mean?</p>",
        "id": 271049560,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1644271665
    },
    {
        "content": "<p><code>leanprojet new pr</code></p>",
        "id": 271049746,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644271758
    },
    {
        "content": "<p>It doesn't make a difference</p>",
        "id": 271050127,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1644271950
    },
    {
        "content": "<p>Do you have elan installed?</p>",
        "id": 271051168,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644272285
    },
    {
        "content": "<p>The Lean mismatch error is really weird</p>",
        "id": 271051191,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644272295
    },
    {
        "content": "<p>As Patrick said, you probably installed lean directly from your package manager instead of using the preferred method, which is to install elan and let it download/manage lean versions. The olean cache only works for the exact version it was built with. Are you on Linux? How did you install lean?</p>",
        "id": 271051273,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1644272338
    },
    {
        "content": "<p>Yes, I installed it with the gentoo package manger. Didn't use elan.</p>",
        "id": 271051460,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1644272443
    },
    {
        "content": "<p>That's the explanation</p>",
        "id": 271051734,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644272581
    },
    {
        "content": "<p>I see, having the right version should solve it? Or  Do I need to specifically use elan?</p>",
        "id": 271051841,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1644272634
    },
    {
        "content": "<p>Having the right version should solve it, where \"the right version\" is the one specified in leanpkg.toml for the mathlib commit you're using. It will change when new versions are released and mathlib is updated.</p>",
        "id": 271052040,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1644272717
    },
    {
        "content": "<p>But using elan is more convenient, since different projects can specify different lean versions and elan handles that seamlessly.</p>",
        "id": 271052129,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1644272759
    },
    {
        "content": "<p>Not using elan is pure masochism.</p>",
        "id": 271052243,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644272791
    },
    {
        "content": "<p>And you just proved it once more.</p>",
        "id": 271052264,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644272803
    },
    {
        "content": "<p>The problem here is that Gentoo doesn't package elan, I think</p>",
        "id": 271052378,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1644272863
    },
    {
        "content": "<p>The correct answer is to contact the maintainer and ask for an elan package</p>",
        "id": 271052469,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1644272887
    },
    {
        "content": "<p>It's probably a bad idea to use the package manager if you want a working installation.</p>",
        "id": 271052569,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1644272942
    },
    {
        "content": "<p>We have instructions for <a href=\"https://leanprover-community.github.io/install/linux.html\">Linux</a></p>",
        "id": 271052727,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1644273003
    },
    {
        "content": "<p>Thanks</p>",
        "id": 271052986,
        "sender_full_name": "Miguel Marco",
        "timestamp": 1644273122
    },
    {
        "content": "<p>Is there a Lean package in Gentoo? We should really try to kill all those fake Lean packages from distributions</p>",
        "id": 271054315,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644273790
    },
    {
        "content": "<p>Nobody is keeping them up to date. Linux distributions simply can't keep up with software that moves so fast.</p>",
        "id": 271054363,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1644273828
    },
    {
        "content": "<p>Lean updates once a month or so, mathlib updates 10 times a day. Package managers can't handle it; you just have to pull today's set-up directly from the web, which is what elan is doing.</p>",
        "id": 271057153,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644275452
    },
    {
        "content": "<p><a href=\"https://packages.gentoo.org/packages/sci-mathematics/lean\">https://packages.gentoo.org/packages/sci-mathematics/lean</a> - Gentoo Mathematics Project</p>",
        "id": 271057570,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1644275680
    },
    {
        "content": "<p>I think having <code>elan</code> itself in package managers would be great though</p>",
        "id": 271062127,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1644278639
    },
    {
        "content": "<p>Elan is in most package managers, I think (I know of <a href=\"https://aur.archlinux.org/packages/elan-lean\">Arch</a>, <a href=\"https://packages.debian.org/bookworm/elan\">Debian</a> and <a href=\"https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/science/logic/elan/default.nix\">Nix</a>). Gentoo seems to be an exception.</p>",
        "id": 271062270,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1644278745
    },
    {
        "content": "<p>I see. I meant that it would be nice to be able to do <code>sudo apt install elan</code>. I just tested it and it didn't work. Or am I misunderstanding something?</p>",
        "id": 271062682,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1644279112
    },
    {
        "content": "<p>Oh, sorry! For Debian-based systems, elan is only packaged on Debian Testing and on Ubuntu 22.04.</p>",
        "id": 271063187,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1644279443
    },
    {
        "content": "<p>At least I think that's what <a href=\"https://launchpad.net/ubuntu/jammy/+source/elan\">https://launchpad.net/ubuntu/jammy/+source/elan</a> means for Ubuntu</p>",
        "id": 271063497,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1644279636
    },
    {
        "content": "<p>How does this all work? I don't remember anyone showing up and saying \"hello I'm from Gentoo/Ubuntu and we propose doing this, is it a good idea?\".</p>\n<p>On the other hand I <em>do</em> remember me saying \"wouldn't it be a good idea\" back in 2018 and various people not being optimistic, for reasons like this</p>",
        "id": 271088035,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644303287
    },
    {
        "content": "<blockquote>\n<p>I don't remember anyone showing up and saying \"hello I'm from Gentoo/Ubuntu and we propose doing this, is it a good idea?\".</p>\n</blockquote>\n<p>That would be entirely too convenient</p>",
        "id": 271095473,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1644309457
    }
]