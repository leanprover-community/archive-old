[
    {
        "content": "<p>Maybe <code>trim</code> unless it collides with something in Lean/mathlib.</p>",
        "id": 306462389,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1666881141
    },
    {
        "content": "<p>I can only find <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.outer_measure.trim\">docs#measure_theory.outer_measure.trim</a>, but given what I think is your use-case, it is unlikely to cause clashes for your project.</p>",
        "id": 306463170,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1666881384
    },
    {
        "content": "<p>Do you prefer if I create a gist with the tactic above?  Have you found more bugs?</p>",
        "id": 306463292,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1666881424
    },
    {
        "content": "<p>Are there places in mathlib that use <code>def</code> with the same name as a tactic name elsewhere?</p>",
        "id": 306463454,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1666881470
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113488-general/topic/congr.20with.20associativity/near/306463292\">said</a>:</p>\n<blockquote>\n<p>Do you prefer if I create a gist with the tactic above?  Have you found more bugs?</p>\n</blockquote>\n<p>I didn't find any bugs and I don't need gist. Thanks tho!</p>",
        "id": 306463570,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1666881499
    },
    {
        "content": "<p>Would <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ring\">docs#ring</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.interactive.ring\">docs#tactic.interactive.ring</a> count as such a pair?</p>",
        "id": 306464058,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1666881641
    },
    {
        "content": "<p>Yes! Good, I can use <code>trim</code> for your tactic!</p>",
        "id": 306464233,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1666881690
    },
    {
        "content": "<p>I updated the name in the code above as well, to maintain it in sync.  I added also support for <code>string.append</code>, which you did not mention, but thought that it was a good test for extensibility of the tactic.</p>\n<p>If you find you would like <code>trim</code> to support some other operation that it currently does not handle, it should be easy to implement.</p>",
        "id": 306465072,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1666881898
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113488-general/topic/congr.20with.20associativity/near/306419565\">said</a>:</p>\n<blockquote>\n<p>I do not particularly mind: if it is its own separate file, you could add a \"copyright\" header like the one for mathlib.<br>\nIn any case, most of the code here is stolen from similar code somewhere else already!</p>\n</blockquote>\n<p>Is it OK how I wrote the credits?<br>\n<a href=\"https://github.com/madvorak/grammars/blob/cc609ae98457498ed72888af57dd1e3fe6541ca3/src/trim_assoc.lean#L4\">https://github.com/madvorak/grammars/blob/cc609ae98457498ed72888af57dd1e3fe6541ca3/src/trim_assoc.lean#L4</a><br>\nI didn't want to include the full mathlib header.</p>",
        "id": 306472111,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1666883720
    },
    {
        "content": "<p>Looks great!</p>\n<p>I noticed that you copied <code>list_binary_operands</code>, but also imported files that should imply it: is there any specific reason for this?</p>",
        "id": 306472799,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1666883901
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113488-general/topic/congr.20with.20associativity/near/306472799\">said</a>:</p>\n<blockquote>\n<p>Looks great!</p>\n<p>I noticed that you copied <code>list_binary_operands</code>, but also imported files that should imply it: is there any specific reason for this?</p>\n</blockquote>\n<p>Yes. I was too lazy to upgrade to the new mathlib version.</p>",
        "id": 306473125,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1666883999
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 306473994,
        "sender_full_name": "Notification Bot",
        "timestamp": 1666884237
    }
]