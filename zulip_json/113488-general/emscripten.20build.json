[
    {
        "content": "<p>I see the emscripten situation is as stellar as ever :| .<br>\nUsing the official Arch Linux build:</p>\n<div class=\"codehilite\"><pre><span></span>$ pacaur -Qo $(which emconfigure)\n/usr/lib/emscripten/emconfigure is owned by emscripten 1.37.36-1\n $ emconfigure cmake ../../src -DCMAKE_BUILD_TYPE=Emscripten\n-- Lean library will be installed at /usr/local/lib/lean\n-- Disabled multi-thread support, it will not be safe to run multiple threads in parallel\n-- Using standard malloc.\n-- Found PythonInterp: /usr/bin/python (found version &quot;3.6.4&quot;)\n-- git commit sha1: 17fe3decaf8ae236f0d0ff51ac8fd7f6940acdee\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/sebastian/projects/lean/build/emscripten\n$ make\n...\nchecking how to switch to text section... configure: error: Cannot determine text section directive\nERROR:root:Configure step failed with non-zero return code 1! Command line: [&#39;./configure&#39;, &#39;CC_FOR_BUILD=gcc&#39;, &#39;CFLAGS=-m32 -DPIC -Oz -O3&#39;, &#39;--host=x86_64-pc-linux-gnu&#39;, &#39;--build=i686-pc-linux-gnu&#39;, &#39;--disable-assembly&#39;, &#39;--prefix=/home/sebastian/projects/lean/build/emscripten/gmp-root&#39;] at /home/sebastian/projects/lean/build/emscripten/gmp-prefix/src/gmp\nmake[2]: *** [CMakeFiles/gmp.dir/build.make:109: gmp-prefix/src/gmp-stamp/gmp-configure] Error 1\nmake[1]: *** [CMakeFiles/Makefile2:1180: CMakeFiles/gmp.dir/all] Error 2\nmake: *** [Makefile:163: all] Error 2\n</pre></div>",
        "id": 125887589,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1525083344
    },
    {
        "content": "<p>/cc <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> <span class=\"user-mention\" data-user-id=\"110524\">@Scott Morrison</span> <span class=\"user-mention\" data-user-id=\"110066\">@loki der quaeler</span></p>",
        "id": 125887631,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1525083397
    },
    {
        "content": "<p><a href=\"https://gitter.im/leanprover_public/lean_js\" target=\"_blank\" title=\"https://gitter.im/leanprover_public/lean_js\">https://gitter.im/leanprover_public/lean_js</a></p>",
        "id": 125887638,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1525083455
    },
    {
        "content": "<p>(for reference)</p>",
        "id": 125887639,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1525083459
    },
    {
        "content": "<p>Once we have multiplayer lean on cocalc we can forget about these headaches <span class=\"emoji emoji-1f3ae\" title=\"video game\">:video_game:</span></p>",
        "id": 125887687,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1525083530
    },
    {
        "content": "<p>no because I want people who are idly reading my blog with no cocalc account to be able to see modern lean and mathlib doing stuff at the click of a button.</p>",
        "id": 125887852,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1525083866
    },
    {
        "content": "<p>so we have one 3.4.1 headache</p>",
        "id": 125887854,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1525083877
    },
    {
        "content": "<p>but then that's it</p>",
        "id": 125887855,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1525083880
    },
    {
        "content": "<p>[assuming Mario can get mathlib working with 3.4.1]</p>",
        "id": 125887857,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1525083889
    },
    {
        "content": "<p>[or else the number of headaches goes up again]</p>",
        "id": 125887859,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1525083895
    },
    {
        "content": "<p>Ok, fair enough</p>",
        "id": 125887860,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1525083898
    },
    {
        "content": "<p>try this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt</span>\n<span class=\"gh\">index 863f6a66d..6163d9b32 100644</span>\n<span class=\"gd\">--- a/src/CMakeLists.txt</span>\n<span class=\"gi\">+++ b/src/CMakeLists.txt</span>\n<span class=\"gu\">@@ -287,7 +287,7 @@ if (EMSCRIPTEN)</span>\n             URL https://gmplib.org/download/gmp/gmp-6.1.1.tar.bz2\n             URL_HASH SHA256=a8109865f2893f1373b0a8ed5ff7429de8db696fc451b1036bd7bdf95bbeffd6\n             BUILD_IN_SOURCE 1\n<span class=\"gd\">-            CONFIGURE_COMMAND emconfigure ./configure &quot;CC_FOR_BUILD=gcc&quot; &quot;CFLAGS=-m32 -DPIC ${CFLAGS_EMSCRIPTEN}&quot; --host=x86_64-pc-linux-gnu --build=i686-pc-linux-gnu --disable-assembly --prefix=${gmp_install_prefix}</span>\n<span class=\"gi\">+           CONFIGURE_COMMAND emconfigure ./configure &quot;CC_FOR_BUILD=gcc&quot; &quot;CCAS=gcc -c&quot; &quot;CFLAGS=-m32 -DPIC ${CFLAGS_EMSCRIPTEN}&quot; --host=x86_64-pc-linux-gnu --build=i686-pc-linux-gnu --disable-assembly --prefix=${gmp_install_prefix}</span>\n             BUILD_COMMAND emmake make -j4\n             INSTALL_COMMAND make install\n     )\n</pre></div>",
        "id": 125890720,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1525089718
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> Seems to work, thanks!</p>",
        "id": 125891597,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1525091475
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> <span class=\"user-mention\" data-user-id=\"110043\">@Gabriel Ebner</span> I've been digging into the emscripten build for lean and am trying to figure out how to get a reasonable test setup working in the community fork (see <a href=\"https://github.com/leanprover-community/lean/pull/17\" target=\"_blank\" title=\"https://github.com/leanprover-community/lean/pull/17\">this PR</a>). I'd appreciate any advice or suggestions if you've got time.</p>\n<p>Here's where I'm at: I've managed to build the js and wasm files that are used by <code>lean-web-editor</code>, but I am having trouble with the other build outputs.  <code>ctest</code> seems to rely on a shell script <code>lean</code> which runs  <code>lean.js</code> and <code>lean.wasm</code> using <code>node</code>. This fails for me with the following error (and I get similar errors for <code>leanchecker</code>):</p>\n<div class=\"codehilite\"><pre><span></span>{ Error\n    at new ErrnoError (.../lean/build/emscripten/shell/lean.js:1:72345)\n    at Object.getMode (.../lean/build/emscripten/shell/lean.js:1:40486)\n    at Object.mount (.../lean/build/emscripten/shell/lean.js:1:40042)\n    at Object.mount (.../lean/build/emscripten/shell/lean.js:1:56062)\n    at Array.ASM_CONSTS (.../lean/build/emscripten/shell/lean.js:1:15742)\n    at _emscripten_asm_const_i (.../lean/build/emscripten/shell/lean.js:1:15892)\n    at wasm-function[11542]:20\n    at Object.Module._main (.../lean/build/emscripten/shell/lean.js:1:123255)\n    at Object.callMain (.../lean/build/emscripten/shell/lean.js:1:128352)\n    at doRun (.../lean/build/emscripten/shell/lean.js:1:129028)\n  node: undefined,\n  setErrno: [Function],\n  errno: 2,\n  message: &#39;FS error&#39; }\n</pre></div>\n\n\n<p>Any ideas on how to get it running again? </p>\n<p><del>I tried adding:</del></p>\n<div class=\"codehilite\"><pre><span></span>    set_target_properties(lean PROPERTIES LINK_FLAGS &quot;-s WASM=0 ${LEAN_JS_OPTS}&quot;)\n</pre></div>\n\n\n<p><del>in <code>src/shell/CMakeLists.txt</code> since <code>LEAN_JS_OPTS</code> contains <code>\"-s 'EXTRA_EXPORTED_RUNTIME_METHODS=[\\\"FS\\\"]'\"</code> but it didn't seem to do anything. (<code>-s WASM=1</code> didn't work either)</del> (Actually, that option doesn't matter.)</p>",
        "id": 163916548,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1555951035
    },
    {
        "content": "<p>OK, I've gotten past this error now. There were some hardcoded paths in <code>src/shell/lean.cpp</code> that I had to change.</p>",
        "id": 163927294,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1555959116
    }
]