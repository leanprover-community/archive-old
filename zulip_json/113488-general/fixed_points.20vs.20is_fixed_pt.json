[
    {
        "content": "<p><code>function.fixed_points</code> and <code>is_fixed_point</code> (see <a href=\"https://leanprover-community.github.io/mathlib_docs/dynamics/fixed_points/basic.html\"><code>dynamics.fixed_points.basic</code></a>) are the same thing, one as a predicate, and the other as a set. Do we really want both? It's a bit annoying to have only half of the API for each.</p>",
        "id": 249496458,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1629009871
    },
    {
        "content": "<p>The current API looks fine to me; we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.mem_fixed_points\">docs#function.mem_fixed_points</a> to normalize it, and the set version is just for bundled lemmas</p>",
        "id": 249499421,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629015079
    },
    {
        "content": "<p>Oh really? I would have thought we wanted only the set one because the predicate is really an underpowered version of it.</p>",
        "id": 249504721,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1629022582
    },
    {
        "content": "<p>Oh I thought you might be advocating having only the non-set one</p>",
        "id": 249504789,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629022740
    },
    {
        "content": "<p>Ah no no. I much prefer the set version.</p>",
        "id": 249504885,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1629022914
    },
    {
        "content": "<p>The predicate has all sorts of dot notation based api for quick proofs</p>",
        "id": 249518126,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1629041326
    },
    {
        "content": "<p>The main argument for <code>is_fixed_pt</code> is the dot notation API.</p>",
        "id": 249518805,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1629042456
    },
    {
        "content": "<p>You could get dot notation to work on <code>has_mem.mem</code> with some hacky abbreviations</p>",
        "id": 249521334,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1629046104
    },
    {
        "content": "<p>Hmm... What's the precedent of this \"predicate vs set\" contention?</p>",
        "id": 249521878,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1629047027
    },
    {
        "content": "<p>I'm not sure that hacky abbreviations will work in all cases (e.g., for functions/lemmas with many arguments).</p>",
        "id": 249521942,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1629047104
    }
]