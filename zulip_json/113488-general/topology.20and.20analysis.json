[
    {
        "content": "<p>This is a mathlib organization question. I had in mind that the analysis folder import topology but not the other way around. However I just noticed that topology.metric_space.isometry import normed group. Is that intentional? Actually there are other examples. Should we try to fix that? <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span></p>",
        "id": 242475888,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623536935
    },
    {
        "content": "<p>There are some other examples, for example <code>topology.continuous_function.bounded</code> imports normed_group.</p>",
        "id": 242480800,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623544494
    },
    {
        "content": "<p>Like Patrick, I would be mildly in favour of changing it so that it only went topology -&gt; analysis.</p>",
        "id": 242480864,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623544591
    },
    {
        "content": "<p>Another example: <code>topology.metric_space.pi_Lp</code>.</p>",
        "id": 242481022,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623544720
    },
    {
        "content": "<p>That actually indirectly imports much of measure theory!</p>",
        "id": 242481063,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623544798
    },
    {
        "content": "<p>The case of <code>pi_Lp</code> is extremely easy to settle. This file is never used by any other file in the topology folder, it can move straight to the analysis folder.<br>\n<a href=\"/user_uploads/3121/RFtOT_Qc7tWOGllyMgfrgjJ9/piLp.pdf\">piLp.pdf</a></p>",
        "id": 242504158,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623582296
    },
    {
        "content": "<p>A genuine question from a non-computing-expert: why does it matter if files in one directory do or don't import files in another directory?</p>",
        "id": 242504448,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1623582651
    },
    {
        "content": "<p>The file <code>continuous_function.bounded</code> could rather easy because it seems already cleanly split between a first half which is about metric spaces and a second half about normed spaces. We can simply move the second half to a new file in the analysis folder. But the real question is files depending on that one, and there are a lot : <a href=\"/user_uploads/3121/WxmWtS-2nHGqLlcRuD1nPGGS/bounded.pdf\">bounded.pdf</a>. If we are lucky then those file that are in the topology folder use only the first part.</p>",
        "id": 242504456,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623582666
    },
    {
        "content": "<p>Kevin, there are two separate issue. The first one is users searching mathlib. The second one is compilation time. If the import structure of mathlib is completely random then any modification triggers recompilation of a huge part of mathlib.</p>",
        "id": 242504525,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623582731
    },
    {
        "content": "<p>Maybe I'll try to fix all this tonight. A much more ambitious fix would be to get the measure theory folder to be independent of topology and analysis, and again move everything from measure theory that depends on topology or analysis to analysis. But this is maybe more debatable from a mathematical point of view, and the measure theory folder is a giant mess anyway.</p>",
        "id": 242504618,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623582884
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/topology.20and.20analysis/near/242504525\">said</a>:</p>\n<blockquote>\n<p>Kevin, there are two separate issue. The first one is users searching mathlib. The second one is compilation time. If the import structure of mathlib is completely random then any modification triggers recompilation of a huge part of mathlib.</p>\n</blockquote>\n<p>The compilation time issue is only a problem for unnecessary imports at the file level. Moving a file from one folder to another should not affect compilation time.</p>",
        "id": 242505510,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1623584066
    },
    {
        "content": "<p>Sure, I was talking about the splitting case.</p>",
        "id": 242505956,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623584708
    },
    {
        "content": "<p>If you split <code>continuous_function.bounded</code> into a metric space part and a normed space part then modifying <code>normed_space.basic</code> won't recompile half of the topology folder.</p>",
        "id": 242506033,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623584783
    },
    {
        "content": "<p>I'm definitely on board with splitting files to get more fine-grained recompilation. I don't see how we could make sure that topology never imports analysis, though: there will be topological results whose proofs will use analytic tools. </p>\n<p>As for measure theory, the integral uses L^1, which is a particular case of L^p, which requires real powers and convexity inequalities, which requires a good deal of analysis. And conversely many results in analysis will use integration (I have in the works a proof that the second derivative is symmetric, which requires nonintrivial integration results). So disentangling things when it is reasonable is absolutely a good idea, but we have to know that this won't always be possible.</p>",
        "id": 242520097,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1623603286
    },
    {
        "content": "<p>What do you have in mind as a topological result using analysis? For integration I agree it's much more tricky (as I already wrote before). The extreme view would be to put all of integration into analysis, leaving only measure theory in <code>measure_theory</code>, but I agree I wouldn't expect to see this.</p>",
        "id": 242520187,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623603476
    },
    {
        "content": "<p>To take an extreme example: the classification of compact (oritentable, boundaryless) surfaces through the genus, which is a purely topological statement but whose proof could use de Rham cohomology or Morse functions or whatever, deeply rooted in analysis.</p>",
        "id": 242520353,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1623603717
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110050\">Sebastien Gouezel</span> <a href=\"#narrow/stream/113488-general/topic/topology.20and.20analysis/near/242520353\">said</a>:</p>\n<blockquote>\n<p>To take an extreme example: the classification of compact (oritentable, boundaryless) surfaces through the genus, which is a purely topological statement but whose proof could use de Rham cohomology or Morse functions or whatever, deeply rooted in analysis.</p>\n</blockquote>\n<p>I would maybe make a separate \"differential topology\" folder for such results -- at least, I think that's how it's organized in my head. But I don't feel very strongly about it.</p>",
        "id": 242521469,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623605485
    },
    {
        "content": "<p>Just wait until we want to calculate the etale fundamental group of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">P</mi><mn>1</mn></msup><mo>−</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{P}^1 - \\{0,1,\\infty\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">∞</span><span class=\"mclose\">}</span></span></span></span></p>",
        "id": 242521743,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1623605816
    },
    {
        "content": "<p>I would really like a big push on this sort of thing but I always have this July 2022 ICM deadline in mind and I think the top priority should really be finishing the Scholze job. However that will force us to have a usable sheaves on sites setup so perhaps at least the definition of etale fundamental groups will also follow</p>",
        "id": 242524297,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1623609267
    },
    {
        "content": "<p>I mentioned the etale fundamental group of P^1 - {0,1,infty} in this thread because the usual proof is to use the Riemann existence theorem. It's really a nontrivial combination of analysis, topology, algebraic geometry and category theory to prove that this fundamental group is the free profinite group on 2 letters. I have no idea what folder of mathlib that would go in ;)</p>",
        "id": 242524382,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1623609373
    },
    {
        "content": "<p>Also to my knowledge there is no known purely algebraic proof of this fact.</p>",
        "id": 242524480,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1623609509
    },
    {
        "content": "<p>It would be a great long term project and it would emphasize the importance of the monorepo approach</p>",
        "id": 242524604,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1623609689
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110050\">Sebastien Gouezel</span> <a href=\"#narrow/stream/113488-general/topic/topology.20and.20analysis/near/242520353\">said</a>:</p>\n<blockquote>\n<p>To take an extreme example: the classification of compact (oritentable, boundaryless) surfaces through the genus, which is a purely topological statement but whose proof could use de Rham cohomology or Morse functions or whatever, deeply rooted in analysis.</p>\n</blockquote>\n<p>This is not a serious objection. Such a proof would clearly be in a differential topology folder, even if you somehow manage to state it in elementary terms (which is not so easy because you need to describe models).</p>",
        "id": 242526421,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623612191
    },
    {
        "content": "<p>What about the Jordan curve theorem, then, which is a purely topological statement but that you will have a hard time proving without ever mentioning normed space?</p>",
        "id": 242527035,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1623613134
    },
    {
        "content": "<p>Aah but this is clearly a theorem about analysis because it mentions <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> :-) Similarly for the proof that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>π</mi><mn>4</mn></msub><mo stretchy=\"false\">(</mo><msup><mi>S</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mi mathvariant=\"double-struck\">Z</mi><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">\\pi_4(S^3)=\\Z/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mord\">/2</span></span></span></span> :-)</p>",
        "id": 242527127,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1623613267
    },
    {
        "content": "<p>I mean, I don't really see the point in trying to separate completely stuff. Mathematics is interwoven in all directions (and that's part of what makes it so fun). These higher level directories seem useful to me when you want to say that a <em>statement</em> belongs mainly to some field, but it should be expected that proofs will borrow tools from everywhere else.</p>",
        "id": 242527135,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1623613287
    },
    {
        "content": "<p>For sure, but if we can put it into little boxes it ends up being really useful programming-wise</p>",
        "id": 242527141,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1623613319
    },
    {
        "content": "<p>Note that I'm completely onboard with trying to minimize imports, and to break files into smaller files when it helps getting clear cut dependencies. So, putting things into little boxes when it can be done naturally, yes, sure. But trying to jump through weird hoops when it can't be done naturally and we want to force some artificial organization onto something which is naturally not tree-like, not so much.</p>",
        "id": 242527252,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1623613487
    },
    {
        "content": "<p>I don't think this discussion has anything to do with \"programming-wise\". And I think Jordan's theorem will be in an algebraic topology folder anyway. But that's not a very fruitful discussion.</p>",
        "id": 242527381,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623613693
    },
    {
        "content": "<p>The big theorems and ideas in mathematics often draw completely different fields together. For example the Langlands program is an attempt to unify certain questions in harmonic analysis and the representation theory of algebraic groups with the representation theory of Galois groups of fields which number theorists study like the rationals. Maybe it will have to have its own folder :-)</p>",
        "id": 242527384,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1623613702
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/7908\">#7908</a> is another example that feels very wrong to me. Why do we need to pull the full manifold library into <code>analysis/complex/isometry.lean</code>?</p>",
        "id": 242527525,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623613962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> are you using more than <a href=\"https://github.com/leanprover-community/mathlib/blob/6d2a0512c4bcd898cc179c1b4603c5a00fa3e285/src/geometry/manifold/instances/circle.lean#L42-L89\">this part</a> that could clearly be somewhere else?</p>",
        "id": 242527552,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623614018
    },
    {
        "content": "<p>I also think it's very weird that <code>circle</code> means the group of unit complex number rather than any geometric circle in a Euclidean plane.</p>",
        "id": 242527596,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623614058
    },
    {
        "content": "<p><code>unit_circle</code> would sound like a good name to me.</p>",
        "id": 242527617,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1623614122
    },
    {
        "content": "<p>I think <code>circle_group</code> is even better if you want to keep the word circle. Here the emphasis is really on the group structure.</p>",
        "id": 242527742,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623614293
    },
    {
        "content": "<p>I understand it's not called <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">U(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><msub><mi>O</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">SO_2(\\mathbb{R})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathbb\">R</span><span class=\"mclose\">)</span></span></span></span> because this would cause conflict with the general case.</p>",
        "id": 242527753,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623614333
    },
    {
        "content": "<p>Although you'd have a hard time convincing a mathematician there is any difference between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">U(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> and this.</p>",
        "id": 242527774,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623614400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Indeed, I was planning a follow-up PR to split the <code>circle</code> file.</p>",
        "id": 242529749,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623617076
    },
    {
        "content": "<p>Sébastien and I discussed whether to split the <code>circle</code> file in several pieces when I first PR'd it (<a href=\"https://github.com/leanprover-community/mathlib/issues/6907\">#6907</a>).  At the time it seemed less necessary, but now that there are a couple of other things depending on just the topological group structure (<a href=\"https://github.com/leanprover-community/mathlib/issues/6952\">#6952</a>, <a href=\"https://github.com/leanprover-community/mathlib/issues/7908\">#7908</a>) I was thinking it would be better to have the topological group structure in a separate file, say <code>analysis.complex.circle</code>.</p>",
        "id": 242529860,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623617263
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/topology.20and.20analysis/near/242527774\">said</a>:</p>\n<blockquote>\n<p>Although you'd have a hard time convincing a mathematician there is any difference between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">U(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> and this.</p>\n</blockquote>\n<p>The difference is that <code>circle</code> is constructed as a subtype and submonoid and topological subspace of <code>ℂ</code>, whereas <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">U(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> is <code>ℂ ≃ᵢ[ℂ] ℂ</code>.  In Lean they should be isomorphic objects but not literally equal.</p>",
        "id": 242530244,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623617763
    },
    {
        "content": "<p>I understand this. When I try really hard I can even tell the difference between scalars and 1x1 matrices.</p>",
        "id": 242530506,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623618143
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/113488-general/topic/topology.20and.20analysis/near/242529749\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> Indeed, I was planning a follow-up PR to split the <code>circle</code> file.</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/issues/7951\">#7951</a></p>",
        "id": 242745504,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623768991
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/topology.20and.20analysis/near/242504158\">said</a>:</p>\n<blockquote>\n<p>The case of <code>pi_Lp</code> is extremely easy to settle. This file is never used by any other file in the topology folder, it can move straight to the analysis folder.</p>\n</blockquote>\n<p>There were two examples that clearly needed fixing to have a more reasonable import graph. See <a href=\"https://github.com/leanprover-community/mathlib/issues/7990\">#7990</a> and <a href=\"https://github.com/leanprover-community/mathlib/issues/7991\">#7991</a>. (Of course this is just a small contribution to improving the state of the import graph!)</p>",
        "id": 243208907,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1624050722
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113488-general/topic/topology.20and.20analysis/near/242475888\">said</a>:</p>\n<blockquote>\n<p>This is a mathlib organization question. I had in mind that the analysis folder import topology but not the other way around. However I just noticed that topology.metric_space.isometry import normed group. Is that intentional? Actually there are other examples. Should we try to fix that? <span class=\"user-mention silent\" data-user-id=\"110050\">Sebastien Gouezel</span></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  I experimented with swapping this, so that <code>analysis.normed_group.basic</code> imports <code>topology.metric_space.isometry</code>.<br>\n<a href=\"https://github.com/leanprover-community/mathlib/compare/move-isometry\">https://github.com/leanprover-community/mathlib/compare/move-isometry</a></p>\n<p>The beneficiaries are </p>\n<ul>\n<li><code>topology.algebra.normed_group</code> (a short file about completions recently written by <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>), which can be combined into <code>analysis.normed_space.basic</code></li>\n<li><code>topology.metric_space.completion</code>, <code>topology.metric_space.gluing</code>, which no longer import normed group</li>\n</ul>\n<p>Is this worth implementing in mathlib?</p>",
        "id": 243231873,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1624082819
    },
    {
        "content": "<p>The second point definitely seems like a good idea <span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 243233073,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624084928
    },
    {
        "content": "<p>(And the first one is a nice bonus <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span>)</p>",
        "id": 243233078,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1624084947
    },
    {
        "content": "<p>I'm grabbing a book about locally convex spaces sometimes soon, so maybe leave some space for such a new file (which will be inserted just before <code>analysis.normed_space.basic</code>, I think).</p>",
        "id": 243234708,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1624087409
    },
    {
        "content": "<p>Would it be worth it to expand the linter to flag warnings when wrong-directional imports are created within a PR? This sort of thing generally comes out during a PR review process, but reviewers might miss it, and it can save time regardless.</p>",
        "id": 243336756,
        "sender_full_name": "Matt Kempster",
        "timestamp": 1624247319
    },
    {
        "content": "<p>Of course, we'd have to define and maintain \"wrong-directional\" boundaries, while avoiding worrying about really obvious ones.</p>",
        "id": 243336770,
        "sender_full_name": "Matt Kempster",
        "timestamp": 1624247359
    }
]