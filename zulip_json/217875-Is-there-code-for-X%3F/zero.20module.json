[
    {
        "content": "<p>Do we have a way of saying <code>M = 0</code> if <code>module M R</code>? More generally I could ask the same question for abelian groups I guess. Is it just <code>subsingleton M</code>?</p>",
        "id": 322355241,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674154626
    },
    {
        "content": "<p>I think <code>subsingleton</code> is fine</p>",
        "id": 322355558,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1674154716
    },
    {
        "content": "<p>If you want <em>the</em> zero module you can use <code>unit</code></p>",
        "id": 322366937,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674158333
    },
    {
        "content": "<p>My question is about _a_ zero module. Is <code>unit</code> an R-module BTW?</p>",
        "id": 322371587,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674159823
    },
    {
        "content": "<p>It shouldn't be right? Because <code>R</code> would be a metavariable in the instance.</p>",
        "id": 322377002,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1674161705
    },
    {
        "content": "<p>I think <code>R</code> is not an out-param so this should be fine</p>",
        "id": 322382953,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674163793
    },
    {
        "content": "<p>I remember a discussion about the fact that the <code>0</code>-module is free, and I also thought it was a dangerous instance, but it's not. When Lean is looking for the instance <code>module R unit</code> it knows <code>R</code>.</p>",
        "id": 322386214,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1674165039
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/.5Bmodule.2Efree.20punit.5D/near/273430558\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/.5Bmodule.2Efree.20punit.5D/near/273430558</a></p>",
        "id": 322386344,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1674165085
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/punit.module\">docs#punit.module</a></p>",
        "id": 322395119,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674168509
    }
]