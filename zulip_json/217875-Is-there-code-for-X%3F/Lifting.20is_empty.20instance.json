[
    {
        "content": "<p>Do we not have this anywhere?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">is_empty_lift</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">is_empty</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">is_empty</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"c1\">-- or</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">is_empty.lift</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">is_empty</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">is_empty</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 265748462,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640130314
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.is_empty\">docs#function.is_empty</a></p>",
        "id": 265748568,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1640130411
    },
    {
        "content": "<p>Ah thanks! Was looking in the wrong namespace.</p>",
        "id": 265748733,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640130578
    },
    {
        "content": "<p>I'm assuming dot notation doesn't work <code>f.is_empty</code>?</p>",
        "id": 265748860,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640130679
    },
    {
        "content": "<p>Yeah, <code>is_empty.comap</code> is perhaps a better name?</p>",
        "id": 265748947,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1640130742
    },
    {
        "content": "<p>That's what I was dreaming of.</p>",
        "id": 265749124,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640130905
    }
]