[
    {
        "content": "<p>Is there a good way to define a <code>continuous_linear_equiv</code> (where by \"good\" I mean via  a bound rather than by proving continuity directly)? Basically I'm looking for something similar to <code>linear_map.mk_continuous</code>.</p>",
        "id": 212994605,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1602473455
    },
    {
        "content": "<p>Do you have bounds in both directions?  Or are you planning to use the Banach open mapping theorem?</p>",
        "id": 212994698,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1602473619
    },
    {
        "content": "<p>Let's say I have bounds in both directions -- are you aware of any lemmas I could use?</p>",
        "id": 212995361,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1602474553
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 212995534,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1602474769
    },
    {
        "content": "<p>There is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_linear_equiv.equiv_of_inverse\">docs#continuous_linear_equiv.equiv_of_inverse</a>, to make a continuous linear equiv from two continuous linear maps.</p>",
        "id": 212995535,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1602474772
    },
    {
        "content": "<p>And then, as you said, there is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_map.mk_continuous\">docs#linear_map.mk_continuous</a> to make each of the directions a continuous linear map, from the bounds.</p>",
        "id": 212995552,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1602474805
    },
    {
        "content": "<p>Would this work in your situation?</p>",
        "id": 212995608,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1602474853
    },
    {
        "content": "<p>Probably you should wrap it into <code>linear_equiv.to_continuous_linear_equiv_of_bounds</code>.</p>",
        "id": 212995610,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1602474856
    },
    {
        "content": "<p>And add this <code>def</code> to <code>topology/algebra/module</code>.</p>",
        "id": 212995615,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1602474878
    },
    {
        "content": "<p>Alternatively, if you have an existing linear equiv, by definition (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_linear_equiv\">docs#continuous_linear_equiv</a>), it becomes a continuous linear equiv by checking that both directions are continuous.  And you can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_map.continuous_of_bound\">docs#linear_map.continuous_of_bound</a>  for this.</p>",
        "id": 212995648,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1602474936
    },
    {
        "content": "<p>Thanks! I was hoping for a way that involves fewer hoops to jump through, but I'll just code it as Yury suggests.</p>",
        "id": 212996219,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1602475739
    },
    {
        "content": "<p>Heather explained two ways to write <code>linear_equiv.to_continuous_linear_equiv</code>.</p>",
        "id": 212997130,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1602477358
    },
    {
        "content": "<p>Yes -- or if anything these are two functions we would want to have!</p>",
        "id": 213040438,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1602510580
    },
    {
        "content": "<p>Also, I know you suggested putting them in <code>topology/algebra/module</code>, but wouldn't <code>analysis/normed_space/operator_norm</code> (alongside <code>linear_map.mk_continuous</code>) be a better place, given that there are norms involved?</p>",
        "id": 213040614,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1602510669
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/4583\">#4583</a></p>",
        "id": 213055925,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1602518102
    }
]