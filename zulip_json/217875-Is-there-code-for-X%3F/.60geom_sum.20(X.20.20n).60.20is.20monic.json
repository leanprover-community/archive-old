[
    {
        "content": "<p>Does someone see a simpler way of proving the following? It seems a little too complicated...</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.polynomial.basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">polynomial</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">polynomial</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">geom_sum_monic</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">geom_sum</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">])</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">monic</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">nontriviality</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">geom_sum_def</span><span class=\"o\">,</span> <span class=\"n\">monic.def</span><span class=\"o\">,</span> <span class=\"n\">polynomial.leading_coeff</span><span class=\"o\">,</span> <span class=\"n\">finset_sum_coeff</span><span class=\"o\">],</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">coeff_X_pow</span><span class=\"o\">,</span> <span class=\"n\">finset.sum_boole</span><span class=\"o\">],</span>\n  <span class=\"k\">suffices</span> <span class=\"o\">:</span>\n    <span class=\"o\">((</span><span class=\"n\">finset.filter</span> <span class=\"o\">(</span><span class=\"n\">eq</span> <span class=\"o\">((</span><span class=\"n\">finset.range</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"n\">pow</span> <span class=\"n\">X</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">nat_degree</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">finset.range</span> <span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">nat.cast_one</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">finset.card_eq_one</span><span class=\"o\">],</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨((</span><span class=\"n\">finset.range</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"n\">pow</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">])))</span><span class=\"bp\">.</span><span class=\"n\">nat_degree</span><span class=\"o\">,</span> <span class=\"n\">finset.ext</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩)⟩,</span>\n  <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">finset.mem_filter</span><span class=\"o\">,</span> <span class=\"n\">finset.mem_range</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n    <span class=\"n\">refine</span> <span class=\"n\">finset.mem_singleton.2</span> <span class=\"n\">ha.2.symm</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">finset.mem_filter</span><span class=\"o\">,</span> <span class=\"n\">finset.mem_range</span><span class=\"o\">],</span>\n    <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">finset.mem_singleton.1</span> <span class=\"n\">ha</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">⟩,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">finset.mem_singleton.1</span> <span class=\"n\">ha</span><span class=\"o\">],</span>\n    <span class=\"k\">suffices</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">finset.range</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"n\">pow</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">])))</span><span class=\"bp\">.</span><span class=\"n\">degree</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">degree_eq_nat_degree</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">with_bot.coe_lt_coe.mp</span> <span class=\"n\">this</span> <span class=\"o\">},</span>\n      <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n        <span class=\"n\">replace</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">congr_arg</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">],</span> <span class=\"n\">eval</span> <span class=\"mi\">0</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">geom_sum_def</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n        <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">hn.ne'</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">h</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">fin.sum_univ_eq_sum_range</span><span class=\"o\">],</span>\n    <span class=\"n\">conv_lhs</span> <span class=\"o\">{</span> <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">skip</span><span class=\"o\">,</span> <span class=\"n\">funext</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">one_mul</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">^</span> <span class=\"bp\">↑</span><span class=\"n\">i</span><span class=\"o\">),</span> <span class=\"bp\">←</span> <span class=\"n\">C_1</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n    <span class=\"n\">exact</span> <span class=\"n\">degree_sum_fin_lt</span> <span class=\"n\">_</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 274127195,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646400249
    },
    {
        "content": "<p>Induction on n?</p>",
        "id": 274129176,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1646401112
    },
    {
        "content": "<p>Ah, that could work. Let me try</p>",
        "id": 274129898,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646401444
    },
    {
        "content": "<p>There should be lemmas that addition of monics is monic as long as the degrees or nat_degrees are distinct. And a lemma that breaks a geom_sum over (n + 1) into the last term and the initial sum.</p>",
        "id": 274130786,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1646401839
    },
    {
        "content": "<p>If you don't need it for semirings this works</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.polynomial.basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">polynomial</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">polynomial</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">monic_of_mul_monic</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">])</span> <span class=\"o\">(</span><span class=\"n\">hX</span> <span class=\"o\">:</span> <span class=\"n\">X.monic</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hXY</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">*</span> <span class=\"n\">Y</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">monic</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Y.monic</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">hXY</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">monic.def</span> <span class=\"n\">at</span> <span class=\"n\">hXY</span> <span class=\"bp\">⊢</span><span class=\"o\">,</span>\n  <span class=\"n\">rwa</span> <span class=\"n\">leading_coeff_monic_mul</span> <span class=\"n\">hX</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">geom_sum_monic</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">geom_sum</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">])</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">monic</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">])</span><span class=\"bp\">.</span><span class=\"n\">monic</span> <span class=\"o\">:=</span> <span class=\"n\">monic_X_sub_C</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">monic_of_mul_monic</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_geom_sum</span><span class=\"o\">],</span>\n  <span class=\"n\">apply</span> <span class=\"n\">monic_X_pow_sub_C</span> <span class=\"n\">_</span> <span class=\"n\">hn.ne.symm</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 274130839,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1646401869
    },
    {
        "content": "<p>And a lemma that the pow of a monic is monic</p>",
        "id": 274130935,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1646401915
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> I like your proof, and of course I don't care about semirings, but still, it seems unreasonable to suppose <code>comm_ring</code>. I guess I will just prove the various small lemmas needed to make <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span>  proof working</p>",
        "id": 274131592,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646402188
    },
    {
        "content": "<p>This is better</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">geom_sum_monic</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">geom_sum</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">[</span><span class=\"n\">X</span><span class=\"o\">])</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">monic</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">nontriviality</span> <span class=\"n\">R</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">hn</span> <span class=\"n\">rfl</span><span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">geom_sum_succ'</span><span class=\"o\">],</span>\n    <span class=\"n\">refine</span> <span class=\"n\">monic_add_of_left</span> <span class=\"o\">(</span><span class=\"n\">monic_X_pow</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">degree_X_pow</span><span class=\"o\">,</span> <span class=\"n\">geom_sum_def</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">fin.sum_univ_eq_sum_range</span><span class=\"o\">],</span>\n    <span class=\"n\">conv_lhs</span> <span class=\"o\">{</span> <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">skip</span><span class=\"o\">,</span> <span class=\"n\">funext</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">one_mul</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">^</span> <span class=\"bp\">↑</span><span class=\"n\">i</span><span class=\"o\">),</span> <span class=\"bp\">←</span> <span class=\"n\">C_1</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n    <span class=\"n\">exact</span> <span class=\"n\">degree_sum_fin_lt</span> <span class=\"n\">_</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 274132905,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646402642
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/.60geom_sum.20.28X.20.20n.29.60.20is.20monic/near/274130786\">said</a>:</p>\n<blockquote>\n<p>There should be lemmas that addition of monics is monic as long as the degrees or nat_degrees are distinct.</p>\n</blockquote>\n<p>I would further split it into a lemma that says <code>P + Q</code> monic if <code>P</code> is monic and <code>Q.deg &lt; P.deg</code>.</p>",
        "id": 274136881,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1646404483
    },
    {
        "content": "<p>Yes, we already have it, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.monic_add_of_left\">docs#polynomial.monic_add_of_left</a></p>",
        "id": 274137377,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646404716
    },
    {
        "content": "<p>A missed opportunity for dot notation!</p>",
        "id": 274137524,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1646404785
    }
]