[
    {
        "content": "<p>I have a possibly infinite set of integers (or naturals), that I'd like to take the GCD of.<br>\nWhat is the best way to do this (i.e. most available lemmas) with mathlib currently?<br>\nMy best attempt so far is to take the generator of the integer ideal generated by the set using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/submodule.is_principal.generator\">docs#submodule.is_principal.generator</a>. But something that uses the normalization gcd monoid stucture sounds better (so that the gcd is positive), is there such an instance using <code>Sup</code> already?</p>",
        "id": 286519061,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1655486593
    },
    {
        "content": "<p>I guess you want a type alias that defines <code>sup = gcd</code>?</p>",
        "id": 286520123,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1655487144
    },
    {
        "content": "<p>Which came up before in <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Gcd.20type.20tags/near/210707674\">https://leanprover.zulipchat.com/#narrow/stream/217875-Is-there-code-for-X.3F/topic/Gcd.20type.20tags/near/210707674</a></p>",
        "id": 286520298,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1655487238
    },
    {
        "content": "<p>Yeah I thought associates would be the right thing, which in the case of nat is an equivalent type. But a type alias might be the right answer in general</p>",
        "id": 286534045,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1655494652
    }
]