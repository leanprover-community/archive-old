[
    {
        "content": "<p>Do we have the following homeomorphism somewhere?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">normed_space.homeomorph_ball</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">normed_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"n\">real</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">homeomorph</span> <span class=\"n\">E</span> <span class=\"o\">(</span><span class=\"n\">metric.ball</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 260087772,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1635912057
    },
    {
        "content": "<p>I need any homeomorphism of this type, not some specific one.</p>",
        "id": 260087791,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1635912101
    },
    {
        "content": "<p>I came up with</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">normed_space.homeomorph_unit_ball</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">≃ₜ</span> <span class=\"n\">ball</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">to_fun</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n    <span class=\"kd\">begin</span>\n      <span class=\"n\">refine</span> <span class=\"o\">⟨(</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"bp\">∥</span><span class=\"n\">x</span><span class=\"bp\">∥</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">•</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">mem_ball_zero_iff.2</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∥</span><span class=\"n\">x</span><span class=\"bp\">∥</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">|</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"bp\">∥</span><span class=\"n\">x</span><span class=\"bp\">∥|</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">lt_one_add</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans_le</span> <span class=\"o\">(</span><span class=\"n\">le_abs_self</span> <span class=\"n\">_</span><span class=\"o\">),</span>\n      <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">norm_smul</span><span class=\"o\">,</span> <span class=\"n\">real.norm_eq_abs</span><span class=\"o\">,</span> <span class=\"n\">abs_inv</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">div_eq_inv_mul</span><span class=\"o\">,</span>\n        <span class=\"n\">div_lt_one</span> <span class=\"o\">((</span><span class=\"n\">norm_nonneg</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans_lt</span> <span class=\"n\">this</span><span class=\"o\">)],</span>\n    <span class=\"kd\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">inv_fun</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"bp\">∥</span><span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span><span class=\"bp\">∥</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">),</span>\n  <span class=\"n\">left_inv</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n    <span class=\"kd\">begin</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"bp\">∥</span><span class=\"n\">x</span><span class=\"bp\">∥</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">norm_nonneg</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans_lt</span> <span class=\"o\">(</span><span class=\"n\">lt_one_add</span> <span class=\"n\">_</span><span class=\"o\">),</span>\n      <span class=\"n\">field_simp</span> <span class=\"o\">[</span><span class=\"n\">this.ne'</span><span class=\"o\">,</span> <span class=\"n\">abs_of_pos</span> <span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">norm_smul</span><span class=\"o\">,</span> <span class=\"n\">smul_smul</span><span class=\"o\">,</span> <span class=\"n\">real.norm_eq_abs</span><span class=\"o\">,</span> <span class=\"n\">abs_div</span><span class=\"o\">]</span>\n    <span class=\"kd\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">right_inv</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">subtype.ext</span>\n    <span class=\"kd\">begin</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"bp\">∥</span><span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span><span class=\"bp\">∥</span> <span class=\"o\">:=</span> <span class=\"n\">sub_pos.2</span> <span class=\"o\">(</span><span class=\"n\">mem_ball_zero_iff.1</span> <span class=\"n\">x.2</span><span class=\"o\">),</span>\n      <span class=\"n\">field_simp</span> <span class=\"o\">[</span><span class=\"n\">norm_smul</span><span class=\"o\">,</span> <span class=\"n\">smul_smul</span><span class=\"o\">,</span> <span class=\"n\">real.norm_eq_abs</span><span class=\"o\">,</span> <span class=\"n\">abs_div</span><span class=\"o\">,</span> <span class=\"n\">abs_of_pos</span> <span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">this.ne'</span><span class=\"o\">]</span>\n    <span class=\"kd\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">continuous_to_fun</span> <span class=\"o\">:=</span> <span class=\"n\">continuous_subtype_mk</span> <span class=\"n\">_</span> <span class=\"bp\">$</span>\n    <span class=\"o\">((</span><span class=\"n\">continuous_const.add</span> <span class=\"n\">continuous_norm</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">inv₀</span>\n      <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">norm_nonneg</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans_lt</span> <span class=\"o\">(</span><span class=\"n\">lt_one_add</span> <span class=\"n\">_</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">ne'</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">smul</span> <span class=\"n\">continuous_id</span><span class=\"o\">,</span>\n  <span class=\"n\">continuous_inv_fun</span> <span class=\"o\">:=</span> <span class=\"n\">continuous.smul</span>\n    <span class=\"o\">((</span><span class=\"n\">continuous_const.sub</span> <span class=\"n\">continuous_subtype_coe.norm</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">inv₀</span> <span class=\"bp\">$</span>\n      <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">sub_pos.2</span> <span class=\"bp\">$</span> <span class=\"n\">mem_ball_zero_iff.1</span> <span class=\"n\">x.2</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">ne'</span><span class=\"o\">)</span> <span class=\"n\">continuous_subtype_coe</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 260089675,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1635914925
    }
]