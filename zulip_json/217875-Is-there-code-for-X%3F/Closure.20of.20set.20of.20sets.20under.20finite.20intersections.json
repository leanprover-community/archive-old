[
    {
        "content": "<p>Does mathlib have a construction like this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">fin_inter</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">of</span> <span class=\"o\">{</span><span class=\"n\">T</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">T</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">fin_inter</span> <span class=\"n\">T</span>\n<span class=\"bp\">|</span> <span class=\"n\">inter</span> <span class=\"o\">{</span><span class=\"n\">T1</span> <span class=\"n\">T2</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">fin_inter</span> <span class=\"n\">T1</span> <span class=\"bp\">→</span> <span class=\"n\">fin_inter</span> <span class=\"n\">T2</span> <span class=\"bp\">→</span> <span class=\"n\">fin_inter</span> <span class=\"o\">(</span><span class=\"n\">T1</span> <span class=\"bp\">∩</span> <span class=\"n\">T2</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 212486231,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1602018633
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.generate_sets\">docs#filter.generate_sets</a> is close, but has too much.</p>",
        "id": 212486596,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1602018787
    },
    {
        "content": "<p><a href=\"https://github.com/rwbarton/lean-omin/blob/master/src/for_mathlib/closure.lean#L106\">no</a></p>",
        "id": 212486621,
        "sender_full_name": "Reid Barton",
        "timestamp": 1602018807
    },
    {
        "content": "<p>(yeah I guess I forgot the empty intersection is <code>set.univ</code> :))</p>",
        "id": 212486836,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1602018914
    }
]