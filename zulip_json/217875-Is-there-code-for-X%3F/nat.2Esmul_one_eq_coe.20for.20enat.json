[
    {
        "content": "<p>Is <a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/module/basic.html#nat.smul_one_eq_coe\"><code>nat.smul_one_eq_coe</code></a> really general enough? It doesn't apply here.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">enat</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>and has anybody a proof of that?</p>",
        "id": 249834600,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1629285378
    },
    {
        "content": "<p>Ahah! I think there's something fishy here. If you <code>rw nsmul_one</code>, you end up with the goal <code>↑a = ↑a</code>. The LHS is <code>nat.cast</code> while the RHS is the coercion defined by <code>instance : has_coe ℕ enat := ⟨some⟩</code> in <code>data.nat.enat</code>.</p>",
        "id": 249841205,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1629289736
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/nat.2Esmul_one_eq_coe.20for.20enat/near/249841205\">said</a>:</p>\n<blockquote>\n<p>Ahah! I think there's something fishy here. If you <code>rw nsmul_one</code>, you end up with the goal <code>↑a = ↑a</code>. The LHS is <code>nat.cast</code> while the RHS is the coercion defined by <code>instance : has_coe ℕ enat := ⟨some⟩</code> in <code>data.nat.enat</code>.</p>\n</blockquote>\n<p>Does <code>rw_mod_cast</code> help?</p>",
        "id": 249843097,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1629290751
    }
]