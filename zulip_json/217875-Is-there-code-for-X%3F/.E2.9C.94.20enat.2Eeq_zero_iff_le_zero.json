[
    {
        "content": "<p>Hey! I can't find such a function on enat, and the one for linear additive monoids doesn't work here. Am I missing something?</p>",
        "id": 271243762,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1644395226
    },
    {
        "content": "<p>Enat is constructive and hence hell to work with. I think people usually avoid it. Maybe it could do with some love? There's always with_top (nat) if you want something which is comprehensible without a PhD in constructivism</p>",
        "id": 271244310,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644395600
    },
    {
        "content": "<p>Ah, that's good to know! I'll go with <code>with_top (nat)</code> then. Thanks!</p>",
        "id": 271244915,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1644395942
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461830\">Rémi Bottinelli</span> has marked this topic as resolved.</p>",
        "id": 271244920,
        "sender_full_name": "Notification Bot",
        "timestamp": 1644395946
    },
    {
        "content": "<p>People have tamed this enat beast in the past, but it's always defeated me so I have a grudge against it</p>",
        "id": 271245402,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644396265
    },
    {
        "content": "<p>I'm still considering refactoring it. Just waiting for consensus to build up.</p>",
        "id": 271249551,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644398883
    },
    {
        "content": "<p>I guess it might be being used by Mario to do some constructive stuff somewhere</p>",
        "id": 271318652,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644428818
    },
    {
        "content": "<p>We have set.finite and finset, we could have <code>enat'</code> or whatever</p>",
        "id": 271318743,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644428853
    }
]