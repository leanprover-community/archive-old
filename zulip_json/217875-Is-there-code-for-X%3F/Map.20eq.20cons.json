[
    {
        "content": "<p>I have a proof that <code>hd :: tl = l.map f</code> for <code>hd : X</code>, <code>tl : list X</code>, <code>l : List Y</code>, <code>f : Y -&gt; X</code>.<br>\nHow can I show that <code>l</code> must be equal to some <code>a :: b</code> where <code>f a = hd</code> and <code>b.map f = tl</code>?</p>",
        "id": 261263167,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1636729076
    },
    {
        "content": "<p>You can do <code>cases l</code>, get rid of the first goal because <code>[].map f = []</code> and then <code>rw list.map_cons</code> (or something like that) in your second goal.</p>",
        "id": 261265011,
        "sender_full_name": "YaÃ«l Dillies",
        "timestamp": 1636729691
    },
    {
        "content": "<p>Though feel free to add a lemma to mathlib of the form <code>lemma map_eq_cons : l.map f = hd :: tl \\iff \\exists x l', l = x :: l' \\and f x = hd \\and l'.map f = tl</code></p>",
        "id": 261358011,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1636806614
    },
    {
        "content": "<p>(and while we're at it <code>map_eq_append</code>)</p>",
        "id": 261358087,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1636806734
    },
    {
        "content": "<p>Should it be <code>map_eq_cons_iff</code>? What does <a href=\"https://leanprover-community.github.io/contribute/naming.html\">#naming</a> have to say about trailing <code>_iff</code>s?</p>",
        "id": 261358305,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636807093
    }
]