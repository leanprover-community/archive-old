[
    {
        "content": "<p>Do we have <a href=\"https://en.wikipedia.org/wiki/Vandermonde%27s_identity\">https://en.wikipedia.org/wiki/Vandermonde%27s_identity</a> ?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.finset.nat_antidiagonal</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">nat.add_choose_eq</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">choose</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"o\">(</span><span class=\"n\">ij</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">finset.nat.antidiagonal</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">m.choose</span> <span class=\"n\">ij.1</span> <span class=\"bp\">*</span> <span class=\"n\">n.choose</span> <span class=\"n\">ij.2</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 251887826,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630678796
    },
    {
        "content": "<p>Pretty sure we don't. Would be a great <del>sum</del>addition!</p>",
        "id": 251897401,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1630682669
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- move this</span>\n<span class=\"kn\">section</span>\n<span class=\"kn\">open</span> <span class=\"n\">polynomial</span> <span class=\"n\">finset.nat</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">polynomial.X_add_one_pow_coeff</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">((</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">coeff</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">n.choose</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[(</span><span class=\"n\">commute_X</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">add_pow</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">lcoeff_apply</span><span class=\"o\">,</span> <span class=\"n\">linear_map.map_sum</span><span class=\"o\">],</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">one_pow</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">,</span> <span class=\"n\">lcoeff_apply</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">C_eq_nat_cast</span><span class=\"o\">,</span> <span class=\"n\">coeff_mul_C</span><span class=\"o\">,</span> <span class=\"n\">nat.cast_id</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">finset.sum_eq_single</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">coeff_X_pow_self</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">],</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">coeff_X_pow</span><span class=\"o\">,</span> <span class=\"n\">boole_mul</span><span class=\"o\">,</span> <span class=\"n\">ite_eq_right_iff</span><span class=\"o\">,</span> <span class=\"n\">ne.def</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">contextual</span> <span class=\"o\">:=</span> <span class=\"n\">tt</span><span class=\"o\">},</span>\n    <span class=\"n\">rintro</span> <span class=\"n\">h</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">contradiction</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">coeff_X_pow_self</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">,</span> <span class=\"n\">not_lt</span><span class=\"o\">,</span> <span class=\"n\">finset.mem_range</span><span class=\"o\">],</span>\n    <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">nat.choose_eq_zero_of_lt</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">nat.cast_zero</span><span class=\"o\">],</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">polynomial</span>\n\n<span class=\"sd\">/-- Vandermonde's identity -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">nat.add_choose_eq</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">choose</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"o\">(</span><span class=\"n\">ij</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">antidiagonal</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">m.choose</span> <span class=\"n\">ij.1</span> <span class=\"bp\">*</span> <span class=\"n\">n.choose</span> <span class=\"n\">ij.2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">calc</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">choose</span> <span class=\"n\">k</span>\n      <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">n</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">coeff</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">_</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">coeff</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">pow_add</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"o\">(</span><span class=\"n\">ij</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">×</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"n\">antidiagonal</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">m.choose</span> <span class=\"n\">ij.1</span> <span class=\"bp\">*</span> <span class=\"n\">n.choose</span> <span class=\"n\">ij.2</span> <span class=\"o\">:</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">X_add_one_pow_coeff</span><span class=\"o\">,</span> <span class=\"n\">nat.cast_id</span><span class=\"o\">],</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">coeff_mul</span><span class=\"o\">,</span> <span class=\"n\">finset.sum_congr</span> <span class=\"n\">rfl</span><span class=\"o\">],</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">X_add_one_pow_coeff</span><span class=\"o\">,</span> <span class=\"n\">nat.cast_id</span><span class=\"o\">,</span> <span class=\"n\">eq_self_iff_true</span><span class=\"o\">,</span> <span class=\"n\">imp_true_iff</span><span class=\"o\">],</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 251932180,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630698056
    },
    {
        "content": "<p>That's an innovative proof!</p>",
        "id": 251932597,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630698288
    },
    {
        "content": "<p>It's on wiki</p>",
        "id": 251932695,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630698350
    },
    {
        "content": "<p>It's a bit high-powered maybe. But being able to use <code>coeff_mul</code> is very pleasant.</p>",
        "id": 251932781,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630698375
    },
    {
        "content": "<p>Shouldn't that be called <code>coeff_X_add_one_pow</code>? I'm quite surprised we don't have that lemma, which makes me think maybe we do but it's named differently or the <code>+</code> is backwards</p>",
        "id": 251958387,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1630715060
    },
    {
        "content": "<p><code>rg \"coeff.*choose\"</code> doesn't give me any hits in mathlib.</p>",
        "id": 251976428,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630735236
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/8992\">#8992</a></p>",
        "id": 251978319,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630737502
    }
]