[
    {
        "content": "<p>I proved this :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.cau_seq</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.unique_factorization_domain</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">is_absolute_value</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">ext_hom_primes</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_monoid_with_zero</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">wf_dvd_monoid</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">monoid_with_zero</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">φ₁</span> <span class=\"n\">φ₂</span><span class=\"o\">:</span> <span class=\"n\">monoid_with_zero_hom</span> <span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h_units</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">u</span><span class=\"o\">:</span> <span class=\"n\">units</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">φ₁</span> <span class=\"n\">u</span> <span class=\"bp\">=</span> <span class=\"n\">φ₂</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h_irreducibles</span><span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">irreducible</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">φ₁</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">φ₂</span> <span class=\"n\">a</span><span class=\"o\">):</span>\n    <span class=\"o\">(</span><span class=\"n\">φ₁</span><span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">φ₂</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">monoid_with_zero_hom.to_fun_eq_coe</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">monoid_with_zero_hom.to_fun_eq_coe</span><span class=\"o\">,</span>\n  <span class=\"n\">ext</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">wf_dvd_monoid.induction_on_irreducible</span> <span class=\"n\">x</span>\n    <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">φ₁.map_zero'</span><span class=\"o\">,</span> <span class=\"n\">φ₂.map_zero'</span><span class=\"o\">])</span>\n    <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"o\">{</span>\n      <span class=\"n\">rintros</span> <span class=\"n\">_</span> <span class=\"o\">⟨</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"n\">rfl</span> <span class=\"o\">⟩,</span>\n      <span class=\"n\">exact</span> <span class=\"n\">h_units</span> <span class=\"n\">u</span><span class=\"o\">,</span>\n    <span class=\"o\">})</span>\n    <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"o\">{</span>\n      <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">i</span> <span class=\"n\">ha</span> <span class=\"n\">hi</span> <span class=\"n\">hφa</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">monoid_with_zero_hom.map_mul</span><span class=\"o\">,</span> <span class=\"n\">monoid_with_zero_hom.to_fun_eq_coe</span><span class=\"o\">],</span>\n      <span class=\"n\">rw</span> <span class=\"n\">h_irreducibles</span> <span class=\"n\">i</span> <span class=\"n\">hi</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">monoid_with_zero_hom.to_fun_eq_coe</span> <span class=\"n\">φ₁</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">hφa</span><span class=\"o\">,</span>\n      <span class=\"n\">refl</span><span class=\"o\">,</span>\n    <span class=\"o\">}),</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I wanted to PR this to mathlib, but I don't really know where to put it.<br>\n(Also I'm not entierely sure if this is the right way to formulate it.)</p>",
        "id": 225962965,
        "sender_full_name": "Julien Marquet",
        "timestamp": 1613033996
    },
    {
        "content": "<p>why not make the goal <code>φ₁ = φ₂</code></p>",
        "id": 225963270,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1613034155
    },
    {
        "content": "<p>It actually seemed more natural in the context where I used it but now you say it...</p>",
        "id": 225964086,
        "sender_full_name": "Julien Marquet",
        "timestamp": 1613034623
    },
    {
        "content": "<p>The homomorphism arguments should be implicit too</p>",
        "id": 225964462,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613034842
    },
    {
        "content": "<p>And you shouldn't need to rewrite them into <code>to_fun</code>, use the unprimed <code>map_zero</code> instead of the primed one</p>",
        "id": 225964603,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613034919
    },
    {
        "content": "<p>I didn't notice the unprimed version, thanks !</p>",
        "id": 225966262,
        "sender_full_name": "Julien Marquet",
        "timestamp": 1613035850
    },
    {
        "content": "<p>The primed ones only exist because the has_coe_to_fun instance can't be set up early enough to avoid them</p>",
        "id": 225967168,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613036393
    }
]