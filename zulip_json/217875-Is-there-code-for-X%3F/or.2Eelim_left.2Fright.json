[
    {
        "content": "<p>Do we have these? I think the dot.notation would be helpful!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">or.elim_right</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hnP</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Q</span> <span class=\"o\">:=</span>\n<span class=\"n\">or_iff_not_imp_left.1</span> <span class=\"n\">h</span> <span class=\"n\">hnP</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">or.elim_left</span> <span class=\"o\">{</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hnQ</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"o\">:=</span>\n<span class=\"n\">h.symm.elim_right</span> <span class=\"n\">hnQ</span>\n</code></pre></div>",
        "id": 298522041,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663051019
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/or.resolve_left\">docs#or.resolve_left</a>?</p>",
        "id": 298522710,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1663051408
    },
    {
        "content": "<p>Cool! I knew they had to be somewhere.</p>",
        "id": 298522855,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1663051497
    },
    {
        "content": "<p>I find myself using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/or.resolve_left\">docs#or.resolve_left</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/or.resolve_right\">docs#or.resolve_right</a> all the time <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 298572925,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1663072248
    },
    {
        "content": "<p>That's because you've really got into golfy code, judging by your recent messages! (\"I'm not happy with this four line proof, it's too long/ugly\")</p>",
        "id": 298583987,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1663075648
    },
    {
        "content": "<p>Twice recently I've tried to answer questions you've asked here and come up with new arguments which were much longer :-)</p>",
        "id": 298584071,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1663075679
    },
    {
        "content": "<p>I'm trying to get competitive with <span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span> <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 298594339,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1663078346
    },
    {
        "content": "<p>I find that these are really underused, and instead often we do <code>cases</code> on <code>P \\or Q</code> and prove that one of the cases is contradictory, which although obviously valid feels... wrong, somehow</p>",
        "id": 298597148,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1663079163
    },
    {
        "content": "<p>I try to prove everything by rewriting nowadays, so if I'm in the middle of a <code>simp_rw</code> sequence, I just add <code>simp_rw [hnP, false_or]  at h</code>. Of course, sometimes you're in term mode, and then <code>resolve_left</code> and <code>resolve_right</code> can be nice.</p>",
        "id": 298743520,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1663151890
    }
]