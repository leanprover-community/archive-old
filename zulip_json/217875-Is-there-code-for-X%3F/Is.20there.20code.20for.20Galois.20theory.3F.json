[
    {
        "content": "<p>I didn't find the theorems of Galois theory in mathlib. Are there some difficulties to achieve these?</p>",
        "id": 201742397,
        "sender_full_name": "Keyao Peng",
        "timestamp": 1592926577
    },
    {
        "content": "<p>Mostly manpower</p>",
        "id": 201743083,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592926872
    },
    {
        "content": "<p>feel free to give it a shot, and post many questions here about the parts you find difficult</p>",
        "id": 201743328,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592926981
    },
    {
        "content": "<p>Yeah, I am new to Lean, but I'd like to have a try.</p>",
        "id": 201743684,
        "sender_full_name": "Keyao Peng",
        "timestamp": 1592927147
    },
    {
        "content": "<p>Adding Galois theory would be really great (and quite possible I think) <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> added <a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_independent_monoid_hom\">docs#linear_independent_monoid_hom</a> . From this, we can follow more of the reference <a href=\"https://kconrad.math.uconn.edu/blurbs/galoistheory/linearchar.pdf\">https://kconrad.math.uconn.edu/blurbs/galoistheory/linearchar.pdf</a> Kenny used to get the normal basis theorem it seems.</p>",
        "id": 201744230,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1592927433
    },
    {
        "content": "<p>You should ask <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span>  too</p>",
        "id": 201744251,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592927443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"297832\">@Jack J Garzella</span> Is also interested in doing this, I think.</p>",
        "id": 201744767,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592927617
    },
    {
        "content": "<p>Does mathlib have code for etale algebras?</p>",
        "id": 201744968,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1592927710
    },
    {
        "content": "<p>I suppose not.</p>",
        "id": 201744990,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1592927722
    },
    {
        "content": "<p>No</p>",
        "id": 201745041,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592927757
    },
    {
        "content": "<p>You can <code>git grep \"tale\"</code></p>",
        "id": 201745810,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592928090
    },
    {
        "content": "<p>There is an Imperial galois theory repo which was ticking along nicely but got held up at algebraic closures. <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> you've told me so many times now what the obstruction is. Something to do with category theory?</p>",
        "id": 201746485,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592928403
    },
    {
        "content": "<p>I think it's more the fact that we don't know how to deal with commutative diagrams</p>",
        "id": 201746761,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592928528
    },
    {
        "content": "<p>But Markus knows.</p>",
        "id": 201747737,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592929033
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260921\">@Markus Himmel</span>?</p>",
        "id": 201747753,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592929045
    },
    {
        "content": "<p>Unfortunately, I don't think my work helps here in its current form</p>",
        "id": 201749231,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1592929747
    },
    {
        "content": "<p>Is it getting closer to mathlib by the way?</p>",
        "id": 201749288,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592929780
    },
    {
        "content": "<p>Abelian categories have already landed, the rest is on its way but I'm busy with real-life things at the moment. I'm hoping to get back to PRing in 1-2 weeks.</p>",
        "id": 201749674,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1592929960
    },
    {
        "content": "<p>I think you should also write a paper if you haven't done so already.</p>",
        "id": 201749729,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592929994
    },
    {
        "content": "<p>Honestly, I don't think there is anything in my work that would warrant a paper.</p>",
        "id": 201749940,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1592930112
    },
    {
        "content": "<p>The automation part looks really new to me (but I'm not an expert).</p>",
        "id": 201750081,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592930186
    },
    {
        "content": "<p>How many computers have verified 5 line proofs of the four lemma?</p>",
        "id": 201750100,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592930201
    },
    {
        "content": "<p>I'm ignorant, of course, but I'm not aware of other provers have such automation</p>",
        "id": 201750121,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592930220
    },
    {
        "content": "<p>Maybe it's new, but it's really trivial. My tactic is essentially a dumber version of the <code>cc</code> tactic adapted to small commutative diagrams.</p>",
        "id": 201750537,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1592930411
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260921\">@Markus Himmel</span> my PhD thesis was really trivial once I completely understood it because I'd written it. This is a common trap to fall into. Just because you think it's trivial doesn't take away from the fact that you did it first. Publish!</p>",
        "id": 201750887,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592930583
    },
    {
        "content": "<p>Teach others how trivial it is! People can learn from your work.</p>",
        "id": 201750950,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592930606
    },
    {
        "content": "<p>Thank you for the advice. I'll look into what might be publishable when I finally start working on the tactic again, but there's lots of non-meta code to clean up and PR first.</p>",
        "id": 201752883,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1592931510
    },
    {
        "content": "<p>Do that too! It's so easy to lose interest in a project when you've \"made it over the line\". But actually there are more lines, and the longer you leave it, the harder it is to cross them, so the canonical thing to do is to prioritise the PRs and the write-up now.</p>",
        "id": 201753317,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592931727
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312543\">@Keyao Peng</span>  Yes, I've been working on Galois theory stuff, I am working on proving that all degree 2 extensions are normal. I think there are some relevant theorems of a similar flavor that wouldn't require algebraic closures, maybe we could brainstorm something for you to do if you want to get your feet wet.</p>",
        "id": 201771855,
        "sender_full_name": "Jack J Garzella",
        "timestamp": 1592940919
    },
    {
        "content": "<p>Is normal and separable and splitting field in mathlib?</p>",
        "id": 201772174,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592941109
    },
    {
        "content": "<p>I am working on separable. Normal is in galois repo.</p>",
        "id": 201772262,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592941181
    },
    {
        "content": "<p>What is galois repo?</p>",
        "id": 201772531,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1592941305
    },
    {
        "content": "<p>The private IC repo</p>",
        "id": 201772602,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592941323
    },
    {
        "content": "<p>I see, would be cool to know whats in there, I've also been sad we don't have any Galois theory recently. Would be a shame to duplicate effort!</p>",
        "id": 201772781,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1592941437
    },
    {
        "content": "<p>Does mathlib have the theorem that any field embeds in <em>some</em> algebraically closed field?</p>",
        "id": 201773894,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1592941940
    },
    {
        "content": "<p>No.</p>",
        "id": 201773974,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592941990
    },
    {
        "content": "<p>It has been discussed a lot, but never converged.</p>",
        "id": 201773989,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592942000
    },
    {
        "content": "<p>It also doesn't seem necessary to do Galois theory--the algebraic closure is not really unique anyways.</p>",
        "id": 201774174,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592942083
    },
    {
        "content": "<p>So you will always want to fix an algebraic closure, and then you no longer need an existence theorem.</p>",
        "id": 201774244,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592942118
    },
    {
        "content": "<p>I agree. But if you define the Galois category of finite etale covers of a field, you still need to choose a fibre functor to construct the Galois groups...</p>",
        "id": 201774272,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1592942132
    },
    {
        "content": "<p>Sure, at some distant point it's necessary, but anything that counts as undergraduate Galois theory can be done in the meantime.</p>",
        "id": 201774383,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592942167
    },
    {
        "content": "<p>Whats the status of <a href=\"https://github.com/leanprover-community/mathlib/pull/1297\">https://github.com/leanprover-community/mathlib/pull/1297</a> ?</p>",
        "id": 201774474,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1592942211
    },
    {
        "content": "<p>Given the age of this PR, it may be faster to restart from scratch.</p>",
        "id": 201775530,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592942705
    },
    {
        "content": "<p>over 1000 lines</p>",
        "id": 201776752,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592943405
    },
    {
        "content": "<p>How many refactors in the mean time?</p>",
        "id": 201776785,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592943423
    },
    {
        "content": "<p>over 10000 lines</p>",
        "id": 201776827,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592943462
    },
    {
        "content": "<p>I'm not familiar with the situation of mathlib, can't we use algebraic closure or something like this?</p>",
        "id": 201777481,
        "sender_full_name": "Keyao Peng",
        "timestamp": 1592943757
    },
    {
        "content": "<p>I believe that's the point</p>",
        "id": 201777539,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592943794
    },
    {
        "content": "<p>I think the PR is on hold because Chris wants to do it a different way.</p>",
        "id": 201778398,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592944185
    },
    {
        "content": "<p>Can I define a category of all algebraic extension of a field k?</p>",
        "id": 201778605,
        "sender_full_name": "Keyao Peng",
        "timestamp": 1592944280
    },
    {
        "content": "<p>I'm not really working on doing it any differently. It's almost done, it just needs a bundled hom refactor.</p>",
        "id": 201778988,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1592944444
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312543\">@Keyao Peng</span> yes. This could either be a large category, or could also be defined to be the small category of sub extensions of the algebraic closure.</p>",
        "id": 201779112,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1592944517
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110044\">Chris Hughes</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Is.20there.20code.20for.20Galois.20theory.3F/near/201779112\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"312543\">Keyao Peng</span> yes. This could either be a large category, or could also be defined to be the small category of sub extensions of the algebraic closure.</p>\n</blockquote>\n<p>but how to do it in Lean?</p>",
        "id": 201779320,
        "sender_full_name": "Keyao Peng",
        "timestamp": 1592944623
    },
    {
        "content": "<p>Do you know some similar projects?  I want to know how to define something like that in Lean.</p>",
        "id": 201780495,
        "sender_full_name": "Keyao Peng",
        "timestamp": 1592945198
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"297832\">Jack J Garzella</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Is.20there.20code.20for.20Galois.20theory.3F/near/201771855\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"312543\">Keyao Peng</span>  Yes, I've been working on Galois theory stuff, I am working on proving that all degree 2 extensions are normal. I think there are some relevant theorems of a similar flavor that wouldn't require algebraic closures, maybe we could brainstorm something for you to do if you want to get your feet wet.</p>\n</blockquote>\n<p>I'd like to. Maybe it will help me to understand how to do math in Lean.</p>",
        "id": 201781100,
        "sender_full_name": "Keyao Peng",
        "timestamp": 1592945461
    },
    {
        "content": "<p>You should probably avoid category theory in the beginning.</p>",
        "id": 201781205,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592945506
    },
    {
        "content": "<p>We do have a mini-tutorial for category theory in mathlib: <a href=\"https://github.com/leanprover-community/mathlib/blob/master/docs/tutorial/category_theory/intro.lean\">https://github.com/leanprover-community/mathlib/blob/master/docs/tutorial/category_theory/intro.lean</a> but it might be out of date.</p>",
        "id": 201782278,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1592945970
    },
    {
        "content": "<p>Hopefully it's not out of date. Category theory is not the place to start in lean really. There should be no problem doing these things but when working with stuff for which the API isn't ready for mathematicians there are complications</p>",
        "id": 201791669,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592951070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312543\">@Keyao Peng</span> Here's something that might not be too bad--you could try to formalize the result that a polynomial is irreducible if it is irreducible mod p. This is essential for many basic applications of Galois theory (e.g. an algebra qual) and I don't think it exists in mathlib (at least in this form)</p>",
        "id": 201804759,
        "sender_full_name": "Jack J Garzella",
        "timestamp": 1592963431
    },
    {
        "content": "<p>The reason the Galois theory repo was (and hence still is, at the time of writing) private was that I had initially hoped that a few Imperial undergraduates could knock off the entire course in the same way that they'd been demolishing 1st year course material, and it could be some little Imperial project. I made the private repo 2 years ago. I'll just check with the other people involved if they're happy to open it up, and then I'll make it public.</p>",
        "id": 201824096,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592988459
    }
]