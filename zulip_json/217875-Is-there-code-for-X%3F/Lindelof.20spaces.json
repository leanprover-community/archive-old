[
    {
        "content": "<p>I'm going to define these classes/predicates. Are there any preferences between the \"countable subcover\" definition and a filter-style definition like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_compact\">docs#is_compact</a> but assuming <a href=\"https://leanprover-community.github.io/mathlib_docs/find/countable_Inter_filter\">docs#countable_Inter_filter</a>?</p>",
        "id": 269209372,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643085936
    },
    {
        "content": "<p>I mean, which one should be the definition and which one should be an <code>iff</code> lemma?</p>",
        "id": 269209415,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643085963
    },
    {
        "content": "<p>(I don't care)</p>",
        "id": 269209420,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643085975
    },
    {
        "content": "<p>If there's no other reason to prefer one definition over the other then I would generally prefer to make the definition be the usual textbook definition (in this case, the \"countable subcover\" one)</p>",
        "id": 269262656,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643120284
    },
    {
        "content": "<p>That would be inconsistent with the definition of compactness.</p>",
        "id": 269263193,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1643120526
    },
    {
        "content": "<p>Yeah, that doesn't bother me.</p>",
        "id": 269264399,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643121081
    },
    {
        "content": "<p>I mean, for me this is a less important consideration than matching standard sources.</p>",
        "id": 269264611,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643121179
    },
    {
        "content": "<p>But if a definition in terms of filters means that it's easier to apply the substantive filter API, I think that's important. It's a fact of life that informal mathematics doesn't need to care about filters in topology/analysis. It's also a fact of life that they are a great tool in setting up a formal library in these subjects.</p>",
        "id": 269266026,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1643121812
    },
    {
        "content": "<p>I assume this is not relevant because Yury plans to have both formulations anyways, it is just a question of which one to label as the definition.</p>",
        "id": 269266532,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643121990
    },
    {
        "content": "<p>Setting up the API is relevant to setting up the API. What do you mean?</p>",
        "id": 269266935,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643122139
    },
    {
        "content": "<p>The <code>tfae</code> lemma will be among the first 10 lemmas about <code>is_lindelof</code> anyway.</p>",
        "id": 269267054,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643122189
    },
    {
        "content": "<p>And it doesn't matter which line of <code>tfae</code> is called <code>is_lindelof</code>.</p>",
        "id": 269267147,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643122219
    },
    {
        "content": "<p>/me is away for 3.5 hours (teaching)</p>",
        "id": 269267181,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643122236
    },
    {
        "content": "<p>What's special about the definition is that you can reach it by using jump-to-definition. We often say that one advantage of formalized mathematics is that you can find out what any term means by jumping to its definition. So it seems to me that the definition should be something easy to understand/align with your existing informal notion.</p>",
        "id": 269267229,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643122257
    },
    {
        "content": "<p>Of course there can be considerations which are more important than this one, but when defining a <code>Prop</code> there generally aren't.</p>",
        "id": 269267360,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643122317
    },
    {
        "content": "<p>That's a good point.</p>",
        "id": 269267361,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1643122321
    },
    {
        "content": "<p>On the other hand, perhaps the docstring can contain the informal notion and reference the lemma establishing equivalence while the definition itself can be less intuitively informally correct</p>",
        "id": 269267884,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1643122532
    },
    {
        "content": "<p>Our definition of compact certainly doesn't coincide with what's in the books. IIRC I've lied in a docstring before -- maybe <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.projective\">docs#module.projective</a> ? I gave some hideous definition but just said in the docstring that it was the usual one</p>",
        "id": 269371535,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1643181655
    },
    {
        "content": "<p>Come on Kevin, check your book.</p>",
        "id": 269372068,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1643182256
    },
    {
        "content": "<p>This is TG I.9.1 Définition 1</p>",
        "id": 269372105,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1643182305
    },
    {
        "content": "<p>Or maybe you mean we should write \"quasi-compact\".</p>",
        "id": 269372163,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1643182333
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"246273\">Bhavik Mehta</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Lindelof.20spaces/near/269267884\">said</a>:</p>\n<blockquote>\n<p>On the other hand, perhaps the docstring can contain the informal notion and reference the lemma establishing equivalence while the definition itself can be less intuitively informally correct</p>\n</blockquote>\n<p>If there's some compelling reason to choose a definition other than the \"standard\" one (e.g., if there are multiple equally standard informal definitions) then we should certainly have a docstring reference to lemmas that reinterpret the definition.</p>",
        "id": 269403949,
        "sender_full_name": "Reid Barton",
        "timestamp": 1643200917
    },
    {
        "content": "<p>I already wrote <code>tfae</code> based on the open subcover definition, and I don't want to rewrite it.</p>",
        "id": 269433328,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643212376
    },
    {
        "content": "<p>(it's not that difficult, just I'm lazy)</p>",
        "id": 269433403,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643212399
    },
    {
        "content": "<p>How should I name the following lemma? Of course, I can use <code>is_lindelof_of_strongly_lindelof_space</code> but I would prefer to have something short.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">name_me</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">strongly_lindelof_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">is_lindelof</span> <span class=\"n\">s</span>\n</code></pre></div>",
        "id": 269433738,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643212498
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Lindelof.20spaces/near/269433403\">said</a>:</p>\n<blockquote>\n<p>(it's not that difficult, just I'm lazy)</p>\n</blockquote>\n<p>Aren't you <a href=\"https://github.com/leanprover-community/mathlib/pull/1\">#1</a> on the list of PR people?? :-)</p>",
        "id": 269436649,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1643213408
    },
    {
        "content": "<p>This doesn't mean that I want to rewrite the code without a good reason.</p>",
        "id": 269437148,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643213605
    },
    {
        "content": "<p>Also, I have a sore throat and 2 kids at home. This reduces my productivity.</p>",
        "id": 269443125,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643215791
    },
    {
        "content": "<p>Get them to learn Lean. There's no problem, only solutions <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 269443242,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643215823
    },
    {
        "content": "<p>There is a dependency: to learn Lean, you need to learn the alphabet first. The dependency is not yet satisfied for one of them.</p>",
        "id": 269458425,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643221588
    },
    {
        "content": "<p>With Lindelöf spaces, we have the following possible instance loop:</p>\n<ul>\n<li><code>sigma_compact_space X → lindelof_space X</code>;</li>\n<li><code>lindelof_space X → locally_compact_space X → sigma_compact_space X</code>.</li>\n</ul>\n<p>Currently, the latter instance assumes <code>second_countable_topology X</code>, thus does not create a loop. Which of the two lemmas should be an instance?</p>",
        "id": 269495238,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643237724
    },
    {
        "content": "<p>Any reason to believe that either of the two will be used less than the other?</p>",
        "id": 269529934,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1643263862
    },
    {
        "content": "<p>I would guess sigma compact is more common. I hear of Lindelöf spaces very late, and I don't think I ever used that word before this sentence.</p>",
        "id": 269540147,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1643272871
    },
    {
        "content": "<p>Of course, <code>σ</code>-compact is more common. The question is which instance will be more useful. I suggest that we have instances for <code>sigma_compact_space X → lindelof_space X</code> and <code>second_countable_topology X → locally_compact_space X → sigma_compact_space X</code>. The latter instance is a 1-liner on top of a non-instance lemma <code>lindelof_space X → locally_compact_space X → sigma_compact_space X</code>.</p>",
        "id": 269595504,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643299835
    }
]