[
    {
        "content": "<p>I am trying to prove that a certain element <code>x</code> in the field of fractions of a ring <code>R</code> actually comes from the ring, so it can be written <code>f(x')</code> for some <code>x'</code> in the ring <code>R</code>, where <code>f</code> is the localisation map. \"Unfortunately\" the element <code>x'</code> I can produce (=the lemma I am <code>applying</code> can produce) is not only in <code>R</code> but also in an ideal <code>I &lt; R</code> and I am getting the following error<br>\n<code>invalid apply tactic, failed to unify\n  ∃ (x' : R), ⇑(localization_map.to_map f) x' = x\nwith\n  ∃ (x' : R) (H : x' ∈ I), ⇑(localization_map.to_map f) x' = x\n</code><br>\nI can circumvent the problem by creating some subgoal, but this looks weird: is there a <code>tactic</code> to \"forget\" a piece of information obtained by <code>applying</code> some lemma?</p>",
        "id": 210099972,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1600156364
    },
    {
        "content": "<p>I think the easiest is <code>obtain \\&lt;x, -, hx&gt; := blabla, exact \\&lt;x, hx&gt;</code></p>",
        "id": 210100182,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600156512
    },
    {
        "content": "<p>You could replace the <code>hx</code>s with <code>rfl</code> if you want.</p>",
        "id": 210100215,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600156539
    },
    {
        "content": "<p>But this instead of the <code>apply lemma_blabla</code>?</p>",
        "id": 210100702,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1600156829
    },
    {
        "content": "<p>I guess you could also try to use <code>exists_congr</code> but I don't think it's worth it.</p>",
        "id": 210100886,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600156934
    },
    {
        "content": "<p>And the <code>-</code> in the middle of the <code>obtain</code> is really a dash?</p>",
        "id": 210100945,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1600156988
    },
    {
        "content": "<p>yes</p>",
        "id": 210101104,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1600157099
    },
    {
        "content": "<p>Ok, thanks!</p>",
        "id": 210101123,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1600157110
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/suppress.20an.20hyptohesis/near/210100945\">said</a>:</p>\n<blockquote>\n<p>And the <code>-</code> in the middle of the <code>obtain</code> is really a dash?</p>\n</blockquote>\n<p>It's the thing that throws away the hypothesis, like you wanted. It's been added to mathlib like 2 weeks ago.</p>",
        "id": 210102751,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600158291
    },
    {
        "content": "<p>ah, ok: thanks! In these cases, is there a \"canonical\" place where to look at for news and implementation instructions (like what the exact syntax is, etc...)?</p>",
        "id": 210103278,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1600158709
    },
    {
        "content": "<p>I hope the docstring will tell you how to use it.</p>",
        "id": 210104161,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600159447
    },
    {
        "content": "<p>And for news... I think we don't have much besides the git commit log, and occasional announcements here on Zulip</p>",
        "id": 210104190,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600159473
    }
]