[
    {
        "content": "<p>Is there a characterisation of the subgroups of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/zmod\">docs#zmod</a>? What I need precisely is that for <code>n ≠ 0</code>, the smallest nontrivial subgroup of <code>zmod n</code> has size <code>n.min_fac</code>.</p>",
        "id": 318988648,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672664714
    },
    {
        "content": "<p>I would expect an <code>order_iso</code> between <code>subgroup (zmod n)</code> and <code>Icc 1 n</code> in the divisibility order.</p>",
        "id": 318995118,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672667059
    },
    {
        "content": "<p>Your first statement doesn't work for n=1 either but the last one works for all n if you add an op</p>",
        "id": 318995306,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672667147
    },
    {
        "content": "<p>Why adding an op? <code>Icc 1 n</code> admits an order-reversing isomorphism.</p>",
        "id": 318995526,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672667231
    },
    {
        "content": "<p>Not if n=0</p>",
        "id": 318995587,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672667255
    },
    {
        "content": "<p>Good point</p>",
        "id": 318995618,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672667272
    },
    {
        "content": "<p>You are using \"order of subgroup\" and I'm using \"smallest generator\"</p>",
        "id": 318995740,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672667319
    },
    {
        "content": "<p>The API for cyclic groups is pretty shambolic, sadly</p>",
        "id": 319012165,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1672672891
    },
    {
        "content": "<p>Do we have a type synonym for the divisibility preorder associated to a monoid, at least?</p>",
        "id": 319154703,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672738304
    },
    {
        "content": "<p>No, but we might have a def somewhere that makes the instance you want</p>",
        "id": 319155961,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672738811
    },
    {
        "content": "<p>A type synonym sounds like a good idea though</p>",
        "id": 319155998,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1672738827
    }
]