[
    {
        "content": "<p>Consider the type of maps from nat to bool. Given a subset S of this type, you get a two-player game. Two players, Odd and Even, alternately choose booleans and build a function, and player one (Even, choosing f(0)) wins iff the resulting function is in S. For some subsets S, one player has a winning strategy: these games are called <em>determined</em>. For a random S there will be no winning strategy for either player, assuming the axiom of choice (the axiom of determinacy is the statement that all games are determined and I believe it is consistent with ZF but contradicts choice).</p>\n<p>Now X := nat -&gt; bool is an infinite product of bools and if we regard these bools as having the discrete topology, X gets product topology. Open determinacy is the theorem that if S is an open set then some player has a winning strategy. The proof is that a basic open set contains Y -&gt; bool for a cofinite set Y and moves numbered in Y have no effect on the outcome, so the game is essentially finite and so someone has a winning strategy by brute force.</p>\n<p>Borel determinacy is a cool result in this area. It says that if S is a Borel set in the sense of topology then some player has a winning strategy. I remember going through the proof when I was a grad student.</p>\n<p>We don't have any of this kind of logic stuff as far as I know. I gave a talk \"about mathlib\" yesterday (I posted the slides on Twitter) and during the discussion afterwards a logician asked if we had a proof of this and said it was an interesting result because of some theorem saying that you can't prove it without some kind of induction up to omega_1. It reminded me of Sebastien's talk in Pittsburgh which also contained such an induction which he did with clever use of an inductive type. Can a similar trick be used here?</p>",
        "id": 197785223,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589619318
    },
    {
        "content": "<p>I expect so, although it's hard to say without details of the proof</p>",
        "id": 197785981,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589620346
    },
    {
        "content": "<p>from a purely logical point of view, lean has the power to do transfinite induction to omega_1 and far beyond</p>",
        "id": 197785996,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589620380
    },
    {
        "content": "<p>Isn't this the proof of open determinacy? \"assume player one cannot guarantee a win in any finite number of moves. Then player two has a strategy that preserves this. After using this strategy, player one did not win after finitely many moves. Since S is open, player one did not win.\"</p>",
        "id": 197786562,
        "sender_full_name": "David Wärn",
        "timestamp": 1589621247
    },
    {
        "content": "<p>The main argument of <a href=\"https://www.math.ucla.edu/~dam/booketc/purely_inductive.pdf\">https://www.math.ucla.edu/~dam/booketc/purely_inductive.pdf</a> (page 6) is a strong induction on the Borel rank. That is, the inductive hypothesis is applied not to the \"components\" of the set under consideration, but different Borel sets (in fact, Borel sets in different ambient spaces) of equal Borel rank. However, there is still a trick to avoid working directly with ordinals which applies here.</p>",
        "id": 197787877,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589623204
    },
    {
        "content": "<p>It's the method I used in <a href=\"https://gist.github.com/rwbarton/201fa67f590e2932808032343bfab9cc\">https://gist.github.com/rwbarton/201fa67f590e2932808032343bfab9cc</a><br>\nBasically, create a new inductive type <code>borel_rank</code> which has the same structure as the inductive prop which defines Borel-ness, but without any of its data fields, and then prove a theorem of the form \"for all <code>r : borel_rank</code>, for all Borel sets which can be constructed using a proof whose shape agrees with <code>r</code>, ...\" by induction on <code>r</code>.</p>",
        "id": 197787994,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589623412
    },
    {
        "content": "<p>A theme is that these transfinite induction arguments need to induct on something well-founded (of course) and of sufficiently high cofinality (in the case of Borel sets, we can build a new Borel set out of countably many old Borel sets so every countable set of stages in our induction must have an upper bound). However, inducting on a <em>total</em> order is frequently not necessary. If you also require that the order is total, then you have an ordinal (of sufficiently high cofinality). Classically there is no shortage of these (and so it is also possible to emulate this argument in Lean) but even in ZF there might not be any ordinal of uncountable cofinality, and in any case the argument with ordinals might be annoying to formalize. Without the total condition, you can just write down an auxiliary inductive type with the required properties.</p>",
        "id": 197789142,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589625110
    },
    {
        "content": "<p>So <code>borel_rank</code> plays the role of countable ordinals, to index what Martin calls <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">Σ</mi><mi>α</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\Sigma_\\alpha</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">Σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, but is not totally ordered?</p>",
        "id": 197789304,
        "sender_full_name": "David Wärn",
        "timestamp": 1589625362
    },
    {
        "content": "<p>Exactly</p>",
        "id": 197789345,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589625409
    },
    {
        "content": "<p>A corollary is that this sort of argument does not need choice, since you can also build the required W-type in ZF</p>",
        "id": 197789374,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589625464
    },
    {
        "content": "<p>(I imagine choice is used in the rest of the proof of Borel determinacy, though.)</p>",
        "id": 197789430,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589625506
    },
    {
        "content": "<p>I guess you can also skip the indexing and the define the inductive type <code>borel_level_family</code> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">Σ</mi><mi>α</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\Sigma_\\alpha</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">Σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 's directly</p>",
        "id": 197789444,
        "sender_full_name": "David Wärn",
        "timestamp": 1589625569
    },
    {
        "content": "<p>I guess I should be a little careful about saying you don't need choice because you might need it to get back to the exact definition of Borel set you started with.</p>",
        "id": 197789526,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589625704
    },
    {
        "content": "<p>I'm not sure I follow what you are suggesting, could you elaborate?</p>",
        "id": 197789573,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589625755
    },
    {
        "content": "<p>The way I think I know to do this is to define <code>borel_rank</code> first, and then define the proposition \"has Borel rank <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span>\" either by recursion on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span> (assuming you have a universe) or as an inductive family indexed on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span>.</p>",
        "id": 197789658,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589625936
    },
    {
        "content": "<p>Er, of course you don't need a universe to define a proposition, sorry (was thinking about a different context).</p>",
        "id": 197789740,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589626041
    },
    {
        "content": "<p>If you define the proposition by recursion then I think you will need choice to prove that for any original Borel set, there exists a rank such that the set has that rank (compare <a href=\"https://gist.github.com/rwbarton/201fa67f590e2932808032343bfab9cc#file-colimit_closure-lean-L167\">https://gist.github.com/rwbarton/201fa67f590e2932808032343bfab9cc#file-colimit_closure-lean-L167</a>)</p>",
        "id": 197789864,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589626224
    },
    {
        "content": "<p>I was thinking of something along these lines: say we want to do this strong induction on Borel subsets of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span>. Define an inductive prop <code>is_borel_level_family : set X -&gt; Prop</code>, with introduction rules \"the family of open subsets is a Borel level family\", \"a countable union of Borel level families is a Borel level family\", and \"the 'successor' of a Borel level family is a Borel level family\", where the successor is obtained by countable unions and complements from the previous stage. Then the default induction principle for this Prop is hopefully what we need? And afterwards you should be able to prove that any Borel set is in some Borel level family</p>",
        "id": 197789870,
        "sender_full_name": "David Wärn",
        "timestamp": 1589626232
    },
    {
        "content": "<p>Interesting</p>",
        "id": 197789872,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589626258
    },
    {
        "content": "<p>You don't mean \"a countable union of Borel level families\", but rather \"the family <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span></span></span></span> obtained from a countable set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">B_i</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> of Borel level families defined by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mo>⋃</mo><msub><mi>V</mi><mi>i</mi></msub><mo>∣</mo><msub><mi>V</mi><mn>1</mn></msub><mo>∈</mo><msub><mi>B</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>V</mi><mn>2</mn></msub><mo>∈</mo><msub><mi>B</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">B = \\{\\bigcup V_i \\mid V_1 \\in B_1, V_2 \\in B_2, ...\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mopen\">{</span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">⋃</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mclose\">}</span></span></span></span> is a Borel level family\", I think.</p>",
        "id": 197789953,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589626382
    },
    {
        "content": "<p>Oh whoops I should have read to the end of the sentence first--that's the successor case</p>",
        "id": 197789971,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589626427
    },
    {
        "content": "<p>Or rather, it's both at once</p>",
        "id": 197790048,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589626525
    },
    {
        "content": "<p>Yes, it would be in the successor of the countable union</p>",
        "id": 197790174,
        "sender_full_name": "David Wärn",
        "timestamp": 1589626721
    },
    {
        "content": "<p>To be clear I haven't read Martin's proof so I'm not sure exactly what kind of induction it uses</p>",
        "id": 197790188,
        "sender_full_name": "David Wärn",
        "timestamp": 1589626763
    },
    {
        "content": "<p>Well the way it's presented there is to prove some statement <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(\\alpha)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span></span></span></span> by strong induction on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mo>&lt;</mo><msub><mi>ω</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha &lt; \\omega_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(\\alpha)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span></span></span></span> has the form \"for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and all Borel subsets <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> of Borel rank <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span>, ...\"</p>",
        "id": 197790328,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589626949
    },
    {
        "content": "<p>And you need for example that if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>:</mo><msup><mi>X</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup><mo>→</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">p : X' \\to X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is continuous and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo>⊂</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">Y \\subset X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> has Borel rank <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.0037em;\">α</span></span></span></span> then so does <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>p</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">(</mo><mi>Y</mi><mo stretchy=\"false\">)</mo><mo>⊂</mo><msup><mi>X</mi><mo lspace=\"0em\" mathvariant=\"normal\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">p^{-1}(Y) \\subset X'</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.751892em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 197790385,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589627078
    },
    {
        "content": "<p>But maybe that means you just need to adapt <code>is_borel_level_family</code> to have a type like <code>is_borel_level_family : (\\Pi X, set (set X)) -&gt; Prop</code></p>",
        "id": 197790457,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589627195
    },
    {
        "content": "<p>I think this also works. It's a bit mind-bending!</p>",
        "id": 197790715,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589627577
    },
    {
        "content": "<p>First you do induction on the <code>is_borel_level_family</code> hypothesis to find out what your actual hypothesis <em>is</em>, and then you do induction on the proof of that hypothesis.</p>",
        "id": 197790729,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589627621
    },
    {
        "content": "<p>Oh, I didn't realise there were multiple <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> s involved</p>",
        "id": 197790730,
        "sender_full_name": "David Wärn",
        "timestamp": 1589627623
    },
    {
        "content": "<p>Yes, it's slightly frustrating to read the paper because it just says things like \"a set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span></span></span></span> of finite sequences\" and then my brain asks \"of what?\"</p>",
        "id": 197790783,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589627675
    },
    {
        "content": "<p>Of course the answer is \"of sets\", but in type theory I think it would be of a type that is different at different points of the argument</p>",
        "id": 197790807,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589627750
    },
    {
        "content": "<p>And in particular, it is changing in applications of the inductive hypothesis.</p>",
        "id": 197790851,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589627770
    },
    {
        "content": "<p>Now I am wondering whether it is possible to prove the fact about the closure under colimits from the gist I linked earlier without using choice.</p>",
        "id": 197790980,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589628052
    },
    {
        "content": "<p>I'll try writing down these different approaches to Borel sets and see what happens.</p>",
        "id": 197790997,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589628093
    },
    {
        "content": "<p>So far I have <a href=\"https://gist.github.com/rwbarton/f5846712370a0064b03dc9c2b44372bb\">https://gist.github.com/rwbarton/f5846712370a0064b03dc9c2b44372bb</a><br>\nIf I didn't mess anything up, all of these descriptions should be equivalent assuming choice; I'm not sure which ones are equivalent in the absence of choice. Actually, it now seems to me that many of them could be inequivalent. I somewhat arbitrarily wrote lemma statements saying that each is equivalent to the previous but that might not be the best organization.</p>",
        "id": 197792568,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589630756
    },
    {
        "content": "<p>I tried to make all the descriptions as parallel as possible, to make the general form obvious. So the definition of level families is a bit different than the description you gave.</p>",
        "id": 197792689,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589630935
    },
    {
        "content": "<p>Ah, maybe I should try to define being a level family and membership in the family simultaneously somehow... is that possible?</p>",
        "id": 197792785,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589631110
    },
    {
        "content": "<p>My problem is: suppose I want to prove <code>borel_ind s → ∃ r, borel_ranked_ind r s</code>. Obviously I'm going to have to induct, and use the inductive hypothesis, but then I only get a statement like <code>∀ i, ∃ r, ...</code> and I need choice to turn this into the <code>r : ℕ → borel_rank</code> to pass to <code>borel_rank.union</code>.</p>",
        "id": 197792998,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589631376
    },
    {
        "content": "<p>The more I think about it, the more I think this implication is actually false without choice.</p>",
        "id": 197793740,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589632505
    },
    {
        "content": "<p>That's okay as a practical matter (it's a lot easier to use choice this way than to encode things using ordinals), though.</p>",
        "id": 197793794,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589632607
    },
    {
        "content": "<p>This looks about right</p>",
        "id": 197795936,
        "sender_full_name": "David Wärn",
        "timestamp": 1589636018
    },
    {
        "content": "<p>Even if you used ordinals for indexing, wouldn't you still need choice to prove that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>ω</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\omega_1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">ω</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> has uncountable cofinality?</p>",
        "id": 197796010,
        "sender_full_name": "David Wärn",
        "timestamp": 1589636094
    },
    {
        "content": "<p>Yes</p>",
        "id": 197796226,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589636415
    },
    {
        "content": "<p>So in this approach the role of choice is more transparent, I think: to show that every Borel set has a rank.</p>",
        "id": 197796245,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589636467
    },
    {
        "content": "<p>The more I think about it the more I like this <code>borel_rank</code> approach! It's nice that it avoids universes and also that it just mirrors the definition of Borelness</p>",
        "id": 197796986,
        "sender_full_name": "David Wärn",
        "timestamp": 1589637669
    }
]