[
    {
        "content": "<p>I have a proof for the result (and analogous for lcm and max), </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.nat.gcd</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">multiplicity_gcd</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p.prime</span><span class=\"o\">):</span>\n  <span class=\"n\">multiplicity</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">nat.gcd</span> <span class=\"n\">m</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">multiplicity</span> <span class=\"n\">p</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">multiplicity</span> <span class=\"n\">p</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span><span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I think is not in mathlib. I did it to practice and because I need it for a project.</p>",
        "id": 279918505,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1650708278
    },
    {
        "content": "<p>Seems worth adding</p>",
        "id": 279926174,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1650719848
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"315546\">@Xavier Xarles</span> are you saying you have a proof? Please feel free to add it if it's not there!</p>",
        "id": 279928889,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650723891
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/multiplicity_gcd/near/279928889\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"315546\">Xavier Xarles</span> are you saying you have a proof? Please feel free to add it if it's not there!</p>\n</blockquote>\n<p>I am not sure how to do it. I will talk with Marc Masdeu and ask him... On the other hand, I will ask also to help me to put in a more mathlib form...</p>",
        "id": 279938433,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1650737357
    },
    {
        "content": "<p>I have this lemma in some file for the unit fractions project, I agree its useful</p>",
        "id": 279939069,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1650738249
    },
    {
        "content": "<p>I would like to make a PR on that. My GitHub is @XavierXarles.</p>",
        "id": 281593435,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1652007860
    },
    {
        "content": "<p>I've sent you an invitation</p>",
        "id": 281593472,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1652007954
    },
    {
        "content": "<p>Is this the same as <a href=\"https://leanprover-community.github.io/mathlib_docs/find/factorization_gcd\">docs#factorization_gcd</a>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">factorization_gcd</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ha_pos</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb_pos</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">gcd</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">factorization</span> <span class=\"bp\">=</span> <span class=\"n\">a.factorization</span> <span class=\"bp\">⊓</span> <span class=\"n\">b.factorization</span>\n</code></pre></div>",
        "id": 281606879,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1652026976
    },
    {
        "content": "<p>But we don't have the corresponding lemma for <code>lcm</code> and <code>⊔</code>.</p>",
        "id": 281606971,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1652027080
    }
]