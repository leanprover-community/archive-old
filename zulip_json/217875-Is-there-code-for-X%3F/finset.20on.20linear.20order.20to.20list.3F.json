[
    {
        "content": "<p>Hey, is there some api around something like this? Thanks!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">finset</span>\n\n<span class=\"kd\">variables</span>  <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">linear_order</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">s'</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">≤</span> <span class=\"n\">t</span><span class=\"o\">)</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">to_sorted_list</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">to_sorted_list_sorted</span> <span class=\"o\">:</span> <span class=\"n\">s.to_sorted_list.pairwise</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">to_sorted_list_mono</span> <span class=\"o\">:</span> <span class=\"n\">s.to_sorted_list</span> <span class=\"bp\">&lt;+</span> <span class=\"n\">t.to_sorted_list</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">to_sorted_list_strictly_sorted</span> <span class=\"o\">:</span> <span class=\"n\">s.to_sorted_list.pairwise</span> <span class=\"o\">(</span><span class=\"bp\">&lt;</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">to_sorted_list_union</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">\\</span><span class=\"n\">cup</span> <span class=\"n\">s'</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">to_sorted_list</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">s.to_sorted_list</span> <span class=\"bp\">++</span> <span class=\"n\">s'.to_sorted_list</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sort</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">to_sorted_list_sep_union</span> <span class=\"o\">(</span><span class=\"n\">h'</span> <span class=\"o\">:</span> <span class=\"bp\">\\</span><span class=\"k\">forall</span> <span class=\"n\">x</span> <span class=\"bp\">\\</span><span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"bp\">\\</span><span class=\"k\">forall</span> <span class=\"n\">y</span> <span class=\"bp\">\\</span><span class=\"k\">in</span> <span class=\"n\">s'</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">\\</span><span class=\"n\">cup</span> <span class=\"n\">t</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">to_sorted_list</span> <span class=\"bp\">=</span> <span class=\"n\">s.to_sorted_list</span> <span class=\"bp\">++</span> <span class=\"n\">s'.to_sorted_list</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">finset</span>\n</code></pre></div>",
        "id": 318410788,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1672317556
    }
]