[
    {
        "content": "<p>for <code>p : ℝ[X]</code>, do we have anything like <code>p.derivative.root_multiplicity t = p.root_multiplicity  t - 1</code>? (for <code>t </code> a root, of course)</p>",
        "id": 275881737,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647653928
    },
    {
        "content": "<p>isn't it also true for <code>t</code> not a root? <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 275903672,
        "sender_full_name": "Reid Barton",
        "timestamp": 1647686986
    },
    {
        "content": "<p>(Most of the times, at least! <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> )</p>",
        "id": 275904562,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1647688201
    },
    {
        "content": "<p>if <code>t</code> isn't a root but it is a critical point it doesn't hold sadly</p>",
        "id": 275905664,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647689674
    },
    {
        "content": "<p>oh</p>",
        "id": 275905953,
        "sender_full_name": "Reid Barton",
        "timestamp": 1647690086
    },
    {
        "content": "<p>Actually, one inequality always holds, right?  <code>p.root_multiplicity t - 1 ≤ p.derivative.root_multiplicity t</code>, I think.</p>",
        "id": 275906822,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1647691181
    },
    {
        "content": "<p>I'm never sure whether I like it or not when Lean's <code>-</code> seems to have better lemmas than the \"correct\" <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo></mrow><annotation encoding=\"application/x-tex\">-</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">−</span></span></span></span>!</p>",
        "id": 275908266,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1647693068
    },
    {
        "content": "<p><code>∀ n : ℕ, -1 ≤ n</code> so we're all <del>clear</del> good ;b (e: idioms...)</p>",
        "id": 275908334,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647693185
    },
    {
        "content": "<p>Very clear!  What I haven't really accepted is that in Lean, the inequality is sometimes realized as an equality.</p>",
        "id": 275908511,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1647693473
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/multiplicity.20of.20derivative/near/275881737\">said</a>:</p>\n<blockquote>\n<p>for <code>p : ℝ[X]</code>, do we have anything like <code>p.derivative.root_multiplicity t = p.root_multiplicity  t - 1</code>? (for <code>t </code> a root, of course)</p>\n</blockquote>\n<p>\"fun\" fact - this doesn't hold even for fields, and I should've known it from flt-regular! <code>X^p - 1 = (X - 1)^p</code> has multiplicity <code>p</code> in <code>zmod p</code>, but its derivative <code>pX^(n-1) = 0</code> has multiplicity zero</p>",
        "id": 275972863,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647790894
    },
    {
        "content": "<p>i'm just going to stick a char-zero assumption and be done with it...</p>",
        "id": 275972868,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647790911
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/12856\">#12856</a></p>",
        "id": 276039139,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647863827
    }
]