[
    {
        "content": "<p>If <code>R</code> and <code>S</code> are rings then the group of units of <code>R × S</code> is isomorphic to <code>units R × units S</code>. Moreover, if <code>R</code> and <code>S</code> are topological rings, then this is an isomorphism of topological groups. Do we have this in mathlib? I.e., do we have something equivalent to</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.algebra.ring</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>  <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">S</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">prod_units.mul_equiv</span> <span class=\"o\">:</span> <span class=\"n\">mul_equiv</span> <span class=\"o\">(</span><span class=\"n\">units</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"bp\">×</span> <span class=\"n\">S</span><span class=\"o\">))</span> <span class=\"o\">((</span><span class=\"n\">units</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">×</span> <span class=\"o\">(</span><span class=\"n\">units</span> <span class=\"n\">S</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">[</span> <span class=\"n\">topological_space</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_ring</span> <span class=\"n\">S</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">prod_units.homeo</span> <span class=\"o\">:</span> <span class=\"n\">homeomorph</span> <span class=\"o\">(</span><span class=\"n\">units</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"bp\">×</span> <span class=\"n\">S</span><span class=\"o\">))</span> <span class=\"o\">((</span><span class=\"n\">units</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">×</span> <span class=\"o\">(</span><span class=\"n\">units</span> <span class=\"n\">S</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">continuous_to_fun</span>  <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">continuous_inv_fun</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span><span class=\"n\">prod_units.mul_equiv</span> <span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>Otherwise I have a version of this I could PR.</p>",
        "id": 264561215,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1639227136
    },
    {
        "content": "<p>Note that this should be true for monoids, not necessary rings.</p>",
        "id": 264561323,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639227299
    },
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mul_equiv.prod_units\">docs#mul_equiv.prod_units</a></p>",
        "id": 264561344,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639227330
    },
    {
        "content": "<p>The <code>homeomorph</code> version is not here, and it should go to <code>topology.algebra.monoid</code>.</p>",
        "id": 264561409,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639227402
    },
    {
        "content": "<p>Thanks! I'll adapt my homeomorph proof using <code>mul_equiv.prod_units</code> (and monoids) and PR it.</p>",
        "id": 264562144,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1639228329
    },
    {
        "content": "<p>I think this should go to <code>topology.algebra.group</code>.</p>",
        "id": 264576501,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1639246761
    }
]