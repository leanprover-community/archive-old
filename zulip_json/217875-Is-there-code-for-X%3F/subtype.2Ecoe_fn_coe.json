[
    {
        "content": "<p>Do we have a lemma unfolding <a href=\"https://leanprover-community.github.io/mathlib_docs/find/coe_fn_trans\">docs#coe_fn_trans</a> anywhere?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">subtype.coe_fn_coe</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Sort</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">subtype</span> <span class=\"n\">p</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">has_coe_to_fun</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">)]</span> <span class=\"o\">:</span>\n  <span class=\"bp\">⇑</span><span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</code></pre></div>",
        "id": 273481551,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646051315
    },
    {
        "content": "<p>Ah, it's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/coe_fn_coe_trans\">docs#coe_fn_coe_trans</a>. Is there a reason that's not <code>simp</code>?</p>",
        "id": 273481933,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646051486
    },
    {
        "content": "<p>IIRC, <code>coe_fn_coe_trans</code> and <code>coe_fn_coe_base</code> didn't work with <code>simp</code> because the dependent function type is too high-order to infer, so we (Yury and I) had to add <a href=\"https://leanprover-community.github.io/mathlib_docs/find/coe_fn_coe_trans'\">docs#coe_fn_coe_trans'</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/coe_fn_coe_base'\">docs#coe_fn_coe_base'</a>.</p>",
        "id": 273485737,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1646053570
    },
    {
        "content": "<p>According to <a href=\"https://github.com/leanprover-community/mathlib/pull/2066\">#2066</a>, <code>coe_fn_coe_trans</code> was a duplicate simp lemma and got removed.</p>",
        "id": 273486017,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1646053785
    }
]