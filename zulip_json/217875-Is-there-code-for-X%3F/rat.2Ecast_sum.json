[
    {
        "content": "<p>When considering limits of finite sums of rational numbers, which might converge to some non-rational real number, I was expecting to find <code>rat.cast_sum</code>, having found <a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/big_operators/basic.html#nat.cast_sum\">nat.cast_sum</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/big_operators/basic.html#int.cast_sum\">int.cast_sum</a></p>\n<p>Would something like the following be a  useful to have in mathlib?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n<span class=\"kd\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">w</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">}</span>\n\n<span class=\"kd\">@[simp, norm_cast]</span> <span class=\"kd\">lemma</span> <span class=\"n\">rat.cast_sum</span> <span class=\"o\">[</span><span class=\"n\">division_ring</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">char_zero</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"o\">(</span><span class=\"n\">rat.cast_hom</span> <span class=\"n\">β</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map_sum</span> <span class=\"n\">f</span> <span class=\"n\">s</span>\n</code></pre></div>",
        "id": 286665705,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1655578965
    },
    {
        "content": "<p>Oh wait I have it on a branch ready to PR and... I didn't open it.</p>",
        "id": 286672065,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655587880
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/exact_mod_cast.20within.20sums/near/283161541\">Indeed</a></p>",
        "id": 286672270,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1655588197
    },
    {
        "content": "<p>Exam time really do be emptying your mind, huh</p>",
        "id": 286672988,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655589371
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/rat.2Ecast_sum/near/286672065\">said</a>:</p>\n<blockquote>\n<p>Oh wait I have it on a branch ready to PR and... I didn't open it.</p>\n</blockquote>\n<p>Nice! Do you plan to open the PR soon?</p>",
        "id": 286673492,
        "sender_full_name": "Moritz Firsching",
        "timestamp": 1655590137
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/14824\">#14824</a>, sorry for the month delay!</p>",
        "id": 286707641,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655642186
    },
    {
        "content": "<p>Yaël, are you trying to develop a reputation as the Gauss of mathlib? <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 286718673,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1655657083
    }
]