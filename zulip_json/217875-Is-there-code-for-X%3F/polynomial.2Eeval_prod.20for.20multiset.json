[
    {
        "content": "<p>I don't find the analogue of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.eval_prod\">docs#polynomial.eval_prod</a> for multiset. Is this my fault or it is really missing?</p>",
        "id": 260272286,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1636034120
    },
    {
        "content": "<p>I'd say its not there, else the version you link to would be a one line proof as <code>multiset.eval_prod _</code></p>",
        "id": 260272707,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636034297
    },
    {
        "content": "<p>Let's prove it :)</p>",
        "id": 260272765,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1636034330
    },
    {
        "content": "<p>Well, it's not there but the statement is longer than the proof <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.polynomial.eval</span>\n\n<span class=\"kd\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">polynomial</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">multiset</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">eval_prod_multiset</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ι</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">eval</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">multiset.map</span> <span class=\"n\">p</span> <span class=\"n\">s</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prod</span> <span class=\"bp\">=</span>\n  <span class=\"o\">(</span><span class=\"n\">multiset.map</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">eval</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"n\">s</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prod</span> <span class=\"o\">:=</span>\n<span class=\"n\">multiset.induction_on</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">])</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">polynomial</span>\n</code></pre></div>",
        "id": 260275227,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1636035399
    },
    {
        "content": "<p>Or you can use <code>(polynomial.eval_ring_hom x).map_multiset_prod</code>.</p>",
        "id": 260278999,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1636036949
    },
    {
        "content": "<p>Nice!</p>",
        "id": 260281317,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1636037767
    }
]