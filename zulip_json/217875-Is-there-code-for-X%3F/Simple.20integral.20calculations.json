[
    {
        "content": "<p>Now that we have FTC-2, I wanted to discover and experiment a bit with mathlib's integration. I started by calculating some very simple integrals using FTC-2. These are really just direct application of FTC-2 + existing facts on derivative, but I was still suprised not to find e.g <code>∫ x in a..b, x ^ n</code> inside mathlib. Does it exist somewhere ? Is someone working on proving some classical integrals ? If not, I'd be happy to clean and generalize my proofs and then make a PR</p>",
        "id": 225656938,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1612859257
    },
    {
        "content": "<p>I'd be very happy to have those. You should probably coordinate with <span class=\"user-mention\" data-user-id=\"314430\">@Benjamin Davidson</span>.</p>",
        "id": 225658896,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1612860645
    },
    {
        "content": "<p>I've written a few of these already but had put it on hold due to <a href=\"#narrow/stream/116395-maths/topic/What's.20new.20in.20Lean.20maths.3F/near/221499824\">this discussion</a> in \"Whats new in Lean maths\" regarding doing them by <code>compute</code>. If they're wanted I'd be glad to work on them.</p>",
        "id": 225659839,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1612861201
    },
    {
        "content": "<p>Oh I see, I'm late to the party <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 225661521,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1612862165
    },
    {
        "content": "<p>Oh, it looks like we never added <code>integral_deriv_eq_sub'</code> and the <code>continuous</code> attribute on <code>continuous_sin</code> from that thread either!</p>",
        "id": 225694670,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1612879905
    },
    {
        "content": "<p>I can put that together later this week. <span class=\"user-mention\" data-user-id=\"268315\">@Anatole Dedecker</span> would you like to collaborate?</p>",
        "id": 225764183,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1612907915
    },
    {
        "content": "<p>Yes of course ! I don't have time for Lean today, but I'd be happy to help after that</p>",
        "id": 225804283,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1612944363
    },
    {
        "content": "<p>I've been working on these and was wondering where they would go once they're ready. For example, does</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">integral_sin</span> <span class=\"o\">:</span> <span class=\"bp\">∫</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">a..b</span><span class=\"o\">,</span> <span class=\"n\">sin</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">cos</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">cos</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>belong in <code>measure_theory.interval_integral</code> (which would require an import), in <code>analysis.special_functions.trigonometric</code>, or somewhere else entirely?</p>",
        "id": 226279929,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1613267183
    },
    {
        "content": "<p><code>analysis.special_functions.trigonometric</code> contains theorems about measurability of sin, as well as the derivative of sin, so it seems like a good place to put the integral too</p>",
        "id": 226279992,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1613267284
    },
    {
        "content": "<p>Although your theorem looks like a special case of a theorem about antiderivatives with only one <code>cos</code> on the rhs</p>",
        "id": 226280018,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1613267378
    },
    {
        "content": "<p>Sorry, I'm not sure what you mean by that.</p>",
        "id": 226280205,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1613267659
    },
    {
        "content": "<p>something like <code>deriv g = f -&gt; \\int x in a..b, f x = g b - g a</code></p>",
        "id": 226280226,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1613267724
    },
    {
        "content": "<p>maybe it's not a perfect fit for this lemma, but it should at least make the proof a one-liner</p>",
        "id": 226280273,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1613267773
    },
    {
        "content": "<p>Oh, I'll be adding a lemma like that. And it does make the proof of <code>integral_sin</code> a one-liner.</p>",
        "id": 226280332,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1613267886
    },
    {
        "content": "<p>So I will put integrals of special functions in their corresponding files; i.e. integrals of trigonometric functions in <code>analysis.special_functions.trigonometric</code>, integral of <code>exp</code> in <code>analysis.special_functions.exp_log</code>... okay?</p>",
        "id": 226280415,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1613268069
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> It seems that with <a href=\"https://github.com/leanprover-community/mathlib/issues/6058\">#6058</a> this will no longer be possible, since <code>measure_theory.interval_integral</code> now imports the <code>analysis.special_functions</code> files.<br>\nWhat do you suggest instead?</p>",
        "id": 226672753,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1613575702
    },
    {
        "content": "<p>hmm, at first sight I would think that import should be the other way round. Can we reorganise some lemmas?</p>",
        "id": 226673557,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613575991
    },
    {
        "content": "<p>That's what I thought, too, hence my plan to import <code>measure_theory.interval_integral</code> into <code>analysis.special_functions.exp_log</code>. But I don't have any idea as to how to possibly resolve this issue.</p>",
        "id": 226674389,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1613576303
    },
    {
        "content": "<p>I think it's rather fundamental.  The Bochner integral is now constructed as a special case of L^1 and a special special case of L^p, so powers have to be imported into it.</p>",
        "id": 226677616,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1613577460
    },
    {
        "content": "<p>Perhaps just add a separate file <code>analysis.special_functions.integrals</code> which imports <code>interval_integral</code>.</p>",
        "id": 226677759,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1613577506
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Simple.20integral.20calculations/near/226677759\">said</a>:</p>\n<blockquote>\n<p>Perhaps just add a separate file <code>analysis.special_functions.integrals</code> which imports <code>interval_integral</code>.</p>\n</blockquote>\n<p>I'm satisfied with this solution.</p>",
        "id": 226700963,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1613585895
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/6216\">#6216</a></p>",
        "id": 226921518,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1613711565
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"314430\">@Benjamin Davidson</span> wow, those examples look great!</p>",
        "id": 226923635,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613714365
    },
    {
        "content": "<p>As long as Lean couldn't do those integrals by itself it looked pretty silly of course. I think this is a very nice milestone!</p>",
        "id": 226923677,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613714404
    },
    {
        "content": "<p>Cheers!</p>",
        "id": 226929722,
        "sender_full_name": "Benjamin Davidson",
        "timestamp": 1613721064
    },
    {
        "content": "<p>That is great! Many thanks! I'll tell the undergraduates they can do their calculus homework in Lean :-)</p>",
        "id": 226931245,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1613722080
    },
    {
        "content": "<p>Presumably you can actually do interactive computation here (i.e. actually <em>do</em> and not just <em>check</em> the homework) by introducing a dummy variable <code>result</code> for the RHS of the statement, and then using <code>norm_num</code> to clean up the left hand side. Is there a less ad-hoc way to do this?</p>",
        "id": 226935340,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1613724819
    }
]