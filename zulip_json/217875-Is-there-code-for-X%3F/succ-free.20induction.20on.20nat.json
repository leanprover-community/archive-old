[
    {
        "content": "<p>Do we have an induction principle on nat which is defeq to nat.rec but which talks about <code>n+1</code> instead of <code>n.succ</code>? I was developing teaching materials and I noticed that sometimes I can't do <code>induction, ring</code>, I have to do <code>induction, simp, ring</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">n.succ</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"bp\">^</span><span class=\"mi\">2</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">ring</span> <span class=\"c1\">-- fails (as does simp, but simp, ring works)</span>\n</code></pre></div>",
        "id": 254044756,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632142656
    },
    {
        "content": "<p>I have used this too, <a href=\"https://github.com/rwbarton/lean-omin/blob/master/src/for_mathlib/nat.lean\">https://github.com/rwbarton/lean-omin/blob/master/src/for_mathlib/nat.lean</a></p>",
        "id": 254087063,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632159063
    },
    {
        "content": "<p>maybe it should have some equational lemmas I guess, apparently I didn't need them</p>",
        "id": 254089155,
        "sender_full_name": "Reid Barton",
        "timestamp": 1632159855
    }
]