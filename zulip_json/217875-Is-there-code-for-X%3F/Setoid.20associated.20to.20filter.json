[
    {
        "content": "<p>Does mathlib already have something like the following?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">order</span><span class=\"bp\">.</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">T</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨λ</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"bp\">∀</span><span class=\"err\">ᶠ</span> <span class=\"n\">b</span> <span class=\"k\">in</span> <span class=\"n\">F</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">sorry</span><span class=\"bp\">⟩</span>\n</code></pre></div>",
        "id": 209664651,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599752053
    },
    {
        "content": "<p>See <code>order.filter.germ</code></p>",
        "id": 209664736,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599752085
    },
    {
        "content": "<p>also <code>.filter_product</code></p>",
        "id": 209664820,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599752116
    },
    {
        "content": "<p>Ah nice. thanks.</p>",
        "id": 209664910,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599752151
    },
    {
        "content": "<p>Oh good mathlib already has ultraproducts. that's what I needed anyway :)</p>",
        "id": 209665083,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599752209
    },
    {
        "content": "<p>Why isn't <code>order.​filter.​filter_product</code> called <code>order.​filter.​ultraproduct</code> ?</p>",
        "id": 209665184,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599752253
    },
    {
        "content": "<p>I was going to say I think filterproduct is another name for ultraproduct, but filterproduct doesn't seem to appear anywhere in the file, so ... yeah</p>",
        "id": 209665386,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599752328
    },
    {
        "content": "<p>This is what I tried first...<br>\n<a href=\"/user_uploads/3121/9jw0BApaCkgoGdUrGOrmXJRU/Screenshot_2020-09-10-mathlib-docs-index.png\">Screenshot_2020-09-10-mathlib-docs-index.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/9jw0BApaCkgoGdUrGOrmXJRU/Screenshot_2020-09-10-mathlib-docs-index.png\" title=\"Screenshot_2020-09-10-mathlib-docs-index.png\"><img src=\"/user_uploads/3121/9jw0BApaCkgoGdUrGOrmXJRU/Screenshot_2020-09-10-mathlib-docs-index.png\"></a></div>",
        "id": 209666425,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599752752
    },
    {
        "content": "<p>Looks like a doc / renaming PR is in order...</p>",
        "id": 209666592,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1599752811
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> <a href=\"https://github.com/leanprover-community/mathlib/search?q=ultraproduct&amp;unscoped_q=ultraproduct\">https://github.com/leanprover-community/mathlib/search?q=ultraproduct&amp;unscoped_q=ultraproduct</a></p>",
        "id": 209672772,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1599755366
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110064\">Kenny Lau</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Setoid.20associated.20to.20filter/near/209672772\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"https://github.com/leanprover-community/mathlib/search?q=ultraproduct&amp;unscoped_q=ultraproduct\">https://github.com/leanprover-community/mathlib/search?q=ultraproduct&amp;unscoped_q=ultraproduct</a></p>\n</blockquote>\n<p>Thanks. I never remember to try github's search or git grep</p>",
        "id": 209680166,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599758590
    },
    {
        "content": "<p>The API search should work for this. Git grep is a hack which users aren't supposed to need</p>",
        "id": 209681147,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599759079
    },
    {
        "content": "<p>The module docstring does already contain the words <code>Ultraproduct</code>, <code>ultraproduct</code> and <code>ultraproducts</code></p>",
        "id": 209681882,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599759456
    },
    {
        "content": "<p>First <span class=\"user-mention\" data-user-id=\"130500\">@Abhimanyu Pallavi Sudhir</span> defined ultraproducts for hyperreals. He used names <code>bigly_equal</code> and <code>filter_product</code> and the header said: \"Filterproducts\" (ultraproducts on general filters), ultraproducts.<br>\nThen I renamed <code>filter_product</code> to <code>germ</code> leaving in <code>src/order/filter/filter_product</code> theorems that assume <code>is_ultrafilter</code>. Feel free to rename this file to <code>ultraproduct</code> but please leave <code>filter.germ</code> named this way because this name is much more common in standard analysis.</p>",
        "id": 210059310,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1600115626
    },
    {
        "content": "<p><code>git grep -i</code> is a good search tool.</p>",
        "id": 210059398,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1600115656
    }
]