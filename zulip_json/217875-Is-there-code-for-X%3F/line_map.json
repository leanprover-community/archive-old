[
    {
        "content": "<p>Do we have a lemma saying <code>a ≤ b -&gt; 0 ≤ r -&gt; a ≤ line_map a b r</code>? I'm finding <code>left_le_line_map_iff_le</code> which is an <code>iff</code> version that assumes <code>0 &lt; r</code>.</p>",
        "id": 230948488,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616107324
    },
    {
        "content": "<p>Perhaps</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">line_map_le_line_map_of_le_of_le</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">r</span> <span class=\"bp\">≤</span> <span class=\"n\">r'</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">line_map</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">r</span> <span class=\"bp\">≤</span> <span class=\"n\">line_map</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">r'</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">left_le_line_map_of_nonneg_of_le</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">line_map</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">r</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">line_map_le_right_of_le_one_of_le</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">r</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">w</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">line_map</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">r</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>are missing in <code>linear_algebra.affine_space.ordered</code>?</p>",
        "id": 230948857,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616107623
    },
    {
        "content": "<p>Indeed, these lemmas are missing.</p>",
        "id": 230971141,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1616124964
    },
    {
        "content": "<p>Okay. I have them installed in the right place in a branch full of sorries, and will get to them once they become the most exciting sorry remaining. :-)</p>",
        "id": 230971179,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1616125017
    }
]