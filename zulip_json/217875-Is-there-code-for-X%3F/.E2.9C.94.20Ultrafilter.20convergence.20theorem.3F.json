[
    {
        "content": "<p>Is there an implementation of the ultrafilter convergence theorem? I.e.: If we fix an ultrafilter on N, all sequences with values in a compact space have a limit. </p>\n<p>More precisely, I'm trying to get the following </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">order.filter.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">order.filter.ultrafilter</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology.instances.real</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n<span class=\"kn\">open</span> <span class=\"n\">classical</span>\n\n\n<span class=\"kd\">example</span>\n  <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">compact_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">fil</span><span class=\"o\">:</span> <span class=\"n\">ultrafilter</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">a</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"o\">}</span>\n  <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">X</span><span class=\"o\">),</span> <span class=\"n\">filter.tendsto</span> <span class=\"n\">a</span> <span class=\"n\">fil</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Does something similiar exist in the mathlib?</p>",
        "id": 292014153,
        "sender_full_name": "Matthias U",
        "timestamp": 1659622856
    },
    {
        "content": "<p>Maybe <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_compact.ultrafilter_le_nhds\">docs#is_compact.ultrafilter_le_nhds</a> and monotonicity of <code>filter.map</code>?</p>",
        "id": 292014957,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1659623279
    },
    {
        "content": "<p>That works, thanks very much!</p>",
        "id": 292017048,
        "sender_full_name": "Matthias U",
        "timestamp": 1659624183
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"409809\">Matthias U</span> has marked this topic as resolved.</p>",
        "id": 292017050,
        "sender_full_name": "Notification Bot",
        "timestamp": 1659624184
    }
]