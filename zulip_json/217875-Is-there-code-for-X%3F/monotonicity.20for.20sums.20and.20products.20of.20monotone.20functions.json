[
    {
        "content": "<p>Dear All,</p>\n<p>are the lemmas below in mathlib?  I thought that they would be already available, but I could not find them!</p>\n<p>Thanks!</p>\n<p>[In case you are wondering, I want to use them to prove that polynomials over <code>ℕ</code> are <code>monotone</code> and, if non-constant, <code>strict_mono</code>.]</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.pi</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.ordered_monoid_lemmas</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"sd\">/--  The product of two monotone functions is monotone. -/</span>\n<span class=\"kd\">@[to_additive \"The sum of two monotone functions is monotone.\"]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">monotone_mul_of_monotone_of_monotone</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_mul</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">covariant_class</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)]</span> <span class=\"o\">[</span><span class=\"n\">covariant_class</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"n\">function.swap</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)]</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">monotone</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">ab</span> <span class=\"o\">:=</span> <span class=\"k\">calc</span>  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mul_le_mul_left'</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"n\">ab</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n                        <span class=\"bp\">...</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mul_le_mul_right'</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"n\">ab</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n\n<span class=\"sd\">/--  The product of two strictly monotone functions is strictly monotone. -/</span>\n<span class=\"kd\">@[to_additive</span>\n<span class=\"kd\">\"The sum of two strictly monotone functions is strictly monotone.\"]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">strict_mono_mul_of_strict_mono_of_strict_mono</span> <span class=\"o\">[</span><span class=\"n\">has_lt</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_mul</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">covariant_class</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">&lt;</span><span class=\"o\">)]</span> <span class=\"o\">[</span><span class=\"n\">covariant_class</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"n\">function.swap</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">&lt;</span><span class=\"o\">)]</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">strict_mono</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">strict_mono</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">strict_mono</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">ab</span> <span class=\"o\">:=</span> <span class=\"k\">calc</span>  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mul_lt_mul_left'</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"n\">ab</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n                        <span class=\"bp\">...</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mul_lt_mul_right'</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"n\">ab</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n\n<span class=\"sd\">/--  The product of a monotone function and a strictly monotone function is strictly monotone. -/</span>\n<span class=\"kd\">@[to_additive</span>\n<span class=\"kd\">\"The sum of a monotone function and a strictly monotone function is strictly monotone.\"]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">strict_mono_mul_of_mono_of_strict_mono</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_mul</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">covariant_class</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">&lt;</span><span class=\"o\">)]</span> <span class=\"o\">[</span><span class=\"n\">covariant_class</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"n\">function.swap</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)]</span>\n  <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">strict_mono</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">strict_mono</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">ab</span> <span class=\"o\">:=</span> <span class=\"k\">calc</span>  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mul_lt_mul_left'</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"n\">ab</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n                        <span class=\"bp\">...</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mul_le_mul_right'</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"n\">ab.le</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n\n<span class=\"sd\">/--  The product of a strictly monotone function and a monotone function is strictly monotone. -/</span>\n<span class=\"kd\">@[to_additive</span>\n<span class=\"kd\">\"The sum of a strictly monotone function and a monotone function is strictly monotone.\"]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">strict_mono.mul_of_strict_mono_of_mono</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_mul</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">covariant_class</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)]</span> <span class=\"o\">[</span><span class=\"n\">covariant_class</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"n\">function.swap</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">&lt;</span><span class=\"o\">)]</span>\n  <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">strict_mono</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">strict_mono</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">ab</span> <span class=\"o\">:=</span> <span class=\"k\">calc</span>  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mul_le_mul_left'</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"n\">ab.le</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n                        <span class=\"bp\">...</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mul_lt_mul_right'</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"n\">ab</span><span class=\"o\">)</span> <span class=\"n\">_</span>\n</code></pre></div>",
        "id": 247588540,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1627568046
    },
    {
        "content": "<p>If they don't exist, I'd name them monotone.mul, strict_mono.mul, etc</p>",
        "id": 247590724,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1627568907
    },
    {
        "content": "<p>The last one would be strict_mono.mul, since it is stronger</p>",
        "id": 247590912,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1627568979
    },
    {
        "content": "<p>Thanks Yakov!  By the magic of the naming convention, you almost found the lemmas in mathlib!  The lemma called <code>monotone.mul</code> is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">monotone.mul</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_3</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_4</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">_inst_1</span> <span class=\"o\">:</span> <span class=\"n\">linear_ordered_semiring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">_inst_2</span> <span class=\"o\">:</span> <span class=\"n\">preorder</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">},</span>\n    <span class=\"n\">monotone</span> <span class=\"n\">f</span> <span class=\"bp\">→</span>\n    <span class=\"n\">monotone</span> <span class=\"n\">g</span> <span class=\"bp\">→</span>\n    <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"n\">monotone</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 247592073,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1627569428
    },
    {
        "content": "<p>That's just because that lemma predates your order refactor, right?</p>",
        "id": 247592384,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627569564
    },
    {
        "content": "<p>I can see that <code>monotone.mul</code> is likely a common form to in which this lemma is applied, but the assumptions imply an addition which seems to play no role.</p>",
        "id": 247592417,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1627569580
    },
    {
        "content": "<p>Yes, this lemma has not been changed (yet) by the refactor: I have taken a break, but I am planning to continue with the refactor soon.</p>",
        "id": 247592527,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1627569610
    },
    {
        "content": "<p>Ok, the first lemma (at least) is in mathlib: it is called <code>monotone.mul'</code>!</p>",
        "id": 247593175,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1627569843
    },
    {
        "content": "<p>Why does <code>library_search</code> not find the lemma, though?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">monotone.mul_new</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_mul</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Y</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">covariant_class</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)]</span> <span class=\"o\">[</span><span class=\"n\">covariant_class</span> <span class=\"n\">Y</span> <span class=\"n\">Y</span> <span class=\"o\">(</span><span class=\"n\">function.swap</span> <span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)]</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">monotone</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"c1\">--  library_search : `library_search` failed.</span>\n  <span class=\"n\">exact</span> <span class=\"n\">monotone.mul'</span> <span class=\"n\">hf</span> <span class=\"n\">hg</span> <span class=\"c1\">-- works</span>\n<span class=\"kd\">end</span>\n\n<span class=\"k\">#check</span> <span class=\"bp\">@</span><span class=\"n\">monotone.mul'</span>\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">monotone.mul' :</span>\n<span class=\"cm\">  ∀ {α : Type u_3} [_inst_1 : has_mul α] {β : Type u_4} {f g : β → α} [_inst_2 : preorder α]</span>\n<span class=\"cm\">  [_inst_3 : preorder β] [_inst_4 : covariant_class α α has_mul.mul has_le.le]</span>\n<span class=\"cm\">  [_inst_5 : covariant_class α α (function.swap has_mul.mul) has_le.le],</span>\n<span class=\"cm\">    monotone f → monotone g → monotone (λ (x : β), f x * g x)</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>",
        "id": 247593890,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1627570068
    },
    {
        "content": "<p>Most of these should definitely exist without the <code>monotone</code> part, under names like <code>mul_le_mul</code></p>",
        "id": 247593992,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1627570097
    },
    {
        "content": "<p>in particular, you don't need those calc proofs</p>",
        "id": 247594044,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1627570122
    },
    {
        "content": "<p>Library search doesn't know to rewrite through <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pi.mul_def\">docs#pi.mul_def</a></p>",
        "id": 247594500,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627570307
    },
    {
        "content": "<p>Ah, thanks Eric!</p>\n<p>Mario, does your comment mean that these lemmas should not be in mathlib in this form, or they should, but their proofs should use their non-monotone lemma?</p>",
        "id": 247594654,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1627570364
    },
    {
        "content": "<p>I think the latter</p>",
        "id": 247594769,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627570415
    },
    {
        "content": "<p>I don't see anything wrong with the lemmas as stated, but the proofs can be shorter. If there is a monotone lemma already then use that, otherwise use the <code>mul_le_mul</code> type lemma</p>",
        "id": 247594796,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1627570429
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/8465\">#8465</a>.</p>\n<p>The conclusion seems to be that all except for one of the lemmas were already in mathlib.  I added the missing one and also I added doc-strings to the four lemmas.</p>\n<p>[The missing lemma was the one about the product of strictly monotone functions.]</p>",
        "id": 247597541,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1627571490
    }
]