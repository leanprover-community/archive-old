[
    {
        "content": "<p>Does mathlib already know that <code>Ioc 0 n</code> contains exactly <code>n/p</code> elements divisible by <code>p</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">((</span><span class=\"n\">Ioc</span> <span class=\"mi\">0</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">x</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">/</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 289111408,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1657469940
    },
    {
        "content": "<p><code>(hp : p ≠ 0)</code> is redundant.</p>",
        "id": 289113195,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1657472387
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/card_multiples\">docs#card_multiples</a> is close</p>",
        "id": 289113248,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1657472426
    }
]