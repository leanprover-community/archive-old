[
    {
        "content": "<p>is it possible to write a tactic:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">increment</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n</code></pre></div>\n\n\n<p>such that every time I do <code>#eval by increment</code> it prints <code>0</code> and then <code>1</code> and then <code>2</code> etc?</p>",
        "id": 197782498,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589614953
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">#</span><span class=\"kn\">eval</span> <span class=\"k\">by</span> <span class=\"n\">increment</span> <span class=\"c1\">-- 0</span>\n<span class=\"bp\">#</span><span class=\"kn\">eval</span> <span class=\"k\">by</span> <span class=\"n\">increment</span> <span class=\"c1\">-- 1</span>\n<span class=\"bp\">#</span><span class=\"kn\">eval</span> <span class=\"k\">by</span> <span class=\"n\">increment</span> <span class=\"c1\">-- 2</span>\n</code></pre></div>",
        "id": 197782501,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589614964
    },
    {
        "content": "<p>I imagine I could start by inspect how <code>random</code> works</p>",
        "id": 197782511,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589614986
    },
    {
        "content": "<p>this behaviour is also acceptable:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"bp\">#</span><span class=\"kn\">eval</span> <span class=\"k\">by</span> <span class=\"o\">{</span><span class=\"n\">increment</span><span class=\"o\">,</span> <span class=\"n\">increment</span><span class=\"o\">,</span> <span class=\"n\">increment</span><span class=\"o\">}</span> <span class=\"c1\">-- 0 \\n 1 \\n 2</span>\n</code></pre></div>",
        "id": 197782572,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589615079
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110064\">Kenny Lau</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/a.20mutable.20tactic/near/197782511\">said</a>:</p>\n<blockquote>\n<p>I imagine I could start by inspect how <code>random</code> works</p>\n</blockquote>\n<p>welp I'm out of luck as I've hit the <code>constant</code> wall</p>",
        "id": 197782644,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589615263
    },
    {
        "content": "<p>I imagine I could also use the help of an outside file, if I've resolved the <a href=\"#narrow/stream/113489-new-members/topic/failed.20to.20open.20file\">issue of not being able to open files</a></p>",
        "id": 197782687,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589615293
    },
    {
        "content": "<p>it doesn't have to go on forever, e.g. by reading a file that basically contains <code>0\\n1\\n2\\n3\\n4</code></p>",
        "id": 197782961,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589615785
    },
    {
        "content": "<p>then it's basically \"read the next line\" tactic</p>",
        "id": 197782969,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589615798
    },
    {
        "content": "<p>You could use <code>user_attribute</code> to set (and modify) an attribute on the <code>increment</code> declaration.</p>",
        "id": 197784624,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1589618414
    },
    {
        "content": "<p>is there an approach with less performance cost than this? Particularly when the object being stored is large</p>",
        "id": 197784884,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589618831
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">hack</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">expr</span> <span class=\"o\">:=</span>\n<span class=\"o\">[</span><span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"mi\">42</span><span class=\"o\">),</span> <span class=\"bp\">`</span><span class=\"o\">(</span><span class=\"mi\">57</span><span class=\"o\">)]</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">user_attribute</span><span class=\"o\">]</span>\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">incr_attr</span> <span class=\"o\">:</span> <span class=\"n\">user_attribute</span> <span class=\"n\">unit</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">name</span>   <span class=\"o\">:=</span> <span class=\"bp\">`</span><span class=\"n\">incrementer</span><span class=\"o\">,</span>\n  <span class=\"n\">descr</span>  <span class=\"o\">:=</span> <span class=\"s2\">&quot;incrementer&quot;</span><span class=\"o\">,</span>\n  <span class=\"n\">parser</span> <span class=\"o\">:=</span> <span class=\"n\">pure</span> <span class=\"mi\">0</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">tactic</span>\n<span class=\"n\">meta</span> <span class=\"n\">def</span> <span class=\"n\">increment</span> <span class=\"o\">:</span> <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:=</span>\n<span class=\"n\">do</span> <span class=\"n\">n</span> <span class=\"err\">←</span> <span class=\"n\">incr_attr</span><span class=\"bp\">.</span><span class=\"n\">get_param</span> <span class=\"bp\">`</span><span class=\"n\">increment</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">pure</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"n\">e</span> <span class=\"err\">←</span> <span class=\"n\">hack</span><span class=\"bp\">.</span><span class=\"n\">nth</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"err\">%</span> <span class=\"mi\">2</span><span class=\"o\">),</span>\n  <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">exact</span> <span class=\"n\">e</span><span class=\"o\">,</span>\n  <span class=\"n\">incr_attr</span><span class=\"bp\">.</span><span class=\"n\">set</span> <span class=\"bp\">`</span><span class=\"n\">increment</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">tt</span>\n\n<span class=\"n\">def</span> <span class=\"n\">test0</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">increment</span>\n<span class=\"n\">def</span> <span class=\"n\">test1</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">increment</span>\n<span class=\"n\">def</span> <span class=\"n\">test2</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">increment</span>\n<span class=\"n\">def</span> <span class=\"n\">test3</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">increment</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">test0</span> <span class=\"c1\">-- 42</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">test1</span> <span class=\"c1\">-- 57</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">test2</span> <span class=\"c1\">-- 42</span>\n<span class=\"bp\">#</span><span class=\"kn\">print</span> <span class=\"n\">test3</span> <span class=\"c1\">-- 57</span>\n</code></pre></div>",
        "id": 197787801,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589623083
    },
    {
        "content": "<p>this works perfectly</p>",
        "id": 197787803,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589623086
    },
    {
        "content": "<p>thanks to Mario</p>",
        "id": 197787804,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589623089
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> is there a way to change the environment permanently?</p>",
        "id": 197788137,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589623659
    },
    {
        "content": "<p>this doesn't survive <code>&lt;|&gt;</code></p>",
        "id": 197788139,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589623668
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">test</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">by</span> <span class=\"n\">increment</span><span class=\"o\">]</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">by</span> <span class=\"n\">increment</span><span class=\"o\">]</span> <span class=\"bp\">&lt;|&gt;</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"k\">by</span> <span class=\"n\">increment</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 197788206,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589623771
    },
    {
        "content": "<p>this just gives 3 zeroes</p>",
        "id": 197788207,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589623774
    },
    {
        "content": "<p>maybe we really need to do some read/write?</p>",
        "id": 197788269,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589623848
    },
    {
        "content": "<p>but then we would need some way to pass from <code>io</code> to <code>tactic</code></p>",
        "id": 197788307,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589623901
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110064\">Kenny Lau</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/a.20mutable.20tactic/near/197788307\">said</a>:</p>\n<blockquote>\n<p>but then we would need some way to pass from <code>io</code> to <code>tactic</code></p>\n</blockquote>\n<p>Like <code>tactic.unsafe_run_io</code>?</p>",
        "id": 197790989,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1589628075
    },
    {
        "content": "<p>seriously it takes more time to hack your kata</p>",
        "id": 197792695,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589630946
    },
    {
        "content": "<p>then is it still a hack?</p>",
        "id": 197792697,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589630953
    }
]