[
    {
        "content": "<p>I am looking for a lemma of the form :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">t2_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_continuous_add</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">lim</span> <span class=\"n\">filter.at_top</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">lim</span> <span class=\"n\">filter.at_top</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">lim</span> <span class=\"n\">filter.at_top</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Any help is appreciated. Thank you!</p>",
        "id": 288551666,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1657036960
    },
    {
        "content": "<p>Have a look at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.tendsto.add\">docs#filter.tendsto.add</a></p>",
        "id": 288552054,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1657037128
    },
    {
        "content": "<p>The lemma as you wrote it can not be true (what happens if one function is not converging?). In general, don't use <code>lim</code>, and use <code>tendsto</code> instead.</p>",
        "id": 288552230,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1657037192
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110050\">Sebastien Gouezel</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Limit.20of.20addition.20of.20functions/near/288552230\">said</a>:</p>\n<blockquote>\n<p>The lemma as you wrote it can not be true (what happens if one function is not converging?). In general, don't use <code>lim</code>, and use <code>tendsto</code> instead.</p>\n</blockquote>\n<p>Thank you! I know this is not true in general, I was looking for a better lemma that has probably already formulated it.</p>",
        "id": 288552509,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1657037330
    }
]