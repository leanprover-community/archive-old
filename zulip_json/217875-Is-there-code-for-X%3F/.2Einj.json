[
    {
        "content": "<p>Dear All,</p>\n<p>expanding on the topic of <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/is_regular.2Einj\">is_left_regular.inj</a>, I also find useful to have the lemma below.  It allows to use <code>hf : f.injective</code> with <code>rw</code> by writing <code>rw hf.inj</code>, clearing <code>f</code>s appearing on the two sides of an equality.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">function.injective.inj</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">f.injective</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">hf</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">congr_arg</span> <span class=\"n\">f</span><span class=\"o\">⟩</span>\n</code></pre></div>\n<p>Is this already somewhere?  If not, should I PR this?</p>\n<p>Thanks!</p>",
        "id": 296532276,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1662018019
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.injective.eq_iff\">docs#function.injective.eq_iff</a></p>",
        "id": 296532376,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662018076
    },
    {
        "content": "<p>Ah, thanks a lot!  I like the name <code>.inj</code> better, but this is exactly what I needed!  And it works with <code>is_left_regular</code> as well!</p>",
        "id": 296532637,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1662018204
    },
    {
        "content": "<p>I guess the name is there to fit with <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.injective.ne_iff\">docs#function.injective.ne_iff</a></p>",
        "id": 296532886,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1662018323
    },
    {
        "content": "<p>True, although <code>..._inj</code> is also a common idiom.</p>",
        "id": 296533184,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1662018462
    },
    {
        "content": "<p>Anyway, I am happy that the lemma is there, the name is less important!</p>",
        "id": 296533214,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1662018476
    }
]