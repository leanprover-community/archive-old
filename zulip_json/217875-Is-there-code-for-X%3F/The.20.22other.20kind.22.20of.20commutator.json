[
    {
        "content": "<p>Is there code anywhere for ring commutators? <code>[a,b] = a b - b a</code>, and using such to simplify/normalize expressions.</p>",
        "id": 278936289,
        "sender_full_name": "Robert Maxton",
        "timestamp": 1649924648
    },
    {
        "content": "<p>Possibly you're looking for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ring.has_bracket\">docs#ring.has_bracket</a></p>",
        "id": 278937697,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1649925570
    },
    {
        "content": "<p>You might find the <code>noncomm_ring</code> tactic useful if that's right.</p>",
        "id": 278937786,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1649925614
    },
    {
        "content": "<p>Yep, that was it. Thanks!</p>",
        "id": 278938734,
        "sender_full_name": "Robert Maxton",
        "timestamp": 1649926204
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"240862\">@Oliver Nash</span> One thing we need to think about eventually is a looming conflict between additive group commutators and ring commutators. This conflict is why the commutator portion of the group theory library is just stated multiplicatively.</p>",
        "id": 278968669,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1649944393
    },
    {
        "content": "<p>Is there definitely a conflict though? I realise we use the same word and typeclass but they're mathematically different things. Are there actually situations where we want additive group commutators?</p>",
        "id": 278969873,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1649944992
    },
    {
        "content": "<p>Probably not, but it just means that any group theory result relying on commutators can't be easily additivized. Probably not an issue though, since additive groups tend to be abelian.</p>",
        "id": 278972541,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1649946257
    }
]