[
    {
        "content": "<p><code>have : ∀ {a b c : Prop}, (a → b) → (b → c) → a → c, by tauto!</code>. I know this is trivial to write with lambdas too, but do we not have this at all as a named theorem?</p>",
        "id": 264587040,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639259684
    },
    {
        "content": "<p>Maybe because dot notation doesn't work on it?</p>",
        "id": 264587068,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639259754
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.comp\">docs#function.comp</a> ?</p>",
        "id": 264587222,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1639259954
    },
    {
        "content": "<p>Oh yeah of course <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 264587400,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639260064
    },
    {
        "content": "<p>oh my god, my brain needs a break; of course that's true! even more embarrasingly, what I originally wanted it for was <code>mt</code>...</p>",
        "id": 264587408,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639260076
    },
    {
        "content": "<p>Just opened <a href=\"https://github.com/leanprover-community/mathlib/pull/10728\">#10728</a> for that dot notation alias thing we already talked about.</p>",
        "id": 264588670,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639261462
    },
    {
        "content": "<p>Doesn't <a href=\"https://leanprover-community.github.io/mathlib_docs/find/trans\">docs#trans</a> work by itself too?</p>",
        "id": 264594783,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639270374
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">transitivity</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>doesn't work, if that's what you mean</p>",
        "id": 264594991,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1639270744
    }
]