[
    {
        "content": "<p>Do we really not have this? Maybe <span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> knows?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.parity</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">even</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">even</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 278004822,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649241637
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.neg_one_pow_of_even\">docs#nat.neg_one_pow_of_even</a></p>",
        "id": 278004936,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1649241723
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/neg_one_pow_eq_pow_mod_two\">docs#neg_one_pow_eq_pow_mod_two</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.neg_one_pow_eq_one_iff_even\">docs#nat.neg_one_pow_eq_one_iff_even</a></p>",
        "id": 278004947,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649241741
    },
    {
        "content": "<p>Ugh, that's a terrible name <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 278004961,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649241749
    },
    {
        "content": "<p>The second name of the three, I assume?</p>",
        "id": 278008451,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649243902
    },
    {
        "content": "<p>The first one. I was looking for <code>even.neg_one_pow</code>, <code>even.neg_pow</code>, ...</p>",
        "id": 278009302,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649244458
    },
    {
        "content": "<p>Good point, we don't usually put things about natural powers in the nat namespace</p>",
        "id": 278013638,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649246982
    },
    {
        "content": "<p>oh, I assumed it was about nat-powers! dear lord...</p>",
        "id": 278020048,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649250261
    },
    {
        "content": "<p>Ah yes, <code>-1 : nat</code> <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 278020744,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649250611
    },
    {
        "content": "<p>I will issue a PR to fix the name today.</p>",
        "id": 278020802,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649250647
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Even.20power.20of.20-1/near/278020744\">said</a>:</p>\n<blockquote>\n<p>Ah yes, <code>-1 : nat</code> <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>\n</blockquote>\n<p>404: my brain cannot be located today <span aria-label=\"shock\" class=\"emoji emoji-1f628\" role=\"img\" title=\"shock\">:shock:</span></p>",
        "id": 278021100,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649250826
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/13268\">#13268</a></p>",
        "id": 278408146,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649507859
    },
    {
        "content": "<p>I'm cleaning up a few other things simultaneously. Maybe <span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> wants to have a look.</p>",
        "id": 278408198,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649507894
    },
    {
        "content": "<p>We've transcended the boring debate over whether 0 should be included in the natural numbers, and moved on to whether -1 should be included <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 278409853,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1649510300
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Even.20power.20of.20-1/near/278408146\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/pull/13268\">#13268</a></p>\n</blockquote>\n<p>literally above your post on Zulip is bors merging my generalisation of the typeclasses in that file, sorry about that!</p>",
        "id": 278410537,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649511351
    },
    {
        "content": "<p>Yaël, I left a review: I'm on mobile, so have not been able to experiment, but it all looks fine!</p>\n<p>Regarding <code>odd</code>, especially in view of what its <code>to_multiplicative</code> version should be, I think that, if we really want to define it in general, it should be \"not even\".  Having said this, I'm not sure that it is such a useful concept when it does not also mean <code>2*x+1</code> (or <code>x+x+1</code> <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> ), which I'm not sure how to <code>multiplicativize</code>.</p>",
        "id": 278422176,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1649526863
    }
]