[
    {
        "content": "<p>I thought mathlib had an object for a \"bijection\": a function wrapped with a <code>function.bijective</code> predicate. But searching for it in the docs yields no results. Do we have this?</p>",
        "id": 286682297,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1655604896
    },
    {
        "content": "<p>Similarly, I thought we had wrapped injections and surjections with funny little arrow symbols as notation, do we not have this either?</p>",
        "id": 286682450,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1655605106
    },
    {
        "content": "<p>For injection we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/embedding\">docs#embedding</a> but not sure about others</p>",
        "id": 286682477,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1655605160
    },
    {
        "content": "<p>sorry, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.embedding\">docs#function.embedding</a> with notation â†ª</p>",
        "id": 286682529,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1655605222
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv\">docs#equiv</a> is sort of bundled bijection but has the additional data of the inverse function, and is what people normally use.</p>",
        "id": 286682550,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1655605287
    },
    {
        "content": "<p>Embedding must have been what I saw, thanks</p>",
        "id": 286682570,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1655605308
    },
    {
        "content": "<p>because we always have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.of_bijective\">docs#equiv.of_bijective</a> using choice (in ZF it doesn't require choice but in Lean it does).</p>",
        "id": 286682589,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1655605324
    }
]