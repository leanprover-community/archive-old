[
    {
        "content": "<p>I think this is true </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">mv_polynomial.total_degree_sum</span>\n  <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">σ</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ι</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">ps</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">finset.sum</span> <span class=\"n\">s</span> <span class=\"n\">ps</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">total_degree</span>  <span class=\"bp\">≤</span>  <span class=\"n\">finset.sup</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial.total_degree</span> <span class=\"bp\">∘</span> <span class=\"n\">ps</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>but I don't see it in <a href=\"https://leanprover-community.github.io/mathlib_docs/data/mv_polynomial/variables.html\">https://leanprover-community.github.io/mathlib_docs/data/mv_polynomial/variables.html</a></p>",
        "id": 267483095,
        "sender_full_name": "Joseph Hua",
        "timestamp": 1641840889
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">mv_polynomial.total_degree_monomial</span>\n  <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">σ</span> <span class=\"bp\">→₀</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">mv_polynomial.monomial</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">total_degree</span>\n  <span class=\"bp\">=</span>\n  <span class=\"n\">ite</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">⊥</span> <span class=\"o\">(</span><span class=\"n\">f.sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"n\">dite</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mv_polynomial.total_degree</span><span class=\"o\">,</span> <span class=\"n\">mv_polynomial.support_monomial</span><span class=\"o\">,</span>\n  <span class=\"n\">if_pos</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">if_pos</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">finset.sup_empty</span><span class=\"o\">])</span>\n<span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mv_polynomial.total_degree</span><span class=\"o\">,</span> <span class=\"n\">mv_polynomial.support_monomial</span><span class=\"o\">,</span>\n  <span class=\"n\">if_neg</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">if_neg</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">finset.sup_singleton</span><span class=\"o\">])</span>\n</code></pre></div>\n<p>this too whilst I'm at it</p>",
        "id": 267487236,
        "sender_full_name": "Joseph Hua",
        "timestamp": 1641842676
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">mv_polynomial.total_degree_sum</span>\n  <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">σ</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ι</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">ι</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">ps</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">finset.sum</span> <span class=\"n\">s</span> <span class=\"n\">ps</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">total_degree</span>\n  <span class=\"bp\">≤</span>\n  <span class=\"n\">finset.sup</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial.total_degree</span> <span class=\"bp\">∘</span> <span class=\"n\">ps</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">finset.induction_on</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"n\">zero_le</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"n\">has</span> <span class=\"n\">hind</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">finset.sum_insert</span> <span class=\"n\">has</span><span class=\"bp\">;</span>\n  <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial.total_degree_add</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">max_le_iff</span><span class=\"o\">,</span> <span class=\"n\">finset.sup_insert</span><span class=\"o\">]</span><span class=\"bp\">;</span>\n      <span class=\"n\">exact</span> <span class=\"o\">⟨</span> <span class=\"n\">le_sup_iff.mpr</span> <span class=\"bp\">$</span> <span class=\"n\">or.inl</span> <span class=\"o\">(</span><span class=\"n\">le_of_eq</span> <span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"o\">,</span> <span class=\"n\">le_sup_iff.mpr</span> <span class=\"bp\">$</span> <span class=\"n\">or.inr</span> <span class=\"n\">hind</span> <span class=\"o\">⟩))</span>\n</code></pre></div>\n<p>Done. Anyone know if this is already in the library? If not I'd PR</p>",
        "id": 267492369,
        "sender_full_name": "Joseph Hua",
        "timestamp": 1641845101
    },
    {
        "content": "<p>I PR'ed a slightly different lemma called total_degree_monomial at <a href=\"https://github.com/leanprover-community/mathlib/pull/11319/files\">https://github.com/leanprover-community/mathlib/pull/11319/files</a>, based on <a href=\"https://github.com/leanprover-community/flt-regular/blob/master/src/ring_theory/polynomial/homogenization.lean#L200\">https://github.com/leanprover-community/flt-regular/blob/master/src/ring_theory/polynomial/homogenization.lean#L200</a> which I am slowly trying to move into mathlib, so there might be more overlap there</p>",
        "id": 267496256,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1641847089
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"453640\">@Iván Sadofschi Costa</span> has a proof of <code>total_degree_sum</code> in his combinatorial nullstellensatz project <a href=\"https://github.com/isadofschi/combinatorial_nullstellensatz/blob/main/src/degree.lean#L36\">https://github.com/isadofschi/combinatorial_nullstellensatz/blob/main/src/degree.lean#L36</a>, so hopefully one of you can get a version into mathlib <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span>. It looks like we're all wanting lots of stuff for <code>mv_polynomial</code> these days!</p>",
        "id": 267497019,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1641847497
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133584\">@Joseph Hua</span> please feel free to PR <code>mv_polynomial.total_degree_sum</code>. Your proof seems better <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 267508171,
        "sender_full_name": "Iván Sadofschi Costa",
        "timestamp": 1641852576
    },
    {
        "content": "<p>cool! i will make a PR now :)</p>",
        "id": 267575764,
        "sender_full_name": "Joseph Hua",
        "timestamp": 1641905316
    }
]