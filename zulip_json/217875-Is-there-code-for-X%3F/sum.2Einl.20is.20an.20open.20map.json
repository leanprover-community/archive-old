[
    {
        "content": "<p>Is there a one-liner for this? I can't find it in mathlib and there are people around here who know this part of the library back to front.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.constructions</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">import contains</span>\n\n<span class=\"cm\">instance [t₁ : topological_space α] [t₂ : topological_space β] : topological_space (α ⊕ β) :=</span>\n<span class=\"cm\">coinduced sum.inl t₁ ⊔ coinduced sum.inr t₂</span>\n\n<span class=\"cm\">-/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">sum.inl_is_open_map</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">Y</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_open_map</span> <span class=\"o\">(</span><span class=\"n\">sum.inl</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">⊕</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 260473244,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636152066
    },
    {
        "content": "<p>This should follow from <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_open_sum_iff\">docs#is_open_sum_iff</a> right?</p>",
        "id": 260473785,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1636152512
    },
    {
        "content": "<p>Oh <a href=\"https://leanprover-community.github.io/mathlib_docs/find/embedding_inl\">docs#embedding_inl</a></p>",
        "id": 260473958,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1636152633
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_open_range_inl\">docs#is_open_range_inl</a></p>",
        "id": 260474024,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1636152690
    },
    {
        "content": "<p>Lol <a href=\"https://leanprover-community.github.io/mathlib_docs/find/open_embedding_inl\">docs#open_embedding_inl</a></p>",
        "id": 260474063,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1636152721
    },
    {
        "content": "<p>I might just come back in two minutes when you've finished ;-)</p>",
        "id": 260474115,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636152741
    },
    {
        "content": "<p>I'm on my phone and every time I click a link to find the next lemma even more useful</p>",
        "id": 260474123,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1636152752
    },
    {
        "content": "<p>I've got it now -- thanks</p>",
        "id": 260474128,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636152761
    },
    {
        "content": "<p>in return I can offer you a sorry-free disjoint_union file in LTE :D</p>",
        "id": 260474140,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636152780
    },
    {
        "content": "<p>yeah I just missed those, sorry for wasting your time. I don't know the topology part of the library well.</p>",
        "id": 260474170,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636152819
    }
]