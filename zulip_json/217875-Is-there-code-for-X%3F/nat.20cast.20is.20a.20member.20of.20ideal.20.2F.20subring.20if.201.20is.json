[
    {
        "content": "<p>Do we have something like this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">ideal.nat_cast_mem</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">I</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">I.zero_mem</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">I.add_mem</span> <span class=\"o\">(</span><span class=\"n\">ideal.nat_cast_mem</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>If not, is this a reasonable name? And is this lemma actually useful?</p>",
        "id": 223248316,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1611072417
    },
    {
        "content": "<p>Can't you just <code>rw </code> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ideal.eq_top_iff_one\">docs#ideal.eq_top_iff_one</a> and then mem_top?</p>",
        "id": 223254673,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1611074943
    },
    {
        "content": "<p>Ah you're right, that statement isn't interesting</p>",
        "id": 223255059,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1611075118
    }
]