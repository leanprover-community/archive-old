[
    {
        "content": "<p>So we have <a href=\"https://leanprover-community.github.io/mathlib_docs/data/equiv/list.html#encodable.fintype.encodable\"><code>encodable.fintype.encodable</code></a> to put an arbitrary <code>encodable</code> instance on a fintype. Is there a similar thing to put a <code>linear_order</code> on any type?</p>",
        "id": 242883432,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1623851617
    },
    {
        "content": "<p>Actually, I only need antisymmetry and totality. My point is that I'm defining a pair of elements <code>(a' b') = f a b</code> for each pair of distinct elements <code>(a, b)</code>, but I want <code>f b a = (b', a')</code> (<code>f b a = (a', b')</code> is fine too): I want to get the same witnesses from both sides. So one solution would be to order a and b before getting the witnesses.</p>",
        "id": 242885082,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1623852262
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_extension\">docs#linear_extension</a> lets you embed any partial order (in particular the trivial one) into an arbitrary linear order, which works for your first question; though we should be able to generate a well-order on any type but I can't seem to find that in mathlib any more</p>",
        "id": 242886385,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1623852760
    },
    {
        "content": "<p>Ah, found it! <a href=\"https://leanprover-community.github.io/mathlib_docs/find/well_ordering_rel\">docs#well_ordering_rel</a></p>",
        "id": 242886720,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1623852911
    }
]