[
    {
        "content": "<p>I was somewhat surprised that I couldn't find this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">heq_congr</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hAB</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">C</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"bp\">→</span> <span class=\"n\">C</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hfg</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">==</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">==</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">revert</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"n\">hAB</span><span class=\"bp\">;</span> <span class=\"n\">intros</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">congr</span> <span class=\"o\">(</span><span class=\"n\">eq_of_heq</span> <span class=\"n\">hfg</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">eq_of_heq</span> <span class=\"n\">hab</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>(can also be proved <code>by finish</code>). Is there something obvious I'm missing?</p>",
        "id": 271061766,
        "sender_full_name": "Rish Vaishnav",
        "timestamp": 1644278428
    },
    {
        "content": "<p>Why are you using <code>heq</code>? It's very rarely needed.</p>",
        "id": 271061972,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644278541
    },
    {
        "content": "<p>Not an MWE, but it's for <a href=\"https://github.com/rish987/lean-bayes/blob/c076b94e83afa7feadaafb9b86ae280a2561cc04/src/probability_theory/random_variable.lean#L227\">this proof</a>... I could technically do without it here, but I think that would involve copying much of the proof just above it (and the sorrys should be easy).</p>",
        "id": 271062675,
        "sender_full_name": "Rish Vaishnav",
        "timestamp": 1644279105
    },
    {
        "content": "<p>The short of it is that I'm dealing with subtypes, and the fact that a subtype on a set unioned with the empty set is the subtype on that same set, but this is not definitionally true.</p>",
        "id": 271062787,
        "sender_full_name": "Rish Vaishnav",
        "timestamp": 1644279187
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"373814\">@Rish Vaishnav</span> That sort of lemma's not necessary because you can turn each heq into an eq step-by-step. There's a tactic for this, too, which is nice:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">heq_congr</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hAB</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→</span> <span class=\"n\">C</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"bp\">→</span> <span class=\"n\">C</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hfg</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">==</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n  <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">==</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">unify_equations</span> <span class=\"n\">hAB</span> <span class=\"n\">hfg</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n  <span class=\"n\">refl</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 271075788,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1644289855
    }
]