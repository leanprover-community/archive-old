[
    {
        "content": "<p>Hi! I would like to prove this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">finset.card_filter_fin_lt</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">finset.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"bp\">↑</span><span class=\"n\">j</span> <span class=\"bp\">&lt;</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"n\">finset.univ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I can imaging making <code>finset.filter (λ (j : fin n), ↑j &lt; k) finset.univ</code> biject with <code>finset.range k</code> and then taking the cardinality using <code>finset.card_range</code>. Is there already something like this or a better way of doing things?</p>\n<p>Would this be  a useful result in the library?</p>",
        "id": 265299088,
        "sender_full_name": "Joseph Hua",
        "timestamp": 1639749890
    },
    {
        "content": "<p>Have a look at <code>data.fin.interval</code>. What you want is basically <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin.card_Iio\">docs#fin.card_Iio</a></p>",
        "id": 265299858,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639750294
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/card_filter_fin_lt/near/265299858\">said</a>:</p>\n<blockquote>\n<p>Have a look at <code>data.fin.interval</code>. What you want is basically <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin.card_Iio\">docs#fin.card_Iio</a></p>\n</blockquote>\n<p>ahaa thank you!</p>",
        "id": 265301855,
        "sender_full_name": "Joseph Hua",
        "timestamp": 1639751216
    },
    {
        "content": "<p>oh wow you made this very recently</p>",
        "id": 265304209,
        "sender_full_name": "Joseph Hua",
        "timestamp": 1639752288
    },
    {
        "content": "<p>Yeah, this finite intervals refactor started in September and is still happening. I have <a href=\"https://github.com/leanprover-community/mathlib/tree/localfinorder_multiset\">branch#localfinorder_multiset</a> for finite intervals of multisets.</p>",
        "id": 265317318,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639756907
    }
]