[
    {
        "content": "<p>What's the easiest way to take all but the last element of a list?</p>",
        "id": 204298772,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1595075330
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/list.init/src\">src#list.init</a></p>",
        "id": 204298843,
        "sender_full_name": "Reid Barton",
        "timestamp": 1595075419
    },
    {
        "content": "<p>Is human-powered library search (i.e. this stream) the only way to search for this, if you don't know the name? Would this also be the case for Coq/Agda/IsabelleHOL etc?</p>",
        "id": 204301334,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595080192
    },
    {
        "content": "<p>if it had a docstring, then it would not be hard to find by reading <code>list/basic.lean</code></p>",
        "id": 204301452,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1595080345
    },
    {
        "content": "<p>In this case you can go to <a href=\"https://hoogle.haskell.org/?hoogle=[a]%20-%3E%20[a]\">https://hoogle.haskell.org/?hoogle=[a]%20-%3E%20[a]</a> and see it is the second result, then guess the Lean name is the same</p>",
        "id": 204301453,
        "sender_full_name": "Reid Barton",
        "timestamp": 1595080350
    },
    {
        "content": "<p>Right, so occasionally people come here asking for Lean's version of hoogle. It is supposed to be <code>#find</code> but  the output of <code>#find list _ â†’ list _ </code> is over 100 lines long, contains plenty of things not of type <code>list X -&gt; list X</code> (e.g. <code>list.join : list (list X) -&gt; list X</code>), and <code>init</code> is is nearly 50 lines down.</p>",
        "id": 204301536,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595080561
    },
    {
        "content": "<p>Hoogle's output is much more controlled because (if my understanding is correct) it's only giving us <code>list X -&gt; list X</code> and I don't know how to restrict <code>#find</code> in this way.</p>",
        "id": 204301590,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595080635
    },
    {
        "content": "<p>Probably sorting the output of <code>#find</code> using some stupid heuristics (for example: shortest type, counting the number of characters in its string when printed) would already help.</p>",
        "id": 204313165,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1595098488
    }
]