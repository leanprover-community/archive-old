[
    {
        "content": "<p>I'm working on some point-free topology, and was struggling to find a notion of a lattice homomorphism anywhere.</p>",
        "id": 209936773,
        "sender_full_name": "Reed Mullanix",
        "timestamp": 1600011846
    },
    {
        "content": "<p>The file <code>order/rel_iso.lean</code> has everything relevant that we have</p>",
        "id": 209944580,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1600023166
    },
    {
        "content": "<p>In short, we have order embeddings and order isomorphisms, and we know how those relate to lattices, and a general relation homomorphism that generalizes monotone maps, but we don’t have a dedicated type for maps that may not be embeddings/isos but do preserve all lattice operations.</p>",
        "id": 209944678,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1600023344
    },
    {
        "content": "<p>I don’t know your background, but if you’re looking for a place to start/first PR, studying that file and writing a definition of lattice homomorphism seems to me like a decent place to start</p>",
        "id": 209945020,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1600023757
    },
    {
        "content": "<p>I'll probably pester you all with some more silly questions, but I'll give that a go later today :)</p>",
        "id": 209947741,
        "sender_full_name": "Reed Mullanix",
        "timestamp": 1600027858
    },
    {
        "content": "<p>Note that there is in fact <code>preorder_hom</code></p>",
        "id": 209977995,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600072700
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266262\">@Reed Mullanix</span> <span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span> see <code>order/preorder_hom.lean</code></p>",
        "id": 209978034,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600072729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266262\">@Reed Mullanix</span> did you ever make any progress with lattice homomorphisms? I think we'll be wanting them soon, as <span class=\"user-mention\" data-user-id=\"251122\">@Noam Atar</span> has been defining properties of order ideals.</p>",
        "id": 230167929,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615647737
    },
    {
        "content": "<p>Yes please, I'd like them too!</p>",
        "id": 230193924,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615674078
    },
    {
        "content": "<p>Do we have bundled sublattices? (Like <code>subsemiring</code> and friends.) They would be nice too.</p>",
        "id": 230193953,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615674103
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> No, we don't have those either yet. Imitating the algebraic hierarchy around <code>subsemiring</code>, <code>ring_hom</code>, etc. would be a good way to start, right?</p>",
        "id": 230195418,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615675875
    },
    {
        "content": "<p>Yes. On the other hand it's starting to look pretty creaky to have to do this by hand again.</p>",
        "id": 230195780,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615676331
    },
    {
        "content": "<p>I think mathlib is in dire need of a \"subobject\" generator that takes a list of \"closure under\" axioms and builds the 200 or so lines of boilerplate</p>",
        "id": 230199152,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1615680383
    },
    {
        "content": "<p>I know one of <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>'s students was going to start looking at sets closed under <code>+</code>, <code>-</code>, and <code>smul</code> that contain <code>0</code> recently - which is basically <code>submodule</code> but extending <code>subgroup</code> instead of <code>submonoid</code> and without a <code>ring</code> assumption that makes the <code>-</code> irrelevant. The number of the subobjects that can exist is exponential in the number of operators, which feels really bad.</p>",
        "id": 230199181,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1615680456
    },
    {
        "content": "<p>A lot of the API can come from the fact that <code>closure</code> is a Galois Insertion representing a finitary closure operator, I think this might get us a lot of the way there</p>",
        "id": 230210005,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1615694161
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302826\">Aaron Anderson</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Lattice.20Homomorphisms.3F/near/230210005\">said</a>:</p>\n<blockquote>\n<p>A lot of the API can come from the fact that <code>closure</code> is a Galois Insertion representing a finitary closure operator, I think this might get us a lot of the way there</p>\n</blockquote>\n<p>I'd love to see how this works, if you wouldn't mind sketching some of this out.</p>",
        "id": 230215751,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615701163
    },
    {
        "content": "<p>That's normally the quickest way to get to the sublattice I think. Here this would involve defining the G-invariant-subgroup-closure of either a subgroup or a G-invariant subset (note that the definition of G-invariant subgroup is just to switch on the old structure command and then extend <code>sub_mul_action</code> and <code>subgroup</code>, so the game seems to be that you have to make it back to one of the things you extended). You can either do it with an inductive prop or prove closed under arbitrary intersections first and use this. Then you prove enough about it to be able to use the theorem which pulls back complete lattice structures along Galois insertions. Then I still want \"kernel and range of a G-module map are G-submodules\" and a <code>map</code> and <code>comap</code> which are also a Galois connection</p>",
        "id": 230223837,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1615711033
    },
    {
        "content": "<p>It's all a great exercise for a beginner by the way</p>",
        "id": 230224402,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1615711795
    },
    {
        "content": "<p>Or we could define lattices as substructures of lattices in a given first-order language, and just prove that boilerplate once more for substructures</p>",
        "id": 230250906,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1615739109
    },
    {
        "content": "<p>Is there any progress on this? I'd like to try getting to things like Stone duality for profinite sets, so some notions of lattice homomorphisms would be helpful</p>",
        "id": 236845991,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1619794252
    }
]