[
    {
        "content": "<p>Title; this would be mighty helpful if it exists!</p>",
        "id": 243669913,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1624462525
    },
    {
        "content": "<p>You can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.filter\">docs#finset.filter</a></p>",
        "id": 243670177,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1624462621
    },
    {
        "content": "<p>often when I use <code>filter</code> it ends up being awkward, but I guess that'll work fine for this tbh</p>",
        "id": 243670288,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1624462670
    },
    {
        "content": "<p>The lemma <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.mem_filter\">docs#finset.mem_filter</a> should make this a useful enough approach, I think.</p>",
        "id": 243670482,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1624462750
    },
    {
        "content": "<p>Does using <code>finset.filter</code> count as breaking through the barrier of the set API?</p>",
        "id": 243670584,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1624462797
    },
    {
        "content": "<p>If you use set membership as the prop, then I think it's okay?</p>",
        "id": 243670722,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1624462837
    },
    {
        "content": "<p>This relies on the decidability of membership in the set, iirc</p>",
        "id": 243671013,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1624462960
    }
]