[
    {
        "content": "<p>Is there a command to \"refine\" a proof? E.g. I have </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span> <span class=\"c1\">-- imports all the Lean tactics</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.basis</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">t</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">•</span> <span class=\"o\">((</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"bp\">-</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"o\">,</span><span class=\"mi\">9</span><span class=\"o\">,</span><span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span><span class=\"n\">b</span><span class=\"o\">,</span><span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">use</span> <span class=\"mi\">2</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"mi\">3</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span><span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">split</span><span class=\"o\">,</span> <span class=\"n\">ring</span><span class=\"o\">,</span> <span class=\"n\">split</span><span class=\"o\">,</span> <span class=\"n\">ring</span><span class=\"o\">,</span> <span class=\"n\">ring</span><span class=\"o\">,},</span>\n    <span class=\"o\">{</span><span class=\"n\">simp</span><span class=\"o\">,},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>and I want to make it shorter. Can I call a command to do so? If not, can you just tell me how to make it shorter? Surely I should be able to fit all four <code>use</code>s in one command</p>",
        "id": 284299551,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1653849941
    },
    {
        "content": "<p>I think you're looking for <code>refine</code></p>",
        "id": 284299875,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1653850338
    },
    {
        "content": "<p>Try <code>refine ⟨2, 3, -2, -1, _⟩</code></p>",
        "id": 284299884,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1653850354
    },
    {
        "content": "<p>You can also use the <code>use</code> tactic for this though, <code>use [2, 3, -2, -1]</code></p>",
        "id": 284299896,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1653850368
    },
    {
        "content": "<p>Up to you</p>",
        "id": 284299898,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1653850370
    },
    {
        "content": "<p>Nice, thanks!</p>",
        "id": 284299920,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1653850414
    },
    {
        "content": "<p>It's <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#zulip\">tactic#zulip</a> <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 284300462,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1653851032
    }
]