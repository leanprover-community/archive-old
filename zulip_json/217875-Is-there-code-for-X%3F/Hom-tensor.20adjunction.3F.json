[
    {
        "content": "<p>Do we have the tensor-hom adjunction for modules over commutative rings? (is this just currying the definition?)</p>\n<p>Really all I want is that tensoring is right exact, so if there's some slick way of deriving that from what's already known I'd be happy with that too.</p>",
        "id": 281459083,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1651852586
    },
    {
        "content": "<p>How do you want to phrase \"right exact\"ness?</p>",
        "id": 281459665,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1651852835
    },
    {
        "content": "<p>If you're just looking for the surjectivity claim, then the easiest approachh would be to use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tensor_product.induction_on\">docs#tensor_product.induction_on</a> (if the statement is not already in mathlib)</p>",
        "id": 281459744,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1651852884
    },
    {
        "content": "<p>I have a proof of the surjective part. Indeed the <code>induction_on</code> made it a breeze. But exactness in the middle (which I'm stating as <code>(ltensor N f).range = (ltensor N g).ker</code>) turns out to be a slog to do by hand...</p>",
        "id": 281460316,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1651853210
    },
    {
        "content": "<p>Where <code>f : M →ₗ[R] M'</code> and <code>g : M' →ₗ[R] M''</code> are the maps of the exact sequence.</p>",
        "id": 281460378,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1651853252
    },
    {
        "content": "<p>I see. Well, the \"tensor hom adjunction\" is essentially this <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tensor_product.lift.equiv\">docs#tensor_product.lift.equiv</a></p>",
        "id": 281460402,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1651853261
    },
    {
        "content": "<p>I don't know if we have it in mathlib in terms of a categorical statement involving <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.adjunction\">docs#category_theory.adjunction</a></p>",
        "id": 281460506,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1651853299
    },
    {
        "content": "<p>Scratch that, we do have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Module.category_theory.monoidal_closed\">docs#Module.category_theory.monoidal_closed</a></p>",
        "id": 281460566,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1651853336
    },
    {
        "content": "<p>Oh right, I remember Scott Morrison mentioned that in another thread a while back but I forgot about it. Thanks!</p>",
        "id": 281460839,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1651853497
    },
    {
        "content": "<p>What we are missing (afaik) is a good bit of glue between (right/left) exact functors and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.exact\">docs#category_theory.exact</a></p>",
        "id": 281465650,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1651856076
    }
]