[
    {
        "content": "<p>Do we have an easy way to prove the following?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">linear_algebra.finite_dimensional</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">]</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">finite_dimensional</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">A</span> <span class=\"bp\">≠</span> <span class=\"n\">B</span> <span class=\"bp\">→</span> <span class=\"n\">finrank</span> <span class=\"n\">K</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">→</span> <span class=\"n\">finrank</span> <span class=\"n\">K</span> <span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">→</span> <span class=\"n\">finrank</span> <span class=\"n\">K</span> <span class=\"n\">C</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span>\n  <span class=\"n\">A</span> <span class=\"bp\">≤</span> <span class=\"n\">C</span> <span class=\"bp\">→</span> <span class=\"n\">B</span> <span class=\"bp\">≤</span> <span class=\"n\">C</span> <span class=\"bp\">→</span> <span class=\"n\">finrank</span> <span class=\"n\">K</span> <span class=\"o\">((</span><span class=\"n\">A</span> <span class=\"bp\">⊓</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 276530715,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1648151573
    },
    {
        "content": "<p>If A=B it's false</p>",
        "id": 276531929,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648152072
    },
    {
        "content": "<p>blah</p>",
        "id": 276531972,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1648152097
    },
    {
        "content": "<p>fixed <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 276532101,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1648152148
    },
    {
        "content": "<p>A more general variant:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">finite_dimensional</span> <span class=\"n\">K</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">finite_dimensional</span> <span class=\"n\">K</span> <span class=\"n\">B</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">finrank</span> <span class=\"n\">K</span> <span class=\"o\">((</span><span class=\"n\">A</span> <span class=\"bp\">⊔</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"n\">finrank</span> <span class=\"n\">K</span> <span class=\"o\">((</span><span class=\"n\">A</span> <span class=\"bp\">⊓</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">))</span> <span class=\"bp\">=</span>\n  <span class=\"n\">finrank</span> <span class=\"n\">K</span> <span class=\"n\">A</span> <span class=\"bp\">+</span> <span class=\"n\">finrank</span> <span class=\"n\">K</span> <span class=\"n\">B</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 276532384,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1648152285
    },
    {
        "content": "<p>this is library_search</p>",
        "id": 276532694,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648152471
    },
    {
        "content": "<p>really?!</p>",
        "id": 276532757,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1648152484
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/submodule.dim_sup_add_dim_inf_eq\">docs#submodule.dim_sup_add_dim_inf_eq</a></p>",
        "id": 276532794,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648152505
    },
    {
        "content": "<p>library search is not working for me.</p>",
        "id": 276532798,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1648152507
    },
    {
        "content": "<p>I don't see how we could have a definition of  <code>finrank</code> without having this.</p>",
        "id": 276532890,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1648152557
    },
    {
        "content": "<p>I agree!</p>",
        "id": 276532916,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1648152573
    },
    {
        "content": "<p>I don't know why library search failed... Maybe I need to adjust my editor settings.</p>",
        "id": 276532960,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1648152599
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> has marked this topic as resolved.</p>",
        "id": 276533076,
        "sender_full_name": "Notification Bot",
        "timestamp": 1648152655
    }
]