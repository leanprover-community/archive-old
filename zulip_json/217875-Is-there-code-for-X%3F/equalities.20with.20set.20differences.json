[
    {
        "content": "<p>I did not find the following two, although I suspect they must exist. If they do, where? If not, should they, and how to golf their proofs to an acceptable shape?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">union_diff_of_subset</span> <span class=\"o\">{</span><span class=\"n\">α'</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α'</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hst</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">s</span> <span class=\"bp\">∪</span> <span class=\"o\">(</span><span class=\"n\">t.diff</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">le_antisymm</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n    <span class=\"n\">by_cases</span> <span class=\"n\">hxs</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">hxs</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">hxs</span><span class=\"o\">⟩,</span> <span class=\"o\">},</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">le_eq_subset</span><span class=\"o\">,</span> <span class=\"n\">union_subset_iff</span><span class=\"o\">],</span>\n    <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">hst</span><span class=\"o\">,</span> <span class=\"n\">sep_subset</span> <span class=\"n\">t</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α'</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">∉</span> <span class=\"n\">s</span><span class=\"o\">)⟩,</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">diff_diff_of_subset</span> <span class=\"o\">{</span><span class=\"n\">α'</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α'</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hst</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">t.diff</span> <span class=\"o\">(</span><span class=\"n\">t.diff</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">le_antisymm</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n    <span class=\"n\">fsplit</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">hst</span> <span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">h.2</span> <span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"o\">},</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n    <span class=\"n\">by_contradiction</span> <span class=\"n\">contra</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">hx.2</span> <span class=\"o\">⟨</span><span class=\"n\">hx.1</span><span class=\"o\">,</span> <span class=\"n\">contra</span><span class=\"o\">⟩,</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 246237240,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1626448768
    },
    {
        "content": "<p>I just used this the other day!  Let me find it :)</p>",
        "id": 246237427,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1626448864
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.diff_union_of_subset\">docs#set.diff_union_of_subset</a></p>",
        "id": 246237508,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1626448920
    },
    {
        "content": "<p>and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.diff_diff_cancel_left\">docs#set.diff_diff_cancel_left</a></p>",
        "id": 246237696,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1626449022
    },
    {
        "content": "<p>Ah, with the first I knew I should try the equality both ways to help <code>library_search</code>, but didn't think of writing the union in that order... </p>\n<p>And I almost guessed the name of the second, but autocomplete did not suggest this...</p>\n<p>Thank you very much, Heather!</p>",
        "id": 246237733,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1626449042
    }
]