[
    {
        "content": "<p>Do we have something like the following construction? If not, what should we call it?!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">mul_action</span> <span class=\"n\">G</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"c1\">-- TODO: Rename this!</span>\n<span class=\"kn\">namespace</span> <span class=\"n\">quotient_thing</span>\n\n<span class=\"kd\">@[simps]</span>\n<span class=\"kd\">def</span> <span class=\"n\">setoid</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"bp\">•</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span><span class=\"o\">⟩,</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">⟨</span><span class=\"n\">g</span><span class=\"o\">,</span><span class=\"n\">hg</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">g</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">hg</span><span class=\"o\">]⟩,</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">⟨</span><span class=\"n\">g</span><span class=\"o\">,</span><span class=\"n\">hg</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"n\">h</span><span class=\"o\">,</span><span class=\"n\">hh</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">h</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">mul_smul</span><span class=\"o\">,</span> <span class=\"n\">hh</span><span class=\"o\">,</span> <span class=\"n\">hg</span><span class=\"o\">]⟩⟩</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">quotient_thing</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">quotient_thing</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">quotient_thing.setoid</span> <span class=\"n\">G</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 224747650,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612195360
    },
    {
        "content": "<p><code>∃ g : G, g • x = y</code> is <code>y ∈ mul_action.orbit G x</code> if that helps</p>",
        "id": 224748530,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612195625
    },
    {
        "content": "<p>Your <code>quotient_thing.setoid</code> is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mul_action.orbit_rel\">docs#mul_action.orbit_rel</a></p>",
        "id": 224748769,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612195710
    },
    {
        "content": "<p>And the quotient by it seems to be used here: <a href=\"https://github.com/leanprover-community/mathlib/blob/39ecd1abaabede897b2e5367efc2af8cdcadcc5b/src/group_theory/sylow.lean#L39\">https://github.com/leanprover-community/mathlib/blob/39ecd1abaabede897b2e5367efc2af8cdcadcc5b/src/group_theory/sylow.lean#L39</a></p>",
        "id": 224748927,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612195789
    },
    {
        "content": "<p>Any suggestions on naming the quotient?</p>",
        "id": 224749545,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612196026
    },
    {
        "content": "<p>None, I don't actually know this stuff, I just remembered finding it when moving stuff around to fix import cycles</p>",
        "id": 224750491,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612196381
    },
    {
        "content": "<p><code>mul_action.orbits</code>?</p>",
        "id": 224751969,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1612196900
    }
]