[
    {
        "content": "<p>Library search isn't finding this anyway - does it exist?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.fintype.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.nat.factorial</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">ι</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">finset.univ</span> <span class=\"o\">(</span><span class=\"n\">equiv.perm</span> <span class=\"n\">ι</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">fintype.card</span> <span class=\"n\">ι</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">factorial</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>",
        "id": 218727264,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607016575
    },
    {
        "content": "<p>Does it exist for <code>ι = fin n</code>?</p>",
        "id": 218727663,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1607016763
    },
    {
        "content": "<p>Oh, it's <del>docs#fintype.card_equiv</del> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fintype.card_perm\">docs#fintype.card_perm</a></p>",
        "id": 218727929,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607016898
    },
    {
        "content": "<p>I guess library_search couldn't unfold <code>perm</code>?</p>",
        "id": 218727958,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607016912
    },
    {
        "content": "<p>I think <code>fintype.card_perm</code> needs <code>[decidable_eq \\iota]</code>?</p>",
        "id": 218728031,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1607016962
    },
    {
        "content": "<p>I think in my real example I already have that, but now lean is rebuilding the universe so I guess I'll never know</p>",
        "id": 218728390,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607017134
    },
    {
        "content": "<p>huh, this is just a library_search quirk - <code>exact fintype.card_perm</code> closed my goal</p>",
        "id": 218728620,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607017246
    },
    {
        "content": "<p>Aha, it's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.card_univ\">docs#finset.card_univ</a> that I was missing</p>",
        "id": 218729044,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607017437
    },
    {
        "content": "<p><code>library_search!</code> will unfold more btw</p>",
        "id": 218729259,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1607017525
    },
    {
        "content": "<p>Sometiimes that makes the difference.</p>",
        "id": 218729278,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1607017537
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span> Should the tactics docs mention this? (It doesn't look like they do at this point). Where does one make PRs for these docs?</p>",
        "id": 218729645,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607017705
    },
    {
        "content": "<p>Yes, it definitely should. The doc string for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.interactive.library_search\">docs#tactic.interactive.library_search</a> does actually mention it, but for some reason there's a shorter version being used for the tactic doc entry.</p>",
        "id": 218729942,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1607017849
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/tactic/suggest.lean#L495\">https://github.com/leanprover-community/mathlib/blob/master/src/tactic/suggest.lean#L495</a> is the line that creates the doc entry.</p>",
        "id": 218729976,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1607017867
    },
    {
        "content": "<p>In this case, the doc string right above that line is the entry. But we should just delete that and use the doc string on the tactic.</p>",
        "id": 218730071,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1607017909
    },
    {
        "content": "<p>I'll do it.</p>",
        "id": 218730075,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1607017911
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/5206\">#5206</a></p>",
        "id": 218730686,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1607018161
    }
]