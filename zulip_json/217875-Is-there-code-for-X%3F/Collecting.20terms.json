[
    {
        "content": "<p>I've found myself with goals along the lines of <code>x • A - y • B + z • A = p • B - q • B + r • A</code>, and I'd like a tactic that splits this into two goals <code>x + z = r</code> and <code>-y = p - q</code> by matching coefficients of <code>A</code> and <code>B</code> respectively. Do we have anything like this?</p>",
        "id": 244283090,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624974462
    },
    {
        "content": "<p>Essentially, I guess this breaks down into some tactic to work out the collected goal state, and an <code>abel</code> tactic that knows about <code>smul</code> by non-integers</p>",
        "id": 244283273,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624974516
    },
    {
        "content": "<p>I'm not aware of such a tactic. You can pull it off with a good <code>suffices : ...</code> and <code>abel</code>/<code>smul</code> to close the goal it creates.</p>",
        "id": 244283804,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1624974720
    },
    {
        "content": "<p>I really don't want to do that, as in my real situation I have <code>A B C D</code>, and each appears on each side 4 times with a 3-term coefficient</p>",
        "id": 244283979,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624974772
    },
    {
        "content": "<p>So the resulting suffices is huge</p>",
        "id": 244284038,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624974792
    },
    {
        "content": "<p>My real goal is</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">⊢</span> <span class=\"o\">(</span><span class=\"n\">x.re</span> <span class=\"bp\">*</span> <span class=\"n\">y.re</span> <span class=\"bp\">+</span> <span class=\"n\">c₁</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_i</span> <span class=\"bp\">*</span> <span class=\"n\">y.im_i</span> <span class=\"bp\">+</span> <span class=\"n\">c₂</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_j</span> <span class=\"bp\">*</span> <span class=\"n\">y.im_j</span> <span class=\"bp\">-</span> <span class=\"n\">c₁</span> <span class=\"bp\">*</span> <span class=\"n\">c₂</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_k</span> <span class=\"bp\">*</span> <span class=\"n\">y.im_k</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span>\n          <span class=\"o\">((</span><span class=\"n\">x.re</span> <span class=\"bp\">*</span> <span class=\"n\">y.im_i</span> <span class=\"bp\">+</span> <span class=\"n\">x.im_i</span> <span class=\"bp\">*</span> <span class=\"n\">y.re</span> <span class=\"bp\">-</span> <span class=\"n\">c₂</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_j</span> <span class=\"bp\">*</span> <span class=\"n\">y.im_k</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.i</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">c₂</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_k</span> <span class=\"bp\">*</span> <span class=\"n\">y.im_j</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.i</span><span class=\"o\">)</span> <span class=\"bp\">+</span>\n        <span class=\"o\">(</span><span class=\"n\">x.re</span> <span class=\"bp\">*</span> <span class=\"n\">y.im_j</span> <span class=\"bp\">+</span> <span class=\"n\">c₁</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_i</span> <span class=\"bp\">*</span> <span class=\"n\">y.im_k</span> <span class=\"bp\">+</span> <span class=\"n\">x.im_j</span> <span class=\"bp\">*</span> <span class=\"n\">y.re</span> <span class=\"bp\">-</span> <span class=\"n\">c₁</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_k</span> <span class=\"bp\">*</span> <span class=\"n\">y.im_i</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.j</span> <span class=\"bp\">+</span>\n      <span class=\"o\">((</span><span class=\"n\">x.re</span> <span class=\"bp\">*</span> <span class=\"n\">y.im_k</span> <span class=\"bp\">+</span> <span class=\"n\">x.im_i</span> <span class=\"bp\">*</span> <span class=\"n\">y.im_j</span> <span class=\"bp\">-</span> <span class=\"n\">x.im_j</span> <span class=\"bp\">*</span> <span class=\"n\">y.im_i</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.k</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">x.im_k</span> <span class=\"bp\">*</span> <span class=\"n\">y.re</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.k</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n    <span class=\"o\">(</span><span class=\"n\">y.re</span> <span class=\"bp\">*</span> <span class=\"n\">x.re</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">y.re</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_i</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.i</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">y.re</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_j</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.j</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">y.re</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_k</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.k</span> <span class=\"bp\">+</span>\n          <span class=\"o\">((</span><span class=\"n\">y.im_i</span> <span class=\"bp\">*</span> <span class=\"n\">x.re</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.i</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">y.im_i</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_i</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">c₁</span> <span class=\"bp\">•</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"o\">((</span><span class=\"n\">y.im_i</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_j</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.k</span><span class=\"o\">)</span> <span class=\"bp\">+</span>\n             <span class=\"bp\">-</span><span class=\"o\">((</span><span class=\"n\">y.im_i</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_k</span> <span class=\"bp\">*</span> <span class=\"n\">c₁</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.j</span><span class=\"o\">))</span> <span class=\"bp\">+</span>\n        <span class=\"o\">((</span><span class=\"n\">y.im_j</span> <span class=\"bp\">*</span> <span class=\"n\">x.re</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.j</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">y.im_j</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_i</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.k</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">y.im_j</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_j</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">c₂</span> <span class=\"bp\">•</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span>\n           <span class=\"o\">(</span><span class=\"n\">y.im_j</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_k</span> <span class=\"bp\">*</span> <span class=\"n\">c₂</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.i</span><span class=\"o\">)</span> <span class=\"bp\">+</span>\n      <span class=\"o\">((</span><span class=\"n\">y.im_k</span> <span class=\"bp\">*</span> <span class=\"n\">x.re</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.k</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">y.im_k</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_i</span> <span class=\"bp\">*</span> <span class=\"n\">c₁</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.j</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"o\">((</span><span class=\"n\">y.im_k</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_j</span> <span class=\"bp\">*</span> <span class=\"n\">c₂</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">q.i</span><span class=\"o\">)</span> <span class=\"bp\">+</span>\n         <span class=\"bp\">-</span><span class=\"o\">((</span><span class=\"n\">y.im_k</span> <span class=\"bp\">*</span> <span class=\"n\">x.im_k</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">c₁</span> <span class=\"bp\">*</span> <span class=\"n\">c₂</span><span class=\"o\">))</span> <span class=\"bp\">•</span> <span class=\"mi\">1</span><span class=\"o\">))</span>\n</code></pre></div>\n</div></div>",
        "id": 244284189,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624974844
    }
]