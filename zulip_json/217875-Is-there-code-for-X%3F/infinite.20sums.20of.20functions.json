[
    {
        "content": "<p>Do we already have lemmas about infinite sums of functions?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology</span><span class=\"bp\">.</span><span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">infinite_sum</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">pi</span><span class=\"bp\">.</span><span class=\"n\">has_sum</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>If not, are there lemmas about <code>tendsto</code> for sequences functions?</p>",
        "id": 208009764,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1598383105
    },
    {
        "content": "<p>(I guess I can generalize <code>α → β</code> to <code>∀ x : α, β x</code>)</p>",
        "id": 208009897,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1598383180
    },
    {
        "content": "<p>What kind of lemma do you want?</p>",
        "id": 208012650,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598384478
    },
    {
        "content": "<p>You have the product topology on <code>α</code> copies of <code>β</code>, and presumably also an <code>add_comm_monoid</code> structure on it.  Can you interpret <code>f</code> as a map from <code>ι</code> to this <code>add_comm_monoid + topological_space</code>?</p>",
        "id": 208013312,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598384851
    },
    {
        "content": "<p>Oh, I see, that's what you're doing.</p>",
        "id": 208013483,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1598384921
    },
    {
        "content": "<p>The lemma I want is</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">measurable</span><span class=\"bp\">.</span><span class=\"n\">ennreal_tsum</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">measurable_space</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">ennreal</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">measurable</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">measurable</span> <span class=\"o\">(</span><span class=\"err\">∑&#39;</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>For this it is probably useful to know what the conclusion evaluates to (I could write <code>measurable (λ x, ∑' i, f i x)</code>, but that seems less canonical)</p>",
        "id": 208014810,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1598385537
    },
    {
        "content": "<p>The sublemma I want is the lemma I posted in the first post.</p>",
        "id": 208015033,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1598385615
    },
    {
        "content": "<p>I'm sorry I was distracted.</p>",
        "id": 208021295,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598388457
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">pi</span><span class=\"bp\">.</span><span class=\"n\">has_sum</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">simp_rw</span> <span class=\"o\">[</span><span class=\"n\">has_sum</span><span class=\"o\">,</span> <span class=\"n\">nhds_pi</span><span class=\"o\">,</span> <span class=\"n\">tendsto_infi</span><span class=\"o\">,</span> <span class=\"n\">tendsto_comap_iff</span><span class=\"o\">],</span>\n  <span class=\"n\">apply</span> <span class=\"n\">forall_congr</span><span class=\"o\">,</span>\n  <span class=\"n\">intro</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"n\">convert</span> <span class=\"n\">iff</span><span class=\"bp\">.</span><span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"n\">ext</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 208021307,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1598388465
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 208021408,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1598388497
    }
]