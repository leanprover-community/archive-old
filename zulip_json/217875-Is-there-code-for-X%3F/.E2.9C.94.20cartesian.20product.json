[
    {
        "content": "<p>Can you give a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>?</p>",
        "id": 274848621,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646925390
    },
    {
        "content": "<p>What exactly goes wrong?</p>",
        "id": 274848624,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1646925392
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.real.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.pointwise</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">data.finset.prod</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">1</span><span class=\"bp\">=</span><span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">let</span> <span class=\"n\">X</span> <span class=\"o\">:=</span> <span class=\"n\">prod</span> <span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">,</span>\n  <span class=\"n\">refl</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 274850387,
        "sender_full_name": "George Shakan",
        "timestamp": 1646926154
    },
    {
        "content": "<p>That is the mwe, works fine</p>",
        "id": 274850414,
        "sender_full_name": "George Shakan",
        "timestamp": 1646926167
    },
    {
        "content": "<p>if I try let X := prod (A+B) B, it gives me the error:</p>\n<p>failed to synthesize type class instance for<br>\nA B : finset ℝ<br>\n⊢ has_add (Type ?)</p>",
        "id": 274850641,
        "sender_full_name": "George Shakan",
        "timestamp": 1646926243
    },
    {
        "content": "<p>(<a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a>, btw)</p>",
        "id": 274850697,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1646926268
    },
    {
        "content": "<p>That's because you use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/prod\">docs#prod</a>, not <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.product\">docs#finset.product</a></p>",
        "id": 274850730,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1646926280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"477771\">George Shakan</span> has marked this topic as resolved.</p>",
        "id": 274851779,
        "sender_full_name": "Notification Bot",
        "timestamp": 1646926670
    }
]