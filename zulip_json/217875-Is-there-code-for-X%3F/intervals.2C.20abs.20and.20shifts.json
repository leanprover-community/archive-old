[
    {
        "content": "<p>In the course of reviewing a PR (<a href=\"https://github.com/leanprover-community/mathlib/issues/5361\">#5361</a>), I needed the lemmas below.  Do they already appear?  What would be a good home?  As I have not used very much the side of mathlib with <code>Icc</code>s and the like, I do not really know where they could go.</p>\n<p>Any suggestions would be very much appreciated!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- A lemma relating a compact interval and its shifts. -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">sub_mem_Icc_iff</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">i</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">α</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">i</span> <span class=\"bp\">↔</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"o\">⟨</span><span class=\"n\">sub_le_iff_le_add.mpr</span> <span class=\"o\">(</span><span class=\"n\">neg_le_sub_iff_le_add.mp</span> <span class=\"n\">a.1</span><span class=\"o\">),</span> <span class=\"n\">sub_le_iff_le_add.mp</span> <span class=\"o\">(</span><span class=\"n\">sub_le.mpr</span> <span class=\"n\">a.2</span><span class=\"o\">)⟩,</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">neg_le_sub_iff_le_add.mpr</span> <span class=\"o\">(</span><span class=\"n\">sub_le_iff_le_add.mp</span> <span class=\"n\">a.1</span><span class=\"o\">)</span> <span class=\"o\">,</span> <span class=\"n\">sub_le_iff_le_add'.mpr</span> <span class=\"n\">a.2</span><span class=\"o\">⟩⟩</span>\n\n<span class=\"sd\">/-- A lemma describing a compact interval via absolute values. -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">abs_le_iff_mem_Icc</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">i</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">i</span> <span class=\"bp\">↔</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">sub_le_of_abs_sub_le_left</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">sub_le_iff_le_add'.mp</span> <span class=\"o\">(</span><span class=\"n\">abs_le.mp</span> <span class=\"n\">h</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">⟩,</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">abs_le.mpr</span> <span class=\"o\">((</span><span class=\"n\">sub_mem_Icc_iff</span> <span class=\"n\">α</span> <span class=\"n\">i</span> <span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">h</span><span class=\"o\">)⟩</span>\n\n<span class=\"sd\">/-- An element of an open interval is closer to the left end-point than</span>\n<span class=\"sd\">the length of the interval. -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">abs_lt_abs_left</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">∈</span> <span class=\"n\">Ioo</span> <span class=\"n\">a</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">abs_lt</span><span class=\"o\">,</span> <span class=\"n\">neg_lt</span><span class=\"o\">,</span> <span class=\"n\">lt_abs</span><span class=\"o\">,</span> <span class=\"n\">lt_abs</span><span class=\"o\">,</span> <span class=\"n\">neg_sub</span><span class=\"o\">,</span> <span class=\"n\">neg_sub</span><span class=\"o\">],</span>\n  <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">or.inr</span> <span class=\"o\">(</span><span class=\"n\">sub_lt_sub_right</span> <span class=\"n\">hc.2</span> <span class=\"n\">a</span><span class=\"o\">),</span> <span class=\"n\">or.inr</span> <span class=\"o\">(</span><span class=\"n\">sub_lt_sub</span> <span class=\"o\">(</span><span class=\"n\">lt_trans</span> <span class=\"n\">hc.1</span> <span class=\"n\">hc.2</span><span class=\"o\">)</span> <span class=\"n\">hc.1</span><span class=\"o\">)⟩,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"sd\">/-- An element of an open interval is closer to the right end-point than</span>\n<span class=\"sd\">the length of the interval. -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">abs_lt_abs_right</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">∈</span> <span class=\"n\">Ioo</span> <span class=\"n\">a</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">abs_sub</span><span class=\"o\">,</span> <span class=\"n\">sub_eq_neg_add</span><span class=\"o\">,</span> <span class=\"n\">sub_eq_neg_add</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">neg_neg</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">neg_neg</span> <span class=\"n\">a</span><span class=\"o\">],</span>\n  <span class=\"n\">exact</span> <span class=\"n\">abs_lt_abs_left</span> <span class=\"o\">⟨</span><span class=\"n\">neg_lt_neg_iff.mpr</span> <span class=\"n\">hc.2</span><span class=\"o\">,</span> <span class=\"n\">neg_lt_neg_iff.mpr</span> <span class=\"n\">hc.1</span><span class=\"o\">⟩,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 220213217,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1608189465
    },
    {
        "content": "<p>Is there any reason to use <code>Icc (- i) i</code> instead of an arbitrary <code>Icc</code> in the first lemma?</p>",
        "id": 220287895,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1608232300
    },
    {
        "content": "<p>No real reason other than a lot of the arguments use \"symmetric\" intervals.  I can definitely change this with virtually no effort!</p>",
        "id": 220290292,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1608233397
    },
    {
        "content": "<p>Below are a version of the first lemma above, with arbitrary endpoints and a proof of the symmetric one as a consequence.</p>\n<p>Is there a preference between the <code>simp only</code> proof and the term mode proof in <code>sub_mem_Icc_iff</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- A lemma relating a compact interval and its shifts. -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">sub_mem_Icc_iff</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">l</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"n\">l</span> <span class=\"n\">m</span> <span class=\"bp\">↔</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">le_sub_iff_add_le'</span><span class=\"o\">,</span> <span class=\"n\">sub_le_iff_le_add'</span><span class=\"o\">,</span> <span class=\"n\">iff_self</span><span class=\"o\">,</span> <span class=\"n\">mem_Icc</span><span class=\"o\">]</span>\n<span class=\"c1\">--⟨λ a, ⟨le_sub_iff_add_le'.mp a.1, sub_le_iff_le_add'.mp a.2⟩,</span>\n<span class=\"c1\">--    λ b, ⟨le_sub_iff_add_le'.mpr b.1, sub_le_iff_le_add'.mpr b.2⟩⟩</span>\n\n<span class=\"sd\">/-- A lemma relating a symmetric compact interval and its shifts. -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">sub_mem_Icc_iff_symmetric</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"n\">z</span> <span class=\"bp\">↔</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">z</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sub_mem_Icc_iff</span><span class=\"o\">,</span> <span class=\"n\">tactic.ring.add_neg_eq_sub</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 220340129,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1608271802
    },
    {
        "content": "<p>The statement of the former would seem more natural to me with the + terms on the right commuted</p>",
        "id": 220350473,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608283488
    },
    {
        "content": "<p>You mean <code>lemma sub_mem_Icc_iff (x y l m : ℝ) : (x - y ∈ Icc l m ↔ x ∈ Icc (l + y) (m + y))</code>?</p>",
        "id": 220350566,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1608283547
    },
    {
        "content": "<p>Also I'm surprised <code>add_neg_eq_sub</code> is hidden away in <code>tactic.ring</code> as <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.ring.add_neg_eq_sub\">docs#tactic.ring.add_neg_eq_sub</a>. is there a more public name?</p>",
        "id": 220350685,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608283602
    },
    {
        "content": "<p>I was also surprised by this, but I could not find it and <code>library_search</code> gave me... that!</p>",
        "id": 220350730,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1608283636
    },
    {
        "content": "<p><code>sub_eq_add_neg</code></p>",
        "id": 220350787,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1608283680
    },
    {
        "content": "<p>Reassuringly the <code>ring</code> one is just written in terms of that one</p>",
        "id": 220351611,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608284188
    }
]