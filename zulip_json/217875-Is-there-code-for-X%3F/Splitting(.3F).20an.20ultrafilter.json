[
    {
        "content": "<p>I don't know whether this has a standard name. Do we have something like this in mathlib?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">order.filter.ultrafilter</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n<span class=\"kd\">noncomputable theory</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">filter</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">splitter</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">ultrafilter</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">⊕</span> <span class=\"n\">β</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">set.range</span> <span class=\"n\">sum.inl</span> <span class=\"bp\">∈</span> <span class=\"n\">F.1</span> <span class=\"bp\">∨</span> <span class=\"n\">set.range</span> <span class=\"n\">sum.inr</span> <span class=\"bp\">∈</span> <span class=\"n\">F.1</span> <span class=\"o\">:=</span>\n<span class=\"n\">mem_or_mem_of_ultrafilter</span> <span class=\"n\">F.2</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">convert</span> <span class=\"n\">F.1.univ_sets</span><span class=\"o\">,</span> <span class=\"n\">tidy</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">split</span> <span class=\"o\">:</span> <span class=\"n\">ultrafilter</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">⊕</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ultrafilter</span> <span class=\"n\">α</span> <span class=\"bp\">⊕</span> <span class=\"n\">ultrafilter</span> <span class=\"n\">β</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">F</span><span class=\"o\">,</span>\n<span class=\"o\">(</span><span class=\"n\">splitter</span> <span class=\"n\">F</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">by_cases</span>\n<span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">sum.inl</span> <span class=\"bp\">$</span>\n<span class=\"o\">{</span> <span class=\"n\">val</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"n\">sets</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">s</span> <span class=\"bp\">|</span> <span class=\"n\">sum.inl</span> <span class=\"bp\">''</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">F.1</span> <span class=\"o\">},</span>\n    <span class=\"n\">univ_sets</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simpa</span><span class=\"o\">,</span>\n    <span class=\"n\">sets_of_superset</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">S</span> <span class=\"n\">T</span> <span class=\"n\">hS</span> <span class=\"n\">incl</span><span class=\"o\">,</span> <span class=\"n\">F.1.sets_of_superset</span> <span class=\"n\">hS</span> <span class=\"o\">(</span><span class=\"n\">set.monotone_image</span> <span class=\"n\">incl</span><span class=\"o\">),</span>\n    <span class=\"n\">inter_sets</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span> <span class=\"o\">},</span>\n  <span class=\"n\">property</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span> <span class=\"o\">}</span> <span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">sum.inr</span> <span class=\"bp\">$</span>\n<span class=\"o\">{</span> <span class=\"n\">val</span> <span class=\"o\">:=</span>\n  <span class=\"o\">{</span> <span class=\"n\">sets</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">s</span> <span class=\"bp\">|</span> <span class=\"n\">sum.inr</span> <span class=\"bp\">''</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">F.1</span> <span class=\"o\">},</span>\n    <span class=\"n\">univ_sets</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simpa</span><span class=\"o\">,</span>\n    <span class=\"n\">sets_of_superset</span> <span class=\"o\">:=</span>  <span class=\"bp\">λ</span> <span class=\"n\">S</span> <span class=\"n\">T</span> <span class=\"n\">hS</span> <span class=\"n\">incl</span><span class=\"o\">,</span> <span class=\"n\">F.1.sets_of_superset</span> <span class=\"n\">hS</span> <span class=\"o\">(</span><span class=\"n\">set.monotone_image</span> <span class=\"n\">incl</span><span class=\"o\">),</span>\n    <span class=\"n\">inter_sets</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span> <span class=\"o\">},</span>\n  <span class=\"n\">property</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span> <span class=\"o\">}</span> <span class=\"o\">)</span>\n</code></pre></div>\n<p>I have some not-very-pretty proofs for these sorry's, but if anyone wants a golf challenge, I'm sure they can be boiled down to a few lines.</p>",
        "id": 218237619,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606694826
    },
    {
        "content": "<p>I think you should prove something like if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A \\to B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is injective and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span> is an ultrafilter on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> for which the image of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is \"big\", then <code>filter.comap</code> of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span> is an ultrafilter on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span></p>",
        "id": 218238180,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606695617
    },
    {
        "content": "<p>(hopefully I have the statement right)</p>",
        "id": 218238218,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606695691
    },
    {
        "content": "<p>Yes that's right</p>",
        "id": 218238268,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606695728
    },
    {
        "content": "<p>and that seems pretty easy because the union of the images of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>−</mo><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">A - S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> is the image of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> which is big</p>",
        "id": 218238291,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606695810
    },
    {
        "content": "<p>Im a bit surprised this is not in mathlib</p>",
        "id": 218238361,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606695931
    },
    {
        "content": "<p>I guess <code>comap</code> along an injective function is given by your definition? I don't see that in mathlib though</p>",
        "id": 218238364,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606695940
    },
    {
        "content": "<p><code>image_mem_sets</code> is one half</p>",
        "id": 218238407,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606695969
    },
    {
        "content": "<p>I can also use some shenanigans to define this using the fact that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>β</mi><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">\\beta X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> is compact Hausdorff and the disjoint union of two comphaus's is again a CompHaus. But it feels like we should have an explicit description too</p>",
        "id": 218238469,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606696100
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/ultrafilter_comap_large\">branch#ultrafilter_comap_large</a><br>\nThe proofs could probably use some golfing. I'll try to open a PR soon.</p>",
        "id": 218374333,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606790146
    },
    {
        "content": "<p>Who came up with this comap terminology btw?</p>",
        "id": 218374419,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606790257
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Splitting(.3F).20an.20ultrafilter/near/218374419\">said</a>:</p>\n<blockquote>\n<p>Who came up with this comap terminology btw?</p>\n</blockquote>\n<p><img alt=\":haskell:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/3121/emoji/images/17951.png\" title=\"haskell\"> ?</p>",
        "id": 218375577,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606791718
    },
    {
        "content": "<p>No idea... it's something that already existed in mathlib when I showed up. And it's shorter than <code>pullback</code>, so I went along (-;</p>",
        "id": 218380511,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1606798030
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/5195\">#5195</a></p>",
        "id": 218635006,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606951644
    }
]