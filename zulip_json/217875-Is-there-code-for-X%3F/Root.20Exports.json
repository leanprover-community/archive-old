[
    {
        "content": "<p>Is there any way to export names from the root namespace into other namespaces?</p>",
        "id": 232211844,
        "sender_full_name": "Mac",
        "timestamp": 1616986433
    },
    {
        "content": "<p><code>export</code> doesn't create a new name. It just makes the old name available without an explicit prefix.</p>",
        "id": 232212553,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1616987170
    },
    {
        "content": "<p>If you want to have a new <code>def</code>, then you can create an alias (either manually or using <code>alias</code> command).</p>",
        "id": 232212574,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1616987199
    },
    {
        "content": "<p>BTW, <a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a> <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>",
        "id": 232212587,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1616987230
    },
    {
        "content": "<p>What exactly do you want to achieve (i.e., what code doesn't work now and should work after some non-existing <code>export_from_root my_name my_ns</code> command)?</p>",
        "id": 232212602,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1616987280
    },
    {
        "content": "<p>In mathlib we have some really convenient root declarations that have aliases in a namespace <a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/order.html#lemmas-about-inequalities\">at the beginning of <code>algebra.order</code></a>. (These are all created using <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#alias\">tactic#alias</a>.)</p>",
        "id": 232212787,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1616987452
    },
    {
        "content": "<p>That's why I asked for an <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>: if we're talking about a lemma, then sometimes it makes sense to create an alias (e.g., to allow dot notation). If we're talking about a <code>def</code>, then creating an alias creates a new definition, and Lean won't know that they are the same thing.</p>",
        "id": 232212878,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1616987592
    },
    {
        "content": "<p>Why don't we just use <code>export</code> everywhere instead of <code>alias</code>? Does it not work for dot notation?</p>",
        "id": 232240557,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617010350
    },
    {
        "content": "<p>My problem is the following: I have a namespace <code>Gaea.Math</code> and I would like to export the root <code>Add</code> into the namespace so that I can access it by <code>Gaea.Math.Add</code> (or from within the Gaea namespace itself by <code>Math.Add</code>). Does that make sense?</p>",
        "id": 233129299,
        "sender_full_name": "Mac",
        "timestamp": 1617589201
    },
    {
        "content": "<p>Are you taking about lean 3 or lean 4?</p>",
        "id": 233152454,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617614251
    },
    {
        "content": "<p>(since 3's <code>has_add</code> is 4's <code>HasAdd</code>, and you're taking about <code>Add</code>)</p>",
        "id": 233152539,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617614308
    },
    {
        "content": "<p>Actually <code>has_add</code> was renamed to <code>Add</code></p>",
        "id": 233156254,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617617643
    },
    {
        "content": "<p>the <code>has_*</code> classes lost the <code>Has</code></p>",
        "id": 233156286,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1617617656
    },
    {
        "content": "<p>Yeah, my use case is in lean 4.</p>",
        "id": 233385576,
        "sender_full_name": "Mac",
        "timestamp": 1617741952
    },
    {
        "content": "<p>Then you might do better to ask in <a class=\"stream\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4\">#lean4</a>, but I'd recommend preparing a full <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> before posting there.</p>",
        "id": 233387562,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1617742792
    }
]