[
    {
        "content": "<p>I can't work out how to do this.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">category</span><span class=\"bp\">.</span><span class=\"n\">CommRing</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">category_theory</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">Ring</span><span class=\"bp\">.</span><span class=\"n\">of</span> <span class=\"bp\">ℤ</span> <span class=\"err\">⟶</span> <span class=\"n\">Ring</span><span class=\"bp\">.</span><span class=\"n\">of</span> <span class=\"n\">ℚ</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>",
        "id": 198729077,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1590478953
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">category</span><span class=\"bp\">.</span><span class=\"n\">CommRing</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">category_theory</span>\n\n<span class=\"n\">def</span> <span class=\"n\">something</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span> <span class=\"bp\">→+*</span> <span class=\"n\">ℚ</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">Ring</span><span class=\"bp\">.</span><span class=\"n\">of</span> <span class=\"bp\">ℤ</span> <span class=\"err\">⟶</span> <span class=\"n\">Ring</span><span class=\"bp\">.</span><span class=\"n\">of</span> <span class=\"n\">ℚ</span> <span class=\"o\">:=</span> <span class=\"n\">something</span>\n</code></pre></div>\n\n\n<p>seems to work just fine for me</p>",
        "id": 198729846,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1590479456
    },
    {
        "content": "<p>Ah, I didn't realise that the definition was just <code>ring_hom</code></p>",
        "id": 198731408,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1590480357
    },
    {
        "content": "<p>There are layers and layers in category theory, that's one reason it's so hard to use</p>",
        "id": 198740815,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590487064
    },
    {
        "content": "<p>Using the interface is fine if you have access to examples, and making it can be very hard</p>",
        "id": 198740876,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590487091
    },
    {
        "content": "<p>I feel like there's quite a lot of <code>erw</code> in category_theory. You have to know how things unfold</p>",
        "id": 198741912,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1590487728
    },
    {
        "content": "<p>The <code>erw</code>s are mainly to deal with definitional equalities like <code>(F &gt;&gt;&gt; G).obj X = G.obj (F.obj X)</code> appearing in implicit arguments of things like composition, I think.</p>",
        "id": 198743914,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590489299
    },
    {
        "content": "<p>The alternative to knowing how <code>(F &gt;&gt;&gt; G).obj</code> unfolds would be not being able to compose a map into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>F</mi><mi>G</mi><mo stretchy=\"false\">)</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">(FG)X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathdefault\">G</span><span class=\"mclose\">)</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> with a map out of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo stretchy=\"false\">(</mo><mi>G</mi><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">F(GX)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">G</span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span></p>",
        "id": 198743958,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590489339
    },
    {
        "content": "<p>it's fine, you just right whisker with the associator (or something...)</p>",
        "id": 198744099,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1590489418
    },
    {
        "content": "<p>right, this is sort of like pretending that Cat isn't actually a strict 2-category, but only a bicategory</p>",
        "id": 198744258,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590489502
    },
    {
        "content": "<p>In math people usually do the reverse (suppress all the coherence morphisms when computing in a bicategory), because it's so dreadful to write them out</p>",
        "id": 198744309,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590489549
    },
    {
        "content": "<p>The other issue at hand here is a questionable behavior of <code>simp</code> (which we now at least understand thanks to Gabriel) which causes it to take syntactic matching very seriously</p>",
        "id": 198744456,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590489657
    }
]