[
    {
        "content": "<p>I want to take an equivalence relation and apply it to a pair of lists. If the lists have different lengths, it should return false. If the lists have the same lengths, it should apply the binary relation pointwisely and return the conjunction of all outputs.</p>\n<p>I want to have a lemma (instance) saying that the resulting relation on lists is again an equivalence relation. Is it in mathlib?</p>",
        "id": 290274044,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1658340336
    },
    {
        "content": "<p>Is this <a href=\"https://leanprover-community.github.io/mathlib_docs/find/list\">docs#list</a>.forall₂? (Edit: <a href=\"https://leanprover-community.github.io/mathlib_docs/data/list/defs.html#list.forall%E2%82%82\">https://leanprover-community.github.io/mathlib_docs/data/list/defs.html#list.forall%E2%82%82</a>)</p>",
        "id": 290277579,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658341702
    },
    {
        "content": "<p>Yeah, it's that</p>",
        "id": 290278050,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658341895
    },
    {
        "content": "<p>Here's where API for that goes: <a href=\"https://leanprover-community.github.io/mathlib_docs/data/list/forall2.html\">https://leanprover-community.github.io/mathlib_docs/data/list/forall2.html</a></p>",
        "id": 290278208,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1658341964
    },
    {
        "content": "<p>Nothing about equivalence relations yet</p>",
        "id": 290278224,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1658341970
    },
    {
        "content": "<p>We have the fact it's transitive and reflexive already</p>",
        "id": 290279329,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658342410
    },
    {
        "content": "<p>Would a <code>list.sublist_forall₂.is_equiv</code> instance cause loops?</p>",
        "id": 290280345,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658342843
    },
    {
        "content": "<p>Not too sure how typeclass inference works for these predicates made out of simpler ones</p>",
        "id": 290280664,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658342964
    },
    {
        "content": "<p>It ought to be fine</p>",
        "id": 290283474,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658344064
    },
    {
        "content": "<p>Wait, is this really symmetric? Surely <code>sublist_forall₂ r [] (a :: l)</code> but not the other way around?</p>",
        "id": 290284899,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658344688
    },
    {
        "content": "<p>We weren't talking about <code>sublist_forall₂</code>, were we?</p>",
        "id": 290288763,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658346345
    },
    {
        "content": "<p>oops</p>",
        "id": 290293690,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1658348756
    }
]