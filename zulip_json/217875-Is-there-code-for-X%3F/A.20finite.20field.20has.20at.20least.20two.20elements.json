[
    {
        "content": "<p>I can't find something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">finite_field.two_le_card</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">fintype.card</span> <span class=\"n\">F</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>in the library. Is it just me, or do I need to go via the fact that <code>fintype.card F</code> is a prime power and prime powers are at least 2?</p>",
        "id": 278729589,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1649786382
    },
    {
        "content": "<p>Is that too hard?</p>",
        "id": 278729698,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649786412
    },
    {
        "content": "<p>No, but the statement seems to be an obvious candidate...</p>",
        "id": 278729783,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1649786432
    },
    {
        "content": "<p>Perhaps it is easier to use that <code>0 ≠ 1</code>?</p>",
        "id": 278729822,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1649786452
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/fintype.one_lt_card\">docs#fintype.one_lt_card</a></p>",
        "id": 278729898,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1649786495
    },
    {
        "content": "<p>OK.</p>",
        "id": 278730107,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1649786600
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/fintype.one_lt_card_iff_nontrivial\">docs#fintype.one_lt_card_iff_nontrivial</a></p>",
        "id": 278731301,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649787099
    },
    {
        "content": "<p>oh, I see Yael posted this</p>",
        "id": 278731413,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1649787144
    },
    {
        "content": "<p>All fields should have a <code>[nontrivial F]</code> instance, which gives you two nonequal elements</p>",
        "id": 278733698,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1649788172
    },
    {
        "content": "<p>The two lemmas above can then be used to get the bound on cardinality</p>",
        "id": 278733861,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1649788222
    }
]