[
    {
        "content": "<p>What is <code>(fin (n + 1) → β) ≃ β × (fin n → β)</code> called? I found <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.pi_fin_succ_above_equiv\">docs#equiv.pi_fin_succ_above_equiv</a>, but it's much too general.</p>",
        "id": 283298013,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1653301566
    },
    {
        "content": "<p>Just set <code>α := λ _, β</code> and you have it.</p>",
        "id": 283298114,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1653301630
    },
    {
        "content": "<p>Also, you need to tell us where you're inserting the new element.</p>",
        "id": 283298167,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1653301672
    },
    {
        "content": "<p>Yeah... Clearly we should have the specialisation.</p>",
        "id": 283298228,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1653301691
    },
    {
        "content": "<p>We might have something around <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin.cons_injective\">docs#fin.cons_injective</a> or near <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.vec_cons\">docs#matrix.vec_cons</a></p>",
        "id": 283303970,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1653305100
    },
    {
        "content": "<p>do we have <code>fin (n + 1) \\equiv option (fin n)</code>? This seems like the most natural way of phrasing this</p>",
        "id": 283305312,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1653305816
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin_succ_equiv\">docs#fin_succ_equiv</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin_succ_equiv'\">docs#fin_succ_equiv'</a></p>",
        "id": 283305483,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1653305888
    },
    {
        "content": "<p>And <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin_succ_equiv_last\">docs#fin_succ_equiv_last</a> which specializes the primed version</p>",
        "id": 283305587,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1653305952
    }
]