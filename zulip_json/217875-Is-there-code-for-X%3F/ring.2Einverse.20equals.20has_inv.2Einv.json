[
    {
        "content": "<p>Do we have this anywhere?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">G₀</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">group_with_zero</span> <span class=\"n\">G₀</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G₀</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ring.inverse</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"n\">g</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">obtain</span> <span class=\"n\">rfl</span> <span class=\"bp\">|</span> <span class=\"n\">hg</span> <span class=\"o\">:=</span> <span class=\"n\">eq_or_ne</span> <span class=\"n\">g</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ring.inverse_non_unit</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">G₀</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">not_is_unit_zero</span><span class=\"o\">),</span> <span class=\"n\">_root_.inv_zero</span><span class=\"o\">],</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">lift</span> <span class=\"n\">g</span> <span class=\"n\">to</span> <span class=\"n\">units</span> <span class=\"n\">G₀</span> <span class=\"n\">using</span> <span class=\"n\">hg</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ring.inverse_unit</span><span class=\"o\">,</span> <span class=\"n\">units.coe_inv'</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 259518705,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635511568
    },
    {
        "content": "<p>Ah, its <a href=\"https://leanprover-community.github.io/mathlib_docs/find/inverse_eq_has_inv\">docs#inverse_eq_has_inv</a> which has bad assumptios and a bad namespace</p>",
        "id": 259519150,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635511875
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/10033\">#10033</a> to rename it to start with <code>ring.</code></p>",
        "id": 259523714,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1635514091
    }
]