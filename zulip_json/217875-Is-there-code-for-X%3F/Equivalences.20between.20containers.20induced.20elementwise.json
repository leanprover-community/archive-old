[
    {
        "content": "<p>Do we have any of the following?</p>\n<ul>\n<li><code>α ≃ β → list α ≃ list β</code></li>\n<li><code>α ≃ β → multiset α ≃ multiset β</code></li>\n<li><code>α ≃ β → finset α ≃ finset β</code></li>\n</ul>",
        "id": 265305017,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639752618
    },
    {
        "content": "<p>Is there a tactic which does all these?</p>",
        "id": 265305097,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639752653
    },
    {
        "content": "<p>Probably more a metaprogram like <code>to_additive</code></p>",
        "id": 265305166,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639752689
    },
    {
        "content": "<p>I think we might have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv_functor\">docs#equiv_functor</a> or similar, but it's not universe polymorphic so isn't as strong as the defs above would be</p>",
        "id": 265305484,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639752810
    },
    {
        "content": "<p>There is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.finset_congr\">docs#equiv.finset_congr</a></p>",
        "id": 265305492,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1639752817
    },
    {
        "content": "<p>Well that's one out of three...</p>",
        "id": 265325860,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639760080
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.list_equiv_of_equiv\">docs#equiv.list_equiv_of_equiv</a></p>",
        "id": 265331241,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639762302
    },
    {
        "content": "<p>And we don't have a version for <code>multiset</code>. Could you please add it as an <code>add_equiv</code>?</p>",
        "id": 265331437,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1639762383
    },
    {
        "content": "<p>I read that as \"add it with <code>@[to_additive]</code>\" and I thought \"but we don't have <code>addtisets</code>\"</p>",
        "id": 265331583,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1639762444
    },
    {
        "content": "<p>Overadditivization <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span> <br>\nHave a look at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_salem_spencer.sum\">docs#add_salem_spencer.sum</a></p>",
        "id": 265331650,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639762478
    },
    {
        "content": "<p><code>to_additive</code> tricked me on that one.</p>",
        "id": 265331692,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1639762495
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"270523\">@Huỳnh Trần Khanh</span>, this is in the context of the <code>α ≃ β → sym α n ≃ sym β n</code> def I asked for in your stars and bars PR. It looks like <code>equiv.sym_congr</code> might be a better name than <code>sym.map_equiv</code>.</p>",
        "id": 265335614,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639764126
    },
    {
        "content": "<p>Are you happy to add <code>equiv.multiset_congr : α ≃ β → multiset α ≃+ multiset β</code> at the same time?</p>",
        "id": 265335797,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1639764208
    }
]