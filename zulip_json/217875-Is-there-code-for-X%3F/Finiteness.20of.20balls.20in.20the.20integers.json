[
    {
        "content": "<p>We seem not to have this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">metric.closed_ball</span> <span class=\"n\">x</span> <span class=\"n\">r</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">finite</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>(At least, we don't have its corollary, that <code>ℤ</code> is a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/proper_space\">docs#proper_space</a>.). I have an ugly proof whose key point is to use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.Ico_ℤ\">docs#finset.Ico_ℤ</a>; is there a better way?</p>",
        "id": 227224612,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1613974933
    },
    {
        "content": "<p>Using <code>Ico_Z</code> would be my first guess...</p>",
        "id": 227226128,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613976606
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean-liquid/blob/057997831053da12caf94430419b82b3ac08aec2/src/Mbar/bounded.lean#L18\">https://github.com/leanprover-community/lean-liquid/blob/057997831053da12caf94430419b82b3ac08aec2/src/Mbar/bounded.lean#L18</a> <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 227270354,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1614002696
    },
    {
        "content": "<p>Oh heh, I thought that reminded me of something. I'll put them in <code>data.fintype.intervals</code>?</p>",
        "id": 227272094,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1614003417
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/6365\">#6365</a></p>",
        "id": 227274140,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1614004137
    }
]