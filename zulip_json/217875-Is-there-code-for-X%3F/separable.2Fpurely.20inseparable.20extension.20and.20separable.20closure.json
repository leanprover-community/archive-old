[
    {
        "content": "<p>I believe that there is code for separable extension (haven't checked yet). Are there codes for separable closed field, separable closure, and purely inseparable extensions (as well as their classifications)?</p>",
        "id": 221130431,
        "sender_full_name": "Jz Pan",
        "timestamp": 1609244469
    },
    {
        "content": "<p>Now I just need the concept of separable closed field. I just use the following definition for now: any non-constant separable polynomial has a root.</p>",
        "id": 221130482,
        "sender_full_name": "Jz Pan",
        "timestamp": 1609244525
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253861\">@Thomas Browning</span> <span class=\"user-mention\" data-user-id=\"298851\">@Patrick Lutz</span> are our field extension experts.</p>",
        "id": 221134904,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1609249307
    },
    {
        "content": "<p>I think we don't have separable closure or separable closed fields yet.</p>",
        "id": 221134975,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1609249347
    },
    {
        "content": "<p>OK, now I just use the following code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">my_sep_closed</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∀</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">K</span><span class=\"o\">,</span> <span class=\"n\">f.separable</span> <span class=\"bp\">→</span> <span class=\"n\">f.degree</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">,</span> <span class=\"n\">polynomial.eval₂</span> <span class=\"o\">(</span><span class=\"n\">ring_hom.id</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">alg_closed_implies_sep_closed</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n<span class=\"n\">is_alg_closed</span> <span class=\"n\">K</span> <span class=\"bp\">→</span> <span class=\"n\">my_sep_closed</span> <span class=\"n\">K</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">hac</span> <span class=\"n\">f</span> <span class=\"n\">hsep</span> <span class=\"n\">hdeg</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hsplit</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">polynomial.splits'</span> <span class=\"n\">K</span> <span class=\"n\">K</span> <span class=\"n\">_</span> <span class=\"n\">hac</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">ring_hom.id</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">polynomial.exists_root_of_splits</span> <span class=\"o\">(</span><span class=\"n\">ring_hom.id</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"n\">hsplit</span> <span class=\"n\">hdeg</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 221135114,
        "sender_full_name": "Jz Pan",
        "timestamp": 1609249460
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"366779\">@Jz Pan</span> note that <code>eval2 id ...</code> can be written as <code>eval ...</code></p>",
        "id": 221135179,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1609249534
    },
    {
        "content": "<p>Sure.</p>",
        "id": 221136069,
        "sender_full_name": "Jz Pan",
        "timestamp": 1609250475
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/separable.2Fpurely.20inseparable.20extension.20and.20separable.20closure/near/221134975\">said</a>:</p>\n<blockquote>\n<p>I think we don't have separable closure or separable closed fields yet.</p>\n</blockquote>\n<p>I don't think so either.</p>",
        "id": 221146593,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1609259717
    }
]