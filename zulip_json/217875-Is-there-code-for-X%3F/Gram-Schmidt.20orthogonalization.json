[
    {
        "content": "<p>Would anyone be interested in writing this together? Or is anyone working on this already?</p>",
        "id": 207025090,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597503314
    },
    {
        "content": "<p>The process itself is algorithmic so I'm hoping the Lean code wouldn't be that hard.</p>",
        "id": 207025148,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597503368
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252300\">@Jalex Stark</span> <span class=\"user-mention\" data-user-id=\"319839\">@Kenji Nakagawa</span> <span class=\"user-mention\" data-user-id=\"322118\">@Michael Hahn</span> ?</p>",
        "id": 207025171,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597503479
    },
    {
        "content": "<p>You should work in a branch of mathlib rather than in a separate repo</p>",
        "id": 207025411,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597503828
    },
    {
        "content": "<p>Hi! I would be very interested in working on this. I'm fairly new though, so I would probably ask a lot of silly questions.</p>",
        "id": 207027885,
        "sender_full_name": "Kevin Shu",
        "timestamp": 1597507824
    },
    {
        "content": "<p>Silly questions are welcome in the new members stream</p>",
        "id": 207028254,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597508459
    },
    {
        "content": "<p>But wait first for Alex to PR his work.</p>",
        "id": 207028262,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597508482
    },
    {
        "content": "<p>Yeah I think I would like to work on this as well <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 207028926,
        "sender_full_name": "Michael Hahn",
        "timestamp": 1597509364
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Gram-Schmidt.20orthogonalization/near/207025411\">said</a>:</p>\n<blockquote>\n<p>You should work in a branch of mathlib rather than in a separate repo</p>\n</blockquote>\n<p>Will do</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Gram-Schmidt.20orthogonalization/near/207028262\">said</a>:</p>\n<blockquote>\n<p>But wait first for Alex to PR his work.</p>\n</blockquote>\n<p>Yes, will wait and see how that one goes</p>",
        "id": 207037041,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597521935
    },
    {
        "content": "<p>It should be fun to look at <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 207042704,
        "sender_full_name": "Kenji Nakagawa",
        "timestamp": 1597530678
    },
    {
        "content": "<p>What statement exactly did you have in mind to formalize?</p>",
        "id": 207072374,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597585760
    },
    {
        "content": "<p>just that given a basis of a finite dimensional vector space with an inner product, we can explicitly construct an orthonormal basis</p>",
        "id": 207073709,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597587995
    },
    {
        "content": "<p>And what does \"explicitly\" mean?</p>",
        "id": 207073856,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597588313
    },
    {
        "content": "<p>use this algorithm: <a href=\"https://en.wikipedia.org/wiki/Gram%E2%80%93Schmidt_process#The_Gram%E2%80%93Schmidt_process\">https://en.wikipedia.org/wiki/Gram%E2%80%93Schmidt_process#The_Gram%E2%80%93Schmidt_process</a></p>",
        "id": 207074424,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597589379
    },
    {
        "content": "<p>I guess what I mean to say is:<br>\nGiving an \"explicit definition\" is not practically useful if that definition is (hypothetically) 200 lines of tactic mode. At that point you might as well be proving a mere existence result.<br>\nSo, there should be at least one application that you have in mind to verify that your formalization is indeed useful.</p>",
        "id": 207074988,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597590302
    },
    {
        "content": "<p>Ah, I see. The original motivation was to go from a spectral theorem for linear operators to a spectral theorem for matrices. This requires you to orthogonalize the eigenbasis to get a orthogonal/unitary matrix.</p>",
        "id": 207075322,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597590791
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"245078\">@Apurva Nakade</span> the point is that an algorithm is a definition and each definition comes with a cost, in some sense. It seems that thus far we have managed to do ok without needing this definition. Of course one can prove the theorem that if there exists a basis then there exists an ON basis, but this follows immediately from the statement that there exists an ON basis, which is a theorem (proved using Gram Schmidt). The question is why one needs the algorithm as a definition and not just the theorem. There might be a good answer to this.</p>",
        "id": 207075668,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597591369
    },
    {
        "content": "<p>But I don't really know exactly what these spectral theorems you're talking about are (the devil is in the detail)</p>",
        "id": 207075679,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597591400
    },
    {
        "content": "<p>One application I know is that the multiplication map from O(n) x {upper triangular matrices with positive diagonal entries} to GL(n) is a homeomorphism (also a diffeomorphism, but I don't think we can even state that yet) and so in particular the inclusion O(n) -&gt; GL(n) is a homotopy equivalence.</p>",
        "id": 207075827,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597591629
    },
    {
        "content": "<p>I'm sorry for not being clear. I just saw this on the list of <a href=\"https://leanprover-community.github.io/undergrad_todo.html\">undergrad_todos</a> and thought that this does not exist because it is too easy.</p>\n<p>The theorem I have in mind is that if <code>M</code>is a normal (symmetric) matrix then there exists a unitary (orthogonal) matrix <code>U</code> such that <code>U^* M U</code> is diagonal. If we have a spectral theorem for linear operators i.e. the linear operator for <code>M</code> has an eigenbasis, then we can get <code>U</code> from the eigenbasis by doing GS orthogonalization.</p>",
        "id": 207076270,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597592289
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Gram-Schmidt.20orthogonalization/near/207075827\">said</a>:</p>\n<blockquote>\n<p>One application I know is that the multiplication map from O(n) x {upper triangular matrices with positive diagonal entries} to GL(n) is a homeomorphism (also a diffeomorphism, but I don't think we can even state that yet) and so in particular the inclusion O(n) -&gt; GL(n) is a homotopy equivalence.</p>\n</blockquote>\n<p>This is also great! A direct application of GS.</p>",
        "id": 207076282,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597592337
    },
    {
        "content": "<p>I will dig more and come up with a list of useful math theorems that rely on GS. </p>\n<p>I use linear algebra so much that I never question as to where its theorems are used :P  I was also going to ask about SVD but I think I'll hold on to that for now :)</p>",
        "id": 207076488,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597592678
    },
    {
        "content": "<p>This homeomorphism doesn't need GS.  I guess people interested in algorithms can simply program GS and prove its properties, but this is independent from the theoretical applications.</p>",
        "id": 207076921,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597593479
    },
    {
        "content": "<p>Seconded. Gram-Schmidt as understood by graphics programmers bears only a passing resemblance to Gram-Schmidt as understood in linear algebra (especially once it goes infinite dimensional)</p>",
        "id": 207077707,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597594844
    },
    {
        "content": "<p>Even wikipedia acknowledges that the mathematician's G-S is numerically unstable and proposes an alternative algorithm that is more useful for algorithmic implementation</p>",
        "id": 207077776,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597594942
    },
    {
        "content": "<p>Do you want an algorithm which produces U or just a theorem saying that U exists? I'd be happy with the latter</p>",
        "id": 207078660,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597596335
    },
    {
        "content": "<p>Just a theorem that says U exists. In fact, as Reid put it all I need is a continuous map from GL(n) to O(n) and in the complex case to U(n). After thinking about this for a while, I am now realizing that for me this is what GS is. it's utility is only in going from an arbitrary basis to an orthogonal basis in a continuous way.</p>",
        "id": 207080011,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597598445
    },
    {
        "content": "<p>my model of why apurva started talking about algorithms is just to say \"numerical linear algebra folks have implemented algorithmic corollaries of this theorem a bunch of times, and the proof is mathematically easy, so it should be relatively easy to prove in Lean\". Then the consensus response to that idea was something like \"yes, it should be easy, and the first part of your argument is not especially relevant\".</p>",
        "id": 207085257,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597605277
    }
]