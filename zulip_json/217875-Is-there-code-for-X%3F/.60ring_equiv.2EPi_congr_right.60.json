[
    {
        "content": "<p>Is the following definition really missing?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simps]</span>\n<span class=\"kd\">def</span> <span class=\"n\">ring_equiv.Pi_congr_right</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"bp\">Π</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">semiring</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"n\">i</span><span class=\"o\">)]</span> <span class=\"o\">[</span><span class=\"bp\">Π</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">semiring</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"n\">i</span><span class=\"o\">)]</span>\n  <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"n\">i</span> <span class=\"bp\">≃+*</span> <span class=\"n\">S</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">R</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">≃+*</span> <span class=\"bp\">Π</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">S</span> <span class=\"n\">i</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"bp\">..</span> <span class=\"bp\">@</span><span class=\"n\">mul_equiv.Pi_congr_right</span> <span class=\"n\">ι</span> <span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">to_mul_equiv</span><span class=\"o\">),</span> <span class=\"c1\">-- Have to supply these metavariables</span>\n  <span class=\"bp\">..</span> <span class=\"bp\">@</span><span class=\"n\">add_equiv.Pi_congr_right</span> <span class=\"n\">ι</span> <span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">to_add_equiv</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 273243645,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645803159
    },
    {
        "content": "<p>How recent is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mul_equiv.Pi_congr_right/src\">src#mul_equiv.Pi_congr_right</a>?</p>",
        "id": 273247995,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645805417
    },
    {
        "content": "<p>Blame the person who didn't add it in <a href=\"https://github.com/leanprover-community/mathlib/pull/7489\">#7489</a> with the add, mul, and linear versions <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 273248063,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645805465
    },
    {
        "content": "<p>(and maybe add the <code>alg_equiv</code> version at the same time when you fix the absence)</p>",
        "id": 273248142,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645805515
    }
]