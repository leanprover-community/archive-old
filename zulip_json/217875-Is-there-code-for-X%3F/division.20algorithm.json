[
    {
        "content": "<p>Hi, I'm looking for the proof of the division algorithm in mathlib.</p>\n<blockquote>\n<p>Let a and b be integers, with b &gt; 0. Then there exist unique integers q and r such that a = bq + r where 0 &lt;= r &lt; b</p>\n</blockquote>\n<p>I've tried searching in the nat, int, and number theory parts of mathlib but no luck. Any help appreciated. Thanks!</p>",
        "id": 281696941,
        "sender_full_name": "Faris Hafizhan Hakim",
        "timestamp": 1652108361
    },
    {
        "content": "<p>I think <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int.div_add_mod\">docs#int.div_add_mod</a> is that statement</p>",
        "id": 281697923,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652108698
    },
    {
        "content": "<p>Where <code>q = a / b</code> and <code>r = a % b</code></p>",
        "id": 281698015,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652108730
    },
    {
        "content": "<p>But I suppose that doesn't express uniqueness</p>",
        "id": 281698051,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652108749
    },
    {
        "content": "<p>I see, but it's not quite the same statement</p>",
        "id": 281700780,
        "sender_full_name": "Faris Hafizhan Hakim",
        "timestamp": 1652109881
    },
    {
        "content": "<p>I think the uniqueness is guaranteed by the uniqueness of <code>%</code> and <code>/</code></p>",
        "id": 281701017,
        "sender_full_name": "Faris Hafizhan Hakim",
        "timestamp": 1652109968
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.div_mod_unique\">docs#nat.div_mod_unique</a></p>",
        "id": 281701917,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1652110337
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"462058\">Faris Hafizhan Hakim</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/division.20algorithm/near/281701017\">said</a>:</p>\n<blockquote>\n<p>I think the uniqueness is guaranteed by the uniqueness of <code>%</code> and <code>/</code></p>\n</blockquote>\n<p>This is not true. Just because they're well-defined functions giving answers which work, doesn't mean that there can't be other functions which also work. Kyle's answer is the right one.</p>",
        "id": 281705274,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652111758
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/division.20algorithm/near/281705274\">said</a>:</p>\n<blockquote>\n<p>This is not true. Just because they're well-defined functions giving answers which work, doesn't mean that there can't be other functions which also work. Kyle's answer is the right one.</p>\n</blockquote>\n<p>Ah, okay, but then how does Kyle's answer express the uniqueness, that is, how is it different from Eric's answer? I don't quite understand. Thanks</p>",
        "id": 281767240,
        "sender_full_name": "Faris Hafizhan Hakim",
        "timestamp": 1652146957
    },
    {
        "content": "<p>Is it because of the <code>m &lt; k</code> part?</p>",
        "id": 281767486,
        "sender_full_name": "Faris Hafizhan Hakim",
        "timestamp": 1652147198
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.div_add_mod\">docs#nat.div_add_mod</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.mod_lt\">docs#nat.mod_lt</a> give existence of the quotient and remainder (in the sense that they show that <code>a / b</code> is the quotient and <code>a % b</code> is the remainder), but then <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.div_mod_unique\">docs#nat.div_mod_unique</a> gives uniqueness of the quotient and remainder (any other <code>q</code> and <code>r</code> with these properties must be <code>a / b</code> and <code>a % b</code> respectively), though admittedly since it's an iff it gives existence as well.</p>",
        "id": 281767957,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1652147859
    },
    {
        "content": "<p>I didn't notice earlier that Eric gave the <code>int</code> rather than <code>nat</code> versions, and it seems that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int.div_mod_unique\">docs#int.div_mod_unique</a> doesn't exist</p>",
        "id": 281768012,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1652147905
    },
    {
        "content": "<p>Existence for <code>int</code> division is accounted for: there's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int.div_add_mod\">docs#int.div_add_mod</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int.mod_nonneg\">docs#int.mod_nonneg</a>, and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/int.mod_lt_of_pos\">docs#int.mod_lt_of_pos</a></p>",
        "id": 281768050,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1652147964
    },
    {
        "content": "<p>Assuming it actually is missing, here's a <code>sorry</code> you or someone might fill and contribute to mathlib:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">protected</span> <span class=\"kd\">theorem</span> <span class=\"n\">int.div_mod_unique</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">r</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">a</span> <span class=\"bp\">/</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">q</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span> <span class=\"bp\">%</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">r</span> <span class=\"bp\">↔</span> <span class=\"n\">r</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">q</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">r</span> <span class=\"bp\">∧</span> <span class=\"n\">r</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 281768331,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1652148188
    },
    {
        "content": "<p>Hi, <span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span> , I'm going to contribute to mathlib using the template you provided. How can I attribute you properly?</p>",
        "id": 282402195,
        "sender_full_name": "Faris Hafizhan Hakim",
        "timestamp": 1652610102
    },
    {
        "content": "<p>When you make the PR, it will give you a template that includes a \"Co-authored-by\" line; just fill that out with Kyle's name</p>",
        "id": 282402439,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652610375
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 288340583,
        "sender_full_name": "Nikolas Kuhn",
        "timestamp": 1656872653
    }
]