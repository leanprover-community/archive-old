[
    {
        "content": "<p>Do we have this? Maybe it requires <code>f</code> injective.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"sd\">/-- Pullback well-foundedness. -/</span>\n<span class=\"kn\">protected</span> <span class=\"kd\">lemma</span> <span class=\"n\">well_founded.inv_image</span> <span class=\"o\">{</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">well_founded</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">well_founded</span> <span class=\"o\">(</span><span class=\"n\">inv_image</span> <span class=\"n\">r</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 286512765,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655483203
    },
    {
        "content": "<p>Is this <a href=\"https://leanprover-community.github.io/mathlib_docs/find/inv_image.wf\">docs#inv_image.wf</a></p>",
        "id": 286513859,
        "sender_full_name": "Chris Bailey",
        "timestamp": 1655483853
    },
    {
        "content": "<p>Yep, thanks!</p>",
        "id": 286517997,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655485986
    }
]