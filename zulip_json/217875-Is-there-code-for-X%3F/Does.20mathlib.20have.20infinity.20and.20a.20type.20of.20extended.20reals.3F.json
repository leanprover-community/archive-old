[
    {
        "content": "<p>In <a href=\"https://leanprover-community.github.io/mathlib_docs/init/meta/float.html#native.float.infinity\">mathlib</a> I see \"native float infinity\".  I don't immediately see the \"conceptual\" infinity.  Two questions:</p>\n<p>Q1.  Where is abstract infinity oo in mathlib?<br>\nQ2. Is there a definition of \"extended reals\" that is something like Rbar = R + {-oo, oo}?</p>",
        "id": 218600145,
        "sender_full_name": "Lars Ericson",
        "timestamp": 1606934235
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/ereal\">docs#ereal</a></p>",
        "id": 218600216,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606934263
    },
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real\">docs#real</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nnreal\">docs#nnreal</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ennreal\">docs#ennreal</a>, and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ereal\">docs#ereal</a></p>",
        "id": 219534543,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1607634710
    },
    {
        "content": "<p>note that ereal is rather incomplete : it looks like it does not have <code>has_mul</code> for example. ereal is defined as with_bot(with_top(R)) and the with_top construction comes with a mul, but it looks like the with_bot does not (unless I am missing an order_dual statement somewhere). And even if you wrote a has_mul for with_bot, the resulting mul would be strange : you would have (-1)*(+oo) = +oo  (and not -oo like you would maybe expect).</p>",
        "id": 219577218,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1607676232
    },
    {
        "content": "<p>Also, what would <code>-∞ * +∞</code> equal?</p>",
        "id": 219577419,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1607676376
    },
    {
        "content": "<p>37</p>",
        "id": 219577444,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1607676395
    },
    {
        "content": "<p>You are completely right!!</p>",
        "id": 219577470,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1607676419
    },
    {
        "content": "<p>from the order of the with_bot(with_top(R)) construction, assuming that you define the mul of bot as done with top, it would be -oo</p>",
        "id": 219577480,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1607676427
    },
    {
        "content": "<p>I assume you meant to ask what <code>-∞ + +∞</code> is? Coming from floating point, <code>-∞ * +∞ = -∞</code> seems like the obvious choice.</p>",
        "id": 219577497,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607676438
    },
    {
        "content": "<p>I thought that it was the multiplication that people were talking about, but you are right, addition also has its problems.  However, I now realize that the problems might simply be in my head, since it may in practice not matter much how you define the non-sensical operations.  I still need to interiorize the <code>division-by-zero</code> conundrum...</p>",
        "id": 219577720,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1607676595
    },
    {
        "content": "<p>I just tested the additive version : for ereal, bot + top = top</p>",
        "id": 219577941,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1607676743
    },
    {
        "content": "<p>because I was wrong about the definition : it is <code>ereal = with_top (with_bot ℝ)</code></p>",
        "id": 219578090,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1607676847
    },
    {
        "content": "<p>hence the rule is that for all <code>x</code> in <code>with_bot ℝ</code>, x + top = top</p>",
        "id": 219578184,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1607676933
    },
    {
        "content": "<p>I wrote <code>ereal</code> and because I'm a mathematician and I did not have good answers for things like <code>-infty+infty</code> and <code>0 * infty</code> I simply did not define them. In the analogous Isabelle code (written by a computer scientist) they're all defined and take on some random values for these weird cases. I'm sure the maintainers would happily accept a PR which adds all these functions and then proves all the lemmas in the Isabelle file (which I think I left a link to in the docstring?). The proofs are all easy by cases of course.</p>",
        "id": 219596559,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1607687846
    }
]