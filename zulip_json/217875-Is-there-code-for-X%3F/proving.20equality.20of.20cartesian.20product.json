[
    {
        "content": "<p>I'm trying to prove the equality of sets of Cartesian products. I've tried using <code>eq_of_subset_of_subset</code> and <code>ext</code> with <code>iff.intro</code> but Lean keeps throwing an error. Can anyone point me in the right direction here? Code is below:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">∩</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n    <span class=\"n\">eq_of_subset_of_subset</span>\n    <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">U</span><span class=\"o\">,</span>\n    <span class=\"k\">assume</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">U</span><span class=\"o\">,</span>\n    <span class=\"k\">assume</span> <span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">),</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">),</span> <span class=\"k\">from</span> <span class=\"n\">prod_mk_mem_set_prod_eq</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">eq.subst</span> <span class=\"n\">h₂</span> <span class=\"n\">h₁</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₄</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"k\">from</span>\n      <span class=\"o\">(</span><span class=\"k\">have</span> <span class=\"n\">h₅</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"o\">(</span><span class=\"n\">h₃.right</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">left</span><span class=\"o\">,</span>\n      <span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">mk_mem_prod</span> <span class=\"o\">(</span><span class=\"n\">h₃.left</span><span class=\"o\">)</span> <span class=\"n\">h₅</span><span class=\"o\">),</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₅</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"k\">from</span>\n      <span class=\"o\">(</span><span class=\"k\">have</span> <span class=\"n\">h₆</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"o\">(</span><span class=\"n\">h₃.right</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">right</span><span class=\"o\">,</span>\n      <span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">mk_mem_prod</span> <span class=\"o\">(</span><span class=\"n\">h₃.left</span><span class=\"o\">)</span> <span class=\"n\">h₆</span><span class=\"o\">),</span>\n    <span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">∩</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">C</span><span class=\"o\">),</span> <span class=\"k\">from</span> <span class=\"n\">and.intro</span> <span class=\"n\">h₄</span> <span class=\"n\">h₅</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"k\">assume</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">U</span><span class=\"o\">,</span>\n    <span class=\"k\">assume</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">U</span><span class=\"o\">,</span>\n    <span class=\"k\">assume</span> <span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">∩</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">C</span><span class=\"o\">),</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">),</span> <span class=\"k\">from</span>\n      <span class=\"o\">(</span><span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">B</span><span class=\"o\">),</span> <span class=\"k\">from</span> <span class=\"n\">h₁.left</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₄</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">B</span><span class=\"o\">),</span> <span class=\"k\">from</span> <span class=\"n\">prod_mk_mem_set_prod_eq</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₅</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">eq.subst</span> <span class=\"n\">h₄</span> <span class=\"n\">h₃</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₆</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">C</span><span class=\"o\">),</span> <span class=\"k\">from</span> <span class=\"n\">h₁.right</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₇</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">C</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">C</span><span class=\"o\">),</span> <span class=\"k\">from</span> <span class=\"n\">prod_mk_mem_set_prod_eq</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">h₈</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">eq.subst</span> <span class=\"n\">h₇</span> <span class=\"n\">h₆</span><span class=\"o\">,</span>\n      <span class=\"k\">show</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">),</span> <span class=\"k\">from</span> <span class=\"n\">and.intro</span> <span class=\"n\">h₅.left</span> <span class=\"o\">(</span><span class=\"n\">and.intro</span> <span class=\"o\">(</span><span class=\"n\">h₅.right</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₈.right</span><span class=\"o\">))),</span>\n    <span class=\"k\">have</span> <span class=\"n\">h₃</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">),</span> <span class=\"k\">from</span> <span class=\"n\">prod_mk_mem_set_prod_eq</span><span class=\"o\">,</span>\n    <span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">),</span> <span class=\"k\">from</span> <span class=\"n\">eq.subst</span> <span class=\"n\">h₃</span> <span class=\"n\">h₂</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 270146345,
        "sender_full_name": "Andrew Lubrino",
        "timestamp": 1643686455
    },
    {
        "content": "<p>Can you provide a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> ?</p>",
        "id": 270147751,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1643687508
    },
    {
        "content": "<p>Nevermind... I ggot it:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.set</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">∩</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">tidy</span>\n</code></pre></div>",
        "id": 270147823,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1643687551
    },
    {
        "content": "<p>If you want a less automatic proof:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">∩</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">ext</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rintros</span> <span class=\"o\">⟨</span><span class=\"n\">h1</span><span class=\"o\">,</span><span class=\"n\">h2</span><span class=\"o\">,</span><span class=\"n\">h3</span><span class=\"o\">⟩,</span>\n    <span class=\"n\">exact</span> <span class=\"o\">⟨⟨</span><span class=\"n\">h1</span><span class=\"o\">,</span><span class=\"n\">h2</span><span class=\"o\">⟩,⟨</span><span class=\"n\">h1</span><span class=\"o\">,</span><span class=\"n\">h3</span><span class=\"o\">⟩⟩</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rintros</span> <span class=\"o\">⟨⟨</span><span class=\"n\">h1</span><span class=\"o\">,</span><span class=\"n\">h1'</span><span class=\"o\">⟩,⟨</span><span class=\"n\">h2</span><span class=\"o\">,</span><span class=\"n\">h2'</span><span class=\"o\">⟩⟩,</span>\n    <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">h1</span><span class=\"o\">,</span><span class=\"n\">h1'</span><span class=\"o\">,</span><span class=\"n\">h2'</span><span class=\"o\">⟩</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 270147956,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1643687669
    },
    {
        "content": "<p>Or in term-mode:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"bp\">∩</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">∩</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">×ˢ</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">set.ext</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"o\">⟨</span><span class=\"n\">h1</span><span class=\"o\">,</span><span class=\"n\">h2</span><span class=\"o\">,</span><span class=\"n\">h3</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨⟨</span><span class=\"n\">h1</span><span class=\"o\">,</span><span class=\"n\">h2</span><span class=\"o\">⟩,</span><span class=\"n\">h1</span><span class=\"o\">,</span><span class=\"n\">h3</span><span class=\"o\">⟩,</span> <span class=\"bp\">λ</span> <span class=\"o\">⟨⟨</span><span class=\"n\">h1</span><span class=\"o\">,</span><span class=\"n\">h1'</span><span class=\"o\">⟩,</span><span class=\"n\">h2</span><span class=\"o\">,</span><span class=\"n\">h3</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">h2</span><span class=\"o\">,</span><span class=\"n\">h1'</span><span class=\"o\">,</span><span class=\"n\">h3</span><span class=\"o\">⟩⟩</span>\n</code></pre></div>",
        "id": 270148151,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1643687816
    }
]