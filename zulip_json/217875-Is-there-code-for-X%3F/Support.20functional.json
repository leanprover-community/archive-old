[
    {
        "content": "<p>What's the best way to get a functional of prescribed norm?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.normed_space.operator_norm</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">normed_add_comm_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">exists_norm</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"n\">ℝ</span><span class=\"o\">]</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">‖</span><span class=\"n\">g</span><span class=\"bp\">‖</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">g</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"bp\">‖</span><span class=\"n\">x</span><span class=\"bp\">‖</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 311114844,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668936722
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 311115997,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668937563
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 311116022,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668937590
    },
    {
        "content": "<p>This is exactly <a href=\"https://leanprover-community.github.io/mathlib_docs/find/exists_dual_vector'\">docs#exists_dual_vector'</a></p>",
        "id": 311116124,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1668937674
    },
    {
        "content": "<p>Ahahah! I knew it had to be around Hahn-Banach, but I was looking for the separation statement.</p>",
        "id": 311116223,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668937720
    }
]