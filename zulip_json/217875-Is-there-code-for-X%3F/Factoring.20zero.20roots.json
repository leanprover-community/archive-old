[
    {
        "content": "<p>Is there a way to write a polynomial <code>P</code> as <code>X ^ m * Q</code> where the smallest coefficient of <code>Q</code> is nonzero that's well-integrated with <code>coeff</code>?</p>",
        "id": 294627960,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661156954
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span></p>",
        "id": 294628230,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1661157069
    },
    {
        "content": "<p>To un <a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a>, I just want to show that if the least nonzero coefficients of <code>P</code> and <code>Q</code> are positive, then the least coefficient of <code>P * Q</code> is as well. If it were the greatest, I could use <code>leading_coeff</code> and all would be well, but we don't seem to have something like <code>least_coeff</code>?</p>",
        "id": 294628742,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661157324
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.trailing_coeff\">docs#polynomial.trailing_coeff</a></p>",
        "id": 294628884,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1661157377
    },
    {
        "content": "<p>Aaah trailing! I knew it had to be somewhere <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 294628929,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661157398
    },
    {
        "content": "<p>Yes, trailing coeff would work.  There might be <code>trailing_coeff_mul</code> as well.  I am not sure if there is a version with just the bounds (the analogue of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.nat_degree_mul_le\">docs#polynomial.nat_degree_mul_le</a>.</p>",
        "id": 294629028,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1661157452
    },
    {
        "content": "<p>Let's try: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.le_trailing_degree_mul\">docs#polynomial.le_trailing_degree_mul</a>.</p>\n<p>It works!!!  <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>",
        "id": 294629125,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1661157485
    },
    {
        "content": "<p>As for your initial question, I know that there is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiplicity\">docs#multiplicity</a>, I thought that it would have been useful, but so far I have never used it.</p>",
        "id": 294629292,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1661157578
    },
    {
        "content": "<p>I actually only need <code>trailing_coeff_mul</code>! So I now have a complete proof that floors and ceils are not preserved under ordered ring homomorphisms.</p>",
        "id": 294629310,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661157588
    },
    {
        "content": "<p>That is, life is proven sad.</p>",
        "id": 294629396,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661157615
    },
    {
        "content": "<p>Is this a goals accomplished or goals not accomplished kind of thing?</p>",
        "id": 294629410,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1661157620
    },
    {
        "content": "<p>It's a \"I have a new pathology to put in <code>counterexamples</code>\" kind of thing.</p>",
        "id": 294629473,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661157657
    },
    {
        "content": "<p>I love counterexamples: if you play your cards right, you always either get a theorem or counterexample!</p>",
        "id": 294629556,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1661157700
    },
    {
        "content": "<p>Okay so intuitively floors and ceils should be preserved by <code>f</code> an ordered ring homs because:</p>\n<ul>\n<li><code>f</code> preserves the copy of the naturals/integers because it's a ring hom.</li>\n<li><code>f</code> preserves what's between <code>n</code> and <code>n + 1</code> because it's monotone.</li>\n</ul>",
        "id": 294629815,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661157823
    },
    {
        "content": "<p>At this point, I was quite happy with the proof and PRed <a href=\"https://github.com/leanprover-community/mathlib/pull/16025\">#16025</a>. But I couldn't get the Lean proof.</p>",
        "id": 294630010,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661157904
    },
    {
        "content": "<p>And this was because that \"between\" doesn't have to be strict. Potentially something whose floor was <code>n</code> could get mapped to <code>n + 1</code>, and this has floor <code>n + 1</code>, not <code>n</code>.</p>",
        "id": 294630130,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661157962
    },
    {
        "content": "<p>So what would be a counterexample? Not <code>ℚ</code>, <code>ℝ</code> or anything like that, because you can use archimedeanness to ensure that nothing <code>&lt; n + 1</code> gets mapped to <code>n + 1</code>. So you need infinitesimals.</p>",
        "id": 294630443,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661158089
    },
    {
        "content": "<p>Hence I took <code>ℤ[ε]</code> where <code>ε</code> is an infinitesimal. I could inherit the ring structure from <code>ℤ[X]</code>, and the ordered add group structure from <code>ℕ →ₗ ℤ</code> thanks to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pi.lex.ordered_add_comm_group\">docs#pi.lex.ordered_add_comm_group</a>.</p>",
        "id": 294630902,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661158280
    },
    {
        "content": "<p>Now the pathological hom is taking the zeroth coefficient. That works because <code>⌊-ε⌋ = -1</code> but <code>⌊coeff (-ε) 0⌋ = ⌊0⌋ = 0</code>.</p>",
        "id": 294631172,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661158397
    },
    {
        "content": "<p>This reminds me of another counterexample in the folder of a canonically_ordered something for which multiplication by 2 is not injective (if I remember correctly) and you get two incomparable elements <code>a b</code> such that <code>2 * a = 2 * b</code>.</p>",
        "id": 294631850,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1661158634
    }
]