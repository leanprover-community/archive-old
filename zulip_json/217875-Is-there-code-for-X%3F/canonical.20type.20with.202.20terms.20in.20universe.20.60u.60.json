[
    {
        "content": "<p>We have <code>pempty</code> and <code>punit</code> -- anyone for <code>pbool</code>? Otherwise I'm going to have to use <code>ulift (fin 2)</code> or something :-/</p>",
        "id": 260606935,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636334770
    },
    {
        "content": "<p>there's <code>punit ⊕ punit</code></p>",
        "id": 260606964,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636334867
    },
    {
        "content": "<p>You can see what I'm trying to do <a href=\"#narrow/stream/267928-condensed-mathematics/topic/condensed.20abelian.20groups/near/260606626\">here</a> and it occurs to me that being able to case on terms might be really useful, so I'm leaning towards defining <code>pbool</code> right now.</p>",
        "id": 260607026,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636334987
    },
    {
        "content": "<p><code>pnat</code>! :-)</p>",
        "id": 260607218,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1636335252
    },
    {
        "content": "<p>funnily enough my post-doc Maria and I were talking about that and <code>pint</code> the other day. She is defining valuations on Dedekind domains and their fraction fields coming from maximal ideals of the domain, and these valuations take values in <code>with_zero (multiplicative nat)</code> and <code>with_zero (multiplicative int)</code>. However <a href=\"https://leanprover-community.github.io/mathlib_docs/find/valued\">docs#valued</a> has the value group in the same universe as the ring, so etc etc etc. In the end she restricted to Dedekind domains in <code>Type</code>. Are we evil?</p>",
        "id": 260607551,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636335874
    },
    {
        "content": "<p>Oh -- you cannot see in the API docs that <code>Γ₀ : Type u</code>.</p>",
        "id": 260607573,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636335926
    },
    {
        "content": "<p>Or you can generalize <code>valued</code> to <code>valued.{v u}</code> with <code>Γ₀ : Type v</code></p>",
        "id": 260608000,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1636336570
    }
]