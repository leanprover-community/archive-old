[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/.60field_simp.60.20for.20units/near/286922661\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#assoc_rw\">tactic#assoc_rw</a> can be helpful here, it rewrites up to associativity</p>\n</blockquote>\n<p>That is very helpful indeed, thanks!</p>\n<p>and now I also understand how <code>lift</code> works, thanks Eric</p>",
        "id": 286935656,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1655827038
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"385895\">Jon Eugster</span> has marked this topic as resolved.</p>",
        "id": 286935694,
        "sender_full_name": "Notification Bot",
        "timestamp": 1655827050
    },
    {
        "content": "<p>There's also an <code>id</code> trick there, since sometime lean tries to be clever and clear your variables for you. If you replace <code>h</code> with <code>id h</code> (as I did in <code>lift .... with id h</code>), then lean knows not to try and clear <code>h</code>.</p>",
        "id": 286942819,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1655830150
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"385895\">Jon Eugster</span> has marked this topic as resolved.</p>",
        "id": 287168630,
        "sender_full_name": "Notification Bot",
        "timestamp": 1655979085
    },
    {
        "content": "<p>Note there was a follow-up to this thread in <a href=\"https://github.com/leanprover-community/mathlib/pull/14897\">#14897</a>, which seems reasonable on first impressions.</p>",
        "id": 287195394,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1655993228
    },
    {
        "content": "<p>Looks like just reducing the instance priority for <code>units.group</code> to <code>&lt;100</code> works so I put that as PR <a href=\"https://github.com/leanprover-community/mathlib/pull/14923\">#14923</a>, which leaves everything else untouched.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/.60field_simp.60.20for.20units/near/287335151\">said</a>:</p>\n<blockquote>\n<p>I still think that <code>ring.to_monoid</code> should have priority 0</p>\n</blockquote>\n<p>Since it turns out that <code>ring.to_monoid</code> is irrelevant for my problem, I prefer not to make any changes to it, although you are probably right.</p>",
        "id": 287575890,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1656335759
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"385895\">Jon Eugster</span> has marked this topic as resolved.</p>",
        "id": 287575963,
        "sender_full_name": "Notification Bot",
        "timestamp": 1656335774
    }
]