[
    {
        "content": "<p>Hello, is there code showing that finite chains have maximal elements? I'm  thinking about making a PR to mathlib adding Tukey's lemma and it needs this result, but my current proof of it is quite ugly.</p>\n<p>Here is the lemma:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">order.chain</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.set</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">max_of_fin_chain</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">partial_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n<span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">},</span> <span class=\"n\">c.finite</span> <span class=\"bp\">→</span> <span class=\"n\">is_chain</span> <span class=\"o\">(</span><span class=\"bp\">≤</span><span class=\"o\">)</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">c.nonempty</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span><span class=\"n\">m</span> <span class=\"bp\">∈</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">b</span><span class=\"o\">},</span> <span class=\"n\">b</span> <span class=\"bp\">∈</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 287570310,
        "sender_full_name": "Eduardo Freire",
        "timestamp": 1656333059
    },
    {
        "content": "<p>Do you know about <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.exists_min_image\">docs#finset.exists_min_image</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.exists_minimal\">docs#finset.exists_minimal</a>?</p>",
        "id": 287570708,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1656333254
    },
    {
        "content": "<p>Isn't Tukey's lemma a direct special case of Hausdorff's maximality principle?</p>",
        "id": 287570780,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1656333303
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Finite.20chain.20has.20a.20maximal.20element/near/287570708\">said</a>:</p>\n<blockquote>\n<p>Do you know about <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.exists_min_image\">docs#finset.exists_min_image</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.exists_minimal\">docs#finset.exists_minimal</a>?</p>\n</blockquote>\n<p>I didn't, was looking for this thanks</p>",
        "id": 287571431,
        "sender_full_name": "Eduardo Freire",
        "timestamp": 1656333629
    },
    {
        "content": "<p>We're missing a few variants that I was adding the other day. Opening the PR soon.</p>",
        "id": 287571503,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1656333673
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Finite.20chain.20has.20a.20maximal.20element/near/287570780\">said</a>:</p>\n<blockquote>\n<p>Isn't Tukey's lemma a direct special case of Hausdorff's maximality principle?</p>\n</blockquote>\n<p>I used <code>zorn_subset_nonempty</code> instead, not sure if it is more or less direct though <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 287573593,
        "sender_full_name": "Eduardo Freire",
        "timestamp": 1656334703
    }
]