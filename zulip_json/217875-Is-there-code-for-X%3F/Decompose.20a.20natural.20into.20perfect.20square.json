[
    {
        "content": "<p>Is there some variant of the following in mathlib?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">linarith</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">N</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"bp\">∧</span> <span class=\"n\">m</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">N</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">ih</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"bp\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">succ_pos</span> <span class=\"bp\">_⟩</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rcases</span> <span class=\"n\">ih</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">hn</span><span class=\"o\">,</span> <span class=\"n\">hm</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">by_cases</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">N</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"bp\">⟨</span><span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"n\">m</span><span class=\"bp\">.</span><span class=\"n\">succ</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">hn</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">N</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span> <span class=\"n\">by_contra</span> <span class=\"n\">h&#39;</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"n\">lt_of_le_of_ne</span> <span class=\"n\">hm</span> <span class=\"n\">h&#39;</span><span class=\"o\">)</span> <span class=\"o\">},</span>\n      <span class=\"n\">refine</span> <span class=\"bp\">⟨</span><span class=\"n\">N</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">succ_pos</span> <span class=\"bp\">_⟩</span><span class=\"o\">,</span>\n      <span class=\"k\">calc</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">N</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span>   <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">hn</span>\n      <span class=\"bp\">...</span>        <span class=\"bp\">=</span> <span class=\"n\">N</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">N</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">linarith</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n      <span class=\"bp\">...</span>        <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">2</span>     <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">ring</span> <span class=\"o\">}</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 201794464,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592952842
    },
    {
        "content": "<p>Also, I would like to know if there is a better way of writing this proof/realizing the result (<code>∃ N m, n = N^2 + m ∧ m &lt; 2*N + 1</code> is fine, but there may be better ways).</p>",
        "id": 201794531,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592952886
    },
    {
        "content": "<p>There is <code>nat.sqrt</code> already in core, with a good selection of lemmas</p>",
        "id": 201796079,
        "sender_full_name": "Reid Barton",
        "timestamp": 1592954018
    },
    {
        "content": "<p>s/core/mathlib/</p>",
        "id": 201797659,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1592955390
    }
]