[
    {
        "content": "<p>Hello! Is there code anywhere for checking whether a given function set α -&gt; ennreal is a probability measure on the measurable space α?</p>\n<p>Less focused, but also in general I'm a little confused as to how we're defining measures - I can't seem to actually find the σ-algebras anywhere and it seems what's going on is that they're implicitly part of measurable_space α and then a measure μ is a function set α -&gt; ennreal where we just only talk about the properties of the function over sets (set B : α) where the proposition (measurable_set B) is true. Is my understanding correct, and if so, if I write down a function set α : ennreal how do I turn it into a measure? I tried using measure_space.of_measure (<a href=\"https://leanprover-community.github.io/mathlib_docs/measure_theory/measure/measure_space_def.html#measure_theory.measure.of_measurable\">https://leanprover-community.github.io/mathlib_docs/measure_theory/measure/measure_space_def.html#measure_theory.measure.of_measurable</a>) but I couldn't get it to work and I don't think I was using it right.</p>\n<p>Thank you so much! (Also just to make sure, is this the right place for simple questions like this?)</p>",
        "id": 275130221,
        "sender_full_name": "Torey Hilbert",
        "timestamp": 1647141575
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"484742\">@Torey Hilbert</span> Welcome!  This might be an <a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a> problem -- I was trying to come up with an example to help you and couldn't think of one where the measure is given to us directly as a function.  Can you say more about your context?</p>",
        "id": 275171844,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1647201169
    },
    {
        "content": "<p>The declaration <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.measure.of_measurable\">docs#measure_theory.measure.of_measurable</a> you mentioned should work, if your measure really is given to you as a function.</p>",
        "id": 275171877,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1647201220
    },
    {
        "content": "<p>If you can show your function is an outer measure (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.outer_measure\">docs#measure_theory.outer_measure</a>) then you can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.outer_measure.to_measure\">docs#measure_theory.outer_measure.to_measure</a>, proving the Carathéodory criterion instead of the countably additive property may be easier. Once you have a measure, you can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.is_probability_measure\">docs#measure_theory.is_probability_measure</a>. But yeah it would help to have a bit more context.</p>\n<p>Regarding measurable spaces, from what I can tell we don't distinguish them from σ-algebras at the moment -- that is, they're defined on a type, rather than a set.</p>",
        "id": 275172354,
        "sender_full_name": "Rish Vaishnav",
        "timestamp": 1647201792
    },
    {
        "content": "<p>Thank you for the response <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span>  - I'm working on trying to construct Markov Kernels, and I was modeling them as, for measurable spaces α and β, a function μ : α -&gt; set β -&gt; ennreals. When trying to write down the definition of such an object, I wanted to then say that for all x : α, the function λ B : set β, μ x B is a probability measure (well, its restriction to to only the sets in the σ-algebra of β is a measure at least).</p>\n<p>After having given it more thought (and also realizing I don't understand structures yet apparently), I was considering taking a different approach and trying to make it a structure with a function α -&gt; measure β and a function measurable_set β -&gt; (α -&gt; ennreals) that each have to satisfy they're own axioms. Alternatively I could take a totally different approach and look for a different characterization of the object because there are like 5 other defining properties that I could use instead Lol</p>",
        "id": 275172424,
        "sender_full_name": "Torey Hilbert",
        "timestamp": 1647201897
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"484742\">Torey Hilbert</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/checking.20if.20function.20is.20a.20probability.20measure/near/275172424\">said</a>:</p>\n<blockquote>\n<p>I was modeling them as, for measurable spaces α and β, a function μ : α -&gt; set β -&gt; ennreals.</p>\n<p>I was considering taking a different approach and trying to make it a structure with a function α -&gt; measure β and a function measurable_set β -&gt; (α -&gt; ennreals) that each have to satisfy they're own axioms.</p>\n</blockquote>\n<p>Can you take it to be <em>just</em></p>\n<blockquote>\n<p>a function α -&gt; measure β </p>\n</blockquote>\n<p>?</p>",
        "id": 275172549,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1647202083
    },
    {
        "content": "<p>I guess I can yeah - and then just have something that can pull the other collection of functions that I was referring from the measures. Thank you, this was really helpful <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> (One last question - is α -&gt; measure β the correct way to describe a function that accepts an element of α and gives a measure on β? I was worried I was going to have to use the Giry monad or something so this would be a big relief to hear)</p>",
        "id": 275172715,
        "sender_full_name": "Torey Hilbert",
        "timestamp": 1647202354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"373814\">@Rish Vaishnav</span> I'm sure I'll have to use this at some other point, so thank you for showing me this too!</p>",
        "id": 275172739,
        "sender_full_name": "Torey Hilbert",
        "timestamp": 1647202436
    }
]