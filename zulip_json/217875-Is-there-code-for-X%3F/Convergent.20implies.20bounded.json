[
    {
        "content": "<p>Can't seem to find this in the library -- do we have it?  I would take either a form for orders,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">Œπ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Œ±</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">linear_order</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_topology</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Œπ</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">cofinite</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">bdd_above</span> <span class=\"o\">(</span><span class=\"n\">set.range</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>or for metric spaces,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">Œπ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">Œ±</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Œπ</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">cofinite</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">metric.bounded</span> <span class=\"o\">(</span><span class=\"n\">set.range</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 262398877,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1637628562
    },
    {
        "content": "<p>Maybe this breaks into two lemmas: (1) convergent implies eventually bounded; (2) for <code>filter.cofinite</code>, eventually bounded implies bounded.</p>",
        "id": 262399028,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1637628681
    },
    {
        "content": "<p>(I have messy proofs which I'll PR if nothing elegant is available.)</p>",
        "id": 262399065,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1637628721
    },
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cauchy_seq_bdd\">docs#cauchy_seq_bdd</a></p>",
        "id": 262410468,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637640437
    },
    {
        "content": "<p>It comes before the definition of <code>metric.bounded</code></p>",
        "id": 262410473,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637640451
    },
    {
        "content": "<p>That is for domain <code>Œπ = ‚Ñï</code> though, I would like something more general.</p>",
        "id": 262411205,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1637641262
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.metric_space.basic</span>\n\n<span class=\"c\">/-</span><span class=\"cm\">!</span>\n<span class=\"cm\">-/</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">filter</span> <span class=\"n\">set</span> <span class=\"n\">metric</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">uniformity</span> <span class=\"n\">filter</span> <span class=\"n\">topological_space</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">Œ±</span> <span class=\"n\">Œπ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">pseudo_metric_space</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Œπ</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">bounded_range_of_tendsto_cofinite_uniformity</span>\n  <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"n\">prod.map</span> <span class=\"n\">f</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cofinite</span> <span class=\"bp\">√ó·∂†</span> <span class=\"n\">cofinite</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">ùì§</span> <span class=\"n\">Œ±</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">bounded</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rcases</span> <span class=\"o\">(</span><span class=\"n\">has_basis_cofinite.prod_self.tendsto_iff</span> <span class=\"n\">uniformity_basis_dist</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">hf</span> <span class=\"mi\">1</span> <span class=\"n\">zero_lt_one</span>\n    <span class=\"k\">with</span> <span class=\"o\">‚ü®</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hsf</span><span class=\"o\">,</span> <span class=\"n\">hs1</span><span class=\"o\">‚ü©,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">‚Üê</span> <span class=\"n\">image_univ</span><span class=\"o\">,</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">union_compl_self</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">image_union</span><span class=\"o\">,</span> <span class=\"n\">bounded_union</span><span class=\"o\">],</span>\n  <span class=\"n\">use</span> <span class=\"o\">[(</span><span class=\"n\">hsf.image</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">bounded</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">],</span>\n  <span class=\"n\">rintro</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">‚ü®</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">‚ü©</span> <span class=\"o\">‚ü®</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">‚ü©,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">le_of_lt</span> <span class=\"o\">(</span><span class=\"n\">hs1</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">‚ü®</span><span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">‚ü©)</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">bounded_range_of_cauchy_map_cofinite</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">cauchy</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"n\">f</span> <span class=\"n\">cofinite</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">bounded</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">bounded_range_of_tendsto_cofinite_uniformity</span> <span class=\"bp\">$</span> <span class=\"o\">(</span><span class=\"n\">cauchy_map_iff.1</span> <span class=\"n\">hf</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">2</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">bounded_range_of_tendsto_cofinite</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">cofinite</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">bounded</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">bounded_range_of_tendsto_cofinite_uniformity</span> <span class=\"bp\">$</span>\n  <span class=\"o\">(</span><span class=\"n\">hf.prod_map</span> <span class=\"n\">hf</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mono_right</span> <span class=\"bp\">$</span> <span class=\"n\">nhds_prod_eq.symm.trans_le</span> <span class=\"o\">(</span><span class=\"n\">nhds_le_uniformity</span> <span class=\"n\">a</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 262413625,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637643877
    },
    {
        "content": "<p>It needs</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">has_basis_cofinite</span> <span class=\"o\">:</span> <span class=\"n\">has_basis</span> <span class=\"n\">cofinite</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">Œ±</span><span class=\"o\">,</span> <span class=\"n\">s.finite</span><span class=\"o\">)</span> <span class=\"n\">compl</span> <span class=\"o\">:=</span>\n<span class=\"bp\">+</span><span class=\"o\">‚ü®</span><span class=\"bp\">Œª</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">‚ü®</span><span class=\"bp\">Œª</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"o\">‚ü®</span><span class=\"n\">s</span><span class=\"bp\">·∂ú</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">compl_compl</span> <span class=\"n\">s</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">subset</span><span class=\"o\">‚ü©,</span> <span class=\"bp\">Œª</span> <span class=\"o\">‚ü®</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">htf</span><span class=\"o\">,</span> <span class=\"n\">hts</span><span class=\"o\">‚ü©,</span> <span class=\"n\">htf.subset</span> <span class=\"bp\">$</span> <span class=\"n\">compl_subset_comm.2</span> <span class=\"n\">hts</span><span class=\"o\">‚ü©‚ü©</span>\n</code></pre></div>",
        "id": 262413656,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637643925
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/10423\">#10423</a></p>",
        "id": 262413838,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637644139
    },
    {
        "content": "<p>Very nice!  It is interesting to me that this proof for the metric version does not obviously translate to a proof for the order version (fine for me, I only need it for the reals).</p>",
        "id": 262413848,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1637644152
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/10424\">#10424</a></p>",
        "id": 262416702,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637647742
    },
    {
        "content": "<p>UPD: we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.tendsto.is_bounded_under_le\">docs#filter.tendsto.is_bounded_under_le</a>.</p>",
        "id": 262421354,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637652948
    },
    {
        "content": "<p>I'm going to adjust <a href=\"https://github.com/leanprover-community/mathlib/issues/10424\">#10424</a> to this API</p>",
        "id": 262421401,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637652966
    }
]