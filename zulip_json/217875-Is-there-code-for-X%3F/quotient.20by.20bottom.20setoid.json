[
    {
        "content": "<p>Is there anything in mathlib about what happens when I quotient by the <code>bottom</code> setoid (ie equality)?</p>",
        "id": 203413961,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1594314885
    },
    {
        "content": "<p>I'd be happy with an equivalence between the original type and the quotiented type</p>",
        "id": 203413978,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1594314901
    },
    {
        "content": "<p>Can't find it in <code>data/equiv/basic</code> and <code>data/setoid/basic</code>, so I guess we don't have this equivalence.</p>",
        "id": 203424414,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1594320636
    },
    {
        "content": "<p>But it should be easy to write it.</p>",
        "id": 203424427,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1594320649
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">quotient_bot_equiv</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"err\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"err\">≃</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">to_fun</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift_on&#39;</span> <span class=\"n\">x</span> <span class=\"n\">id</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">id</span><span class=\"o\">),</span>\n  <span class=\"n\">inv_fun</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">mk&#39;</span><span class=\"o\">,</span>\n  <span class=\"n\">left_inv</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"k\">begin</span>\n    <span class=\"n\">apply</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on&#39;</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n    <span class=\"n\">intro</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n    <span class=\"n\">refl</span><span class=\"o\">,</span>\n  <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">right_inv</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">rfl</span> <span class=\"o\">}</span>\n</code></pre></div>\n\n\n<p>Yeah I ended up doing it</p>",
        "id": 203426917,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1594321925
    }
]