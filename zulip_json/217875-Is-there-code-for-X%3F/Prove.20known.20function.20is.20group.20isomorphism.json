[
    {
        "content": "<p>Given I have <code>def phi (n: ℤ) := -n</code> how do I write the lean proof to show it is a additive group isomorphism? I know how to show types have group properties with <code>@[instance] def ℤ.group : group ℤ := {...}</code>but am struggling to replicate this using the <code>iso</code> structure thingy.</p>",
        "id": 277133201,
        "sender_full_name": "Ben",
        "timestamp": 1648642051
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.hom.equiv</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">add_equiv.neg_iso</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">≃+</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">to_fun</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"n\">a</span> <span class=\"o\">,</span>\n  <span class=\"n\">inv_fun</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"n\">left_inv</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">right_inv</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">map_add'</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 277133620,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1648642216
    },
    {
        "content": "<p>You maybe shouldn't define the bare <code>phi</code> at all (after all, we have it already, it's called <code>has_neg.neg</code> with notation <code>-</code>) but should instead let phi be <code>add_equiv.neg_iso</code> and enjoy the fact that it will coerce to a function automatically.</p>",
        "id": 277134535,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648642634
    }
]