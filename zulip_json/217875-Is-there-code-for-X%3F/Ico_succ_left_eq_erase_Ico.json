[
    {
        "content": "<p>Is there something like <code>Ico_succ_left_eq_erase_Ico (a b : ℕ) : Ico a.succ b = erase (Ico a b) a</code>?<br>\n<span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> , I see you have recently been PRs about intervals. Do you have a plan to include something like this?</p>",
        "id": 259180476,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1635295157
    },
    {
        "content": "<p>Isn't the proof just { ext, simp }?</p>",
        "id": 259183949,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1635298754
    },
    {
        "content": "<p>That leaves the goal <code>a.succ ≤ a_1 ∧ a_1 &lt; b ↔ ¬a_1 = a ∧ a ≤ a_1 ∧ a_1 &lt; b</code></p>",
        "id": 259185681,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1635300843
    },
    {
        "content": "<p>Can <code>library_search</code> solve <code>a+1 ≤ t ↔ a ≠ t ∧ a ≤ t</code>? Or prove that either of them are equivalent to <code>a&lt;t</code>? That seems to be the missing piece.</p>",
        "id": 259196319,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635314361
    },
    {
        "content": "<p>There might not be! I could have spent tens of PRs completing the finite intervals API but I decided I would wait to see what's needed. If you need it, we can add it.</p>",
        "id": 259201299,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635319404
    },
    {
        "content": "<p>You should first prove <code>Ico a.succ b = Ioo a b</code>.</p>",
        "id": 259201385,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1635319458
    },
    {
        "content": "<p>The proof for that iff should use the underlying lt lemma present in preorder, likely after an and_comm</p>",
        "id": 259230644,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1635337705
    }
]