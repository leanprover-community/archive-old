[
    {
        "content": "<p>My obsession with Bernoulli numbers turned to an obsession with how to work with the function sending <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(i,j)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo>+</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">!</mo></mrow><mrow><mi>i</mi><mo stretchy=\"false\">!</mo><mi>j</mi><mo stretchy=\"false\">!</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{(i+j)!}{i!j!}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.491108em;vertical-align:-0.481108em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">!</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">!</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span><span class=\"mclose mtight\">!</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.481108em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> and is now  coming around to the idea of <code>pascal (n : ℕ) : polynomial ℚ :=  (∏ i in finset.range n, (polynomial.X + i)) / n!</code>. These functions are a basis for integer-valued polynomials and I guess there is even a nat-valued statement: nat-valued polynomials are nat-linear combinations of these, all happening as subgroups of <code>polynomial rat</code>. Do we have these in Lean? What is the name of these fuctions in other languages? In mathematics? Oh -- <a href=\"https://en.wikipedia.org/wiki/Falling_and_rising_factorials\">https://en.wikipedia.org/wiki/Falling_and_rising_factorials</a> . <code>pockhammer</code>? <code>upperfact</code>?</p>",
        "id": 221136057,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609250460
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Binomial_transform\">https://en.wikipedia.org/wiki/Binomial_transform</a> might be useful</p>",
        "id": 221138034,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1609252332
    },
    {
        "content": "<p>They're not really the pochhammer symbols are they?</p>",
        "id": 221138241,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1609252554
    },
    {
        "content": "<p>the wikipedia link mentioned his name as being associated with them.</p>",
        "id": 221150372,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609262583
    }
]