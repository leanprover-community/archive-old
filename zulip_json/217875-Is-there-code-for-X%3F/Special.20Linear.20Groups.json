[
    {
        "content": "<p>Hi all,<br>\nI’m a first year undergraduate mathematics student at Imperial College London and a regular attendee at Dr. Kevin Buzzard’s weekly Lean sessions. I am keen to contribute to Mathlib and was browsing through the “Missing undergraduate topics in Lean” page on Lean Community. I found Special Linear Groups on that list, and I couldn’t find it in the Pull Requests either. I was wondering what exactly needs to be done. Any suggestions on how to get started would be much appreciated too.<br>\nThank you!</p>",
        "id": 281338896,
        "sender_full_name": "Sidharth Hariharan",
        "timestamp": 1651774920
    },
    {
        "content": "<p>It seems we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.special_linear_group\">docs#matrix.special_linear_group</a> but no equivalent definition for linear maps</p>",
        "id": 281346039,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651778291
    },
    {
        "content": "<p>I wonder; is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/unitary\">docs#unitary</a> applied to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.End\">docs#module.End</a> distinct from the special linear group?</p>",
        "id": 281346160,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651778372
    },
    {
        "content": "<p>unitary wants a star, but even if star is trivial you don't get the special linear group, you get orthogonal groups I guess.</p>",
        "id": 281346354,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651778447
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> can Anne's work linked to above be used to remove special linear groups from the UG todo list?</p>",
        "id": 281346463,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651778503
    },
    {
        "content": "<p>(<a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_map.star_semigroup\">docs#linear_map.star_semigroup</a> requires an inner product space too, so is probably too strong on typeclass requirements for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/unitary\">docs#unitary</a> to be useful)</p>",
        "id": 281346556,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651778541
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Special.20Linear.20Groups/near/281346463\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> can Anne's work linked to above be used to remove special linear groups from the UG todo list?</p>\n</blockquote>\n<p>I guess even if we don't want the matrix version, the linear map version is basically just <code>linear_map.det.ker</code></p>",
        "id": 281346838,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651778661
    },
    {
        "content": "<p>I would like to see a version that actually types check.</p>",
        "id": 281351126,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1651780643
    },
    {
        "content": "<p>I can write</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">linear_algebra.determinant</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">A</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n\n<span class=\"k\">#check</span> <span class=\"bp\">@</span><span class=\"n\">monoid_hom.ker</span>\n<span class=\"k\">#check</span>  <span class=\"o\">(</span><span class=\"n\">linear_map.det</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">→ₗ</span><span class=\"o\">[</span><span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"bp\">→*</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>but <code>(M →ₗ[A] M)</code> is not a group</p>",
        "id": 281351254,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1651780705
    },
    {
        "content": "<p>and <code>linear_equiv.det</code> doesn't seem to exist.</p>",
        "id": 281351285,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1651780719
    },
    {
        "content": "<p>So I would say we don't seem to have the special linear group, but it shouldn't be far away.</p>",
        "id": 281351323,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1651780740
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"476523\">@Sidharth Hariharan</span> so it seems that there's a mini project to be done there before we can tick it off -- I can talk you through it next Thurs</p>",
        "id": 281363666,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1651787245
    },
    {
        "content": "<blockquote>\n<p><code>linear_equiv.det</code> doesn't seem to exist</p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_equiv.det\">docs#linear_equiv.det</a></p>",
        "id": 281364471,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651787772
    },
    {
        "content": "<p>Apparently I added this in <a href=\"https://github.com/leanprover-community/mathlib/pull/10751\">#10751</a></p>",
        "id": 281364540,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651787831
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I see. Sounds good, thank you!</p>",
        "id": 281365977,
        "sender_full_name": "Sidharth Hariharan",
        "timestamp": 1651788671
    },
    {
        "content": "<p>If we want the <code>linear_map</code> version of the special linear group, it might be good also to add the basis-independant definition of the determinant in terms of exterior powers similar to what we did we the trace recently (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_map.trace_eq_contract\">docs#linear_map.trace_eq_contract</a>)</p>",
        "id": 281386536,
        "sender_full_name": "Antoine Labelle",
        "timestamp": 1651808941
    }
]