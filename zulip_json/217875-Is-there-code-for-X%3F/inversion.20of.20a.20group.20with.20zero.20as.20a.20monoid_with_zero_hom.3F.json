[
    {
        "content": "<p>If <code>G</code> is a <code>comm_group_with_zero</code>, then <code>group_with_zero.inv : G → G</code> is a <code>monoid_with_zero_hom</code>. Is this available in mathlib somewhere?</p>",
        "id": 279178989,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1650131702
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">inv_as_monoid_with_zero_hom</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_group_with_zero</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">→*₀</span> <span class=\"n\">G</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">to_fun</span> <span class=\"o\">:=</span> <span class=\"n\">group_with_zero.inv</span><span class=\"o\">,</span> <span class=\"n\">map_zero'</span> <span class=\"o\">:=</span> <span class=\"n\">inv_zero</span><span class=\"o\">,</span> <span class=\"n\">map_one'</span> <span class=\"o\">:=</span> <span class=\"n\">inv_one</span><span class=\"o\">,</span>\n  <span class=\"n\">map_mul'</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">mul_inv₀</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 279179412,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1650132287
    },
    {
        "content": "<p>Could you use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/inv_monoid_with_zero_hom\">docs#inv_monoid_with_zero_hom</a>?</p>",
        "id": 279179799,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1650132861
    }
]