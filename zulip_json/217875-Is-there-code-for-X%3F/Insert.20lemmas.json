[
    {
        "content": "<p>Do we have these two insert lemmas?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">set.insert_inter_of_mem</span> <span class=\"o\">{</span><span class=\"n\">s₁</span> <span class=\"n\">s₂</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">∈</span> <span class=\"n\">s₂</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">insert</span> <span class=\"n\">a</span> <span class=\"n\">s₁</span> <span class=\"bp\">∩</span> <span class=\"n\">s₂</span> <span class=\"bp\">=</span> <span class=\"n\">insert</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">s₁</span> <span class=\"bp\">∩</span> <span class=\"n\">s₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">split</span><span class=\"bp\">;</span> <span class=\"n\">finish</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">set.insert_inter_of_not_mem</span> <span class=\"o\">{</span><span class=\"n\">s₁</span> <span class=\"n\">s₂</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">∉</span> <span class=\"n\">s₂</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">insert</span> <span class=\"n\">a</span> <span class=\"n\">s₁</span> <span class=\"bp\">∩</span> <span class=\"n\">s₂</span> <span class=\"bp\">=</span> <span class=\"n\">s₁</span> <span class=\"bp\">∩</span> <span class=\"n\">s₂</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">split</span><span class=\"bp\">;</span> <span class=\"n\">finish</span> <span class=\"o\">}</span>\n</code></pre></div>\n\n<p>I think they are pretty useful but I can't seem to find them anywhere (I was able to find a finset version but not for set).</p>",
        "id": 211945538,
        "sender_full_name": "Jason KY.",
        "timestamp": 1601573485
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.insert_inter\">docs#set.insert_inter</a> followed by <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.insert_eq_of_mem\">docs#set.insert_eq_of_mem</a>?</p>",
        "id": 211946971,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1601574085
    },
    {
        "content": "<p>That works great! Thanks</p>",
        "id": 211947135,
        "sender_full_name": "Jason KY.",
        "timestamp": 1601574153
    }
]