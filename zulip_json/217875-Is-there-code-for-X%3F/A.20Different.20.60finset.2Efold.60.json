[
    {
        "content": "<p>The definition of <a href=\"https://leanprover-community.github.io/mathlib_docs/data/finset/fold.html#finset.fold\"><code>finset.fold</code></a> is explained as follows:</p>\n<blockquote>\n<p><code>fold op b f s</code> folds the commutative associative operation <code>op</code> over the <code>f</code>-image of <code>s</code>, <br>\ni.e. <code>fold (+) b f {1,2,3} = f 1 + f 2 + f 3 + b</code>.</p>\n</blockquote>\n<p>The consequence of this is that the types of <code>b</code> and <code>f x</code> have to match.<br>\nIs there someway to perform a fold over a <code>finset</code>, where <code>b</code> can have a different type than <code>f x</code>?<br>\nAnd e.g. the requirement could be that ... </p>\n<p><code>∀ (x y : α) (b : β), op (op b (f x)) (f y) = op (op b (f y)) (f x)</code></p>",
        "id": 222974315,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1610793722
    },
    {
        "content": "<p>I suspect the issue is that the typeclasses used to express the current <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.fold\">docs#finset.fold</a> don't exist to express what you suggest</p>",
        "id": 222974942,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1610794801
    },
    {
        "content": "<p>(I guess this applies to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset.fold\">docs#multiset.fold</a> too)</p>",
        "id": 222975149,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1610795020
    },
    {
        "content": "<p>Ah, I think you want <code>(s.1.map f).foldr op b</code> (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset.foldr\">docs#multiset.foldr</a>)</p>",
        "id": 222975402,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1610795305
    },
    {
        "content": "<p>Ahhh that's exactly it. Thanks for always being so helpful <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>!</p>",
        "id": 222978188,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1610799058
    }
]