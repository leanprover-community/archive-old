[
    {
        "content": "<p>I want a more general construction. Working on it.</p>",
        "id": 252737994,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631254431
    },
    {
        "content": "<p>The goal is to have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">mk_derivation</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">σ</span> <span class=\"bp\">→</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">derivation</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>and an <code>equiv</code>.</p>",
        "id": 252738061,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631254467
    },
    {
        "content": "<p>Done (locally). I'll PR it tomorrow.</p>",
        "id": 252739696,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631255872
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> has marked this topic as resolved.</p>",
        "id": 252739755,
        "sender_full_name": "Notification Bot",
        "timestamp": 1631255890
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/9145\">#9145</a> (almost ready but has some semi-relevant changes to <code>mv_polynomial</code>s in the same branch).</p>",
        "id": 252909645,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631366983
    }
]