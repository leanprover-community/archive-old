[
    {
        "content": "<p>Does mathlib have the following variant of <code>exists_ultrafilter</code>? I couldn't find anything similar. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">exists_ultrafilter'</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">cond</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">),</span>\n  <span class=\"bp\">↑</span><span class=\"n\">T</span> <span class=\"bp\">⊆</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"bp\">⋂₀</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"bp\">≠</span> <span class=\"bp\">∅</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">S</span> <span class=\"bp\">⊆</span> <span class=\"n\">F.sets</span> <span class=\"bp\">∧</span> <span class=\"n\">is_ultrafilter</span> <span class=\"n\">F</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>",
        "id": 212252522,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1601864234
    },
    {
        "content": "<p>If not, I could open a PR for this:<br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/b85798964d03672dc8c3123ccdd5a7fa2916f2eb/src/order/filter/ultrafilter.lean#L145\">https://github.com/leanprover-community/mathlib/blob/b85798964d03672dc8c3123ccdd5a7fa2916f2eb/src/order/filter/ultrafilter.lean#L145</a></p>",
        "id": 212252702,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1601864541
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/4436\">#4436</a></p>",
        "id": 212305892,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1601907889
    }
]