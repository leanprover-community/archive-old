[
    {
        "content": "<p>I have <code>s : finset (α ⊕ β)</code>. What is an easy way to get <code>sa : finset α</code> and <code>sb : finset β</code> such that <code>s = sa.image sum.inl ∪ sb.image sum.inr</code>?</p>",
        "id": 212906409,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1602320288
    },
    {
        "content": "<p>Is there a <code>map_filter</code> function on finset?</p>",
        "id": 212906573,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602320533
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.map_filter\">docs#finset.map_filter</a> is a theorem</p>",
        "id": 212906649,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1602320703
    },
    {
        "content": "<p>er, I guess <code>filter_map</code></p>",
        "id": 212906848,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602321054
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/list.filter_map/src\">src#list.filter_map</a></p>",
        "id": 212906851,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602321061
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.filter_map/src\">src#finset.filter_map</a>?</p>",
        "id": 212906857,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602321076
    },
    {
        "content": "<p>no luck</p>",
        "id": 212906860,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602321084
    },
    {
        "content": "<p>hm, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset.filter_map/src\">src#multiset.filter_map</a></p>",
        "id": 212906871,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602321121
    },
    {
        "content": "<p>okay we have that</p>",
        "id": 212906909,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602321130
    },
    {
        "content": "<p>I guess there is some complication in defining it, similar to <code>finset.map</code>, since we require that the function be injective</p>",
        "id": 212906935,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602321191
    },
    {
        "content": "<p>I'll just use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.preimage\">docs#finset.preimage</a>. This is not constructive but I need it in linear algebra.</p>",
        "id": 212906939,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1602321207
    },
    {
        "content": "<p>yeah that works too</p>",
        "id": 212906983,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1602321260
    }
]