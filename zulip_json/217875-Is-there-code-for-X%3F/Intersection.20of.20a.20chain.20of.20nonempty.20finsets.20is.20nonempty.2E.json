[
    {
        "content": "<p>Hey, I'm in need of such a function. What would be the shortest way to get it? Thanks!</p>",
        "id": 291410519,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1659161644
    },
    {
        "content": "<p>Here's one formulation of it:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.fintype.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">order.chain</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.nat.lattice</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">finset.nonempty_Inter_of_chain</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">sf</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">sfn</span> <span class=\"o\">:</span> <span class=\"n\">sf.nonempty</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">sf</span><span class=\"o\">,</span> <span class=\"n\">finset.nonempty</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">is_chain</span> <span class=\"o\">(</span><span class=\"bp\">⊆</span><span class=\"o\">)</span> <span class=\"n\">sf</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">sf</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">csn</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">finset.card</span> <span class=\"bp\">''</span> <span class=\"n\">sf</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">sfn</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"o\">[</span><span class=\"n\">s.card</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">],</span> <span class=\"o\">},</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"n\">hsc</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">nat.Inf_mem</span> <span class=\"n\">csn</span><span class=\"o\">,</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hn</span> <span class=\"n\">_</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">s'</span> <span class=\"n\">hs'</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">s.card</span> <span class=\"bp\">≤</span> <span class=\"n\">s'.card</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">hsc</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">nat.Inf_le</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"o\">[</span><span class=\"n\">s'</span><span class=\"o\">,</span> <span class=\"n\">hs'</span><span class=\"o\">],</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">s'</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">obtain</span> <span class=\"o\">(</span><span class=\"n\">rfl</span><span class=\"bp\">|</span><span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">eq_or_ne</span> <span class=\"n\">s</span> <span class=\"n\">s'</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">refl</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">or_iff_not_imp_right.mp</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"n\">hs</span> <span class=\"n\">hs'</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n      <span class=\"n\">intro</span> <span class=\"n\">h'</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">finset.eq_of_subset_of_card_le</span> <span class=\"n\">h'</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"n\">h</span> <span class=\"n\">rfl</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"n\">this</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 291412016,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1659164132
    },
    {
        "content": "<p>ah, thanks! You haven't used any <code>\\Inter</code> because it doesn't exist yet for<code>finset</code>, right?</p>",
        "id": 291412091,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1659164260
    },
    {
        "content": "<p>I just thought <code>(⋂ (s ∈ sf), (s : set α)).nonempty</code> wouldn't help with the proof. No deep reasons.</p>",
        "id": 291412416,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1659164755
    },
    {
        "content": "<p>It's not too different also showing it for directed sets:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">finset.nonempty_Inter_of_chain</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">sf</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">sfn</span> <span class=\"o\">:</span> <span class=\"n\">sf.nonempty</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">sf</span><span class=\"o\">,</span> <span class=\"n\">finset.nonempty</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hd</span> <span class=\"o\">:</span> <span class=\"n\">directed_on</span> <span class=\"o\">(</span><span class=\"bp\">⊇</span><span class=\"o\">)</span> <span class=\"n\">sf</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">sf</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">csn</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">finset.card</span> <span class=\"bp\">''</span> <span class=\"n\">sf</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">sfn</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"o\">[</span><span class=\"n\">s.card</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">],</span> <span class=\"o\">},</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"n\">hsc</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">nat.Inf_mem</span> <span class=\"n\">csn</span><span class=\"o\">,</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hn</span> <span class=\"n\">_</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">s'</span> <span class=\"n\">hs'</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">s'</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">s''</span><span class=\"o\">,</span> <span class=\"n\">hs''</span><span class=\"o\">,</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"n\">h2</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hd</span> <span class=\"n\">_</span> <span class=\"n\">hs</span> <span class=\"n\">_</span> <span class=\"n\">hs'</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">finset.subset.trans</span> <span class=\"n\">_</span> <span class=\"n\">h2</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">s.card</span> <span class=\"bp\">≤</span> <span class=\"n\">s''.card</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">hsc</span><span class=\"o\">,</span>\n      <span class=\"n\">apply</span> <span class=\"n\">nat.Inf_le</span><span class=\"o\">,</span>\n      <span class=\"n\">use</span> <span class=\"o\">[</span><span class=\"n\">s''</span><span class=\"o\">,</span> <span class=\"n\">hs''</span><span class=\"o\">],</span> <span class=\"o\">},</span>\n    <span class=\"n\">cases</span> <span class=\"n\">finset.eq_of_subset_of_card_le</span> <span class=\"n\">h1</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n    <span class=\"n\">refl</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"n\">exact</span> <span class=\"n\">this</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 291412577,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1659164971
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461830\">Rémi Bottinelli</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Intersection.20of.20a.20chain.20of.20nonempty.20finsets.20is.20nonempty.2E/near/291412091\">said</a>:</p>\n<blockquote>\n<p>ah, thanks! You haven't used any <code>⋂ because it doesn't exist yet for</code>finset`, right?</p>\n</blockquote>\n<p>It does: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.inf\">docs#finset.inf</a>. <code>finset.bUnion</code> is a (stupid according to me) special case of <code>finset.sup</code>.</p>",
        "id": 291419555,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1659174766
    }
]