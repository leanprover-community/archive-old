[
    {
        "content": "<p>This should definitely be in mathlib (I need it), but <code>library_search!</code> is not finding it.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">expPowEqExpMul</span> <span class=\"o\">(</span><span class=\"n\">z</span><span class=\"o\">:</span><span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">exp</span> <span class=\"o\">(</span><span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">exp</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">ih</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">pow_zero</span><span class=\"o\">,</span> <span class=\"n\">nat.cast_zero</span><span class=\"o\">,</span> <span class=\"n\">mul_zero</span><span class=\"o\">,</span> <span class=\"n\">complex.exp_zero</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_succ</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">n.succ</span><span class=\"o\">:</span><span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span><span class=\"n\">simp</span><span class=\"o\">}</span> <span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">z</span> <span class=\"bp\">+</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span><span class=\"n\">ring</span><span class=\"o\">}</span> <span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"n\">complex.exp_add</span> <span class=\"n\">z</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">congr</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">ih</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 300284427,
        "sender_full_name": "Mark Andrew Gerads",
        "timestamp": 1663904788
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/complex.exp_nat_mul\">docs#complex.exp_nat_mul</a></p>",
        "id": 300284641,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1663905075
    },
    {
        "content": "<p>modulo symmetry and commuting factors</p>",
        "id": 300284713,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1663905135
    },
    {
        "content": "<p>Or <a href=\"https://leanprover-community.github.io/mathlib_docs/find/exp_nsmul\">docs#exp_nsmul</a></p>",
        "id": 300298467,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1663916458
    }
]