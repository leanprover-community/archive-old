[
    {
        "content": "<p>Is there a function of type <code>fin n -&gt; fin n</code> which maps <code>i</code> to <code>i+1</code>, wrapping around to 0 for i = n-1, which works for <code>n=0</code> and <code>n=1</code>?</p>",
        "id": 284833856,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1654228543
    },
    {
        "content": "<p><code>(+ 1)</code></p>",
        "id": 284837605,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1654233515
    },
    {
        "content": "<p>Won't that say \"what the heck is 1\" if n is small?</p>",
        "id": 284839333,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654235851
    },
    {
        "content": "<p>Oh, d'ah, yes. I checked whether the add is defined but I didn't check for 1</p>",
        "id": 284840341,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1654237097
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin_rotate\">docs#fin_rotate</a></p>",
        "id": 284841146,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1654237969
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"282271\">Bolton Bailey</span> has marked this topic as unresolved.</p>",
        "id": 311229778,
        "sender_full_name": "Notification Bot",
        "timestamp": 1669016622
    },
    {
        "content": "<p>What about a function <code>fin n -&gt; {nat, int} -&gt; fin n</code> that applies <code>fin_rotate</code> a number of times given by the second argument?</p>",
        "id": 311229926,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1669016690
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.add_right\">docs#equiv.add_right</a>?</p>",
        "id": 311230109,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669016764
    },
    {
        "content": "<p>Or just raise rotate to a power?</p>",
        "id": 311230180,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1669016800
    }
]