[
    {
        "content": "<p>Hello everyone, I'm new to Lean. I was wondering whether were are any cases where reasoning about algorithms can be done in lean? This would include: Defining an algorithm in lean, proving its correctness in lean, analyzing its run time in lean etc.</p>\n<p>More specifically, can one prove in lean that say the Miller-Rabin primality test correctly tests whether a number is prime with high probability and does so in polynomial time?</p>",
        "id": 310345240,
        "sender_full_name": "Rian Neogi",
        "timestamp": 1668579557
    },
    {
        "content": "<p>I think this is related to the <a href=\"#narrow/stream/113488-general/topic/Computational.20Complexity.20Theory\">formalization of complexity theory</a>, but the it is still a difficult problem. Of course for specific problems, general complexity theory can be avoided.</p>",
        "id": 310347858,
        "sender_full_name": "Yuyang Zhao",
        "timestamp": 1668581391
    },
    {
        "content": "<p>Lean was originally created for formalizing algorithms so this is very much possible! A relevant example in mathlib is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/lucas_lehmer.run_test\">docs#lucas_lehmer.run_test</a>, which implements the Lucas-Lehmer test.</p>",
        "id": 310423392,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1668609091
    },
    {
        "content": "<p>I would recommend the <a href=\"https://github.com/blanchette/logical_verification_2021/raw/main/hitchhikers_guide.pdf\">Hitchhiker's Guide to Logical Verification</a> for an introduction on verifying software using Lean (nb: I'm a co-author of the Guide)</p>",
        "id": 310424165,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1668609334
    },
    {
        "content": "<p>Iâ€™m not sure it is natural to verify run-time of Lean algorithms.  Because of function extensionality, any two functions which give the same output are equal.</p>",
        "id": 310500277,
        "sender_full_name": "Jason Rute",
        "timestamp": 1668632213
    },
    {
        "content": "<p>Me and an undergrad mentee of mine worked on a formalization of the correctness and soundness of Miller-Rabin in Lean, unfortunately I never finished it to the point where it could be reviewed as a PR. You can see the branch <a href=\"https://github.com/leanprover-community/mathlib/pull/12254\">here</a></p>",
        "id": 310516998,
        "sender_full_name": "Bolton Bailey",
        "timestamp": 1668639629
    }
]