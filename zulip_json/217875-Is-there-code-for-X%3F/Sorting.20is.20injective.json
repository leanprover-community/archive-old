[
    {
        "content": "<p>Do we have the fact that sorting is injective, in any form? The precise statement I'm interested in is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.multiset.sort</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">function</span> <span class=\"n\">multiset</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_trans</span> <span class=\"n\">α</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_antisymm</span> <span class=\"n\">α</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_total</span> <span class=\"n\">α</span> <span class=\"n\">r</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">multiset.sort_injective</span> <span class=\"o\">:</span> <span class=\"n\">injective</span> <span class=\"o\">(</span><span class=\"n\">sort</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 295989343,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661803588
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.multiset.sort</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">function</span> <span class=\"n\">multiset</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_trans</span> <span class=\"n\">α</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_antisymm</span> <span class=\"n\">α</span> <span class=\"n\">r</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_total</span> <span class=\"n\">α</span> <span class=\"n\">r</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">multiset.sort_injective</span> <span class=\"o\">:</span> <span class=\"n\">injective</span> <span class=\"o\">(</span><span class=\"n\">sort</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">using</span> <span class=\"n\">congr_arg</span> <span class=\"o\">(</span><span class=\"n\">coe</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">multiset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>Is it worth it to have this as a lemma?</p>",
        "id": 295994684,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1661804468
    },
    {
        "content": "<p>It would certainly be useful to me! I am defining majorization as a relation <code>multiset α → multiset α → Prop</code> and this allows me to prove that it's antisymmetric.</p>",
        "id": 295994969,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661804582
    },
    {
        "content": "<p>I guess having a left inverse lemma does make sense</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">multiset.left_inverse_coe_sort</span> <span class=\"o\">:</span>\n  <span class=\"n\">function.left_inverse</span> <span class=\"n\">coe</span> <span class=\"o\">(</span><span class=\"n\">sort</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">multiset.sort_injective</span> <span class=\"o\">:</span> <span class=\"n\">injective</span> <span class=\"o\">(</span><span class=\"n\">sort</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">multiset.left_inverse_coe_sort.injective</span>\n</code></pre></div>",
        "id": 295995120,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1661804642
    },
    {
        "content": "<p>What notion of majorization are you defining? I have a <em>lot</em> of background in this area.</p>",
        "id": 296018517,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1661818064
    },
    {
        "content": "<p>This is my definition</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.big_operators.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.multiset.sort</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">weak_majorize</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"n\">s.card</span> <span class=\"bp\">=</span> <span class=\"n\">t.card</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">s.sort</span> <span class=\"o\">(</span><span class=\"bp\">≥</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">take</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"bp\">≤</span> <span class=\"o\">((</span><span class=\"n\">t.sort</span> <span class=\"o\">(</span><span class=\"bp\">≥</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">take</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">sum</span>\n\n<span class=\"kd\">infix</span> <span class=\"bp\">`</span> <span class=\"bp\">≼ʷ</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"o\">:=</span> <span class=\"n\">weak_majorize</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">majorize</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">s</span> <span class=\"bp\">≼ʷ</span> <span class=\"n\">t</span> <span class=\"bp\">∧</span> <span class=\"n\">s.sum</span> <span class=\"bp\">=</span> <span class=\"n\">t.sum</span>\n\n<span class=\"kd\">infix</span> <span class=\"bp\">`</span> <span class=\"bp\">≼ᵐ</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"o\">:=</span> <span class=\"n\">majorize</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">strict_majorize</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">s</span> <span class=\"bp\">≼ᵐ</span> <span class=\"n\">t</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span> <span class=\"n\">t</span> <span class=\"bp\">≼ᵐ</span> <span class=\"n\">s</span>\n\n<span class=\"kd\">infix</span> <span class=\"bp\">`</span> <span class=\"bp\">≺ᵐ</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"o\">:=</span> <span class=\"n\">strict_majorize</span>\n</code></pre></div>",
        "id": 296046801,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1661843277
    }
]