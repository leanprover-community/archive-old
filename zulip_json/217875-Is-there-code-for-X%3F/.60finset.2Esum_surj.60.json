[
    {
        "content": "<p>I need something along the lines of:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">finset.sum_eq_card_smul</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">gf</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hgf</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">gf</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hcard</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">s.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">gf</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">y</span> <span class=\"k\">in</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">_</span>\n</code></pre></div>\n<p>I have tried a few things, like going to multisets, but nothing really works out. Any ideas?</p>",
        "id": 218580421,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1606926046
    },
    {
        "content": "<p>Ah, maybe the intermediate step I'm looking for is <code>∑ y in t, ∑ x in s, if f x = y then g y else 0 : _</code></p>",
        "id": 218582061,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1606926675
    },
    {
        "content": "<p>Are  you using <code>finset.sum_comp</code>?</p>",
        "id": 218582306,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606926774
    },
    {
        "content": "<p>Almost, the trouble is the <code>finset.image</code></p>",
        "id": 218582538,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1606926871
    },
    {
        "content": "<p>Proving <code>finset.image f s = t</code>?</p>",
        "id": 218583121,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606927095
    },
    {
        "content": "<p>I just realized I forgot the assumption <code>finset.image f s ≤ t</code>, and that caused me to get stuck :P</p>",
        "id": 218583181,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1606927129
    },
    {
        "content": "<p>Thanks for the help!</p>",
        "id": 218583198,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1606927139
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.fintype.card</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">finset.sum_eq_card_smul</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_scalar</span> <span class=\"n\">ℕ</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">gf</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hgf</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">gf</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hcard</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">s.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">gf</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">y</span> <span class=\"k\">in</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">y</span> <span class=\"k\">in</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">y</span> <span class=\"k\">in</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">•</span><span class=\"n\">ℕ</span> <span class=\"n\">g</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"n\">simp_rw</span> <span class=\"n\">hgf</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">finset.sum_comp</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">finset.sum_congr</span><span class=\"o\">,</span>\n  <span class=\"n\">swap</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">y</span> <span class=\"n\">hy</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">hcard</span> <span class=\"n\">y</span> <span class=\"n\">hy</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span>\n    <span class=\"n\">sorry</span>\n  <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 218583215,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606927149
    },
    {
        "content": "<p>Not very neat, but you get the idea</p>",
        "id": 218583250,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606927162
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">gf</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">•</span><span class=\"n\">ℕ</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">y</span> <span class=\"k\">in</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">•</span><span class=\"n\">ℕ</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">y</span> <span class=\"k\">in</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">y</span> <span class=\"k\">in</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">•</span><span class=\"n\">ℕ</span> <span class=\"n\">g</span> <span class=\"n\">y</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n</code></pre></div>",
        "id": 218583303,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606927193
    },
    {
        "content": "<p>that way no <code>has_scalar</code> is needed</p>",
        "id": 218583319,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606927201
    },
    {
        "content": "<p><code>  rw ←finset.sum_nsmul,</code></p>",
        "id": 218583431,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606927236
    },
    {
        "content": "<p>There is a <code>has_scalar ℕ M</code> if <code>M</code> is an <code>add_comm_monoid</code>, defined exactly as <code>nsmul</code> :)</p>",
        "id": 218583603,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1606927322
    },
    {
        "content": "<p>Maybe I'm on an old mathlib or am missing imports then</p>",
        "id": 218583686,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606927338
    },
    {
        "content": "<p>But there is no <code>finset.sum_smul</code></p>",
        "id": 218583749,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606927365
    },
    {
        "content": "<p>There is <code>finset.smul_sum</code></p>",
        "id": 218583781,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1606927380
    },
    {
        "content": "<p>Apologies, you're right. In a totally different not imported file though</p>",
        "id": 218583915,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606927442
    },
    {
        "content": "<p>Have to get both </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.module.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">group_theory.group_action.basic</span>\n</code></pre></div>",
        "id": 218584176,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606927553
    },
    {
        "content": "<p>Thanks for the help, here's my golfed code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">finset.sum_eq_card_smul</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">gf</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hgf</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">gf</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hcard</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">s.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">gf</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"n\">y</span> <span class=\"k\">in</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">calc</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">gf</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">finset.sum_congr</span> <span class=\"n\">rfl</span> <span class=\"n\">hgf</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">y</span> <span class=\"k\">in</span> <span class=\"n\">finset.image</span> <span class=\"n\">f</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">s.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">•</span> <span class=\"n\">g</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">finset.sum_comp</span> <span class=\"n\">g</span> <span class=\"n\">f</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">y</span> <span class=\"k\">in</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">s.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">•</span> <span class=\"n\">g</span> <span class=\"n\">y</span> <span class=\"o\">:</span>\n  <span class=\"n\">finset.sum_subset</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">y</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rcases</span> <span class=\"n\">finset.mem_image.mp</span> <span class=\"n\">hy</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩,</span> <span class=\"n\">exact</span> <span class=\"n\">hf</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"o\">})</span>\n    <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">y</span> <span class=\"n\">hyt</span> <span class=\"n\">hys</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">mt</span> <span class=\"o\">(</span><span class=\"n\">finset.fiber_card_ne_zero_iff_mem_image</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"n\">hys</span><span class=\"o\">,</span>\n                        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ne.def</span><span class=\"o\">,</span> <span class=\"n\">not_not</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n                        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">zero_smul</span><span class=\"o\">]</span> <span class=\"o\">}))</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">y</span> <span class=\"k\">in</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">•</span> <span class=\"n\">g</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">finset.sum_congr</span> <span class=\"n\">rfl</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">y</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">hcard</span> <span class=\"n\">y</span> <span class=\"n\">hy</span><span class=\"o\">)</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">•</span> <span class=\"bp\">∑</span> <span class=\"n\">y</span> <span class=\"k\">in</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">finset.smul_sum.symm</span>\n</code></pre></div>",
        "id": 218584713,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1606927762
    }
]