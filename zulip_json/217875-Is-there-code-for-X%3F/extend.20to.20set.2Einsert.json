[
    {
        "content": "<p>Does this function already exist?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.set.basic</span>\n\n<span class=\"kd\">noncomputable theory</span>\n<span class=\"kn\">open</span> <span class=\"n\">set</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">function</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ι</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">extend_insert</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">),</span> <span class=\"n\">j</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hj</span> <span class=\"o\">:</span> <span class=\"n\">j</span> <span class=\"bp\">∈</span> <span class=\"n\">insert</span> <span class=\"n\">i</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"n\">j</span> <span class=\"o\">:=</span>\n<span class=\"k\">if</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">j</span> <span class=\"bp\">=</span> <span class=\"n\">i</span> <span class=\"k\">then</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">subst</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">x</span> <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"n\">f</span> <span class=\"n\">j</span> <span class=\"o\">(</span><span class=\"n\">mem_of_mem_insert_of_ne</span> <span class=\"n\">hj</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">function</span>\n</code></pre></div>\n<p>Even though it looks similar, it is not a special case of <code>function.update</code> or <code>function.extend</code>.</p>",
        "id": 219683136,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1607738526
    },
    {
        "content": "<p>maybe something related to <code>dfinsupp</code>?</p>",
        "id": 219684264,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1607740359
    },
    {
        "content": "<p>(for reference: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.extend\">docs#function.extend</a>)</p>",
        "id": 219697643,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607761905
    },
    {
        "content": "<p>It looks like <code>function.extend</code> is missing a generalization to dependent functions perhaps; which if it had, I think would work for your case if expressed with subtypes</p>",
        "id": 219697732,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607762036
    }
]