[
    {
        "content": "<p>Does mathlib have a name for maximal elements of a partial order (elements <code>x</code> satisfying <code>x ≤ y → x = y</code>)?</p>",
        "id": 252510538,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1631125978
    },
    {
        "content": "<p>We call them <code>is_maximal</code>, but I don't think there's a dedicated predicate. Of course, for top orders, the unique maximal element will be called <code>top</code>.</p>",
        "id": 252510805,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1631126094
    },
    {
        "content": "<p>You can also use <code>upper_bound univ</code> in total orders.</p>",
        "id": 252511987,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1631126593
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 252512869,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1631127012
    },
    {
        "content": "<p>Whoops sorry I meant <code>linear_order</code></p>",
        "id": 252512960,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1631127063
    },
    {
        "content": "<p>The case I have in mind are Sylow subgroups (maximal among p-subgroups), in which case <code>top</code> or <code>upper_bound univ</code> wouldn't work.</p>",
        "id": 252513412,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1631127253
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Maximal.20elements.20of.20a.20partial.20order/near/252510805\">said</a>:</p>\n<blockquote>\n<p>We call them <code>is_maximal</code>, but I don't think there's a dedicated predicate. Of course, for top orders, the unique maximal element will be called <code>top</code>.</p>\n</blockquote>\n<p>Are you saying that <code>is_maximal</code> is the naming convention, but there's no <code>def is_maximal</code> in mathlib?</p>",
        "id": 252513513,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1631127305
    },
    {
        "content": "<p>Exactly</p>",
        "id": 252513587,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1631127338
    }
]