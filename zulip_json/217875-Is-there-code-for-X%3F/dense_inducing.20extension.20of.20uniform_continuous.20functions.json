[
    {
        "content": "<p>Do we have something along the lines of the following result</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.uniform_space.cauchy</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology.uniform_space.separation</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology.dense_embedding</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span><span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">uniform_space</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">uniform_space</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">uniform_space</span> <span class=\"n\">γ</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">complete_space</span> <span class=\"n\">γ</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">separated_space</span> <span class=\"n\">γ</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">continuous_extend_of_uniform_continuous</span> <span class=\"o\">{</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">de</span> <span class=\"o\">:</span> <span class=\"n\">dense_inducing</span> <span class=\"n\">e</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">uniform_continuous</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">uniform_continuous</span> <span class=\"o\">(</span><span class=\"n\">de.extend</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I am not sure these are the optimal hypotheses though. I would also be happy with a result that only proves that  extension is continuous.</p>",
        "id": 305504674,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1666430412
    },
    {
        "content": "<p>In your case I think you can only get continuity (this is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/dense_inducing.continuous_extend\">docs#dense_inducing.continuous_extend</a>). If you want uniform continuity, you need <code>e</code> to be a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_inducing\">docs#uniform_inducing</a>, in which case you can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_continuous_uniformly_extend\">docs#uniform_continuous_uniformly_extend</a></p>",
        "id": 305505300,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1666430733
    },
    {
        "content": "<p>By the way, having both <code>topological_space α</code> and <code>uniform_space α</code> in your context is probably not doing what you want</p>",
        "id": 305505488,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1666430841
    },
    {
        "content": "<p>Wait actually you can’t even apply <a href=\"https://leanprover-community.github.io/mathlib_docs/find/dense_inducing_continuous_extend\">docs#dense_inducing_continuous_extend</a> in your context, because if you want to show that <code>f</code> has all the limits you want using completeness you already need <code>e</code> to be a uniform inducing (this is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniformly_extend_exists\">docs#uniformly_extend_exists</a>), so you may as well use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_continuous_uniformly_extend\">docs#uniform_continuous_uniformly_extend</a> directly</p>",
        "id": 305506559,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1666431382
    },
    {
        "content": "<p>I see. What if I have <code>metric_space</code> instead? Can I get a stronger statement that is using only <code>dense_inducing</code>?</p>",
        "id": 305508345,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1666432153
    },
    {
        "content": "<p>I found a result that is more or less what I want, it is Theorem 6.21 in <a href=\"https://www.researchgate.net/publication/305196408_INTRODUCTION_TO_UNIFORM_SPACES\">https://www.researchgate.net/publication/305196408_INTRODUCTION_TO_UNIFORM_SPACES</a></p>",
        "id": 305508735,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1666432328
    },
    {
        "content": "<p>Well the subtlety is that for a dense subset of a uniform space, <code>coe</code> is not merely a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/dense_inducing\">docs#dense_inducing</a>, it is a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_inducing\">docs#uniform_inducing</a> with dense range</p>",
        "id": 305510624,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1666433092
    },
    {
        "content": "<p>Basically, your hypotheses correspond to \"let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> be a dense subset of a uniform space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span>, with a uniform structure on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> which corresponds to the <strong>topology</strong> induced from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span>\", whereas the right hypotheses are stronger, because you don't simply want the <strong>topology</strong> on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> to be the induced topology, you want the <strong>uniform structure</strong> on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> to be the induced uniform structure</p>",
        "id": 305511360,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1666433408
    },
    {
        "content": "<p>Ok. I understand. Thanks !</p>",
        "id": 305523224,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1666439053
    },
    {
        "content": "<p>I have been trying to prove the fact that the inclusion of a set into its closure is a <code>uniform_inducing</code> with <code>dense_range</code> but I am having a lot of difficulties proving this last fact. Say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>  is a subset of a uniform space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span>, I can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_embedding_set_inclusion\">docs#uniform_embedding_set_inclusion</a> to prove that the inclusion <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>⊆</mo><mover accent=\"true\"><mi>A</mi><mo>ˉ</mo></mover></mrow><annotation encoding=\"application/x-tex\">A \\subseteq \\bar{A}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.136em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">⊆</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8201em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8201em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">A</span></span><span style=\"top:-3.2523em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1111em;\"><span class=\"mord\">ˉ</span></span></span></span></span></span></span></span></span></span>  is <code>uniform_inducing</code> but I cannot find a way to prove that corresponding inclusion map is <code>dense_range</code>, say something like that</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.constructions</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">dense_range</span> <span class=\"o\">(</span><span class=\"n\">set.inclusion</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">subset_closure</span> <span class=\"n\">α</span> <span class=\"n\">_</span> <span class=\"n\">A</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Now I have a strong feeling that I am not stating things properly (and indeed the statement of this result looks pretty awful) and that's probably why I cannot get anywhere, but I cannot find the right way to state things.</p>",
        "id": 305707815,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1666558438
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/dense_embedding.subtype\">docs#dense_embedding.subtype</a> should help you, but arguably that's indeed not a very practical way of stating things. Could you give more context to un- <a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a> ?</p>",
        "id": 305710225,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1666559893
    },
    {
        "content": "<p>Here is my setting. I have a subset <code>R</code> of <code>ℂ</code> and an uniform continuous map <code>f : R → ℂ</code> and I want to construct the extension of <code>f</code> to the closure of <code>R</code>, so I am trying something like that</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.algebra.uniform_field</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.complex.basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">uniform_continuous</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">closure</span> <span class=\"n\">R</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">uniform_embedding_set_inclusion</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">subset_closure</span> <span class=\"n\">ℂ</span> <span class=\"n\">_</span> <span class=\"n\">R</span><span class=\"o\">),</span>\n  <span class=\"n\">refine</span> <span class=\"o\">(</span><span class=\"n\">this.dense_inducing</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">extend</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>  <span class=\"c1\">-- need to prove: dense_range (set.inclusion subset_closure)</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 305760907,
        "sender_full_name": "Xavier Roblot",
        "timestamp": 1666596218
    }
]