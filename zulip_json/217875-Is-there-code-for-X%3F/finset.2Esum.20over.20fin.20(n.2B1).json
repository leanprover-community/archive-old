[
    {
        "content": "<p>Do we have something like the following lemma?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">sum_eq</span> <span class=\"o\">{</span><span class=\"n\">n</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">∑</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)),</span> <span class=\"n\">ι</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">ι</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ι</span> <span class=\"n\">i.succ</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 236078761,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1619369983
    },
    {
        "content": "<p>Scratch that, library search took a little while but found an answer :)</p>",
        "id": 236078882,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1619370036
    },
    {
        "content": "<p>(it's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fin.sum_univ_succ\">docs#fin.sum_univ_succ</a> in case anyone is curious)</p>",
        "id": 236078938,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1619370099
    },
    {
        "content": "<p>(<code>library_search</code> runtime is linear in the number of declarations it has to look at, so running it in a separate file with smaller imports is often helpful. Of course, that risks leaving out the essential import.)</p>",
        "id": 236107243,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1619398954
    }
]