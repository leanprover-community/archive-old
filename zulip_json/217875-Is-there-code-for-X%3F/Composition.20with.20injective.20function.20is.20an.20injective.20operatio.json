[
    {
        "content": "<p>Is there a little collection of lemmas about injective functions somewhere?  Where can this go?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">function.injective.comp_left</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f₁</span> <span class=\"n\">f₂</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">function.injective</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hgf</span> <span class=\"o\">:</span> <span class=\"n\">g</span> <span class=\"bp\">∘</span> <span class=\"n\">f₁</span> <span class=\"bp\">=</span> <span class=\"n\">g</span> <span class=\"bp\">∘</span> <span class=\"n\">f₂</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f₁</span> <span class=\"bp\">=</span> <span class=\"n\">f₂</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"n\">funext</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">hg</span> <span class=\"n\">_</span><span class=\"o\">),</span>\n  <span class=\"n\">exact</span> <span class=\"n\">congr_fun</span> <span class=\"n\">hgf</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 248992598,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1628608437
    },
    {
        "content": "<p>Maybe have <code>congr</code> somewhere in the name?</p>",
        "id": 248992781,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1628608528
    },
    {
        "content": "<p><del>Isn't there already something like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.injective.of_comp\">docs#function.injective.of_comp</a>?</del> Sorry, mis-parsed the statement.</p>",
        "id": 248992821,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1628608555
    },
    {
        "content": "<p>But the logic.function.basic file seems appropriate</p>",
        "id": 248992965,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1628608620
    },
    {
        "content": "<p>Another version of that statement would be:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">function.injective.comp_left</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">function.injective</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">function.injective</span> <span class=\"o\">((</span><span class=\"bp\">∘</span><span class=\"o\">)</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">γ</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">f₁</span> <span class=\"n\">f₂</span> <span class=\"n\">hgf</span><span class=\"o\">,</span> <span class=\"n\">funext</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">hg</span> <span class=\"o\">(</span><span class=\"n\">congr_fun</span> <span class=\"n\">hgf</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 248994104,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1628609215
    }
]