[
    {
        "content": "<p>Ok I think I figured it out! seems like <code>convert Eval.intLt ?_ ?_ ?_ ?_ ?_ ?_</code> is one way to go about it, I just had to use <code>refine rfl</code> instead of <code>rfl</code> or <code>exact rfl</code> as the post described, full code here:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">test</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Eval</span> <span class=\"o\">(</span><span class=\"n\">Expr.intLt</span> <span class=\"o\">(</span><span class=\"n\">Expr.int</span> <span class=\"o\">(</span><span class=\"n\">Int.negSucc</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">Expr.int</span> <span class=\"mi\">0</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">Value.bool</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"c1\">-- convert Eval.intLt _ _ _ _ _ _</span>\n  <span class=\"n\">convert</span> <span class=\"n\">Eval.intLt</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span> <span class=\"bp\">?</span><span class=\"n\">_</span>\n  <span class=\"bp\">.</span> <span class=\"c1\">-- Expr.int (Int.negSucc n) = ?_1</span>\n    <span class=\"n\">refine</span> <span class=\"n\">rfl</span>\n  <span class=\"bp\">.</span> <span class=\"c1\">-- Expr.int 0 = ?_2</span>\n    <span class=\"n\">refine</span> <span class=\"n\">rfl</span>\n  <span class=\"n\">pick_goal</span> <span class=\"mi\">4</span>\n  <span class=\"bp\">.</span> <span class=\"c1\">-- Eval (Expr.int (Int.negSucc n)) (Value.int ?_3)</span>\n    <span class=\"n\">refine</span> <span class=\"o\">(</span><span class=\"n\">Eval.int</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n  <span class=\"n\">pick_goal</span> <span class=\"mi\">3</span>\n  <span class=\"bp\">.</span> <span class=\"c1\">-- Eval (Expr.int 0) (Value.int ?_4)</span>\n    <span class=\"n\">refine</span> <span class=\"o\">(</span><span class=\"n\">Eval.int</span> <span class=\"n\">_</span><span class=\"o\">)</span>\n  <span class=\"bp\">.</span> <span class=\"c1\">-- `true = decide (Int.negSucc n &lt; 0)` as desired</span>\n    <span class=\"n\">simp</span>\n    <span class=\"n\">conv</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">whnf</span>\n      <span class=\"n\">norm_num</span>\n      <span class=\"n\">arg</span> <span class=\"mi\">1</span>\n      <span class=\"n\">whnf</span>\n      <span class=\"n\">simp</span>\n    <span class=\"n\">constructor</span>\n</code></pre></div>\n<p>Thanks for the pointers all!</p>",
        "id": 318139465,
        "sender_full_name": "Winston",
        "timestamp": 1672164927
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"410502\">Winston</span> has marked this topic as resolved.</p>",
        "id": 318139664,
        "sender_full_name": "Notification Bot",
        "timestamp": 1672165010
    }
]