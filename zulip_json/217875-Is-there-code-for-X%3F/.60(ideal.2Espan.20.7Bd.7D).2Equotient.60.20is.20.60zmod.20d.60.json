[
    {
        "content": "<p>Is there an equiv showing that <code>zmod a</code> is indeed the quotient of <code>ℤ</code> modulo the ideal generated by <code>a</code>? I have tried <code>library_search</code> and <code>grep</code>, but no luck.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">zmod</span> <span class=\"n\">a</span> <span class=\"bp\">≃+*</span> <span class=\"n\">ideal.quotient</span> <span class=\"o\">(</span><span class=\"n\">ideal.span</span> <span class=\"o\">({</span><span class=\"n\">a</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℤ</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">library_search</span>\n\n<span class=\"c1\">-- Bonus points for showing:</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">zmod</span> <span class=\"n\">a.nat_abs</span> <span class=\"bp\">≃+*</span> <span class=\"n\">ideal.quotient</span> <span class=\"o\">(</span><span class=\"n\">ideal.span</span> <span class=\"o\">({</span><span class=\"n\">a</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℤ</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">library_search</span>\n</code></pre></div>",
        "id": 241950260,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1623170939
    },
    {
        "content": "<p>I think this is true for <code>a=0</code> as well with how <code>zmod</code> is defined.</p>",
        "id": 241951014,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1623171259
    },
    {
        "content": "<p>And I think we at least have the fact that <code>a</code> generates the kernel of the canonical map from <code>Z</code> to <code>zmod a</code>.</p>",
        "id": 241951096,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1623171294
    },
    {
        "content": "<p>Created a PR: <a href=\"https://github.com/leanprover-community/mathlib/issues/7976\">#7976</a></p>",
        "id": 243014280,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1623935398
    },
    {
        "content": "<p>You're on a streak!</p>",
        "id": 243017996,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1623936996
    }
]