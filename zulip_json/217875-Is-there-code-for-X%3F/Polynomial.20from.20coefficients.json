[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/9011\">#9011</a> adds</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- The associated polynomial `(v 0) + (v 1) * X + ... + (v (n-1)) * X ^ (n-1)` to `matrix.circulant v`.-/</span>\n<span class=\"kd\">noncomputable</span>\n<span class=\"kd\">def</span> <span class=\"n\">matrix.circulant.poly</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">polynomial.monomial</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Obviously it doesn't belong in the <code>matrix</code> namespace as <a href=\"https://github.com/leanprover-community/mathlib/issues/9011\">#9011</a> has it, but do we have this \"make a polynomial from its coefficients\" function somewhere already?</p>",
        "id": 252913239,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631370661
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"408694\">@Alex Zhang</span></p>",
        "id": 252913283,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631370718
    },
    {
        "content": "<p>Oops, I missed this.</p>",
        "id": 252913458,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631370876
    },
    {
        "content": "<p>Anyway, I think that this sum is the best we've got, when it comes to constructing a polynomial from its coefficients</p>",
        "id": 252913482,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631370908
    },
    {
        "content": "<p>Presumably there's a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finsupp_of_finite\">docs#finsupp_of_finite</a> somewhere, which can be composed with <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finsupp.map_domain\">docs#finsupp.map_domain</a></p>",
        "id": 252913712,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631371138
    },
    {
        "content": "<p>Which would make the coefficients defeq</p>",
        "id": 252913719,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631371151
    },
    {
        "content": "<p>Ah, it's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finsupp.equiv_fun_on_fintype\">docs#finsupp.equiv_fun_on_fintype</a></p>",
        "id": 252913815,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631371251
    },
    {
        "content": "<p>Aah, I agree that this is a better idea.</p>",
        "id": 252914718,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631372278
    },
    {
        "content": "<p>Presumably we should have <code>polynomial.mk_of_fin</code> or something like that?</p>",
        "id": 252914781,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631372322
    },
    {
        "content": "<p>Yeah, or <code>mk_of_fin_coeffs</code></p>",
        "id": 252915503,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631373085
    }
]