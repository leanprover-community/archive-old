[
    {
        "content": "<p>Do we have a tactic which proves that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>≥</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">x^2+y^2\\geq0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> if <code>x y : real</code>? Is this what <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> was asking about? I'm making the complex number game and for norm stuff you need to be able to kill these goals quickly if you want to impress mathematicians.</p>\n<p>Can this be done with some sort of tactic combinator? I don't need anything fancy, but <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn><msup><mi>x</mi><mn>2</mn></msup><mo>≥</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">3x^2\\geq0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.950078em;vertical-align:-0.13597em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> would be another example I'd be optimistic about -- \"obvious to mathematicians\" is what I want to emulate.</p>\n<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  : the spec is that it has to solve both 3x^2+4y^2&gt;=0, and 3x^2+4y^2=0 iff x=y=0.</p>",
        "id": 198303707,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590055010
    },
    {
        "content": "<p>so a tactic that witnesses the fact that the theory of real closed fields is complete</p>",
        "id": 198303826,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590055104
    },
    {
        "content": "<p>so basically <a href=\"https://en.wikipedia.org/wiki/Tarski%E2%80%93Seidenberg_theorem\">Tarski–Seidenberg theorem\n</a></p>",
        "id": 198303864,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590055156
    },
    {
        "content": "<p>Given my current situation I would be just as happy with something which added <code>hx : x^2&gt;=0</code>and <code>x * x &gt;= 0</code> for everything and then just tried linarith</p>",
        "id": 198303966,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590055226
    },
    {
        "content": "<p>coq has that with nre right?</p>",
        "id": 198303978,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590055241
    },
    {
        "content": "<p>Isn't this <code>nlinarith</code>. I think it's basically linarith with the assumption that squares are nonnegative</p>",
        "id": 198305257,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1590056188
    },
    {
        "content": "<p>I can't find it in <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html\">https://leanprover-community.github.io/mathlib_docs/tactics.html</a> ?</p>",
        "id": 198305394,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590056308
    },
    {
        "content": "<p>or <a href=\"https://github.com/leanprover-community/mathlib/search?q=nlinarith&amp;unscoped_q=nlinarith\">https://github.com/leanprover-community/mathlib/search?q=nlinarith&amp;unscoped_q=nlinarith</a></p>",
        "id": 198305405,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590056325
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/2637\">#2637</a></p>",
        "id": 198305433,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1590056354
    },
    {
        "content": "<p>great</p>",
        "id": 198305497,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590056403
    },
    {
        "content": "<p>I <a href=\"https://github.com/leanprover-community/mathlib/pull/2637#issuecomment-632016020\">added some tests</a></p>",
        "id": 198307474,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590057972
    },
    {
        "content": "<p>I'm going live at 5pm so if you could have the tactic ready for then, that would be great <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 198307498,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590057995
    },
    {
        "content": "<p>Fortunately, Lean's inability to close these goals is only exposed in about level 4, which is a fair way in.</p>",
        "id": 198307542,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590058041
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110064\">Kenny Lau</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/x.5E2.2By.5E2.3E.3D0/near/198303826\">said</a>:</p>\n<blockquote>\n<p>so a tactic that witnesses the fact that the theory of real closed fields is complete</p>\n<p>so basically <a href=\"https://en.wikipedia.org/wiki/Tarski%E2%80%93Seidenberg_theorem\">Tarski–Seidenberg theorem\n</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> Let me ask you about this here, since people mention it a lot.  If I understand correctly, (an extension of) the Tarski-Seidenberg theorem is a <a href=\"https://en.wikipedia.org/wiki/Cylindrical_algebraic_decomposition\">doubly-exponential algorithm</a>, not implemented in Lean, for determining the proof/disproof of any statement over the reals, like </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">e</span><span class=\"bp\">^</span><span class=\"mi\">3</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n  <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">-</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">h</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">((</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">-</span> <span class=\"mi\">7</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"mi\">17</span><span class=\"o\">))</span>\n</code></pre></div>\n\n\n<p>But wouldn't the idealized form of <code>nlinarith</code> be something much weaker, determining only the proof/disproof of statements with a single quantifier?  Like</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">e</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">e</span><span class=\"bp\">^</span><span class=\"mi\">3</span> <span class=\"bp\">-</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n  <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">-</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">h</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">((</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">g</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">d</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">-</span> <span class=\"mi\">7</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"mi\">17</span><span class=\"o\">))</span>\n</code></pre></div>\n\n\n<p>If I understand correctly, there is a <a href=\"https://en.wikipedia.org/wiki/Existential_theory_of_the_reals\">better algorithm</a> for such problems.</p>",
        "id": 198340738,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1590077659
    }
]