[
    {
        "content": "<p>Is there a constructor for <code>distrib_lattice</code> using this distributive law:<br>\n<code>x ⊓ (y ⊔ z) ≤ (x ⊓ y) ⊔ (x ⊓ z) </code> instead of the one given there - it's mentioned that they're equivalent but only one is provided seemingly?</p>",
        "id": 205727557,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1596374861
    },
    {
        "content": "<p>Is it the same as <code>order_dual.distrib_lattice</code>?</p>",
        "id": 205761565,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596433455
    },
    {
        "content": "<p>I mean, there is no constructor using this law now but probably you can write something like <code>letI : distrib_lattice (order_dual α) := { .. order_dual.lattice, your_lemma }; exact { sup := ...; (other operations); .. show distrib_lattice (order_dual $ order_dual α), by apply_instance }</code>.</p>",
        "id": 205761624,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596433580
    },
    {
        "content": "<p>Though possibly a better approach is to prove some <code>iff</code> or <code>tfae</code> for a <code>lattice</code>.</p>",
        "id": 205761629,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596433601
    }
]