[
    {
        "content": "<p>I don't care what the sum is over (I don't know whether <code>.to_finset</code> is horrible to prove things about), but a student at Xena is working on Newton's identities and this comes up. Do we have anything like it? All we need is that the coefficient is an R-linear combination of the products but I guess the natural thing to do is to prove that it's equal to the sum of them.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.polynomial.coeff</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">polynomial</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n\n<span class=\"c1\">-- Want: coefficient of X^j in ∏_{i ∈ S} (X + a_i) is the obvious thing</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hj</span> <span class=\"o\">:</span> <span class=\"n\">j</span> <span class=\"bp\">≤</span> <span class=\"n\">fintype.card</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∏</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">i</span><span class=\"o\">)))</span><span class=\"bp\">.</span><span class=\"n\">coeff</span> <span class=\"n\">j</span> <span class=\"bp\">=</span>\n  <span class=\"bp\">∑</span> <span class=\"n\">s</span> <span class=\"k\">in</span> <span class=\"o\">({</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">S</span> <span class=\"bp\">|</span> <span class=\"n\">s.card</span> <span class=\"bp\">=</span> <span class=\"n\">fintype.card</span> <span class=\"n\">S</span> <span class=\"bp\">-</span> <span class=\"n\">j</span><span class=\"o\">}</span><span class=\"bp\">.</span><span class=\"n\">to_finset</span><span class=\"o\">),</span> <span class=\"bp\">∏</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">k</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 322388998,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674166126
    },
    {
        "content": "<p>there must be something like this, given that we have a good amount of Galois theory.</p>",
        "id": 322389343,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1674166275
    },
    {
        "content": "<p>but my search comes up short, unfortunately.</p>",
        "id": 322389828,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1674166476
    },
    {
        "content": "<p>Is this it? <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset.prod_X_sub_C_coeff\">docs#multiset.prod_X_sub_C_coeff</a></p>",
        "id": 322390250,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1674166647
    },
    {
        "content": "<p>Thanks! Indeed the <code>finset</code> version is too weak. I didn't check that file, I must be honest ;-)</p>",
        "id": 322391201,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1674167018
    },
    {
        "content": "<p>It took me a little while to understand what that theorem was even saying...</p>",
        "id": 322391323,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1674167058
    },
    {
        "content": "<p>Why doesn't it render as <code>s.map ...</code> on the webpage?</p>",
        "id": 322391390,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1674167088
    },
    {
        "content": "<p>I suspect the webpage printing uses the stricter version of dot notation that needs the argument in the first position</p>",
        "id": 322394481,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1674168268
    }
]