[
    {
        "content": "<p>Is this true? (There's a version for <code>lintegral</code> but how to prove this for Bochner?) (Perhaps <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>  or <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> know immediately?) Came up in discussion with <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">measure_theory.integral.bochner</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">measure_theory</span> <span class=\"n\">topological_space</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">measurable_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">μ</span> <span class=\"o\">:</span> <span class=\"n\">measure</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">measurable_space</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">borel_space</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">complete_space</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">second_countable_topology</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">integral_sum_measure</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">μ</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">measure</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">integrable</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">measure.sum</span> <span class=\"n\">μ</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n<span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">∂</span><span class=\"n\">measure.sum</span> <span class=\"n\">μ</span> <span class=\"bp\">=</span> <span class=\"bp\">∑'</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">),</span> <span class=\"bp\">∫</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">∂</span><span class=\"n\">μ</span> <span class=\"n\">i</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"n\">integrable.induction</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">hf</span><span class=\"o\">,</span>\n\n  <span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"gr\">sorry</span><span class=\"o\">},</span>\n\n  <span class=\"c1\">-- FYI This is how `lintegral_sum_measure` is proved:</span>\n\n  <span class=\"c1\">-- simp only [integral, supr_subtype', simple_func.integral_sum, ennreal.tsum_eq_supr_sum],</span>\n  <span class=\"c1\">-- rw [supr_comm],</span>\n  <span class=\"c1\">-- congr, funext s,</span>\n  <span class=\"c1\">-- induction s using finset.induction_on with i s hi hs, { apply bot_unique, simp },</span>\n  <span class=\"c1\">-- simp only [finset.sum_insert hi, ← hs],</span>\n  <span class=\"c1\">-- refine (ennreal.supr_add_supr _).symm,</span>\n  <span class=\"c1\">-- intros φ ψ,</span>\n  <span class=\"c1\">-- exact ⟨⟨φ ⊔ ψ, λ x, sup_le (φ.2 x) (ψ.2 x)⟩,</span>\n  <span class=\"c1\">--   add_le_add (simple_func.lintegral_mono le_sup_left le_rfl)</span>\n  <span class=\"c1\">--     (finset.sum_le_sum $ λ j hj, simple_func.lintegral_mono le_sup_right le_rfl)⟩</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 271690395,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1644674598
    },
    {
        "content": "<p>I'll try to prove it.</p>",
        "id": 271697604,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1644684891
    },
    {
        "content": "<p>I have it (and several supporting lemmas). I'll make a PR later tonight.</p>",
        "id": 271710508,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1644701194
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/12005\">#12005</a></p>",
        "id": 271719420,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1644714596
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> !</p>",
        "id": 271720130,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1644715717
    },
    {
        "content": "<p>I wonder if there is a version that implies <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.tendsto_set_integral_of_monotone\">docs#measure_theory.tendsto_set_integral_of_monotone</a></p>",
        "id": 271720549,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1644716383
    }
]