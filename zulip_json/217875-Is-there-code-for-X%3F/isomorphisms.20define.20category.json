[
    {
        "content": "<p>I'm trying to prove this statement: </p>\n<blockquote>\n<p>Let C be a category. Show that the collection of isomorphisms in C defines a <br>\nsubcategory, the maximal groupoid inside C.</p>\n</blockquote>\n<p>I know that the definition of groupoid exists in mathlib:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">class</span> <span class=\"n\">groupoid</span> <span class=\"o\">(</span><span class=\"n\">obj</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"kn\">extends</span> <span class=\"n\">category</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"n\">obj</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"o\">(</span><span class=\"n\">v</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">inv</span>       <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">obj</span><span class=\"o\">},</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"err\">⟶</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"err\">⟶</span> <span class=\"n\">X</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">inv_comp&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">obj</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"err\">⟶</span> <span class=\"n\">Y</span><span class=\"o\">),</span> <span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"n\">f</span> <span class=\"bp\">=</span> <span class=\"n\">id</span> <span class=\"n\">Y</span> <span class=\"bp\">.</span> <span class=\"n\">obviously</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">comp_inv&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">obj</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"err\">⟶</span> <span class=\"n\">Y</span><span class=\"o\">),</span> <span class=\"n\">comp</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">inv</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">id</span> <span class=\"n\">X</span> <span class=\"bp\">.</span> <span class=\"n\">obviously</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>but it seems like it builds on the definition of category. I'm interested in seeing if there's a way to grab all of the isomorphisms and objects of a category <code>C</code> without defining the resultant structure as a groupoid, and instead proving that it forms a category directly in order to prove the above statement? Maybe by showing that it's a <code>category_struct</code> first, and then showing that it's a <code>category</code> or something like that. Or is the definition of groupoid essentially what I'm looking for?</p>",
        "id": 202261052,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1593387605
    },
    {
        "content": "<p><code>category_theory/core</code></p>",
        "id": 202262051,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593389111
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 202262794,
        "sender_full_name": "Alena Gusakov",
        "timestamp": 1593390476
    }
]