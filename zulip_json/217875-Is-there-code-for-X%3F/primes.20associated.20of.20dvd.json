[
    {
        "content": "<p>I'm searching for a lemma with like this :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">associated_of_dvd</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_monoid_with_zero</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">p_prime</span><span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q_prime</span><span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">dvd</span><span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">q</span><span class=\"o\">):</span> <span class=\"n\">associated</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>I did not find it in mathlib, and I was wondering what was the best way to prove it<br>\n(maybe using <code>associated_of_dvd_dvd</code> and the definition of primes ?</p>",
        "id": 225699772,
        "sender_full_name": "Julien Marquet",
        "timestamp": 1612881992
    },
    {
        "content": "<p><code>associated_of_dvd_dvd</code> needs something stronger than a comm_monoid_with_zero, it needs some cancellation property. I have no immediate feeling for whether what you're asking is true in the generality in which it can be stated :-)</p>",
        "id": 225704446,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612883778
    },
    {
        "content": "<p>I have these vague nightmare memories from undergraduate times about p dividing q and q dividing p but p and q not being associated because the cofactors weren't units...</p>",
        "id": 225704842,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612883958
    },
    {
        "content": "<p>Let X be the free comm monoid with 0 generated by four variables p q a b, subject to the relations p * a = q and q * b = p. Is this a counterexample?</p>",
        "id": 225705761,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612884329
    },
    {
        "content": "<p>My memory from UG is that one can even do this with commutative rings. Consider <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>p</mi><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">(</mo><mi>p</mi><mi>a</mi><mi>b</mi><mo>−</mo><mi>p</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\R[a,b,p]/(pab-p)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">]</span><span class=\"mord\">/</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mclose\">)</span></span></span></span>. This is not an integral domain so nobody in their right mind would be trying to factor stuff, but it might be the case that p and pa are both prime. I might be wrong though, I'm just talking from a vague memory.</p>",
        "id": 225706455,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612884569
    },
    {
        "content": "<p>One thing is for sure though -- Lean keeps you honest :-)</p>",
        "id": 225706716,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612884676
    },
    {
        "content": "<p>I just stated the lemma in the largest class of structure that could hold the statement <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> <br>\nActually I only need it in a principal ideal domain</p>",
        "id": 225706815,
        "sender_full_name": "Julien Marquet",
        "timestamp": 1612884716
    },
    {
        "content": "<p>lol :-) It's true for <code>comm_cancel_monoid_with_zero</code>, which is \"integral domain but without the addition\".</p>",
        "id": 225707683,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612885027
    },
    {
        "content": "<p>You should prove it and make a PR! Do you have a github userid?</p>",
        "id": 225707736,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612885047
    },
    {
        "content": "<p>And you should construct a counterexample without the hypothesis of cancellation and add to the evidence that we should have a dictionary of counterexamples in mathlib (this came up in the ordered semiring fiasco).</p>",
        "id": 225707943,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612885117
    },
    {
        "content": "<p>because my vague undergrad memory won't be around forever.</p>",
        "id": 225707971,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612885133
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/primes.20associated.20of.20dvd/near/225707736\">said</a>:</p>\n<blockquote>\n<p>You should prove it and make a PR! Do you have a github userid?</p>\n</blockquote>\n<p>Yes, I got one :)<br>\nI was just wondering what was the most elegant way to prove this, I'll figure out something :)</p>",
        "id": 225708082,
        "sender_full_name": "Julien Marquet",
        "timestamp": 1612885177
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/primes.20associated.20of.20dvd/near/225707943\">said</a>:</p>\n<blockquote>\n<p>And you should construct a counterexample without the hypothesis of cancellation and add to the evidence that we should have a dictionary of counterexamples in mathlib (this came up in the ordered semiring fiasco).</p>\n</blockquote>\n<p>I'm searching for a counterexample :)</p>",
        "id": 225708169,
        "sender_full_name": "Julien Marquet",
        "timestamp": 1612885202
    },
    {
        "content": "<p>Note that there is <code>exists_associated_mem_of_dvd_prod</code> that is a small generalization of what you want.</p>",
        "id": 225709816,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1612885800
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/exists_associated_mem_of_dvd_prod\">docs#exists_associated_mem_of_dvd_prod</a></p>",
        "id": 225713889,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612887344
    },
    {
        "content": "<p>I still think that there's an argument for putting in this special case, it's still a slight kerfuffle to get it from that</p>",
        "id": 225714120,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612887425
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/primes.20associated.20of.20dvd/near/225705761\">said</a>:</p>\n<blockquote>\n<p>Let X be the free comm monoid with 0 generated by four variables p q a b, subject to the relations p * a = q and q * b = p. Is this a counterexample?</p>\n</blockquote>\n<p>I thing have a counterexample but in the non-commutative case -- I might be mistaken, I do not know monoids very well.<br>\nLet's consider finite and \"left-infinite\" words : a; b and p = ...ababab; q = ...bababa<br>\nTo compute u * v : if v is finite, then we just concatenate, else we say that u * v = v.<br>\nWe get then get a monoid where pa = q and qb = p, but p and w aren't associated (the only unit being the empty word).</p>",
        "id": 225717167,
        "sender_full_name": "Julien Marquet",
        "timestamp": 1612888480
    },
    {
        "content": "<p>Who knows -- you'll have to check the axioms. It might well work though!</p>",
        "id": 225718978,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612889180
    },
    {
        "content": "<p>Done.<br>\nI took inspiration from <code>exists_associated_mem_of_dvd_prod</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.associated</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">associated_of_dvd</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_cancel_monoid_with_zero</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"n\">q</span><span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">p_prime</span><span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">q_prime</span><span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">dvd</span><span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">q</span><span class=\"o\">):</span> <span class=\"n\">associated</span> <span class=\"n\">p</span> <span class=\"n\">q</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">dvd</span> <span class=\"k\">with</span> <span class=\"n\">c</span> <span class=\"n\">hc</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"o\">((</span><span class=\"n\">irreducible_of_prime</span> <span class=\"n\">q_prime</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">is_unit_or_is_unit</span> <span class=\"n\">hc</span><span class=\"o\">)</span>\n    <span class=\"bp\">.</span><span class=\"n\">resolve_left</span> <span class=\"n\">p_prime.not_unit</span> <span class=\"k\">with</span> <span class=\"n\">u</span> <span class=\"n\">hu</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"o\">⟨</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hu</span><span class=\"o\">,</span> <span class=\"n\">hc</span><span class=\"o\">]</span> <span class=\"o\">⟩,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I'll PR this to mathlib :)</p>",
        "id": 225845661,
        "sender_full_name": "Julien Marquet",
        "timestamp": 1612968173
    },
    {
        "content": "<p>Nice proof! It's about half the length of the one I knocked up the other day. Yes definitely PR!</p>",
        "id": 225894743,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612985595
    }
]