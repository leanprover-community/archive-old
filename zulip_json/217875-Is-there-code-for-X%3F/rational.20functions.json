[
    {
        "content": "<p>Is there code for rational functions? It appears on the page for missing undergrad math and is not in the PR list or issues. I would like to add code for rational functions--any reactions? For the definition, what would be a good name , e.g., ratfunc? What should this code cover? I suggest: identifying domain and range of rational functions, definition of horizontal, vertical, and slant asymptotes using limits, formula for asymptotes.</p>",
        "id": 234207220,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1618252025
    },
    {
        "content": "<p>Probably you should start with purely algebraic definition (e.g., as the field of fractions of <code>polynomial R</code>).</p>",
        "id": 234208598,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1618252532
    },
    {
        "content": "<p>Once this is merged, you can prove something about limits etc.</p>",
        "id": 234208681,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1618252564
    },
    {
        "content": "<p>There is something about localizations in the file <code>ring_theory/localization</code>.  In particular, I think that it defines a localization of an integral domain at the multiplicative submonoid of all the non-zero elements as <code>fraction_map R K</code>.  I hope that this could be a beginning!</p>",
        "id": 234211680,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1618253862
    },
    {
        "content": "<p>OK, for full generality, given a field F, and polynomials over elements of F which form a ring R, we define polynomial_fraction_ring , as \"fraction_ring R\" with Type u_4. And then a rational function would be any element of that. This would be a new definition in ring_theory.localization. Is that roughly what you are suggesting?</p>",
        "id": 234267976,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1618289294
    },
    {
        "content": "<p>I would call it <code>rational_functions F</code>.</p>",
        "id": 234269663,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1618290846
    },
    {
        "content": "<p>And it doesn't have to be defined that way. You can also define it in a hands-on manner. But it will be important that you provide <code>localization (polynomial F) (rational_function F)</code>.</p>",
        "id": 234269710,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1618290893
    },
    {
        "content": "<p>Because once you have done that, you can start treating it as a localization, which unlocks a nice library for you.</p>",
        "id": 234269740,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1618290922
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/rational.20functions/near/234269740\">said</a>:</p>\n<blockquote>\n<p>Because once you have done that, you can start treating it as a localization, which unlocks a nice library for you.</p>\n</blockquote>\n<p>OK makes sense Johan, thanks</p>",
        "id": 234270267,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1618291409
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 234992894,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1618670594
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>  am I heading in the right direction and what is needed for the last line?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.polynomial.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.localization</span>\n<span class=\"kd\">universes</span> <span class=\"n\">u</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span>\n<span class=\"kn\">namespace</span> <span class=\"n\">polynomial</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">}</span>\n<span class=\"kd\">def</span> <span class=\"n\">rational_functions</span> <span class=\"o\">:</span> <span class=\"n\">fraction_ring</span> <span class=\"n\">p</span>\n<span class=\"kd\">end</span> <span class=\"n\">polynomial</span>\n</code></pre></div>",
        "id": 234992978,
        "sender_full_name": "Hunter Monroe",
        "timestamp": 1618670668
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"397140\">@Hunter Monroe</span> <a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a></p>",
        "id": 234993392,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618671103
    },
    {
        "content": "<p>The syntax is <code>def name : type := value</code>, your def is missing the <code>:=</code></p>",
        "id": 234993576,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618671288
    },
    {
        "content": "<p>Does <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fraction_ring\">docs#fraction_ring</a> exist?</p>",
        "id": 234993593,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618671309
    },
    {
        "content": "<p>Yes, but note that it takes a ring as an input, not a polynomial.</p>",
        "id": 234993616,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618671338
    },
    {
        "content": "<p>You probably want something of the following form:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.polynomial.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.localization</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">k</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">rational_function_field_in_one_variable</span> <span class=\"o\">:=</span>\n  <span class=\"n\">fraction_ring</span> <span class=\"o\">(</span><span class=\"n\">polynomial</span> <span class=\"n\">k</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>(and probably a better name than I came up with <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span> )</p>",
        "id": 234993680,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1618671380
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 235015035,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618691283
    }
]