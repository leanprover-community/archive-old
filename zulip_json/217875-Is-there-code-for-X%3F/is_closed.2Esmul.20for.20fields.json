[
    {
        "content": "<p>Given a nonzero element <code>a</code> in a field I want to show that <code>a ‚Ä¢ U</code> is closed provided <code>U</code> is closed and we have all the necessary typeclasses.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"bp\">ùïú</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">normed_field</span> <span class=\"bp\">ùïú</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"bp\">ùïú</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">has_continuous_smul</span> <span class=\"bp\">ùïú</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">test</span> <span class=\"o\">{</span><span class=\"n\">U</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">E</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ùïú</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hU</span> <span class=\"o\">:</span> <span class=\"n\">is_closed</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">‚â†</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">is_closed</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">‚Ä¢</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Using <code>is_closed.smul</code> complains (rightly so) that <code>ùïú</code> is no group and I haven't found the path to turn all nonzero elements into a group. I only found <code>group_with_zero</code>, but I have no clue whether that helps.</p>",
        "id": 275555424,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1647454536
    },
    {
        "content": "<p>Division by a is continuous, that should get you through. (I would have tried myself but you didn't post a mwe ;-) )</p>",
        "id": 275555555,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647454590
    },
    {
        "content": "<p>Use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/units.mk0\">docs#units.mk0</a></p>",
        "id": 275562901,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1647457539
    },
    {
        "content": "<p>Please add it right after <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_open\">docs#is_open</a>.smul‚ÇÄ.</p>",
        "id": 275565982,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1647459233
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/topology/algebra/const_mul_action.html#is_open.smul%E2%82%80\">https://leanprover-community.github.io/mathlib_docs/topology/algebra/const_mul_action.html#is_open.smul%E2%82%80</a></p>",
        "id": 275566052,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1647459264
    },
    {
        "content": "<p>(together with <code>is_closed_map_smul‚ÇÄ</code>)</p>",
        "id": 275566570,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1647459535
    },
    {
        "content": "<p>There is already <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_closed_map_smul_of_ne_zero\">docs#is_closed_map_smul_of_ne_zero</a> so I only have to add one lemma. The naming is a bit inconsistent, though</p>",
        "id": 275573018,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1647462612
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/12747\">#12747</a></p>",
        "id": 275574245,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1647463309
    },
    {
        "content": "<p>Maybe I am missing something, but is the assumption <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo mathvariant=\"normal\">‚â†</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">a \\ne 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"inner\"><span class=\"mord\"><span class=\"mrel\">ÓÄ†</span></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> really necessary?  I can see that the proof goes via a homeomorphism, which rightly requires it, but this statement should not need that assumption, right?</p>",
        "id": 275574894,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1647463658
    },
    {
        "content": "<p>The set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{0\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mclose\">}</span></span></span></span> is not necessarily closed. If it is Hausdorff (or T1), then you are correct:<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/topology/algebra/const_mul_action.html#is_closed_map_smul%E2%82%80\">https://leanprover-community.github.io/mathlib_docs/topology/algebra/const_mul_action.html#is_closed_map_smul%E2%82%80</a></p>",
        "id": 275575569,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1647463992
    },
    {
        "content": "<p>thanks for mentioning it. I put a version for T1 in my PR.</p>",
        "id": 275576252,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1647464333
    },
    {
        "content": "<p>The naming is definitely a mess there</p>",
        "id": 275584490,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1647468968
    }
]