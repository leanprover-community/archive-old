[
    {
        "content": "<p>Is it faster to compute <code>div</code> and <code>mod</code> for integers at the same time? i.e Is there a function <code>div_mod</code> such that <code>let (q, r) := div_mod a b</code> is slightly faster than <code>let q := a / b</code>, <code>let r := a % b</code>, with <code>a</code> and <code>b</code> in <code>int</code>?</p>",
        "id": 206704818,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1597244182
    },
    {
        "content": "<p>There is <code>divmod</code>  for <code>pos_num</code> already.</p>",
        "id": 206707808,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1597245422
    },
    {
        "content": "<p>You are basically reliant on the primitives to provide this; otherwise you can just define <code>def divmod (a b : nat) := (a / b, a % b)</code></p>",
        "id": 206708190,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597245567
    },
    {
        "content": "<p>Wouldn't  <code>def divmod (a b : nat) := let div := a / b in (div, a - b * div)</code>  be faster than using both <code>%</code> and <code>/</code>?</p>",
        "id": 206709667,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1597246246
    },
    {
        "content": "<p>Maybe. I would guess that the lean overhead of calling multiple functions is already more than the GMP bignum implementation overhead</p>",
        "id": 206712564,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1597247476
    }
]