[
    {
        "content": "<p>Is it possible to do this with has_mul (ideally to use the <code>*</code> symbol)? </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[class]</span> <span class=\"kd\">structure</span> <span class=\"n\">my_ring</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">{</span> <span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">has_mul</span> <span class=\"o\">(</span><span class=\"n\">my_ring</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"n\">my_ring.mul</span><span class=\"o\">⟩</span>\n</code></pre></div>\n<p>Is this possible without <code>my_ring</code> extending <code>has_mul</code>...?</p>",
        "id": 311468029,
        "sender_full_name": "Ben",
        "timestamp": 1669062022
    },
    {
        "content": "<p><code>has_mul</code> just means that there is an operation defined on <code>α</code>, so you must somehow defin it. What is the mathematical notion you want to formalize?</p>",
        "id": 311468322,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669062174
    },
    {
        "content": "<p>Also, since <code>my_ring</code> is a class, you should have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">@</span><span class=\"kd\">class</span> <span class=\"n\">my_ring</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"c1\">--no need  for @[class]</span>\n<span class=\"o\">(</span><span class=\"n\">mul</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">{</span> <span class=\"n\">α</span><span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">my_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span>  <span class=\"o\">:</span> <span class=\"n\">has_mul</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"bp\">...</span>\n</code></pre></div>",
        "id": 311468551,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1669062248
    },
    {
        "content": "<p>Ah yes that makes sense. its working <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> . But I get an error if I don't give my instance a name (specifically that has_mul has already been declared) ...?</p>",
        "id": 311469663,
        "sender_full_name": "Ben",
        "timestamp": 1669062755
    },
    {
        "content": "<p>if you don't provide a name in the root namespace, then the automatically generated name would be <code>has_mul</code>, which already exists in the root namespace. <br>\nOne solution is to put your (nameless) instance in the <code>my_ring</code> namespace. The <code>has_mul</code> instance would thus be named <code>my_ring.has_mul</code></p>",
        "id": 311469958,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1669062866
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"457144\">Ben</span> has marked this topic as resolved.</p>",
        "id": 311472355,
        "sender_full_name": "Notification Bot",
        "timestamp": 1669063634
    }
]