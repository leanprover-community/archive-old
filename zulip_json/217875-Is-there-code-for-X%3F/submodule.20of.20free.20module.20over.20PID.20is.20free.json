[
    {
        "content": "<p>Afaik we only know that submodules of finitely-generated free modules are free. But it's true without the finiteness assumption: <a href=\"https://math.stackexchange.com/a/162958\">https://math.stackexchange.com/a/162958</a></p>\n<p>Is the general case already done by chance?</p>",
        "id": 271171823,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644345338
    },
    {
        "content": "<p>I am pretty sure it's not</p>",
        "id": 271176094,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1644347216
    },
    {
        "content": "<p>I wanted to do it but then I got sucked in flt-regular</p>",
        "id": 271176120,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1644347233
    },
    {
        "content": "<p>But I think all the ingredients are there</p>",
        "id": 271176151,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1644347252
    },
    {
        "content": "<p>This is essentially the proof we already have for the finite case, but now with transfinite induction, right?</p>",
        "id": 271193403,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1644355625
    },
    {
        "content": "<p>I guess so</p>",
        "id": 271194118,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644355953
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a> : we'll need two term projective resolutions of abelian groups at some point in LTE: <a href=\"https://math.stackexchange.com/a/1547055\">https://math.stackexchange.com/a/1547055</a></p>",
        "id": 271194241,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1644356021
    },
    {
        "content": "<p>I'd like to give it a shot starting next week. I'll report here!</p>",
        "id": 271406093,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1644485626
    },
    {
        "content": "<p>Related : <span class=\"user-mention\" data-user-id=\"475844\">@Pierre-Alexandre Bazin</span> is working on structure theorem for f.g. modules over a PID</p>",
        "id": 271808253,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644834684
    },
    {
        "content": "<p>So, <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> there is a sorry-free proof in the lean-liquid repository:<br>\n<a href=\"https://github.com/leanprover-community/lean-liquid/blob/master/src/for_mathlib/pid.lean\">https://github.com/leanprover-community/lean-liquid/blob/master/src/for_mathlib/pid.lean</a><br>\nBut it will require lots of cleanup work before it can go into mathlib, which I will start on after the corollary on 2-step projective resolutions is done.<br>\nI'd be glad about some ideas on how to improve the proof :)</p>",
        "id": 273242247,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1645802477
    },
    {
        "content": "<p>Also there are some lemmas regarding other parts of the library which I do not know can be circumvented or could be useful for mathlib in general</p>",
        "id": 273242363,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1645802534
    },
    {
        "content": "<p>It seems to me that particularly the interplay between filtrations / direct limits and supports of linear combinations should be done in greater generality</p>",
        "id": 273242640,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1645802671
    },
    {
        "content": "<p>Nice work, I'll try and take a look soon!</p>",
        "id": 273242748,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645802725
    },
    {
        "content": "<p>thank you!</p>",
        "id": 273242809,
        "sender_full_name": "Fabian Glöckle",
        "timestamp": 1645802750
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"210057\">@Fabian Glöckle</span> if you're in the mood then the proof on pages 10 and 11 of Matsumura that a projective module over a local ring is free also goes via transfinite induction :-)</p>",
        "id": 273250199,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1645806493
    }
]