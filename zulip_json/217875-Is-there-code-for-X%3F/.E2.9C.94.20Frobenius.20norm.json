[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"459656\">@Hans Parshall</span> Yes:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.inner_product_space.pi_L2</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"bp\">ùïú</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">is_R_or_C</span> <span class=\"bp\">ùïú</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">m</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">matrix.inner_product_space</span> <span class=\"o\">:</span> <span class=\"n\">inner_product_space</span> <span class=\"bp\">ùïú</span> <span class=\"o\">(</span><span class=\"n\">matrix</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"bp\">ùïú</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">@</span><span class=\"n\">pi_Lp.inner_product_space</span> <span class=\"bp\">ùïú</span> <span class=\"n\">_</span> <span class=\"n\">m</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">euclidean_space</span> <span class=\"bp\">ùïú</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">euclidean_space.inner_product_space</span><span class=\"o\">)</span>\n\n<span class=\"kn\">local</span> <span class=\"kn\">attribute</span> <span class=\"o\">[</span><span class=\"kd\">instance</span><span class=\"o\">]</span> <span class=\"n\">matrix.inner_product_space</span>\n</code></pre></div>",
        "id": 273164077,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1645745004
    },
    {
        "content": "<p>But can you say why you want this?  Perhaps your use case could be expressed in terms of e.g. endomorphisms rather than matrices?</p>",
        "id": 273164106,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1645745033
    },
    {
        "content": "<p>I'm shooting for a statement that the singular values of a matrix depend continuously on its entries.  I don't know how to phrase this in terms of endomorphisms.</p>",
        "id": 273167828,
        "sender_full_name": "Hans Parshall",
        "timestamp": 1645747449
    },
    {
        "content": "<p>I think you're right (as usual) that there are parts of my plan that I am thinking about in matrix space that could be generalized to endomorphism space; I'll continue to keep thinking in that direction.</p>",
        "id": 273167874,
        "sender_full_name": "Hans Parshall",
        "timestamp": 1645747486
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459656\">Hans Parshall</span> has marked this topic as resolved.</p>",
        "id": 273167892,
        "sender_full_name": "Notification Bot",
        "timestamp": 1645747500
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"459656\">Hans Parshall</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/.E2.9C.94.20Frobenius.20norm/near/273167828\">said</a>:</p>\n<blockquote>\n<p>I'm shooting for a statement that the singular values of a matrix depend continuously on its entries.  I don't know how to phrase this in terms of endomorphisms.</p>\n</blockquote>\n<p>I think this can be phrased exactly the same way if you change \"matrix\" to \"endomorphism\", but feel free to continue the discussion!</p>",
        "id": 273170234,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1645749466
    },
    {
        "content": "<p>I think so, too; will keep trying to work generally :)</p>",
        "id": 273171596,
        "sender_full_name": "Hans Parshall",
        "timestamp": 1645750645
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"459656\">@Hans Parshall</span> Note also that this ought not to depend on the choice of norm; in finite dimension all norms are equivalent.</p>",
        "id": 273173462,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1645752349
    },
    {
        "content": "<p>Yes, so definitely think about which one is easiest for your purposes.</p>",
        "id": 273179321,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1645755594
    },
    {
        "content": "<p>We now have the frobenius norm (but not yet the inner product space above) as <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.frobenius_normed_ring\">docs#matrix.frobenius_normed_ring</a></p>",
        "id": 280909611,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651514208
    }
]