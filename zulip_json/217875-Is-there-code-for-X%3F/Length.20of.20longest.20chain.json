[
    {
        "content": "<p>Is there any results regarding the length of a the longest ascending chain in an order? One that presumably takes values in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">N</mi><mo>∪</mo><mo stretchy=\"false\">{</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N} \\cup \\{\\infty\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∪</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">∞</span><span class=\"mclose\">}</span></span></span></span>.</p>\n<p>I would like to define the Krull dimension of rings and topological spaces, and also height of primes, codimensions of subspaces, etc.</p>",
        "id": 287494433,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1656251539
    },
    {
        "content": "<p>I guess you can work with <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_max_chain\">docs#is_max_chain</a> and just prove every max chain has the same cardinality, etc.?</p>",
        "id": 287499169,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1656257601
    },
    {
        "content": "<p>When the chain is finite, I think we'd like to know it can be arranged into a list in ascending order. Can we use some development from <a href=\"https://leanprover-community.github.io/mathlib_docs/find/composition_series\">docs#composition_series</a> ?</p>",
        "id": 287499429,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1656257945
    },
    {
        "content": "<p>I suspect it's easier to work with <a href=\"https://leanprover-community.github.io/mathlib_docs/find/list.chain\">docs#list.chain</a> <a href=\"http://has_lt.lt\">has_lt.lt</a>, then we can talk about length of the list instead of cardinality. \"maximal length\" just means having max length among all chains. However it seems we don't have a predicate on it saying the chain is maximal (i.e. nothing can be inserted while keeping it a chain). The max length is infinity precisely when there is no list that is a max length chain.</p>",
        "id": 287500583,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1656259499
    },
    {
        "content": "<p>Part of the problem with having API for \"length of longest chain\" is that the output type is far from obvious, particularly regarding infinite chains</p>",
        "id": 287500670,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1656259633
    },
    {
        "content": "<p>A quite natural output type is <code>enat</code>, but if you're working with finite structures, you'll probably want <code>ℕ</code> instead, and if you're working with well-founded orders, you'll want <code>ordinal</code> instead, and there's a case to be made for <code>cardinal</code> too.</p>",
        "id": 287500744,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1656259702
    },
    {
        "content": "<p>I agree with Junyan in that you might be better off working with <code>is_max_chain</code> directly and adding the necessary lemmas that suit your needs</p>",
        "id": 287500780,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1656259758
    },
    {
        "content": "<p>I was planning on considering the sup (in <code>enat</code>) of all the lengths of finite strictly ascending chains. I think this is what <span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span>  is talking about as well?</p>",
        "id": 287501134,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1656260220
    },
    {
        "content": "<p><code>enat</code> didn't come to my mind before Violeta mentioned it, but it seems the right way to go, yes.</p>",
        "id": 287501295,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1656260408
    }
]