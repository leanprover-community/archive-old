[
    {
        "content": "<p>Is there any way to make the following work?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">dec_trivial</span>\n</code></pre></div>",
        "id": 273688700,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646159564
    },
    {
        "content": "<p>I would like to do some (formally verified) linear algebra over the rationals, but I don't want to work too hard...</p>",
        "id": 273688744,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646159591
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 273689142,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1646159777
    },
    {
        "content": "<p>Does <code>by norm_num</code> work?</p>",
        "id": 273689797,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1646160035
    },
    {
        "content": "<p>I guess so, but let me try a more realistic example...</p>",
        "id": 273689839,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646160060
    },
    {
        "content": "<p>Ah nice, </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">!</span><span class=\"o\">[(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">),</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">]</span> <span class=\"bp\">+</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">3</span><span class=\"o\">,</span><span class=\"mi\">5</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span>\n</code></pre></div>\n<p>works just fine!</p>",
        "id": 273689922,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646160103
    },
    {
        "content": "<p><del>But it's not perfect...</del></p>\n<p>I was dumb.... this works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"bp\">!</span><span class=\"o\">[(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">),</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">]</span> <span class=\"bp\">=</span> <span class=\"bp\">!</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span>\n</code></pre></div>",
        "id": 273690107,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646160177
    },
    {
        "content": "<p>yeah, you were using nat-div</p>",
        "id": 273690295,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1646160263
    }
]