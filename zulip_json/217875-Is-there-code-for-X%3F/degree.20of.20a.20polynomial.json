[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> What is the best proof of</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">F</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">degree</span> <span class=\"o\">(</span><span class=\"n\">polynomial.X</span> <span class=\"bp\">^</span> <span class=\"mi\">4</span> <span class=\"bp\">+</span> <span class=\"n\">polynomial.C</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"bp\">â‰ </span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>?<br>\nI think you were implementing a tactic for stuff like this, but I can't find the topic right now...</p>",
        "id": 281553013,
        "sender_full_name": "Michael Stoll",
        "timestamp": 1651946722
    },
    {
        "content": "<p>The tactic is very simple at the moment and is <a href=\"#narrow/stream/239415-metaprogramming-.2F-tactics/topic/sorting.20.60expr.60s.20that.20.22are.22.20.60nat.60s/near/281393258\">here</a>.</p>",
        "id": 281553127,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1651946876
    },
    {
        "content": "<p>For the moment, it works with <code>nat_degree</code> and equalities.  So, it might prove</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">F</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">degree</span> <span class=\"o\">(</span><span class=\"n\">polynomial.X</span> <span class=\"bp\">^</span> <span class=\"mi\">4</span> <span class=\"bp\">+</span> <span class=\"n\">polynomial.C</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span>\n</code></pre></div>",
        "id": 281553189,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1651946917
    },
    {
        "content": "<p>The tactic linked above does not yet \"work out of the box\".  Let me see if I can get the statement that I wrote to work.</p>",
        "id": 281553208,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1651946972
    },
    {
        "content": "<p>If you want to prove your statement, I still think that you might find it easier to prove the stronger</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">F</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">degree</span> <span class=\"o\">(</span><span class=\"n\">polynomial.X</span> <span class=\"bp\">^</span> <span class=\"mi\">4</span> <span class=\"bp\">+</span> <span class=\"n\">polynomial.C</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">4</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 281553268,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1651947029
    },
    {
        "content": "<p>(I know my way around <code>nat_degree</code> better than <code>degree</code> and would use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.nat_degree_add_eq_left_of_nat_degree_lt\">docs#polynomial.nat_degree_add_eq_left_of_nat_degree_lt</a>.)</p>",
        "id": 281553299,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1651947089
    },
    {
        "content": "<p>Ah, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.degree_add_eq_left_of_degree_lt\">docs#polynomial.degree_add_eq_left_of_degree_lt</a> seems to exist.</p>",
        "id": 281553349,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1651947139
    },
    {
        "content": "<p>After that, you are left with <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.degree_X_pow\">docs#polynomial.degree_X_pow</a> (?) and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.degree_C\">docs#polynomial.degree_C</a> (?).  Edit: the links should work.</p>",
        "id": 281553369,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1651947196
    }
]