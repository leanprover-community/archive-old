[
    {
        "content": "<p>Where is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">blah</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">↪</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">≃</span> <span class=\"n\">r</span> <span class=\"bp\">''</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 281668211,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1652094769
    },
    {
        "content": "<p>There is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.image\">docs#equiv.image</a></p>",
        "id": 281670431,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652096403
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.set.image\">docs#equiv.set.image</a></p>",
        "id": 281670726,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652096599
    },
    {
        "content": "<p>I had an attempt to provide a computable version in <a href=\"https://github.com/leanprover-community/mathlib/pull/11347\">#11347</a>, but it's a pain to deal with \"either has a left inverse or has an uninhabited domain\"</p>",
        "id": 281670862,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652096688
    }
]