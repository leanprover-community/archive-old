[
    {
        "content": "<p>I'm looking for a lemma that says that <code>prod.map f g</code> is surjective when <code>f</code> and <code>g</code> are, but I can't find one.</p>",
        "id": 269628494,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1643313270
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.surjective.prod_map\">docs#function.surjective.prod_map</a></p>",
        "id": 269628673,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1643313309
    },
    {
        "content": "<p>Do you know about <a href=\"https://leanprover-community.github.io/mathlib_docs/\">https://leanprover-community.github.io/mathlib_docs/</a> ?</p>",
        "id": 269628718,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1643313341
    },
    {
        "content": "<p>Ah, you found it. I guess I wasn't looking hard enough.</p>",
        "id": 269630000,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1643313869
    },
    {
        "content": "<p>Yeah, I know about the docs. I was searching for <code>prod.map</code> in the <code>function</code> stuff, but I couldn't find anything.</p>",
        "id": 269630175,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1643313951
    },
    {
        "content": "<p>Ah, that's in <code>data.prod</code>. No wonder I couldn't find it.</p>",
        "id": 269630326,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1643314008
    },
    {
        "content": "<p>I know lean has a <code>library_search</code> tactic. Maybe I need to start using that to find stuff.</p>",
        "id": 269630414,
        "sender_full_name": "Bernd Losert",
        "timestamp": 1643314059
    }
]