[
    {
        "content": "<p>I can't find</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">sub_mod</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">â„¤</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"err\">%</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"o\">((</span><span class=\"n\">a</span> <span class=\"err\">%</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"err\">%</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"err\">%</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"bp\">...</span>\n</code></pre></div>",
        "id": 198422021,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1590139841
    },
    {
        "content": "<p>I couldn't find the <code>add</code> version either (for <code>nat</code>)</p>",
        "id": 198422835,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590140454
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/int.2Esub_mod/near/198422835\">said</a>:</p>\n<blockquote>\n<p>I couldn't find the <code>add</code> version either (for <code>nat</code>)</p>\n</blockquote>\n<p><del>I thought I PR-ed that recently?</del> I PR-ed some other lemmas and golfed the proof of that one. The lemma was added in <a href=\"https://github.com/leanprover-community/mathlib/issues/2522\">#2522</a></p>",
        "id": 198422868,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1590140476
    },
    {
        "content": "<p>or technically I did find it, but only as the first line of the proof of a lemma</p>",
        "id": 198422869,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590140479
    },
    {
        "content": "<p>Ah, well this was about a week ago</p>",
        "id": 198422875,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590140488
    },
    {
        "content": "<p>and I was probably using an even older mathlib</p>",
        "id": 198422961,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590140532
    },
    {
        "content": "<p>But I don't think the lemma that Scott posted is in mathlib at all, at least when I went through mathlib to port nat and int lemmas to eachother I did see anything like it.</p>",
        "id": 198423021,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1590140582
    },
    {
        "content": "<p>Thanks, Reid and Shing. I've refactorede what I'm working on to use less <code>%</code> and more <code>zmod</code> in the meantime, so I'm not going to do these lemmas today.</p>",
        "id": 198428244,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1590144761
    },
    {
        "content": "<p>It does look like there's a fair bit missing here. I can't find <code>nat.pow_mod</code> or <code>int.pow_mod</code>, either.</p>",
        "id": 198428253,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1590144784
    },
    {
        "content": "<p>Scott, if you are doing modular arithmetic those days then don't hesitate to adopt my attempt at <a href=\"#narrow/stream/113488-general/topic/even.20or.20odd/near/195632609\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/even.20or.20odd/near/195632609</a></p>",
        "id": 198428621,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590145136
    },
    {
        "content": "<p>Fortunately today's project doesn't require any case splitting like this. You should PR that tactic, or at least make an issue describing what it should do!</p>",
        "id": 198428958,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1590145403
    }
]