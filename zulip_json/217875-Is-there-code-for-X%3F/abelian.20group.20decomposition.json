[
    {
        "content": "<p>Is there a \"fundamental theorem of finitely generated abelian groups\" in mathlib?</p>",
        "id": 242313050,
        "sender_full_name": "Winston Yin",
        "timestamp": 1623398859
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"416472\">@Winston Yin</span> Not the full theorem. But several parts are there. For example: submodule of free module over a PID is free.</p>",
        "id": 242314383,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1623399748
    },
    {
        "content": "<p>The classification of torsion modules is missing.</p>",
        "id": 242314389,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1623399756
    },
    {
        "content": "<p>What exactly is the statement that you need?</p>",
        "id": 242314416,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1623399784
    },
    {
        "content": "<p>I see. I don't need the theorem itself. I'm just trying to find something to model the definition of a representation decomposition after...</p>",
        "id": 242314447,
        "sender_full_name": "Winston Yin",
        "timestamp": 1623399811
    },
    {
        "content": "<p>I'm stuck at a problem where my definition of \"isomorphic to a direct sum of modules\" is not properly finding the type class instance for the direct sum module</p>",
        "id": 242314584,
        "sender_full_name": "Winston Yin",
        "timestamp": 1623399903
    },
    {
        "content": "<p>I'm trying to write a mwe to debug the problem</p>",
        "id": 242314670,
        "sender_full_name": "Winston Yin",
        "timestamp": 1623399962
    },
    {
        "content": "<p>This problem happens a lot, there are various threads about typeclass issues for <code>direct_sum</code> and <code>dfinsupp</code></p>",
        "id": 242315832,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1623400692
    },
    {
        "content": "<p>You might want <a href=\"https://leanprover-community.github.io/mathlib_docs/find/direct_sum.submodule_is_internal\">docs#direct_sum.submodule_is_internal</a> for \"isomorphic to a direct sum of (sub)modules\"</p>",
        "id": 242316049,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1623400863
    },
    {
        "content": "<p>I'll take a look. I have some isomorphism that extends <code>linear_equiv</code> as well as a function <code>symm</code> that returns the opposite isomorphism, but when I actually try to use <code>symm</code> on an isomorphism between some <code>V</code> and some <code>direct_sum ι V'</code>, it fails to synthesise the <code>module</code> instance for the <code>direct_sum</code>.</p>",
        "id": 242317845,
        "sender_full_name": "Winston Yin",
        "timestamp": 1623402039
    },
    {
        "content": "<p>Adding an explicit type  on your isomorphism with <code>(the_iso : X ≃ₗ [R] Y).symm</code> is sometimes enough to sort lean out.</p>",
        "id": 242320619,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1623403666
    }
]