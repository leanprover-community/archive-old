[
    {
        "content": "<p>Do mathlib have a filter <code>at_top_bot</code> defined as the supermum of <code>at_top</code> and <code>at_bot</code>? If we have it, we can easily define <code>exp_decay</code> as <code>=O[at_top_bot] exp (-b*|x|)</code>.</p>",
        "id": 321430844,
        "sender_full_name": "Meow",
        "timestamp": 1673749318
    },
    {
        "content": "<p>You probably want <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.cocompact\">docs#filter.cocompact</a>; <a href=\"https://leanprover-community.github.io/mathlib_docs/find/zero_at_infty_continuous_map\">docs#zero_at_infty_continuous_map</a> is defined in terms of it.</p>",
        "id": 321433075,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1673751214
    },
    {
        "content": "<p>Some little bit of checking is required to show that the cocompact filter on R is the supremum of at_top and at_bot, I guess.</p>",
        "id": 321472616,
        "sender_full_name": "David Loeffler",
        "timestamp": 1673783025
    }
]