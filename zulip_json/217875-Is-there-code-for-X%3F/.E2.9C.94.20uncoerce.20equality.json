[
    {
        "content": "<p>Hey!, In short, I need to be able to do this <code>h: ↑(ret x) = x  ⊢ ret x = ⟨x, x_in_s⟩</code> where <code>ret x : subtype s</code> for some  set <code>s</code>. I'm pretty sure there should be a single function doing it, but I got confused. How does it go? Thanks!</p>",
        "id": 272247364,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1645098297
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/subtype.ext\">docs#subtype.ext</a></p>",
        "id": 272247417,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1645098341
    },
    {
        "content": "<p><code>subtype.ext h</code> should work. Or in tactics <code>by { ext, exact h }</code></p>",
        "id": 272247486,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1645098369
    },
    {
        "content": "<p><code>subtype.ext</code> wasn't happy because it didn't know how <code>x</code> appeared as a coerced term, but by <code>@</code>ing the call, it worked out. Thanks!</p>",
        "id": 272247901,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1645098640
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"461830\">Rémi Bottinelli</span> has marked this topic as resolved.</p>",
        "id": 272247906,
        "sender_full_name": "Notification Bot",
        "timestamp": 1645098644
    },
    {
        "content": "<p>ah, but in tactic mode it's clever enough, great</p>",
        "id": 272247999,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1645098717
    }
]