[
    {
        "content": "<p>I've been able to write my own proof of</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">log_le_log_of_left_ge</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≥</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">nat.log</span> <span class=\"n\">b</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">nat.log</span> <span class=\"n\">c</span> <span class=\"n\">n</span>\n</code></pre></div>\n<p>since I couldn't find one in mathlib, but I wanted to check whether it is already there and I just missed it.</p>",
        "id": 256027943,
        "sender_full_name": "Joanna Choules",
        "timestamp": 1633338759
    },
    {
        "content": "<p>We may have (or be close to having) the word <code>antitone</code> to mean this, so that's what to search for (if the PR hit)</p>",
        "id": 256028117,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633338843
    },
    {
        "content": "<p>It should be in this file <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/data/nat/log.lean\">https://github.com/leanprover-community/mathlib/blob/master/src/data/nat/log.lean</a> if it is there.</p>",
        "id": 256028374,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633338990
    },
    {
        "content": "<p>Doesn't seem the case, so please PR it!</p>",
        "id": 256028386,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633338996
    },
    {
        "content": "<p>But to answer your question, we may well not have it. My instinct would be to prove the Galois connection if we don't already have it: b^t &lt;= n iff t &lt;= log_b n: for fixed b, b^ and log_b are a Galois connection</p>",
        "id": 256028398,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633339003
    },
    {
        "content": "<p>We do have that: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.pow_le_iff_le_log\">docs#nat.pow_le_iff_le_log</a></p>",
        "id": 256028453,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633339043
    },
    {
        "content": "<p>Why \"almost\" in the docstring? Oh, because 0&lt;y maybe? So it's a Galois connection on pnat :-/</p>",
        "id": 256028588,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633339104
    },
    {
        "content": "<p>I guess so</p>",
        "id": 256028612,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633339119
    },
    {
        "content": "<p>I did use the Galois connection in my proof, yeah.</p>",
        "id": 256028675,
        "sender_full_name": "Joanna Choules",
        "timestamp": 1633339156
    },
    {
        "content": "<p>Nice!</p>",
        "id": 256028688,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633339164
    },
    {
        "content": "<p>Are you happy to PR it? If so then the simplest way is for you to do it is to ask for PR access for non-master branches of mathlib, if you don't have it already.</p>",
        "id": 256028812,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633339230
    },
    {
        "content": "<p>I am happy to, yeah. I don't think I have such access yet as I've not previously submitted any PRs.</p>",
        "id": 256028961,
        "sender_full_name": "Joanna Choules",
        "timestamp": 1633339312
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"392901\">@Joanna Choules</span> What is your github username?</p>",
        "id": 256029014,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633339323
    },
    {
        "content": "<p>It's <code>jchoules</code></p>",
        "id": 256029144,
        "sender_full_name": "Joanna Choules",
        "timestamp": 1633339396
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/invitations\">https://github.com/leanprover-community/mathlib/invitations</a></p>",
        "id": 256029148,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633339398
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 256029197,
        "sender_full_name": "Joanna Choules",
        "timestamp": 1633339437
    },
    {
        "content": "<p>Cheat sheet: <a href=\"https://leanprover-community.github.io/contribute/index.html\">https://leanprover-community.github.io/contribute/index.html</a></p>",
        "id": 256029634,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633339649
    },
    {
        "content": "<p>Feel free to ask if you have any questions</p>",
        "id": 256029647,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1633339660
    },
    {
        "content": "<p>Yeah! I didn't prove that one, so feel free to PR it.</p>",
        "id": 256032108,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1633340928
    },
    {
        "content": "<p>I need to do some tidying (and prove the analogous lemma for <code>clog</code> while I'm at it - might as well), but I should be able to get it PR'd within the next day or so I think.</p>",
        "id": 256035513,
        "sender_full_name": "Joanna Choules",
        "timestamp": 1633342807
    },
    {
        "content": "<p>Feel free to request a review from me then <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 256035844,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1633343018
    }
]