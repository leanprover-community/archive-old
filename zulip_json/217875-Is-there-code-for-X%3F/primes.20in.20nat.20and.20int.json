[
    {
        "content": "<p>Dear All,</p>\n<p>I have been playing around with getting Lean to prove (in)solubility of certain simple polynomial equations and I found the lemmas below useful.  Do you think that some of these lemmas are reasonable additions to mathlib?</p>\n<p>Thanks!</p>",
        "id": 238747438,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1620988917
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.unique_factorization_domain</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.int.basic</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">ring</span>\n<span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kd\">@[simp]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">associated.neg_left</span> <span class=\"o\">:</span> <span class=\"n\">associated</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"n\">associated</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span><span class=\"bp\">;</span>\n  <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">u</span> <span class=\"n\">hu</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"bp\">-</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">using</span> <span class=\"n\">hu</span><span class=\"o\">⟩</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">@[simp]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">associated.neg_right</span> <span class=\"o\">:</span> <span class=\"n\">associated</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">associated</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">associated.symm</span> <span class=\"o\">(</span><span class=\"n\">associated.neg_left.mp</span> <span class=\"o\">(</span><span class=\"n\">associated.symm</span> <span class=\"n\">h</span><span class=\"o\">))</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">associated.symm</span> <span class=\"o\">(</span><span class=\"n\">associated.neg_left.mpr</span> <span class=\"o\">(</span><span class=\"n\">associated.symm</span> <span class=\"n\">h</span><span class=\"o\">))</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">ring</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> As you can see from the proof, the forward direction already exists.</span>\n<span class=\"cm\">The point of this lemma is to have the iff version. -/</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">prime.dvd_pow_iff</span> <span class=\"o\">[</span><span class=\"n\">comm_monoid_with_zero</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">pp</span> <span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n0</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"bp\">↔</span> <span class=\"n\">p</span> <span class=\"bp\">∣</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">prime.dvd_of_dvd_pow</span> <span class=\"n\">pp</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">a'</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩,</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">a'</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">*</span> <span class=\"n\">a'</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">n.pred</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">nat.succ_pred_eq_of_pos</span> <span class=\"n\">n0</span><span class=\"o\">]</span> <span class=\"o\">{</span> <span class=\"n\">occs</span> <span class=\"o\">:=</span> <span class=\"n\">occurrences.pos</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">pow_succ</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">],</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">comm_ring</span>\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kd\">@[simp]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">associated.unit_left</span> <span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">units</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">associated</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"n\">associated</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n  <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">v</span> <span class=\"n\">hv</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">units.coe_mul</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span> <span class=\"n\">a</span><span class=\"o\">]</span> <span class=\"o\">⟩</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">v</span> <span class=\"n\">hv</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">u</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"n\">v</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span> <span class=\"n\">_</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">units.coe_mul</span><span class=\"o\">,</span> <span class=\"n\">mul_inv_cancel_left</span> <span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">]⟩</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">@[simp]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">associated.unit_right</span> <span class=\"o\">{</span><span class=\"n\">u</span> <span class=\"o\">:</span> <span class=\"n\">units</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">associated</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"bp\">*</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">associated</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">associated.symm</span> <span class=\"o\">(</span><span class=\"n\">associated.unit_left.mp</span> <span class=\"o\">(</span><span class=\"n\">associated.symm</span> <span class=\"n\">h</span><span class=\"o\">))</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">associated.symm</span> <span class=\"o\">(</span><span class=\"n\">associated.unit_left.mpr</span> <span class=\"o\">(</span><span class=\"n\">associated.symm</span> <span class=\"n\">h</span><span class=\"o\">))</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">neg_prime_iff</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"o\">(</span><span class=\"bp\">-</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">prime</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span> <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">prime_of_associated</span> <span class=\"o\">(</span><span class=\"n\">associated.neg_left.mpr</span> <span class=\"o\">(</span><span class=\"n\">associated.refl</span> <span class=\"n\">p</span><span class=\"o\">))</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">prime_of_associated</span> <span class=\"o\">(</span><span class=\"n\">associated.neg_right.mpr</span> <span class=\"o\">(</span><span class=\"n\">associated.refl</span> <span class=\"n\">p</span><span class=\"o\">))</span> <span class=\"n\">h</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">comm_ring</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">int.is_unit_coe</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">is_unit</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"n\">int.is_unit_iff.trans</span> <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">exact_mod_cast</span> <span class=\"n\">or.inl</span> <span class=\"n\">h</span><span class=\"o\">⟩,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact_mod_cast</span> <span class=\"n\">h</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">int.no_confusion</span> <span class=\"n\">h</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">int.irreducible_coe_iff</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">irreducible</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">irreducible</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">irreducible_iff</span><span class=\"o\">,</span> <span class=\"n\">irreducible_iff</span><span class=\"o\">,</span> <span class=\"n\">nat.is_unit_iff</span><span class=\"o\">,</span> <span class=\"n\">int.is_unit_coe</span><span class=\"o\">],</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"n\">rintros</span> <span class=\"o\">⟨</span><span class=\"n\">pu</span><span class=\"o\">,</span> <span class=\"n\">pmul</span><span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">pu</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">ab</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n  <span class=\"o\">{</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">int.is_unit_coe</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">pmul</span> <span class=\"bp\">↑</span><span class=\"n\">a</span> <span class=\"bp\">↑</span><span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">exact_mod_cast</span> <span class=\"n\">ab</span><span class=\"o\">)</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">int.is_unit_iff</span><span class=\"o\">,</span> <span class=\"n\">nat.is_unit_iff</span><span class=\"o\">,</span> <span class=\"n\">int.nat_abs_eq_iff</span><span class=\"o\">]</span>\n      <span class=\"n\">using</span> <span class=\"n\">pmul</span> <span class=\"n\">a.nat_abs</span> <span class=\"n\">b.nat_abs</span> <span class=\"o\">((</span><span class=\"n\">int.nat_abs_mul_nat_abs_eq</span> <span class=\"n\">ab.symm</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">int.prime_coe_iff</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">prime</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"n\">gcd_monoid.irreducible_iff_prime.symm.trans</span>\n  <span class=\"o\">(</span><span class=\"n\">int.irreducible_coe_iff.trans</span>\n    <span class=\"o\">((</span><span class=\"n\">irreducible_iff_nat_prime</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trans</span>\n      <span class=\"n\">nat.prime_iff_prime</span><span class=\"o\">))</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">int.prime_iff_nat_abs</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"n\">p</span> <span class=\"bp\">↔</span> <span class=\"n\">prime</span> <span class=\"o\">(</span><span class=\"n\">int.nat_abs</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">refine</span> <span class=\"n\">iff.trans</span> <span class=\"n\">_</span> <span class=\"n\">int.prime_coe_iff</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">p.nat_abs_eq</span><span class=\"bp\">;</span> <span class=\"n\">nth_rewrite</span> <span class=\"mi\">0</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">neg_prime_iff</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">int.prime_two</span> <span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">int.prime_coe_iff.mpr</span> <span class=\"o\">(</span><span class=\"n\">nat.prime_iff.mp</span> <span class=\"n\">nat.prime_two</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">int.even_pow_iff</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">n0</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">even</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">even</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"n\">prime.dvd_pow_iff</span> <span class=\"n\">a</span> <span class=\"n\">int.prime_two</span> <span class=\"n\">n0</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">int.even_sq_iff</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">even</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">even</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"n\">prime.dvd_pow_iff</span> <span class=\"n\">a</span> <span class=\"n\">int.prime_two</span> <span class=\"n\">zero_lt_two</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">int.coe_prime_iff_nat_prime</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">nat.prime</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"n\">int.prime_coe_iff.trans</span> <span class=\"n\">nat.prime_iff.symm</span>\n\n<span class=\"kd\">@[simp]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">even_zero</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">even</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">⟨(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">mul_zero</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 238747440,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1620988919
    },
    {
        "content": "<p>Some of those are pretty close to existing lemmas:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">int.prime_coe_iff</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">prime</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"n\">nat.prime_iff_prime_int.symm.trans</span> <span class=\"n\">nat.prime_iff_prime</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">int.prime_iff_nat_abs</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"n\">p</span> <span class=\"bp\">↔</span> <span class=\"n\">prime</span> <span class=\"o\">(</span><span class=\"n\">int.nat_abs</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">int.prime_iff_nat_abs_prime.trans</span> <span class=\"bp\">$</span> <span class=\"n\">nat.prime_iff_prime_int.trans</span> <span class=\"n\">int.prime_coe_iff</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">int.coe_prime_iff_nat_prime</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">prime</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"n\">nat.prime</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"n\">nat.prime_iff_prime_int.symm</span>\n</code></pre></div>",
        "id": 238819260,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1621021401
    },
    {
        "content": "<p>Ruben, thank you very much!  I commented out two of the lemmas from my list and shortened a proof using yours.</p>\n<p>I am temporarily keeping <code>int.prime_coe_iff {p : ℕ} : prime (p : ℤ) ↔ prime p</code>, since I feel that converting a natural prime to an integer prime is a common enough operation and having a direct lemma for it seem reasonable.</p>\n<p>Anywa, thanks again!</p>",
        "id": 238824211,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1621023757
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 238835941,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1621029908
    },
    {
        "content": "<p>I wonder if there's a reason to keep <code>nat.prime</code> and <code>prime \\N</code></p>",
        "id": 238888694,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1621076087
    },
    {
        "content": "<p>I would be in favour of this, or at least renaming <a href=\"http://nat.prime\">nat.prime</a> to something closer to the definition: I personally found it tricky to navigate and had to constantly remind myself of which definition was which.  I think that <code>prime</code> and <code>irreducible</code> are fairly standard, while <a href=\"http://nat.prime\">nat.prime</a> kept confusing me.</p>",
        "id": 238892442,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1621080016
    }
]