[
    {
        "content": "<p>What is the status of theorems like, Minkowski's theorem, Pick's Theorem and Blichfeldt's theorem have they been formalised yet?</p>",
        "id": 318939206,
        "sender_full_name": "Sahil Sharma",
        "timestamp": 1672640236
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/2819\">#2819</a></p>",
        "id": 318940631,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1672641537
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253861\">Thomas Browning</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Geometry.20Of.20Numbers/near/318940631\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/pull/2819\">#2819</a></p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/100-missing.html\">https://leanprover-community.github.io/100-missing.html</a></p>\n<p>Oh, so I guess this list is no longer reliable?</p>",
        "id": 318944772,
        "sender_full_name": "Sahil Sharma",
        "timestamp": 1672644513
    },
    {
        "content": "<p>Usually we would update the list once the pull request is merged into mathlib, I think.</p>",
        "id": 318945564,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1672645069
    },
    {
        "content": "<p>I am still working towards making <a href=\"https://github.com/leanprover-community/mathlib/pull/2819\">#2819</a> hit mathlib but work is happening in the dependent PRs.</p>",
        "id": 318948056,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672646575
    },
    {
        "content": "<p>It seems that progress is blocked by <a href=\"https://github.com/leanprover-community/mathlib/pull/17775\">#17775</a> atm</p>",
        "id": 318952321,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1672648696
    },
    {
        "content": "<p>Yes indeed. I was away for the past two weeks, so I had very little Lean time. I should be able to make <a href=\"https://github.com/leanprover-community/mathlib/pull/17775\">#17775</a> mergeable tonight.</p>",
        "id": 318953909,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1672649483
    },
    {
        "content": "<p>I also started work on the minkowski proof of pick for \"fundamental triangles\" or whatever you call them somewhere. I'm not yet sure what the best way to approach the general Pick's theorem is, i.e. how to describe a simple polygon with lattice vertices in the plane most usefully</p>",
        "id": 320203229,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1673264013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> What's the status with <a href=\"https://github.com/leanprover-community/mathlib/pull/17775\">#17775</a>?</p>",
        "id": 320203643,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673264138
    },
    {
        "content": "<p>The status is that I have a fix in local.</p>",
        "id": 320203714,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673264159
    },
    {
        "content": "<p>Let's apply a local-to-global principle!</p>",
        "id": 320203810,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673264185
    },
    {
        "content": "<p>Update: The Gitpod it was on expired yesterday apparently <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 320203847,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673264198
    },
    {
        "content": "<p>It's fine, I can do it again. Shouldn't take too long.</p>",
        "id": 320203903,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673264214
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/Geometry.20Of.20Numbers/near/320203229\">said</a>:</p>\n<blockquote>\n<p>I also started work on the minkowski proof of pick for \"fundamental triangles\" or whatever you call them somewhere. I'm not yet sure what the best way to approach the general Pick's theorem is, i.e. how to describe a simple polygon with lattice vertices in the plane most usefully</p>\n</blockquote>\n<p>I think polygons are something that will end up needing multiple types, and predicates on them and functions for converting between them, simply because different contexts where polygons are used may have different expectations for the information needed and the well-behavedness conditions involved. For some purposes maybe a <code>cycle</code> of points (in an affine space for a real topological vector space - ignoring for now more general contexts such as polygons in hyperbolic space or on a sphere) is appropriate, for others maybe you want to index the points by <code>fin n</code>. For some purposes self-intersections may be allowed, for others not. For some you may allow a degenerate 0-gon or 1-gon or 2-gon, for others not. For some you may allow the angle at a point to be 0 or pi, for others not. For some it may be OK for consecutive vertices to be equal, for others not. For most purposes you probably want the vertices to be coplanar (but maybe allow an ambient space of more than two dimensions, polygons in three dimensions have plenty of uses e.g. in relation to polyhedra). For any of the above there's then the question of what the right way is to define the interior of the polygon so as to define its area, though once the boundary is required to be a simple closed curve all reasonable definitions should end up equivalent. If you're doing something that generalizes to polyhedra (which Pick doesn't), maybe you don't want anything involving a cyclic order on vertices at all, but just a polyhedral or semipolyhedral set (finite intersection of half-spaces or finite union of such finite intersections), with whatever conditions you need for that to be well-behaved for the purposes of your result - or to start with an abstract polytope.</p>",
        "id": 320364379,
        "sender_full_name": "Joseph Myers",
        "timestamp": 1673314901
    },
    {
        "content": "<p>Pushed a fix to <a href=\"https://github.com/leanprover-community/mathlib/pull/17775\">#17775</a></p>",
        "id": 320803985,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1673473773
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Thanks! I see that Eric already left a review.</p>",
        "id": 320856143,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1673500177
    }
]