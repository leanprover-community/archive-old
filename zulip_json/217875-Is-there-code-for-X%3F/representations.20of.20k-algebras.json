[
    {
        "content": "<p>Where might I find:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"n\">A</span> <span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">k</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">k</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">V</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">k</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">A</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">smul_comm_class</span> <span class=\"n\">k</span> <span class=\"n\">A</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">A</span> <span class=\"bp\">→ₐ</span><span class=\"o\">[</span><span class=\"n\">k</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"bp\">→ₗ</span><span class=\"o\">[</span><span class=\"n\">k</span><span class=\"o\">]</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 280173409,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1650959915
    },
    {
        "content": "<p>I don't think I ever added that one</p>",
        "id": 280173697,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650960039
    },
    {
        "content": "<p>It would be called <a href=\"https://leanprover-community.github.io/mathlib_docs/find/algebra.to_module_End\">docs#algebra.to_module_End</a></p>",
        "id": 280173710,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650960050
    },
    {
        "content": "<p>But I didn't go any further than <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.to_module_End\">docs#module.to_module_End</a></p>",
        "id": 280173747,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650960071
    },
    {
        "content": "<p>Oh, I think it actually needs <code>is_scalar_tower</code>, not just <code>smul_comm_class</code>, for the <code>commutes'</code> field. I'll go install it.</p>",
        "id": 280174043,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1650960242
    },
    {
        "content": "<p>(don't forget to relax ring to semiring)</p>",
        "id": 280176317,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650961693
    },
    {
        "content": "<p>Ah, this does exist after all; it's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/algebra.lsmul\">docs#algebra.lsmul</a></p>",
        "id": 280206696,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650978366
    },
    {
        "content": "<p>Perhaps we should rename it for consistency</p>",
        "id": 280206718,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650978373
    },
    {
        "content": "<p>Ok, I've reverted to using <code>lsmul</code>.</p>",
        "id": 280206937,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1650978479
    }
]