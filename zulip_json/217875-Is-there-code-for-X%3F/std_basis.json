[
    {
        "content": "<p>At LFTCM, there was an exercise to show that </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">std_basis</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">j</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">0</span>\n</code></pre></div>\n\n\n<p><a href=\"https://github.com/leanprover-community/lftcm2020/blob/master/src/solutions/thursday/afternoon/linear_algebra.lean#L270\">is a basis</a>. Is this result in mathlib? I know there's something called <code>std_basis</code> in <code>linear_algebra/basic.lean</code>, but I can't figure out how to use it.</p>",
        "id": 204962577,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1595622402
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/4d81149366b4b88fe72784f08a906c613af85a13/src/linear_algebra/basis.lean#L1289\">https://github.com/leanprover-community/mathlib/blob/4d81149366b4b88fe72784f08a906c613af85a13/src/linear_algebra/basis.lean#L1289</a></p>",
        "id": 204963864,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1595623143
    },
    {
        "content": "<p>Perfect, thanks!</p>",
        "id": 204964669,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1595623536
    }
]