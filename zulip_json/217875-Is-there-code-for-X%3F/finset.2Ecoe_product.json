[
    {
        "content": "<p>Am I dumb or are we missing this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.finset.prod</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">finset.coe_product</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">s.product</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">β</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prod</span> <span class=\"n\">t</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">ext</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 262068563,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1637330074
    },
    {
        "content": "<p>I assume something like <code>finset.ext $ λ _, finset.mem_product</code> works too?</p>",
        "id": 262069117,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1637330362
    },
    {
        "content": "<p>I think it's missing, I'd expect it right below <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.mem_product\">docs#finset.mem_product</a></p>",
        "id": 262069151,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1637330383
    },
    {
        "content": "<p>Yeah me too.</p>",
        "id": 262069378,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1637330466
    },
    {
        "content": "<p>And I swear I used it before, so I formally concluded I was crazy.</p>",
        "id": 262069436,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1637330484
    }
]