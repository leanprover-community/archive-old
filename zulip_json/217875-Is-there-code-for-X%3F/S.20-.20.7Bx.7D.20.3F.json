[
    {
        "content": "<p>Say <code>S : set X</code>. We have <code>S.insert x</code> for adding an element to <code>S</code> (i.e. a shortcut for <code>S.union {x}</code>); is there a corresponding function for <code>S.diff {x}</code>?</p>\n<p>I would love to use <code>#find</code> to answer this kind of question myself; do I remember correctly that this is on the table for Lean 4?</p>",
        "id": 273346045,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1645888288
    },
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.erase\">docs#finset.erase</a> but not <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.erase\">docs#set.erase</a></p>",
        "id": 273346113,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645888346
    },
    {
        "content": "<p>Presumably <code>#find</code> or library_search work fine in lean 3, but both suggest <code>set.insert</code> as it had the same type?</p>",
        "id": 273346499,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645888818
    },
    {
        "content": "<p>Sure, I don't mind something suggesting <code>set.insert</code> and a couple of other things; what I don't like is only being able to do <code>#find set _ -&gt; _ -&gt; set _</code> which can be unified in far more ways than <code>set X -&gt; X -&gt; set X</code> (e.g. set.image, set.preimage etc)</p>",
        "id": 273346609,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1645889015
    },
    {
        "content": "<p>Does <code>#find Π X, set X → X → set X</code> work?</p>",
        "id": 273348150,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645890862
    },
    {
        "content": "<p>It didn't when I tried variants of this idea</p>",
        "id": 273349753,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1645892812
    },
    {
        "content": "<p>I was surprised to find out that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/find_cmd\">docs#find_cmd</a> is mathlib not core</p>",
        "id": 273414621,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645982271
    },
    {
        "content": "<p>TIL! Maybe someone who knows this command well wants to respond to <a href=\"https://proofassistants.stackexchange.com/questions/354/how-to-search-for-an-existing-theorem-in-lean\">https://proofassistants.stackexchange.com/questions/354/how-to-search-for-an-existing-theorem-in-lean</a> talking about it?</p>\n<p>Can I use it to seach for lemmas that mention too <em>anywhere</em> in their type, potentially using</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">#</span><span class=\"n\">find</span> <span class=\"o\">(</span><span class=\"n\">_</span> <span class=\"n\">foo</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 273423892,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1645994330
    }
]