[
    {
        "content": "<p>I would be surprised if the following doesn't already exist, but I couldn't find it.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">category_theory.currying</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">category_theory</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"n\">D</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">category</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">category</span> <span class=\"n\">D</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">category</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">⥤</span> <span class=\"n\">D</span> <span class=\"bp\">⥤</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">F.flip</span> <span class=\"bp\">≅</span> <span class=\"n\">curry.obj</span> <span class=\"o\">(</span><span class=\"n\">category_theory.prod.swap</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"bp\">⋙</span> <span class=\"n\">uncurry.obj</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">nat_iso.of_components</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">nat_iso.of_components</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">eq_to_iso</span> <span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">tidy</span><span class=\"o\">)</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">tidy</span>\n</code></pre></div>",
        "id": 266446078,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1640887286
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/11151\">#11151</a></p>",
        "id": 266446607,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1640887688
    }
]