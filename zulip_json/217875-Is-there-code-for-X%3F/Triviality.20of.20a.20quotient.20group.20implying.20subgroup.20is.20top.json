[
    {
        "content": "<p>Is there a result in mathlib that shows that, if G/H is trivial (which, in the case I am looking at, is represented by the bottom and top in subgroup G/H being equal), then H=G?</p>",
        "id": 216967896,
        "sender_full_name": "Jordan Brown",
        "timestamp": 1605590822
    },
    {
        "content": "<p>Do you have a theorem statement?</p>",
        "id": 216968281,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1605591370
    },
    {
        "content": "<p>I guess you could prove it using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/quotient_group.ker_mk\">docs#quotient_group.ker_mk</a></p>",
        "id": 216968317,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1605591455
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">group_theory.quotient_group</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">quotient_group</span>\n<span class=\"kd\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">subgroup.normal</span> <span class=\"n\">N</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">eq_top_of_trivial_quotient</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">subgroup</span> <span class=\"o\">(</span><span class=\"n\">quotient</span> <span class=\"n\">N</span><span class=\"o\">))</span> <span class=\"bp\">≤</span> <span class=\"bp\">⊥</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">N</span> <span class=\"bp\">=</span> <span class=\"bp\">⊤</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">ker_mk</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"n\">eq_top_iff</span><span class=\"o\">,</span> <span class=\"n\">monoid_hom.ker</span><span class=\"o\">,</span> <span class=\"bp\">←</span> <span class=\"n\">subgroup.map_le_iff_le_comap</span><span class=\"o\">],</span>\n  <span class=\"n\">exact</span> <span class=\"n\">le_trans</span> <span class=\"n\">le_top</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n<span class=\"kd\">end</span> <span class=\"n\">quotient_group</span>\n</code></pre></div>",
        "id": 216968717,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1605592087
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">eq_top_of_trivial_quotient</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">subgroup</span> <span class=\"o\">(</span><span class=\"n\">quotient</span> <span class=\"n\">N</span><span class=\"o\">))</span> <span class=\"bp\">≤</span> <span class=\"bp\">⊥</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">N</span> <span class=\"bp\">=</span> <span class=\"bp\">⊤</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">ker_mk</span> <span class=\"n\">N</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm.trans</span> <span class=\"bp\">$</span> <span class=\"n\">eq_top_iff.2</span> <span class=\"bp\">$</span> <span class=\"n\">subgroup.map_le_iff_le_comap.1</span> <span class=\"bp\">$</span> <span class=\"n\">le_trans</span> <span class=\"n\">le_top</span> <span class=\"n\">H</span>\n</code></pre></div>",
        "id": 216968801,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1605592300
    }
]