[
    {
        "content": "<p>I thought I remembered finding this, but now I can't:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">control.equiv_functor</span>\n\n<span class=\"kd\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">α'</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">}</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">≃</span> <span class=\"n\">α'</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">α</span> <span class=\"bp\">≃</span> <span class=\"n\">option</span> <span class=\"n\">α'</span> <span class=\"o\">:=</span> <span class=\"n\">equiv_functor.map_equiv</span> <span class=\"n\">option</span> <span class=\"n\">e</span>  <span class=\"c1\">--only works in one universe</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">e</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">≃</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">option</span> <span class=\"n\">α</span> <span class=\"bp\">≃</span> <span class=\"n\">option</span> <span class=\"n\">β</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">library_search</span> <span class=\"c1\">-- fails</span>\n</code></pre></div>",
        "id": 273029173,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645660669
    },
    {
        "content": "<p>seems there is a universe issue hidden by <code>Type*</code>, c.f. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv_functor.map_equiv_option_injective\">docs#equiv_functor.map_equiv_option_injective</a>. the only other placae that mentions <code>option.*≃.*option</code> is <code>equiv_rw</code>, and I never got how that worrked and is presumably not what you want</p>",
        "id": 273029925,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1645661061
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/12263\">#12263</a></p>",
        "id": 273032338,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645662945
    }
]