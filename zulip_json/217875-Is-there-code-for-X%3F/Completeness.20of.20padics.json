[
    {
        "content": "<p>I can't find the instance that <code>ℚ_[p]</code> is a complete metric space -- there are many related things, but I can't find this precise one. Is it really missing?</p>",
        "id": 273940655,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1646297200
    },
    {
        "content": "<p>It is defined as a completion, right? So that would be very surprising</p>",
        "id": 273941635,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1646297715
    },
    {
        "content": "<p>Aah, we have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">instance</span> <span class=\"n\">complete</span> <span class=\"o\">:</span> <span class=\"n\">cau_seq.is_complete</span> <span class=\"n\">ℚ_</span><span class=\"o\">[</span><span class=\"n\">p</span><span class=\"o\">]</span> <span class=\"n\">norm</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 273941810,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1646297789
    },
    {
        "content": "<p>This is not what Sébastien is looking for</p>",
        "id": 273941869,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646297818
    },
    {
        "content": "<p>The issue is that this completion is defined by hand using Cauchy sequences of rationals, not through the general machinery of uniform spaces (or even metric spaces).</p>",
        "id": 273941942,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646297856
    },
    {
        "content": "<p>You need some glue like in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.complete_space\">docs#real.complete_space</a></p>",
        "id": 273942194,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646297998
    },
    {
        "content": "<p>Hopefully there is the correspondance between the two notions somewhere in  mathlib. I'm just surprised that the instance does not seem to be here.</p>",
        "id": 273942248,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1646298005
    },
    {
        "content": "<p>Maybe it hasn't been written for p-adics</p>",
        "id": 273942253,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646298006
    },
    {
        "content": "<p>Yes, we clearly need to show that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Q</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb Q_p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.975em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span> admits an \"abstract completion package\"</p>",
        "id": 273942257,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1646298007
    },
    {
        "content": "<p>That instance for real makes me pessimistic that the p-adic version exists. Otherwise we would have a generalization covering both.</p>",
        "id": 273942551,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646298078
    },
    {
        "content": "<p>And as Johan wrote, you can also go through the route in <code>topology.uniform_space.compare_real</code></p>",
        "id": 273942732,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646298175
    },
    {
        "content": "<p>It's not that I'm interested in padics :-), but this would have been a nice example for my talk of today in Lorentz center. I'll pick another one, then.</p>",
        "id": 273942766,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1646298190
    },
    {
        "content": "<p>When is that talk?</p>",
        "id": 273942979,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646298315
    },
    {
        "content": "<p>And I must admit I was curious to read how you realized that you need completeness of p-adics to prove a proper version of the change of variable formula.</p>",
        "id": 273943068,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646298363
    },
    {
        "content": "<p>2:30<br>\n:-)</p>",
        "id": 273943105,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1646298395
    },
    {
        "content": "<p>Without bors taking ages this would be fine.</p>",
        "id": 273943170,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646298453
    },
    {
        "content": "<p>I'll try something anyway, but I can't do it right now.</p>",
        "id": 273943195,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646298472
    },
    {
        "content": "<p>I'll be in a particular branch anyway. And I really don't need this, it's just that I wanted to share my surprise it's not there.</p>",
        "id": 273944083,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1646298989
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Completeness.20of.20padics/near/273943068\">said</a>:</p>\n<blockquote>\n<p>And I must admit I was curious to read how you realized that you need completeness of p-adics to prove a proper version of the change of variable formula.</p>\n</blockquote>\n<p>The proper version of the change of variable formula is ready (<a href=\"https://github.com/leanprover-community/mathlib/blob/b472a7d1eb4134b907c913b67a889bcefc131da5/src/measure_theory/function/jacobian.lean#L1255\">https://github.com/leanprover-community/mathlib/blob/b472a7d1eb4134b907c913b67a889bcefc131da5/src/measure_theory/function/jacobian.lean#L1255</a>), and does not use padics. Not clear how long it takes to get in mathlib, though, because <a href=\"https://github.com/leanprover-community/mathlib/pull/12220\">#12220</a> is already hard to get in...</p>",
        "id": 273944297,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1646299137
    },
    {
        "content": "<p>The issue is deeper than completion. Even the metric space structure is done in an ad-hoc way for reals and padics</p>",
        "id": 273946231,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646300092
    },
    {
        "content": "<p>And I need to go so I probably won't have time to fix this before your talk</p>",
        "id": 273946954,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646300468
    },
    {
        "content": "<p>I had a bit more time in the end so I gave up and duplicated the ad hoc code we have for real. See <a href=\"https://github.com/leanprover-community/mathlib/pull/12424\">#12424</a></p>",
        "id": 273950089,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646302009
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span></p>",
        "id": 273950126,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646302031
    },
    {
        "content": "<p>Bors failed with </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code> Error: /home/lean/actions-runner/_work/mathlib/mathlib/src/algebraic_topology/simplex_category.lean:1:0:\nfile <span class=\"s1\">'category_theory/reflects_isomorphisms'</span> not found <span class=\"k\">in</span> the search path\n</code></pre></div>\n<p>I claim this has nothing to do with my change...</p>",
        "id": 273958544,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1646306793
    },
    {
        "content": "<p>Next PR on the road to the change of variables formula is ready, in <a href=\"https://github.com/leanprover-community/mathlib/pull/12437\">#12437</a>. Unfortunately again a little bit longish, and mathematically a little bit exotic, unless you're into Polish spaces and tweaking topologies on a given type.</p>",
        "id": 274041314,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1646342233
    }
]