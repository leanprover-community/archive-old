[
    {
        "content": "<p>Do either of these exist?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.ordered_ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.subsemiring</span>\n<span class=\"kn\">import</span> <span class=\"n\">group_theory.subgroup</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">pos_submonoid</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ordered_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">nontrivial</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">submonoid</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">carrier</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">},</span>\n  <span class=\"n\">one_mem'</span> <span class=\"o\">:=</span> <span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">zero_lt_one</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_mem'</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">),</span> <span class=\"n\">mul_pos</span> <span class=\"n\">hx</span> <span class=\"n\">hy</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">units.pos_subgroup</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">linear_ordered_comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">nontrivial</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">subgroup</span> <span class=\"o\">(</span><span class=\"n\">units</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">carrier</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">},</span>\n  <span class=\"n\">inv_mem'</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">zero_lt_mul_left</span> <span class=\"n\">hx</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"bp\">$</span> <span class=\"n\">x.mul_inv.symm</span> <span class=\"bp\">▸</span> <span class=\"n\">zero_lt_one</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span><span class=\"n\">pos_submonoid.comap</span> <span class=\"o\">(</span><span class=\"n\">units.coe_hom</span> <span class=\"n\">R</span><span class=\"o\">)}</span>\n</code></pre></div>",
        "id": 247798909,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627729704
    },
    {
        "content": "<p>And if these don't exist, which file should they live in?</p>",
        "id": 247799562,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627730895
    },
    {
        "content": "<p>I was going to add something similar to work with orders on semirings where you want multiplication by positive elements to be monotone.  However, I got slowed down in the process and did not get around yet to PRing this.  Feel free to do so yourself!</p>",
        "id": 247814172,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1627750567
    },
    {
        "content": "<p>Do you have a feel for where this could live?</p>",
        "id": 247815214,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1627752102
    },
    {
        "content": "<p>My idea was to put this in a new file.</p>\n<p>My application would be to use it in <code>algebra.ordered_ring</code> and later files.  If you do not like a new file, then maybe some file imported by ordered_ring?  I'm not at a computer this weekend, so I am not really able to find a home efficiently.</p>",
        "id": 247815949,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1627753133
    }
]