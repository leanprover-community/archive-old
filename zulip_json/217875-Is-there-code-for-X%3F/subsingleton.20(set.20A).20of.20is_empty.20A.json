[
    {
        "content": "<p>Do we have this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">is_empty</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">subsingleton</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 252458528,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1631107517
    },
    {
        "content": "<p>Even better:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.set.basic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">is_empty</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">unique</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">unfold</span> <span class=\"n\">set</span><span class=\"o\">,</span> <span class=\"n\">apply_instance</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 252458966,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1631107703
    },
    {
        "content": "<p>I think so, but it's not an instance for performance reasons.</p>",
        "id": 252458971,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631107705
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.unique_empty\">docs#set.unique_empty</a></p>",
        "id": 252459037,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631107731
    },
    {
        "content": "<p>The general thing is that <code>[is_empty X]</code> implies <code>unique (X \\to Y)</code> for any sort <code>Y</code></p>",
        "id": 252459145,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1631107787
    },
    {
        "content": "<p><del>I don't know if we defined the corresponding thing for <code>set X</code> though.</del></p>",
        "id": 252459285,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1631107835
    },
    {
        "content": "<p>if I replace <code>set α</code> by <code>α → Prop</code> the instance is found. But replacing set by its definition is something we should not have to do.</p>",
        "id": 252459428,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1631107901
    },
    {
        "content": "<p>Yes, I agree. See Eric's link above. It's there.</p>",
        "id": 252459504,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1631107923
    },
    {
        "content": "<p>thanks for set.unique_empty!</p>",
        "id": 252459519,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1631107927
    },
    {
        "content": "<p>Adam confused me into crossing out my comment about it not being an instance</p>",
        "id": 252461047,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631108480
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/6025\">#6025</a> tracks the task of actually making it an instanc</p>",
        "id": 252461127,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631108507
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/subsingleton.20.28set.20A.29.20of.20is_empty.20A/near/252461047\">said</a>:</p>\n<blockquote>\n<p>Adam confused me into crossing out my comment about it not being an instance</p>\n</blockquote>\n<p>sorry ;)</p>",
        "id": 252461482,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1631108630
    }
]