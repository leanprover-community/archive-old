[
    {
        "content": "<p>Do we not have this and strengthenings?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.group.hom</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">[</span><span class=\"n\">mul_one_class</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">comm_monoid</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">mul_one_class</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→*</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">one_mul</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">one_mul</span> <span class=\"n\">_</span> <span class=\"o\">},</span>\n  <span class=\"n\">mul_one</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">ext</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">mul_one</span> <span class=\"n\">_</span> <span class=\"o\">},</span>\n  <span class=\"bp\">..</span> <span class=\"n\">monoid_hom.has_one</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span> <span class=\"n\">monoid_hom.has_mul</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 266158535,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640596895
    },
    {
        "content": "<p>We have a type synonym for them, I think <a href=\"https://leanprover-community.github.io/mathlib_docs/find/monoid.End\">docs#monoid.End</a></p>",
        "id": 266161156,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1640599698
    },
    {
        "content": "<p>Ah no, that's the other one.</p>",
        "id": 266161173,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1640599731
    },
    {
        "content": "<p>In any case, the motivation for <code>End</code> is that both composition and pointwise multiplication are sensible definitions for the product of two monoids, so it wouldn't surprise me if the plan was to put pointwise multiplication in its own type synonym.</p>",
        "id": 266161286,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1640599839
    },
    {
        "content": "<p>Yes, but <code>End</code> is only about endomorphisms. And indeed we already have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/monoid_hom.has_mul\">docs#monoid_hom.has_mul</a>.</p>",
        "id": 266161629,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640600209
    },
    {
        "content": "<p><del>And <a href=\"https://leanprover-community.github.io/mathlib_docs/find/monoid_hom.monoid\">docs#monoid_hom.monoid</a></del></p>",
        "id": 266164669,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1640603382
    },
    {
        "content": "<p>There's no point having your weaker version because it has the same assumptions</p>",
        "id": 266164855,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1640603536
    },
    {
        "content": "<p>Aaah, I didn't know about <code>algebra.group.hom_instances</code>. Thanks!</p>",
        "id": 266164879,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640603586
    }
]