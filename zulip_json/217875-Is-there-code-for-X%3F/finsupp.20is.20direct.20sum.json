[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">finsupp</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">tensor_product</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span> <span class=\"n\">big_operators</span> <span class=\"n\">tensor_product</span>\n\n<span class=\"n\">def</span> <span class=\"n\">finsupp_equiv_direct_sum</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">ι</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">Sort</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">ι</span> <span class=\"bp\">→</span><span class=\"err\">₀</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"err\">≃ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">direct_sum</span> <span class=\"n\">ι</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">library_search</span>\n</code></pre></div>",
        "id": 201605093,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592832512
    },
    {
        "content": "<p>do we have this isomorphism?</p>",
        "id": 201605096,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592832515
    },
    {
        "content": "<p>Nope... it seems there's a lot of glue missing here, afaik</p>",
        "id": 201606528,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592833230
    },
    {
        "content": "<p>There is <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/algebra/category/Group/biproducts.lean#L153\">https://github.com/leanprover-community/mathlib/blob/master/src/algebra/category/Group/biproducts.lean#L153</a></p>",
        "id": 201674748,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1592869753
    },
    {
        "content": "<p>Talking about more stuff that needs to be glued together...</p>",
        "id": 201674757,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1592869766
    },
    {
        "content": "<p>We have categorical biproducts for <code>AddCommGroup</code>, but no connection between these and the \"by hand\" definition of direct sum.</p>",
        "id": 201674845,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1592869833
    }
]