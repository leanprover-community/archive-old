[
    {
        "content": "<p>Do we have the following?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">linear_algebra.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">order.atoms</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">division_ring</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">K</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">is_atomistic</span> <span class=\"o\">(</span><span class=\"n\">submodule</span> <span class=\"n\">K</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>(Ping <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> )</p>\n<p>I only really care about fields, but I think this should be true for division rings as well?</p>",
        "id": 286101069,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1655225143
    },
    {
        "content": "<p>It seems like we have no concrete instance of <code>is_atomistic</code>! That would be great to have.</p>",
        "id": 286110270,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655229537
    },
    {
        "content": "<p>but actually we do have it: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.submodule.is_complemented\">docs#module.submodule.is_complemented</a></p>",
        "id": 286110353,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655229580
    },
    {
        "content": "<p>Aha! So one could use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_atomistic_of_is_complemented\">docs#is_atomistic_of_is_complemented</a></p>",
        "id": 286110746,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1655229733
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/is_atomistic.20submodule/near/286110353\">said</a>:</p>\n<blockquote>\n<p>but actually we do have it: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.submodule.is_complemented\">docs#module.submodule.is_complemented</a></p>\n</blockquote>\n<p>Over a field...</p>",
        "id": 286110797,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1655229764
    },
    {
        "content": "<p>In any case, it would be useful to have a characterization of the atoms of <code>submodule K V</code></p>",
        "id": 286110870,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1655229796
    },
    {
        "content": "<p>Ping <span class=\"user-mention\" data-user-id=\"488747\">@Michael Blyth</span></p>",
        "id": 286110925,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1655229824
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/10865\">#10865</a> might help</p>",
        "id": 286111111,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1655229893
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/is_atomistic.20submodule/near/286110797\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there-code-for-X.3F/topic/is_atomistic.20submodule/near/286110353\">said</a>:</p>\n<blockquote>\n<p>but actually we do have it: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.submodule.is_complemented\">docs#module.submodule.is_complemented</a></p>\n</blockquote>\n<p>Over a field...</p>\n</blockquote>\n<p>Edit: I am wrong and can't read errors</p>",
        "id": 286111455,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1655230029
    },
    {
        "content": "<p>Is there some simple way to get the relationship between the atoms of <code>set</code> and the atoms of <code>submodule</code> via spans?</p>",
        "id": 286111501,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1655230053
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> this requires field as well <a href=\"https://leanprover-community.github.io/mathlib_docs/find/submodule.exists_is_compl\">docs#submodule.exists_is_compl</a></p>",
        "id": 286111666,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1655230131
    },
    {
        "content": "<p>But it should be generalizable</p>",
        "id": 286111684,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1655230140
    },
    {
        "content": "<p>e.g. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/basis.exists_basis\">docs#basis.exists_basis</a> already uses division rings, and that's the key IMO</p>",
        "id": 286111865,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1655230220
    }
]