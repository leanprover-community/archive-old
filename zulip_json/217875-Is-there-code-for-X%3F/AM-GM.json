[
    {
        "content": "<p>Do we really not have the plain vanilla less-variables-becomes-trivial AM-GM?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">two_mul_sqrt_le_add</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">sqrt</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 251900488,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1630683804
    },
    {
        "content": "<p>Is this OK for e.g. x=+1, y=-1? I don't know what Lean thinks real.sqrt(-1) is...</p>",
        "id": 251900702,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630683885
    },
    {
        "content": "<p>I read the docstring before writing wrong stuff <del>for once <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> </del>:<br>\n\"The square root of a real number. This returns 0 for negative inputs.\"</p>",
        "id": 251901199,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1630684091
    },
    {
        "content": "<p>OT about the <code>real.sqrt</code> of negative numbers... We should never be able to prove <code>(sqrt x = sqrt y) → (x = y)</code> right?</p>",
        "id": 252005365,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1630766619
    },
    {
        "content": "<p>We can for nnreal</p>",
        "id": 252005581,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1630766852
    },
    {
        "content": "<p>How lovely we can guarantee non-negativity by a TYPE.</p>",
        "id": 252005799,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1630767096
    }
]