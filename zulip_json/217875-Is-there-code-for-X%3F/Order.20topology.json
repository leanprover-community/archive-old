[
    {
        "content": "<p>I suspect I am missing some tricks in using the order topology library.  Here's my lemma:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">continuous_of_monotone_surjective</span>  <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">ι</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">linear_order</span> <span class=\"n\">ι</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_topology</span> <span class=\"n\">ι</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_topology</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h_mono</span> <span class=\"o\">:</span> <span class=\"n\">strict_mono_incr_on</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">h_surj</span> <span class=\"o\">:</span> <span class=\"n\">surj_on</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">)))</span> <span class=\"o\">:</span>\n  <span class=\"n\">continuous_on</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>And here is my voluminous proof:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">monotone_incr_on</span> <span class=\"o\">[</span><span class=\"n\">has_le</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_le</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"n\">t</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">y</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">strict_mono_incr_on</span><span class=\"bp\">.</span><span class=\"n\">monotone_incr_on</span>\n  <span class=\"o\">[</span><span class=\"n\">partial_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">strict_mono_incr_on</span> <span class=\"n\">f</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">monotone_incr_on</span> <span class=\"n\">f</span> <span class=\"n\">t</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">ha</span> <span class=\"n\">b</span> <span class=\"n\">hb</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">hab&#39;</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">hab&#39;</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">le_of_lt</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"n\">a</span> <span class=\"n\">ha</span> <span class=\"n\">b</span> <span class=\"n\">hb</span> <span class=\"o\">(</span><span class=\"n\">lt_of_le_of_ne</span> <span class=\"n\">hab</span> <span class=\"n\">hab&#39;</span><span class=\"o\">))</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">Ioc_mem_nhds_within_Icc</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">ι</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">linear_order</span> <span class=\"n\">ι</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_topology</span> <span class=\"n\">ι</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hxy</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">Ioc</span> <span class=\"n\">y</span> <span class=\"n\">b</span> <span class=\"err\">∈</span> <span class=\"n\">nhds_within</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">mem_nhds_within</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"bp\">⟨</span><span class=\"n\">Ioi</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">is_open_Ioi</span><span class=\"o\">,</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span> <span class=\"n\">hz</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">hz</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">hz</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">⟩⟩</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">continuous_of_monotone_surjective</span>  <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">ι</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">linear_order</span> <span class=\"n\">ι</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_topology</span> <span class=\"n\">ι</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_topology</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h_mono</span> <span class=\"o\">:</span> <span class=\"n\">strict_mono_incr_on</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">h_surj</span> <span class=\"o\">:</span> <span class=\"n\">surj_on</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">)))</span> <span class=\"o\">:</span>\n  <span class=\"n\">continuous_on</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">left_mem_Icc</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"err\">∈</span> <span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">right_mem_Icc</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">continuous_on</span><span class=\"o\">,</span> <span class=\"n\">continuous_within_at</span><span class=\"o\">,</span> <span class=\"n\">tendsto_order</span><span class=\"o\">],</span>\n  <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">p</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n    <span class=\"n\">by_cases</span> <span class=\"n\">hx&#39;</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">refine</span> <span class=\"bp\">⟨</span><span class=\"n\">univ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"err\">𝓝</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">univ_sets</span><span class=\"o\">,</span> <span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">mem_principal_self</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">),</span> <span class=\"bp\">_⟩</span><span class=\"o\">,</span>\n      <span class=\"n\">intros</span> <span class=\"n\">y</span> <span class=\"n\">hy</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">hx&#39;</span> <span class=\"n\">at</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"n\">lt_of_lt_of_le</span> <span class=\"n\">hp</span> <span class=\"o\">(</span><span class=\"n\">h_mono</span><span class=\"bp\">.</span><span class=\"n\">monotone_incr_on</span> <span class=\"n\">a</span> <span class=\"n\">ha</span> <span class=\"n\">y</span> <span class=\"n\">hy</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">hy</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"n\">hmax</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"n\">p</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"err\">∈</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">),</span>\n      <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">max_le_iff</span><span class=\"o\">,</span> <span class=\"n\">le_max_iff</span><span class=\"o\">,</span> <span class=\"n\">mem_Icc</span><span class=\"o\">],</span>\n        <span class=\"n\">refine</span> <span class=\"bp\">⟨</span><span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inr</span> <span class=\"o\">(</span><span class=\"n\">le_refl</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)),</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">h_mono</span><span class=\"bp\">.</span><span class=\"n\">monotone_incr_on</span> <span class=\"n\">a</span> <span class=\"n\">ha</span> <span class=\"n\">b</span> <span class=\"n\">hb</span> <span class=\"n\">hab</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n        <span class=\"n\">refine</span> <span class=\"n\">le_of_lt</span> <span class=\"o\">(</span><span class=\"n\">lt_of_lt_of_le</span> <span class=\"n\">hp</span> <span class=\"bp\">_</span><span class=\"o\">),</span>\n        <span class=\"n\">exact</span> <span class=\"n\">h_mono</span><span class=\"bp\">.</span><span class=\"n\">monotone_incr_on</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">b</span> <span class=\"n\">hb</span> <span class=\"n\">hx</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">},</span>\n      <span class=\"n\">rcases</span> <span class=\"n\">h_surj</span> <span class=\"n\">hmax</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">hfy</span><span class=\"bp\">⟩⟩</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">eventually_iff_exists_mem</span><span class=\"o\">],</span>\n      <span class=\"n\">refine</span> <span class=\"bp\">⟨</span><span class=\"n\">Ioc</span> <span class=\"n\">y</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"bp\">_⟩</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span> <span class=\"n\">refine</span> <span class=\"n\">Ioc_mem_nhds_within_Icc</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n        <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n          <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">hfy</span><span class=\"o\">,</span>\n            <span class=\"n\">refine</span> <span class=\"n\">max_lt</span> <span class=\"n\">hp</span> <span class=\"o\">(</span><span class=\"n\">h_mono</span> <span class=\"n\">a</span> <span class=\"n\">ha</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"bp\">_</span><span class=\"o\">),</span>\n            <span class=\"n\">exact</span> <span class=\"n\">lt_of_le_of_ne</span> <span class=\"n\">hx</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">ne</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"n\">hx&#39;</span><span class=\"o\">)</span> <span class=\"o\">},</span>\n          <span class=\"n\">by_contradiction</span> <span class=\"n\">hxy</span><span class=\"o\">,</span>\n          <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">not_lt</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"o\">(</span><span class=\"n\">h_mono</span><span class=\"bp\">.</span><span class=\"n\">monotone_incr_on</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">y</span> <span class=\"n\">hy</span> <span class=\"o\">(</span><span class=\"n\">not_lt</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"n\">hxy</span><span class=\"o\">)),</span>\n          <span class=\"n\">contradiction</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n      <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">z</span> <span class=\"n\">hz&#39;&#39;</span><span class=\"o\">,</span>\n        <span class=\"k\">have</span> <span class=\"n\">hz&#39;</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">z</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">lt_of_le_of_lt</span> <span class=\"n\">hy</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">hz&#39;&#39;</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">),</span>\n        <span class=\"k\">have</span> <span class=\"n\">hz</span> <span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"err\">∈</span> <span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">le_of_lt</span> <span class=\"n\">hz&#39;</span><span class=\"o\">,</span> <span class=\"n\">hz&#39;&#39;</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n        <span class=\"n\">by_cases</span> <span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n        <span class=\"o\">{</span> <span class=\"n\">refine</span> <span class=\"n\">lt_trans</span> <span class=\"n\">hp</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n          <span class=\"n\">exact</span> <span class=\"n\">h_mono</span> <span class=\"n\">a</span> <span class=\"n\">ha</span> <span class=\"n\">z</span> <span class=\"n\">hz</span> <span class=\"n\">hz&#39;</span> <span class=\"o\">},</span>\n        <span class=\"o\">{</span> <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n          <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">max_eq_left</span> <span class=\"n\">hp</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">hfy</span><span class=\"o\">],</span>\n          <span class=\"n\">exact</span> <span class=\"n\">h_mono</span> <span class=\"n\">y</span> <span class=\"n\">hy</span> <span class=\"n\">z</span> <span class=\"n\">hz</span> <span class=\"n\">hz&#39;&#39;</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">}</span> <span class=\"o\">}</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"c1\">-- the same again, but with opposite inequalities!</span>\n    <span class=\"n\">sorry</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>Can someone suggest some hints for golfing?</p>",
        "id": 205411918,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1596055815
    },
    {
        "content": "<p>Perhaps in particular, how do I use <code>order_dual</code> to flip all the inequalities in a lemma?</p>",
        "id": 205440772,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1596083209
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Order.20topology/near/205440772\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">-- the same again, but with opposite inequalities!</span>\n</code></pre></div>\n\n\n</blockquote>\n<p>I think this means that you need to factor out a lemma which you can then apply to <code>\\a</code> and <code>order_dual \\a</code>.</p>",
        "id": 205444096,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1596088128
    },
    {
        "content": "<p>BTW, you don't need <code>a ≤ b</code> in this lemma. Otherwise <code>Icc a b</code> is empty, and every function is continuous on the empty set.</p>",
        "id": 205444240,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596088414
    },
    {
        "content": "<p>I'll try to golf the proof in a few minutes.</p>",
        "id": 205444300,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596088481
    },
    {
        "content": "<p>/me should more carefully review PRs.</p>",
        "id": 205445376,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596090100
    },
    {
        "content": "<p>Try this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology</span><span class=\"bp\">.</span><span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">ordered</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">ι</span> <span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">set</span> <span class=\"n\">filter</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"n\">def</span> <span class=\"n\">mono_incr_on</span> <span class=\"o\">[</span><span class=\"n\">has_le</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_le</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"n\">t</span><span class=\"o\">),</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">y</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">strict_mono_incr_on</span><span class=\"bp\">.</span><span class=\"n\">mono_incr_on</span> <span class=\"o\">[</span><span class=\"n\">partial_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">strict_mono_incr_on</span> <span class=\"n\">f</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">mono_incr_on</span> <span class=\"n\">f</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">y</span> <span class=\"n\">hy</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">eq_or_lt_of_le</span> <span class=\"n\">hxy</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">h</span> <span class=\"bp\">▸</span> <span class=\"n\">le_refl</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"n\">le_of_lt</span> <span class=\"err\">$</span> <span class=\"n\">h</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">y</span> <span class=\"n\">hy</span> <span class=\"n\">hxy</span><span class=\"o\">)</span>\n\n<span class=\"kn\">variables</span>\n  <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">ι</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">linear_order</span> <span class=\"n\">ι</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_topology</span> <span class=\"n\">ι</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">order_topology</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">continuous_right_of_strict_mono_surjective</span>\n  <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h_mono</span> <span class=\"o\">:</span> <span class=\"n\">strict_mono_incr_on</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">h_surj</span> <span class=\"o\">:</span> <span class=\"n\">surj_on</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">)))</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">nhds_within</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">Ici</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">nhds_within</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Ici</span> <span class=\"err\">$</span> <span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">hab&#39;</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">le_of_lt</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">left_mem_Icc</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">hab&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"err\">∈</span> <span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">right_mem_Icc</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">hab&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hfab</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">h_mono</span> <span class=\"n\">a</span> <span class=\"n\">ha</span> <span class=\"n\">b</span> <span class=\"n\">hb</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">s</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n  <span class=\"k\">obtain</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">hys</span><span class=\"bp\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"n\">Ioc</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">),</span> <span class=\"n\">Ico</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"n\">y</span> <span class=\"err\">⊆</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n    <span class=\"o\">(</span><span class=\"n\">mem_nhds_within_Ici_iff_exists_mem_Ioc_Ico_subset</span> <span class=\"n\">hfab</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n  <span class=\"n\">refine</span> <span class=\"n\">mem_sets_of_superset</span> <span class=\"o\">(</span><span class=\"n\">mem_map</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"n\">hys</span><span class=\"o\">,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h_surj</span> <span class=\"o\">(</span><span class=\"n\">Ioc_subset_Icc_self</span> <span class=\"n\">hy</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">eq_or_lt_of_le</span> <span class=\"n\">hx</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"k\">with</span> <span class=\"n\">rfl</span><span class=\"bp\">|</span><span class=\"n\">hax</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">lt_irrefl</span> <span class=\"bp\">_</span> <span class=\"n\">hy</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"o\">},</span>\n  <span class=\"n\">refine</span> <span class=\"n\">mem_sets_of_superset</span> <span class=\"o\">(</span><span class=\"n\">Ico_mem_nhds_within_Ici</span> <span class=\"o\">(</span><span class=\"n\">left_mem_Ico</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">hax</span><span class=\"o\">))</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">z</span> <span class=\"n\">hz</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hz&#39;</span> <span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"err\">∈</span> <span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">hz</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">hz</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">hx</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"bp\">⟨</span><span class=\"n\">h_mono</span><span class=\"bp\">.</span><span class=\"n\">mono_incr_on</span> <span class=\"bp\">_</span> <span class=\"n\">ha</span> <span class=\"bp\">_</span> <span class=\"n\">hz&#39;</span> <span class=\"n\">hz</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">h_mono</span> <span class=\"bp\">_</span> <span class=\"n\">hz&#39;</span> <span class=\"bp\">_</span> <span class=\"n\">hx</span> <span class=\"n\">hz</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">⟩</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">continuous_left_of_strict_mono_surjective</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h_mono</span> <span class=\"o\">:</span> <span class=\"n\">strict_mono_incr_on</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">h_surj</span> <span class=\"o\">:</span> <span class=\"n\">surj_on</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">)))</span> <span class=\"o\">:</span>\n  <span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">nhds_within</span> <span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"n\">Iic</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">nhds_within</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Iic</span> <span class=\"err\">$</span> <span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"bp\">@</span><span class=\"n\">continuous_right_of_strict_mono_surjective</span> <span class=\"o\">(</span><span class=\"n\">order_dual</span> <span class=\"n\">ι</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">order_dual</span> <span class=\"n\">α</span><span class=\"o\">),</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">hab</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">dual_Icc</span><span class=\"o\">],</span>\n    <span class=\"n\">exact</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">y</span> <span class=\"n\">hy</span> <span class=\"n\">hxy</span><span class=\"o\">,</span> <span class=\"n\">h_mono</span> <span class=\"n\">y</span> <span class=\"n\">hy</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">hxy</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">dual_Icc</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>it needs a fix to <code>src/topology/algebra/ordered.lean</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gu\">@@ -1111,13 +1111,13 @@ lemma Ioc_mem_nhds_within_Ici {a b c : α} (H : b ∈ Ioo a c) :</span>\n   Ioc a c ∈ nhds_within b (Ici b) :=\n mem_sets_of_superset (Ioo_mem_nhds_within_Ici H) Ioo_subset_Ioc_self\n\n<span class=\"gd\">-lemma Ico_mem_nhds_within_Ici {a b c : α} (H : b ∈ Ioo a c) :</span>\n<span class=\"gi\">+lemma Ico_mem_nhds_within_Ici {a b c : α} (H : b ∈ Ico a c) :</span>\n   Ico a c ∈ nhds_within b (Ici b) :=\n<span class=\"gd\">-mem_sets_of_superset (Ioo_mem_nhds_within_Ici H) Ioo_subset_Ico_self</span>\n<span class=\"gi\">+(mem_nhds_within_Ici_iff_exists_Ico_subset&#39; H.2).2 ⟨c, H.2, Ico_subset_Ico_left H.1⟩</span>\n\n<span class=\"gd\">-lemma Icc_mem_nhds_within_Ici {a b c : α} (H : b ∈ Ioo a c) :</span>\n<span class=\"gi\">+lemma Icc_mem_nhds_within_Ici {a b c : α} (H : b ∈ Ico a c) :</span>\n   Icc a c ∈ nhds_within b (Ici b) :=\n<span class=\"gd\">-mem_sets_of_superset (Ioo_mem_nhds_within_Ici H) Ioo_subset_Icc_self</span>\n<span class=\"gi\">+mem_sets_of_superset (Ico_mem_nhds_within_Ici H) Ico_subset_Icc_self</span>\n\n /-- The following statements are equivalent:\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code>\n</code></pre></div>",
        "id": 205446042,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596091121
    },
    {
        "content": "<p>You still need to consider cases <code>x = a</code>, <code>a &lt; x &lt; b</code>, and <code>x = b</code> in the main statement. In case <code>a &lt; x &lt; b</code> you'll also need a statement \"continuous on the left → continuous on the right → continuous at\".</p>",
        "id": 205446148,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596091306
    },
    {
        "content": "<p>I remember reviewing a PR with something similar very recently (as a preparation to l'Hopital's rule).</p>",
        "id": 205446197,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596091349
    },
    {
        "content": "<p>I'll PR a better fix tonight.</p>",
        "id": 205446661,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596091969
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/3629\">#3629</a> fixes <code>I??_mem_nhds_within_I??</code>.</p>",
        "id": 205449774,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596094949
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/Order.20topology/near/205446148\">said</a>:</p>\n<blockquote>\n<p>you'll also need a statement \"continuous on the left → continuous on the right → continuous at\".</p>\n</blockquote>\n<p><a href=\"https://github.com/leanprover-community/mathlib/pull/3590/files#diff-69913e770559c1df859d4767801aa0e0R2221\">https://github.com/leanprover-community/mathlib/pull/3590/files#diff-69913e770559c1df859d4767801aa0e0R2221</a></p>",
        "id": 205470959,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1596111695
    },
    {
        "content": "<p>I just commented on that PR</p>",
        "id": 205472300,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1596112486
    },
    {
        "content": "<p>Thank you very much <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>, I learned a lot from this.  I'll PR it with you as co-author after <span class=\"user-mention\" data-user-id=\"268315\">@Anatole Dedecker</span>'s lemma is merged.</p>",
        "id": 205481956,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1596117794
    },
    {
        "content": "<p>BTW, a fact I'd love to have in <code>mathlib</code> (and it should easily follow from your lemmas): for two <code>conditionally_complete_linear_order</code>s, <code>order_iso</code> is a <code>homeomorph</code>, and a <code>homeomorph</code> is either an order-preserving or an order-reversing <code>order_iso</code>.</p>",
        "id": 205482328,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596117971
    },
    {
        "content": "<p>Yep.  My goal with this was a related lemma:  between closed intervals in the reals (or probably, a <code>conditionally_complete_linear_order</code> once I look up the definition), a continuous strictly increasing function has a continuous inverse.</p>",
        "id": 205482466,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1596118065
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/3843\">#3843</a></p>",
        "id": 207183261,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1597690657
    }
]