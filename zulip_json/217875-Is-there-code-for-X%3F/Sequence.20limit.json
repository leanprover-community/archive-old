[
    {
        "content": "<p>Do we have this limit computed anywhere?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.metric_space.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.pow</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">filter</span> <span class=\"n\">topological_space</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hC0</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">filter.tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">C</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)))</span> <span class=\"n\">filter.at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 278317184,
        "sender_full_name": "Mar√≠a In√©s de Frutos Fern√°ndez",
        "timestamp": 1649430178
    },
    {
        "content": "<p>Is it not simply <code>1 / (n : ‚Ñù)</code> tending to <code>0</code> once you've pulled the <code>C ^</code> out of the <code>tendsto</code> via continuity?</p>",
        "id": 278318547,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1649430809
    },
    {
        "content": "<p>I guess you can prove it with sequential continuity:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hC0</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">filter.tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">C</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)))</span> <span class=\"n\">filter.at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">real.rpow_zero</span> <span class=\"o\">:</span> <span class=\"bp\">ùìù</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"bp\">ùìù</span> <span class=\"o\">(</span><span class=\"n\">C</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">))),</span>\n  <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">continuous_iff_continuous_at.2</span>\n    <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">real.continuous_at_const_rpow</span> <span class=\"n\">hC0.ne.symm</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_sequentially_continuous</span> <span class=\"n\">_</span>\n    <span class=\"o\">(</span><span class=\"n\">tendsto_const_div_at_top_nhds_0_nat</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 278321896,
        "sender_full_name": "Jason KY.",
        "timestamp": 1649432356
    },
    {
        "content": "<p>I should have asked this in new members; I don't know how to move it there now. I ended up with this proof:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.metric_space.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.pow</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">filter</span> <span class=\"n\">topological_space</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hC</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">filter.tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñï</span><span class=\"o\">,</span> <span class=\"n\">C</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)))</span> <span class=\"n\">filter.at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">filter.tendsto.comp</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">tendsto_const_div_at_top_nhds_0_nat</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">‚Üê</span> <span class=\"n\">real.rpow_zero</span> <span class=\"n\">C</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">continuous_at.tendsto</span> <span class=\"o\">(</span><span class=\"n\">real.continuous_at_const_rpow</span> <span class=\"o\">(</span><span class=\"n\">ne_of_gt</span> <span class=\"n\">hC</span><span class=\"o\">)),</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 278322157,
        "sender_full_name": "Mar√≠a In√©s de Frutos Fern√°ndez",
        "timestamp": 1649432465
    }
]