[
    {
        "content": "<p>I'm assuming this is true?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">category_theory.abelian.basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">category_theory</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">epi_of_comp_epi_of_mono</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">category</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">abelian</span> <span class=\"n\">V</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"n\">V</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">⟶</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"bp\">⟶</span> <span class=\"n\">C</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">epi</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">≫</span> <span class=\"n\">g</span><span class=\"o\">)]</span> <span class=\"o\">[</span><span class=\"n\">mono</span> <span class=\"n\">g</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">epi</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I can't see a \"low-level\" approach (maybe I'm missing something). In my model example of an abelian category, namely abelian groups, the issue is that there exist non-split monics, which stop a nice three-line proof from going through. If you just imagine everything as being concrete, and <code>epi</code> being <code>surjective</code> etc, then it's a simple diagram chase. This makes me think that it might be the sort of thing which is trivial with pseudoelements. <span class=\"user-mention\" data-user-id=\"260921\">@Markus Himmel</span> am I right? I've never used pseudoelements before.</p>",
        "id": 285030806,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654426741
    },
    {
        "content": "<p>I think this is called <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.epi_of_epi\">docs#category_theory.epi_of_epi</a></p>",
        "id": 285031358,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654427564
    },
    {
        "content": "<p>Oh no not quite.</p>",
        "id": 285031364,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654427588
    },
    {
        "content": "<p>I think it's deeper. It might well not be true in general, although abelian is probably overkill.</p>",
        "id": 285031374,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654427625
    },
    {
        "content": "<p>Using <code>epi_of_epi</code>, <code>g</code> is <code>epi</code> as well as <code>mono</code>, so since you're in a balanced category you can cancel it</p>",
        "id": 285031420,
        "sender_full_name": "Reid Barton",
        "timestamp": 1654427655
    },
    {
        "content": "<p>Excellent, thanks!</p>",
        "id": 285031428,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654427690
    },
    {
        "content": "<p>(We have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.is_iso_of_mono_of_epi\">docs#category_theory.is_iso_of_mono_of_epi</a> for that last step)</p>",
        "id": 285031448,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654427729
    },
    {
        "content": "<p>(and cancelling isos in statements about epis is something I built yesterday)</p>",
        "id": 285032227,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654428902
    },
    {
        "content": "<p>no that's not it.</p>",
        "id": 285032497,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654429270
    },
    {
        "content": "<p>I'm quite sure we have that in mathlib as well..</p>",
        "id": 285032524,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1654429314
    },
    {
        "content": "<p>(just to be clear, I have a proof of this now which I just pushed to LTE, but it relies on stuff which isn't in mathlib)</p>",
        "id": 285033030,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654430044
    }
]