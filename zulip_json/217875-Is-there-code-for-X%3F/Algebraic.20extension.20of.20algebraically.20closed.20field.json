[
    {
        "content": "<p>I've started looking at what is needed to eventually derive the classical nullstellensatz from <a href=\"https://github.com/leanprover-community/mathlib/issues/4962\">#4962</a> and one thing that seems to be missing from mathlib is that an integral/algebraic extension of an algebraically closed field is surjective. Something like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_alg_closed</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">S</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">→+*</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">f.is_integral</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">function.surjective</span> <span class=\"n\">f</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">hp</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">hf</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I can't find anything giving this in mathlib, and trying to prove it myself I ran into trouble trying to get a particular linear factor corresponding to a particular root of <code>p</code>.</p>",
        "id": 218778149,
        "sender_full_name": "Devon Tuma",
        "timestamp": 1607045654
    },
    {
        "content": "<p>I don't think the statement you have is true is it? <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"bold\">C</mi><mo>↪</mo><mi mathvariant=\"bold\">C</mi><mo stretchy=\"false\">[</mo><mi>ϵ</mi><mo stretchy=\"false\">]</mo><mi mathvariant=\"normal\">/</mi><msup><mi>ϵ</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\"> \\mathbf C \\hookrightarrow \\mathbf C [\\epsilon]/ \\epsilon^2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69711em;vertical-align:-0.011em;\"></span><span class=\"mord mathbf\">C</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↪</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathbf\">C</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">ϵ</span><span class=\"mclose\">]</span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord mathnormal\">ϵ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> is integral but the map isn't surjective</p>",
        "id": 218778716,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1607046357
    },
    {
        "content": "<p>Ah, then there should probably also be an assumption that the extension is finite, however that is expressed in mathlib.</p>",
        "id": 218778916,
        "sender_full_name": "Devon Tuma",
        "timestamp": 1607046503
    },
    {
        "content": "<p>It is finite</p>",
        "id": 218778933,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1607046532
    },
    {
        "content": "<p>Maybe my mistake is expecting the original map to give the isomorphism? An algebraically closed field has no proper algebraic extensions, but the map giving the isomorphism isn't necessarilly the original map?</p>",
        "id": 218779398,
        "sender_full_name": "Devon Tuma",
        "timestamp": 1607046949
    },
    {
        "content": "<p>You want the algebra to be a domain</p>",
        "id": 218779448,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607046966
    },
    {
        "content": "<p>Yes, I only really need the case where the algebraic extension is <code>R[x]/M</code> for a maximal ideal <code>M</code>, in which case its a domain</p>",
        "id": 218779600,
        "sender_full_name": "Devon Tuma",
        "timestamp": 1607047133
    }
]