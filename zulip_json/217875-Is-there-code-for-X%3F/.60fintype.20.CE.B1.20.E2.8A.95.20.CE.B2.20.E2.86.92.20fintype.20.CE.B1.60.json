[
    {
        "content": "<p>i was trying to define something like this, but I cannot think of anything better than <code>fintype.of_injective sum.inl</code>, which is non-comp. what other instances do we need to make a computable <del>instance</del> def of this?</p>",
        "id": 240399307,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622067671
    },
    {
        "content": "<p>This isn't appropriate as an instance as we already have an instance in the other direction</p>",
        "id": 240400425,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622068531
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/sum.fintype\">docs#sum.fintype</a></p>",
        "id": 240400495,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622068564
    },
    {
        "content": "<p>not as an instance, as a <code>def</code>, sorry</p>",
        "id": 240400635,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622068655
    },
    {
        "content": "<p>Ah, thanks for clarifying</p>",
        "id": 240400675,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622068682
    },
    {
        "content": "<p>Why do you want this other direction?</p>",
        "id": 240400723,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622068693
    },
    {
        "content": "<p>i'm trying to bring the sphere-eversion repo up-to-date with the <code>is_basis</code> refactor</p>",
        "id": 240400815,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622068766
    },
    {
        "content": "<p>and they use it <a href=\"https://github.com/leanprover-community/sphere-eversion/blob/master/src/loops/convexity.lean#L137\">here</a> implicitly</p>",
        "id": 240400833,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622068781
    },
    {
        "content": "<p>however now <code>ι</code> isn't explicit, and so you get a horrific term trying to write out that cast manually</p>",
        "id": 240400900,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622068810
    },
    {
        "content": "<p>fintype.of_equiv combined with something like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.of_left_inverse\">docs#equiv.of_left_inverse</a> should do the trick I think</p>",
        "id": 240401221,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622069056
    },
    {
        "content": "<p>But I suspect the <code>fintype α ⊕ β</code> instance you started off with was already noncomputable, so finding a complete way to extract <code>fintype α</code> is pointless</p>",
        "id": 240401392,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622069183
    },
    {
        "content": "<p>yeah no the non-comp isn't for this, just thought it'd be nice to do it computably for mathlib</p>",
        "id": 240401577,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622069345
    },
    {
        "content": "<p>My hunch would be that \"backwards instances\" like this only turn up when you obtained the complex instance non-computably</p>",
        "id": 240402018,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1622069658
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"284160\">Eric Rodriguez</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/.60fintype.20.CE.B1.20.E2.8A.95.20.CE.B2.20.E2.86.92.20fintype.20.CE.B1.60/near/240400815\">said</a>:</p>\n<blockquote>\n<p>i'm trying to bring the sphere-eversion repo up-to-date with the <code>is_basis</code> refactor</p>\n</blockquote>\n<p>Thank you so much for doing that! As you can see, I haven't been working on the project recently because I've been distracted by the liquid tensor experiment. But now the first target of LTE is almost done and I should definitely come back to the sphere eversion project. Any help is very much appreciated, especially in linear algebra and affine geometry.</p>",
        "id": 240521493,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1622144938
    },
    {
        "content": "<p>No worries - it was really interesting! Hopefully as soon as my exams are over I'll manage to prove a new thing or two :)</p>",
        "id": 240528673,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622148252
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/7736\">#7736</a> for this, although I did actually make it noncomp in the end; the computable way seems to me like a huge hassle.</p>",
        "id": 240599783,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1622206574
    }
]