[
    {
        "content": "<p>Do we have the category of sheaf (on site/on topological space) is an abelian category</p>",
        "id": 276166525,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1647944358
    },
    {
        "content": "<p>We have it over at LTE <a href=\"https://github.com/leanprover-community/lean-liquid/blob/master/src/for_mathlib/abelian_sheaves/main.lean\">here</a>. Not sure if it is in mathlib yet.</p>",
        "id": 276167824,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1647945093
    },
    {
        "content": "<p>Nice! I don't think it is in mathlib yet. I will try to port it in mathlib after I finish porting Proj in mathlib if anyone hasn't done this by that time.</p>",
        "id": 276170759,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1647946722
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252627\">Jujian Zhang</span> has marked this topic as resolved.</p>",
        "id": 276170764,
        "sender_full_name": "Notification Bot",
        "timestamp": 1647946724
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252627\">@Jujian Zhang</span> I've been meaning to port that result to mathlib, but I've been busy with other stuff...<br>\nMaybe I can explain how the argument goes and how I think it should be ported to mathlib:</p>\n<ol>\n<li>We use <a href=\"https://stacks.math.columbia.edu/tag/0109\">https://stacks.math.columbia.edu/tag/0109</a> as the definition, so a constructor for <code>abelian</code> is needed following that definition. This is done in LTE's <code>for_mathlib/abelian_of_isom_thm.lean</code>. This should be fairly low hanging fruit in terms of porting to mathlib.</li>\n<li>Next, show that functors taking values in an abelian category is abelian, see <code>for_mathlib/abelian_sheaves/functor_category.lean</code>.</li>\n<li>We then use a special case of the following lemma: <a href=\"https://stacks.math.columbia.edu/tag/03A3\">stacks#03A3</a> . In LTE I only did this for the sheafification adjunction, but it would be worthwhile to have the lemma as stated in the stacks project in mathlib.<br>\nThis is essentially what's needed to carry out the proof of <a href=\"https://stacks.math.columbia.edu/tag/03CN\">stacks#03CN</a> showing that sheaves taking values in a sufficiently concrete abelian category is abelian.</li>\n</ol>",
        "id": 276174545,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647948896
    },
    {
        "content": "<p>Thank you for the instruction. Do you mind if I ask you more question if I find some part difficult to follow when (if) I port this part to mathlib?</p>",
        "id": 276176078,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1647949707
    },
    {
        "content": "<p>Yes of course!</p>",
        "id": 276176129,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647949740
    },
    {
        "content": "<p>(I mean, I don't mind at all!)</p>",
        "id": 276176184,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647949769
    },
    {
        "content": "<p>I've been making an attempt at <a href=\"https://stacks.math.columbia.edu/tag/03A3\">stacks#03A3</a> on <a href=\"https://github.com/leanprover-community/mathlib/tree/semorrison/03A3\">branch#semorrison/03A3</a>. Not quite there yet, but the framework is set up and there are 6 sorries remaining. If anyone wants to work on it please feel free to push commits.</p>",
        "id": 276944194,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1648511716
    },
    {
        "content": "<p>This is now a PR at <a href=\"https://github.com/leanprover-community/mathlib/pull/13059\">#13059</a>.</p>",
        "id": 277117617,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1648632862
    },
    {
        "content": "<p>Is there a name for a pair of adjoint functors a and b such that ba=id? This is like Galois insertion v Galois connection, right?</p>",
        "id": 277134339,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648642545
    },
    {
        "content": "<p>Reflective subcategory/localization?</p>",
        "id": 277134602,
        "sender_full_name": "Reid Barton",
        "timestamp": 1648642670
    },
    {
        "content": "<p>Abelian-ness is exactness for additive categories, and this is saying that a left exact localization preserves exactness</p>",
        "id": 277134707,
        "sender_full_name": "Reid Barton",
        "timestamp": 1648642712
    },
    {
        "content": "<p>except I'm not exactly sure about the hypotheses, is it really that there is some random isomorphism <code>ba = id</code>?</p>",
        "id": 277134835,
        "sender_full_name": "Reid Barton",
        "timestamp": 1648642778
    },
    {
        "content": "<p>There is already a map <code>ba -&gt; id</code> (the counit) and the usual hypothesis would be that this map is an isomorphism</p>",
        "id": 277135272,
        "sender_full_name": "Reid Barton",
        "timestamp": 1648642960
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/yNjYntGsoiiMB4zSrU6LxV2b/id.png\">id.png</a> At the point where it's used it seems to have been upgraded to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mi>a</mi><mo>=</mo><mrow><mi mathvariant=\"normal\">I</mi><mi mathvariant=\"normal\">d</mi></mrow></mrow><annotation encoding=\"application/x-tex\">ba=\\mathrm{Id}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">ba</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\"><span class=\"mord mathrm\">Id</span></span></span></span></span>.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/yNjYntGsoiiMB4zSrU6LxV2b/id.png\" title=\"id.png\"><img src=\"/user_uploads/3121/yNjYntGsoiiMB4zSrU6LxV2b/id.png\"></a></div>",
        "id": 277136445,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648643521
    },
    {
        "content": "<p>But in Scott's code it seems to just be an isomorphism, nothing to do with the counit. So is this a strictly stronger statement than Reid's observation that left exact localization preserves exactness? Or is there some theorem of the form \"if ba is isomorphic to the identity then the counit must be an isomorphism\"?</p>",
        "id": 277136822,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648643702
    },
    {
        "content": "<p>Yes, sometimes there are theorems like that--not sure whether this is an instance</p>",
        "id": 277136994,
        "sender_full_name": "Reid Barton",
        "timestamp": 1648643782
    },
    {
        "content": "<p>See just before <a href=\"https://ncatlab.org/nlab/show/adjoint+functor#PointwiseExpression\">https://ncatlab.org/nlab/show/adjoint+functor#PointwiseExpression</a></p>",
        "id": 277138560,
        "sender_full_name": "Reid Barton",
        "timestamp": 1648644594
    },
    {
        "content": "<p>&amp; then <a href=\"https://ncatlab.org/nlab/show/reflective+subcategory#characterizations\">https://ncatlab.org/nlab/show/reflective+subcategory#characterizations</a></p>",
        "id": 277138632,
        "sender_full_name": "Reid Barton",
        "timestamp": 1648644608
    },
    {
        "content": "<p>I think this one is true - Lemma A1.1.1 from the elephant says that if there is any natural iso between ba and id, then the adjunction is reflective</p>",
        "id": 277177997,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1648660572
    },
    {
        "content": "<p>OK so sanity is restored. Thanks Bhavik.</p>",
        "id": 277178723,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648660916
    },
    {
        "content": "<p>Yes, I was worried about this just being any random iso, and was quite surprised when the calculation worked out fine with just ext and simp.</p>",
        "id": 277201512,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1648672887
    },
    {
        "content": "<p>Presumably I should refactor this to use the word reflective somewhere!</p>",
        "id": 277201543,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1648672908
    },
    {
        "content": "<p>I added a note explaining the relevance Lemma A1.1.1, but don't plan to make use of this in this PR.</p>",
        "id": 277214663,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1648682070
    },
    {
        "content": "<p>Hmmm, I realised I know Lemma A1.1.1 in its 2-categorical string diagram form well, but failed to notice its specialisation here. It would be a fun test of our 2-categorical development to prove it in that context, and deduce the result about adjunctions as a consequence.</p>",
        "id": 277226338,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1648694402
    }
]