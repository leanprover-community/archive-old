[
    {
        "content": "<p>I'm looking for a category instance on a Sigma type given a category instance on the base... something like this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">category_theory</span><span class=\"bp\">.</span><span class=\"n\">category</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">category_theory</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">C</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">category</span> <span class=\"n\">C</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">C</span> <span class=\"bp\">‚Üí</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">category</span> <span class=\"o\">(</span><span class=\"err\">Œ£</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">C</span><span class=\"o\">),</span> <span class=\"n\">T</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">hom</span> <span class=\"o\">:=</span> <span class=\"bp\">Œª</span> <span class=\"n\">X</span> <span class=\"n\">Y</span><span class=\"o\">,</span> <span class=\"n\">X</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"err\">‚ü∂</span> <span class=\"n\">Y</span><span class=\"bp\">.</span><span class=\"n\">fst</span><span class=\"o\">,</span>\n  <span class=\"n\">id</span> <span class=\"o\">:=</span> <span class=\"bp\">Œª</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"mi\">ùüô</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">comp</span> <span class=\"o\">:=</span> <span class=\"bp\">Œª</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"err\">‚â´</span> <span class=\"n\">g</span> <span class=\"o\">}</span>\n</code></pre></div>\n\n\n<p>Does mathlib have something like this? (<code>apply_instance</code> does not work).</p>",
        "id": 207906054,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598309005
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.induced_category\">docs#category_theory.induced_category</a>, nothing special for Sigma</p>",
        "id": 207906994,
        "sender_full_name": "Reid Barton",
        "timestamp": 1598309879
    },
    {
        "content": "<p>Thanks! (I probably should have looked at the definition of the full subcategory, which uses this <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span>Ô∏è)</p>",
        "id": 207907689,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598310364
    }
]