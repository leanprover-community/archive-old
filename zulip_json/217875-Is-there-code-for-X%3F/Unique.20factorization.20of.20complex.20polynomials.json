[
    {
        "content": "<p>Is there a neater way to do this? I feel like there is some missing API.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">field_theory.ratfunc</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.complex.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.complex.polynomial</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">polynomial</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">roots_eq_zero_iff</span> <span class=\"o\">[</span><span class=\"n\">is_alg_closed</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">K</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">p.roots</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">↔</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">polynomial.C</span> <span class=\"o\">(</span><span class=\"n\">p.coeff</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">leading_coeff_div_by_X_sub_C</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">degree</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">leading_coeff</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">/ₘ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">leading_coeff</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">roots_div_X_sub_C</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_domain</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">roots</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">/ₘ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">roots</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">erase</span> <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"c1\">-- any polynomial (over the complexes) can be uniquely expressed as</span>\n<span class=\"c1\">-- P(X) = α(X − α₁)(X − α₂)...(X − αₙ)</span>\n<span class=\"c1\">-- where α, α₁, α₂, ..., αₙ are complex numbers</span>\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">multiset</span> <span class=\"n\">ℂ</span><span class=\"o\">),</span>\n  <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">α</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"n\">f.map</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">polynomial.X</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">polynomial.C</span> <span class=\"n\">a</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">prod</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">hp</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">p.leading_coeff</span><span class=\"o\">,</span> <span class=\"n\">p.roots</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">smul_eq_C_mul</span><span class=\"o\">,</span>\n  <span class=\"n\">induction</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">p.roots</span> <span class=\"n\">using</span> <span class=\"n\">multiset.induction_on</span> <span class=\"k\">with</span> <span class=\"n\">r</span> <span class=\"n\">rs</span> <span class=\"n\">IH</span> <span class=\"n\">generalizing</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">roots_eq_zero_iff</span> <span class=\"n\">at</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"n\">hr</span> <span class=\"o\">:</span> <span class=\"n\">is_root</span> <span class=\"n\">p</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">mem_roots</span> <span class=\"n\">hp</span><span class=\"o\">,</span> <span class=\"n\">f</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n    <span class=\"n\">specialize</span> <span class=\"n\">IH</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">/ₘ</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">-</span> <span class=\"n\">C</span> <span class=\"n\">r</span><span class=\"o\">))</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n      <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">mul_div_by_monic_eq_iff_is_root</span><span class=\"o\">,</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">ne.symm</span> <span class=\"n\">hp</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">hr</span> <span class=\"o\">},</span>\n    <span class=\"k\">have</span> <span class=\"n\">hd</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">degree</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span><span class=\"n\">nat.with_bot.one_le_iff_zero_lt</span><span class=\"o\">,</span>\n      <span class=\"n\">refine</span> <span class=\"n\">le_trans</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">card_roots</span> <span class=\"n\">hp</span><span class=\"o\">),</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">with_bot.coe_one</span><span class=\"o\">,</span> <span class=\"n\">with_bot.coe_le_coe</span><span class=\"o\">,</span> <span class=\"n\">multiset.card_cons</span><span class=\"o\">],</span>\n      <span class=\"n\">exact</span> <span class=\"n\">le_add_self</span> <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">multiset.map_cons</span><span class=\"o\">,</span> <span class=\"n\">multiset.prod_cons</span><span class=\"o\">,</span> <span class=\"n\">mul_left_comm</span><span class=\"o\">,</span> <span class=\"bp\">←</span><span class=\"n\">leading_coeff_div_by_X_sub_C</span> <span class=\"n\">_</span> <span class=\"n\">hd</span> <span class=\"n\">r</span><span class=\"o\">,</span>\n        <span class=\"bp\">←</span><span class=\"n\">IH</span><span class=\"o\">,</span> <span class=\"n\">eq_comm</span><span class=\"o\">,</span> <span class=\"n\">mul_div_by_monic_eq_iff_is_root.mpr</span> <span class=\"n\">hr</span><span class=\"o\">],</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">roots_div_X_sub_C</span><span class=\"o\">,</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">multiset.erase_cons_head</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 266183558,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640621496
    },
    {
        "content": "<p>Perhaps using <code>unique_factorization_monoid.exists_prime_factors</code>, but that is only up to <code>associated</code>.</p>",
        "id": 266183647,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640621537
    },
    {
        "content": "<p>The only sorry I don't have proven here is the <code>roots_div_X_sub_C</code></p>",
        "id": 266183665,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640621560
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.C_leading_coeff_mul_prod_multiset_X_sub_C\">docs#polynomial.C_leading_coeff_mul_prod_multiset_X_sub_C</a> says more or less the same</p>",
        "id": 266184559,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1640622242
    },
    {
        "content": "<p>Using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/polynomial.splits_iff_card_roots\">docs#polynomial.splits_iff_card_roots</a></p>",
        "id": 266184609,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1640622256
    },
    {
        "content": "<p>And of course <a href=\"https://leanprover-community.github.io/mathlib_docs/find/complex.is_alg_closed\">docs#complex.is_alg_closed</a></p>",
        "id": 266184774,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1640622376
    },
    {
        "content": "<p>Aha, you're going through <code>C_leading_coeff_mul_prod_multiset_X_sub_C_of_field</code> and <code>prod_multiset_X_sub_C_of_monic_of_roots_card_eq</code></p>",
        "id": 266185094,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640622625
    },
    {
        "content": "<p>I must have been operating at too low an API level</p>",
        "id": 266185359,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1640622816
    }
]