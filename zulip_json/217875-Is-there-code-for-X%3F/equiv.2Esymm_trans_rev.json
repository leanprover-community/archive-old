[
    {
        "content": "<p>Do we actually not have this? I couldn't find it and nor could <code>library_search</code></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"n\">γ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">e₁</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">≃</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">e₂</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">≃</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">e₁.trans</span> <span class=\"n\">e₂</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">=</span> <span class=\"n\">e₂.symm.trans</span> <span class=\"n\">e₁.symm</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 255195193,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1632825573
    },
    {
        "content": "<p>Do we have it for other equivs?</p>",
        "id": 255196151,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632826123
    },
    {
        "content": "<p><del> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ring_equiv.symm_trans\">docs#ring_equiv.symm_trans</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_equiv.symm_trans\">docs#linear_equiv.symm_trans</a> maybe?</del></p>",
        "id": 255196192,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632826149
    }
]