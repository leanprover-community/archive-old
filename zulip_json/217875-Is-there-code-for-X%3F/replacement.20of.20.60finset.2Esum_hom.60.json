[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.polynomial</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">K</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_domain</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">A</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">:</span><span class=\"n\">polynomial</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span><span class=\"o\">:</span><span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">d</span><span class=\"o\">:</span> <span class=\"n\">K</span><span class=\"o\">):</span>\n  <span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">p.support.sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">A</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">p.coeff</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">p.support.sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">A</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"n\">p.coeff</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n<span class=\"c1\">-- Old proof: (polynomial.support p).sum_hom(has_mul.mul d)</span>\n</code></pre></div>\n<p>I did some calculations with polynomials about a year ago and I used <code>finset.sum_hom</code>. Now I updated mathlib and it is gone, could you help me finding what the replacement would be? Is there a neat way to search old versions of mathlib or would I have to dig manually into the git-tree?</p>",
        "id": 271762491,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1644782487
    },
    {
        "content": "<p>Is it <a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_monoid_hom.map_sum\">docs#add_monoid_hom.map_sum</a> by any chance?</p>",
        "id": 271762603,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644782641
    },
    {
        "content": "<p>Have you tried <code>library_search</code>?</p>",
        "id": 271763102,
        "sender_full_name": "Reid Barton",
        "timestamp": 1644783321
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/replacement.20of.20.60finset.2Esum_hom.60/near/271762603\">said</a>:</p>\n<blockquote>\n<p>Is it <a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_monoid_hom.map_sum\">docs#add_monoid_hom.map_sum</a> by any chance?</p>\n</blockquote>\n<p>Yes, I think that's almost it, thanks! Now I just have some problems actually using it, hmm...</p>",
        "id": 271764083,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1644784562
    },
    {
        "content": "<p>This lemma is soon getting refactoring as part of the hom refactor. Maybe your problem is related?</p>",
        "id": 271764151,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644784643
    },
    {
        "content": "<p>You'll need to use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_monoid_hom.mul_left\">docs#add_monoid_hom.mul_left</a> btw</p>",
        "id": 271764238,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644784710
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.big_operators</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.polynomial</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">K</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_domain</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">A</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">:</span><span class=\"n\">polynomial</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span><span class=\"o\">:</span><span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">d</span><span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">):</span>\n  <span class=\"bp\">↑</span><span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">p.support.sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">y</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">p.support.sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">↑</span><span class=\"n\">d</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">add_monoid_hom.map_sum</span> <span class=\"o\">(</span><span class=\"n\">add_monoid_hom.mul_left</span> <span class=\"o\">(</span><span class=\"n\">d</span><span class=\"o\">:</span><span class=\"n\">K</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"bp\">λ</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">y</span> <span class=\"bp\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">p.support</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>Thank you Yaël, that worked!</p>",
        "id": 271764523,
        "sender_full_name": "Jon Eugster",
        "timestamp": 1644785072
    }
]