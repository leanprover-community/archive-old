[
    {
        "content": "<p>Do we have the Weierstrass M-test in mathlib? Or maybe in some not yet PR'ed repo? The specific result I want is this: <a href=\"https://en.wikipedia.org/wiki/Weierstrass_M-test\">https://en.wikipedia.org/wiki/Weierstrass_M-test</a></p>",
        "id": 248335012,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1628074600
    },
    {
        "content": "<p>Perhaps you should look for some more general result involving functions taking values in some locally convex normed topological vector space ;-) (this is not a serious comment). I can't find it in the docs even though to be honest this does look like the kind of thing which we will have somewhere, nowadays.</p>",
        "id": 248335512,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1628074935
    },
    {
        "content": "<p>Yes this definitely feels like its something that might already be in mathlib, in the maximum level of generality possible, under a different name.</p>",
        "id": 248337000,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1628075988
    },
    {
        "content": "<p>Why not just prove it and PR it :-) Note that in the Wikipedia page A really is just a random type as opposed to anything with a real or topological structure.</p>",
        "id": 248340133,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1628078303
    },
    {
        "content": "<p>Yes, well I was thinking of doing just that. But I thought I'd first check if being lazy is an option :)</p>",
        "id": 248340523,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1628078576
    },
    {
        "content": "<p>I think it could be -- we just need to wait for someone who knows that part of the library.</p>",
        "id": 248341486,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1628079250
    },
    {
        "content": "<p>Maybe I am misunderstanding, but a combination of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nnreal.summable_of_le\">docs#nnreal.summable_of_le</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/summable.of_abs\">docs#summable.of_abs</a> could work?</p>",
        "id": 248342221,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1628079798
    },
    {
        "content": "<p>(Although, I have not yet found something about <em>uniform</em> convergence.)</p>",
        "id": 248342465,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1628079937
    },
    {
        "content": "<p>Yes the summable part is very doable. Its the uniform part which I can't really find. But <code>summable_iff_vanishing_norm</code> combined with <code>metric.tendsto_uniformly_iff</code> (+ other junk) might be enough to reproduce the wikipedia proof.</p>",
        "id": 248342718,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1628080100
    },
    {
        "content": "<p>Ok, I was not really sure about which parts were you looking for.</p>",
        "id": 248342854,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1628080197
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"389019\">@Chris Birkbeck</span>, I think you could just apply <a href=\"https://leanprover-community.github.io/mathlib_docs/find/summable_of_norm_bounded\">docs#summable_of_norm_bounded</a> to the Banach space of continuous functions with the uniform norm, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/bounded_continuous_function.normed_group\">docs#bounded_continuous_function.normed_group</a>.</p>",
        "id": 248402767,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1628108264
    },
    {
        "content": "<p>Thank you for the suggestion. I'd managed to prove it before seeing this, but I guess the <code>normed_group</code> proof may be nicer.  I'll think about it and see if I can make it work.</p>",
        "id": 248632085,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1628266574
    }
]