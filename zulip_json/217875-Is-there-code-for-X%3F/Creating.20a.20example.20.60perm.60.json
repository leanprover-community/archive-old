[
    {
        "content": "<p>I am trying to create a exemplar instance of a <code>perm</code>. How can I write a invertible bijective function over a finite type, e.g. one that in cycle notion is written as <code>(1 3 4 2)</code>? I want to pass it to <code>cycle_factors</code></p>",
        "id": 273555388,
        "sender_full_name": "Ben",
        "timestamp": 1646083066
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/group_theory/perm/concrete_cycle.html\">https://leanprover-community.github.io/mathlib_docs/group_theory/perm/concrete_cycle.html</a> might be what you're after, in particular the <code>c[1, 3, 4, 2]</code> notation</p>",
        "id": 273558182,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646084463
    },
    {
        "content": "<p>And if you don't want the notation (which is limited to fintypes, and your example doesn't specify, which implies <code>nat</code>), you can always use <code>list.form_perm [1, 3, 4, 2]</code>.</p>",
        "id": 273575966,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1646095292
    }
]