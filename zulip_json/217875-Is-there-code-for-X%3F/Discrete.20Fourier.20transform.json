[
    {
        "content": "<p>How far are we from the Fourier transform on finite groups? This is a commonplace tool in additive combinatorics (because it detects arithmetic sequences, see for example Freiman's theorem) so I would like it to be ready when the time comes.</p>",
        "id": 282412392,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652625706
    },
    {
        "content": "<p>Incidentally, it's an item on the undergrad todo list.</p>",
        "id": 282412431,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652625724
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>, <span class=\"user-mention\" data-user-id=\"329754\">@Antoine Labelle</span></p>",
        "id": 282412439,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652625749
    },
    {
        "content": "<p>I assume that what you need is that characters of a finite abelian group form an orthonormal basis of the space of functions from G to the complex numbers?</p>",
        "id": 282412629,
        "sender_full_name": "Antoine Labelle",
        "timestamp": 1652626074
    },
    {
        "content": "<p>I have no idea. It doesn't seem like this is needed for the definition at least.</p>",
        "id": 282413979,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652628053
    },
    {
        "content": "<p>You don't need it for the definition but I think that's what you need to be able to recover the function from its Fourier transform (Fourier inversion formula).</p>",
        "id": 282414450,
        "sender_full_name": "Antoine Labelle",
        "timestamp": 1652628804
    },
    {
        "content": "<p>We're not very far from the orthogonality part but we'd need more work to get the fact that the characters span the space of functions. I wonder if it would be worth to do some of the theory for characters of abelian groups separately since it's probably easier than the general theory for irreducible representations of finite groups.</p>",
        "id": 282414955,
        "sender_full_name": "Antoine Labelle",
        "timestamp": 1652629482
    },
    {
        "content": "<p>I don't mind waiting a bit more if this means doing things right, but <span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span> should have a say.</p>",
        "id": 282422019,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652639099
    },
    {
        "content": "<p>I'm happy either way - perhaps the most fruitful approach is to have the version of finite abelian groups (which is almost always what you need in combinatorics) for now, and when the general correct version is done the special case can just be for the sake of API (something like how <code>polynomial</code> is useful indepedently but <code>mv_polynomial</code> is the correct general approach)</p>",
        "id": 282422107,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1652639220
    },
    {
        "content": "<p>There's also the fact that Gowers loves his funky convolution <code>(f * g) x = ∑ y, f y * g (y - x)</code>. I don't really know what to do with this.</p>",
        "id": 282422297,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652639505
    },
    {
        "content": "<p>I guess it's <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(y)g(x-y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span>?</p>",
        "id": 282422547,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652639874
    },
    {
        "content": "<p>No, that's why I call it funky <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 282422607,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652639924
    },
    {
        "content": "<p>Here's the relevant document: <a href=\"https://drive.google.com/file/d/1ut0mUqSyPMweoxoDTfhXverEONyFgcuO/view\">https://drive.google.com/file/d/1ut0mUqSyPMweoxoDTfhXverEONyFgcuO/view</a></p>",
        "id": 282423323,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652640850
    },
    {
        "content": "<p>Could it be formalized just as the convolution of f(x) with g(-x)?</p>",
        "id": 282423421,
        "sender_full_name": "Antoine Labelle",
        "timestamp": 1652640998
    },
    {
        "content": "<p>I hope, but there might be some friction. Time will tell.</p>",
        "id": 282423642,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652641246
    },
    {
        "content": "<p>I am grinding through <a href=\"https://klein.mit.edu/~etingof/repb.pdf\">https://klein.mit.edu/~etingof/repb.pdf</a> (<a href=\"https://github.com/leanprover-community/mathlib/pull/13911\">#13911</a> is a WIP tutorial PR that tracks progress), and this will eventually get there, via the general theory of f.d. irreducible representations of k-algebras, only specialising to k[G] for G a group, and G finite, when necessary.</p>",
        "id": 282433826,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1652656236
    },
    {
        "content": "<p>Maybe I should say \"would eventually get there, assuming I keep going\" :-) If anyone wants to contribute to <a href=\"https://github.com/leanprover-community/mathlib/pull/13911\">#13911</a>, I think it is a fine roadmap/todo list for representation theory. Taking any statement from Etingof's book that is just past the end of the current tutorial and formalising it / adding it to the tutorial would be wonderful. I've been wrestling with Theorem 3.1.4 for a while; his proof is not great, but I think I have the right generality and structure now.</p>",
        "id": 282433982,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1652656452
    },
    {
        "content": "<p>How long do you think this will take, Scott?</p>",
        "id": 282718628,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652828642
    },
    {
        "content": "<p>Also, what should we do with <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span>'s bilinear map generalization? that is <code>∑ y, L (f y) (g (x - y))</code> instead of <code>∑ y, f y * g (x - y)</code>.</p>",
        "id": 282718728,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1652828702
    },
    {
        "content": "<p>Oh, for discrete fourier transform specifically don't wait for me. I'm taking forever, and can happily meet up with anything that gets done ahead of me.</p>",
        "id": 282719115,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1652828994
    }
]