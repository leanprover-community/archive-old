[
    {
        "content": "<p>Solved it like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">vector.to_list_of_heq</span> <span class=\"o\">{</span><span class=\"n\">n₁</span> <span class=\"n\">n₂</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a₁</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">α</span> <span class=\"n\">n₁</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">a₂</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">α</span> <span class=\"n\">n₂</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">n₁</span> <span class=\"bp\">=</span> <span class=\"n\">n₂</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a₁</span> <span class=\"bp\">==</span> <span class=\"n\">a₂</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a₁.to_list</span> <span class=\"bp\">=</span> <span class=\"n\">a₂.to_list</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">assumption</span><span class=\"o\">,</span> <span class=\"n\">assumption</span><span class=\"o\">,</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">vector.heq</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span> <span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">v1</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">α</span> <span class=\"n\">m</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">v2</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">α</span> <span class=\"n\">n</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">leq</span> <span class=\"o\">:</span> <span class=\"n\">v1.to_list</span> <span class=\"bp\">=</span> <span class=\"n\">v2.to_list</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">v1</span> <span class=\"bp\">==</span> <span class=\"n\">v2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">vector</span> <span class=\"n\">α</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">vector</span> <span class=\"n\">α</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"k\">let</span> <span class=\"n\">v1'</span> <span class=\"o\">:=</span> <span class=\"n\">cast</span> <span class=\"n\">this</span> <span class=\"n\">v1</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">v1_eq_v1'</span> <span class=\"o\">:</span> <span class=\"n\">v1</span> <span class=\"bp\">==</span> <span class=\"n\">v1'</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">cast_heq</span> <span class=\"n\">this</span> <span class=\"n\">v1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">v1_list_eq_v1'_list</span> <span class=\"o\">:=</span> <span class=\"n\">vector.to_list_of_heq</span> <span class=\"n\">H</span> <span class=\"n\">v1_eq_v1'</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">v1_list_eq_v1'_list</span> <span class=\"n\">at</span> <span class=\"n\">leq</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">v1'_eq_v2</span> <span class=\"o\">:</span> <span class=\"n\">v1'</span> <span class=\"bp\">=</span> <span class=\"n\">v2</span> <span class=\"o\">:=</span> <span class=\"n\">vector.to_list_injective</span> <span class=\"n\">leq</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">heq_of_heq_of_eq</span> <span class=\"n\">v1_eq_v1'</span> <span class=\"n\">v1'_eq_v2</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 252226796,
        "sender_full_name": "Praneeth Kolichala",
        "timestamp": 1630965455
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"437861\">Praneeth Kolichala</span> has marked this topic as resolved.</p>",
        "id": 252226810,
        "sender_full_name": "Notification Bot",
        "timestamp": 1630965471
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"437861\">@Praneeth Kolichala</span> If you use <code>subst H</code>, then <code>v1</code> and <code>v2</code> have the same type, so you can use <code>heq_iff_eq</code> to turn it into an equality and then apply <code>vector.eq</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">vector.heq</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">v1</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">α</span> <span class=\"n\">m</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">v2</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">α</span> <span class=\"n\">n</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">leq</span> <span class=\"o\">:</span> <span class=\"n\">v1.to_list</span> <span class=\"bp\">=</span> <span class=\"n\">v2.to_list</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">v1</span> <span class=\"bp\">==</span> <span class=\"n\">v2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">subst</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">heq_iff_eq</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">vector.eq</span> <span class=\"n\">v1</span> <span class=\"n\">v2</span> <span class=\"n\">leq</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 252228927,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1630967409
    },
    {
        "content": "<p>It's true that you don't need the <code>H</code> hypothesis:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">vector.heq</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">v1</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">α</span> <span class=\"n\">m</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">v2</span> <span class=\"o\">:</span> <span class=\"n\">vector</span> <span class=\"n\">α</span> <span class=\"n\">n</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">leq</span> <span class=\"o\">:</span> <span class=\"n\">v1.to_list</span> <span class=\"bp\">=</span> <span class=\"n\">v2.to_list</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">v1</span> <span class=\"bp\">==</span> <span class=\"n\">v2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">v1</span> <span class=\"k\">with</span> <span class=\"n\">l1</span> <span class=\"n\">n1</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">v2</span> <span class=\"k\">with</span> <span class=\"n\">l2</span> <span class=\"n\">n2</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">vector.to_list_mk</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">leq</span><span class=\"o\">,</span>\n  <span class=\"n\">subst</span> <span class=\"n\">leq</span><span class=\"o\">,</span>\n  <span class=\"n\">subst</span> <span class=\"n\">n1</span><span class=\"o\">,</span>\n  <span class=\"n\">subst</span> <span class=\"n\">n2</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 252229059,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1630967551
    }
]