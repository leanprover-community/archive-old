[
    {
        "content": "<p>Hi!<br>\nI'm just learning Lean and I was wondering if there is any way to view the reduced form of a term with definitions expanded, while inside the proof, without having to copy it and paste it inside a <code>#reduce</code> outside of my proof?<br>\nThat would be a very convenient feature to have.<br>\nAnd sorry in advance if this is a stupid question but I couldn't find any mention of that anywhere on the web or docs.</p>",
        "id": 252209309,
        "sender_full_name": "Octavian-Mircea Sebe",
        "timestamp": 1630952831
    },
    {
        "content": "<p>I'm not sure I have a good answer for this, but what I usually do is <code>simp only [names, of, definitions, I, want, to, expand]</code>.</p>\n<p>There's also <code>simp!</code></p>",
        "id": 252211085,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1630954009
    },
    {
        "content": "<p>This is much less useful than you think it is (unless you plan to make a very specific exotic use of Lean).</p>",
        "id": 252213843,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1630955955
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/viewing.20an.20expanded.20term/near/252213843\">said</a>:</p>\n<blockquote>\n<p>This is much less useful than you think it is (unless you plan to make a very specific exotic use of Lean).</p>\n</blockquote>\n<p>I was doing the Lean tutorial and at some point I had a hypothesis of type <code>seq_limit u l</code> and I didn't want to have to look up the definition of seq_limit to know what tactic to use next.</p>",
        "id": 252214654,
        "sender_full_name": "Octavian-Mircea Sebe",
        "timestamp": 1630956509
    },
    {
        "content": "<p>You can always click on the term in the goal view, will show a widget with more information, including what the term is constructed from, and links to the definition</p>",
        "id": 252218403,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1630958690
    },
    {
        "content": "<p>What you do next doesn't depend on the definition of <code>seq_limit</code>, it depends on the next mathematical step and would require knowing the API for the definition rather than the internal implementation, right?</p>",
        "id": 252220320,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630960109
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/217875-Is-there.20code.20for.20X.3F/topic/viewing.20an.20expanded.20term/near/252220320\">said</a>:</p>\n<blockquote>\n<p>What you do next doesn't depend on the definition of <code>seq_limit</code>, it depends on the next mathematical step and would require knowing the API for the definition rather than the internal implementation, right?</p>\n</blockquote>\n<p>So what would be the API for the definition in this case?</p>",
        "id": 252220465,
        "sender_full_name": "Octavian-Mircea Sebe",
        "timestamp": 1630960224
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> In the tutorial <a href=\"https://github.com/leanprover-community/tutorials/blob/master/src/exercises/05_sequence_limits.lean#L19\">the definition is the API</a></p>",
        "id": 252221592,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1630960952
    },
    {
        "content": "<p>Oh! In which case maybe <code>unfold seq_limit</code> is what you're looking for?</p>",
        "id": 252221639,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630960998
    },
    {
        "content": "<p>Or right-click on the word in the edit buffer and then \"Peek definition\"</p>",
        "id": 252221771,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1630961099
    }
]