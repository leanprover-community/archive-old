[
    {
        "content": "<p>I cannot find a lemma for <code>a-b = -b + a</code> and I would have thought it could even be a <code>simp</code> lemma. Is there a reason for this? I get</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"c1\">--simp -- fails</span>\n  <span class=\"c1\">-- library_search -- fails</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sub_eq_add_neg</span><span class=\"o\">,</span> <span class=\"n\">add_comm</span><span class=\"o\">],</span> <span class=\"c1\">-- works</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>and also</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">abel</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>In the above, <code>ring</code> instead of <code>abel</code> also works, but not for non-commutative rings.</p>",
        "id": 279054708,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1650005711
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/sub_eq_neg_add\">docs#sub_eq_neg_add</a></p>",
        "id": 279054718,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1650005727
    },
    {
        "content": "<p>Ah <del>wow</del>, I am dumb. But why does <code>library_search</code> fails in your opinion?</p>",
        "id": 279054775,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1650005771
    },
    {
        "content": "<p>And why is it not a simp lemma?</p>",
        "id": 279054776,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1650005777
    },
    {
        "content": "<p>because you don't want all your subtractions to disappear, I presume. Whyt the other way around isn't a simp lemma is because it swaps terms around, I guess.</p>",
        "id": 279054798,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1650005834
    },
    {
        "content": "<p>Ah, you make me realize that <code>add_comm</code> is not simp neither. <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 279054821,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1650005882
    },
    {
        "content": "<p>But this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">library_search</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>works!</p>",
        "id": 279054887,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1650005967
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> has marked this topic as resolved.</p>",
        "id": 279055020,
        "sender_full_name": "Notification Bot",
        "timestamp": 1650006022
    },
    {
        "content": "<p>Yeah I'm not sure why <code>library_search</code> fails in your first snippet. I assume you were indeed importing <code>algebra.group.basic</code>?</p>",
        "id": 279055060,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1650006049
    },
    {
        "content": "<p>Ah, not 100% sure: it was in the middle of a file, but that imported a thousand things. Now I have to run, but I will double-check later if that was imported. Thanks!</p>",
        "id": 279055146,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1650006123
    },
    {
        "content": "<p>In the old days (before the fork in 2019 or so) <code>sub_eq_add_neg</code> was a <code>simp</code> lemma in core and it drove everyone nuts. We can easily look to see if I'm right but my memory was that after the fork one of the very first PRs we had to core was to remove the <code>@simp</code> attribute from <code>sub_eq_add_neg</code></p>",
        "id": 279056359,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650007375
    }
]