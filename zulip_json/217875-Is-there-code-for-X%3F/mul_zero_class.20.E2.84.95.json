[
    {
        "content": "<p>There is a  <code>mul_zero_class</code> by <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> .  <code>ℕ</code> is one, but I don't see it in <code>mathlib</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.group_with_zero.defs</span>\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">mul_zero_class</span> <span class=\"n\">ℕ</span>  <span class=\"o\">:=</span> <span class=\"o\">{</span>\n  <span class=\"n\">mul</span> <span class=\"o\">:=</span> <span class=\"n\">nat.has_mul.mul</span><span class=\"o\">,</span>\n  <span class=\"n\">zero</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"n\">zero_mul</span> <span class=\"o\">:=</span> <span class=\"n\">nat.zero_mul</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_zero</span> <span class=\"o\">:=</span> <span class=\"n\">nat.mul_zero</span><span class=\"o\">,</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>Maybe this could be included in <code>data.nat.basic</code> in the spirit of <code>monoid</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.nat.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.group_with_zero.defs</span>\n<span class=\"k\">#check</span> <span class=\"n\">nat.monoid</span> <span class=\"c1\">-- nat.monoid : monoid ℕ</span>\n<span class=\"k\">#check</span> <span class=\"n\">nat.mul_zero_class</span> <span class=\"c1\">-- unknown identifier 'nat.mul_zero_class'</span>\n</code></pre></div>",
        "id": 219886962,
        "sender_full_name": "Lars Ericson",
        "timestamp": 1607972605
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.nat.basic</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">apply_instance</span> <span class=\"o\">:</span> <span class=\"n\">mul_zero_class</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 219887205,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607972702
    },
    {
        "content": "<p>It comes from a <code>monoid_with_zero</code> instance for the naturals in this case.</p>",
        "id": 219887243,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607972722
    },
    {
        "content": "<p>Which, I guess, comes from the semiring structure on the naturals.</p>",
        "id": 219887452,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607972812
    },
    {
        "content": "<p>You can do a full trace like this, if you're interested;</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.nat.basic</span>\n<span class=\"kd\">set_option</span> <span class=\"n\">trace.class_instances</span> <span class=\"n\">true</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">apply_instance</span> <span class=\"o\">:</span> <span class=\"n\">mul_zero_class</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 219887699,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1607972927
    },
    {
        "content": "<p>I prefer <code>set_option pp.all true</code> to see the whole expression.</p>",
        "id": 219937327,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1608007079
    }
]