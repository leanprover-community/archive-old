[
    {
        "content": "<p>Do we have anything like this?<br>\nIf a bounded subset of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">Q</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}^n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85556em;vertical-align:-0.16667em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">Q</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span> is the intersection of finitely many half-spaces, then it is also the convex hull of finitely many points.</p>",
        "id": 218464208,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606848251
    },
    {
        "content": "<p>Is this true? How is the upper half plane the convex hull of finitely many points? Am I misunderstanding the assertion?</p>",
        "id": 218464918,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606848608
    },
    {
        "content": "<p>it's not bounded</p>",
        "id": 218464934,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606848619
    },
    {
        "content": "<p>that said, I may easily have given the wrong hypotheses</p>",
        "id": 218464948,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606848625
    },
    {
        "content": "<p>Ah ok</p>",
        "id": 218464949,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606848626
    },
    {
        "content": "<p>Oh, so bounded + intersection of half spaces is a funny condition!</p>",
        "id": 218464985,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606848649
    },
    {
        "content": "<p>I guess the general statement is that a convex subset which is defined piecewise linearly and is bounded is the convex hull of finitely many points.</p>",
        "id": 218465207,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606848764
    },
    {
        "content": "<p>From quickly browsing over <a href=\"https://leanprover-community.github.io/mathlib_docs/analysis/convex/basic.html\">analysis.convex.basic</a> and other stuff in <code>analysis.convex</code>, I don't think we have this yet. I don't know what <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>'s plans are, but maybe this would depend on <a href=\"https://github.com/leanprover-community/mathlib/issues/2910\">#2910</a> ?</p>",
        "id": 218465607,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1606848951
    },
    {
        "content": "<p>This is the kind of intuitive statement that seems very difficult to formalize...</p>",
        "id": 218465697,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606848983
    },
    {
        "content": "<p>Does mathlib have the definition of extremal points in a convex set?</p>",
        "id": 218467307,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606849756
    },
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/convex_hull\">docs#convex_hull</a> and you could look at the boundary of that.</p>",
        "id": 218471448,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1606851849
    },
    {
        "content": "<p>That's not the same. E.g. the extremal points of the filled in square are the vertices, not the boundary</p>",
        "id": 218471516,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606851884
    },
    {
        "content": "<p>Oh, whoops! Right, I don't think we have that <code>def</code> yet either, but <a href=\"https://en.wikipedia.org/wiki/Extreme_point\">the definition on Wikipedia</a> seems easy enough to formalize: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.convex.basic</span>\n\n<span class=\"kd\">universes</span> <span class=\"n\">u</span> <span class=\"n\">v'</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v'</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">vector_space</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">linear_ordered_field</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">E</span><span class=\"o\">}</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">is_strictly_between</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">•</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">•</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">z</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">extremal_points</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">t</span> <span class=\"bp\">|</span> <span class=\"n\">t</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≠</span> <span class=\"n\">y</span><span class=\"o\">),</span> <span class=\"bp\">¬</span> <span class=\"n\">is_strictly_between</span> <span class=\"n\">h</span> <span class=\"n\">t</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 218476309,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1606854252
    },
    {
        "content": "<p>I think you want strict inequality in the definition of <code>is_strictly_between</code> right?</p>",
        "id": 218476718,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606854452
    },
    {
        "content": "<p>Oh, and looks like I misremembered the name... wiki calls these \"extreme points\"</p>",
        "id": 218476864,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606854513
    },
    {
        "content": "<p>Anyway, I agree the definition is not too hard to write down. I mostly mentioned this because if I understand correctly the finite set that Reid is asking for in the original question in this thread would just be the set of extreme points. I imagine there is a more general statement one can formulate that holds true without the boundedness condition.</p>",
        "id": 218477686,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606854882
    },
    {
        "content": "<p>Yeah, understood.</p>\n<p>While we're on this topic, I've used <a href=\"https://polymake.org/doku.php\">polymake</a> before to compute the V-representation (V for vertex) of convex polytopes from the H-representation (H for half-space) and vice versa. Maybe as a long term goal we could look into formalizing some of the algorithms used there.</p>",
        "id": 218479818,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1606855984
    },
    {
        "content": "<p>Ooh polymake looks cool!</p>",
        "id": 218481523,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1606856719
    },
    {
        "content": "<p>Yeah, and it was actually much easier to use than I thought it would be! (Though I was only doing fairly simple stuff with it.) It looks like they have some kind of jupyter notebook integration now too which looks interesting.</p>",
        "id": 218482223,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1606857082
    },
    {
        "content": "<p>Does this problem have easily checkable certificates?</p>",
        "id": 218482235,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606857085
    },
    {
        "content": "<p>Seems to be easy in one direction and hard in the other? <a href=\"https://www.cs.mcgill.ca/~fukuda/soft/polyfaq/node21.html\">https://www.cs.mcgill.ca/~fukuda/soft/polyfaq/node21.html</a></p>\n<p>I also found something about the \"Verified Polyhedron Library\" which uses Coq: <a href=\"https://hal.archives-ouvertes.fr/hal-02100006/\">https://hal.archives-ouvertes.fr/hal-02100006/</a></p>",
        "id": 218483226,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1606857617
    }
]