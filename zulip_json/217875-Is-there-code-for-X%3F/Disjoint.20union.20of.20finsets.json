[
    {
        "content": "<p>I have two finsets <code>s</code> and <code>t</code> that I know to be disjoint. How can I make their union without bothering the end user with decidability assumptions?</p>",
        "id": 267427635,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641814577
    },
    {
        "content": "<p>In my case, it's actually making a <code>finset (α ⊕ β)</code> from <code>s : finset α</code> and <code>t : finset β</code>.</p>",
        "id": 267427823,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641814701
    },
    {
        "content": "<p>Probably best to directly use the constructor, i.e. <code>finset.mk (s + t : multiset α) sorry</code>, where <code>sorry</code> is <del>something like</del> <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiset.nodup_add_of_nodup\">docs#multiset.nodup_add_of_nodup</a></p>",
        "id": 267428331,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1641815044
    },
    {
        "content": "<p>I'll define <code>finset.sum</code> then.</p>",
        "id": 267428419,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641815137
    },
    {
        "content": "<p>Urgh, <code>finset.sum</code> is obviously already a thing.</p>",
        "id": 267430612,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641816604
    },
    {
        "content": "<p>Semi-serious option: <code>finset.add</code> to generalize <code>+</code> on multisets?</p>",
        "id": 267430997,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1641816920
    },
    {
        "content": "<p>But what about the <code>α ⊕ β</code>-specific operation? I'm thinking of <code>finset.disj_sum</code></p>",
        "id": 267431072,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641816964
    },
    {
        "content": "<p>Actually, my original idea doesn't work because <code>disjoint</code> on finsets requires <code>decidable_eq</code> because it goes through the <code>semilattice_inf</code> instance.</p>",
        "id": 267431170,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641817077
    },
    {
        "content": "<p>Back when we had <code>finset.disjoint</code>, this wouldn't have been a problem.</p>",
        "id": 267431231,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641817096
    },
    {
        "content": "<p>Actually, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.disj_union\">docs#finset.disj_union</a> is already a thing</p>",
        "id": 267561973,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1641896803
    }
]