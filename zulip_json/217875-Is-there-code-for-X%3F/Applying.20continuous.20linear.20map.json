[
    {
        "content": "<p>I can't find:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span>\n      <span class=\"o\">(</span><span class=\"bp\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>  <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">normed_group</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n      <span class=\"o\">[</span><span class=\"n\">normed_group</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">nondiscrete_normed_field</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span>\n      <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"bp\">𝕜</span> <span class=\"n\">F</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">continuous_linear_map.uncurry_apply</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"bp\">×</span> <span class=\"n\">E</span> <span class=\"bp\">→</span> <span class=\"n\">F</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">p.1</span> <span class=\"n\">p.2</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">continuous_linear_map.is_bounded_bilinear_uncurry_apply</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_bounded_bilinear_map</span> <span class=\"bp\">𝕜</span> <span class=\"o\">(</span><span class=\"n\">continuous_linear_map.uncurry_apply</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">add_left</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">φ</span> <span class=\"n\">ψ</span><span class=\"o\">,</span> <span class=\"n\">continuous_linear_map.add_apply</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">smul_left</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">s</span> <span class=\"n\">x</span> <span class=\"n\">φ</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n  <span class=\"n\">add_right</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">φ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">φ.map_add</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n  <span class=\"n\">smul_right</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">s</span> <span class=\"n\">φ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">φ.map_smul</span> <span class=\"n\">s</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">bound</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">zero_lt_one</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"n\">φ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">using</span> <span class=\"n\">φ.le_op_norm</span> <span class=\"n\">x</span><span class=\"o\">⟩</span> <span class=\"o\">}</span>\n</code></pre></div>\n<p>Where is it hidden?</p>",
        "id": 276115336,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647897545
    },
    {
        "content": "<p>Note that I found <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_linear_map.apply\">docs#continuous_linear_map.apply</a>, but I didn't know how to convert it to the above.</p>",
        "id": 276115397,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647897582
    },
    {
        "content": "<p>I think this is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_bounded_bilinear_map_apply\">docs#is_bounded_bilinear_map_apply</a>, right?</p>",
        "id": 276115862,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1647897824
    },
    {
        "content": "<p>Yes!</p>",
        "id": 276116770,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647898272
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 276116775,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1647898275
    }
]