[
    {
        "content": "<p>Do we have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">ε</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">ε</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>or some close variation? (e.g. I don't mind if the RHS is <code>a &lt; b + ε ∧ b &lt; a + ε</code> or similar)</p>",
        "id": 235067274,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1618747567
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span> <span class=\"n\">abs_sub_lt_iff</span>\n</code></pre></div>",
        "id": 235067437,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1618747733
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.instances.real</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">dist</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">↔</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">ε</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">metric.mem_ball</span><span class=\"o\">,</span> <span class=\"n\">real.ball_eq_Ioo</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 235067693,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1618747988
    }
]