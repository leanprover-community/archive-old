[
    {
        "content": "<p>These two theorems are now known to Lean!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Cardinality of a centralizer in `equiv.perm α` of a given `cycle_type` -/</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">equiv.perm.conj_stabilizer_card</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">equiv.perm</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hl</span> <span class=\"o\">:</span> <span class=\"n\">g.cycle_type</span> <span class=\"bp\">=</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">fintype.card</span> <span class=\"o\">(</span><span class=\"n\">mul_action.stabilizer</span> <span class=\"o\">(</span><span class=\"n\">conj_act</span> <span class=\"o\">(</span><span class=\"n\">equiv.perm</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n   <span class=\"o\">(</span><span class=\"n\">fintype.card</span> <span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">l.sum</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">factorial</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">l.prod</span> <span class=\"bp\">*</span>\n    <span class=\"o\">(</span><span class=\"n\">list.map</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">list.count</span> <span class=\"n\">n</span> <span class=\"n\">l</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">factorial</span><span class=\"o\">)</span> <span class=\"n\">l.dedup</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prod</span><span class=\"o\">)</span> <span class=\"o\">:=</span>  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Cardinality of a conjugacy class in `equiv.perm α` of a given `cycle_type` -/</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">equiv.perm.conj_class_card</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">equiv.perm</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hl</span> <span class=\"o\">:</span> <span class=\"n\">g.cycle_type</span> <span class=\"bp\">=</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">fintype.card</span> <span class=\"o\">({</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">equiv.perm</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">is_conj</span> <span class=\"n\">g</span> <span class=\"n\">h</span><span class=\"o\">})</span> <span class=\"bp\">=</span>\n  <span class=\"o\">(</span><span class=\"n\">fintype.card</span> <span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">factorial</span> <span class=\"bp\">/</span> <span class=\"o\">((</span><span class=\"n\">fintype.card</span> <span class=\"n\">α</span> <span class=\"bp\">-</span> <span class=\"n\">l.sum</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">factorial</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">l.prod</span> <span class=\"bp\">*</span>\n    <span class=\"o\">(</span><span class=\"n\">list.map</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">list.count</span> <span class=\"n\">n</span> <span class=\"n\">l</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">factorial</span><span class=\"o\">)</span> <span class=\"n\">l.dedup</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prod</span><span class=\"o\">))</span> <span class=\"o\">:=</span>  <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>The proof is ~ 2000 lines long, there will be a PR soon…</p>",
        "id": 304189772,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1665834840
    }
]