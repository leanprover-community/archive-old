[
    {
        "content": "<p>hi, i'm trying to understand the nat.sqrt function i know what is does but cant' figure out how the algorithm actually works. can someone explain it to me please? here is the code in the library</p>",
        "id": 192149761,
        "sender_full_name": "Anas Himmi",
        "timestamp": 1585443825
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>theorem sqrt_aux_dec {b} (h : b ≠ 0) : shiftr b 2 &lt; b :=\nbegin\n  simp [shiftr_eq_div_pow],\n  apply (nat.div_lt_iff_lt_mul&#39; (dec_trivial : 0 &lt; 4)).2,\n  have := nat.mul_lt_mul_of_pos_left\n    (dec_trivial : 1 &lt; 4) (nat.pos_of_ne_zero h),\n  rwa mul_one at this\nend\n\ndef sqrt_aux : ℕ → ℕ → ℕ → ℕ\n| b r n := if b0 : b = 0 then r else\n  let b&#39; := shiftr b 2 in\n  have b&#39; &lt; b, from sqrt_aux_dec b0,\n  match (n - (r + b : ℕ) : ℤ) with\n  | (n&#39; : ℕ) := sqrt_aux b&#39; (div2 r + b) n&#39;\n  | _ := sqrt_aux b&#39; (div2 r) n\n  end\n\n/-- `sqrt n` is the square root of a natural number `n`. If `n` is not a\n  perfect square, it returns the largest `k:ℕ` such that `k*k ≤ n`. -/\ndef sqrt (n : ℕ) : ℕ :=\nmatch size n with\n| 0      := 0\n| succ s := sqrt_aux (shiftl 1 (bit0 (div2 s))) 0 n\nend\n</pre></div>",
        "id": 192149803,
        "sender_full_name": "Anas Himmi",
        "timestamp": 1585443858
    },
    {
        "content": "<p>See <a href=\"#narrow/stream/113489-new-members/topic/noob.20question%28s%29/near/187073046\" title=\"#narrow/stream/113489-new-members/topic/noob.20question%28s%29/near/187073046\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/noob.20question%28s%29/near/187073046</a></p>",
        "id": 192149988,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585444220
    },
    {
        "content": "<p>thank you!</p>",
        "id": 192149990,
        "sender_full_name": "Anas Himmi",
        "timestamp": 1585444231
    }
]