[
    {
        "content": "<p>It seems that the current setup (<code>measure_space</code> extends <code>measurable_space</code>, <code>borel</code> is an instance turning <code>topological_space</code> into <code>measurable_space</code>) it's hard to say \"assume that <code>α</code> is a space with topology and measure, and every open set is measurable\".</p>",
        "id": 192463190,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585695017
    },
    {
        "content": "<p>I mean, <code>[measure_space α] [topological_space α]</code> creates two instances of <code>[measurable_space α]</code>.</p>",
        "id": 192463299,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585695099
    },
    {
        "content": "<p>Probably we should have [borel_measurable α] defined similarly to [order_topology α] but assuming inequality instead of equality.</p>",
        "id": 192463418,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585695169
    },
    {
        "content": "<p>Another issue: for <code>f : real → real</code>, <code>continuous f → measurable f</code> is true if we take Borel sigma-algebra but fails if we add all sets of Lebesgue measure zero.</p>",
        "id": 192466747,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585697659
    },
    {
        "content": "<p>So, which sigma-algebra should be the default one? And how should we handle situations when one wants to deal with Borel in the codomain and Lebesgue in the domain?</p>",
        "id": 192466818,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585697752
    },
    {
        "content": "<p>Of course, we can have a type tag for one of the spaces but this way we'll need to define a lot of instances for the \"other\" type, and we'll have similar issues with other topological spaces.</p>",
        "id": 192467329,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585698167
    },
    {
        "content": "<p>It seems that now we use Lebesgue measure but Borel σ-algebra.</p>",
        "id": 192479175,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585710745
    },
    {
        "content": "<p>I think in 99% of applications people will want measurable maps to mean measurable maps with respect to the Borel sigma algebra, so this should be the default setup. But we should be able to override this. A typeclass <code>opens_measurable α</code> on top of <code>[measure_space α] [topological_space α]</code> as you suggest seems like a good setup. We should also make sure that the <code>measurable_space</code> structure coming from a measure space should have higher prority than the <code>measurable_space</code> structure coming from the topology. Or we could declare the <code>measurable_space</code> structure coming from the topology just as a def, and let the user declare it as an instance when needed (or put it in a locale). What are your thoughts?</p>",
        "id": 192494674,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1585728233
    },
    {
        "content": "<p>I'm rewriting with <code>def borel := ...</code>, <code>class borel_space [topological_space α] [measurable_space α] := (measurable_eq : ... = borel α)</code></p>",
        "id": 192495273,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585728627
    },
    {
        "content": "<p>Now I'm not sure if we need <code>class opens_measurable</code> because it might be a good idea to use some specific predicate like <code>lebesgue.is_measurable</code> (don't remember exact name) in case a user wants to deal with non-Borel <code>is_measurable</code> on a topological space.</p>",
        "id": 192495506,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585728821
    },
    {
        "content": "<p>I'm surprised you say 99% borel, since my impression is that in analysis the lebesgue measure is the only one that matters</p>",
        "id": 192496343,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585729404
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> says that 99% of functions are actually (Borel, Borel) measurable.</p>",
        "id": 192496470,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585729498
    },
    {
        "content": "<p>So that you can actually work with the restriction of Lebesgue measure to the Borel σ-algebra.</p>",
        "id": 192496513,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585729526
    },
    {
        "content": "<p>I will grant that Borel has nicer closure properties</p>",
        "id": 192496538,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585729548
    },
    {
        "content": "<p>Disclaimer: I usually want to iterate maps, so i want the same σ-algebra both in domain and codomain; then Borel is the only choice that guarantees <code>continuous f → measurable f</code>.</p>",
        "id": 192496723,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585729667
    },
    {
        "content": "<p>From a proof engineering perspective, it would be better to have Borel as the default, because the instance that supplies it works on any topological space, while the one for the lebesgue measure only works on <code>real</code> and isn't defeq</p>",
        "id": 192496886,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585729778
    },
    {
        "content": "<p>It seems that we'll have to turn it into a <code>class borel_space [topological_space α] [measurable_space α] := ...</code></p>",
        "id": 192497084,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585729894
    },
    {
        "content": "<p>I don't follow. Why such a convoluted setup?</p>",
        "id": 192497164,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585729937
    },
    {
        "content": "<p>Because otherwise I see no way to say \"I have <code>topological_space α</code>, <code>measure_space α</code>, and they agree on <code>measurable_space α</code>\" in a theorem.</p>",
        "id": 192497180,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585729946
    },
    {
        "content": "<p>It's similar to <code>order_closed_topology</code> / <code>order_topology</code>.</p>",
        "id": 192497227,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585729983
    },
    {
        "content": "<p>If you have a topological space, and the measure space structure is the borel space, then you have that</p>",
        "id": 192497240,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585729994
    },
    {
        "content": "<p>What should I write in <code>example {α : Type*} [topological_space α] [measure_space α] ... : ...</code>?</p>",
        "id": 192497301,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585730033
    },
    {
        "content": "<p>It would just be <code>example {α : Type*} [topological_space α] ... : ...</code></p>",
        "id": 192497371,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585730056
    },
    {
        "content": "<p>Note <code>measure_space</code>, not <code>measurable_space</code></p>",
        "id": 192497375,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585730057
    },
    {
        "content": "<p>It would be <code>example {α : Type*} [topological_space α] [@measure_space α (borel_measure α _inst_1)] ... : ...</code></p>",
        "id": 192497420,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585730093
    },
    {
        "content": "<p>(you don't have to write that, it's the default instance)</p>",
        "id": 192497460,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585730111
    },
    {
        "content": "<p>Also in this case we <code>measure_space</code> extends <code>measurable_space</code></p>",
        "id": 192497478,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585730123
    },
    {
        "content": "<p>Also we won't have to deal with two different <code>measurable_space</code> structures on <code>prod</code>.</p>",
        "id": 192497511,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585730157
    },
    {
        "content": "<p>I see, so how about <code>class borel_measure_space A extends topological_space A, measure_space A := ...</code></p>",
        "id": 192497571,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585730196
    },
    {
        "content": "<p>No, we already have a hierarchy over topological spaces. I don't want to introduce normed measure fields</p>",
        "id": 192498312,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585730717
    },
    {
        "content": "<p>We already use this approach for algebra vs topology and order vs topology, why not use it here?</p>",
        "id": 192498415,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585730780
    },
    {
        "content": "<p>where is the borel measurable space on an arbitrary topological space going to go?</p>",
        "id": 192498612,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585730886
    },
    {
        "content": "<p>Def</p>",
        "id": 192498633,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585730907
    },
    {
        "content": "<p>Like <code>preorder.topology</code></p>",
        "id": 192498692,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585730948
    },
    {
        "content": "<p>so then how is this going to work with an actual <code>borel_space</code>?</p>",
        "id": 192498700,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585730954
    },
    {
        "content": "<p>what data is even in the <code>borel_space</code> structure?</p>",
        "id": 192498852,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585731030
    },
    {
        "content": "<p>Equality between <code>measurable_space</code> instance and <code>borel</code></p>",
        "id": 192498928,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585731082
    },
    {
        "content": "<p>As with <code>order_topology</code></p>",
        "id": 192498963,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585731118
    },
    {
        "content": "<p>is there any example of a measure space that is eq but not defeq to <code>borel</code>?</p>",
        "id": 192499031,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585731152
    },
    {
        "content": "<p>the reason this exists for <code>order_topology</code> is because such examples are common, e.g. the reals</p>",
        "id": 192499078,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585731187
    },
    {
        "content": "<p>Product of two reals?</p>",
        "id": 192499103,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585731210
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/116395-maths/topic/Borel.20measure.20space/near/192499103\" title=\"#narrow/stream/116395-maths/topic/Borel.20measure.20space/near/192499103\">said</a>:</p>\n<blockquote>\n<p>Product of two reals?</p>\n</blockquote>\n<p>This reminds me of the metric space / topological space thing, where we have the topology inbuilt into the definition of a metric space.</p>",
        "id": 192499195,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585731255
    },
    {
        "content": "<p>I mean, <code>real × real</code> with <code>measurable_space</code> coming from <code>prod.measurable_space</code>, not <code>borel</code>.</p>",
        "id": 192499281,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1585731311
    },
    {
        "content": "<p>right, that's what kevin means</p>",
        "id": 192499308,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585731328
    },
    {
        "content": "<p>I think the difference in this case is that we actually have different measurable spaces floating around, and don't necessarily want to declare that every topological space can only have the canonical measurable space on it (borel)</p>",
        "id": 192499437,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585731382
    },
    {
        "content": "<p>whereas if we have a metric space it is reasonable to ask that it never have a topological structure other than the induced one</p>",
        "id": 192499495,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585731417
    },
    {
        "content": "<p>Yes, for instance on the real line you have two different natural measurable space structures, the Borel one, and the one where you declare that all sets with zero Lebesgue measure are also measurable.</p>",
        "id": 192499636,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1585731503
    }
]