[
    {
        "content": "<p>Revisiting <code>with_seminorms</code> I have the feeling that the correct thing is to use <code>add_group_seminorm</code> for defining the <code>add_group_filter_basis</code>. For this to work however, we need <code>seminorm.ball</code> for <code>add_group_seminorm</code> and the most natural thing would be to define <code>ball</code> over <code>add_group_seminorm_class</code>. Any thoughts on this <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> <span class=\"user-mention\" data-user-id=\"268315\">@Anatole Dedecker</span> ?</p>",
        "id": 308089445,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1667622638
    },
    {
        "content": "<p>Yep, that sounds exactly right.</p>",
        "id": 308102743,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1667636271
    },
    {
        "content": "<p>I think we'll lose dot notation unfortunately</p>",
        "id": 308102804,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1667636288
    },
    {
        "content": "<p>That sounds right indeed, although losing dot notation could be annoying because of name clashes with <a href=\"https://leanprover-community.github.io/mathlib_docs/find/metric.ball\">docs#metric.ball</a>. I just wanted to add that when using <code>with_seminorms</code>, it sometimes feel that we could gain something by splitting the \"family of seminorms --&gt; topology\" step into \"one (add group) seminorm --&gt; topology\" (which means porting some things about <a href=\"https://leanprover-community.github.io/mathlib_docs/find/normed_group\">docs#normed_group</a> to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/group_seminorm\">docs#group_seminorm</a>) and then define the topology associated to a <em>family</em> of seminorms in terms of the topology associated to each (essentially making <a href=\"https://leanprover-community.github.io/mathlib_docs/find/seminorm_family.with_seminorms_iff_topological_space_eq_infi\">docs#seminorm_family.with_seminorms_iff_topological_space_eq_infi</a> true by definition). Of course there would still be some work needed to get the right neighborhood basis, but I feel like this could <em>potentially</em> simplify the construction as a whole</p>",
        "id": 308963857,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1668078009
    },
    {
        "content": "<p>yes, this is was exactly my reason to propose this. For the Schwartz space it was very awkward to choose the scalar multiplication for some theorems where the content of the theorem had nothing to do with the scalar multiplication.</p>",
        "id": 308964295,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668078185
    },
    {
        "content": "<p>More generally, when working with <code>with_seminorms</code> spaces, I'm constantly hesitating between \"prove things directly about <code>with_seminorms</code> and then deduce the version for normed spaces using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/norm_with_seminorms\">docs#norm_with_seminorms</a>\" or \"prove things for <code>seminormed_group</code> first and then reduce the <code>with_seminorms</code> case to it\". I find that I like the latter more and more, but I figured we should agree on a general rule because it defines how to orient the import tree.</p>",
        "id": 308964360,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1668078225
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"412682\">Moritz Doll</span> <a href=\"#narrow/stream/116395-maths/topic/Seminorm.20balls/near/308964295\">said</a>:</p>\n<blockquote>\n<p>yes, this is was exactly my reason to propose this. For the Schwartz space it was very awkward to choose the scalar multiplication for some theorems where the content of the theorem had nothing to do with the scalar multiplication.</p>\n</blockquote>\n<p>Maybe I should clarify that my message was not that much about the \"topological group / topological vector space\" split, although it is definitely a good thing to split that in two steps too. It was more about the \"one seminorm / a family of seminorms\" split</p>",
        "id": 308964682,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1668078341
    },
    {
        "content": "<p>ah ok, sorry, misread it - it is late and I am tired..</p>",
        "id": 308964802,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668078379
    },
    {
        "content": "<p>Don't worry, I wasn't particularly clear x)</p>",
        "id": 308964959,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1668078458
    },
    {
        "content": "<p>so if I remember correctly, this is what I tried initially, but I could make it work (entirely due to my incompetence). I agree that my be the more elegant approach, but at the moment I don't see the practical improvement over what we have. So I will definitively not do that, but if you want to, feel free to do that.</p>",
        "id": 308965663,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668078746
    },
    {
        "content": "<p>It doesn't bring too much in practice indeed, I just wanted that to be written somewhere.</p>",
        "id": 308967203,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1668079451
    },
    {
        "content": "<p>make it a issue in the github issue tracker and label it 'good first project' <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 308967386,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1668079526
    }
]