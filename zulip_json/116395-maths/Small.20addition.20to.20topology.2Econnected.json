[
    {
        "content": "<p>As a first test in writing a few lines in Lean, I formalized the minor generalization of the theorem <code>is_preconnected.closure</code> that says that if <code>s</code> is connected then its closure is connected as well. The statement is : if s is connected, then for all t such that s ⊆ t ∧ t ⊆ closure s,  t is connected. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">is_preconnected.inclosure</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">is_preconnected</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">t</span> <span class=\"bp\">∧</span> <span class=\"n\">t</span> <span class=\"bp\">⊆</span> <span class=\"n\">closure</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_preconnected</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">hu</span> <span class=\"n\">hv</span> <span class=\"n\">htuv</span> <span class=\"o\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hyt</span><span class=\"o\">,</span> <span class=\"n\">hyu</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">hzt</span><span class=\"o\">,</span> <span class=\"n\">hzv</span><span class=\"o\">⟩</span> <span class=\"o\">,</span>\n<span class=\"k\">let</span> <span class=\"o\">⟨</span><span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">hpu</span><span class=\"o\">,</span> <span class=\"n\">hps</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">mem_closure_iff.1</span> <span class=\"o\">(</span><span class=\"n\">K.right</span> <span class=\"n\">hyt</span><span class=\"o\">)</span> <span class=\"n\">u</span> <span class=\"n\">hu</span> <span class=\"n\">hyu</span> <span class=\"k\">in</span>\n<span class=\"k\">let</span> <span class=\"o\">⟨</span><span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">hqv</span><span class=\"o\">,</span> <span class=\"n\">hqs</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">mem_closure_iff.1</span> <span class=\"o\">(</span><span class=\"n\">K.right</span> <span class=\"n\">hzt</span><span class=\"o\">)</span> <span class=\"n\">v</span> <span class=\"n\">hv</span> <span class=\"n\">hzv</span> <span class=\"k\">in</span>\n<span class=\"k\">let</span> <span class=\"o\">⟨</span><span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">hrs</span><span class=\"o\">,</span> <span class=\"n\">hruv</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">H</span> <span class=\"n\">u</span> <span class=\"n\">v</span> <span class=\"n\">hu</span> <span class=\"n\">hv</span> <span class=\"o\">(</span><span class=\"n\">subset.trans</span> <span class=\"n\">K.left</span> <span class=\"n\">htuv</span><span class=\"o\">)</span>\n  <span class=\"o\">⟨</span><span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">hps</span><span class=\"o\">,</span> <span class=\"n\">hpu</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"n\">hqs</span><span class=\"o\">,</span> <span class=\"n\">hqv</span><span class=\"o\">⟩</span> <span class=\"k\">in</span> <span class=\"o\">⟨</span><span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">K.left</span> <span class=\"n\">hrs</span><span class=\"o\">,</span> <span class=\"n\">hruv</span><span class=\"o\">⟩</span>\n</code></pre></div>\n<p>There is the analogous <code>is_connected.inclosure</code>.<br>\nI'd gladly try a pull request.  </p>\n<p>One question is whether <code>is_preconnected.closure</code> and <code>is_connected.closure</code> should be redefined as corollaries of that more general statement, or left untouched.</p>",
        "id": 256652467,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1633641811
    },
    {
        "content": "<p>Looks like a good lemma that should certainly be in mathlib!</p>\n<p>One minor comment: It would be better to split up your hypothesis <code>(K :  s ⊆ t ∧ t ⊆ closure s)</code> into two hypotheses <code>(h1 : s ⊆ t)</code> and <code>(h2 : t ⊆ closure s)</code>. In practice, it's easier to apply lemmas when their hypotheses are split up like this.</p>\n<p>The proof of <code>is_precommented.closure</code> is essentially the same, so I do think it's worthwhile to simplify its proof using this generalization (and similarly for <code>is_connected.closure</code>).</p>",
        "id": 256659968,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633645808
    },
    {
        "content": "<p>Let us know your github username here, and we can give you permission to push branches to the repository.</p>",
        "id": 256660418,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1633646089
    },
    {
        "content": "<p>It is AntoineChambert-Loir</p>",
        "id": 256745663,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1633702390
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> Voila: <a href=\"https://github.com/leanprover-community/mathlib/invitations\">https://github.com/leanprover-community/mathlib/invitations</a></p>",
        "id": 256746767,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633702802
    },
    {
        "content": "<p>Bien reçu, thanks! (Now, I need to understand how to make <code>git push --set-upstream origin bark_tree</code>work, I am struggling with authentification.</p>",
        "id": 256752965,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1633705247
    },
    {
        "content": "<p>Did you put a public ssh key on GitHub?</p>",
        "id": 256753273,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1633705378
    },
    {
        "content": "<p>See <a href=\"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\">https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent</a> on how to authenticate using SSH with Github. (In step 7 you'll be redirected to a different page where you have to add your ssh key to Github, as Patrick mentions).</p>",
        "id": 256756144,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1633706486
    },
    {
        "content": "<p>It's quite some steps, but it is a one-time thing (1 time per device you use)</p>",
        "id": 256756283,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1633706533
    },
    {
        "content": "<p>I had done all that, and <code>ssh -T  git@ssh.github.com</code> works as indicated,  but the <code>git push </code> keeps asking me for username and password…</p>",
        "id": 256784156,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1633717711
    },
    {
        "content": "<p>Does the advice at <a href=\"https://stackoverflow.com/questions/6565357/git-push-requires-username-and-password\">https://stackoverflow.com/questions/6565357/git-push-requires-username-and-password</a> help?</p>",
        "id": 256786283,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1633718525
    },
    {
        "content": "<p>Is this linux or macos?</p>",
        "id": 256787760,
        "sender_full_name": "Matthew Ballard",
        "timestamp": 1633719148
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> Did you clone the repo using <code>ssh</code> or <code>https</code>? I think that if you clone using <code>https</code> (which might be the default), it will ask for a password.</p>",
        "id": 256792636,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633721168
    },
    {
        "content": "<p>If you don't have an ssh key set up on your local machine, I think <code>leanproject</code> will automatically pull using https instead of ssh.<br>\nHonestly it's a bit of a pain to manually edit the git config file in this case.</p>",
        "id": 256792817,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633721268
    },
    {
        "content": "<p>Yes, finally, I made it, thanks! <br>\nIt has been necessary to add some <code>git remote set-url origin git@github.com:leanprover-community/mathlib.git</code> so that the <code>git</code> command uses <code>ssh</code>-authentication rather than <code>https</code>.</p>",
        "id": 256799275,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1633724206
    },
    {
        "content": "<p>So, it seems that I'm now the proud author of a PR. Let's see what happens next!<br>\n(Bad news, I'm in the midst of proving another easy lemma…)</p>",
        "id": 256800871,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1633724960
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> if you paste your PR number with a <code>#</code>, it will automatically generate a link (e.g. <a href=\"https://github.com/leanprover-community/mathlib/issues/9633\">#9633</a> )</p>",
        "id": 256801988,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633725332
    },
    {
        "content": "<p>OK, thanks! What do I need to do now?<br>\nIn particular, with respect to the stylistic adjustments made by <span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> and <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> ? Do I need to implement them myself or are they already implemented into PR <a href=\"https://github.com/leanprover-community/mathlib/issues/9633\">#9633</a>?</p>",
        "id": 256808868,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1633728653
    },
    {
        "content": "<p>Johan and I left some comments, but you should decide what changes to actually make.<br>\nGithub's PR system lets commenters suggest explicit changes in the code, so as you can see there are some comments which have a button saying <code>commit suggestion</code> or something like that. </p>\n<p>It's a matter of personal taste whether you want to actually use these buttons, or implement the changes in your editor and commit/push manually (personally, I prefer to make the changes in the editor unless it's something very trivial).</p>",
        "id": 256809144,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633728800
    },
    {
        "content": "<p>Any additional commits you make to this branch (and push to the branch on github) will automatically show up in the PR.</p>",
        "id": 256809196,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633728839
    },
    {
        "content": "<p>when you're done making the changes, it's good practice to remove the <code>awating author</code> and add the <code>awaiting review</code> label in the PR. This is a signal to the maintainers that the PR is ready for further review.</p>",
        "id": 256809478,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633729000
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> one more thing to note: if you look at your PR, you will see an icon next to your most recent commit<br>\n<a href=\"/user_uploads/3121/YVCg2UnqvKR6Wybh9txKaaA-/Screenshot-2021-10-08-at-16-08-42-feattopology-connected-lean-add-theorems-about-connectedness-o...-by-AntoineChambert-Loir....png\">Screenshot-2021-10-08-at-16-08-42-feattopology-connected-lean-add-theorems-about-connectedness-o...-by-AntoineChambert-Loir....png</a> <br>\nThe little red <code>X</code> indicates that the continuous integration checks have failed for some reason. You can click on this to see what went wrong (this is only relevant for the most recent commit, as a push cancels the checks for previous commits). In this case, you have a line that is too long (which you can also see by clicking on <code>Files Changed</code> near the top of the PR page.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/YVCg2UnqvKR6Wybh9txKaaA-/Screenshot-2021-10-08-at-16-08-42-feattopology-connected-lean-add-theorems-about-connectedness-o...-by-AntoineChambert-Loir....png\" title=\"Screenshot-2021-10-08-at-16-08-42-feattopology-connected-lean-add-theorems-about-connectedness-o...-by-AntoineChambert-Loir....png\"><img src=\"/user_uploads/3121/YVCg2UnqvKR6Wybh9txKaaA-/Screenshot-2021-10-08-at-16-08-42-feattopology-connected-lean-add-theorems-about-connectedness-o...-by-AntoineChambert-Loir....png\"></a></div>",
        "id": 256813139,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633731144
    },
    {
        "content": "<p>Yes, I just saw this and pushed a new commit.</p>",
        "id": 256813442,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1633731340
    },
    {
        "content": "<p>I pushed a new PL <a href=\"https://github.com/leanprover-community/mathlib/issues/10005\">#10005</a> with another classic result on connected spaces. I fear it will require some rewriting, but let's see!</p>",
        "id": 259241711,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1635342702
    }
]