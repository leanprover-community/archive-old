[
    {
        "content": "<p>On <a href=\"https://github.com/leanprover-community/mathlib/tree/cardinal_to_nat\">branch#cardinal_to_nat</a>, I've added a function <code>cardinal.to_nat</code> and used it to make a function <code>fincard</code> that can give a <code>N</code>-valued cardinality for any type. This is the same construction used in the linear algebra library to define <code>findim</code>.</p>",
        "id": 226762237,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613621076
    },
    {
        "content": "<p>If people think this is a good idea, I will adapt some more of the API for a similar fincard function used in this project: <a href=\"https://github.com/ImperialCollegeLondon/group-theory-game/blob/master/src/finsum/basic.lean\">https://github.com/ImperialCollegeLondon/group-theory-game/blob/master/src/finsum/basic.lean</a></p>",
        "id": 226762263,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613621118
    },
    {
        "content": "<p>and then PR it.</p>",
        "id": 226762267,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613621125
    },
    {
        "content": "<p>I also think it'd be useful to add an <code>enat</code> version, if only to be able to state things in a way that doesn't wig out people who intuitively don't want the cardinality of an infinite set to be 0.</p>",
        "id": 226762351,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613621221
    },
    {
        "content": "<p>Obviously the first function would be named <code>cardinal.to_enat</code>, but what should the extended version of <code>fincard</code> be called?</p>",
        "id": 226762362,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613621233
    },
    {
        "content": "<p>This sounds like a very good idea. There has been talk about <code>fincard</code> for a long time on zulip, and I'm glad someone is actually picking it up.</p>",
        "id": 226763366,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613622333
    },
    {
        "content": "<p>If I move <code>fincard</code> to a separate file, should it be under <code>data</code>? <code>set_theory</code>?</p>",
        "id": 226769042,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613628271
    },
    {
        "content": "<p><code>data/fintype/card.lean</code> currently contains stuff that doesn't have to do anything with <code>card</code> at all <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span> <span aria-label=\"head bandage\" class=\"emoji emoji-1f915\" role=\"img\" title=\"head bandage\">:head_bandage:</span> otherwise that would be a natural place, I guess</p>",
        "id": 226770072,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613629335
    },
    {
        "content": "<p><code>set_theory</code> (to me) is about ZFC specific stuff</p>",
        "id": 226770080,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613629353
    },
    {
        "content": "<p><code>data</code> sounds good to me</p>",
        "id": 226770085,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613629360
    },
    {
        "content": "<p>A new fincard file would surely be fine, is there ever an argument against adding a new file with a descriptive name?</p>",
        "id": 226775384,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1613634886
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302826\">Aaron Anderson</span> <a href=\"#narrow/stream/116395-maths/topic/fincard.20and.20cardinal.2Eto_nat/near/226762263\">said</a>:</p>\n<blockquote>\n<p>If people think this is a good idea, I will adapt some more of the API for a similar fincard function used in this project: <a href=\"https://github.com/ImperialCollegeLondon/group-theory-game/blob/master/src/finsum/basic.lean\">https://github.com/ImperialCollegeLondon/group-theory-game/blob/master/src/finsum/basic.lean</a></p>\n</blockquote>\n<p>There is some APIs for this on the fincard branch of mathlib which can be useful I hope. However, it's mostly for finsum so I'm not sure if its helpful after all<br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/fincard/src/data/fincard.lean\">https://github.com/leanprover-community/mathlib/blob/fincard/src/data/fincard.lean</a></p>",
        "id": 226791991,
        "sender_full_name": "Jason KY.",
        "timestamp": 1613644781
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/6494\">#6494</a></p>",
        "id": 228297639,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1614629398
    }
]