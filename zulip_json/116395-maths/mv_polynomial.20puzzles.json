[
    {
        "content": "<p>I keep coming up with these. Do we have this one? What is it called, if so?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">mv_polynomial</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">mv_polynomial</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n<span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">support</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">monomial</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">coeff</span> <span class=\"n\">s</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</pre></div>",
        "id": 186572593,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1579957318
    },
    {
        "content": "<p>I am such a hacker:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">σ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">mv_polynomial</span> <span class=\"n\">σ</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n<span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">support</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">monomial</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">coeff</span> <span class=\"n\">s</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">p</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">ext</span><span class=\"o\">,</span>\n  <span class=\"n\">intro</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">coeff_sum</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">coeff_monomial</span><span class=\"o\">],</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"err\">∈</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">support</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"err\">←</span><span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum_subset</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"o\">{</span><span class=\"n\">s</span><span class=\"o\">}</span> <span class=\"err\">⊆</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">support</span><span class=\"o\">,</span> <span class=\"k\">begin</span>\n      <span class=\"n\">intros</span> <span class=\"n\">i</span> <span class=\"n\">hi</span><span class=\"o\">,</span>\n      <span class=\"n\">convert</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">hi</span><span class=\"o\">,</span> <span class=\"n\">assumption</span><span class=\"o\">,</span> <span class=\"n\">cases</span> <span class=\"n\">hi</span>\n    <span class=\"kn\">end</span><span class=\"o\">),</span>\n    <span class=\"n\">swap</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">t</span> <span class=\"n\">ht</span> <span class=\"n\">hts</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">if_neg</span><span class=\"o\">,</span>\n      <span class=\"n\">intro</span> <span class=\"n\">hts2</span><span class=\"o\">,</span>\n      <span class=\"n\">apply</span> <span class=\"n\">hts</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">hts2</span><span class=\"o\">,</span>\n      <span class=\"n\">apply</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_singleton</span><span class=\"o\">,</span>\n    <span class=\"o\">},</span>\n    <span class=\"n\">convert</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum_singleton</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">if_pos</span><span class=\"o\">,</span>\n    <span class=\"n\">refl</span>\n  <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"err\">←</span><span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum_subset</span> <span class=\"o\">(</span><span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">empty_subset</span> <span class=\"n\">p</span><span class=\"bp\">.</span><span class=\"n\">support</span><span class=\"o\">),</span>\n    <span class=\"n\">swap</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">t</span> <span class=\"n\">ht1</span> <span class=\"n\">ht2</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">if_neg</span><span class=\"o\">,</span>\n      <span class=\"n\">intro</span> <span class=\"n\">hts</span><span class=\"o\">,</span>\n      <span class=\"n\">apply</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n      <span class=\"n\">rwa</span> <span class=\"n\">hts</span> <span class=\"n\">at</span> <span class=\"n\">ht1</span><span class=\"o\">,</span>\n    <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">sum_empty</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">finsupp</span><span class=\"bp\">.</span><span class=\"n\">mem_support_iff</span> <span class=\"n\">at</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n    <span class=\"n\">symmetry</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">not_not</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">hs</span>\n  <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>I sometimes feel like I write Lean the way a child would.</p>",
        "id": 186573465,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1579958965
    }
]