[
    {
        "content": "<p>Do we have the \"group of fractions\" associated to a cancellative monoid? I only need the abelian case.</p>",
        "id": 171103197,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563387094
    },
    {
        "content": "<p>Look at what Lean is doing to us...</p>",
        "id": 171103286,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1563387137
    },
    {
        "content": "<p>It's ten times worse Patrick. I need the group-with-zero attached to a Massot monoid.</p>",
        "id": 171103313,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563387164
    },
    {
        "content": "<p>I was thinking that if we had group of fractions then I could at least look at how the professionals did it before I started.</p>",
        "id": 171103363,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563387197
    },
    {
        "content": "<p>I had to make a call between using \"monoid with zero such that if you remove 0 you get a group\" and Massot monoid (\"monoid with zero such that if you remove zero you get a cancellative monoid\"), I chose the latter (because it's the right generality) and now I want to extend a faithful valuation on an integral domain to its field of fractions I need to invert some non-invertible non-zero elments of the Massot monoid.</p>",
        "id": 171103600,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563387354
    },
    {
        "content": "<p>Meanwhile I'm writing hundreds of lines about filter bases</p>",
        "id": 171103602,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1563387354
    },
    {
        "content": "<p>Who would have guessed two years ago?</p>",
        "id": 171103676,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563387378
    },
    {
        "content": "<p>I guess the first half of <code>ring_theory/localization.lean</code> can be rewritten to not use <code>+</code> and <code>-</code>.</p>",
        "id": 171105512,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563388635
    },
    {
        "content": "<p>Actually, I guess that I can do group of fractions and then use it. It's at times like this which I am allowed to use <code>with_zero</code>; instead of making the object and then using it, I make the object, define an instance of <code>Massot_monoid</code> on it and then I'm done. So this will end up being a bunch more <code>for_mathlib</code> files if it's not there already. First I need group of fractions of a cancellative monoid (just with <code>*</code> as group law but I guess <code>to_additive</code> can be used), then a totally ordered version, and then a version with zero.</p>",
        "id": 171105522,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563388640
    },
    {
        "content": "<p>If we also immediately introduce a characteristic predicate, we have two wins.</p>",
        "id": 171105541,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563388660
    },
    {
        "content": "<p>I spent way too much time constructing the product of two filters basis. It's clear indication I should leave my office and go hunting for food.</p>",
        "id": 171106525,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1563389186
    },
    {
        "content": "<p>ha, the joys of no family. When you've finished foraging you can go back to your office :D (although someone has to feed the cat, right?)</p>",
        "id": 171106995,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563389507
    }
]