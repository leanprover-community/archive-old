[
    {
        "content": "<p>I found myself needing to show that the restriction of the usual measure on ℝ to the interval <code>Ioc 0 (2 * π)</code> satisfies <code>is_open_pos_measure</code>, i.e. nonempty open sets have non-zero measure. This sounds like it should be a triviality, but I couldn't find a slick proof in the case at hand -- I ended up with the 22-line monstrosity below. Can anyone suggest a more civilized approach?</p>\n<p>This was my code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">silly_lemma</span> <span class=\"o\">:</span> <span class=\"n\">is_open_pos_measure</span> <span class=\"o\">(</span><span class=\"n\">volume</span> <span class=\"o\">:</span> <span class=\"n\">measure</span> <span class=\"o\">(</span><span class=\"n\">Ioc</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">)))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span> <span class=\"n\">intros</span> <span class=\"n\">V</span> <span class=\"n\">hV1</span> <span class=\"n\">hV2</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span><span class=\"n\">volume_image_subtype_coe</span><span class=\"o\">,</span> <span class=\"n\">swap</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">measurable_set_Ioc</span><span class=\"o\">,</span>\n  <span class=\"n\">refine</span> <span class=\"o\">(</span><span class=\"n\">measure_pos_of_nonempty_interior</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">ne'</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">is_open_induced_iff</span> <span class=\"n\">at</span> <span class=\"n\">hV1</span><span class=\"o\">,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">hV1</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">W</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">hW1</span><span class=\"o\">,</span> <span class=\"n\">hW2</span><span class=\"o\">⟩⟩,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">hW2</span><span class=\"o\">,</span> <span class=\"n\">subtype.image_preimage_coe</span><span class=\"o\">,</span> <span class=\"n\">interior_inter</span><span class=\"o\">,</span> <span class=\"n\">interior_Ioc</span><span class=\"o\">,</span> <span class=\"n\">interior_eq_iff_open.mpr</span> <span class=\"n\">hW1</span><span class=\"o\">],</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">W</span> <span class=\"bp\">∩</span> <span class=\"n\">Ioc</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">subtype.image_preimage_coe</span><span class=\"o\">,</span> <span class=\"n\">hW2</span><span class=\"o\">,</span> <span class=\"n\">nonempty_image_iff</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">this</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">hx1</span><span class=\"o\">,</span> <span class=\"n\">hx2</span><span class=\"o\">⟩⟩,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">ne_or_eq</span> <span class=\"n\">x</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">h</span><span class=\"bp\">|</span><span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"c1\">-- some x ≠ 2 * π is in W</span>\n    <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">hx1</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">hx2.1</span><span class=\"o\">,</span> <span class=\"n\">lt_of_le_of_ne</span> <span class=\"n\">hx2.2</span> <span class=\"n\">h</span><span class=\"o\">⟩⟩⟩</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"c1\">-- 2 * π is in W</span>\n    <span class=\"n\">rw</span> <span class=\"n\">metric.is_open_iff</span> <span class=\"n\">at</span> <span class=\"n\">hW1</span><span class=\"o\">,</span>\n    <span class=\"n\">specialize</span> <span class=\"n\">hW1</span> <span class=\"n\">x</span> <span class=\"n\">hx1</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">h</span> <span class=\"n\">at</span> <span class=\"n\">hW1</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">hW1</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">ε</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">hε1</span><span class=\"o\">,</span> <span class=\"n\">hε2</span><span class=\"o\">⟩⟩,</span>\n    <span class=\"n\">use</span> <span class=\"n\">max</span> <span class=\"n\">π</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span> <span class=\"bp\">-</span> <span class=\"n\">ε</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">),</span>\n    <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">hε2</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">ball_eq_Ioo</span><span class=\"o\">,</span> <span class=\"n\">split</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span> <span class=\"n\">refine</span> <span class=\"n\">lt_of_lt_of_le</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">le_max_right</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">),</span> <span class=\"n\">linarith</span> <span class=\"o\">},</span>\n      <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">max_lt</span><span class=\"o\">,</span> <span class=\"n\">linarith</span> <span class=\"o\">[</span><span class=\"n\">pi_pos</span><span class=\"o\">],</span> <span class=\"n\">linarith</span> <span class=\"o\">},</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">split</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">lt_of_lt_of_le</span> <span class=\"n\">pi_pos</span> <span class=\"o\">(</span><span class=\"n\">le_max_left</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span> <span class=\"o\">},</span>\n      <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">max_lt</span><span class=\"o\">,</span> <span class=\"n\">linarith</span> <span class=\"o\">[</span><span class=\"n\">pi_pos</span><span class=\"o\">],</span> <span class=\"n\">linarith</span><span class=\"o\">,</span> <span class=\"o\">}</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 286344023,
        "sender_full_name": "David Loeffler",
        "timestamp": 1655381925
    },
    {
        "content": "<p>can you give us a mwe with the imports+open statements and such?</p>",
        "id": 286344295,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1655382074
    },
    {
        "content": "<p>OK, I've made it a self-contained MWE</p>",
        "id": 286345367,
        "sender_full_name": "David Loeffler",
        "timestamp": 1655382635
    },
    {
        "content": "<p><code>coe</code> here is an open map, right?</p>",
        "id": 286348450,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1655384286
    },
    {
        "content": "<p>my point is, I haven't used this area too much but I do wonder whether this is more palatable:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.special_functions.integrals</span>\n\n<span class=\"kd\">noncomputable theory</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">real</span>\n<span class=\"kn\">open</span> <span class=\"n\">real</span> <span class=\"n\">measure_theory</span> <span class=\"n\">measure_theory.measure</span> <span class=\"n\">set</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">set.nonempty.subset</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s.nonempty</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">⊆</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">t.nonempty</span> <span class=\"o\">:=</span>\n<span class=\"n\">Exists.imp</span> <span class=\"n\">h</span> <span class=\"n\">hs</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">silly_lemma</span> <span class=\"o\">:</span> <span class=\"n\">is_open_pos_measure</span> <span class=\"o\">(</span><span class=\"n\">volume</span> <span class=\"o\">:</span> <span class=\"n\">measure</span> <span class=\"o\">(</span><span class=\"n\">Ioc</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">π</span><span class=\"o\">)))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">V</span> <span class=\"n\">hV1</span> <span class=\"n\">hV2</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span><span class=\"n\">volume_image_subtype_coe</span> <span class=\"o\">(</span><span class=\"n\">measurable_set_Ioc</span> <span class=\"o\">:</span> <span class=\"n\">measurable_set</span> <span class=\"o\">(</span><span class=\"n\">Ioc</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"n\">_</span><span class=\"o\">)),</span>\n  <span class=\"n\">refine</span> <span class=\"o\">(</span><span class=\"n\">measure_pos_of_nonempty_interior</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">ne'</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">set.nonempty.subset</span><span class=\"o\">,</span>\n  <span class=\"n\">swap</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">is_open_map.image_interior_subset</span><span class=\"o\">,</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span> <span class=\"c\">/-</span><span class=\"cm\"> `coe` is open -/</span>\n  <span class=\"n\">rw</span> <span class=\"n\">nonempty_image_iff</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 286348777,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1655384432
    },
    {
        "content": "<p>No, it isn't, that's the point: it's the inclusion of an <code>Ioc</code> interval which is not an open set, so the inclusion is a continuous map but not an open one.</p>",
        "id": 286348811,
        "sender_full_name": "David Loeffler",
        "timestamp": 1655384451
    },
    {
        "content": "<p>oh, it's an Ioc :/ my mind guessed it was an Ioo, drats</p>",
        "id": 286348895,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1655384485
    },
    {
        "content": "<p>I mean, I guess in the end that's the proof I'd expect to give in that case. Maybe it's just worth generalising this to all <code>Ioc</code>s and open sets, hopefully then <code>order_duel</code> gives it for free for <code>Ico</code>s, and then no-one has to worry about this again</p>",
        "id": 286349772,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1655384886
    }
]