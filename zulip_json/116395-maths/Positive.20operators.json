[
    {
        "content": "<p>A bit of a bikeshedding thing, but I am not entirely sure, whether the naming of <code>positive</code> operators in <code>inner_product_space</code> is good. The literature uses both non-negative and positive for the condition <code>is_self_adjoint</code> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>A</mi><mi>x</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">⟩</mo><mo>≥</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\langle Ax, x\\rangle \\geq 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⟨</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">⟩</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>. A major reason for using positive is that the spectrum is closed so the condition <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⟨</mo><mi>A</mi><mi>x</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">⟩</mo><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\langle Ax, x\\rangle &gt; 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">⟨</span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">⟩</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span> is not used that often. On the other hand having <code>nonneg</code> would be more consistent with the rest of mathlib and saying that the zero operator is positive also sounds a bit weird.<br>\n<span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> <span class=\"user-mention\" data-user-id=\"268315\">@Anatole Dedecker</span></p>",
        "id": 290862492,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1658824160
    },
    {
        "content": "<p>There's tension between consistency with mathematical usage, and uniformity in naming. I'm inclined to use <code>positive</code> here.</p>",
        "id": 290869043,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1658828488
    },
    {
        "content": "<p>I would vote for <code>nonneg</code> -- when searching for a lemma in the context of mathlib this is definitely what I would try first!</p>",
        "id": 290890456,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1658842199
    },
    {
        "content": "<p>This is a tough one in my opinion. I'm leaning towards <code>nonneg</code> because I have always felt this concept was misnamed.</p>\n<p>Is this in the <code>inner_product_space</code> namespace?</p>",
        "id": 290893622,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658843645
    },
    {
        "content": "<p>The term \"positive\" is more succinct than nonnegative, and is indeed (ab)used in math quite a lot.</p>\n<p>In mathlib, there is already for example <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.Lp.pos_part\">docs#measure_theory.Lp.pos_part</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.Lp.neg_part\">docs#measure_theory.Lp.neg_part</a>. I don't think I would like to decompose a function to its \"nonnegative part\" and the \"nonpositive part\".</p>\n<p>This is a tradeoff between accuracy and simplicity of terminology. I'd prefer to compromise on the accuracy. But I can understand the opposite preference, too.</p>\n<p>Either way, consistency within mathlib has value, for example when searching.</p>",
        "id": 290893630,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1658843652
    },
    {
        "content": "<p>By the way, strictly positive operators do come up, and it would be a shame to have to call them strictly positive just because positive is already taken.</p>",
        "id": 290894170,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658843874
    },
    {
        "content": "<p>Ok, in this case it is a difficult choice and I don't have a strong opinion.</p>\n<p>But yet another context in which it is extremely standard to abuse terminology is <a href=\"https://en.wikipedia.org/wiki/Positive_linear_functional\">\"positive linear functionals\"</a>. I have never heard people call them \"nonnegative linear functionals\". So at least in many situations, I would prefer to allow the usual abuse of terminology.</p>",
        "id": 290894667,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1658844056
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/116395-maths/topic/Positive.20operators/near/290893622\">said</a>:</p>\n<blockquote>\n<p>This is a tough one in my opinion. I'm leaning towards <code>nonneg</code> because I have always felt this concept was misnamed.</p>\n<p>Is this in the <code>inner_product_space</code> namespace?</p>\n</blockquote>\n<p>It's in <code>continuous_linear_map</code> to allow for dot-notation. As I mentioned in <a href=\"#narrow/stream/144837-PR-reviews/topic/.2315326.20Renaming.20is_self_adjoint/near/290904416\">https://leanprover.zulipchat.com/#narrow/stream/144837-PR-reviews/topic/.2315326.20Renaming.20is_self_adjoint/near/290904416</a> one could make it a subtype of an abstract <code>star_ring</code>, but that would require serious work to prove that the abstract definition is equivalent to the current one.</p>",
        "id": 290907418,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1658848156
    },
    {
        "content": "<p>I have to say that <code>nonnegative_operator</code> would seem really weird to me, not only because I’m French, but because « nonnegative » would not mean « not negative » in this case…</p>",
        "id": 290924575,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1658855091
    },
    {
        "content": "<p>I know English people are used to this kind of thing (« nonincreasing » for example), but that seems really weird to me</p>",
        "id": 290924687,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1658855152
    },
    {
        "content": "<p>nonnegative really means \"positif ou nul\", so I don't think there is any problem here, you just have to get used to it. And yes, English people are crazy :-)</p>",
        "id": 290928674,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1658856988
    },
    {
        "content": "<p>I think \"nonnegative\" here means \"not anywhere negative\"</p>",
        "id": 290937746,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658860672
    },
    {
        "content": "<p>I always read it as non-negative spectrum</p>",
        "id": 290937896,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1658860739
    },
    {
        "content": "<p>I guess I can live with the fact that English people are crazy; I'm American anyway. <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 290937934,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658860758
    },
    {
        "content": "<p>Yeah... \"nonnegative\" only really makes sense in linear orders. I much prefer the French convention here.</p>",
        "id": 290946684,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1658864910
    },
    {
        "content": "<p>maybe \"semipositive\" as a shorthand for positive semidefinite.</p>",
        "id": 290991015,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1658900696
    },
    {
        "content": "<p>I always vote for going with pre-existing mathematical terminology, even when it breaks mathlib consistency a little.</p>",
        "id": 291060201,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658937438
    },
    {
        "content": "<p>\"Nonnegative operator\" is used quite a bit in the literature actually even if it's not the dominant term, so it wouldn't be a radical move.</p>",
        "id": 291074906,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1658940208
    },
    {
        "content": "<p>Wikipedia uses \"positive-semidefinite\" or \"nonnegative\".</p>",
        "id": 291084742,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1658944415
    },
    {
        "content": "<p>I've never gotten weird looks for using \"nonnegative\" in talks, people are more confused that my Laplacian is nonnegative <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 291087556,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1658945466
    },
    {
        "content": "<p>Of course Laplacian is nonnegative! (according to 80% mathematicians as far as I can tell, but it might depend on communities :-)</p>",
        "id": 291097018,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1658949243
    }
]