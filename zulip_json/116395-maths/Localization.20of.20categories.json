[
    {
        "content": "<p>I've been playing around more with these inductive-quotient constructions, and I've sketched out the localization of a category here:<br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/cat_localization/src/category_theory/localization.lean\">https://github.com/leanprover-community/mathlib/blob/cat_localization/src/category_theory/localization.lean</a></p>\n<p>I'm sure others have thought about doing this, e.g. in relation to derived categories. I didn't find anything in mathlib, so I wonder whether there is another branch that makes a similar construction?</p>",
        "id": 207644012,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598021786
    },
    {
        "content": "<p>Categories have been a work in progress for many many years. We only got things like abelian categories very recently and so it's only now that we can start to do what in number theory one would think of as \"the basics\".</p>",
        "id": 207644266,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598021914
    },
    {
        "content": "<p>If you look at how many lines of code there is in the category theory and algebra/category files you can see how much work Scott has done on this stuff, but it has been a huge ongoing project and in some sense is currently largely unrelated to the rest of mathlib</p>",
        "id": 207644452,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022005
    },
    {
        "content": "<p>This has been one of the criticisms of the development -- \"what is the point of it?\". But Scott has persevered for years and now it's looking increasingly likely that we're going to be using it to do schemes</p>",
        "id": 207644586,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022092
    },
    {
        "content": "<p>But IIRC a year ago he was still formalising things like limits, equalisers etc. He's been mostly working alone whilst simultaneously developing tactics</p>",
        "id": 207644730,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022161
    },
    {
        "content": "<p>Now is the time for us to find out whether his theory is usable and I think it will be, but I also think it's a great time to start making stuff like derived functors etc</p>",
        "id": 207644826,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022233
    },
    {
        "content": "<p>I don't think we even have delta functors</p>",
        "id": 207644905,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022259
    },
    {
        "content": "<p>This stuff is all now just becoming possible</p>",
        "id": 207644917,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022270
    },
    {
        "content": "<p>Since abelian categories now exist, what about the category of complexes?</p>",
        "id": 207644993,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598022311
    },
    {
        "content": "<p>Someone is working on that, if I recall correctly...</p>",
        "id": 207645027,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598022333
    },
    {
        "content": "<p>There is an irritating design decision here</p>",
        "id": 207645038,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022341
    },
    {
        "content": "<p>Do you want them to be semi infinite or infinite?</p>",
        "id": 207645069,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022359
    },
    {
        "content": "<p>Oh I see.</p>",
        "id": 207645125,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598022369
    },
    {
        "content": "<p>I think that perhaps the correct setting for this is to have some kind of type with a <code>succ</code> function</p>",
        "id": 207645177,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022404
    },
    {
        "content": "<p>I learnt this trick from <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span></p>",
        "id": 207645186,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022409
    },
    {
        "content": "<p><code>succ</code> being the differential in this case?</p>",
        "id": 207645239,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598022442
    },
    {
        "content": "<p>And a complex is a functor from this diagram to Ab,</p>",
        "id": 207645303,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022481
    },
    {
        "content": "<p>I'm thinking of the type as an index type</p>",
        "id": 207645324,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022483
    },
    {
        "content": "<p>Ah ok.</p>",
        "id": 207645356,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598022490
    },
    {
        "content": "<p>Eg nat or int</p>",
        "id": 207645360,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022491
    },
    {
        "content": "<p>Complexes are already there</p>",
        "id": 207645381,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598022507
    },
    {
        "content": "<p>Oh great</p>",
        "id": 207645408,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022523
    },
    {
        "content": "<p>What about short exact sequences of complexes?</p>",
        "id": 207645441,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022539
    },
    {
        "content": "<p>So we only need to turn it into an infty-cat</p>",
        "id": 207645445,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598022541
    },
    {
        "content": "<p>Are they indexed by nat, int  or a more general thing?</p>",
        "id": 207645507,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022575
    },
    {
        "content": "<p>Are you serious about infinity cats?</p>",
        "id": 207645518,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022584
    },
    {
        "content": "<p>What do they have to do with it?</p>",
        "id": 207645531,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022589
    },
    {
        "content": "<p>I mean, complexes are just simplicial abelian groups right? <span aria-label=\"triangular ruler\" class=\"emoji emoji-1f4d0\" role=\"img\" title=\"triangular ruler\">:triangular_ruler:</span></p>",
        "id": 207645541,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598022595
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/chain_complex\">docs#chain_complex</a></p>",
        "id": 207645667,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598022665
    },
    {
        "content": "<p>Did you see the CGDA thread <span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> ?</p>",
        "id": 207645681,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022674
    },
    {
        "content": "<p>No.</p>",
        "id": 207645690,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598022681
    },
    {
        "content": "<p>Things start to get a bit hairy after a while</p>",
        "id": 207645700,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598022688
    },
    {
        "content": "<p>It's not clear to me whether I'm serious about infty-cats</p>",
        "id": 207646029,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598022852
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/116395-maths/topic/Localization.20of.20categories/near/207646029\">said</a>:</p>\n<blockquote>\n<p>It's not clear to me whether I'm serious about infty-cats</p>\n</blockquote>\n<p>Certainly we would want to consider the internal hom, right?</p>",
        "id": 207646060,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598022876
    },
    {
        "content": "<p>I'm scared by all the coherence issues that homological algebra will bring upon us</p>",
        "id": 207646065,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1598022882
    },
    {
        "content": "<p>I can't link to the CDGA thread because I'm on mobile but if you search for \"I thought the discussion related to definitional associativity of addition and so on might benefit from a concrete example\" you'll find it.</p>",
        "id": 207646691,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598023146
    },
    {
        "content": "<p>I found it (in case it helps: <a href=\"#narrow/stream/116395-maths/topic/CDGAs/near/167848869\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/CDGAs/near/167848869</a> )</p>",
        "id": 207646736,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598023172
    },
    {
        "content": "<p>In short, somehow considering the direct sum of the objects seems to be an essential trick</p>",
        "id": 207647594,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598023576
    },
    {
        "content": "<p>Implementation issues start getting serious at this point and until we've tried a few ways we won't know what works best in dependent type theory</p>",
        "id": 207647664,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598023610
    },
    {
        "content": "<p>Another approach to CDGAs now would be as an internal commutative monoid.</p>",
        "id": 207693882,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598050888
    },
    {
        "content": "<p>I suspect this would provide excellent insulation from DTT hell. Whether they're usable is a separate question. :-)</p>",
        "id": 207693951,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598050935
    },
    {
        "content": "<p>Right, but the associative condition / commutative condition are only true up to homotopy</p>",
        "id": 207693958,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598050953
    },
    {
        "content": "<p>of chain complexes</p>",
        "id": 207693965,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598050958
    },
    {
        "content": "<p>I guess you could work in the homotopy category?</p>",
        "id": 207694261,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598051277
    },
    {
        "content": "<p>Oh never mind, it's just a monoid object in complexes</p>",
        "id": 207694485,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598051454
    },
    {
        "content": "<p>I guess these so-called A_infinity algebras are monoids up to homotopy?</p>",
        "id": 207695155,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598052062
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Localization.20of.20categories/near/207644586\">said</a>:</p>\n<blockquote>\n<p>This has been one of the criticisms of the development -- \"what is the point of it?\". But Scott has persevered for years and now it's looking increasingly likely that we're going to be using it to do schemes</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span>, <span class=\"user-mention\" data-user-id=\"260921\">@Markus Himmel</span> and <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> have all made very substantial contributions, and there are others as well. Homological algebra and sheaves, both built on top of this library, have finally started to arrive.</p>",
        "id": 207698336,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598055325
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/116395-maths/topic/Localization.20of.20categories/near/207644012\">said</a>:</p>\n<blockquote>\n<p>I've been playing around more with these inductive-quotient constructions, and I've sketched out the localization of a category here:<br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/cat_localization/src/category_theory/localization.lean\">https://github.com/leanprover-community/mathlib/blob/cat_localization/src/category_theory/localization.lean</a></p>\n<p>I'm sure others have thought about doing this, e.g. in relation to derived categories. I didn't find anything in mathlib, so I wonder whether there is another branch that makes a similar construction?</p>\n</blockquote>\n<p>I do remember seeing someone's branch a while back, but I think it did less than you've already got here. This looks good!</p>",
        "id": 207698408,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598055420
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Localization.20of.20categories/near/207645441\">said</a>:</p>\n<blockquote>\n<p>What about short exact sequences of complexes?</p>\n</blockquote>\n<p>There isn't a bundled <code>ShortExactSequence</code> structure, but Markus PR'd the definition of exactness a week or so ago, so it's completely possible to state the theorem about long exact sequences now.</p>",
        "id": 207698482,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1598055519
    },
    {
        "content": "<p>Okay! I'll try to clean it up a bit and open a PR soon. I think it's worthwhile to prove, e.g., that <code>lift</code> is functorial in <code>F</code>. But the statement is a bit complicated, since the source category is the full subcategory of functors which map <code>S</code> to isomorphisms.</p>",
        "id": 207701598,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1598060829
    }
]