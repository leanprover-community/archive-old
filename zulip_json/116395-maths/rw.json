[
    {
        "content": "<p>I am trying to prove that the set of principal fractional ideals of a number ring is a subgroup of the group of fractional ideals.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">finite_dimensional</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">field</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">subring</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">integral_closure</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">fractional_ideal</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">rat</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">algebra</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">algebraic</span>\n\n<span class=\"n\">class</span> <span class=\"n\">number_field</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n   <span class=\"o\">(</span><span class=\"n\">fld</span> <span class=\"o\">:</span> <span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n   <span class=\"o\">(</span><span class=\"n\">alg</span> <span class=\"o\">:</span> <span class=\"n\">algebra</span> <span class=\"n\">ℚ</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n   <span class=\"o\">(</span><span class=\"n\">fd</span> <span class=\"o\">:</span> <span class=\"n\">finite_dimensional</span> <span class=\"n\">ℚ</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">field_of_number_field</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">number_field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">field</span> <span class=\"n\">K</span> <span class=\"o\">:=</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span><span class=\"bp\">.</span><span class=\"n\">fld</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">algebra_of_number_field</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">number_field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">algebra</span> <span class=\"n\">ℚ</span> <span class=\"n\">K</span> <span class=\"o\">:=</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span><span class=\"bp\">.</span><span class=\"n\">alg</span>\n\n<span class=\"n\">def</span> <span class=\"n\">number_ring</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">number_field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">integral_closure</span> <span class=\"bp\">ℤ</span> <span class=\"n\">K</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">field</span><span class=\"bp\">.</span><span class=\"n\">to_comm_ring</span> <span class=\"n\">K</span> <span class=\"bp\">_</span><span class=\"n\">inst_1</span><span class=\"bp\">.</span><span class=\"n\">fld</span><span class=\"o\">)</span> <span class=\"bp\">_</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">integral_domain_of_number_ring</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">number_field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">integral_domain</span> <span class=\"o\">(</span><span class=\"n\">number_ring</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">number_ring</span> <span class=\"n\">K</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">integral_domain</span>\n\n<span class=\"n\">noncomputable</span> <span class=\"n\">theory</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">finite_dimensional</span>\n<span class=\"kn\">open</span> <span class=\"n\">ring</span><span class=\"bp\">.</span><span class=\"n\">fractional_ideal</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">number_field</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">number_field</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">fraction_map</span> <span class=\"o\">(</span><span class=\"n\">number_ring</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">principal_fractional_ideal</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">ring</span><span class=\"bp\">.</span><span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span> <span class=\"bp\">|</span> <span class=\"n\">submodule</span><span class=\"bp\">.</span><span class=\"n\">is_principal</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">is_group</span> <span class=\"o\">:</span> <span class=\"n\">group</span> <span class=\"o\">(</span><span class=\"n\">ring</span><span class=\"bp\">.</span><span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">is_subgroup</span> <span class=\"o\">:</span> <span class=\"n\">subgroup</span> <span class=\"o\">(</span><span class=\"n\">ring</span><span class=\"bp\">.</span><span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">use</span> <span class=\"o\">(</span><span class=\"n\">principal_fractional_ideal</span> <span class=\"n\">K</span> <span class=\"n\">g</span><span class=\"o\">),</span>\n  <span class=\"o\">{</span>\n<span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"o\">},</span>\n  <span class=\"o\">{</span>\n    <span class=\"n\">unfold</span> <span class=\"n\">principal_fractional_ideal</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_set_of_eq</span><span class=\"o\">],</span>\n    <span class=\"n\">rintros</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">ring</span><span class=\"bp\">.</span><span class=\"n\">fractional_ideal</span><span class=\"bp\">.</span><span class=\"n\">is_principal_iff</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n    <span class=\"n\">cases</span> <span class=\"n\">ha</span> <span class=\"k\">with</span> <span class=\"n\">c</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n    <span class=\"n\">cases</span> <span class=\"n\">hb</span> <span class=\"k\">with</span> <span class=\"n\">d</span> <span class=\"n\">hb</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"n\">c</span><span class=\"bp\">*</span><span class=\"n\">d</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">hb</span><span class=\"o\">],</span>\n    <span class=\"n\">rw</span> <span class=\"n\">ring</span><span class=\"bp\">.</span><span class=\"n\">fractional_ideal</span><span class=\"bp\">.</span><span class=\"n\">span_singleton_mul_span_singleton</span> <span class=\"n\">c</span> <span class=\"n\">d</span><span class=\"o\">,</span>\n    <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"o\">},</span>\n <span class=\"o\">{</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>In showing that it is closed under multiplication, it gives me an error : </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">rewrite</span> <span class=\"n\">tactic</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">did</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"kn\">instance</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">pattern</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">target</span> <span class=\"n\">expression</span>\n  <span class=\"n\">span_singleton</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">span_singleton</span> <span class=\"n\">d</span>\n<span class=\"n\">state</span><span class=\"o\">:</span>\n<span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">number_field</span> <span class=\"n\">K</span><span class=\"o\">,</span>\n<span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">fraction_map</span> <span class=\"err\">↥</span><span class=\"o\">(</span><span class=\"n\">number_ring</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"n\">K</span><span class=\"o\">,</span>\n<span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ring</span><span class=\"bp\">.</span><span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n<span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">localization_map</span><span class=\"bp\">.</span><span class=\"n\">codomain</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n<span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">span_singleton</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n<span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">localization_map</span><span class=\"bp\">.</span><span class=\"n\">codomain</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n<span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">span_singleton</span> <span class=\"n\">d</span>\n<span class=\"err\">⊢</span> <span class=\"n\">span_singleton</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">span_singleton</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">span_singleton</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">d</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>I can get it down to a reflectivity statement, but <code>refl</code> does not solve it. Any help is appreciated, thank you!</p>",
        "id": 208961164,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1599137399
    },
    {
        "content": "<p>Did you already define the group structure on fractional ideals in your code?</p>",
        "id": 208963986,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599138716
    },
    {
        "content": "<p>(it's <code>sorry</code>above)</p>",
        "id": 208964060,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599138731
    },
    {
        "content": "<p>If you want a group, don't you need to be talking about invertible fractional ideals?</p>",
        "id": 208964786,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599139063
    },
    {
        "content": "<p>The library already has a <code>monoid (ring.fractional_ideal g)</code>, but you re\"defined\" it as <code>sorry</code> by writing</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">instance</span> <span class=\"n\">is_group</span> <span class=\"o\">:</span> <span class=\"n\">group</span> <span class=\"o\">(</span><span class=\"n\">ring</span><span class=\"bp\">.</span><span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n</code></pre></div>\n\n\n<p>(which probably doesn't compile because of the comma), and so the multiplication in <code>span_singleton c * span_singleton d</code> doesn't mean anything and the lemma from the library doesn't apply.</p>",
        "id": 208964949,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599139130
    },
    {
        "content": "<p>So I'm guessing this isn't your real code but I'm also a bit confused about what your real code would be, because of the \"invertible\" issue (I guess you can just use <code>units (fractional_ideal g)</code>).</p>",
        "id": 208965177,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599139231
    },
    {
        "content": "<p>Or you could replace \"group\" by \"monoid\" throughout as well</p>",
        "id": 208965268,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599139271
    },
    {
        "content": "<p>(for Dedekind domains, invertibility is automatic <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>)</p>",
        "id": 208965269,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599139271
    },
    {
        "content": "<p>what about the zero ideal?</p>",
        "id": 208965489,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599139363
    },
    {
        "content": "<p>Ok yeah, for nonzero fractional ideals</p>",
        "id": 208965600,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599139413
    },
    {
        "content": "<p>Or define a <code>group_with_zero</code></p>",
        "id": 208965785,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599139486
    },
    {
        "content": "<p>I guess even the monoid instance from mathlib should really be a <code>monoid_with_zero</code></p>",
        "id": 208967728,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599140336
    },
    {
        "content": "<p>Unfortunately, I don't think <code>subgroup_with_zero</code> is a thing.</p>",
        "id": 208968593,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1599140672
    },
    {
        "content": "<p>I finally figured out the issue. Thank you!</p>",
        "id": 208997628,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1599151995
    }
]