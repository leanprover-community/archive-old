[
    {
        "content": "<p>A function <code>f : zero_at_infinity_continuous_map Œ± Œ≤</code> is a continuous function <code>f : Œ± ‚Üí Œ≤</code> which satisfies <code>tendsto f (cocompact Œ±) (ùìù 0)</code>; such a function is said to <em>vanish at infinity</em>.  What should be the notation for such maps? In mathlib, we have <code>C(Œ±, Œ≤)</code> for continuous functions and <code>Œ± ‚Üí·µá Œ≤</code> for bounded continuous functions (the latter is localized notation). In the literature, continuous functions vanishing at infinity are denoted <code>C‚ÇÄ(Œ±, Œ≤)</code> (which <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> seems to prefer), whereas <span class=\"user-mention\" data-user-id=\"387244\">@Ya√´l Dillies</span> suggested <code>Œ± ‚ÜíC‚ÇÄ Œ≤</code>.</p>",
        "id": 276893850,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648482890
    },
    {
        "content": "<p>I want to change the notation for <code>continuous_map</code> from <code>C(Œ±, Œ≤)</code> to <code>Œ± ‚ÜíC Œ≤</code> because it is quite literally the only instance of prefix notation for morphisms in mathlib and makes things unreadable when nested.</p>",
        "id": 276893973,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1648482962
    },
    {
        "content": "<p>I can't seem to create a poll, can you do it?</p>",
        "id": 276894061,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648482992
    },
    {
        "content": "<p>I know this is very standard in the literature but such notation has already been abandoned by mathlib eons ago.</p>",
        "id": 276894112,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1648483020
    },
    {
        "content": "<p>Can't you? Here is the template.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">/</span><span class=\"n\">poll</span> <span class=\"bp\">&lt;</span><span class=\"n\">name</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">poll</span><span class=\"bp\">&gt;</span>\n<span class=\"n\">option1</span>\n<span class=\"n\">option2</span>\n</code></pre></div>",
        "id": 276894162,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1648483046
    },
    {
        "content": "<p>Does it just not preview correctly?</p>",
        "id": 276894185,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648483061
    },
    {
        "content": "<p>Do NOT send anything else with the message, it will screw it up.</p>",
        "id": 276894194,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1648483067
    },
    {
        "content": "<p>/poll Notation for continuous maps vanishing at infinity<br>\n<code>Œ± ‚ÜíC‚ÇÄ Œ≤</code><br>\n<code>C‚ÇÄ(Œ±, Œ≤)</code></p>",
        "id": 276894261,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648483085
    },
    {
        "content": "<p>I place a very high premium on notation which matches that used in the literature.  I don't think Ya√´l's suggestion that we \"abandoned [such an effort] eons ago\" is correct.</p>",
        "id": 276897968,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1648484711
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Ya√´l Dillies</span> <a href=\"#narrow/stream/116395-maths/topic/Notation.20for.20.60zero_at_infinity_continuous_map.60/near/276893973\">said</a>:</p>\n<blockquote>\n<p>I want to change the notation for <code>continuous_map</code> from <code>C(Œ±, Œ≤)</code> to <code>Œ± ‚ÜíC Œ≤</code> because it is quite literally the only instance of prefix notation for morphisms in mathlib and makes things unreadable when nested.</p>\n</blockquote>\n<p>It's not the only instance, we also have it in the smooth manifolds library for <a href=\"https://github.com/leanprover-community/mathlib/blob/0c6f0c2a9abeafd761ffff042ab6e5a6ea140f80/src/geometry/manifold/cont_mdiff_map.lean#L40\">smooth maps</a>.</p>",
        "id": 276898263,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1648484834
    },
    {
        "content": "<p>And, to repeat, this kind of notation is ubiquitous in the literature (I am constantly writing things like \"let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>‚àà</mo><msubsup><mi>C</mi><mrow><mo>‚àí</mo><mn>4</mn></mrow><mrow><mi>k</mi><mo separator=\"true\">,</mo><mi>Œ±</mi></mrow></msubsup><mo stretchy=\"false\">(</mo><mi>M</mi><mo separator=\"true\">,</mo><mi mathvariant=\"double-struck\">R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f\\in C^{k, \\alpha}_{-4}(M, \\mathbb{R})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚àà</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2917em;vertical-align:-0.3246em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.967em;\"><span style=\"top:-2.4337em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">‚àí</span><span class=\"mord mtight\">4</span></span></span></span><span style=\"top:-3.1809em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">Œ±</span></span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3246em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mclose\">)</span></span></span></span>\")</p>",
        "id": 276898542,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1648484952
    },
    {
        "content": "<p>By ‚Äúboth notation‚Äù, I mean that it could be nice to have <code>Œ± ‚ÜíC Œ≤</code> and <code>C(Œ± , Œ≤)</code>.  <br>\nSince  in type theory the type of maps from <code>Œ±</code> to <code>Œ≤</code> is denoted by <code>Œ± ‚Üí Œ≤</code>, i'd say the first one is more natural, but there are not enough decorations available for all imaginable spaces of maps.</p>",
        "id": 276906396,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1648488458
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> I think if there are multiple notations, we lack the capability to declare one out of them as the preferred one.  So in the places where the system itself selects notation (the \"infoview\" at screen right and the documentation), we won't control which one gets selected there.</p>",
        "id": 276917354,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1648494224
    },
    {
        "content": "<p>You can control which notation is printed with priorities, just like attributes: <a href=\"#narrow/stream/113488-general/topic/Notation.20with.20implicit.20arguments.20.3F/near/200917268\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Notation.20with.20implicit.20arguments.20.3F/near/200917268</a></p>",
        "id": 276929965,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1648500907
    },
    {
        "content": "<p>Then I see no objection to having both notations!  (With <code>C‚ÇÄ(Œ±, Œ≤)</code> as the default.)</p>",
        "id": 276930133,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1648500995
    }
]