[
    {
        "content": "<p>The bracketless <code>⨁ i, Mᵢ i →+ M</code> looks ok to me, but Lean wants <code>(⨁ i, Mᵢ i) →+ M</code>. Am I naive in thinking that trying to remove the brackets by fiddling with priorities would be a good idea? I don't really know enough about parsing to do this though :-/ It's all the binders, scoped stuff I still feel a bit intimidated by.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.direct_sum</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">direct_sum</span>\n\n<span class=\"k\">#print</span> <span class=\"kd\">notation</span> <span class=\"bp\">→+</span> <span class=\"c1\">-- _ `→+`:25 _:24 := add_monoid_hom #1 #0</span>\n<span class=\"k\">#print</span> <span class=\"kd\">notation</span> <span class=\"bp\">⨁</span> <span class=\"c1\">-- `⨁`:1024 binders `,`:0 (scoped 0) := #0</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">ι</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"bp\">ᵢ</span> <span class=\"o\">:</span> <span class=\"n\">ι</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ι</span><span class=\"o\">),</span> <span class=\"n\">add_comm_monoid</span> <span class=\"o\">(</span><span class=\"n\">M</span><span class=\"bp\">ᵢ</span> <span class=\"n\">i</span><span class=\"o\">)]</span>\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n\n<span class=\"k\">#check</span> <span class=\"bp\">⨁</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">M</span><span class=\"bp\">ᵢ</span> <span class=\"n\">i</span> <span class=\"bp\">→+</span> <span class=\"n\">A</span> <span class=\"c1\">-- parses but becomes the sum of the maps, not the map from the sum</span>\n</code></pre></div>",
        "id": 238915108,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1621101820
    },
    {
        "content": "<p>I think it's probably a bad idea; the current binding power matches that of <code>\\Pi</code> and <code>\\Pi\\0</code>, so we'd need a good argument for why direct_sum is different.</p>",
        "id": 238915347,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1621102059
    }
]