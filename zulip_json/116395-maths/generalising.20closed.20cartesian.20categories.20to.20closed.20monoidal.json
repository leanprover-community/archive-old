[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246273\">@Bhavik Mehta</span>, I want to have some of the material you developed for closed cartesian categories available more generally for closed monoidal categories. Lots of the basic stuff just generalises directly (indeed, you left a comment to this effect).</p>\n<p>I'm having trouble seeing how to do it without duplicating everything however. </p>\n<p><a href=\"https://github.com/leanprover-community/mathlib/pull/12386\">#12386</a> is a start on this, and you can see I've just duplicated the material on currying. Any suggestions on improving this? The fundamental problem is that I don't think we want to use the \"general\" <code>ihom</code> everywhere in place of <code>exp</code>, because then there will be unification/typechecking problems all over the place when Lean can't see that the monoidal structure involved is just the cartesian structure.</p>",
        "id": 273729645,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1646178301
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> perhaps worthwhile mentioning that I experimented with a definition of the internal Hom in the LTE repo. See <code>for_mathlib/internal_hom.lean</code> there (I think?). I found it to be quite annoying to get the fully functorial construction...</p>",
        "id": 273730010,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646178535
    },
    {
        "content": "<p>Your construction looks much smoother!</p>",
        "id": 273730242,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646178676
    },
    {
        "content": "<p>It's not mine: I'm just copying and pasting what Bhavik had already done in the cartesian closed case.</p>",
        "id": 273730453,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1646178767
    },
    {
        "content": "<p>(Noting that it works in any closed monoidal category.)</p>",
        "id": 273730476,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1646178775
    },
    {
        "content": "<p>Wow... I have not looked for a while at how big the <code>for_mathlib</code> folder has become in LTE...</p>",
        "id": 273730503,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1646178793
    },
    {
        "content": "<p>Do I understand correctly that the internal Hom functor <code>Cop -&gt; C -&gt; C</code> is still missing I'm the <code>ihom</code> approach?</p>",
        "id": 273731443,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646179275
    },
    {
        "content": "<p>It's there in the cartesian closed case, and I haven't looked yet at whether there is any obstacle to generalising it.</p>",
        "id": 273739413,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1646184559
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span>, no the internal hom functor easily generalises too. I've updated the PR.</p>",
        "id": 273740707,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1646185552
    },
    {
        "content": "<p>Great!</p>",
        "id": 273740771,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646185582
    }
]