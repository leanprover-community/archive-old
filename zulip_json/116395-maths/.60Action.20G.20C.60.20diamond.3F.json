[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"416472\">@Winston Yin</span> is currently giving a shot at proving that <code>Action C G</code> is monoidal closed when the category <code>C</code> is. We also already have that <code>Action C G </code> is rigid when <code>C</code> is. I think both of these instances are definitely things we want, but they lead to the following diamond: a rigid structure on <code>C</code> induces a monoidal_closed structure on <code>C</code> via <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.monoidal_closed_of_left_rigid_category\">docs#category_theory.monoidal_closed_of_left_rigid_category</a>, which in turn induces a monoidal closed structure on <code>Action C G</code>, but there's also an induced rigid structure on <code>Action C G</code> which in turn induces a monoidal closed structure on <code>Action C G</code>. Is this diamond something to worry about, and if so how are such diamonds generally dealt with? Since there's at most one monoidal closed structure on any monoidal category up to canonical isomorphism it might not be too bad.</p>",
        "id": 289803911,
        "sender_full_name": "Antoine Labelle",
        "timestamp": 1657939540
    },
    {
        "content": "<p>I can't be very helpful here since I barely even know what a category is, but the easiest way to deal with a diamond is by turning <code>instance</code>s into <code>def</code>s.  As a rule of thumb, any <code>instance</code> holding data should be so that there's no other reasonable way to define the object in question, up to definitional equality.</p>",
        "id": 289804111,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1657939825
    },
    {
        "content": "<p>You can then use said <code>def</code>s to provide <code>instance</code>s for specific cases where said definition does give exactly what you want.</p>",
        "id": 289804122,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1657939858
    },
    {
        "content": "<p>Would it make snes for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.left_rigid_category\">docs#category_theory.left_rigid_category</a> to extend <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.monoidal_closed\">docs#category_theory.monoidal_closed</a>?</p>",
        "id": 289819239,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1657963955
    },
    {
        "content": "<p>I think it might be an option, but I'm not sure, I would wait for the opinion of other people familiar with that part pf the library first.</p>",
        "id": 289828481,
        "sender_full_name": "Antoine Labelle",
        "timestamp": 1657978506
    },
    {
        "content": "<p>I think it would make sense.Since the adjoints/duals involved are essentially unique (when they exist), there shouldn't be a need for any further coherence data.</p>",
        "id": 289841413,
        "sender_full_name": "Reid Barton",
        "timestamp": 1657996667
    }
]