[
    {
        "content": "<p>Do we need some assumptions on the codomain of <code>f : ℂ → E</code> to prove the maximum modulus principle? I can easily prove that</p>\n<ul>\n<li>if <code>is_max_on (norm ∘ f) (closed_ball c R) c</code>, <code>R &gt; 0</code>, then <code>norm ∘ f</code> is constant on this disc (+ corollaries);</li>\n<li>if the norm on <code>E</code> is strictly convex, then <code>is_local_max (norm ∘ f) a</code> implies <code>f x = f a</code> near <code>a</code> (+ corollaries).</li>\n</ul>\n<p>Is the second statement true without the \"strictly convex\" assumption?<br>\n<span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 266064247,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1640446863
    },
    {
        "content": "<p>Btw Yury I'm defining strictly convex spaces.</p>",
        "id": 266065505,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640449149
    },
    {
        "content": "<p>You need some assumption. Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mo>=</mo><msup><mi mathvariant=\"double-struck\">C</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\"> E = \\mathbb{C}^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> with the sup norm. Let <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(z) = (1, z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span>. Then, for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> around <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>, the norm of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span> is constant equal to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>, and still <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> is not constant.</p>",
        "id": 266076501,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1640467887
    },
    {
        "content": "<p>See <a href=\"https://www.ams.org/journals/proc/1967-018-04/S0002-9939-1967-0214794-2/\">https://www.ams.org/journals/proc/1967-018-04/S0002-9939-1967-0214794-2/</a> for instance.</p>",
        "id": 266076555,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1640467978
    },
    {
        "content": "<p>For now, I'll formalize the weaker version and add a reference to this paper. Thanks!</p>",
        "id": 266081698,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1640477033
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Do you have some draft? I have (some versions of the) strict Jensen inequality in <a href=\"https://github.com/leanprover-community/mathlib/pull/11552\">#11552</a> and I would prefer to have a typeclass saying \"norm is strictly convex\".</p>",
        "id": 268501214,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642577968
    },
    {
        "content": "<p>With instances for <code>complex</code> and (less urgent) Lp.</p>",
        "id": 268501239,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642577995
    },
    {
        "content": "<p>We have (something close to) strict convexity of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>L</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">L_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> on <a href=\"https://github.com/leanprover-community/mathlib/tree/behrend\">branch#behrend</a>. We use it in combinatorics!</p>",
        "id": 268502681,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642579196
    },
    {
        "content": "<p>I haven't yet written the definition of <code>strict_convex_space</code> because it is quite trivial from what we already have and I thought I would at least have the modulus of convexity on top to make it worth a PR, but if you need it now I can do it.</p>",
        "id": 268502842,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642579262
    },
    {
        "content": "<p>I just want to take \"the norm is strictly convex\" as a typeclass argument instead of an explicit one.</p>",
        "id": 268503306,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642579625
    },
    {
        "content": "<p>Ah then wait a few minutes!</p>",
        "id": 268503342,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642579657
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 268503445,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642579721
    },
    {
        "content": "<p>Just to make sure, do we agree that a strictly convex space is a space where the <strong>norm</strong> is strictly convex? Because I never saw the equivalence with the fact that the <strong>unit ball</strong> is strictly convex.</p>",
        "id": 268504805,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642580743
    },
    {
        "content": "<p>This really bugs me, because \"strictly convex norm\" refers to \"the balls are strictly convex\", not \"the norm is a strictly convex function\".</p>",
        "id": 268506806,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642581906
    },
    {
        "content": "<p>Here are the two options</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.convex.strict</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.convex.topology</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">metric</span> <span class=\"n\">set</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">strict_convex_space_through_balls</span> <span class=\"o\">(</span><span class=\"bp\">𝕜</span> <span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">normed_linear_ordered_field</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">semi_normed_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">norm_strict_convex</span> <span class=\"o\">:</span> <span class=\"n\">strict_convex</span> <span class=\"bp\">𝕜</span> <span class=\"o\">(</span><span class=\"n\">ball</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"mi\">1</span><span class=\"o\">))</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">strict_convex_space_through_norm</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">semi_normed_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">norm_strict_convex</span> <span class=\"o\">:</span> <span class=\"n\">strict_convex_on</span> <span class=\"n\">ℝ</span> <span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">norm</span> <span class=\"n\">E</span> <span class=\"n\">_</span><span class=\"o\">))</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">are_they_equivalent</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">semi_normed_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">strict_convex_space_through_norm</span> <span class=\"n\">E</span> <span class=\"bp\">↔</span> <span class=\"n\">strict_convex_space_through_balls</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>The first one seems strictly <del>convex</del> more general?</p>",
        "id": 268509436,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642583269
    },
    {
        "content": "<p>Do you mean <code>closed_ball</code>?</p>",
        "id": 268540173,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642599751
    },
    {
        "content": "<p>I shouldn't formalize things after midnight: clearly, <code>norm</code> is not a strictly convex function on <code>complex</code> (take <code>x = 1</code>, <code>y = 2</code>, any <code>a</code>, <code>b</code>)</p>",
        "id": 268541965,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642600477
    },
    {
        "content": "<p>So, I should redo the last theorem assuming that <code>closed_ball 0 R</code> is convex.</p>",
        "id": 268542060,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642600526
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/116395-maths/topic/maximum.20modulus.20principle/near/268540173\">said</a>:</p>\n<blockquote>\n<p>Do you mean <code>closed_ball</code>?</p>\n</blockquote>\n<p>Uh, yes</p>",
        "id": 268545989,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642602152
    },
    {
        "content": "<p>So the correct definition is the second one, right?</p>",
        "id": 268546098,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642602196
    },
    {
        "content": "<p>The correct definition is the first one with <code>closed_ball</code>: <code>strict_convex_space_through_norm</code> is never true on a non-trivial normed space (just take <code>v</code> and <code>v + v</code>).</p>",
        "id": 268554578,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642605668
    },
    {
        "content": "<p>(I'm not sure about radius 1 vs <code>∀ R</code> but they're equivalent for <code>real</code>)</p>",
        "id": 268554681,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642605716
    },
    {
        "content": "<p>That's what I meant <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 268555473,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642606072
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> Any news?</p>",
        "id": 269027880,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642957371
    },
    {
        "content": "<p>(if not, then I'll add a simple class with a couple of instances tonight)</p>",
        "id": 269027889,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642957400
    },
    {
        "content": "<p>Yup, I have the stuff ready-ish if you need it.</p>",
        "id": 269028060,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642957657
    },
    {
        "content": "<p>PR?</p>",
        "id": 269028231,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1642957914
    },
    {
        "content": "<p>Will open it this evening.</p>",
        "id": 269028275,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642957942
    },
    {
        "content": "<p>Any news? <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span></p>",
        "id": 269932519,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643548656
    },
    {
        "content": "<p>Just need to find an hour to put everything together.</p>",
        "id": 269961504,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643581463
    },
    {
        "content": "<p>Could you please open a PR with whatever you have on this subject?</p>",
        "id": 270332273,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643776070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span>  I'm sorry for poking you again but I would prefer if you either open a (possibly, not finalized) PR, or release the lock on this feature and let me implement it.</p>",
        "id": 270458219,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643836284
    },
    {
        "content": "<p>Yes sorry, I've been having too much fun defining order categories. Doing it now.</p>",
        "id": 270458320,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643836324
    },
    {
        "content": "<p>Are you happy with the PR?</p>",
        "id": 270742350,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643993890
    },
    {
        "content": "<p>I'll review it tonight. I'm trying to write a paper for ITP (deadline Feb. 8)</p>",
        "id": 270743003,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1643994165
    },
    {
        "content": "<p>Me too. Help <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 270745386,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643995300
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>, are you happy with the \"two semirings\" lemmas from <a href=\"https://github.com/leanprover-community/mathlib/pull/11794\">#11794</a>?</p>",
        "id": 272377845,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1645175887
    },
    {
        "content": "<p>I'm trying to formalize a version of the maximum principle for strictly convex codomain.</p>",
        "id": 280296118,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1651025747
    },
    {
        "content": "<p>I have the following problem: the completion of a strictly convex space may be not strictly convex. So, I have to either require <code>[strict_convex_space F] [complete_space F]</code> or <code>[strict_convex_space (completion F)]</code>.</p>",
        "id": 280296233,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1651025850
    },
    {
        "content": "<p>Are there any better options?</p>",
        "id": 280296241,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1651025858
    },
    {
        "content": "<p>E.g., I don't know whether the principle is true in a strictly convex space if the completion is not strictly convex.</p>",
        "id": 280296313,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1651025901
    }
]