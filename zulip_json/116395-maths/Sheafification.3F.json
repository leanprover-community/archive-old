[
    {
        "content": "<p>Is sheafification defined in <a href=\"https://github.com/ramonfmir/lean-scheme\" target=\"_blank\" title=\"https://github.com/ramonfmir/lean-scheme\">https://github.com/ramonfmir/lean-scheme</a>? I might have just missed it or there's a good reason for it not being added. I would be happy to work on a pull request if there's interest</p>",
        "id": 171308402,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1563592849
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"231775\">@Brendan Seamas Murphy</span> Welcome!</p>",
        "id": 171310129,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563595428
    },
    {
        "content": "<p>I'm not aware of sheafification being defined.</p>",
        "id": 171310133,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563595438
    },
    {
        "content": "<p>There has been lots of debate about how to implement sheafs correctly.</p>",
        "id": 171310173,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563595453
    },
    {
        "content": "<p>The implementation in the <code>lean-scheme</code> repo will most likely change substantially when being added to mathlib.</p>",
        "id": 171310175,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563595478
    },
    {
        "content": "<p>So I'm not sure if it is wise to make a PR to the lean-scheme repository.</p>",
        "id": 171310177,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563595498
    },
    {
        "content": "<p>It's very unfortunate that we aren't moving faster )-;</p>",
        "id": 171310186,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563595516
    },
    {
        "content": "<p>Well I'd be happy to help, but I'm just learning this stuff for the first time so I certainly don't know the right way to implement this stuff</p>",
        "id": 171310705,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1563596533
    },
    {
        "content": "<p>I'm just trying to formalize a solution to a problem in hartshorne</p>",
        "id": 171310710,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1563596567
    },
    {
        "content": "<p>Nice!</p>",
        "id": 171311327,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563597820
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"231775\">@Brendan Seamas Murphy</span> That seems like a very nice way to dive in (-;</p>",
        "id": 171311374,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563597846
    },
    {
        "content": "<p>Sheaves have been quite stubborn. Which problem were you thinking of formalizing?</p>",
        "id": 171311383,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563597867
    },
    {
        "content": "<p>Problem 2.1.2a, that the stalk of the the sheaf kernel/image gives you the kernel/image of the induced map on the stalks</p>",
        "id": 171311452,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1563598027
    },
    {
        "content": "<p>I was finding it hard to understand how the image embeds into the codomain (see problem 2.1.4) and I thought lean might be able to keep me straight</p>",
        "id": 171311455,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1563598065
    },
    {
        "content": "<p>Aha, I see.</p>",
        "id": 171311496,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563598113
    },
    {
        "content": "<p>To state the problem though I need (pre)sheaves of abelian groups and the sheaf image/sheafification</p>",
        "id": 171311498,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1563598125
    },
    {
        "content": "<p>Without sheafification you won't get far with that exercise (-;</p>",
        "id": 171311500,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563598129
    },
    {
        "content": "<p>Yeah lol</p>",
        "id": 171311501,
        "sender_full_name": "Brendan Seamas Murphy",
        "timestamp": 1563598136
    },
    {
        "content": "<p>Maybe we can kick some action into the sheaf development again.</p>",
        "id": 171311570,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563598258
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Are there any updates since the discussions from 2 or 3 weeks ago?</p>",
        "id": 171311581,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563598277
    },
    {
        "content": "<p>sheafification will also be a nice test drive of my PR of reflective subcategories!</p>",
        "id": 171311644,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1563598432
    },
    {
        "content": "<p>Sure, but we also want a hands on description.</p>",
        "id": 171311693,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563598475
    },
    {
        "content": "<p>And before anything like that... we first need a definition of sheaves.</p>",
        "id": 171311694,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1563598489
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"231775\">@Brendan Seamas Murphy</span> you are talking about the schemes project. If something is in mathlib then with high probability it is in some sort of shape which the experts are happy with. The schemes project is an MSc project which is \"mathematically right\" (in fact it's not even quite right at the minute -- the definition of scheme is wrong, it depends on the cover by affines) but which is not yet in mathlib so there are risks involved if you are thinking of doing something which will ultimately become a PR into mathlib. The issue with sheaves is that mathematically these things are completely unambiguous, but the CS people are actually making machines which model these ideas, and there is still a debate amongst the community as to which machine is best. This is a tedious implementation issue and it really should not affect any proofs, which should just use the \"mathematician's interface to sheaves\", but it does; indeed I think this is part of the point: if a different implementation makes proofs easier, then they want to change to that implementation.</p>\n<p>We don't have sheafification and one can think about how one might make it. There are two approaches. One is to fix upon a concrete idea of \"sheaves of X on Y\" e.g. (sheaves of abelian groups on a top space) and then make it by hand. This is what <span class=\"user-mention\" data-user-id=\"132858\">@Ramon Fernandez Mir</span> did with schemes, following me, who did it when I was learning and didn't know any other way. At the other extreme there is a glorious theory of sheaves of objects of a nice category on a site, and it would not surprise me if you could then slap down a few axioms on the objects and the site and get a general theory of sheafification. Which one do we do? Do we plough through sheaves of types on a top space, then sheaves of ab groups, sheaves of rings etc? The community is not actually sure. Glueing sheaves of types on a top space was surprisingly interesting. Glueing sheaves of objects on a site will be a lot more interesting by which I think I mean difficult. </p>\n<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> Kenny managed to glue sheaves of types on a top space and prove the universal property, using a low-level approach and an extremely dodgy definition of sheaves on a subspace of a top space, which relied on rejecting the concept type theory's inductive equality (it was broken anyway). I think glueing is a key test for the category approach. Do you want to glue sheaves on subspaces by categorifying Kenny's work, or do it again from scratch? </p>\n<p>Ultimately we have two ways of doing sheaves and the community has not yet understood the advantages and disadvantages of the two approaches.</p>",
        "id": 171320873,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563616537
    }
]