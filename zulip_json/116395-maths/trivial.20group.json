[
    {
        "content": "<p>I want to say that an add_comm_group is the trivial group <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{0\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mclose\">}</span></span></span></span>. Should I use <code>subsingleton</code> or <code>unique</code>?</p>",
        "id": 235366871,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1618933618
    },
    {
        "content": "<p>There is an instance <a href=\"https://leanprover-community.github.io/mathlib_docs/find/unique.subsingleton\">docs#unique.subsingleton</a>, right? Then <code>unique</code> is just strictly more useful.</p>",
        "id": 235368691,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1618934309
    },
    {
        "content": "<p>If it's an assumption to a lemma, then I'd use <code>subsingleton</code>.</p>",
        "id": 235369032,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1618934417
    },
    {
        "content": "<p>The great advantage of <code>subsingleton</code> is that it has no data in it, contrary to unique.</p>",
        "id": 235370417,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1618934896
    },
    {
        "content": "<p>Although if you have <code>[add_comm_group A] [unique A]</code>, chances are the data in <code>unique</code> is defeq to the zero in <code>add_comm_group</code> anyway</p>",
        "id": 235371475,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618935272
    },
    {
        "content": "<p>So the presence / absence of data is unlikely to matter</p>",
        "id": 235371506,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1618935291
    },
    {
        "content": "<p>It's the conclusion of a lemma. Oh, if unique isn't a prop, forget it :-)</p>",
        "id": 235372430,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1618935638
    },
    {
        "content": "<p>who knows what the element is</p>",
        "id": 235372452,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1618935649
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/trivial.20group/near/235371475\">said</a>:</p>\n<blockquote>\n<p>Although if you have <code>[add_comm_group A] [unique A]</code>, chances are the data in <code>unique</code> is defeq to the zero in <code>add_comm_group</code> anyway</p>\n</blockquote>\n<p>That's exactly the situation where they are not defeq:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">unique</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">default</span> <span class=\"n\">α</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span> <span class=\"c1\">-- fails</span>\n</code></pre></div>",
        "id": 235372731,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1618935763
    },
    {
        "content": "<p>I suspect Eric meant that for a concrete <code>A</code> that satisfies those constraints, the two definitions will probably agree, but obviously not when <code>A</code> is unknown, as you showed.</p>",
        "id": 235378347,
        "sender_full_name": "Nick Scheel",
        "timestamp": 1618937952
    },
    {
        "content": "<p>It hadn't occurred to me that <code>unique</code> wasn't a Prop; in my use case I want a Prop. Do we have propositional uniqueness? Not that it matters urgently, I've gone with subsingleton now.</p>",
        "id": 235378595,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1618938035
    },
    {
        "content": "<p><code>unique α</code> is a subsingleton for what it's worth, but yeah, if you need a <code>Prop</code> then subsingleton is the way to go</p>",
        "id": 235380790,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1618938975
    }
]