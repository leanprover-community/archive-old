[
    {
        "content": "<p>Is there a good reason that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/interval_integrable\">docs#interval_integrable</a> is defined the way it is? Would someone opposite if I just replace <code>interval_integrable f a b</code> by <code>integrable_on f (interval_oc a b)</code> everywhere?</p>",
        "id": 261623372,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1637059878
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span></p>",
        "id": 261623411,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1637059912
    },
    {
        "content": "<p>Also, do we actually want to use the capital iota notation for <code>interval_oc</code>?</p>",
        "id": 261623520,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1637059968
    },
    {
        "content": "<p><code>interval_oc</code> was not there when I defined <code>interval_integrable</code>.</p>",
        "id": 261861379,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637188908
    },
    {
        "content": "<p>Another idea: should we redefine <code>∫ x in a..b, f x ∂μ</code> as <code>sign (b - a) • ∫ x in interval_oc a b, f x ∂μ</code>?</p>",
        "id": 261883508,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637207992
    },
    {
        "content": "<p>(note: I'm not going to do either of these refactors in the nearest future)</p>",
        "id": 261883588,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637208013
    },
    {
        "content": "<p>(though I'm going to add it as a lemma)</p>",
        "id": 261884379,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637208867
    },
    {
        "content": "<p>That makes sense.</p>\n<p>Your suggestion on how to redefine <code>interval_integral</code> sounds good, although it might not simplify all that much (you have to reason about scalar multiplication instead of a difference).</p>",
        "id": 261917062,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1637236488
    },
    {
        "content": "<p>But you have 1 integral instead of 2.</p>",
        "id": 261982577,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637265735
    },
    {
        "content": "<p>I tried it with theorems in <code>analysis.calculus.parametric_integral</code>, and it works well.</p>",
        "id": 261982681,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637265788
    },
    {
        "content": "<p>Here is a typical proof that transfers a thm from <code>integral</code> to <code>interval_integral</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">begin</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">interval_integrable_iff</span><span class=\"o\">,</span> <span class=\"n\">interval_integral_eq_integral_oc</span><span class=\"o\">,</span>\n    <span class=\"bp\">←</span> <span class=\"n\">ae_restrict_iff'</span> <span class=\"n\">measurable_set_interval_oc</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">has_deriv_at_integral_of_dominated_loc_of_deriv_le</span> <span class=\"n\">ε_pos</span> <span class=\"n\">hF_meas</span> <span class=\"n\">hF_int</span> <span class=\"n\">hF'_meas</span> <span class=\"n\">h_bound</span>\n    <span class=\"n\">bound_integrable</span> <span class=\"n\">h_diff</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">this.1</span><span class=\"o\">,</span> <span class=\"n\">this.2.const_smul</span> <span class=\"n\">_</span><span class=\"o\">⟩</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 261982835,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637265854
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> Could you please have a look at <a href=\"https://github.com/leanprover-community/mathlib/issues/10380\">#10380</a>?</p>",
        "id": 262251792,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1637516653
    }
]