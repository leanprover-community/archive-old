[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span>, I was wondering whether you either have proved or were planning to prove Urysohn'slemma or the Tietze extension theorem.<br>\nI ask because I have an ugly, but working proof of the former lying around somewhere, and part of a proof of the latter, and it looks like your PR <a href=\"https://github.com/leanprover/mathlib/issues/464\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/issues/464\">#464</a> is the main thing I would need to finish it off.</p>",
        "id": 151738935,
        "sender_full_name": "Reid Barton",
        "timestamp": 1544740785
    },
    {
        "content": "<p>No, I have not done it, and I don't plan to do it. You can go ahead if you want!</p>",
        "id": 151759116,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1544771635
    },
    {
        "content": "<p>So I started trying to write module documentation for topology but (perhaps predictably) I ended up doing another reorganization--hopefully less drastic than the one from March. It is still in progress, but I will be posting a few preliminary PRs.</p>",
        "id": 177527732,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570460586
    },
    {
        "content": "<p>Great!</p>",
        "id": 177536725,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570466158
    },
    {
        "content": "<p>Currently, <code>topology.constructions</code> is a big grab-bag which I found difficult to document. For example, it doesn't actually contain any constructions themselves, but rather theorems about them, but sometimes those theorems are somewhere else.<br>\nSo here's what I'm trying.</p>\n<ul>\n<li>Move the definitions of product topology, etc. from near the end of <code>topology.order</code> to a new file (working name: <code>topology.basic_constructions</code>) which imports <code>topology.order</code>. Also move the most elementary facts about these constructions there (e.g., projections are continuous).</li>\n<li>Import <code>topology.basic_constructions</code> in most other modules, in order to move proofs like \"if <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>S</mi><mo>‚äÇ</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">S \\subset X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">‚äÇ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo>‚äÇ</mo><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">T \\subset Y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">‚äÇ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> are compact, then <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>S</mi><mo>√ó</mo><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">S \\times T</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">√ó</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span></span></span></span> is compact\" to near the definition of compactness.</li>\n<li>A few basic facts about products and so on (like <code>is_open_prod_iff'</code>) use concepts (like <code>is_open_map</code>) which are defined in later files, so those will remain in <code>topology.constructions</code> (which should perhaps be renamed), which will end up a hopefully much smaller grab-bag.</li>\n</ul>",
        "id": 177537524,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570466766
    },
    {
        "content": "<p>So far I implemented this for <code>prod</code> and not any of the other constructions, but it appears to be going well.</p>",
        "id": 177537548,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570466791
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>, you likely tried something like this in the original refactoring; do you see any particular snags?</p>",
        "id": 177537621,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570466863
    },
    {
        "content": "<p>I'm really tempted to rename all the space variables to <code>X Y Z W</code> first...</p>",
        "id": 177538699,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570467577
    },
    {
        "content": "<p>since it will make this refactoring a lot easier</p>",
        "id": 177538733,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570467600
    },
    {
        "content": "<p>Go for it!</p>",
        "id": 177538870,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570467662
    },
    {
        "content": "<p>Reid, please feel free to reorganize things. I got tired during the previous refactor, and Johannes was pushing towards big files. But the current situation is far from perfect.</p>",
        "id": 177540907,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570469112
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> One thing I wondered is whether <code>embedding</code> and <code>dense_embedding</code> etc should use <code>old_structure_cmd</code>.</p>",
        "id": 177545772,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570472539
    },
    {
        "content": "<p>I also wondered about that</p>",
        "id": 177545800,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570472572
    },
    {
        "content": "<p>but I'm trying to leave such changes for separate PRs</p>",
        "id": 177545817,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570472583
    },
    {
        "content": "<p>fair enough</p>",
        "id": 177545935,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570472656
    },
    {
        "content": "<p>At the moment I'm just trying to get the right stuff total in each file, then after that each file can be fixed up nicely</p>",
        "id": 177546345,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570472931
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> while your are refactoring topology, it would be nice to use the new localized notation feature. I think <code>nhds</code> deserves a notation. In the perfectoid project I always use <code>local notation `ùìù` x:70 := nhds x</code></p>",
        "id": 177559450,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570481485
    },
    {
        "content": "<p>In top of the eye candy, the precedence allows to avoid many parentheses.</p>",
        "id": 177559555,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570481544
    },
    {
        "content": "<p>This refactoring is now <a href=\"https://github.com/leanprover-community/mathlib/issues/1541\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1541\">#1541</a>.</p>",
        "id": 177992317,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570892142
    },
    {
        "content": "<p>I ended up doing slightly less reordering of imports than planned, and pretty much every theorem ended up in a logical file, though possibly the ordering of imports is \"overfit\" to the particular set of theorems we have currently.</p>",
        "id": 177992711,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570892749
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> did you run sanity_check on all those files?</p>",
        "id": 177993345,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570893687
    },
    {
        "content": "<p>Also, your new README is wonderful, but it should go to <a href=\"https://github.com/leanprover-community/mathlib/tree/master/docs/theories\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/tree/master/docs/theories\">https://github.com/leanprover-community/mathlib/tree/master/docs/theories</a></p>",
        "id": 177993399,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570893727
    },
    {
        "content": "<p>It's running currently</p>",
        "id": 177993401,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570893731
    },
    {
        "content": "<p>I think</p>",
        "id": 177993404,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570893733
    },
    {
        "content": "<p>is sanity_check in travis?</p>",
        "id": 177993409,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1570893759
    },
    {
        "content": "<p>Honestly, if such a PR builds and sanity_checks (and makes sense from a general point of view) then I don't see what I should review. Of course the next step is to make sure every file has a toplevel docstring and <code>doc_blame</code>, but that can be done later (super fast merging is crucial to such PRs).</p>",
        "id": 177993443,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570893834
    },
    {
        "content": "<p>I'm also going to go through the same process I did for the linear algebra renaming PR to check that I didn't mess up any declarations</p>",
        "id": 177993492,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570893863
    },
    {
        "content": "<p>Oh I see</p>",
        "id": 177993496,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570893880
    },
    {
        "content": "<p>After a couple of uses like this, sharpening your tool, it would be nice to make it available.</p>",
        "id": 177993517,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570893917
    },
    {
        "content": "<p>Reid, could you please label your PR as WIP until your checks are done?</p>",
        "id": 177993602,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570894064
    },
    {
        "content": "<p>Good idea, done</p>",
        "id": 177993754,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570894241
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> did you run sanity_check on all those files?</p>\n</blockquote>\n<p>sanity_check found a mistake in my <a href=\"https://github.com/leanprover-community/mathlib/issues/1516\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1516\">#1516</a>, but not this one. I'll fix it in an independent PR.</p>",
        "id": 177993983,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570894667
    },
    {
        "content": "<p>(moving back here) I guess we can merge aside from the question about the README.md.<br>\nI thought of the file as saying \"if you want to find X, look in file Y\", rather than trying to list everything that exists in topology, although I guess it also accomplishes that as a side effect.</p>",
        "id": 178001045,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570905288
    },
    {
        "content": "<p>My point is we don't have any other files like that in that place.</p>",
        "id": 178001060,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570905318
    },
    {
        "content": "<p>It's true--I think it would be nice if we did; but maybe this PR isn't the place to make that argument?</p>",
        "id": 178001070,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570905350
    },
    {
        "content": "<p>What's the alternative? I guess I could append the contents of README.md to the end of <code>docs/theories/topological_spaces.md</code>, under a heading like \"File organization\"</p>",
        "id": 178001127,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570905401
    },
    {
        "content": "<p>Yes, maybe after renaming it to <code>topology.md</code></p>",
        "id": 178001146,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570905437
    },
    {
        "content": "<blockquote>\n<p>These docs are just concerned with the contents of the <code>topological_space.lean</code> file.</p>\n</blockquote>\n<p>which no longer exists</p>",
        "id": 178001217,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570905507
    },
    {
        "content": "<p>Okay, I've done this (for now, at least)</p>",
        "id": 178002121,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570906958
    },
    {
        "content": "<p>oops hang on</p>",
        "id": 178002124,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570906968
    },
    {
        "content": "<p>okay, it should be correct now</p>",
        "id": 178002191,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570907067
    }
]