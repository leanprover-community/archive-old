[
    {
        "content": "<p>Does mathlib have the theorem showing that a bijective ring homomorphism is an isomorphism? It seems to be missing from the data.equiv.ring, is there somewhere else I should look?</p>",
        "id": 205422989,
        "sender_full_name": "Jordan Brown",
        "timestamp": 1596063030
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">category</span><span class=\"bp\">.</span><span class=\"n\">CommRing</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">ring_equiv</span><span class=\"bp\">.</span><span class=\"n\">to_Ring_iso</span>\n</code></pre></div>",
        "id": 205427587,
        "sender_full_name": "Matt Earnshaw",
        "timestamp": 1596067146
    },
    {
        "content": "<p>But there you're already assuming that you have a ring equivalence (rather than a bijective ring homomorphism)</p>",
        "id": 205428141,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1596067519
    },
    {
        "content": "<p>oops</p>",
        "id": 205428736,
        "sender_full_name": "Matt Earnshaw",
        "timestamp": 1596067990
    },
    {
        "content": "<p>You can combine <a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.of_bijective/src\">src#equiv.of_bijective</a> to get this easily.</p>",
        "id": 205430958,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1596070018
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">equiv</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">equiv</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">B</span><span class=\"o\">]</span>\n\n<span class=\"n\">noncomputable</span> <span class=\"n\">def</span> <span class=\"n\">ring_equiv_of_bij_hom</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→+*</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">bijective</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"err\">≃</span><span class=\"bp\">+*</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">map_mul&#39;</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply</span> <span class=\"n\">ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_mul</span><span class=\"o\">,</span>\n  <span class=\"n\">map_add&#39;</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply</span> <span class=\"n\">ring_hom</span><span class=\"bp\">.</span><span class=\"n\">map_add</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span><span class=\"k\">show</span> <span class=\"n\">A</span> <span class=\"err\">≃</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">exact</span> <span class=\"n\">equiv</span><span class=\"bp\">.</span><span class=\"n\">of_bijective</span> <span class=\"bp\">_</span> <span class=\"n\">h</span> <span class=\"o\">}</span>\n</code></pre></div>\n\n\n<p>There might be a better way. Or mathlib might already have something like this.</p>",
        "id": 205431189,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1596070316
    },
    {
        "content": "<p>Can't you golf that to</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">noncomputable</span> <span class=\"n\">def</span> <span class=\"n\">ring_equiv_of_bij_hom</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">→+*</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">bijective</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"err\">≃</span><span class=\"bp\">+*</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"bp\">..</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"bp\">..</span> <span class=\"n\">equiv</span><span class=\"bp\">.</span><span class=\"n\">of_bijective</span> <span class=\"bp\">_</span> <span class=\"n\">h</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 205439534,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1596081344
    }
]