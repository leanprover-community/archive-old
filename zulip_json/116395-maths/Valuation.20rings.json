[
    {
        "content": "<p>Hi all,</p>\n<p>I just opened a WIP/RFC PR with the definition of a valuation ring and the construction of the associated valuation. <br>\nComments are very welcome! There is much more to add, but this PR is already a little long...<br>\nI'm sure there is overlap with the perfectoid project, so let me ping <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  and <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span></p>",
        "id": 275429093,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647375131
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/12719\">#12719</a></p>",
        "id": 275429108,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647375136
    },
    {
        "content": "<p>Maria and I seem to want rank 1 valuations. Do you have an opinion about how they should fit into things?</p>",
        "id": 275431458,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647376436
    },
    {
        "content": "<p>Perhaps via Krull dimension?</p>",
        "id": 275431602,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647376488
    },
    {
        "content": "<p>the rank of a valuation ring (in the sense of the rank of the value group) is the Krull dimension -- I should prove that at some point...</p>",
        "id": 275431666,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647376510
    },
    {
        "content": "<p>I don't think we have Krull dimension yet</p>",
        "id": 275431946,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1647376641
    },
    {
        "content": "<p>Oh my.... we have so much to do!</p>",
        "id": 275431979,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647376661
    },
    {
        "content": "<p>So much fun still to be had!</p>",
        "id": 275432137,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1647376738
    },
    {
        "content": "<p>How does this fit into my idea of formalizing (part of) <a href=\"https://www.cambridge.org/core/books/spectral-spaces/9ACC409F3885FA808C8AF53B0381C9C7\">this book about spectrai spaces</a>?</p>",
        "id": 275432144,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1647376742
    },
    {
        "content": "<p>I don't know, <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> .... what do you have in mind?</p>",
        "id": 275432552,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647376974
    },
    {
        "content": "<p>Hochster's result, chapter 12</p>",
        "id": 275432578,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1647376990
    },
    {
        "content": "<p>Yeah, but what do you have in mind in connection with valuation rings?</p>",
        "id": 275432747,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647377067
    },
    {
        "content": "<p>No idea! Probably my question was misguided.</p>",
        "id": 275432852,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1647377126
    },
    {
        "content": "<p>I mean... valuation rings play an important role in algebraic geometry in various ways and the topological properties is one of them (for example by mapping spectra of valuation rings to a scheme it is possible to reconstruct the underlying topology of a scheme, see e.g. section 3 of <a href=\"https://arxiv.org/pdf/1906.00921.pdf\">https://arxiv.org/pdf/1906.00921.pdf</a> ), but I don't have a clear enough picture of what you're planning to do <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> to say whether anything about valuation rings will be useful...</p>",
        "id": 275433213,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647377301
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> for now I added:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">is_domain</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">discrete_valuation_ring</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n\n<span class=\"kd\">instance</span> <span class=\"n\">of_discrete_valuation_ring</span> <span class=\"o\">:</span> <span class=\"n\">valuation_ring</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"bp\">...</span>\n</code></pre></div>",
        "id": 275437210,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647379332
    },
    {
        "content": "<p>Is it me, or is your <code>value_group</code> almost identical to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/projectivization\">docs#projectivization</a>?</p>",
        "id": 275441071,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1647381285
    },
    {
        "content": "<p>It shouldn't be</p>",
        "id": 275441105,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647381308
    },
    {
        "content": "<p>At a glance both are just the quotient by <code>(mul_action.orbit_rel Kˣ V)</code> with various extra typeclass assumptions on K and V</p>",
        "id": 275441168,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1647381351
    },
    {
        "content": "<p>Maybe the nonzero requirement is worth more than I'm giving it</p>",
        "id": 275441235,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1647381366
    },
    {
        "content": "<p>No, you do make a fair point</p>",
        "id": 275441397,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647381465
    },
    {
        "content": "<p>I'm quite surprised Adam left the zero in the value group. I think in adic space valuation theory it's usually not there (and this is what I was thinking about; I hadn't looked at the PR), and in the adic space theory the quotient is more complex than the things of valuation 1, and it's only a monoid so you have to take the associated group.</p>",
        "id": 275441615,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647381585
    },
    {
        "content": "<p>Note that a valuation in the sense of mathlib takes values in a <code>linearly_ordered_comm_monoid_with_zero</code>.</p>",
        "id": 275442673,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647382224
    },
    {
        "content": "<p>So not removing the zero is necessary!</p>",
        "id": 275442700,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647382242
    },
    {
        "content": "<p>Right. But Wedhorn uses the word \"value group\" of v : R -&gt; {0} union G to be the smallest subgroup H of G such that v takes values in {0} union H. It seems you're using the phrase differently (which was why I was so quick to tell Eric that they weren't the same before I looked at your code, and so quick to back down once I did )</p>",
        "id": 275442803,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647382319
    },
    {
        "content": "<p>I could rename the thing in my PR to <code>value_group_with_zero</code> if folks prefer that.</p>",
        "id": 275442910,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647382410
    },
    {
        "content": "<p>I don't know the standard language for valuation rings</p>",
        "id": 275442925,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647382433
    },
    {
        "content": "<p>I only ask because I wonder if this is one of these \"group rings and magma algebras are the same thing\"- or \"semimodules and vectors spaces are the same thing\"- type cases, where the construction is the same, and we're just using different words to refer to them when extra ambient typeclasses are available.</p>",
        "id": 275442993,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1647382487
    },
    {
        "content": "<p>The terminology is all off anyway... Usually (as far as I know) a valuation on a field is a map from the units of the field to some totally ordered abelian group, and the and the ultrametric condition  is <code>v (x+y) \\geq min ...</code>. We flip things around and include the zero in mathlib. I think having a zero in the value group is not the end of the world.</p>",
        "id": 275443354,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647382812
    },
    {
        "content": "<p>Oh golly, a valuation on a field isn't defined at 0?? And a valuation on a ring is :-) Eric's going to like that :-)</p>",
        "id": 275443792,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647383125
    },
    {
        "content": "<p>I think we did something similar in the perfectoid project: <a href=\"https://github.com/leanprover-community/lean-perfectoid-spaces/blob/master/src/valuation/canonical.lean#L85L111\">https://github.com/leanprover-community/lean-perfectoid-spaces/blob/master/src/valuation/canonical.lean#L85L111</a><br>\nI'm glad to see that all this can now be golfed into 1 line with current mathlib.</p>",
        "id": 275472921,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1647413766
    },
    {
        "content": "<p>It's a good thing to authorize 0 in the “value group”, it simplifies the definition, — and, while you're here, you could define “semivaluations on a ring” which may take 0  on something else than 0. Berkovich spaces are defined by spaces of seminorms and semivaluations are more flexible, a semivaluation passes to the quotient by the prime ideal on which it vanishes, etc.</p>",
        "id": 275477263,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1647417883
    },
    {
        "content": "<p>In fact, “general” valuations could take their value in any “ordered monoid with bot“.</p>",
        "id": 275477302,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1647417924
    },
    {
        "content": "<p>There is also the (convention) issue of the ordering: if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mi mathvariant=\"normal\">∣</mi><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a | b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">b</span></span></span></span>, is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>v</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">v(a) \\leq v(b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span> or $v(b)\\leq v(a)$$.<br>\nThe traditional convention is the former, but people (like Huber) use the first one, which makes a valuation more like the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>-adic norm.</p>",
        "id": 275477458,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1647418030
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/valuation\">docs#valuation</a></p>",
        "id": 275485877,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647423310
    },
    {
        "content": "<p>Antoine we have the multiplicative version, taking values in an ordered commutative monoid with 0 (and which may take 0 on inputs other than 0) (and we use Huber's convention)</p>",
        "id": 275485998,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1647423379
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/116395-maths/topic/Valuation.20rings/near/275472921\">said</a>:</p>\n<blockquote>\n<p>I think we did something similar in the perfectoid project: <a href=\"https://github.com/leanprover-community/lean-perfectoid-spaces/blob/master/src/valuation/canonical.lean#L85L111\">https://github.com/leanprover-community/lean-perfectoid-spaces/blob/master/src/valuation/canonical.lean#L85L111</a><br>\nI'm glad to see that all this can now be golfed into 1 line with current mathlib.</p>\n</blockquote>\n<p>Yes, this setoid is essentially the same. </p>\n<p>Maybe I should explain what's happening in my PR a little better:</p>\n<p>First, suppose that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is an integral domain.<br>\nWe say that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is a <em>valuation ring</em> provided that for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo>∈</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">a,b \\in A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, there exists some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>∈</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">c \\in A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>⋅</mo><mi>a</mi><mo>=</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">c \\cdot a = b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>⋅</mo><mi>b</mi><mo>=</mo><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">c \\cdot b = a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4445em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>. This is equivalent to saying that when we consider <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> as a subring of its fraction field, say <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>, that for every element <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">x \\in K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>, either <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">x \\in A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∈</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">x^{-1} \\in A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8532em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>. In other words, this agrees with the usual notion of a valuation ring, except there is no need to refer to \"the\" fraction field.</p>\n<p>Now comes some lean/mathlib technicalities. Given a valuation ring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>-algebra <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> which happens to be a field, and an instance of <code>is_fraction_ring A K</code> (so <code>K</code> is <em>a</em> fraction field of <code>A</code>), this PR constructs <code>value_group A K</code> as the quotient of <code>K</code> by the multiplicative action of the units of <code>A</code> (this is essentially the same setoid from the perfectoid project that Johan linked above). In this PR, I do not assume that there is some valuation given ahead of time (unlike what's done in the perfectoid project), so we need to define a <code>linear_ordered_comm_group_with_zero</code> structure on <code>value_group A K</code> using only the axioms of <code>A</code> and <code>K</code>. This takes up the most work in the PR. The quotient map from <code>K</code> to <code>value_group A K</code> then becomes a valuation in the sense of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/valuation\">docs#valuation</a> whose ring of integers ( <a href=\"https://leanprover-community.github.io/mathlib_docs/find/valuation.integer\">docs#valuation.integer</a> ) agrees with the original <code>A</code>.</p>",
        "id": 275500066,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647431940
    },
    {
        "content": "<p>In a followup PR, I will define <code>valuation_subring K</code>, the type of valuation subrings of a field <code>K</code>. These are subrings <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">O</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal{O}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span></span></span></span> satisfying the condition that for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">x \\in K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>, either <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant=\"script\">O</mi></mrow><annotation encoding=\"application/x-tex\">x \\in \\mathcal{O}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∈</mo><mi mathvariant=\"script\">O</mi></mrow><annotation encoding=\"application/x-tex\">x^{-1} \\in \\mathcal{O}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8532em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.02778em;\">O</span></span></span></span>. Of course, these are all valuation rings in the above sense, and the argument above shows that any valuation ring comes from a valuation on the field <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>. Even better, two valuations on a field <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> are equivalent if and only if their associated valuation rings are <em>equal</em> in <code>valuation_subring K</code>. For a general ring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, two valuations are equivalent if their support (a prime ideal) is the same, and the induced valuation subring of the residue field of the prime is the same.</p>",
        "id": 275500829,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647432337
    },
    {
        "content": "<p>Here is a start to that followup PR: <a href=\"https://github.com/leanprover-community/mathlib/pull/12741\">#12741</a></p>",
        "id": 275527578,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1647444449
    }
]