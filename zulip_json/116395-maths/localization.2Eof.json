[
    {
        "content": "<p>At some point there was some discussion about this (maybe on Github). Anyway, currently we have in <code>ring_theory/localization.lean</code><br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/ring_theory/localization.lean#L71\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/ring_theory/localization.lean#L71\">https://github.com/leanprover-community/mathlib/blob/master/src/ring_theory/localization.lean#L71</a><br>\na line reading</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">of</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">loc</span> <span class=\"n\">α</span> <span class=\"n\">S</span> <span class=\"o\">:=</span> <span class=\"err\">⟦</span><span class=\"o\">(</span><span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">)</span><span class=\"err\">⟧</span>\n</pre></div>\n\n\n<p>But we don't have an explicit name for the ring morphism from <code>R</code> to <code>localization R S</code>. Currently the file uses <code>\\lam x, of x 1</code> which is not very user friendly. I would expect that this ring morphism would be called <code>localization.of</code>. What are others opinions on this? Would it be OK to rename the current <code>of</code> to <code>mk</code>?</p>",
        "id": 159431140,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551193907
    },
    {
        "content": "<p>I would rename <code>of</code> to <code>mk</code></p>",
        "id": 159431578,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1551194222
    },
    {
        "content": "<p>Do you want a PR?</p>",
        "id": 159431672,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551194304
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> What is your opinion?</p>",
        "id": 159431683,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551194325
    },
    {
        "content": "<p>just PR what you want :}</p>",
        "id": 159431869,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1551194486
    },
    {
        "content": "<p>I independently ran into this the other day. I definitely vote for a name other than <code>of x 1</code>.</p>",
        "id": 159439917,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1551200970
    },
    {
        "content": "<p>On the other hand, should <code>S</code> be an explicit parameter of <code>of</code>? (<code>S</code> is the submonoid at which we localise.)</p>",
        "id": 159447991,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551207582
    },
    {
        "content": "<p>It's inferred by the type of <code>s</code></p>",
        "id": 159452995,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1551211135
    },
    {
        "content": "<p><code>s = 1</code></p>",
        "id": 159453024,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551211157
    },
    {
        "content": "<p>For <code>mk</code> I agree</p>",
        "id": 159453039,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551211171
    }
]