[
    {
        "content": "<p>I am trying to state that, te^{Xt} / (e^t - 1) = \\sum_{n=1}^{\\infty} B_n(X) * t^n / n!, where B_n(X) are Bernoulli polynomials.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">number_theory.bernoulli</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.nat.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.complex.roots_of_unity</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.complex.exponential</span>\n\n<span class=\"kd\">noncomputable theory</span>\n<span class=\"kd\">def</span> <span class=\"n\">bernoulli_polynomial</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">X</span><span class=\"o\">,</span> <span class=\"bp\">∑'</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">bernoulli</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">nat.choose</span> <span class=\"n\">n</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">-</span><span class=\"n\">i</span><span class=\"o\">))</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">one_sub_eq_neg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">,</span> <span class=\"n\">bernoulli_polynomial</span> <span class=\"n\">n</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">bernoulli_polynomial</span> <span class=\"n\">n</span> <span class=\"n\">X</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">exp_bernoulli</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∑'</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">bernoulli_polynomial</span> <span class=\"n\">i</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"bp\">^</span><span class=\"n\">i</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">nat.factorial</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"bp\">*</span> <span class=\"n\">real.exp</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"o\">))</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">real.exp</span> <span class=\"n\">t</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I get the error</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">type</span> <span class=\"kd\">class</span> <span class=\"kd\">instance</span> <span class=\"n\">for</span>\n<span class=\"n\">t</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">add_comm_monoid</span> <span class=\"kt\">Prop</span>\n</code></pre></div>\n<p>I don't see where the <code>add_comm_monoid</code> condition is needed.</p>\n<p>Thank you for your help!</p>",
        "id": 218579477,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1606925669
    },
    {
        "content": "<p>I think you must have the wrong <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Σ</mi></mrow><annotation encoding=\"application/x-tex\">\\Sigma</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Σ</span></span></span></span></p>",
        "id": 218579543,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606925708
    },
    {
        "content": "<p>Putting <code>∑</code> instead of <code>∑'</code> gives me an error :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">unexpected</span> <span class=\"n\">token</span>\n</code></pre></div>",
        "id": 218580518,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1606926089
    },
    {
        "content": "<p>Ah, I think there is some <code>open_locale</code> needed maybe?</p>",
        "id": 218580778,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606926181
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/big_operators/basic.html\">https://leanprover-community.github.io/mathlib_docs/algebra/big_operators/basic.html</a></p>",
        "id": 218580843,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606926204
    },
    {
        "content": "<p><code>open_locale big_operators</code>?</p>",
        "id": 218580857,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606926209
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/116395-maths/topic/type.20class.20instance.20error/near/218580857\">said</a>:</p>\n<blockquote>\n<p><code>open_locale big_operators</code>?</p>\n</blockquote>\n<p>Adding this gives me an error</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">type</span> <span class=\"kd\">class</span> <span class=\"kd\">instance</span> <span class=\"n\">for</span>\n<span class=\"n\">t</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">fintype</span> <span class=\"n\">ℕ</span>\n</code></pre></div>\n<p>since, I think, <code>∑</code> is for finite sums. Putting  <code>∑'</code> gives me the original error.</p>",
        "id": 218581506,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1606926460
    },
    {
        "content": "<p>I think you're missing some brackets, if you add brackets around the sum it works</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">exp_bernoulli</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∑'</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">bernoulli_polynomial</span> <span class=\"n\">i</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"bp\">^</span><span class=\"n\">i</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">nat.factorial</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"bp\">*</span> <span class=\"n\">real.exp</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"o\">))</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">real.exp</span> <span class=\"n\">t</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>it works</p>",
        "id": 218581916,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1606926606
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"266440\">Shing Tak Lam</span> <a href=\"#narrow/stream/116395-maths/topic/type.20class.20instance.20error/near/218581916\">said</a>:</p>\n<blockquote>\n<p>I think you're missing some brackets, if you add brackets around the sum it works</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">exp_bernoulli</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∑'</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">bernoulli_polynomial</span> <span class=\"n\">i</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"bp\">^</span><span class=\"n\">i</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">nat.factorial</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"bp\">*</span> <span class=\"n\">real.exp</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"o\">))</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">real.exp</span> <span class=\"n\">t</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>it works</p>\n</blockquote>\n<p>Yeah, that works. Why are the brackets needed though?</p>",
        "id": 218583427,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1606927235
    },
    {
        "content": "<p>Because the sum operator is <del>higher</del> different precedence than the <code>=</code>, such that it sums over the whole equality proposition term</p>",
        "id": 218583501,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1606927271
    },
    {
        "content": "<p>I see. Thank you!</p>",
        "id": 218590670,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1606930174
    }
]