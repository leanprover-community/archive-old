[
    {
        "content": "<p>In <em>Theorem Proving in Lean</em></p>\n<blockquote>\n<p>Of course, the quotient construction is most commonly used in situations when r is an equivalence relation. Given r as above, if we define r' according to the rule r' a b iff <a href=\"http://Quot.mk\">Quot.mk</a> r a = <a href=\"http://Quot.mk\">Quot.mk</a> r b, then it's clear that r' is an equivalence relation. Indeed, r' is the kernel of the function a ↦ <a href=\"http://quot.mk\">quot.mk</a> r a. The axiom Quot.sound says that r a b implies r' a b. Using Quot.lift and Quot.ind, we can show that r' is the smallest equivalence relation containing r, in the sense that if r'' is any equivalence relation containing r, then r' a b implies r'' a b. In particular, if r was an equivalence relation to start with, then for all a and b we have r a b iff r' a b.</p>\n</blockquote>\n<p>So naturally i want to prove:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s1</span> <span class=\"n\">s2</span> <span class=\"n\">s3</span><span class=\"o\">:</span> <span class=\"n\">Setoid</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n<span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">quod_init_algebra</span> <span class=\"o\">:</span>\n      <span class=\"o\">({</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">}</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">s1.r</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">s3.r</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span>\n      <span class=\"o\">{</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">}</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Quotient.mk</span> <span class=\"n\">s1</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">Quotient.mk</span> <span class=\"n\">s1</span> <span class=\"n\">y</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">s3.r</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n      <span class=\"bp\">λ</span> <span class=\"n\">infer</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"bp\">λ</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">}</span> <span class=\"n\">q_eq</span> <span class=\"bp\">=&gt;</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>But i am stuck here......</p>",
        "id": 306192335,
        "sender_full_name": "Erika Su",
        "timestamp": 1666774213
    },
    {
        "content": "<p>reading through <code>init/core.lean</code> the theorem <a href=\"https://leanprover-community.github.io/mathlib4_docs/find/?pattern=Quotient.exact#doc\">docs4#Quotient.exact</a> is basically what you need:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s1</span> <span class=\"n\">s2</span> <span class=\"n\">s3</span><span class=\"o\">:</span> <span class=\"n\">Setoid</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n\n<span class=\"kd\">theorem</span> <span class=\"n\">quod_init_algebra</span> <span class=\"o\">:</span>\n      <span class=\"o\">({</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">}</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">s1.r</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">s3.r</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">-&gt;</span>\n      <span class=\"o\">{</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">}</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Quotient.mk</span> <span class=\"n\">s1</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">Quotient.mk</span> <span class=\"n\">s1</span> <span class=\"n\">y</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">s3.r</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n      <span class=\"bp\">λ</span> <span class=\"n\">infer</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"bp\">λ</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">}</span> <span class=\"n\">q_eq</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">infer</span> <span class=\"o\">(</span><span class=\"n\">Quotient.exact</span> <span class=\"n\">q_eq</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 306230805,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1666788201
    }
]