[
    {
        "content": "<p>Would \"axiomatised\" infinite sums be a useful addition to mathlib? </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"n\">def</span> <span class=\"n\">sum_add</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">sum</span> <span class=\"n\">b</span>\n<span class=\"n\">def</span> <span class=\"n\">sum_smul</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">sum</span> <span class=\"n\">a</span>\n<span class=\"n\">def</span> <span class=\"n\">sum_shift</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">def</span> <span class=\"n\">sum_axioms</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sum_add</span> <span class=\"n\">sum</span> <span class=\"bp\">∧</span> <span class=\"n\">sum_smul</span> <span class=\"n\">sum</span> <span class=\"bp\">∧</span> <span class=\"n\">sum_shift</span> <span class=\"n\">sum</span>\n\n<span class=\"n\">def</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">sum</span><span class=\"o\">,</span> <span class=\"n\">sum_axioms</span> <span class=\"n\">sum</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">s</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">has_sum_alt</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">sum</span> <span class=\"n\">axs</span> <span class=\"n\">t</span> <span class=\"n\">Ht</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">H2</span> <span class=\"o\">:=</span> <span class=\"n\">axs</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">),</span>\n  <span class=\"k\">have</span> <span class=\"n\">H3</span> <span class=\"o\">:=</span> <span class=\"n\">axs</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span><span class=\"o\">),</span>\n  <span class=\"n\">change</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"bp\">_</span> <span class=\"err\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">_</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"n\">at</span> <span class=\"n\">H3</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">H2</span><span class=\"o\">,</span> <span class=\"n\">Ht</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">H3</span><span class=\"o\">,</span>\n  <span class=\"n\">linarith</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">has_sum_alt_id</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"bp\">/</span><span class=\"mi\">4</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">sum</span> <span class=\"n\">axs</span> <span class=\"n\">t</span> <span class=\"n\">Ht</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">H1</span> <span class=\"o\">:=</span> <span class=\"n\">axs</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"err\">↑</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"err\">↑</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)),</span>\n  <span class=\"k\">have</span> <span class=\"n\">H2</span> <span class=\"o\">:=</span> <span class=\"n\">axs</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">),</span>\n  <span class=\"k\">have</span> <span class=\"n\">H3</span> <span class=\"o\">:=</span> <span class=\"n\">axs</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">),</span>\n  <span class=\"k\">have</span> <span class=\"n\">HA</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span>\n  <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">-</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n    <span class=\"n\">funext</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_add</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">,</span> <span class=\"err\">←</span><span class=\"n\">add_assoc</span><span class=\"o\">,</span> <span class=\"n\">neg_one_mul</span><span class=\"o\">,</span>\n      <span class=\"err\">←</span><span class=\"n\">neg_mul_eq_neg_mul</span><span class=\"o\">,</span> <span class=\"n\">add_neg_self</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">]),</span>\n  <span class=\"n\">change</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span>\n  <span class=\"bp\">=</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"mi\">0</span> <span class=\"n\">at</span> <span class=\"n\">H3</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_zero</span><span class=\"o\">,</span> <span class=\"n\">sub_zero</span><span class=\"o\">,</span> <span class=\"n\">Ht</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">H3</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">HA</span><span class=\"o\">,</span> <span class=\"n\">Ht</span><span class=\"o\">,</span> <span class=\"n\">H3</span><span class=\"o\">,</span> <span class=\"n\">H2</span><span class=\"o\">,</span> <span class=\"n\">neg_one_mul</span><span class=\"o\">,</span> <span class=\"n\">neg_eq_iff_neg_eq</span><span class=\"o\">,</span> <span class=\"n\">eq_comm</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">H1</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">HB</span> <span class=\"o\">:=</span> <span class=\"n\">has_sum_alt</span> <span class=\"n\">sum</span> <span class=\"n\">axs</span> <span class=\"bp\">_</span> <span class=\"n\">H1</span><span class=\"o\">,</span>\n  <span class=\"n\">linarith</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 178665400,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571671105
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/topology/algebra/infinite_sum.lean\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/topology/algebra/infinite_sum.lean\">https://github.com/leanprover-community/mathlib/blob/master/src/topology/algebra/infinite_sum.lean</a></p>",
        "id": 178665560,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571671223
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"n\">def</span> <span class=\"n\">sum_add</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">sum</span> <span class=\"n\">b</span>\n<span class=\"n\">def</span> <span class=\"n\">sum_smul</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">sum</span> <span class=\"n\">a</span>\n<span class=\"n\">def</span> <span class=\"n\">sum_shift</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">def</span> <span class=\"n\">sum_axioms</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sum_add</span> <span class=\"n\">sum</span> <span class=\"bp\">∧</span> <span class=\"n\">sum_smul</span> <span class=\"n\">sum</span> <span class=\"bp\">∧</span> <span class=\"n\">sum_shift</span> <span class=\"n\">sum</span>\n\n<span class=\"n\">def</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">sum</span><span class=\"o\">,</span> <span class=\"n\">sum_axioms</span> <span class=\"n\">sum</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">s</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">no_sum</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">sum_axioms</span> <span class=\"n\">sum</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"o\">:=</span>\n<span class=\"n\">ne_of_gt</span> <span class=\"o\">(</span><span class=\"n\">sub_lt_self</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">zero_lt_one</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">))</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">sum_is_anything</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">s</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"err\">$</span> <span class=\"n\">no_sum</span> <span class=\"n\">s</span> <span class=\"n\">hs</span>\n</pre></div>",
        "id": 178665917,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571671486
    },
    {
        "content": "<p>How does this relate to <code>tsum</code> and <code>has_sum</code> that are already in mathlib?</p>",
        "id": 178666022,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1571671558
    },
    {
        "content": "<p>Kenny explained the relation (unless <code>tsum</code> and <code>has_sum</code> can somehow be used to prove <code>false</code>).</p>",
        "id": 178667352,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571672407
    },
    {
        "content": "<blockquote>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">...</span>\n<span class=\"kn\">theorem</span> <span class=\"n\">no_sum</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">sum_axioms</span> <span class=\"n\">sum</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"o\">:=</span>\n<span class=\"n\">ne_of_gt</span> <span class=\"o\">(</span><span class=\"n\">sub_lt_self</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">zero_lt_one</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">))</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">sum_is_anything</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">s</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"err\">$</span> <span class=\"n\">no_sum</span> <span class=\"n\">s</span> <span class=\"n\">hs</span>\n</pre></div>\n\n\n</blockquote>\n<p>Damn it, I keep screwing this up. There's got to be a correct way to define it.</p>",
        "id": 178669852,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571673812
    },
    {
        "content": "<p>I have an idea. What if one defined axioms defining \"summable spaces\" as subspaces of <code>ℕ → ℝ</code> that were (1) vector spaces and (2) closed under shifts -- then such spaces could have a definable summations even though all of <code>ℕ → ℝ</code> does not.</p>",
        "id": 178670566,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571674234
    },
    {
        "content": "<p>No wait, that's useless.</p>",
        "id": 178670596,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571674250
    },
    {
        "content": "<p>unfortunately this is a situation like measure theory: you can't have all sets be measurable</p>",
        "id": 178670999,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571674519
    },
    {
        "content": "<p>Yes, but what would be a reasonably useful definition of the \"Borel sets\" here? Somehow there are some series for which you can define sums without causing any contradictions.</p>",
        "id": 178671117,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571674577
    },
    {
        "content": "<p>The ones that converge?</p>",
        "id": 178671234,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571674656
    },
    {
        "content": "<p><a href=\"https://blog.wolfram.com/2014/08/06/the-abcd-of-divergent-series/\" target=\"_blank\" title=\"https://blog.wolfram.com/2014/08/06/the-abcd-of-divergent-series/\">https://blog.wolfram.com/2014/08/06/the-abcd-of-divergent-series/</a></p>",
        "id": 178671249,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571674667
    },
    {
        "content": "<p>Again, why do you want to axiomatize this when we have it defined from first principles in mathlib?</p>",
        "id": 178671314,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1571674684
    },
    {
        "content": "<p>I guess you can pick a letter from A to D and then consider the space of the summable functions under the letter</p>",
        "id": 178671317,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571674686
    },
    {
        "content": "<p>Abhi likes physics, he wants to do 1+2+3+4+...=-1/2 or whatever, right?</p>",
        "id": 178671426,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571674775
    },
    {
        "content": "<p>-1/12 isn't really possible with these axioms. But e.g. 1-2+3-4+...=1/4 is.</p>",
        "id": 178671520,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571674805
    },
    {
        "content": "<p>Perhaps this is better:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"n\">def</span> <span class=\"n\">sum_add</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">sum</span> <span class=\"n\">b</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">+</span> <span class=\"n\">t</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">sum_smul</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">sum_shift</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">sum_axioms</span> <span class=\"o\">(</span><span class=\"n\">has_sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sum_add</span> <span class=\"n\">has_sum</span> <span class=\"bp\">∧</span> <span class=\"n\">sum_smul</span> <span class=\"n\">has_sum</span> <span class=\"bp\">∧</span> <span class=\"n\">sum_shift</span> <span class=\"n\">has_sum</span>\n\n<span class=\"n\">def</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">sum</span><span class=\"o\">,</span> <span class=\"n\">sum_axioms</span> <span class=\"n\">sum</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">s</span>\n</pre></div>",
        "id": 178674321,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571676672
    },
    {
        "content": "<p>Oh wait, no it's not.</p>",
        "id": 178675171,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571677310
    },
    {
        "content": "<p>1+1+1+1+1+... is never going to be summable to anything sensible using any convention, right?</p>",
        "id": 178675264,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571677361
    },
    {
        "content": "<p>maybe ∞</p>",
        "id": 178675284,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571677377
    },
    {
        "content": "<p>Apparently some physicists would say it's -1/2: <a href=\"https://en.wikipedia.org/wiki/1_%2B_1_%2B_1_%2B_1_%2B_%E2%8B%AF\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/1_%2B_1_%2B_1_%2B_1_%2B_%E2%8B%AF\">https://en.wikipedia.org/wiki/1_%2B_1_%2B_1_%2B_1_%2B_%E2%8B%AF</a></p>",
        "id": 178675966,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1571677845
    },
    {
        "content": "<blockquote>\n<p>1+1+1+1+1+... is never going to be summable to anything sensible using any convention, right?</p>\n</blockquote>\n<p>Not with the axioms I defined, no. Contradicts stability.</p>",
        "id": 178676237,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571678039
    },
    {
        "content": "<p>I feel like your thing works <span class=\"user-mention\" data-user-id=\"130500\">@Abhimanyu Pallavi Sudhir</span></p>",
        "id": 178676283,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571678046
    },
    {
        "content": "<p>Maybe. I'm playing with it.</p>",
        "id": 178676345,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571678106
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"n\">def</span> <span class=\"n\">sum_add</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">sum</span> <span class=\"n\">b</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">+</span> <span class=\"n\">t</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">sum_smul</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">sum_shift</span> <span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">sum_axioms</span> <span class=\"o\">(</span><span class=\"n\">has_sum</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">sum_add</span> <span class=\"n\">has_sum</span> <span class=\"bp\">∧</span> <span class=\"n\">sum_smul</span> <span class=\"n\">has_sum</span> <span class=\"bp\">∧</span> <span class=\"n\">sum_shift</span> <span class=\"n\">has_sum</span>\n\n<span class=\"n\">def</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">sum</span><span class=\"o\">,</span> <span class=\"n\">sum_axioms</span> <span class=\"n\">sum</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"n\">a</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">s</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">sum_const_one</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"k\">assume</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"bp\">⟨λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">t</span> <span class=\"n\">u</span> <span class=\"n\">ht</span> <span class=\"n\">hu</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ht</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">hu</span> <span class=\"n\">n</span><span class=\"o\">],</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">t</span> <span class=\"n\">c</span> <span class=\"n\">ht</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ht</span> <span class=\"n\">n</span><span class=\"o\">],</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"n\">hs</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">h0s</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">h1</span> <span class=\"bp\">_</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">h1s</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">h1</span> <span class=\"bp\">_</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n<span class=\"n\">zero_ne_one</span> <span class=\"err\">$</span> <span class=\"n\">h0s</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"n\">h1s</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n</pre></div>",
        "id": 178677132,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571678590
    },
    {
        "content": "<p>so the constant sequence 1 is not summable</p>",
        "id": 178677146,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571678599
    },
    {
        "content": "<p>and it's a (relatively) non-trivial theorem</p>",
        "id": 178677161,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571678608
    },
    {
        "content": "<p>however I'm more concerned about the validity of:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">sum_unique</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ht</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">t</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n</pre></div>",
        "id": 178677297,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571678662
    },
    {
        "content": "<p>wait, this is troublesome:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">sum_const</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"k\">assume</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"bp\">⟨λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">t</span> <span class=\"n\">u</span> <span class=\"n\">ht</span> <span class=\"n\">hu</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ht</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">hu</span> <span class=\"n\">n</span><span class=\"o\">],</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">t</span> <span class=\"n\">c</span> <span class=\"n\">ht</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">ht</span> <span class=\"n\">n</span><span class=\"o\">],</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"n\">hs</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">h0s</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">h1</span> <span class=\"bp\">_</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">h1s</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">h1</span> <span class=\"bp\">_</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n<span class=\"n\">zero_ne_one</span> <span class=\"err\">$</span> <span class=\"n\">h0s</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"n\">h1s</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n</pre></div>",
        "id": 178677622,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571678868
    },
    {
        "content": "<blockquote>\n<p>however I'm more concerned about the validity of:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">sum_unique</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ht</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">t</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n</pre></div>\n\n\n</blockquote>\n<p>It's not true. If <code>a</code> has no sum, it has every sum. Which is why I said \"oh wait it's not\" earlier.</p>",
        "id": 178677692,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571678892
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">sum_is_nothing</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"k\">assume</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"n\">h</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">refine</span> <span class=\"bp\">⟨λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"bp\">_⟩;</span> <span class=\"n\">intros</span><span class=\"bp\">;</span> <span class=\"n\">trivial</span><span class=\"o\">),</span>\n<span class=\"k\">have</span> <span class=\"n\">h0s</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">h1</span> <span class=\"bp\">_</span> <span class=\"n\">trivial</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">h1s</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">s</span> <span class=\"o\">:=</span> <span class=\"n\">h1</span> <span class=\"bp\">_</span> <span class=\"n\">trivial</span><span class=\"o\">,</span>\n<span class=\"n\">zero_ne_one</span> <span class=\"err\">$</span> <span class=\"n\">h0s</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"n\">h1s</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n</pre></div>",
        "id": 178677824,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571678985
    },
    {
        "content": "<p>boom</p>",
        "id": 178677827,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571678987
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">sum_unique</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ht</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">t</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">sum_is_nothing</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"n\">hs</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">elim</span>\n</pre></div>",
        "id": 178677916,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571679032
    },
    {
        "content": "<p><code>#lint</code> points out that you don't need the assumption <code>ht</code>.</p>",
        "id": 178677960,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1571679066
    },
    {
        "content": "<p>I'll even propose a fix for you:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">structure</span> <span class=\"n\">is_sum</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">wd</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"n\">t</span><span class=\"o\">},</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">t</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sum_add</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">s</span> <span class=\"n\">t</span><span class=\"o\">},</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">+</span> <span class=\"n\">t</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">sum_smul</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"n\">c</span><span class=\"o\">},</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">s</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">sum_shift</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">},</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n\n<span class=\"n\">def</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">is_sum</span> <span class=\"n\">f</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">s</span>\n</pre></div>",
        "id": 178678162,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571679204
    },
    {
        "content": "<p>let's see if this new <code>has_sum</code> is trivial</p>",
        "id": 178678193,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571679225
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">structure</span> <span class=\"n\">is_sum</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">wd</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"n\">t</span><span class=\"o\">},</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"n\">t</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sum_add</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">s</span> <span class=\"n\">t</span><span class=\"o\">},</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">+</span> <span class=\"n\">t</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">sum_smul</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">},</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">s</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">sum_shift</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">},</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"mi\">0</span><span class=\"o\">))</span>\n\n<span class=\"n\">def</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">is_sum</span> <span class=\"n\">f</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">s</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">has_sum_const_iff</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">hcs</span> <span class=\"n\">hc</span><span class=\"o\">,</span> <span class=\"n\">eq</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"err\">$</span> <span class=\"n\">hcs</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n    <span class=\"bp\">⟨λ</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"n\">hs</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"n\">ht</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n    <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"n\">hs</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"bp\">⟨λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hs</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">ht</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">],</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hs</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">ht</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">]</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"n\">hs</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"bp\">⟨λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hs</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">mul_zero</span><span class=\"o\">],</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hs</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">mul_zero</span><span class=\"o\">]</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"bp\">λ</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"bp\">⟨λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">hs</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">sub_zero</span><span class=\"o\">]</span><span class=\"bp\">⟩⟩</span>\n  <span class=\"mi\">0</span>\n  <span class=\"bp\">⟨λ</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">hc</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n<span class=\"bp\">λ</span> <span class=\"n\">hcs</span> <span class=\"n\">f</span> <span class=\"n\">hf</span> <span class=\"n\">t</span> <span class=\"n\">hft</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">htc</span> <span class=\"o\">:</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"n\">t</span> <span class=\"bp\">-</span> <span class=\"n\">c</span> <span class=\"o\">:=</span> <span class=\"n\">hf</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">hft</span> <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"bp\">.</span><span class=\"mi\">4</span> <span class=\"n\">hft</span><span class=\"o\">),</span>\n<span class=\"k\">have</span> <span class=\"n\">hc0</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">sub_sub_cancel</span> <span class=\"n\">t</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">htc</span><span class=\"o\">,</span> <span class=\"n\">sub_self</span><span class=\"o\">],</span>\n<span class=\"k\">have</span> <span class=\"n\">ht0</span> <span class=\"o\">:</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">hf</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">hft</span> <span class=\"err\">$</span> <span class=\"k\">by</span> <span class=\"n\">convert</span> <span class=\"n\">hf</span><span class=\"bp\">.</span><span class=\"mi\">3</span> <span class=\"n\">hft</span> <span class=\"mi\">0</span><span class=\"bp\">;</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">hc0</span><span class=\"o\">],</span>\n<span class=\"n\">ht0</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"o\">(</span><span class=\"n\">hcs</span> <span class=\"n\">hc0</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"bp\">⟩</span>\n</pre></div>",
        "id": 178680218,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571680405
    },
    {
        "content": "<p>boom it works</p>",
        "id": 178680224,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571680407
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130500\">@Abhimanyu Pallavi Sudhir</span> there you go</p>",
        "id": 178680244,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571680427
    },
    {
        "content": "<p>Nice, thanks!</p>",
        "id": 178680797,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571680716
    },
    {
        "content": "<p>I have another test:</p>",
        "id": 178680865,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571680779
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">has_sum_test</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃!</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n</pre></div>",
        "id": 178680965,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571680818
    },
    {
        "content": "<p>I don't think I can prove it. Does anyone have a counterexample?</p>",
        "id": 178681471,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571681129
    },
    {
        "content": "<p>I can prove that.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">sum_of_has_sum</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">HS</span> <span class=\"o\">:</span> <span class=\"n\">is_sum</span> <span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Ht</span> <span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"n\">a</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">S</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"n\">S</span> <span class=\"n\">HS</span> <span class=\"n\">t</span> <span class=\"n\">Ht</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">has_sum_test&#39;</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hst</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">≠</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">t</span> <span class=\"bp\">→</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">hs</span> <span class=\"n\">ht</span> <span class=\"n\">u</span> <span class=\"n\">S</span> <span class=\"n\">HS</span> <span class=\"n\">v</span> <span class=\"n\">Hv</span><span class=\"o\">,</span> <span class=\"n\">false</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"o\">(</span><span class=\"n\">hst</span> <span class=\"o\">(</span><span class=\"n\">ht</span> <span class=\"n\">S</span> <span class=\"n\">HS</span> <span class=\"n\">s</span> <span class=\"o\">(</span><span class=\"n\">sum_of_has_sum</span> <span class=\"n\">a</span> <span class=\"n\">s</span> <span class=\"n\">hs</span> <span class=\"n\">S</span> <span class=\"n\">HS</span> <span class=\"n\">v</span> <span class=\"n\">Hv</span><span class=\"o\">)))</span>\n</pre></div>",
        "id": 178689372,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571686382
    },
    {
        "content": "<p>good job, but you're still missing the existence</p>",
        "id": 178689417,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571686432
    },
    {
        "content": "<p>That part is just obvious, isn't it?</p>",
        "id": 178689482,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571686463
    },
    {
        "content": "<p>why is it obvious?</p>",
        "id": 178689497,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571686476
    },
    {
        "content": "<p>if the sequence is (1,0,0,0,...) then the only possible s is 1</p>",
        "id": 178689534,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571686509
    },
    {
        "content": "<p>and it would take me too long to prove it (I would have to construct the summation operator on finitely supported sequences)</p>",
        "id": 178689755,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571686673
    },
    {
        "content": "<p>I'm not sure what you're saying. We just need to prove that every sequence <code>a</code> has a real number <code>s</code> such that <code>has_sum a s</code>, right?</p>",
        "id": 178689902,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571686767
    },
    {
        "content": "<p>yes</p>",
        "id": 178690018,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571686838
    },
    {
        "content": "<p>Well, if there wasn't,  every real number would satisfy it from the definition of <code>has_sum</code>.</p>",
        "id": 178690020,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571686838
    },
    {
        "content": "<p>Maybe I'm confused. Let me try proving it.</p>",
        "id": 178690034,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571686851
    },
    {
        "content": "<p>Ok, yeah, it isn't obvious.</p>\n<p>So a counter-example would be a sequence that allows multiple values of the sum without contradicting the axioms -- so then <em>nothing</em> could be its <code>has_sum</code>. </p>\n<p>Isn't that undecidable by Godel?</p>",
        "id": 178691204,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571687517
    },
    {
        "content": "<p>one cannot just apply Godel to every situation</p>",
        "id": 178701731,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571694243
    },
    {
        "content": "<p>If one applies Godel to every situation, there will be situations where Godel will know something to be true but be unable to prove it (assuming Godel knows enough basic number theory)</p>",
        "id": 178713660,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571705562
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> what do you think about this <code>has_sum</code> ordeal? my algebraic knowledge is not enough to classify all subspaces of R^N closed under the shift operator</p>",
        "id": 178713749,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571705653
    },
    {
        "content": "<p>I thought that most summation methods were not shift-invariant anyways</p>",
        "id": 178713943,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571705925
    },
    {
        "content": "<p>at the very least, one of these things should come bundled with a summability predicate. All divergent series methods have one</p>",
        "id": 178714318,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571706412
    },
    {
        "content": "<p>You could define a \"summation method\" a la <a href=\"https://en.wikipedia.org/wiki/Divergent_series#Properties_of_summation_methods\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Divergent_series#Properties_of_summation_methods\">https://en.wikipedia.org/wiki/Divergent_series#Properties_of_summation_methods</a></p>",
        "id": 178714431,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571706561
    },
    {
        "content": "<p>I think <code>1/(n+1)</code> does not <code>has_sum</code>.</p>",
        "id": 178740645,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571739017
    },
    {
        "content": "<p>Because I cannot disprove that the \"sum\" of <code>1/(n+1)</code> equals any given real number.</p>",
        "id": 178740698,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571739068
    },
    {
        "content": "<p>But proving that no such disproof exists means proving the consistency of a system, right?</p>",
        "id": 178740730,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571739094
    },
    {
        "content": "<p>Specifically: the system consisting of the axioms and \"sum of <code>1/n</code>equals<code>r</code>\".</p>",
        "id": 178740817,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571739147
    },
    {
        "content": "<p>I have just arrived late at this party. But it sounds like the theory of Banach limits is also relevant (<a href=\"https://en.wikipedia.org/wiki/Banach_limit\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Banach_limit\">https://en.wikipedia.org/wiki/Banach_limit</a>).</p>",
        "id": 178773183,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1571762546
    },
    {
        "content": "<blockquote>\n<p>Because I cannot disprove that the \"sum\" of <code>1/(n+1)</code> equals any given real number.</p>\n</blockquote>\n<p>I see -- I <em>can</em> prove that the sum of <code>λn, 1/(n+1)</code> can equal any given real number -- I just need to construct a sum operator on the smallest shift-invariant linear space of sequences containing the sequence <code>λn, 1/(n+1)</code></p>\n<p>Picking a basis a 1, a 2,... where <code>a m := λ n, 1 / (m + n)</code>, it follows from basic linear algebra that defining the operator on this basis <code>S (a m) = x - (1 + 1/2 + ... + 1/(m-1))</code> defines a sum operator for some <code>x</code>. The key fact is that the <code>a i</code> actually forms a basis, which is straightforward in math, but painful in Lean.</p>",
        "id": 178884724,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571857180
    },
    {
        "content": "<p>So existence is false.</p>",
        "id": 178884862,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571857250
    },
    {
        "content": "<p>why is <code>a i</code> linearly independent?</p>",
        "id": 178884993,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571857330
    },
    {
        "content": "<p>Isn't it?</p>",
        "id": 178887365,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571859036
    },
    {
        "content": "<p>If it isn't, there is some minimum <code>m</code> such that the <code>a i</code> up to that <code>m</code> are linearly dependent.</p>",
        "id": 178887582,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571859217
    },
    {
        "content": "<p>Which would produce an infinite system of linear equations:</p>\n<div class=\"codehilite\"><pre><span></span>    c1 + 1/2 c2 + ... + 1/m     cm = 0\n1/2 c1 + 1/3 c2 + ... + 1/(m+1) cm = 0\n1/3 c1 + 1/4 c2 + ... + 1/(m+2) cm = 0\n...\n</pre></div>",
        "id": 178887733,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571859300
    },
    {
        "content": "<p>In particular, </p>\n<div class=\"codehilite\"><pre><span></span>        c1 + 1/2     c2 + ... + 1/m     cm = 0\n1/2     c1 + 1/3     c2 + ... + 1/(m+1) cm = 0\n1/3     c1 + 1/4     c2 + ... + 1/(m+2) cm = 0\n                          ...\n1/(m+1) c1 + 1/(m+2) c2 + ... + 1/(2m)  cm = 0\n</pre></div>",
        "id": 178887866,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571859388
    },
    {
        "content": "<p>It is linearly independent, but I'm curious to see what proof you have in mind</p>",
        "id": 178888044,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571859512
    },
    {
        "content": "<p>I don't. I'm just thinking.</p>",
        "id": 178888066,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571859525
    },
    {
        "content": "<p>So perhaps one could work out the determinant of that system in general.</p>",
        "id": 178888099,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571859544
    },
    {
        "content": "<p>And if it's non-zero, we're done.</p>",
        "id": 178888253,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571859634
    },
    {
        "content": "<blockquote>\n<p>It is linearly independent, but I'm curious to see what proof you have in mind</p>\n</blockquote>\n<p>What's the proof?</p>",
        "id": 178888342,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571859702
    },
    {
        "content": "<p>If it was linearly dependent, then the sequence <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">a_n = 1/n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\">/</span><span class=\"mord mathdefault\">n</span></span></span></span> would be defined by a linear recurrence of some fixed length and then the associated generating function <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>n</mi><mo>≥</mo><mn>1</mn></mrow></msub><msup><mi>x</mi><mi>n</mi></msup><mi mathvariant=\"normal\">/</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">A(x) = \\sum_{n \\ge 1} x^n/n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.144889em;vertical-align:-0.39488900000000005em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139799999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mrel mtight\">≥</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.39488900000000005em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord mathdefault\">n</span></span></span></span> would be a rational function. But it's not, it's <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">-\\log (1-x)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 178888345,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571859707
    },
    {
        "content": "<p>Ah, that's really neat.</p>",
        "id": 178888522,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571859788
    },
    {
        "content": "<p>nice</p>",
        "id": 178889019,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571860082
    },
    {
        "content": "<p>I'm pretty sure the determinant you were writing down is also known, but the name escapes me at the moment</p>",
        "id": 178889089,
        "sender_full_name": "Reid Barton",
        "timestamp": 1571860120
    },
    {
        "content": "<p>The hilbert matrix?</p>",
        "id": 178889199,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1571860201
    },
    {
        "content": "<p>Yes!</p>",
        "id": 178889266,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571860216
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Hilbert_matrix\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Hilbert_matrix\">https://en.wikipedia.org/wiki/Hilbert_matrix</a></p>",
        "id": 178889271,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1571860219
    },
    {
        "content": "<p>you guys are amazing</p>",
        "id": 178889336,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571860253
    },
    {
        "content": "<p>I think we saw the Hilbert matrix in M1GLA <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> -- at least if Richard Thomas taught the module for you too. We didn't calculate its determinant I think, but we did observe its invertibility.</p>",
        "id": 178889499,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571860327
    },
    {
        "content": "<p>even if I saw it there's no way I would remember the name</p>",
        "id": 178889550,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571860354
    },
    {
        "content": "<blockquote>\n<p>If it was linearly dependent, then the sequence <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">a_n = 1/n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\">/</span><span class=\"mord mathdefault\">n</span></span></span></span> would be defined by a linear recurrence of some fixed length and then the associated generating function <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>n</mi><mo>≥</mo><mn>1</mn></mrow></msub><msup><mi>x</mi><mi>n</mi></msup><mi mathvariant=\"normal\">/</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">A(x) = \\sum_{n \\ge 1} x^n/n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.144889em;vertical-align:-0.39488900000000005em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139799999999992em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">n</span><span class=\"mrel mtight\">≥</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.39488900000000005em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord mathdefault\">n</span></span></span></span> would be a rational function. But it's not, it's <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">-\\log (1-x)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span>.</p>\n</blockquote>\n<p>This is a pretty cool proof.</p>",
        "id": 178889575,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1571860368
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Would this make a good PLUS! problem?</p>",
        "id": 178890567,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1571860906
    },
    {
        "content": "<p>It might be massageable into a good PLUS problem</p>",
        "id": 178895438,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1571863716
    }
]