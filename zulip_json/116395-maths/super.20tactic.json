[
    {
        "content": "<p>Is <code>super</code> tactic a royal road for writing proofs in a human-like way? I'd like to formalize my 500 pages book, but I cannot remember where to use which tactic. Can I suffice with <code>super</code> tactic? (only?)</p>",
        "id": 277484523,
        "sender_full_name": "Victor Porton",
        "timestamp": 1648851081
    },
    {
        "content": "<p>Seeing your other thread, which should be provable by ext; simp or something similar... Maybe you should try the \"tidy\" tactic</p>",
        "id": 277485334,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1648851709
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> What should I import to get <code>tidy</code>?</p>",
        "id": 277485888,
        "sender_full_name": "Victor Porton",
        "timestamp": 1648852056
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#tidy\">tactic#tidy</a></p>",
        "id": 277485909,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1648852074
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"308899\">Yakov Pechersky</span> <a href=\"#narrow/stream/116395-maths/topic/super.20tactic/near/277485909\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/tidy\">docs#tidy</a></p>\n</blockquote>\n<p>404 Not Found</p>",
        "id": 277485970,
        "sender_full_name": "Victor Porton",
        "timestamp": 1648852096
    },
    {
        "content": "<p>Sorry, I meant (and edited) <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#tidy\">tactic#tidy</a></p>",
        "id": 277486031,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1648852165
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> unknown identifier 'tidy'</p>",
        "id": 277486050,
        "sender_full_name": "Victor Porton",
        "timestamp": 1648852179
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/Z3D-WO3rzcQ8jLyYuFh-MyqR/1867e012-7c58-4fca-bf42-a0bc12391bd5.jpg\">1867e012-7c58-4fca-bf42-a0bc12391bd5.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/Z3D-WO3rzcQ8jLyYuFh-MyqR/1867e012-7c58-4fca-bf42-a0bc12391bd5.jpg\" title=\"1867e012-7c58-4fca-bf42-a0bc12391bd5.jpg\"><img src=\"/user_uploads/3121/Z3D-WO3rzcQ8jLyYuFh-MyqR/1867e012-7c58-4fca-bf42-a0bc12391bd5.jpg\"></a></div>",
        "id": 277486140,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1648852231
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 277486166,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1648852253
    },
    {
        "content": "<p>Are you using mathlib? If so, <code>import tactic</code> at the top of the file should import <code>tidy</code> and most other mathlib tactics as well</p>",
        "id": 277486170,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1648852258
    },
    {
        "content": "<p>Anyway, it's \"import tactic.basic\" or \"import tactic\", which you can find in the documentation for tidy</p>",
        "id": 277486209,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1648852292
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">leanpkg</span> <span class=\"n\">add</span> <span class=\"n\">gi</span><span class=\"bp\">@</span><span class=\"n\">github.com</span><span class=\"o\">:</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib.git</span><span class=\"bp\">@</span><span class=\"n\">master</span>\n<span class=\"n\">mathlib.git</span><span class=\"bp\">@</span><span class=\"n\">master</span><span class=\"o\">:</span> <span class=\"n\">trying</span> <span class=\"n\">to</span> <span class=\"n\">update</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib.git</span><span class=\"bp\">@</span><span class=\"n\">master</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">2</span>\n<span class=\"n\">cannot</span> <span class=\"n\">find</span> <span class=\"n\">revision</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"mi\">3</span><span class=\"bp\">.</span><span class=\"mi\">4</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"k\">in</span> <span class=\"n\">repository</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib.git</span><span class=\"bp\">@</span><span class=\"n\">master</span>\n</code></pre></div>",
        "id": 277486358,
        "sender_full_name": "Victor Porton",
        "timestamp": 1648852414
    },
    {
        "content": "<p>Okay, it seems you have issues with your lean setup. Please continue this discussion in <a class=\"stream\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members\">#new members</a></p>",
        "id": 277486440,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1648852469
    }
]