[
    {
        "content": "<p>Hi, I'm trying to find the order of zmod n.<br>\nChris helped me and wrote this code:</p>\n<p>instance (n : nat) : pos_nat (nat.succ n) := ⟨nat.succ_pos _⟩ <br>\ninstance : fintype  (units (zmod 5)) := sorry<br>\ninstance : decidable_eq (units (zmod 5)) := <br>\nλ x y, decidable_of_iff _ ⟨ units.ext, λ _,by simp *⟩<br>\n#eval @order_of (units (zmod 5)) _ _ _ ⟨(2 : zmod 5), 2⁻¹, rfl, rfl⟩ </p>\n<p>However the eval command sends the error \"units.fintype: trying to evaluate sorry\" presumably because we didn't prove instance : fintype  (units (zmod 5)). So I guess my question is how can I prove the latter?</p>",
        "id": 130770849,
        "sender_full_name": "Guy Leroy",
        "timestamp": 1533206420
    },
    {
        "content": "<p>MWE please</p>",
        "id": 130771157,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1533206944
    },
    {
        "content": "<p>I think Chris said that <code>units R</code> is not just the subtype of R -- to construct a term of type <code>units R</code> you actually need to give both <code>u</code> and its inverse <code>v</code>. So you will need to prove some lemma (which might be already there) saying that there's an injection from <code>units R</code> to <code>R</code>, and then convince lean that a subtype of a fintype is a fintype.</p>\n<p>To look for the injection from <code>units R</code> into <code>R</code> I would find where <code>units</code> are defined and then look at the code written shortly afterwards to see if there's anything useful. Then one might hope that all the rest is there already.</p>",
        "id": 130771164,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1533206988
    },
    {
        "content": "<p>no, the subtype of a fintype is not a fintype. that's why you can create a fintype by a surjection but not by an injection</p>",
        "id": 130771214,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1533207026
    },
    {
        "content": "<p>(but you can do various things if you have a finset of R that contains all the units, such as <code>finset.attach</code>)</p>",
        "id": 130771219,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1533207056
    },
    {
        "content": "<p>and the injection is just <code>units.val</code></p>",
        "id": 130771228,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1533207083
    },
    {
        "content": "<blockquote>\n<p>no, the subtype of a fintype is not a fintype.</p>\n</blockquote>\n<p>Wait what? Even when everything is decidable?</p>",
        "id": 130771277,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1533207143
    },
    {
        "content": "<p>if it's decidable then it's ok</p>",
        "id": 130771279,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1533207156
    },
    {
        "content": "<p>I don't know if decidability is proved, but for a in Zmod n I can decide if it's a unit or not. <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> do you know if this needs doing, or is it already done?</p>",
        "id": 130771291,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1533207211
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111947\">@Guy Leroy</span> Chris suggests you prove an equiv between <code>units (zmod n)</code> and the nats between 0 and n-1 which are coprime to n. That would do it.</p>",
        "id": 130771406,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1533207414
    },
    {
        "content": "<p>Oh Ellen just messaged me, she's sitting next to me. I can't believe I'm in a room full of people all talking to each other online. Guy is about 4 metres from me. Is this how kids work nowadays?</p>",
        "id": 130771415,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1533207447
    },
    {
        "content": "<p>Thanks for the answers!</p>",
        "id": 130771464,
        "sender_full_name": "Guy Leroy",
        "timestamp": 1533207493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> just wait until they get the neural implants...</p>",
        "id": 130771479,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1533207552
    },
    {
        "content": "<p>kids these days, only focussing on their laptops instead of on their newspapers</p>",
        "id": 130771543,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1533207616
    },
    {
        "content": "<p>I'm pretty surprised they gathered in the same room. Where I studied, all freely accessible computer rooms disappeared because students stopped using them when internet reached the student housing 15 years ago.</p>",
        "id": 130772043,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1533208336
    },
    {
        "content": "<p>they're doing UROP</p>",
        "id": 130772049,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1533208352
    },
    {
        "content": "<p>I force them to come in :-) In fact I don't even know why we're meeting in the computer room -- everyone brings their own computers.</p>",
        "id": 130772978,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1533209729
    }
]