[
    {
        "content": "<p>I'm having trouble using adjoint of a continuous linear map. Here's a mwe:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.inner_product_space.adjoint</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">inner_product_space</span> <span class=\"n\">ℝ</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">complete_space</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">inner_product_space</span> <span class=\"n\">ℝ</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">complete_space</span> <span class=\"n\">F</span><span class=\"o\">]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"n\">ℝ</span><span class=\"o\">]</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">f.adjoint</span> <span class=\"n\">b</span>\n</code></pre></div>\n<p>This throws the following errors</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">invalid field notation, function 'continuous_linear_map.adjoint' does not have explicit argument with type (continuous_linear_map ...)</span>\n<span class=\"cm\">-/</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n<span class=\"cm\">don't know how to synthesize placeholder</span>\n<span class=\"cm\">context:</span>\n<span class=\"cm\">E : Type u_1,</span>\n<span class=\"cm\">_inst_1 : inner_product_space ℝ E,</span>\n<span class=\"cm\">_inst_2 : complete_space E,</span>\n<span class=\"cm\">F : Type u_2,</span>\n<span class=\"cm\">_inst_3 : inner_product_space ℝ F,</span>\n<span class=\"cm\">_inst_4 : complete_space F,</span>\n<span class=\"cm\">f : E →L[ℝ] F,</span>\n<span class=\"cm\">b : F</span>\n<span class=\"cm\">⊢ Sort ?</span>\n<span class=\"cm\">-/</span>\n</code></pre></div>\n<p>Any suggestions on how to fix this? Thanks,</p>",
        "id": 293286815,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1660403034
    },
    {
        "content": "<p><code>continuous_linear_map.adjoint f b</code>?</p>",
        "id": 293287191,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1660403255
    },
    {
        "content": "<p>Oh lol, this worked! Thank you</p>",
        "id": 293287524,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1660403404
    },
    {
        "content": "<p>Why does <code>f.adjoint</code> not work btw?</p>",
        "id": 293287558,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1660403414
    },
    {
        "content": "<p>I just couldn't understand the clipped error message</p>",
        "id": 293287591,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1660403435
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"245078\">Apurva Nakade</span> has marked this topic as resolved.</p>",
        "id": 293287597,
        "sender_full_name": "Notification Bot",
        "timestamp": 1660403440
    },
    {
        "content": "<p>the problem is that <code>continuous_linear_map.adjoint</code> is a equivalence</p>",
        "id": 293287797,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1660403536
    },
    {
        "content": "<p>It means what it says: If you look at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_linear_map.adjoint\">docs#continuous_linear_map.adjoint</a>, you'll see that it has no <code>(_ : continuous_linear_map _ _ _)</code> argument, because it is bundled. Sometimes, Lean figures out that it should take the dot notation to be the first bundled argument, but here it wasn't that smart.</p>",
        "id": 293287826,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1660403548
    },
    {
        "content": "<p>Ah I see, thanks.</p>",
        "id": 293288140,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1660403721
    },
    {
        "content": "<p>Note that we have a nice notation for this (see e.g. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_linear_map.adjoint_adjoint\">docs#continuous_linear_map.adjoint_adjoint</a>)</p>",
        "id": 293306503,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1660412995
    },
    {
        "content": "<p>isn't the dagger notation only localized in that file?</p>",
        "id": 293310282,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1660415739
    },
    {
        "content": "<p>No it’s in the locale <code>inner_product</code></p>",
        "id": 293311178,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1660416398
    }
]