[
    {
        "content": "<p>Is there a definition of <code>ℝ^n</code>  as a vector space in the library? I didn't see one, but I'll apologize in advance if I did not look hard enough. </p>\n<p>There are lots of possible representations: <code>vector ℝ n</code>, <code>fin n → ℝ</code>, more generally <code>σ → ℝ</code> with <code>σ</code> a <code>fintype</code>, a recursively-defined iterated product, etc. Ultimately, I want it for convex analysis, which means that I need something that will work with matrices but can can also be instantiated as a normed space. (And I guess we will eventually have to grapple that there are various equivalent norms -- either the l1 or l2 norm will work.) That seems to speak for using <code>σ → ℝ</code> with <code>σ</code> a <code>fintype</code>.</p>\n<p>Has anyone already done something along these lines? If not, what should I do?</p>",
        "id": 171378782,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1563726533
    },
    {
        "content": "<p>If you're making heavy use of matrices, one option is an n by 1 matrix. That's what I've been using. I'm even using 1 by 1 matrices.</p>",
        "id": 171378964,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1563726874
    },
    {
        "content": "<p>Thanks. Given <code>f : σ → ℝ</code>, we can use <code>matrix.col f</code> and <code>matrix.row f</code> to get an n by 1 matrix and a 1 by n matrix, respectively. And there are already casts, I think, from <code>fin n → ℝ</code> to and from <code>vector ℝ n</code>. I think the type <code>σ → ℝ</code> is already a vector space. <em>And</em> the norms on <code>σ → ℝ</code> are special cases of the L1 and L2 norms in measure theory (now that we have integration!). So all that also speaks to using <code>σ → ℝ</code> as the main representation: it is convenient to get to the others.</p>",
        "id": 171379361,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1563727674
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, this is the same issue as with localisation, right? What would the predicate be?</p>",
        "id": 171382965,
        "sender_full_name": "Jan-David Salchow",
        "timestamp": 1563734386
    },
    {
        "content": "<p>Well there's the standard universal property, which will involve quantifying over universes, and then at least one concrete one which have this property, of the form \"this list of size n is a basis\"</p>",
        "id": 171383588,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563735570
    }
]