[
    {
        "content": "<p>Oops, I just realized I posted the converse of what I actually wanted </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">matrix</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">nonsingular_inverse</span>\n<span class=\"kn\">open</span> <span class=\"n\">matrix</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">k</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">M</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span>\n    <span class=\"bp\">∃</span> <span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">v</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">M</span><span class=\"bp\">.</span><span class=\"n\">mul_vec</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 206895932,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597376900
    },
    {
        "content": "<p>I managed to get the other direction in a roundabout way using the inverse of <code>M</code> but in this direction I am not able to see what to use.</p>",
        "id": 206896014,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597377081
    },
    {
        "content": "<p>We’ve proven that an injective linear map has an inverse, so you could use that for the contrapositive</p>",
        "id": 206897827,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1597380230
    },
    {
        "content": "<p>Or any column vector of the adjugate should be in the kernel</p>",
        "id": 206897873,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1597380270
    },
    {
        "content": "<p>This is very interesting. I have never worked with the adjoint matrix in the non-invertible case.</p>",
        "id": 206900444,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597384093
    },
    {
        "content": "<p>Thanks again. Found the exact statement that I need <code>lemma mul_adjugate (A : matrix n n α) : A ⬝ adjugate A = A.det • 1</code></p>",
        "id": 206900559,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597384245
    }
]