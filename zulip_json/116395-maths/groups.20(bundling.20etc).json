[
    {
        "content": "<p>I was just looking through what we have on group theory. </p>\n<p>1) The definition of <code>simple_group</code> is incorrect -- the trivial group is not simple, for the same reason that 1 is not a prime number. I was going to fix this but then I realised I didn't know the idiomatic way to say \"I am not the trivial group\". How about demanding the existence of an element which is not the identity? Any better ideas? This is in <code>group_theory/subgroup.lean</code>. </p>\n<p>2) We still only have Sylow 1? <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> are you going to PR Sylow 2 and 3?</p>\n<p>3) Do we have the canonical bijection of lattices (or whatever they are) between the lattice of subgroups of G containing the normal subgroup N, and the lattice of subgroups of G/N? And how best to say that this lattice preserves normal subgroups?</p>",
        "id": 169846463,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562570560
    },
    {
        "content": "<p>I've just looked a bit more (and changed the title). I would like to put some lattice structure on the subgroups of G and prove things such as (3) above (is that the 3rd or 4th isomorphism theorem or something)? Having looked at how this is done for submodules I realise that one difference is that...I think \"submodules are bundled and subgroups are not\". Is that the right lingo? Can I bundle subgroups? What would the definition be?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">structure</span> <span class=\"n\">subgroup</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">carrier</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">G</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">is_subgroup</span> <span class=\"o\">:</span> <span class=\"n\">is_subgroup</span> <span class=\"n\">carrier</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>?</p>\n<p>And then I can prove they're a semisubinfbot-lattice or whatever?</p>",
        "id": 169855711,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562580280
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> are groups bundled already? Is this how to bundle them?</p>",
        "id": 169855735,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562580303
    },
    {
        "content": "<p>groups are not bundled and not to be bundled</p>",
        "id": 169856199,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1562580793
    },
    {
        "content": "<p>subgroups are to be bundled using something similar to your code</p>",
        "id": 169856215,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1562580817
    },
    {
        "content": "<p>and you can then prove that they form a complete lattice (because it has galois insertion/connection using subgroup span)</p>",
        "id": 169856226,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1562580834
    },
    {
        "content": "<p>Right. I was going to tell the student to copy submodules and bundle subgroups</p>",
        "id": 169856616,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562581217
    },
    {
        "content": "<p>(and yes sorry, I'm not talking about bundling groups)</p>",
        "id": 169856657,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562581303
    },
    {
        "content": "<p>So bundling subgroups and add_subgroups would be an appropriate PR?</p>",
        "id": 169856736,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562581374
    },
    {
        "content": "<p>I believe so</p>",
        "id": 169856755,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1562581387
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I'm not sure if you should give that to a student.</p>",
        "id": 169856979,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1562581663
    },
    {
        "content": "<p>It doesn't have any mathematical content, and it will likely be a very painful refactor of mathlib.</p>",
        "id": 169856991,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1562581681
    },
    {
        "content": "<p>We'll do it together. We're doing something else really, some lemmas in finite group theory.</p>",
        "id": 169857093,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562581751
    },
    {
        "content": "<p>But I now believe that the natural way to state that there's a bijection between the subgroups of G/N and the subgroups of G containing N is using this lattice stuff, which forces me to bundle subgroups.</p>",
        "id": 169857117,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562581784
    },
    {
        "content": "<p>Why do I need to refactor anything? We just bundle them and leave the unbundled stuff there.</p>",
        "id": 169857171,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562581810
    },
    {
        "content": "<p>Hmmm... that feels like bad library design to me.</p>",
        "id": 169857321,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1562582000
    },
    {
        "content": "<p>It's fine to just bundle them in some project... but I'm not sure if it should be added to mathlib...</p>",
        "id": 169857380,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1562582066
    },
    {
        "content": "<p>That's fine.</p>",
        "id": 169857769,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562582630
    },
    {
        "content": "<p>I am trying to understand Assia's paper about Zassenhaus.</p>",
        "id": 169857817,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562582654
    },
    {
        "content": "<p>She makes a lot of fuss about making all groups subgroup of a big group, and this felt to me very much like the glueing sheaves thing.</p>",
        "id": 169857837,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562582706
    },
    {
        "content": "<p>I figured that the best way to get to the bottom of it was to get a summer student to do Zassenhaus in Lean.</p>",
        "id": 169857853,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562582735
    },
    {
        "content": "<blockquote>\n<p>Hmmm... that feels like bad library design to me.</p>\n</blockquote>\n<p>I don't really understand this stuff. So there is already <code>is_subgroup</code>. I am proposing to make <code>subgroup</code>, using <code>is_subgroup</code>. Then we have the best of both worlds. Are you (<span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> ) saying that if I were to bundle <code>subgroup</code> then <code>is_subgroup</code> should be completely removed from mathlib? But then I can't define <code>subgroup</code> using <code>is_subgroup</code>. So is my proposed definition not right?</p>",
        "id": 169862382,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562587630
    },
    {
        "content": "<p>I'm in favour of bundling subgroups.</p>",
        "id": 169862462,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1562587686
    },
    {
        "content": "<p>There is no <code>is_submodule</code> either.</p>",
        "id": 169862466,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1562587695
    },
    {
        "content": "<p>The point is, you can't easily apply lemma's using one version in a setup using the other. So we should use only one of the two.</p>",
        "id": 169862495,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1562587723
    },
    {
        "content": "<p>So a better definition would just be to copy the definition of a subgroup to a bundled definition without using <code>is_subgroup</code>, and then to slowly remove every occurrence of <code>is_subgroup</code>?</p>",
        "id": 169862593,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562587803
    },
    {
        "content": "<p>And can this be done slowly, i.e. make the bundled subgroups, leave <code>is_subgroup</code>, put a comment by it saying it's deprecated, and then over the course of the next few months remove all occurrences of it?</p>",
        "id": 169862695,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562587881
    },
    {
        "content": "<p>I'm not sure if that will work... but I'm a refactor newbie</p>",
        "id": 169862774,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1562587961
    },
    {
        "content": "<p>You're less of a newbie than me -- I've just regarded all this refactoring stuff as tedious implementation issues because I've not been able to learn everything at once. Give me a tonne of proofs to do in tactic mode and I'm in heaven. Give me a simple object to make and I need help.</p>",
        "id": 169862969,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562588136
    },
    {
        "content": "<p>one reason we still don't know that Spa(perfectoid field) is a perfectoid space is that I keep looking at the maths definition of a perfectoid field and thinking \"crap, I really don't know the best way to write this in Lean\".</p>",
        "id": 169863085,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562588202
    },
    {
        "content": "<p>I am really bad at making definitions. This is why I'm asking these dumb questions. I need to learn this stuff now and it's kind of getting to the top of the pile.</p>",
        "id": 169863133,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562588245
    },
    {
        "content": "<p>It can be done gradually, but that tends to be more total work than doing everything in one chunk</p>",
        "id": 169863642,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562588660
    },
    {
        "content": "<p>so I try to do refactors all in one go if I can budget the time</p>",
        "id": 169863662,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562588693
    },
    {
        "content": "<p>So both Chris and Kenny think that subgroups should be bundled. And the longer they're not bundled, the harder it will be to bundle them. And <code>is_subgroup</code> extends <code>is_submonoid</code> so presumably submonoids should also be bundled.</p>",
        "id": 169863670,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562588703
    },
    {
        "content": "<blockquote>\n<p>so I try to do refactors all in one go if I can budget the time</p>\n</blockquote>\n<p>The thing about that approach is that then you end up with a huge PR which needs to be merged really quickly.</p>",
        "id": 169863691,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562588748
    },
    {
        "content": "<p>I am trying to see a path to bundling subgroups. <span class=\"user-mention\" data-user-id=\"228602\">@Sian Carey</span> and I are going to try it this summer just to see how it works.</p>",
        "id": 169863754,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562588795
    },
    {
        "content": "<p>You are absolutely right. It requires a lot of global coordination in a short time, so this becomes less attractive the larger the project gets</p>",
        "id": 169863836,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562588884
    },
    {
        "content": "<p>So perhaps doing it slowly is a more viable solution for this particular case?</p>",
        "id": 169863966,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562589021
    },
    {
        "content": "<p>Maybe you can setup a PR appointment? You ask Mario how much time he would need to review such a PR, and when he'll have that much time, and try to fire up the PR at that point in time</p>",
        "id": 169864039,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1562589119
    },
    {
        "content": "<p>What's wrong with just doing it slowly? I have very little experience with this kind of code management.</p>",
        "id": 169871736,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1562594579
    },
    {
        "content": "<p>The problem with doing things slowly is they take longer</p>",
        "id": 169872136,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1562594863
    }
]