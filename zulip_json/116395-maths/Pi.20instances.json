[
    {
        "content": "<p>It seems that if I have <code>[∀ x, normed_space 𝕜 (E x)]</code> lean does not find and instance of <code>[∀ x, module 𝕜 (E x)]</code>. Does this mean I have to redeclare the instance hierarchy for pi instances? Or am I doing something wrong? In case yes, is there a trick?</p>",
        "id": 242053613,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1623239893
    },
    {
        "content": "<p>This sounds similar to the problem we've been seeing with <code>dfinsupp</code> which also has this type of instance argument. Can you give a MWE?</p>",
        "id": 242054371,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1623240331
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.normed_space.basic</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">normed_field</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"bp\">→</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">normed_group</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">x</span><span class=\"o\">)]</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">normed_space</span> <span class=\"bp\">𝕜</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">x</span><span class=\"o\">)]</span>\n\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">module</span> <span class=\"bp\">𝕜</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">infer_instance</span>\n<span class=\"c1\">-- works fine for me</span>\n</code></pre></div>",
        "id": 242054925,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1623240614
    }
]