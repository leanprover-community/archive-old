[
    {
        "content": "<p>Hi all,</p>\n<p>I made a new PR with the definition of the projectivization of a vector space in <a href=\"https://github.com/leanprover-community/mathlib/pull/12438\">#12438</a></p>\n<p>It is tagged as RFC, because I would really like to hear your comments! This is only an initial PR, with the definition of <code>projectivization K V</code>, and some other very trivial basics (like constructing elements of the projectivization, maps between projective spaces associated to injective (semi)linear maps, etc.).</p>\n<p>If you see anything glaring that's missing and should be added to this PR, please do let me know!</p>\n<p>Eventually, I will like to work toward a proof of the fundamental theorem of projective geometry (and I may supervise an undergrad project this summer with this goal). Some other interesting future projects could be to construct the manifold structure in the case of projective spaces over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">C</span></span></span></span>, and/or to identify the points of the scheme-theoretic projective space (once it's defined) with this \"classical\" one.</p>",
        "id": 274044085,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646343501
    },
    {
        "content": "<p>Is it worth to do at least the basic definitions over a ring? Considering multiplication by a unit.</p>",
        "id": 274044814,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646343893
    },
    {
        "content": "<p>I thought about that, but I'm not convinced! Note that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">P</mi><mi>n</mi></msup><mo stretchy=\"false\">(</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{P}^n(R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span> is not the naive thing when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> is not a field. (Here by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">P</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{P}^n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">P</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span> I mean <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mi>r</mi><mi>o</mi><mi>j</mi><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><msub><mi>T</mi><mn>0</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>T</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">Proj \\mathbb{Z}[T_0,\\ldots,T_n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathnormal\">ro</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span></span></span></span>, of course!)</p>",
        "id": 274044871,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646343928
    },
    {
        "content": "<p>Yes, in general they are different, but sometimes the two are related, right? For example if any projective module is free, a point of the true projective space should gives a point of the naive one if I am not confused</p>",
        "id": 274046519,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646344818
    },
    {
        "content": "<p>Yeah that's right.</p>",
        "id": 274046816,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646344888
    },
    {
        "content": "<p>Okay, maybe it is worthwhile to try to generalize a bit at this point.</p>",
        "id": 274046863,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646344907
    },
    {
        "content": "<p>If the generalization is essentially painless I would say \"why not\", but I totally agree to assume field if working over a ring causes problems.</p>",
        "id": 274047179,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646345052
    },
    {
        "content": "<p>Mmh, the natural condition would be to take <code>n</code> elements that generate the whole ring, and this already looks complicated</p>",
        "id": 274047364,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1646345175
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130384\">Riccardo Brasca</span> <a href=\"#narrow/stream/116395-maths/topic/Projective.20spaces/near/274044814\">said</a>:</p>\n<blockquote>\n<p>Considering multiplication by a unit.</p>\n</blockquote>\n<p>I said the same thing in the PR - it makes some of the field cases easier to prove too</p>",
        "id": 274052253,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646347844
    }
]