[
    {
        "content": "<p>I did some convergence proof of a sequence using the standard epsilontics approach. I then asked <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> how to use fabulous filters instead, and we ended up writing these definitions/instances and lemma:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">local</span> <span class=\"kn\">notation</span> <span class=\"bp\">`|`</span> <span class=\"n\">x</span> <span class=\"bp\">`|`</span> <span class=\"o\">:=</span> <span class=\"n\">abs</span> <span class=\"n\">x</span>\n<span class=\"kn\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">partial_order</span>\n<span class=\"kn\">section</span> <span class=\"n\">topology</span>\n<span class=\"kn\">open</span> <span class=\"n\">topological_space</span> <span class=\"n\">set</span>\n<span class=\"kn\">variable</span> <span class=\"o\">[</span><span class=\"n\">partial_order</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">topology</span> <span class=\"o\">:</span> <span class=\"n\">topological_space</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"n\">generate_from</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">}</span> <span class=\"bp\">∨</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">|</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">}}</span>\n\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">topology</span>\n\n<span class=\"n\">def</span> <span class=\"n\">order_topology</span> <span class=\"o\">:</span> <span class=\"n\">orderable_topology</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"bp\">⟨</span><span class=\"n\">rfl</span><span class=\"bp\">⟩</span>\n<span class=\"kn\">end</span> <span class=\"n\">topology</span>\n<span class=\"kn\">end</span> <span class=\"n\">partial_order</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">decidable_linear_ordered_comm_group</span>\n<span class=\"kn\">variable</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_ordered_comm_group</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">partial_order</span><span class=\"bp\">.</span><span class=\"n\">topology</span>\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">partial_order</span><span class=\"bp\">.</span><span class=\"n\">order_topology</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">order_topology</span><span class=\"bp\">.</span><span class=\"n\">tendsto_iff_epsilon</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">tendsto</span> <span class=\"n\">f</span> <span class=\"n\">z</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"bp\">|</span><span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"bp\">|</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">}</span> <span class=\"err\">∈</span> <span class=\"n\">z</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"bp\">@</span><span class=\"n\">tendsto_orderable</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"c1\">-- does not work without `show` for some reason</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rintros</span> <span class=\"bp\">⟨</span><span class=\"n\">hyp_lt_a</span><span class=\"o\">,</span> <span class=\"n\">hyp_gt_a</span><span class=\"bp\">⟩</span> <span class=\"n\">ε</span> <span class=\"n\">ε_pos</span><span class=\"o\">,</span>\n    <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">}</span> <span class=\"err\">∈</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">abs_sub_lt_iff</span><span class=\"o\">],</span>\n    <span class=\"k\">have</span> <span class=\"n\">set1</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">}</span> <span class=\"err\">∈</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"k\">by</span>\n    <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">ε</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">}</span> <span class=\"err\">∈</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">hyp_lt_a</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">ε</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">sub_lt_self</span> <span class=\"n\">a</span> <span class=\"n\">ε_pos</span><span class=\"o\">),</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">ε</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">sub_lt</span> <span class=\"o\">},</span>\n      <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n    <span class=\"k\">have</span> <span class=\"n\">set2</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">}</span> <span class=\"err\">∈</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"k\">by</span>\n    <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">}</span> <span class=\"err\">∈</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">hyp_gt_a</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">ε</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">lt_add_of_pos_right</span> <span class=\"n\">a</span> <span class=\"n\">ε_pos</span><span class=\"o\">),</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"n\">f</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">sub_lt_iff_lt_add&#39;</span> <span class=\"o\">},</span>\n      <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">z</span><span class=\"bp\">.</span><span class=\"n\">inter_sets</span> <span class=\"n\">set2</span> <span class=\"n\">set1</span><span class=\"o\">)</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"k\">assume</span> <span class=\"n\">hyp_ε_pos</span><span class=\"o\">,</span>\n    <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"k\">assume</span> <span class=\"n\">a&#39;</span> <span class=\"n\">a&#39;_lt_a</span><span class=\"o\">,</span>\n      <span class=\"k\">let</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">a&#39;</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"bp\">|</span><span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"bp\">|</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">}</span> <span class=\"err\">∈</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">hyp_ε_pos</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">sub_pos</span><span class=\"bp\">.</span><span class=\"n\">elim_right</span> <span class=\"n\">a&#39;_lt_a</span><span class=\"o\">),</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">}</span> <span class=\"err\">∈</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">abs_sub_lt_iff</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">}</span> <span class=\"err\">∈</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">z</span><span class=\"bp\">.</span><span class=\"n\">sets_of_superset</span> <span class=\"n\">this</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">inter_subset_right</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">),</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">a&#39;</span> <span class=\"bp\">&lt;</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"o\">{</span><span class=\"n\">intro</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">sub_lt</span><span class=\"o\">,</span> <span class=\"n\">sub_sub_self</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n      <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"k\">assume</span> <span class=\"n\">a&#39;</span> <span class=\"n\">a&#39;_gt_a</span><span class=\"o\">,</span>\n      <span class=\"k\">let</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span> <span class=\"n\">a&#39;</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"bp\">|</span><span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"bp\">|</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">}</span> <span class=\"err\">∈</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">hyp_ε_pos</span> <span class=\"n\">ε</span> <span class=\"o\">(</span><span class=\"n\">sub_pos</span><span class=\"bp\">.</span><span class=\"n\">elim_right</span> <span class=\"n\">a&#39;_gt_a</span><span class=\"o\">),</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">}</span> <span class=\"err\">∈</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">abs_sub_lt_iff</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">|</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">}</span> <span class=\"err\">∈</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">z</span><span class=\"bp\">.</span><span class=\"n\">sets_of_superset</span> <span class=\"n\">this</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">inter_subset_left</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">),</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">a&#39;</span> <span class=\"bp\">&gt;</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"o\">{</span><span class=\"n\">intro</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">lt_sub_iff_add_lt</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n      <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">]</span> <span class=\"o\">}}</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">decidable_linear_ordered_comm_group</span>\n</pre></div>\n\n\n<p>I have no clue about Lean's topology library. Should this all live in mathlib? If so, where? Are there duplicates?</p>",
        "id": 171768188,
        "sender_full_name": "Kevin Kappelmann",
        "timestamp": 1564143180
    }
]