[
    {
        "content": "<p>Hi all, apologies if I am misusing this. Tried the search unsuccessfully at least.</p>\n<p>Am just getting started with LEAN, played the numbers game and read through the docs. Now for my own application I have equations with real exponents, but for anything other than natural exponents it says \"failed to synthesize type class instance for [...] [base number type] ℝ\" (stuff in brackets is mine).</p>\n<p>What am I doing wrong? Any help would be greatly appreciated, learning curve's steep.</p>",
        "id": 231613614,
        "sender_full_name": "Belisarius Cawl",
        "timestamp": 1616582767
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"400229\">@Belisarius Cawl</span> What did you <code>import</code> at the top of your file?</p>",
        "id": 231613756,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616582838
    },
    {
        "content": "<p>Also \"equations\" of what? You can't take real exponents of arbitrary things. They have to be something like real numbers.</p>",
        "id": 231613797,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616582864
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/real.has_pow\">docs#real.has_pow</a> should work</p>",
        "id": 231613818,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616582876
    },
    {
        "content": "<p>So if you <code>import analysis.special_functions.pow</code> then you should be able to take real exps of real numbers</p>",
        "id": 231613940,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616582940
    },
    {
        "content": "<p>hey cool, will try it out right away. thanks a lot!</p>",
        "id": 231614022,
        "sender_full_name": "Belisarius Cawl",
        "timestamp": 1616582993
    },
    {
        "content": "<p>works, woohoo!</p>",
        "id": 231614097,
        "sender_full_name": "Belisarius Cawl",
        "timestamp": 1616583026
    },
    {
        "content": "<p>wait a second... This is very strange. Depending on whether the first occurence of exponentiation im my equation is real^real or whole^real, respectively, the other occurences of whole^real don't cause an error or do cause one. (At least until further down at another equation).</p>\n<p>In any case I guess I have to convert my wholes to reals, no? How would I do that? In the docs (<a href=\"https://leanprover-community.github.io/mathlib_docs/data/real/basic.html#real\">https://leanprover-community.github.io/mathlib_docs/data/real/basic.html#real</a>) I don't see anything analogous to int.from_nat or however it's called.</p>\n<p>As a related question - is it possible to add whole numbers with the \"+\" infix notation? LEAN complains until I use int.add.<br>\n(EDIT: only complains when I add wholes to nats which I guess is okay)</p>\n<p>Again apologies for the messy noob questions, if you would like to point out a suggested way to deal with those myself I'd be happy to do so.</p>",
        "id": 231615281,
        "sender_full_name": "Belisarius Cawl",
        "timestamp": 1616583654
    },
    {
        "content": "<p><code>(n:ℝ)</code> coerces an integer to a real</p>",
        "id": 231615728,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616583849
    },
    {
        "content": "<p>You can certainly just write <code>n + m</code> for integer addition</p>",
        "id": 231615852,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616583905
    },
    {
        "content": "<p>If that doesn't work, you've messed something up, somewhere</p>",
        "id": 231615882,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616583919
    },
    {
        "content": "<p>But we can't tell if you don't show us your code</p>",
        "id": 231615923,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1616583934
    },
    {
        "content": "<p>Yeah, I guess I tried to plus nats and wholes</p>",
        "id": 231615936,
        "sender_full_name": "Belisarius Cawl",
        "timestamp": 1616583943
    },
    {
        "content": "<p>ok sure, wanted to avoid walls of text. will try what you said now first. Thanks!</p>",
        "id": 231616085,
        "sender_full_name": "Belisarius Cawl",
        "timestamp": 1616584010
    },
    {
        "content": "<p>(works)</p>",
        "id": 231617231,
        "sender_full_name": "Belisarius Cawl",
        "timestamp": 1616584649
    },
    {
        "content": "<p>You can only add numbers of the same type. If lean sees a + b then it assumes you're adding things of a's type and if b isn't of a's type then it will try to coerce it into a's type. So real + nat will work but nat + real won't.</p>",
        "id": 231620214,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1616586399
    },
    {
        "content": "<p>For nat + real you need to coerce the nat yourself with (n : real)</p>",
        "id": 231620256,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1616586431
    }
]