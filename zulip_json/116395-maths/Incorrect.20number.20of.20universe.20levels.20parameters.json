[
    {
        "content": "<p>The following lemma and def each throw the cryptic error message \"incorrect number of universe levels parameters for 'quotient_add_group.quotient_ker_equiv_of_right_inverse', <a href=\"https://github.com/leanprover-community/mathlib/issues/2\">#2</a> expected, <a href=\"https://github.com/leanprover-community/mathlib/issues/1\">#1</a> provided\"</p>\n<p>Seems like this is an issue with <code>to_additive</code>, but I'm a bit puzzled.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">group_theory.quotient_group</span>\n\n<span class=\"c1\">--incorrect number of universe levels parameters for 'quotient_add_group.quotient_ker_equiv_of_right_inverse', #2 expected, #1 provided</span>\n<span class=\"kd\">@[to_additive]</span> <span class=\"kd\">lemma</span> <span class=\"n\">subgroup.card_quotient_bot</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"o\">(</span><span class=\"n\">quotient_group.quotient</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">subgroup</span> <span class=\"n\">G</span><span class=\"o\">))]</span> <span class=\"o\">:</span>\n <span class=\"o\">(</span><span class=\"n\">fintype.card</span> <span class=\"o\">(</span><span class=\"n\">quotient_group.quotient</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">subgroup</span> <span class=\"n\">G</span><span class=\"o\">)))</span> <span class=\"bp\">=</span> <span class=\"n\">fintype.card</span> <span class=\"n\">G</span> <span class=\"o\">:=</span>\n<span class=\"n\">fintype.card_congr</span> <span class=\"o\">(</span><span class=\"n\">quotient_group.quotient_bot.to_equiv</span><span class=\"o\">)</span>\n\n<span class=\"c1\">--incorrect number of universe levels parameters for 'quotient_add_group.quotient_ker_equiv_of_right_inverse', #2 expected, #1 provided</span>\n<span class=\"kd\">@[to_additive]</span> <span class=\"kd\">def</span> <span class=\"n\">subgroup.quotient_bot_equiv</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n <span class=\"n\">quotient_group.quotient</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"bp\">≃</span> <span class=\"n\">G</span> <span class=\"o\">:=</span>\n<span class=\"n\">quotient_group.quotient_bot.to_equiv</span>\n</code></pre></div>",
        "id": 257748359,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1634324692
    },
    {
        "content": "<p>Try putting the <code>{G : Type*}</code> in a <code>variables</code> statement?</p>",
        "id": 257750669,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634325761
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/Incorrect.20number.20of.20universe.20levels.20parameters/near/257750669\">said</a>:</p>\n<blockquote>\n<p>Try putting the <code>{G : Type*}</code> in a <code>variables</code> statement?</p>\n</blockquote>\n<p>Doesn't seem to help</p>",
        "id": 257750961,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1634325897
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/quotient_add_group.quotient_ker_equiv_of_right_inverse\">docs#quotient_add_group.quotient_ker_equiv_of_right_inverse</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/quotient_group.quotient_ker_equiv_of_right_inverse\">docs#quotient_group.quotient_ker_equiv_of_right_inverse</a> for reference</p>",
        "id": 257751030,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634325929
    },
    {
        "content": "<p>I'm curious why it's even mentioning that definition</p>",
        "id": 257751216,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634326000
    },
    {
        "content": "<p>Does the additive version of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/quotient_group.quotient_bot\">docs#quotient_group.quotient_bot</a> even exist? <a href=\"https://leanprover-community.github.io/mathlib_docs/find/quotient_add_group.quotient_bot\">docs#quotient_add_group.quotient_bot</a> seems missing</p>",
        "id": 257751322,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634326052
    },
    {
        "content": "<p>I presume so, since <a href=\"https://leanprover-community.github.io/mathlib_docs/find/quotient_group.quotient_bot\">docs#quotient_group.quotient_bot</a> is marked with <code>to_additive</code></p>",
        "id": 257752353,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1634326499
    },
    {
        "content": "<p>The to-additive name is nonsense</p>",
        "id": 257774215,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634336566
    },
    {
        "content": "<p>It's a copy-paste error</p>",
        "id": 257774223,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634336571
    },
    {
        "content": "<p>The error is about universes because it checks that first, but the lemma is just not related at all</p>",
        "id": 257774270,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634336602
    },
    {
        "content": "<p>Great, thanks for the help!</p>",
        "id": 257808375,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1634367155
    }
]