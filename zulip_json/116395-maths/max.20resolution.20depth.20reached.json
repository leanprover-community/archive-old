[
    {
        "content": "<p>I am writing a <code>have</code> statement in a proof, and I get the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">maximum</span> <span class=\"kd\">class</span><span class=\"bp\">-</span><span class=\"kd\">instance</span> <span class=\"n\">resolution</span> <span class=\"n\">depth</span> <span class=\"n\">has</span> <span class=\"n\">been</span> <span class=\"n\">reached</span> <span class=\"o\">(</span><span class=\"n\">the</span> <span class=\"n\">limit</span> <span class=\"n\">can</span> <span class=\"n\">be</span> <span class=\"n\">increased</span> <span class=\"kd\">by</span> <span class=\"n\">setting</span> <span class=\"n\">option</span> <span class=\"bp\">'</span><span class=\"kd\">class</span><span class=\"bp\">.</span><span class=\"n\">instance_max_depth'</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">the</span> <span class=\"kd\">class</span><span class=\"bp\">-</span><span class=\"kd\">instance</span> <span class=\"n\">resolution</span> <span class=\"n\">trace</span> <span class=\"n\">can</span> <span class=\"n\">be</span> <span class=\"n\">visualized</span> <span class=\"kd\">by</span> <span class=\"n\">setting</span> <span class=\"n\">option</span> <span class=\"bp\">'</span><span class=\"n\">trace.class_instances'</span><span class=\"o\">)</span>\n</code></pre></div>\n\n<p>Any help is appreciated! Thank you!</p>",
        "id": 213928416,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1603204651
    },
    {
        "content": "<p>Is this on a branch of mathlib?</p>",
        "id": 213928752,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603204776
    },
    {
        "content": "<p>Can you share more code?</p>",
        "id": 213928767,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603204782
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/116395-maths/topic/max.20resolution.20depth.20reached/near/213928752\">said</a>:</p>\n<blockquote>\n<p>Is this on a branch of mathlib?</p>\n</blockquote>\n<p>Yeah, it is on dd-iff. I will just update it.</p>",
        "id": 213929008,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1603204865
    },
    {
        "content": "<p>Ok. Once you've done that, please post a link that points precisely to the line where you get this error.</p>",
        "id": 213929207,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603204935
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/e45059d0160da6e058b638902c374e85c39a21ac/src/ring_theory/dedekind_domain.lean#L250\">https://github.com/leanprover-community/mathlib/blob/e45059d0160da6e058b638902c374e85c39a21ac/src/ring_theory/dedekind_domain.lean#L250</a></p>",
        "id": 213929324,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1603204988
    },
    {
        "content": "<p>Does it help if you write down the type of the <code>have</code> statement?</p>",
        "id": 213929953,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603205257
    },
    {
        "content": "<p>Aha, the error is actually on the <code>change</code> line above it</p>",
        "id": 213930472,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603205507
    },
    {
        "content": "<p>That line is commented out, though.</p>",
        "id": 213930657,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1603205563
    },
    {
        "content": "<p>Also, I managed to make the line work, but it shows me something completely different. It should show me something of the form <code>M*P ≤ N*P</code> ,  but instead,  it shows me <code>?m_1 ∈ ↑↑p * ?m_2</code> and gives me 3 additional goals..</p>",
        "id": 213930980,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1603205695
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"250372\">Ashvni Narayanan</span> <a href=\"#narrow/stream/116395-maths/topic/max.20resolution.20depth.20reached/near/213930657\">said</a>:</p>\n<blockquote>\n<p>That line is commented out, though.</p>\n</blockquote>\n<p>Yes, and I get a different error from what you wrote in the top post.</p>",
        "id": 213932042,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603206168
    },
    {
        "content": "<p>Oh!</p>",
        "id": 213932123,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1603206199
    },
    {
        "content": "<p>This works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">is_dedekind_domain_inv.is_dedekind_domain</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">is_dedekind_domain_inv</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_dedekind_domain</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"n\">h2</span><span class=\"o\">⟩,</span>\n  <span class=\"n\">refine</span> <span class=\"o\">⟨</span><span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">_</span><span class=\"o\">⟩,</span>\n  <span class=\"o\">{</span> <span class=\"n\">unfold</span> <span class=\"n\">is_noetherian_ring</span><span class=\"o\">,</span>\n    <span class=\"n\">fconstructor</span><span class=\"o\">,</span>\n    <span class=\"n\">change</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">I.fg</span><span class=\"o\">,</span>\n    <span class=\"n\">rintros</span> <span class=\"n\">I</span><span class=\"o\">,</span>\n  <span class=\"c1\">--   fconstructor,</span>\n    <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">unfold</span> <span class=\"n\">dimension_le_one</span><span class=\"o\">,</span>\n    <span class=\"n\">rintros</span> <span class=\"n\">p</span> <span class=\"n\">nz</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hpinv</span> <span class=\"o\">:=</span> <span class=\"n\">h2</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">hpmax</span> <span class=\"o\">:=</span> <span class=\"n\">exists_le_maximal</span> <span class=\"n\">p</span> <span class=\"n\">hp.1</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">hpmax</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">hM1</span><span class=\"o\">,</span> <span class=\"n\">hM2</span><span class=\"o\">⟩,</span>\n    <span class=\"n\">specialize</span> <span class=\"n\">h2</span> <span class=\"n\">M</span><span class=\"o\">,</span>\n    <span class=\"n\">specialize</span> <span class=\"n\">hpinv</span> <span class=\"o\">((</span><span class=\"n\">coe_ne_bot</span> <span class=\"n\">A</span> <span class=\"n\">p</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">nz</span><span class=\"o\">),</span>\n    <span class=\"n\">specialize</span> <span class=\"n\">h2</span> <span class=\"o\">(</span> <span class=\"o\">(</span><span class=\"n\">coe_ne_bot</span> <span class=\"n\">A</span> <span class=\"n\">M</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">max_ideal_ne_bot</span> <span class=\"n\">A</span> <span class=\"n\">M</span> <span class=\"n\">hM1</span> <span class=\"n\">h1</span><span class=\"o\">)),</span>\n    <span class=\"n\">set</span> <span class=\"n\">I</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"o\">(</span><span class=\"n\">fraction_ring.of</span> <span class=\"n\">A</span><span class=\"o\">))</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span>\n      <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"o\">(</span><span class=\"n\">fraction_ring.of</span> <span class=\"n\">A</span><span class=\"o\">))</span> <span class=\"k\">with</span> <span class=\"n\">hI</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"o\">(</span><span class=\"n\">fraction_ring.of</span> <span class=\"n\">A</span><span class=\"o\">))</span> <span class=\"bp\">*</span> <span class=\"n\">I</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"o\">(</span><span class=\"n\">fraction_ring.of</span> <span class=\"n\">A</span><span class=\"o\">)),</span>\n    <span class=\"o\">{</span> <span class=\"n\">change</span> <span class=\"bp\">↑</span><span class=\"n\">M</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">↑</span><span class=\"n\">M</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">↑</span><span class=\"n\">p</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">h2</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">],</span> <span class=\"o\">},</span>\n    <span class=\"n\">by_cases</span> <span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"n\">M</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">rwa</span> <span class=\"n\">hp</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n    <span class=\"n\">exfalso</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"o\">(</span><span class=\"n\">fraction_ring.of</span> <span class=\"n\">A</span><span class=\"o\">)),</span>\n    <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">frac_ideal_le_ideal</span> <span class=\"n\">A</span> <span class=\"n\">M</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n      <span class=\"n\">sorry</span> <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"bp\">&lt;-</span><span class=\"n\">subtype.coe_le_coe</span> <span class=\"n\">at</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">hI</span> <span class=\"n\">at</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n    <span class=\"n\">norm_cast</span> <span class=\"n\">at</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n    <span class=\"n\">change</span> <span class=\"o\">((</span><span class=\"bp\">↑</span><span class=\"n\">M</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">*</span> <span class=\"bp\">↑</span><span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"bp\">↑</span><span class=\"n\">p</span> <span class=\"n\">at</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- have g' := submodule.mul_le_mul_left g (↑M).coe,</span>\n    <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"c1\">-- { sorry, },</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 213932371,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603206296
    },
    {
        "content": "<p>I changed the <code>let I</code> to a <code>set I ... with hI</code></p>",
        "id": 213932422,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603206316
    },
    {
        "content": "<p>Yeah, that does work. Thank you!</p>",
        "id": 213933379,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1603206704
    }
]