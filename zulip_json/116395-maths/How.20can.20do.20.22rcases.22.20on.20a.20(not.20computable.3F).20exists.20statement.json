[
    {
        "content": "<p>I am trying to show that the termwise product of two Cauchy sequences of ratioanl numbers is a Cauchy sequence.  A standard part of the proof is a lemma that a Cauchy sequence is bounded, i.e. there exists a constant <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>∈</mo><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">M\\in \\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8556em;vertical-align:-0.1667em;\"></span><span class=\"mord mathbb\">Q</span></span></span></span> such that for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>∈</mo><mi mathvariant=\"double-struck\">N</mi></mrow><annotation encoding=\"application/x-tex\">n\\in \\mathbb{N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">N</span></span></span></span> we have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><msub><mi>u</mi><mi>n</mi></msub><mi mathvariant=\"normal\">∣</mi><mo>≤</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">|u_n| \\le M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>.  I can do this part fine.  But I can't the extract the upper bound  using <code>rcases</code> or anything else I have tried.  What follows is my Minimal (non) Working example.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kd\">abbreviation</span> <span class=\"n\">seqQ</span> <span class=\"o\">:=</span>  <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">isCauchy</span> <span class=\"o\">:</span> <span class=\"n\">seqQ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">u</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ε_pos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">),</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">),</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">u</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span> <span class=\"o\">)</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">cauchyQ</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">cauchy_sequences_bounded</span> <span class=\"o\">(</span><span class=\"n\">u0</span> <span class=\"o\">:</span> <span class=\"n\">seqQ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">isCauchy</span> <span class=\"n\">u0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">|</span><span class=\"n\">u0</span> <span class=\"n\">n</span><span class=\"bp\">|</span> <span class=\"bp\">≤</span> <span class=\"n\">M</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">cauchyQ</span> <span class=\"o\">:=</span>\n<span class=\"n\">mk</span> <span class=\"o\">::</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">seqQ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">isCauchy</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n\n<span class=\"kn\">protected</span> <span class=\"kd\">def</span> <span class=\"n\">mul</span> <span class=\"o\">:</span> <span class=\"n\">cauchyQ</span> <span class=\"bp\">→</span> <span class=\"n\">cauchyQ</span> <span class=\"bp\">→</span>  <span class=\"n\">cauchyQ</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rintros</span> <span class=\"o\">⟨</span><span class=\"n\">az</span><span class=\"o\">,</span><span class=\"n\">ha</span><span class=\"o\">⟩</span> <span class=\"o\">⟨</span><span class=\"n\">bz</span><span class=\"o\">,</span><span class=\"n\">hb</span><span class=\"o\">⟩,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hMA</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">cauchy_sequences_bounded</span> <span class=\"n\">az</span> <span class=\"n\">ha</span><span class=\"o\">),</span>\n  <span class=\"c1\">--I want to exact the maximum in the next line and use.</span>\n  <span class=\"c1\">--I suspect it won't let me because the upper_bound isn't computable,</span>\n<span class=\"c1\">--but I don't really know.</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">hMA</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">upper_bound_of_az</span><span class=\"o\">,</span> <span class=\"n\">hMA</span><span class=\"o\">⟩,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">cauchyQ</span>\n</code></pre></div>\n<p>I appreciate any help.</p>",
        "id": 296028481,
        "sender_full_name": "Kent Van Vels",
        "timestamp": 1661828160
    },
    {
        "content": "<p>You should construct the sequence before extracting the max</p>",
        "id": 296029314,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1661829078
    },
    {
        "content": "<p>you can use <code>rcases</code> to extract the max only in the proof of <code>isCauchy</code></p>",
        "id": 296029320,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1661829100
    },
    {
        "content": "<p>Ok, i think i found a previous <a href=\"https://leanprover-community.github.io/archive/stream/113489-new-members/topic/cases.20and.20rcases.20won%27t.20eliminate.20hypothesis.html\">conversation</a>  that also ran into this.  I will report back.   I think I understand it.</p>",
        "id": 296029477,
        "sender_full_name": "Kent Van Vels",
        "timestamp": 1661829247
    },
    {
        "content": "<p>It is working.  I really appreciate the help.</p>",
        "id": 296029755,
        "sender_full_name": "Kent Van Vels",
        "timestamp": 1661829561
    }
]