[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">norm_num</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">nat</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">fact</span> <span class=\"mi\">7</span> <span class=\"bp\">≥</span> <span class=\"mi\">3</span> <span class=\"err\">^</span> <span class=\"mi\">7</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"c1\">--  unfold fact, norm_num, -- fails, perhaps because of succ&#39;s</span>\n  <span class=\"k\">show</span> <span class=\"mi\">7</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">6</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">5</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span><span class=\"o\">))))))</span> <span class=\"bp\">≥</span> <span class=\"mi\">3</span> <span class=\"err\">^</span> <span class=\"mi\">7</span><span class=\"o\">,</span>\n  <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  Can you get <code>norm_num</code> to know enough about <code>fact</code> to make this work? After unfolding <code>fact</code> I get a goal with a lot of <code>nat.succ</code>'s in. Or is this harder than it looks?</p>",
        "id": 147921330,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1542556641
    },
    {
        "content": "<p>I think you can rewrite <code>nat.succ</code> to <code>+1</code> and then apply <code>norm_num</code></p>",
        "id": 147921503,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1542556942
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">fact</span> <span class=\"mi\">7</span> <span class=\"bp\">≥</span> <span class=\"mi\">3</span> <span class=\"err\">^</span> <span class=\"mi\">7</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">dsimp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">fact</span><span class=\"o\">,</span> <span class=\"n\">succ_eq_add_one</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">norm_num</span>\n</pre></div>",
        "id": 147922308,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1542558685
    }
]