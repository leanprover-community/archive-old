[
    {
        "content": "<p>Bourbaki only introduces limits where the \"codomain filter\" is the neighborhood filter of some point. Mathlib goes with a much more general <code>tendsto</code> predicate where the codomain filter can be any filter on the codomain type of <code>f</code>.  Is there a reference where this theory is developed more fully; in particular I'm trying to think if a.e. pointwise convergence can be formulated in terms of <code>tendsto</code>. More generally, can <a href=\"https://ncatlab.org/nlab/show/convergence+space\">convergence spaces</a> be construed as maps from <code>point_to_filter : \\beta \\to filter \\beta</code> so that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi><mo>⟶</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">F \\longrightarrow b</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⟶</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span> iff <code>tendsto id F (point_to_filter b)</code> where <code>F : filter \\beta</code>? I would be interested in thinking about these problems if the answer is unknown, but I thought I'd first check if this has been worked out already. I'm pretty sure a.e. convergence isn't done in Mathlib, but I could be wrong.</p>\n<p>Note: It is \"well-known\" that a.e. pointwise convergence is non-topological, meaning it is not induced by a topology on the space of measurable functions (or more-or-less equivalently, the space of functions up to a.e. equivalence).</p>",
        "id": 199188636,
        "sender_full_name": "Keefer Rowan",
        "timestamp": 1590774835
    },
    {
        "content": "<p>I think <code>tendsto</code> was first developped by Johannes Hölzl et al for the Isabelle library. Johannes later ported it to lean.</p>",
        "id": 199188902,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590774946
    },
    {
        "content": "<p>As far as I know there is no \"informal\" maths text that explains it.</p>",
        "id": 199189014,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590774981
    },
    {
        "content": "<p>I'm more or less fine with the idea, so an informal reference isn't really necessary. I was more interested to see if anyone had any thoughts on the a.e. pointwise convergence issue. Convergence spaces can be used to formalize a.e. pointwise convergence as a \"sort of convergence\", but can these by \"tendsto\"-ized? I'll think about it, but I was wondering if this has already been covered by someone. I would imagine that a.e. pointwise convergence would be something that people would want to formalize. You of course don't need to do all this as you can just stick to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>n</mi></msub><mo>→</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f_n \\to f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span></span></span></span> ptwise a.e. iff <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∃</mi><mi>g</mi><mo>:</mo><msub><mi>f</mi><mi>n</mi></msub><mo>→</mo><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">\\exists g : f_n \\to g</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">∃</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span></span></span></span> ptwise and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo>=</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">g = f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span></span></span></span> a.e. But it would satisfying to have this be seen of as a form of convergence in a formal way.</p>",
        "id": 199189746,
        "sender_full_name": "Keefer Rowan",
        "timestamp": 1590775293
    },
    {
        "content": "<p>We have stuff about <code>frequently</code> and <code>eventually</code>. I think those are close to what you want.</p>",
        "id": 199190218,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590775485
    },
    {
        "content": "<p>But as you've noticed, I'm not an analyst...</p>",
        "id": 199190297,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590775515
    },
    {
        "content": "<p>Thanks for the pointer. Those definitely would be useful for formalizing a.e. convergence but still isn't exactly what I'm thinking about. So I guess the question is still open for anyone more \"analytically-inclined\".</p>",
        "id": 199191093,
        "sender_full_name": "Keefer Rowan",
        "timestamp": 1590775876
    },
    {
        "content": "<p>This paper provides a nice explanation: <a href=\"https://cs.vu.nl/~jhl890/pub/hoelzl2013typeclasses.pdf\">https://cs.vu.nl/~jhl890/pub/hoelzl2013typeclasses.pdf</a></p>",
        "id": 199192161,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1590776353
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> ?</p>",
        "id": 199192216,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590776378
    },
    {
        "content": "<p>I think from this perspective what's going on for topological spaces is that each point has a largest (in the filter order, reverse inclusion) filter which converges to it, namely its neighborhood filter. So to check continuity of a function at a point you only have to look at what happens to these neighborhood filters, and this is what the <code>tendsto</code> formulation encodes.</p>\n<p>For a general convergence space you could phrase continuity as an inequality involving the \"filters of convergent filters\" at each point, but this isn't exactly <code>tendsto</code> because you would need to apply <code>filter.map</code> twice, or something.</p>",
        "id": 199192844,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590776703
    },
    {
        "content": "<p>As far as I understand,</p>\n<ul>\n<li>you can write <code>∀ₘ x, tendsto (λ n, f n x) at_top (nhds (g x))</code> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>n</mi></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><msub><mo>→</mo><mrow><mi>a</mi><mi mathvariant=\"normal\">.</mi><mi>e</mi><mi mathvariant=\"normal\">.</mi></mrow></msub><mi>g</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f_n(x)\\to_{a.e.} g(x)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\">→</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mtight\">.</span><span class=\"mord mathdefault mtight\">e</span><span class=\"mord mtight\">.</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span>;</li>\n<li>I don't think that you can do it with one <code>tendsto</code> (though I have no proof at the moment, so I may be wrong);</li>\n<li>you can use <code>tendsto</code> for convergence in measure because you can define \"neighborhoods\" of a function <code>f</code> to be all functions <code>g</code> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi><mo stretchy=\"false\">{</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">dist</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mi>x</mi><mo separator=\"true\">,</mo><mi>g</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>&gt;</mo><mi>ε</mi><mo stretchy=\"false\">}</mo><mo>&lt;</mo><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\mu\\{x | \\operatorname{dist}(f x, g x) &gt; \\varepsilon \\} &lt; \\varepsilon</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">μ</span><span class=\"mopen\">{</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">d</span><span class=\"mord mathrm\">i</span><span class=\"mord mathrm\">s</span><span class=\"mord mathrm\">t</span></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathdefault\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">ε</span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">ε</span></span></span></span>.</li>\n</ul>",
        "id": 199192991,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590776772
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> how do you mean that the nbhd filter is the largest filter that converges to the point. Isn’t the meaning of convergence tendsto relative to the nbhd filter?</p>",
        "id": 199193227,
        "sender_full_name": "Keefer Rowan",
        "timestamp": 1590776916
    },
    {
        "content": "<p>Items one and two sound right to me, but in the third I don't think you can use the same epsilon in both places.</p>",
        "id": 199193257,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1590776934
    },
    {
        "content": "<p>Why not? (if not, you can parametrize nhds with two parameters)</p>",
        "id": 199193311,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590776971
    },
    {
        "content": "<p>But I think that these two filters are equal.</p>",
        "id": 199193360,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590776996
    },
    {
        "content": "<p>I mean: Given a topological space, you can turn it into a convergence space by saying that a filter \"converges to\" a point if it's <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\"application/x-tex\">\\le</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mrel\">≤</span></span></span></span> the neighborhood filter of that point. Then (basically by definition) the neighborhood filter of a point is the biggest filter that converges to that point.</p>\n<p>The point of this construction is that you end up with the right notion of continuous maps: the continuous maps between the convergence spaces built from topological spaces are the continuous maps in the ordinary sense between the topological spaces.</p>",
        "id": 199193567,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590777092
    },
    {
        "content": "<p>I think the answer to your question \"More generally, can convergence spaces be construed...\" is no: you only get what the nlab calls <a href=\"https://ncatlab.org/nlab/show/pretopological+space\">pretopological spaces</a> that way.</p>",
        "id": 199193727,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590777158
    },
    {
        "content": "<p>Note that convergence in measure can be made into a uniform space, so you can always use that</p>",
        "id": 199193760,
        "sender_full_name": "Keefer Rowan",
        "timestamp": 1590777175
    },
    {
        "content": "<p>In a convergence space, the \"filter of convergent filters\" might not be principal.</p>",
        "id": 199193764,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590777177
    },
    {
        "content": "<p>Oh, you are right. I take it back. I got the definition confused.</p>",
        "id": 199193827,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1590777210
    },
    {
        "content": "<p>and in your example I assume it's not--I'm guessing you have a generator for each measure 0 \"bad\" set, and you can only intersect countably many of those filters or the \"bad\" set will no longer be measure 0.</p>",
        "id": 199193866,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590777236
    },
    {
        "content": "<p>I’ll have to look at it more later, but it seems that a pretopological space is exactly the most general structure under which convergence is given by tendsto and a certain generalized “nbhd filter” of each point. And the claim is that ae convergence is not pretopological, hence cant be implemented with tendsto.</p>",
        "id": 199194282,
        "sender_full_name": "Keefer Rowan",
        "timestamp": 1590777469
    },
    {
        "content": "<p>I'm pretty sure I got the direction of the order on filters wrong at least once above.</p>",
        "id": 199194284,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590777471
    }
]