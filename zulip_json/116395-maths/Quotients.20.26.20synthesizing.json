[
    {
        "content": "<p>Hello, I'm trying to do some quotients stuff, namely to build the completion of a metric space.<br>\nSo here's a minimal example:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"n\">class</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">d_pos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">presep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">=</span><span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span>  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sym</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">triangle</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">≤</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">test</span>\n<span class=\"kn\">open</span> <span class=\"n\">metric_space</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">q</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy_seqs</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">//</span> <span class=\"n\">cauchy</span> <span class=\"n\">f</span> <span class=\"o\">}</span>\n\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"n\">cauchy_seqs</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">iseqv</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">def</span> <span class=\"n\">completion_of_metric_space</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span>\n<span class=\"c1\">-- instance completion.metric_space: espace_metrique cauchy.setoid</span>\n<span class=\"kn\">end</span> <span class=\"n\">test</span>\n</code></pre></div>\n\n\n<p>So here's my first attempt, <code>cauchy.setoid</code> fails with:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">don&#39;t</span> <span class=\"n\">know</span> <span class=\"n\">how</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">placeholder</span>\n<span class=\"kn\">context</span><span class=\"o\">:</span>\n<span class=\"err\">⊢</span> <span class=\"kt\">Type</span> <span class=\"err\">?</span>\n</code></pre></div>\n\n\n<p>So what I have done is to add types everywhere and had this new minimal example, but now I have this \"too many arguments\" issues:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">set</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n\n<span class=\"c1\">-- Une structure d&#39;espace métrique sur un type X --</span>\n<span class=\"n\">class</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">d_pos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">presep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">=</span><span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span>  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sym</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">triangle</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">≤</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">test</span>\n<span class=\"kn\">open</span> <span class=\"n\">metric_space</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">q</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">test</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">test2</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy_seqs</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">//</span> <span class=\"n\">test</span><span class=\"bp\">.</span><span class=\"n\">cauchy</span> <span class=\"n\">f</span> <span class=\"o\">}</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">cauchy_seqs</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">iseqv</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">-- en termes d&#39;univers, quotient retourne un type d&#39;univers u + 1 en partant de T : Type u.</span>\n<span class=\"n\">def</span> <span class=\"n\">completion_of_metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]:</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">completion_of_metric_space</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"o\">}</span>\n<span class=\"kn\">end</span> <span class=\"n\">test2</span>\n</code></pre></div>\n\n\n<p>Precisely:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">function</span> <span class=\"n\">expected</span> <span class=\"n\">at</span>\n  <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">completion_of_metric_space</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n<span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"kt\">Type</span> <span class=\"err\">?</span>\n<span class=\"n\">Additional</span> <span class=\"n\">information</span><span class=\"o\">:</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">raito</span><span class=\"bp\">/</span><span class=\"n\">dev</span><span class=\"bp\">/</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">projet</span><span class=\"bp\">-</span><span class=\"n\">maths</span><span class=\"bp\">-</span><span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">espaces</span><span class=\"bp\">-</span><span class=\"n\">metriques</span><span class=\"bp\">/</span><span class=\"n\">test</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">34</span><span class=\"o\">:</span><span class=\"mi\">62</span><span class=\"o\">:</span> <span class=\"kn\">context</span><span class=\"o\">:</span> <span class=\"n\">switched</span> <span class=\"n\">to</span> <span class=\"n\">simple</span> <span class=\"n\">application</span> <span class=\"n\">elaboration</span> <span class=\"n\">procedure</span> <span class=\"n\">because</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">use</span> <span class=\"n\">expected</span> <span class=\"n\">type</span> <span class=\"n\">to</span> <span class=\"n\">elaborate</span> <span class=\"n\">it</span><span class=\"o\">,</span> <span class=\"n\">error</span> <span class=\"n\">message</span>\n  <span class=\"n\">too</span> <span class=\"n\">many</span> <span class=\"n\">arguments</span>\n</code></pre></div>\n\n\n<p>I have found this topic: <a href=\"https://leanprover-community.github.io/archive/stream/113488-general/topic/has_coe_to_fun.20with.20implicit.20arguments.html\" title=\"https://leanprover-community.github.io/archive/stream/113488-general/topic/has_coe_to_fun.20with.20implicit.20arguments.html\">https://leanprover-community.github.io/archive/stream/113488-general/topic/has_coe_to_fun.20with.20implicit.20arguments.html</a> which seems to have this error, but I don't understand how to port the idea to my problem.</p>\n<p>Also, I guess it might have to do with some universes stuff as I'm trying to cheat and let Lean compute the correct universes, but it might be possible that I need to be explicit and specify that a completion lives in Type (u + 1) ?</p>",
        "id": 197057758,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589120303
    },
    {
        "content": "<p>Not at lean right now so treat with a pinch of salt. Lean can't figure out X in the first example. Make it explicit and call it <code>cauchy_seqs X</code></p>",
        "id": 197058198,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589120695
    },
    {
        "content": "<p>Oh you got that far</p>",
        "id": 197058271,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589120802
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Quotients.20.26.20synthesizing/near/197058271\" title=\"#narrow/stream/116395-maths/topic/Quotients.20.26.20synthesizing/near/197058271\">said</a>:</p>\n<blockquote>\n<p>Oh you got that far</p>\n</blockquote>\n<p>Indeed, but that means that I have to do it the 2nd way at least :)</p>",
        "id": 197058280,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589120821
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"n\">class</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">d_pos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">presep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">=</span><span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span>  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sym</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">triangle</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">≤</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">test</span>\n<span class=\"kn\">open</span> <span class=\"n\">metric_space</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">is_cauchy</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">q</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy_seqs</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">//</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">f</span> <span class=\"o\">}</span>\n\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">cauchy_seqs</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">iseqv</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">def</span> <span class=\"n\">completion</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]:</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">completion</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">d_pos</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- etc</span>\n<span class=\"o\">}</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">test</span>\n</code></pre></div>",
        "id": 197058716,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589121195
    },
    {
        "content": "<p>PS <code>d_pos</code> follows from the other axioms :P (use the triangle equality) and <code>presep</code> should just be <code>forall x, d x x = 0</code></p>",
        "id": 197059056,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589121496
    },
    {
        "content": "<p>Wow, I don't see very well what's the difference, <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span></p>",
        "id": 197059061,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589121499
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I agree, you've already told me this :D! But I'm not allowed to change those :D)</p>",
        "id": 197059100,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589121528
    },
    {
        "content": "<p>I guess you just made some syntax error in the second example -- no <code>:=</code>?</p>",
        "id": 197059171,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589121583
    },
    {
        "content": "<p>… indeed.</p>",
        "id": 197059243,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589121632
    },
    {
        "content": "<p>The error is a bit cryptic though</p>",
        "id": 197059261,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589121681
    },
    {
        "content": "<p>There used to be a comment on the official Lean github repo saying something like \"we will close issues complaining that error messages are confusing\"</p>",
        "id": 197059402,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589121871
    },
    {
        "content": "<p>While I'm on the subject of quotients, is there a way to transfer a map <code>f : (a_1 a_2 … a_n: cauchy_seqs X) → Y</code> into a <code>f' : (a_1 … a_n: completion X) → Y</code>?</p>",
        "id": 197060170,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589123063
    },
    {
        "content": "<p><code>quotient.lift</code>?</p>",
        "id": 197060275,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589123256
    },
    {
        "content": "<p>it sounded like <code>quotient.lift</code> takes a <code>f : α → β</code>,</p>",
        "id": 197060356,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589123400
    },
    {
        "content": "<p>Oh I see.</p>",
        "id": 197060423,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589123475
    },
    {
        "content": "<p>Well you can't have <code>…</code>, but I think there is a version for 2 arguments at least and you can look at how that works.</p>",
        "id": 197060432,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589123497
    },
    {
        "content": "<p>I tried lift_2, and it's complaining about synthesizing:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">type</span> <span class=\"n\">class</span> <span class=\"kn\">instance</span> <span class=\"n\">for</span>\n<span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">,</span>\n<span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">completion</span> <span class=\"n\">T</span>\n<span class=\"err\">⊢</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">)</span>\n</code></pre></div>\n\n\n<p>For full example:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"n\">class</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">d_pos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">presep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">=</span><span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span>  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sym</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">triangle</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">≤</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">test</span>\n<span class=\"kn\">open</span> <span class=\"n\">metric_space</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">is_cauchy</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">q</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy_seqs</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">//</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">f</span> <span class=\"o\">}</span>\n\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">cauchy_seqs</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">iseqv</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"o\">}</span>\n<span class=\"c1\">-- Définit la distance entre 2 suites de Cauchy par lim d(x_n, y_n).</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span>\n  <span class=\"o\">:=</span> <span class=\"n\">sorry</span> <span class=\"c1\">-- some cauchy limit stuff.</span>\n\n<span class=\"n\">def</span> <span class=\"n\">completion</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">completion</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift₂</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]:</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">completion</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">d_pos</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- etc</span>\n<span class=\"o\">}</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">test</span>\n</code></pre></div>\n\n\n<p><code>completion.dist</code> has errors</p>",
        "id": 197060562,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589123673
    },
    {
        "content": "<p>Okay, because your <code>completion</code> is not an instance. To be honest, this whole type class design with quotient is pretty dubious.<br>\nIs there a <code>lift\\2'</code> that uses a <code>{}</code> argument for the <code>setoid</code>?</p>",
        "id": 197060653,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589123774
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/116395-maths/topic/Quotients.20.26.20synthesizing/near/197060653\" title=\"#narrow/stream/116395-maths/topic/Quotients.20.26.20synthesizing/near/197060653\">said</a>:</p>\n<blockquote>\n<p>Okay, because your <code>completion</code> is not an instance. To be honest, this whole type class design with quotient is pretty dubious.<br>\nIs there a <code>lift\\2'</code> that uses a <code>{}</code> argument for the <code>setoid</code>?</p>\n</blockquote>\n<p>I can turn it into an instance, but I heard/read here that most of the time quotients need not to be instances, I don't really understand why (but I guess there must be a good reason)</p>",
        "id": 197060698,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589123871
    },
    {
        "content": "<p>As far as I see it, in <code>quot.lean</code>, there's no <code>{…}</code></p>",
        "id": 197060794,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589123924
    },
    {
        "content": "<p>for setoids.</p>",
        "id": 197060799,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589123926
    },
    {
        "content": "<p>There is nothing specific about quotient, the question is: do you want multiple instances on the same type?</p>",
        "id": 197060805,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589123928
    },
    {
        "content": "<p>If yes then there will be trouble.</p>",
        "id": 197060823,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589123938
    },
    {
        "content": "<p>The link with quotients is that this issue comes up for instance with setoid on Z (you want several quotients of Z)</p>",
        "id": 197060862,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589123965
    },
    {
        "content": "<p>Since you defined your own <code>cauchy_seqs</code> type and the <code>setoid</code> only depends on other stuff available through instances, it would be fine (and easiest) to make it an instance in this case.</p>",
        "id": 197060948,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589124018
    },
    {
        "content": "<p>I don't think I'm going to have an instance of something else than a metric space for the Cauchy sequences quotient by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mi>n</mi></msub><mi>d</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\lim_n d(x_n, y_n)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mop\">lim</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> AFAIK.</p>",
        "id": 197060952,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589124021
    },
    {
        "content": "<p>Alright, will do :)</p>",
        "id": 197060956,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589124036
    },
    {
        "content": "<p>I think the last time I asked, Mario told me that arbitrary lifting is independent of Lean</p>",
        "id": 197060977,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589124085
    },
    {
        "content": "<p>at least the computable one</p>",
        "id": 197060981,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589124098
    },
    {
        "content": "<p>but finite lifting should be doable by induction</p>",
        "id": 197060986,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589124107
    },
    {
        "content": "<p>Also, when I have <code>x ~ y</code>, how can I get the underlying property?<br>\nLike I have <code>x ~ y &lt;=&gt; dist x y = 0</code>, how can I derive <code>dist x y = 0</code> in this situation?</p>",
        "id": 197065102,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589128686
    },
    {
        "content": "<p>Is it <code>rfl</code>?</p>",
        "id": 197065169,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589128737
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\" title=\"https://github.com/leanprover-community/mathlib/wiki/Minimum-Working-Example-&#40;MWE&#41;\">#mwe</a></p>",
        "id": 197065444,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589129129
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> :P<br>\nI'll provide a MWE</p>",
        "id": 197065541,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589129279
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"n\">class</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">d_pos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">presep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">=</span><span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span>  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sym</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">triangle</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">≤</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">test</span>\n<span class=\"kn\">open</span> <span class=\"n\">metric_space</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">is_cauchy</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">q</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy_seqs</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">//</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">f</span> <span class=\"o\">}</span>\n\n\n<span class=\"kn\">instance</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">cauchy_seqs</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">iseqv</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"o\">}</span>\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span>\n  <span class=\"o\">:=</span> <span class=\"n\">sorry</span> <span class=\"c1\">-- some cauchy limit stuff.</span>\n\n<span class=\"n\">def</span> <span class=\"n\">completion</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist_soundness</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]:</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">x₁</span> <span class=\"n\">x₂</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">y₁</span> <span class=\"n\">y₂</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x₁</span> <span class=\"bp\">≈</span> <span class=\"n\">y₁</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">x₂</span> <span class=\"bp\">≈</span> <span class=\"n\">y₂</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x₁</span> <span class=\"n\">x₂</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y₁</span> <span class=\"n\">y₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"n\">Hxz</span> <span class=\"n\">Hyt</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- what to do with Hxz, Hyt? I want cauchy.dist x z = 0 to rewrite them and conclude by refl.</span>\n<span class=\"kn\">end</span>\n<span class=\"n\">def</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">completion</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift₂</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist_soundness</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]:</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">completion</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n  <span class=\"n\">d_pos</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- etc</span>\n<span class=\"o\">}</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">test</span>\n</code></pre></div>",
        "id": 197065896,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589129838
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Here's a MWE, I'm not sure how to use <code>rfl</code> to be able to rewrite the goal using Hxz, Hyz?</p>",
        "id": 197065906,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589129860
    },
    {
        "content": "<p>Wait -- you cannot do anything at all with <code>x₁ ≈ y₁</code> because this means <code>r x₁ y₁</code> and your definition of <code>r</code> is <code>sorry</code>.</p>",
        "id": 197066584,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589130937
    },
    {
        "content": "<p>ah, let me edit it</p>",
        "id": 197066588,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589130953
    },
    {
        "content": "<p>I think that <code>x₁ ≈ y₁</code> is definitionally equal to <code>r x₁ y₁</code> and hence to whatever you define it to be.</p>",
        "id": 197066640,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589131010
    },
    {
        "content": "<p>You should just be able to use the <code>change</code> tactic to change something to anything definitionally equivalent to it.</p>",
        "id": 197066692,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589131073
    },
    {
        "content": "<p>Alright, will give it a try</p>",
        "id": 197067005,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589131341
    },
    {
        "content": "<p>Hmm, not sure how to use it here:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"n\">class</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">d_pos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">presep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">=</span><span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span>  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sym</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">triangle</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">≤</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">metric_space</span><span class=\"o\">:</span> <span class=\"n\">metric_space</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n <span class=\"o\">{</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"n\">d_pos</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"n\">presep</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"n\">sep</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"n\">sym</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"n\">triangle</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span> <span class=\"o\">}</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n<span class=\"n\">noncomputable</span> <span class=\"n\">theory</span>\n<span class=\"kn\">section</span> <span class=\"n\">test</span>\n<span class=\"kn\">open</span> <span class=\"n\">metric_space</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">is_cauchy</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">q</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">converge</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"n\">l</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">n</span><span class=\"o\">))</span>  <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">complete</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">converge</span> <span class=\"n\">x</span> <span class=\"n\">l</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">R_is_complete</span><span class=\"o\">:</span> <span class=\"n\">complete</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy_seqs</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">//</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">f</span> <span class=\"o\">}</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">diff</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>  <span class=\"o\">:=</span>\n <span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">cauchy_of_diff</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span>  <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">y</span><span class=\"o\">):</span>\n  <span class=\"n\">is_cauchy</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">diff</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">limit</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span><span class=\"o\">:</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">x</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">some</span> <span class=\"o\">(</span><span class=\"n\">R_is_complete</span> <span class=\"n\">x</span> <span class=\"n\">H</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span>\n  <span class=\"o\">:=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">limit</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">diff</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">cauchy_of_diff</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">property</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">property</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">cauchy_seqs</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">iseqv</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"o\">}</span>\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span>\n\n<span class=\"n\">def</span> <span class=\"n\">completion</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist_soundness</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]:</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">x₁</span> <span class=\"n\">x₂</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">y₁</span> <span class=\"n\">y₂</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x₁</span> <span class=\"bp\">≈</span> <span class=\"n\">y₁</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">x₂</span> <span class=\"bp\">≈</span> <span class=\"n\">y₂</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x₁</span> <span class=\"n\">x₂</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y₁</span> <span class=\"n\">y₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"n\">Hxz</span> <span class=\"n\">Hyt</span><span class=\"o\">,</span>\n  <span class=\"n\">change</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">≈</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">Hxz</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- what to do with Hxz, Hyt?</span>\n<span class=\"kn\">end</span>\n<span class=\"n\">def</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">completion</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift₂</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist_soundness</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]:</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">completion</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n  <span class=\"n\">d_pos</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- etc</span>\n<span class=\"o\">}</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">test</span>\n</code></pre></div>",
        "id": 197067394,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589131710
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"262143\">@Ryan Lahfa</span> nothing can help you if you keep sorried data and hope Lean will see it's defeq to what you wish</p>",
        "id": 197068038,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589132334
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/116395-maths/topic/Quotients.20.26.20synthesizing/near/197068038\" title=\"#narrow/stream/116395-maths/topic/Quotients.20.26.20synthesizing/near/197068038\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"262143\">Ryan Lahfa</span> nothing can help you if you keep sorried data and hope Lean will see it's defeq to what you wish</p>\n</blockquote>\n<p>I have it fully, but it's quite long :/</p>",
        "id": 197068077,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589132361
    },
    {
        "content": "<p>here the relation in <code>cauchy.setoid</code> is sorried</p>",
        "id": 197068078,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1589132361
    },
    {
        "content": "<p>Oops, you're right</p>",
        "id": 197068089,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589132370
    },
    {
        "content": "<p>It works \\o/ thanks a lot <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> !</p>",
        "id": 197068184,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589132447
    },
    {
        "content": "<p>But… I have still a little issue with <code>change</code>, it appears like my second change has no effect and no errors:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"n\">class</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">d_pos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">presep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">=</span><span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span>  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sym</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">triangle</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">≤</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">metric_space</span><span class=\"o\">:</span> <span class=\"n\">metric_space</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n <span class=\"o\">{</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"n\">d_pos</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"n\">presep</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"n\">sep</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"n\">sym</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"n\">triangle</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span> <span class=\"o\">}</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n<span class=\"n\">noncomputable</span> <span class=\"n\">theory</span>\n<span class=\"kn\">section</span> <span class=\"n\">test</span>\n<span class=\"kn\">open</span> <span class=\"n\">metric_space</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">is_cauchy</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">q</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">converge</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"n\">l</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">n</span><span class=\"o\">))</span>  <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">complete</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">converge</span> <span class=\"n\">x</span> <span class=\"n\">l</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">R_is_complete</span><span class=\"o\">:</span> <span class=\"n\">complete</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy_seqs</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">//</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">f</span> <span class=\"o\">}</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">diff</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>  <span class=\"o\">:=</span>\n <span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">cauchy_of_diff</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span>  <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">y</span><span class=\"o\">):</span>\n  <span class=\"n\">is_cauchy</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">diff</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">limit</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span><span class=\"o\">:</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">x</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">some</span> <span class=\"o\">(</span><span class=\"n\">R_is_complete</span> <span class=\"n\">x</span> <span class=\"n\">H</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span>\n  <span class=\"o\">:=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">limit</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">diff</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">cauchy_of_diff</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">property</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">property</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">cong</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"kn\">instance</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">cauchy_seqs</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">cong</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n  <span class=\"n\">iseqv</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"o\">}</span>\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span>\n\n<span class=\"n\">def</span> <span class=\"n\">completion</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist_soundness</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]:</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">x₁</span> <span class=\"n\">x₂</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">y₁</span> <span class=\"n\">y₂</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x₁</span> <span class=\"bp\">≈</span> <span class=\"n\">y₁</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">x₂</span> <span class=\"bp\">≈</span> <span class=\"n\">y₂</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x₁</span> <span class=\"n\">x₂</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y₁</span> <span class=\"n\">y₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"n\">Hxz</span> <span class=\"n\">Hyt</span><span class=\"o\">,</span>\n  <span class=\"n\">change</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">≈</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">Hxz</span><span class=\"o\">,</span>\n  <span class=\"n\">change</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">≈</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">Hyt</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">le_antisymm</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">≤</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">t</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">sorry</span>\n    <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">t</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">Hxz</span>\n    <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">sorry</span> <span class=\"c1\">-- symmetry</span>\n    <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"bp\">≤</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">sorry</span>\n    <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">sorry</span>\n    <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n<span class=\"n\">def</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">completion</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift₂</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist_soundness</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]:</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">completion</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n  <span class=\"n\">d_pos</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- etc</span>\n<span class=\"o\">}</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">test</span>\n</code></pre></div>",
        "id": 197068595,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589133050
    },
    {
        "content": "<p><code>Hyt</code> stays the same</p>",
        "id": 197068600,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589133059
    },
    {
        "content": "<p>I triple-checked and I don't think I'm doing something stupid</p>",
        "id": 197068605,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589133067
    },
    {
        "content": "<p>I don't know specifically why it doesn't work, but just use <code>change cauchy.dist T y t = 0 at Hyt</code> since you are <code>change</code>ing the whole type.</p>",
        "id": 197069639,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589134562
    },
    {
        "content": "<p>Alright!</p>",
        "id": 197069823,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589134736
    },
    {
        "content": "<p>It works fine, this way <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> thanks!</p>",
        "id": 197069851,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589134761
    },
    {
        "content": "<p>I actually only learned about <code>change ... with</code> a couple weeks ago, I think.</p>",
        "id": 197069958,
        "sender_full_name": "Reid Barton",
        "timestamp": 1589134811
    },
    {
        "content": "<p>related: <code>change' ... with</code></p>",
        "id": 197070363,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589135172
    },
    {
        "content": "<p>And here I come back with a complex issue because I cannot reproduce it as a MWE:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"n\">class</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">d_pos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">presep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">=</span><span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span>  <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sym</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">triangle</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">≤</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n<span class=\"n\">class</span> <span class=\"n\">premetric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">d_pos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">presep</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">=</span><span class=\"n\">y</span> <span class=\"bp\">→</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sym</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">triangle</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">≤</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">metric_space</span><span class=\"o\">:</span> <span class=\"n\">metric_space</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n <span class=\"o\">{</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"n\">d_pos</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"n\">presep</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"n\">sep</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"n\">sym</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"n\">triangle</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span> <span class=\"o\">}</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n<span class=\"n\">noncomputable</span> <span class=\"n\">theory</span>\n<span class=\"kn\">section</span> <span class=\"n\">test</span>\n<span class=\"kn\">open</span> <span class=\"n\">metric_space</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">is_cauchy</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">q</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">converge</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"n\">l</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">n</span><span class=\"o\">))</span>  <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">complete</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">converge</span> <span class=\"n\">x</span> <span class=\"n\">l</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">R_is_complete</span><span class=\"o\">:</span> <span class=\"n\">complete</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy_seqs</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">//</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">f</span> <span class=\"o\">}</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">diff</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span>  <span class=\"o\">:=</span>\n <span class=\"bp\">λ</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">cauchy_of_diff</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span>  <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">y</span><span class=\"o\">):</span>\n  <span class=\"n\">is_cauchy</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">diff</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">limit</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span><span class=\"o\">:</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">x</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">some</span> <span class=\"o\">(</span><span class=\"n\">R_is_complete</span> <span class=\"n\">x</span> <span class=\"n\">H</span><span class=\"o\">)</span>\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span>\n  <span class=\"o\">:=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">limit</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">diff</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">cauchy_of_diff</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">property</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">property</span><span class=\"o\">)</span>\n\n\n<span class=\"kn\">instance</span> <span class=\"n\">pre_ecart</span><span class=\"bp\">.</span><span class=\"n\">premetrique</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]:</span> <span class=\"n\">premetric_space</span> <span class=\"o\">(</span><span class=\"n\">cauchy_seqs</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n  <span class=\"n\">d_pos</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">presep</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">sym</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">triangle</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span> <span class=\"o\">}</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">cong</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"kn\">instance</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"o\">(</span><span class=\"n\">cauchy_seqs</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">r</span> <span class=\"o\">:=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">cong</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n  <span class=\"n\">iseqv</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"o\">}</span>\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">]</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span>\n\n<span class=\"n\">def</span> <span class=\"n\">completion</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"n\">quotient</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">setoid</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist_soundness</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]:</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">x₁</span> <span class=\"n\">x₂</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">y₁</span> <span class=\"n\">y₂</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x₁</span> <span class=\"bp\">≈</span> <span class=\"n\">y₁</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">x₂</span> <span class=\"bp\">≈</span> <span class=\"n\">y₂</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x₁</span> <span class=\"n\">x₂</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y₁</span> <span class=\"n\">y₂</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"n\">Hxz</span> <span class=\"n\">Hyt</span><span class=\"o\">,</span>\n  <span class=\"n\">change</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">Hxz</span><span class=\"o\">,</span>\n  <span class=\"n\">change</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"n\">at</span> <span class=\"n\">Hyt</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">le_antisymm</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">≤</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">premetric_space</span><span class=\"bp\">.</span><span class=\"n\">triangle</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"n\">y</span>\n    <span class=\"bp\">...</span> <span class=\"bp\">≤</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">t</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">add_le_add_left</span> <span class=\"o\">(</span><span class=\"n\">premetric_space</span><span class=\"bp\">.</span><span class=\"n\">triangle</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">_</span> <span class=\"c1\">--</span>\n    <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Hxz</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">,</span> <span class=\"n\">premetric_space</span><span class=\"bp\">.</span><span class=\"n\">sym</span> <span class=\"n\">t</span> <span class=\"n\">y</span><span class=\"o\">]</span> <span class=\"c1\">-- the last rewrite don&#39;t work</span>\n    <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">Hyt</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"bp\">≤</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">premetric_space</span><span class=\"bp\">.</span><span class=\"n\">triangle</span> <span class=\"n\">z</span> <span class=\"n\">x</span> <span class=\"n\">t</span>\n    <span class=\"bp\">...</span> <span class=\"bp\">≤</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">add_le_add_left</span> <span class=\"o\">(</span><span class=\"n\">premetric_space</span><span class=\"bp\">.</span><span class=\"n\">triangle</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"bp\">_</span>\n    <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Hyt</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">,</span> <span class=\"n\">premetric_space</span><span class=\"bp\">.</span><span class=\"n\">sym</span> <span class=\"n\">z</span> <span class=\"n\">x</span><span class=\"o\">]</span> <span class=\"c1\">-- the last rewrite don&#39;t work</span>\n    <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">Hxz</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"n\">def</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">completion</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift₂</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist_soundness</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]:</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">completion</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n  <span class=\"n\">d_pos</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- etc</span>\n<span class=\"o\">}</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">test</span>\n</code></pre></div>\n\n\n<p>Here's the expected MWE, it type check and work, but at the place where I've put comments, in my big code, it does not work, it complains about:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">rewrite</span> <span class=\"n\">tactic</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">did</span> <span class=\"n\">not</span> <span class=\"n\">find</span> <span class=\"kn\">instance</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">pattern</span> <span class=\"k\">in</span> <span class=\"n\">the</span> <span class=\"n\">target</span> <span class=\"n\">expression</span>\n  <span class=\"n\">premetric_space</span><span class=\"bp\">.</span><span class=\"n\">d</span> <span class=\"n\">t</span> <span class=\"n\">y</span>\n<span class=\"n\">state</span><span class=\"o\">:</span>\n<span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_4</span> <span class=\"o\">:</span> <span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">,</span>\n<span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">,</span>\n<span class=\"n\">Hxz</span> <span class=\"o\">:</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n<span class=\"n\">Hyt</span> <span class=\"o\">:</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"err\">⊢</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">t</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"bp\">+</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y</span> <span class=\"n\">t</span>\n<span class=\"n\">state</span><span class=\"o\">:</span>\n<span class=\"mi\">2</span> <span class=\"n\">goals</span>\n<span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_4</span> <span class=\"o\">:</span> <span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">,</span>\n<span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">,</span>\n<span class=\"n\">Hxz</span> <span class=\"o\">:</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n<span class=\"n\">Hyt</span> <span class=\"o\">:</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"err\">⊢</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">≤</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span>\n\n<span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_4</span> <span class=\"o\">:</span> <span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">,</span>\n<span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">,</span>\n<span class=\"n\">Hxz</span> <span class=\"o\">:</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n<span class=\"n\">Hyt</span> <span class=\"o\">:</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y</span> <span class=\"n\">t</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n<span class=\"err\">⊢</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">z</span> <span class=\"n\">t</span> <span class=\"bp\">≤</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n</code></pre></div>\n\n\n<p>I don't know if there's way to tell him: please use my instance on premetric spaces, which has the good definition of <code>d</code> (?)</p>",
        "id": 197081205,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589147908
    },
    {
        "content": "<p>0/10 this is real not complex</p>",
        "id": 197081236,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589147982
    },
    {
        "content": "<p>aha, this is an API issue</p>",
        "id": 197081431,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589148258
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110064\">Kenny Lau</span> <a href=\"#narrow/stream/116395-maths/topic/Quotients.20.26.20synthesizing/near/197081431\" title=\"#narrow/stream/116395-maths/topic/Quotients.20.26.20synthesizing/near/197081431\">said</a>:</p>\n<blockquote>\n<p>aha, this is an API issue</p>\n</blockquote>\n<p>What do you mean?</p>",
        "id": 197081508,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589148404
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110064\">Kenny Lau</span> <a href=\"#narrow/stream/116395-maths/topic/Quotients.20.26.20synthesizing/near/197081236\" title=\"#narrow/stream/116395-maths/topic/Quotients.20.26.20synthesizing/near/197081236\">said</a>:</p>\n<blockquote>\n<p>0/10 this is real not complex</p>\n</blockquote>\n<p>:-D</p>",
        "id": 197081509,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589148411
    },
    {
        "content": "<p>MWE:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"n\">class</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"n\">class</span> <span class=\"n\">premetric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">sym</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">d</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">d</span> <span class=\"n\">y</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n<span class=\"n\">noncomputable</span> <span class=\"n\">theory</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">test</span>\n<span class=\"kn\">open</span> <span class=\"n\">metric_space</span>\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span>\n\n<span class=\"n\">def</span> <span class=\"n\">is_cauchy</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">ε</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">q</span> <span class=\"bp\">≥</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">p</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">q</span><span class=\"o\">))</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy_seqs</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">//</span> <span class=\"n\">is_cauchy</span> <span class=\"n\">f</span> <span class=\"o\">}</span>\n\n<span class=\"n\">def</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"kn\">instance</span> <span class=\"n\">pre_ecart</span><span class=\"bp\">.</span><span class=\"n\">premetrique</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]:</span> <span class=\"n\">premetric_space</span> <span class=\"o\">(</span><span class=\"n\">cauchy_seqs</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n  <span class=\"n\">sym</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">cauchy_seqs</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span> <span class=\"n\">y</span> <span class=\"n\">x</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">premetric_space</span><span class=\"bp\">.</span><span class=\"n\">sym</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"c1\">-- fails</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">test</span>\n</code></pre></div>",
        "id": 197081561,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589148501
    },
    {
        "content": "<p>so there are two solutions</p>",
        "id": 197081567,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589148530
    },
    {
        "content": "<p>I listen carefully</p>",
        "id": 197081578,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589148575
    },
    {
        "content": "<ol>\n<li>use <code>premetric_space.d x y</code> instead of <code>cauchy.dist T x y</code></li>\n</ol>",
        "id": 197081582,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589148588
    },
    {
        "content": "<ol start=\"2\">\n<li>prove <code>cauchy.dist T x y = cauchy.dist T y x</code> immediately after declaring the instance</li>\n</ol>",
        "id": 197081631,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589148608
    },
    {
        "content": "<p>(the proof is just <code>premetric_space.sym</code> this time)</p>",
        "id": 197081634,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589148615
    },
    {
        "content": "<p>can I even do that because premetric_space depends on some  metricspace?</p>",
        "id": 197081637,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589148619
    },
    {
        "content": "<p>Lean will infer it</p>",
        "id": 197081642,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589148637
    },
    {
        "content": "<p>Okay, will try 1, then will fallback to 2, <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> thanks a lot.<br>\nA more abstract question, if we take back my MWE:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"o\">(</span><span class=\"n\">T</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">T</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">:</span> <span class=\"n\">completion</span> <span class=\"n\">T</span><span class=\"o\">):</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span>\n  <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">lift₂</span> <span class=\"o\">(</span><span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist_soundness</span> <span class=\"n\">T</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n</code></pre></div>\n\n\n<p>Precisely this, when I have some assumption: <code>completion.dist T x y = 0</code>, how can I turn it into something more usable?<br>\nWhat I've done is turn back x y into <code>[[X], [[Y]]</code> (using exists_rep, sound) and then, can I somehow say that I have <code>cauchy.dist T X Y = 0</code> ?</p>",
        "id": 197081726,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589148740
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> is 1 or 2 better?</p>",
        "id": 197081728,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589148752
    },
    {
        "content": "<p>1 worked fine</p>",
        "id": 197081807,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589148889
    },
    {
        "content": "<p>doesn't mean it's better</p>",
        "id": 197081820,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589148915
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">instance</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">X</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">metric_space</span> <span class=\"n\">X</span><span class=\"o\">]:</span> <span class=\"n\">metric_space</span> <span class=\"o\">(</span><span class=\"n\">completion</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span>\n  <span class=\"n\">d</span> <span class=\"o\">:=</span> <span class=\"n\">completion</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n  <span class=\"n\">d_pos</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">induction_on₂</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"err\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span><span class=\"o\">,</span> <span class=\"k\">show</span> <span class=\"n\">cauchy</span><span class=\"bp\">.</span><span class=\"n\">dist</span> <span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- etc</span>\n<span class=\"o\">}</span>\n</code></pre></div>",
        "id": 197081821,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589148917
    },
    {
        "content": "<p>use <code>induction_on</code> instead of <code>exists_rep</code></p>",
        "id": 197081824,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589148926
    },
    {
        "content": "<p>Thanks a lot</p>",
        "id": 197081828,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589148931
    },
    {
        "content": "<p>Doesn't mathlib use <code>dist</code> for this?</p>",
        "id": 197081897,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589149012
    },
    {
        "content": "<p>There is a definition <code>dist</code> which just unwraps <code>metric_space.dist</code>, and rather than <code>cauchy.dist</code> or <code>premetric_space.d</code> you should be using <code>dist</code></p>",
        "id": 197081910,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589149053
    },
    {
        "content": "<p>aha, the third solution</p>",
        "id": 197081927,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589149076
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> I'm rebuilding this as an exercise, so I'm not sure what you're suggesting is not just reusing mathlib, which I cannot</p>",
        "id": 197081929,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589149078
    },
    {
        "content": "<p>That's fine, then just rebuild <code>dist</code> too</p>",
        "id": 197081985,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589149094
    },
    {
        "content": "<p>Is there some file or pointer where to look?</p>",
        "id": 197081994,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589149103
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/topology/metric_space/premetric_space.lean\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/topology/metric_space/premetric_space.lean\">https://github.com/leanprover-community/mathlib/blob/master/src/topology/metric_space/premetric_space.lean</a></p>",
        "id": 197082082,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589149190
    },
    {
        "content": "<p>It looks like <code>has_dist</code> has been broken off as its own typeclass</p>",
        "id": 197082148,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589149223
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/topology/metric_space/basic.lean#L46\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/topology/metric_space/basic.lean#L46\">https://github.com/leanprover-community/mathlib/blob/master/src/topology/metric_space/basic.lean#L46</a></p>",
        "id": 197082157,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1589149240
    },
    {
        "content": "<p>Okay, so  <code>has_XXX</code> technique, thanks</p>",
        "id": 197082163,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589149271
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> I just didn't understand something on induction_on2</p>",
        "id": 197082243,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589149339
    },
    {
        "content": "<p>When you pass the hypothesis: for all x, y: cauchy_seqs, I can prove cauchy.dist X Y Z ≥ 0, why does it \"coerce\" to completion.dist ?</p>",
        "id": 197082271,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589149383
    },
    {
        "content": "<p>i mean like, does cauchy.dist X Y Z ≥ 0 → completion.dist X [Y] [Z] ≥ 0 automatically?</p>",
        "id": 197082289,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589149402
    },
    {
        "content": "<p><code>completion.dist X [Y] [Z]</code> is defeq to <code>cauchy.dist X Y Z</code></p>",
        "id": 197082489,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589149571
    },
    {
        "content": "<p>because of definitional equalities involving <code>quotient.lift</code></p>",
        "id": 197082493,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589149585
    },
    {
        "content": "<p>okay, nice it makes it super clear, last question, <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> how can I prove <code>X \\~~  Y</code> or <code>[X] = [Y]</code> knowing that I can prove that <code>cauchy.dist X Y = 0</code> (which is exactly the def of the relation)?</p>",
        "id": 197082505,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589149634
    },
    {
        "content": "<p><code>quotient.sound</code></p>",
        "id": 197082533,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589149677
    },
    {
        "content": "<p>well<br>\ncauchy.dist X Y = 0 is defeq X ~~Y I guess</p>",
        "id": 197082534,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589149677
    },
    {
        "content": "<p>yes, I used quot.sound and some hypothesis and it just worked ™, thx a lot</p>",
        "id": 197082585,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589149690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> is there a induction_on3 ? :D</p>",
        "id": 197082823,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589149946
    },
    {
        "content": "<p>Oh there is !</p>",
        "id": 197082826,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1589149958
    }
]