[
    {
        "content": "<p>Approximate units (multiplicative) are absolutely essential in the theory of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mo>‚àó</mo></msup></mrow><annotation encoding=\"application/x-tex\">C^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6887em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">‚àó</span></span></span></span></span></span></span></span></span></span></span>-algebras. In this case, one often considers approximate units consisting only of positive contractions.  However, this is too restrictive for a general definition, even if we will want to restrict to that later. So, what is the right generality for this? A first attempt (is my translation from nets to filters correct?):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">filter</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">topological_space</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">approximate_unit</span> <span class=\"o\">{</span><span class=\"n\">Œπ</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">has_mul</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">Œπ</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">ne_bot</span> <span class=\"o\">(</span><span class=\"n\">at_top</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"n\">Œπ</span><span class=\"o\">)]</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">to_fun</span> <span class=\"o\">:</span> <span class=\"n\">Œπ</span> <span class=\"bp\">‚Üí</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">tendsto_mul_left_self</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÄ</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">to_fun</span> <span class=\"n\">i</span> <span class=\"bp\">*</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">m</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">tendsto_mul_right_self</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÄ</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">,</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">to_fun</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">at_top</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">m</span><span class=\"o\">))</span>\n</code></pre></div>",
        "id": 277192893,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648667490
    },
    {
        "content": "<p>Exactly, the right formulation is in terms of filters of subsets. This is a screen capture from page 120 of Bourbaki, <em>Th√©ories spectrales</em>, chapter 1, ¬ß6, no. 10, 2nd edition, Springer, 2019. DOI:10.1007/978-3-030-14064-9.</p>\n<p><a href=\"/user_uploads/3121/5svpHVNplYB6ui3jay3YJtRe/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/5svpHVNplYB6ui3jay3YJtRe/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/5svpHVNplYB6ui3jay3YJtRe/image.png\"></a></div>",
        "id": 277207620,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1648676506
    },
    {
        "content": "<p>What does \"sur la boule unit√© de A\" means here?</p>",
        "id": 277207859,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1648676688
    },
    {
        "content": "<p>I missed Jireh's earlier message. Jireh, this cannot be the correct translation.</p>",
        "id": 277207908,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1648676751
    },
    {
        "content": "<p>Antoine, is this meant to mean that F has a basis whose elements are contained in the unit ball?</p>",
        "id": 277208240,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1648676962
    },
    {
        "content": "<p>I think so, yes.</p>",
        "id": 277210035,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1648678101
    },
    {
        "content": "<p>(I'm not sure Bourbaki is consistent with his own terminology here‚Ä¶)</p>",
        "id": 277210366,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1648678339
    },
    {
        "content": "<p>It means that the members of F are subsets of the unit ball (for all S \\in F, and all a \\in S, || a || &lt;= 1).<br>\nAnd F is increasing if the members of F are subsets of the positive cone (for all S \\in F, and all a \\in S, a is positive).</p>",
        "id": 277210571,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1648678546
    },
    {
        "content": "<p>But surely we want something more general, right? As in, something that would also apply to mollifiers where we might not have a norm? Bourbaki's definition is what I'm familiar with (albeit phrased in terms of nets instead of filter bases), but I think it's not quite general enough.</p>",
        "id": 277213995,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648681466
    },
    {
        "content": "<p>You would want an efficient definition of an approximate unit in a topological algebra (without one)? One question, then, is to ask whether one needs some boundedness condition on the filter (which would be automatic in some contexts, via Banach's theorem).</p>",
        "id": 277239196,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1648709039
    },
    {
        "content": "<p>I don't see any reason to explicitly require a boundedness condition. It's also not clear why we want to restrict to an algebra (or even a ring), even if that's the most common use case. For example, if you throw a <code>@[to_additive]</code> on my definition above then you could have an approximate additive unit on the type of positive reals. I'm not saying that particular thing would be terribly useful, only that it exists and there might be other cases where it would be. (Note: it's fine if the type in question has an actual unit because then you can make an approximate unit by taking the constant net, or the principal filter)</p>\n<p>There will be plenty of specializations of this concept. For example, even within <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mo>‚àó</mo></msup></mrow><annotation encoding=\"application/x-tex\">C^*</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6887em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">‚àó</span></span></span></span></span></span></span></span></span></span></span>-algebra theory, approximate units are always taken to be bounded and consisting of positive elements, but one would also like to consider approximate units which are quasicentral, or sequential, or consisting of projections, or any combination thereof.</p>\n<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> what exactly is wrong with the definition I suggested?</p>",
        "id": 277273977,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648730502
    },
    {
        "content": "<p>I see. You might generalize and consider approximate units for <code>has_scalar</code> types on something which has topology. <br>\nAlso, it might be more natural to consider the approximate unit as a filter on <code>M</code> (with your notation) rather than as a filter on something else.  Additional conditions can be imposed by requiring the filter to have  basis of a particular type.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.basic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">filter</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">topological_space</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">approximate_unit</span> <span class=\"o\">{</span><span class=\"n\">Œ±</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">has_scalar</span> <span class=\"n\">Œ±</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"kd\">extends</span> <span class=\"n\">filter</span> <span class=\"n\">Œ±</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">tendsto_one</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÄ</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">),</span> <span class=\"n\">tendsto</span> <span class=\"o\">(</span><span class=\"bp\">Œª</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">‚Ä¢</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"n\">to_filter</span> <span class=\"o\">(</span><span class=\"bp\">ùìù</span> <span class=\"n\">m</span><span class=\"o\">))</span>\n</code></pre></div>",
        "id": 277310669,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1648745888
    },
    {
        "content": "<p>I'm not sure about has_scalar besides the trivial case of multiplication, but the existence of a filter basis idea was the thing I was missing. I guess we just avoid meaningless statements by requiring the filter is ne_bot?</p>",
        "id": 277313837,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648747396
    },
    {
        "content": "<p>Well, you could want an approximate unit for an asymmetrical convolution <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>L</mi><mi>p</mi></msup><mo>√ó</mo><msup><mi>L</mi><mi>q</mi></msup><mo>‚Üí</mo><msup><mi>L</mi><mi>r</mi></msup></mrow><annotation encoding=\"application/x-tex\">L^p \\times L^q \\to L^r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">√ó</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">q</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">L</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span></span></span></span></span></span></span>, hence in more general contexts : <code>\\alpha \\to \\beta \\to \\gamma</code> .</p>\n<p>Nets and filters are basically equivalent notions, but the former is inspired by sequences and forces to think in terms of maps from an ordered set; the second is more static but the ordered set is set set of subsets of the ambient set, with inclusion (reversed). An ordered set gives rise to a filter, called the filter of sections (its elements are subsets of \\iota that contain all elements  larger than some a : \\iota), and a map between to sets allows you to push/pull back filters (take the filter generated by images, resp preimages).</p>",
        "id": 277315239,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1648748116
    },
    {
        "content": "<p>(How do you guys type greek/unicode in your web browser? Please teach me!)</p>",
        "id": 277315307,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1648748161
    },
    {
        "content": "<p>I have Gabriel Ebner's <a href=\"https://github.com/gebner/m17n-lean\">https://github.com/gebner/m17n-lean</a> installed using ibus.</p>",
        "id": 277316096,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648748582
    },
    {
        "content": "<p>It's nice to have system-wide Lean-style unicode input. I use it for writing emails all the time now.</p>",
        "id": 277316181,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648748633
    },
    {
        "content": "<p>Right, I realize that nets and filters are basically equivalent. I hadn't considered those even more general setting, but then even <code>has_scalar</code> wouldn't be sufficient, right? Or am I missing something?</p>",
        "id": 277316525,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648748793
    },
    {
        "content": "<p>Actually, I'm not even sure what an approximate unit <code>Œ± ‚Üí Œ≤ ‚Üí Œ≥</code> would even mean?</p>",
        "id": 277317049,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648749027
    },
    {
        "content": "<p>I was typing the definition, until the very <code>tendsto</code> which made me realize it means nothing unless <code>Œ≤ = Œ≥</code>, sorry‚Ä¶</p>",
        "id": 277321547,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1648751335
    },
    {
        "content": "<p>Jireh, if you need Lean-friendly information about filters, there is a draft of Mathematics in Lean section at <a href=\"https://www.imo.universite-paris-saclay.fr/~pmassot/mil/07_Topology.html\">https://www.imo.universite-paris-saclay.fr/~pmassot/mil/07_Topology.html</a></p>",
        "id": 277328950,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1648754990
    }
]