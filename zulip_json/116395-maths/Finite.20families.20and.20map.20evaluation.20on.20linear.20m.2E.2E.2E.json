[
    {
        "content": "<p>I'm trying to write some oral exams from ENS Ulm in Lean, for Kata &amp; annoyingly hard puzzles, take this one:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">matrix</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">dimension</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">finset</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">ulm2019_2</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">finset</span><span class=\"bp\">.</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Ht</span><span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">injective</span> <span class=\"n\">t</span><span class=\"o\">):</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n    <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"n\">W</span><span class=\"o\">:</span> <span class=\"n\">subspace</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)),</span> <span class=\"o\">(</span><span class=\"n\">V</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"n\">A</span><span class=\"o\">))</span> <span class=\"err\">⊆</span> <span class=\"n\">W</span> <span class=\"bp\">∧</span> <span class=\"n\">V</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"err\">⊆</span> <span class=\"n\">W</span> <span class=\"bp\">∧</span> <span class=\"n\">vector_space</span><span class=\"bp\">.</span><span class=\"n\">dim</span> <span class=\"n\">ℝ</span> <span class=\"n\">W</span> <span class=\"bp\">&lt;</span> <span class=\"n\">vector_space</span><span class=\"bp\">.</span><span class=\"n\">dim</span> <span class=\"n\">ℝ</span> <span class=\"n\">V</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>I don't know how can I have a <code>(t_i)_i</code> a finite family, <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> suggested me to use this + injective, but maybe I got wrong his hint.</p>\n<p>Also, I have this issue that modules seems to not have subsets (?).</p>",
        "id": 199275498,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590871949
    },
    {
        "content": "<p>ah sorry maybe use <code>fin (n+1) -&gt; \\R</code> instead</p>",
        "id": 199275506,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872011
    },
    {
        "content": "<p>also you want parentheses around <code>forall _, _</code></p>",
        "id": 199275556,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872046
    },
    {
        "content": "<p>and then instead of <code>t i</code> you would write <code>t \\&lt;i, _\\&gt;</code></p>",
        "id": 199275561,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872072
    },
    {
        "content": "<p>Alright</p>",
        "id": 199275575,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872114
    },
    {
        "content": "<p>Alternatively, just delete <code> ≤ n</code> from <code>i ≤ n</code>, right?</p>",
        "id": 199275577,
        "sender_full_name": "Reid Barton",
        "timestamp": 1590872125
    },
    {
        "content": "<p>oh right</p>",
        "id": 199275584,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872152
    },
    {
        "content": "<p>also use <code>\\le</code> instead of <code>\\subset</code></p>",
        "id": 199275624,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872177
    },
    {
        "content": "<p>Hmm, but * is not working for scalar/matrix products, right?</p>",
        "id": 199275629,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872185
    },
    {
        "content": "<p><code>\\bu</code></p>",
        "id": 199275632,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872193
    },
    {
        "content": "<p>and drop the parentheses around <code>t i</code></p>",
        "id": 199275644,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872209
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">matrix</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">dimension</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">finset</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">ulm2019_2</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Ht</span><span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">injective</span> <span class=\"n\">t</span><span class=\"o\">):</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"err\">•</span><span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n    <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"n\">W</span><span class=\"o\">:</span> <span class=\"n\">subspace</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)),</span> <span class=\"o\">(</span><span class=\"n\">V</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"n\">A</span><span class=\"o\">))</span> <span class=\"bp\">≤</span> <span class=\"n\">W</span> <span class=\"bp\">∧</span> <span class=\"n\">V</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">W</span> <span class=\"bp\">∧</span> <span class=\"n\">vector_space</span><span class=\"bp\">.</span><span class=\"n\">dim</span> <span class=\"n\">ℝ</span> <span class=\"n\">W</span> <span class=\"bp\">&lt;</span> <span class=\"n\">vector_space</span><span class=\"bp\">.</span><span class=\"n\">dim</span> <span class=\"n\">ℝ</span> <span class=\"n\">V</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>And here we go</p>",
        "id": 199275645,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872209
    },
    {
        "content": "<p>Okay</p>",
        "id": 199275649,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872215
    },
    {
        "content": "<p>you still need parentheses around <code>\\forall _, _</code></p>",
        "id": 199275653,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872223
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">ulm2019_2</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Ht</span><span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">injective</span> <span class=\"n\">t</span><span class=\"o\">):</span>\n  <span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"n\">i</span><span class=\"err\">•</span><span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n    <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"n\">W</span><span class=\"o\">:</span> <span class=\"n\">subspace</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)),</span> <span class=\"o\">(</span><span class=\"n\">V</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"n\">A</span><span class=\"o\">))</span> <span class=\"bp\">≤</span> <span class=\"n\">W</span> <span class=\"bp\">∧</span> <span class=\"n\">V</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">W</span> <span class=\"bp\">∧</span> <span class=\"n\">vector_space</span><span class=\"bp\">.</span><span class=\"n\">dim</span> <span class=\"n\">ℝ</span> <span class=\"n\">W</span> <span class=\"bp\">&lt;</span> <span class=\"n\">vector_space</span><span class=\"bp\">.</span><span class=\"n\">dim</span> <span class=\"n\">ℝ</span> <span class=\"n\">V</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>is it good now?</p>",
        "id": 199275657,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872242
    },
    {
        "content": "<p>parentheses around <code>\\forall _, _</code></p>",
        "id": 199275663,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872265
    },
    {
        "content": "<p>is it correct to use <code>fin n</code> for matrix?</p>",
        "id": 199275664,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872265
    },
    {
        "content": "<p>ah!</p>",
        "id": 199275665,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872274
    },
    {
        "content": "<p>yes</p>",
        "id": 199275666,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872275
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">lemma</span> <span class=\"n\">ulm2019_2</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Ht</span><span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">injective</span> <span class=\"n\">t</span><span class=\"o\">):</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"n\">i</span><span class=\"err\">•</span><span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n    <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"n\">W</span><span class=\"o\">:</span> <span class=\"n\">subspace</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)),</span> <span class=\"o\">(</span><span class=\"n\">V</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"n\">A</span><span class=\"o\">))</span> <span class=\"bp\">≤</span> <span class=\"n\">W</span> <span class=\"bp\">∧</span> <span class=\"n\">V</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">W</span> <span class=\"bp\">∧</span> <span class=\"n\">vector_space</span><span class=\"bp\">.</span><span class=\"n\">dim</span> <span class=\"n\">ℝ</span> <span class=\"n\">W</span> <span class=\"bp\">&lt;</span> <span class=\"n\">vector_space</span><span class=\"bp\">.</span><span class=\"n\">dim</span> <span class=\"n\">ℝ</span> <span class=\"n\">V</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>like this?</p>",
        "id": 199275704,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872288
    },
    {
        "content": "<p>exactly</p>",
        "id": 199275709,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872293
    },
    {
        "content": "<p>nice!</p>",
        "id": 199275712,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872299
    },
    {
        "content": "<p>we have a bad ™ puzzle</p>",
        "id": 199275713,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872306
    },
    {
        "content": "<p>now put space around <code>\\bu</code> and use projection notation for <code>matrix.det</code></p>",
        "id": 199275716,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872317
    },
    {
        "content": "<p>and <code>matrix.eval</code></p>",
        "id": 199275718,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872331
    },
    {
        "content": "<p>and use more newlines</p>",
        "id": 199275723,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872341
    },
    {
        "content": "<p>Okay</p>",
        "id": 199275728,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872355
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">matrix</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">dimension</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">finset</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">ulm2019_2</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Ht</span><span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">injective</span> <span class=\"n\">t</span><span class=\"o\">):</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"n\">i</span> <span class=\"err\">•</span> <span class=\"n\">B</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n    <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"n\">W</span><span class=\"o\">:</span> <span class=\"n\">subspace</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)),</span>\n      <span class=\"n\">V</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"n\">A</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"bp\">≤</span> <span class=\"n\">W</span>\n      <span class=\"bp\">∧</span> <span class=\"n\">V</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"n\">B</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"bp\">≤</span> <span class=\"n\">W</span>\n      <span class=\"bp\">∧</span> <span class=\"n\">vector_space</span><span class=\"bp\">.</span><span class=\"n\">dim</span> <span class=\"n\">ℝ</span> <span class=\"n\">W</span> <span class=\"bp\">&lt;</span> <span class=\"n\">vector_space</span><span class=\"bp\">.</span><span class=\"n\">dim</span> <span class=\"n\">ℝ</span> <span class=\"n\">V</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>is it nice, <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> ?</p>",
        "id": 199275789,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872420
    },
    {
        "content": "<p>more newlines</p>",
        "id": 199275798,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872440
    },
    {
        "content": "<p>yeah that looks brilliant</p>",
        "id": 199275800,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1590872443
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">matrix</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">determinant</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">dimension</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">finset</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">ulm2019_2</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Ht</span><span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">injective</span> <span class=\"n\">t</span><span class=\"o\">):</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">+</span> <span class=\"n\">t</span> <span class=\"n\">i</span> <span class=\"err\">•</span> <span class=\"n\">B</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n    <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"n\">W</span><span class=\"o\">:</span> <span class=\"n\">subspace</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)),</span>\n      <span class=\"n\">V</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"n\">A</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"bp\">≤</span> <span class=\"n\">W</span>\n      <span class=\"bp\">∧</span> <span class=\"n\">V</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"n\">B</span><span class=\"bp\">.</span><span class=\"kn\">eval</span> <span class=\"bp\">≤</span> <span class=\"n\">W</span>\n      <span class=\"bp\">∧</span> <span class=\"n\">vector_space</span><span class=\"bp\">.</span><span class=\"n\">dim</span> <span class=\"n\">ℝ</span> <span class=\"n\">W</span> <span class=\"bp\">&lt;</span> <span class=\"n\">vector_space</span><span class=\"bp\">.</span><span class=\"n\">dim</span> <span class=\"n\">ℝ</span> <span class=\"n\">V</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>\n\n\n<p>seems like perfect now</p>",
        "id": 199275810,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872462
    },
    {
        "content": "<p>now, i have to do some undergraduate list stuff, then my first Kata</p>",
        "id": 199275821,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590872485
    },
    {
        "content": "<p>If you want to solve it then Kenny or I can post it. I don't want to get sidetracked on this right now though</p>",
        "id": 199276809,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590874286
    },
    {
        "content": "<p>Who's the examiner now at ENS, by the way?</p>",
        "id": 199295382,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1590910316
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110050\">Sebastien Gouezel</span> <a href=\"#narrow/stream/116395-maths/topic/Finite.20families.20and.20map.20evaluation.20on.20linear.20m.2E.2E.2E/near/199295382\">said</a>:</p>\n<blockquote>\n<p>Who's the examiner now at ENS, by the way?</p>\n</blockquote>\n<p>It depends on the years, but for 2019, their names is written here: <a href=\"https://www.ens.psl.eu/sites/default/files/19_mp_rap_omath_u.pdf\">https://www.ens.psl.eu/sites/default/files/19_mp_rap_omath_u.pdf</a></p>",
        "id": 199309259,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1590937464
    }
]