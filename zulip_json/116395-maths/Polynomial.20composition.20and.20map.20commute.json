[
    {
        "content": "<p>For the Berkeley Galois theory project, we had to use the following fact: if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> are polynomials over a ring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ι</mi></mrow><annotation encoding=\"application/x-tex\">\\iota</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">ι</span></span></span></span> is a map from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> to a ring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ι</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>ι</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>ι</mi><mo stretchy=\"false\">(</mo><mi>g</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\iota(f(g)) = (\\iota(f))(\\iota(g))</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">ι</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">ι</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">ι</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span>. We couldn't find this fact in mathlib, so we proved it <a href=\"https://github.com/pglutz/galois_theory/blob/master/src/primitive_element.lean#L103\">here</a>. Is it really true that this is not in mathlib? If not, then I will make a PR to add it.</p>",
        "id": 206512257,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1597093022
    },
    {
        "content": "<p>Also, is <a href=\"https://github.com/pglutz/galois_theory/blob/master/src/primitive_element.lean#L72\">this</a> lemma already in mathlib? It's almost exactly the same as <code>polynomial.map_prod</code> but for sums instead of products.</p>",
        "id": 206512515,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1597093158
    },
    {
        "content": "<p>can <code>to_additive</code> generate your <code>map_sum</code> from <code>map_prod</code>?</p>",
        "id": 206518386,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597096582
    },
    {
        "content": "<p>I don't know how <code>to_additive</code> works. Is there somewhere I can read about it or see examples?</p>",
        "id": 206519241,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1597097180
    },
    {
        "content": "<p>do you just tag map_prod with to_additive?</p>",
        "id": 206519271,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1597097221
    },
    {
        "content": "<p>searching to_additive in github shows examples:<br>\n<a href=\"https://github.com/leanprover-community/mathlib/search?q=to_additive&amp;unscoped_q=to_additive\">https://github.com/leanprover-community/mathlib/search?q=to_additive&amp;unscoped_q=to_additive</a></p>",
        "id": 206519768,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1597097593
    },
    {
        "content": "<p>@[to_additive] probably starts to become unreliable in the polynomial world. When both multiplicative and additive structures are simultaneously present (...pretty much the definition of talking about polynomials...) it often requires more hand-holding than is worth it.</p>",
        "id": 206529395,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1597106008
    },
    {
        "content": "<p>But yes, please PR <code>polynomial.map_comp</code>!</p>",
        "id": 206529412,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1597106029
    },
    {
        "content": "<p>My initial reaction was that it wouldn't work (because addition and multiplication of polynomials are totally different things) but if it works by just making certain textual changes to the statement of the proof of the lemma then I guess it might actually work in this case after all.</p>",
        "id": 206530244,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597106786
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/3736\">#3736</a></p>",
        "id": 206537591,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1597117523
    }
]