[
    {
        "content": "<p>I just noticed that <a href=\"https://github.com/leanprover-community/mathlib/pull/11124\">#11124</a> was merged which means we now have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/non_unital_non_assoc_ring\">docs#non_unital_non_assoc_ring</a> I was a bit surprised that it did not also include a <code>non_unital_ring</code> definition (for associative but not-necessarily-unital rings). Is there a reason this was left out? Could we just follow up now with a very similar PR adding <code>non_unital_ring</code>.</p>",
        "id": 266952315,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1641398078
    },
    {
        "content": "<p>I expect the C* algebra people would use such  class quite soon (plumbing it into <a href=\"https://leanprover-community.github.io/mathlib_docs/find/cstar_ring\">docs#cstar_ring</a> one way or another).</p>",
        "id": 266952676,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1641398228
    },
    {
        "content": "<p>I was planning to come back and give that another review, but not a big deal. I figured it was fine to leave those out until someone cared about them, as it will just slow down typeclass search to add them. Originally we added <a href=\"https://leanprover-community.github.io/mathlib_docs/find/non_assoc_semiring\">docs#non_assoc_semiring</a> because we thought we could use it to generalize <code>algebra</code>, but I never went ahead with that refactor.</p>",
        "id": 266970625,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641406731
    },
    {
        "content": "<p>What I was hoping to see in that PR was a generalization of some existing lemmas that now only need the new typeclass</p>",
        "id": 266970691,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1641406769
    },
    {
        "content": "<p>I don't personally need <code>non_unital_ring</code> but I think it would be used. It can wait though.</p>",
        "id": 266970805,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1641406816
    },
    {
        "content": "<p>I had imagined <a href=\"https://github.com/leanprover-community/mathlib/pull/11124\">#11124</a> was the perfect roadmap so now was a good time to do it but maybe that's not quite the case.</p>",
        "id": 266970930,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1641406885
    },
    {
        "content": "<p>I still wonder what will happen when we want the commutative version of all of these. I think we'll have to kill <code>comm_ring</code> and introduce <code>is_comm</code>.</p>",
        "id": 266971035,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1641406929
    },
    {
        "content": "<p>I am not really clear on why we have both <code>ring</code> and <code>comm_ring</code>. Maybe it's just some historical accident? I think it was already there in 2017.</p>",
        "id": 266971191,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1641407031
    },
    {
        "content": "<p>I expect so. There's the old argument about massive terms or massively-many classes.</p>",
        "id": 266971545,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1641407202
    }
]