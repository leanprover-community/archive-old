[
    {
        "content": "<p>Does mathlib have some variant of <a href=\"https://github.com/openai/miniF2F/blob/main/lean/src/test.lean#L1332-L1341\">https://github.com/openai/miniF2F/blob/main/lean/src/test.lean#L1332-L1341</a>?</p>",
        "id": 272150630,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1645033271
    },
    {
        "content": "<p>I don't think I've seen anything like that, but could be added pretty easily, I guess</p>",
        "id": 272151621,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1645033681
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"307953\">Ruben Van de Velde</span> <a href=\"#narrow/stream/116395-maths/topic/sum.20grouping.20adjacent.20terms/near/272151621\">said</a>:</p>\n<blockquote>\n<p>I don't think I've seen anything like that, but could be added pretty easily, I guess</p>\n</blockquote>\n<p>Thanks. Happy to PR it -- where would it go?</p>",
        "id": 272156946,
        "sender_full_name": "Daniel Selsam",
        "timestamp": 1645035615
    },
    {
        "content": "<p>Big operators/basic, probably? (On mobile, can't link)</p>",
        "id": 272157494,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1645035862
    },
    {
        "content": "<p>Maybe generalize it to</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">finset.range</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">n</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"n\">finset.range</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"k\">in</span> <span class=\"n\">finset.range</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>so that we can group triples as well?</p>",
        "id": 272160970,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645037568
    },
    {
        "content": "<p>(and of course <code>to_additive</code>ize it)</p>",
        "id": 272161207,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645037668
    },
    {
        "content": "<p>I was hoping <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.sum_partition\">docs#finset.sum_partition</a> could produce a slick proof, but we're missing a lot of the machinery</p>",
        "id": 272162370,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645038200
    }
]