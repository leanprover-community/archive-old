[
    {
        "content": "<p>Is there a good proof of</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">zou</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">lt_succ_iff</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">le_zero_iff</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">lt_or_eq_of_le</span> <span class=\"n\">hn</span>\n</pre></div>\n\n\n<p>(I mean, other than waiting for <a href=\"https://github.com/leanprover-community/mathlib/issues/1596\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1596\">#1596</a> -- I would love this to get into mathlib, but I don't feel qualified to review it).</p>",
        "id": 189041161,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1582651906
    },
    {
        "content": "<p><code>omega</code>?</p>",
        "id": 189042115,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1582652623
    },
    {
        "content": "<p>Yes, thanks!</p>",
        "id": 189043289,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1582653291
    }
]