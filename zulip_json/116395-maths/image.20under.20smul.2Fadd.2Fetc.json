[
    {
        "content": "<p>A few minutes ago I wrote down the line</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">/-</span><span class=\"cm\">- The image of a set under scalar multiplication. -/</span>\n<span class=\"n\">local</span> <span class=\"kn\">notation</span> <span class=\"n\">a</span> <span class=\"bp\">`</span> <span class=\"err\">•&#39;&#39;</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">74</span> <span class=\"n\">S</span><span class=\"o\">:</span><span class=\"mi\">75</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"err\">•</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"err\">&#39;&#39;</span> <span class=\"n\">S</span>\n</pre></div>\n\n\n<p>I was thinking specifically of inflating sets in vector spaces, but then I mentioned it to <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> and he pointed out that it could just be an instance:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">has_scalar</span> <span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">:</span>  <span class=\"n\">has_scalar</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">a</span> <span class=\"n\">B</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"err\">•</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"err\">&#39;&#39;</span> <span class=\"n\">B</span><span class=\"bp\">⟩</span>\n</pre></div>\n\n\n<p>This definition (and similar ones for <code>has_add</code> and friends) makes sense whenever <code>a • b</code> does.</p>\n<p>I can't help but suspect there's a reason <code>mathlib</code> doesn't already do this, or that there's something to this effect that I just haven't found. Please advise?</p>",
        "id": 181581174,
        "sender_full_name": "Jean Lo",
        "timestamp": 1574368207
    },
    {
        "content": "<p>well we have that for submodules</p>",
        "id": 181581257,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1574368288
    },
    {
        "content": "<blockquote>\n<p>well we have that for submodules</p>\n</blockquote>\n<p>we do, and that's part of the reason i'm suspicious! why for submodules but not for arbitrary subsets of types that have scalar multiplication?</p>",
        "id": 181581405,
        "sender_full_name": "Jean Lo",
        "timestamp": 1574368420
    }
]