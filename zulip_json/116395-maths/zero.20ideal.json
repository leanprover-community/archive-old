[
    {
        "content": "<p>I lost the zero ideal during the module refactor. Does anyone know where it ended up?</p>",
        "id": 152032669,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545058214
    },
    {
        "content": "<p>I guess it is now <code>⊥</code></p>",
        "id": 152032688,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1545058231
    },
    {
        "content": "<p>Thanks</p>",
        "id": 152032759,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545058294
    },
    {
        "content": "<p>I'm a very slow learner. I was looking for something named zero</p>",
        "id": 152032784,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545058316
    },
    {
        "content": "<p>lol</p>",
        "id": 152032827,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1545058324
    },
    {
        "content": "<p>\"I lost something\" -- what is it? \"I lost the zero ideal\"</p>",
        "id": 152032844,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1545058333
    },
    {
        "content": "<blockquote>\n<p>I'm a very slow learner. I was looking for something named zero</p>\n</blockquote>\n<p>That would be too easy.</p>",
        "id": 152032859,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1545058346
    },
    {
        "content": "<p>Who would think that zero is a more natural thing than the bottom of a lattice nowadays?</p>",
        "id": 152032888,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545058363
    },
    {
        "content": "<p><code>ideal.mul_mem_left : ∀ {α : Type u_1} [_inst_1 : comm_ring α] (I : ideal α) {a b : α}, b ∈ I → a * b ∈ I</code> What happened to binder types here?</p>",
        "id": 152033162,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545058541
    },
    {
        "content": "<p>what binder types?</p>",
        "id": 152033212,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1545058564
    },
    {
        "content": "<p>Why not</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">mul_mem_left&#39;</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"err\">∈</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"err\">∈</span> <span class=\"n\">I</span> <span class=\"o\">:=</span>\n<span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">mul_mem_left</span> <span class=\"bp\">_</span> <span class=\"n\">h</span>\n</pre></div>",
        "id": 152033393,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545058688
    },
    {
        "content": "<p>Like, I want <code>a</code> and <code>b ∈ I</code> to be explicit, and everything else implicit</p>",
        "id": 152033413,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545058716
    },
    {
        "content": "<p>because we want to write <code>I.mul_mem_left _ _</code></p>",
        "id": 152033432,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1545058735
    },
    {
        "content": "<p>And how does it guess who is <code>a</code>?</p>",
        "id": 152033567,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545058826
    },
    {
        "content": "<p>from the type</p>",
        "id": 152033607,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1545058865
    },
    {
        "content": "<p>hmm</p>",
        "id": 152033761,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1545059038
    }
]