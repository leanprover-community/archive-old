[
    {
        "content": "<p>I just saw this in <span class=\"user-mention\" data-user-id=\"120726\">@Luca Gerolla</span> 's code.</p>\n<p><code>definition is_homotopic_to { x y : β } (f : path x y) ( g : path x y) : Prop := nonempty ( path_homotopy f g)</code></p>\n<p>I feel like <code>is_homotopic_to</code> is an important concept and it sounds like a prop to me, but of course there might well be many homotopies between f and g. Is Luca unwise to use <code>nonempty</code> or is this exactly what he wants? I still feel very unsure about this kind of thing. Given an explicit homotopy from f to g and an explicit homotopy from g to h he will surely want an explicit homotopy from f to h, and of course he proves this, but...I think what I'm saying is that I am confused about both wanting a proposition and wanting to keep track of the homotopy at the same time.</p>",
        "id": 131163659,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1533811184
    },
    {
        "content": "<p>You need both, I think. And here we do have both, since we also have <code>path_homotopy</code> itself.</p>",
        "id": 131171197,
        "sender_full_name": "Reid Barton",
        "timestamp": 1533820460
    },
    {
        "content": "<p>What you don't want to do is define <code>is_homotopic_to</code> without <code>path_homotopy</code></p>",
        "id": 131171234,
        "sender_full_name": "Reid Barton",
        "timestamp": 1533820505
    },
    {
        "content": "<p>I think you will want a quotient type over the is_homotopic_to relation</p>",
        "id": 131171736,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533821059
    },
    {
        "content": "<p>so the homotopy itself won't be in the structure</p>",
        "id": 131171744,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533821076
    },
    {
        "content": "<p>So you think this is the appropriate way to define the equivalence relation that I will define the quotient on? When needed to get an actual  <code>path_homotopy f g </code>  from <code> H : is_homotopic_to f g </code>  I use <code>cases </code>; while to show (for example) <code>is_homotopic_to f g</code> I construct an actual <code>F : path_homotopy f g </code> and feed this with <code>nonempty.intro </code>.  Would this be a good way to manage the homotopy binary relation? At first,  I just felt I was loosing some information with <code>nonempty </code> in later proofs.</p>",
        "id": 131172455,
        "sender_full_name": "Luca Gerolla",
        "timestamp": 1533821796
    },
    {
        "content": "<p>I think Kevin wants a <code>trunc</code> instead of a <code>nonempty</code></p>",
        "id": 131172493,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1533821849
    },
    {
        "content": "<p>but this will be to HoTT-like</p>",
        "id": 131172500,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1533821853
    },
    {
        "content": "<p>To take a quotient you need a Prop</p>",
        "id": 131172508,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533821866
    },
    {
        "content": "<p>Consider the way <code>cardinal</code> is defined - it is a quotient over the relation <code>nonempty (A ≃ B)</code></p>",
        "id": 131172560,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533821901
    },
    {
        "content": "<p>I see.. thank you! I will stick to <code>nonempty</code></p>",
        "id": 131174279,
        "sender_full_name": "Luca Gerolla",
        "timestamp": 1533823627
    }
]