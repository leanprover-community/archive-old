[
    {
        "content": "<p>Should we not use the group namespace?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">namespace</span> <span class=\"n\">group</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">c</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">],</span> <span class=\"c1\">-- ⊢ mul a (mul b c) = a * (b * c)</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>The trouble is it used <code>group.mul_assoc</code> instead of <code>mul_assoc</code>, so we ended up with <code>group.mul</code> in the goal</p>",
        "id": 167010233,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1559319081
    },
    {
        "content": "<p>you could use <code>_root_.mul_assoc</code>, or you could not be in the namespace but declare the theorem as <code>theorem group.foo ...</code></p>",
        "id": 167011745,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1559320016
    },
    {
        "content": "<p>I know, but last time this came up it took me ages to work out what was going on. Which makes things hard for people who don't know the tricks.</p>",
        "id": 167011976,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1559320186
    },
    {
        "content": "<p>where are we using the <code>group</code> namespace?</p>",
        "id": 167012677,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1559320663
    },
    {
        "content": "<p>Actually I think opening lots of namespaces is something I see a lot but don't really recommend</p>",
        "id": 167012781,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1559320724
    },
    {
        "content": "<p>I was using <code>conjugates_of_set</code> which is in the <code>group</code> namespace.</p>",
        "id": 167013432,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1559321178
    },
    {
        "content": "<p>I face this issue with the integration library as well. Some results are nested within two namespaces, and I have to type out the whole thing to access them..</p>",
        "id": 167017639,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1559324654
    },
    {
        "content": "<p>the <code>open</code> command is really powerful, you should try some of the options</p>",
        "id": 167018071,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1559324944
    },
    {
        "content": "<p>Another (currently unavailable) solution would be if we could make <code>group.mul_assoc</code> protected or hidden or whatever.</p>",
        "id": 167019310,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1559325739
    },
    {
        "content": "<p>Maybe structure fields should be protected by default. Is this a reasonable feature request for <code>3.?.c</code>?</p>",
        "id": 167019408,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1559325825
    },
    {
        "content": "<p>I don't know... that sounds like it will break peoples' things</p>",
        "id": 167019640,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1559326006
    },
    {
        "content": "<p>unless we give them an alternative I don't think that's reasonable</p>",
        "id": 167019699,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1559326051
    }
]