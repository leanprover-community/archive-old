[
    {
        "content": "<p>Currently, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/inner_product_space\">docs#inner_product_space</a> requires positive definite-ness.<br>\n<a href=\"https://ncatlab.org/nlab/show/inner+product+space\">nLab</a> suggests that this is not a necessary condition for something to be an \"inner product space\", while <a href=\"https://en.wikipedia.org/wiki/Inner_product_space#Definition\">wikipedia</a> suggests that it is a necessary condition.</p>\n<p>Without wanting to argue about whether the  mathlib definition is correct, what would be a suitable name for the version whose inner product is not-necessarily-positive definite?</p>",
        "id": 224705114,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612173552
    },
    {
        "content": "<p>\"space equipped with a symmetric bilinear form\"?</p>",
        "id": 224705237,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612173648
    },
    {
        "content": "<p>I've never seen the nLab's convention used anywhere else BTW</p>",
        "id": 224705380,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612173728
    },
    {
        "content": "<p>Maybe it's a silly question, and slightly off-topic w.r.t. your question, but isn't Wikipedia's definition \"problematic\" when the inner product goes to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> , since it is not linearly ordered and thus the positive definiteness condition doesn't make sense in that case?</p>",
        "id": 224708202,
        "sender_full_name": "Andrea Berlingieri",
        "timestamp": 1612175594
    },
    {
        "content": "<p>in the C case you assume sesquilinearity so (x,x) is always real-valued.</p>",
        "id": 224708220,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612175625
    },
    {
        "content": "<p>Oh, I see. Thanks.</p>",
        "id": 224708309,
        "sender_full_name": "Andrea Berlingieri",
        "timestamp": 1612175671
    },
    {
        "content": "<p>To motivate my question - this comes up when wanting to work in minkowski spacetime, for instance, where one unit basis vector squares to <code>-1</code>. It would be nice to still get <code>norm</code> and <code>inner</code> notation(and maybe dist), and have at least the bits of <code>inner_product_space</code> that show they are consistent with each other</p>",
        "id": 224709645,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612176670
    },
    {
        "content": "<p>You can't have <code>norm</code> in this case because <code>norm</code> is a <code>real</code>-valued function, and in Minkowski spacetime some squared norms are negative.</p>",
        "id": 224735052,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1612190666
    },
    {
        "content": "<p>Oh, that's a good point - and I guess <code>dist</code> also has a square-root in it that makes it undesirable there. So I guess I don't have a reason to care about lemmas for <code>norm</code> and <code>dist</code></p>",
        "id": 224747541,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1612195331
    },
    {
        "content": "<p>Many useful lemmas actually only involve the squared norm, and can be useful in indefinite signature. For instance, the \"Pythagorean theorem\" works as-is. Cauchy-Schwarz can also be adapted, but there are different cases depending on the sign of the \"squared norm\" of the vectors.</p>",
        "id": 225169667,
        "sender_full_name": "Jean-Philippe Burelle",
        "timestamp": 1612450668
    }
]