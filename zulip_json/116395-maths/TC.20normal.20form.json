[
    {
        "content": "<p>Sometimes I use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/filter.ne_bot\">docs#filter.ne_bot</a> to express notions that possibly deserve a dedicated typeclass. What do you think about the following two cases?</p>",
        "id": 252938739,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631398039
    },
    {
        "content": "<p>/poll Normal form for ‚Äú<code>x</code> is not an isolated point‚Äù<br>\nne_bot (ùìù[{x}·∂ú] x)<br>\ncreate new TC non_isolated_pt</p>",
        "id": 252938820,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631398125
    },
    {
        "content": "<p>/poll Normal form for ‚Äúnon-compact space‚Äù<br>\nne_bot (cocompact Œ±)<br>\nis_empty (compact_space Œ±)<br>\nadd new TC noncompact_space</p>",
        "id": 252938864,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631398188
    },
    {
        "content": "<p>Pros of new TCs:</p>\n<ul>\n<li>more readable code;</li>\n<li>no false negatives for the \"priority\" linter.</li>\n</ul>",
        "id": 253003745,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631471731
    },
    {
        "content": "<p>If we really need this to be inferred by type class resolution then I think <code>non_compact_space</code> is the only readable option</p>",
        "id": 253003977,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1631471983
    },
    {
        "content": "<p>If we infer this by type class resolution, then we can make an instance for <code>alexandroff.connected_space</code>.</p>",
        "id": 253004318,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1631472330
    }
]