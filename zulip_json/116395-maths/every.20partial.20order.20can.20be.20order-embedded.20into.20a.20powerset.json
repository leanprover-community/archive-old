[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">section</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">partial_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">partial_order</span><span class=\"bp\">.</span><span class=\"n\">embed</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">z</span> <span class=\"bp\">|</span> <span class=\"n\">z</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"o\">}</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">partial_order</span><span class=\"bp\">.</span><span class=\"n\">embed</span><span class=\"bp\">.</span><span class=\"n\">injective</span> <span class=\"o\">:</span> <span class=\"n\">function</span><span class=\"bp\">.</span><span class=\"n\">injective</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">partial_order</span><span class=\"bp\">.</span><span class=\"n\">embed</span> <span class=\"n\">α</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">hxy</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">H1</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"err\">∈</span> <span class=\"n\">partial_order</span><span class=\"bp\">.</span><span class=\"n\">embed</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">hxy</span> <span class=\"bp\">▸</span> <span class=\"n\">le_refl</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">H2</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"err\">∈</span> <span class=\"n\">partial_order</span><span class=\"bp\">.</span><span class=\"n\">embed</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">hxy</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"bp\">▸</span> <span class=\"n\">le_refl</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n<span class=\"n\">le_antisymm</span> <span class=\"n\">H1</span> <span class=\"n\">H2</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">partial_order</span><span class=\"bp\">.</span><span class=\"n\">embed</span><span class=\"bp\">.</span><span class=\"n\">ord</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">partial_order</span><span class=\"bp\">.</span><span class=\"n\">embed</span> <span class=\"n\">x</span> <span class=\"err\">⊆</span> <span class=\"n\">partial_order</span><span class=\"bp\">.</span><span class=\"n\">embed</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">z</span> <span class=\"n\">hz</span><span class=\"o\">,</span> <span class=\"n\">le_trans</span> <span class=\"n\">hz</span> <span class=\"n\">H</span>\n\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 125781096,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524845234
    },
    {
        "content": "<p>is there a more compact version of the title using category language?</p>",
        "id": 125781102,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524845247
    },
    {
        "content": "<p>and I used all three properties of a partial order</p>",
        "id": 125781113,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524845271
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">converse</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">r</span> <span class=\"err\">≼</span><span class=\"n\">o</span> <span class=\"o\">((</span><span class=\"err\">⊆</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">set</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">partial_order</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">le</span> <span class=\"o\">:=</span> <span class=\"n\">inv_image</span> <span class=\"o\">(</span><span class=\"err\">⊆</span><span class=\"o\">)</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">le_refl</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">subset</span><span class=\"bp\">.</span><span class=\"n\">refl</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">le_trans</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">subset</span><span class=\"bp\">.</span><span class=\"n\">trans</span><span class=\"o\">,</span>\n  <span class=\"n\">le_antisymm</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"n\">H1</span> <span class=\"n\">H2</span><span class=\"o\">,</span> <span class=\"n\">H</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"err\">$</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">subset</span><span class=\"bp\">.</span><span class=\"n\">antisymm</span> <span class=\"n\">H1</span> <span class=\"n\">H2</span> <span class=\"o\">}</span>\n</pre></div>",
        "id": 125781335,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524845596
    },
    {
        "content": "<p>and the converse :P</p>",
        "id": 125781342,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524845607
    },
    {
        "content": "<p>wait, that's the wrong converse</p>",
        "id": 125781353,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1524845641
    },
    {
        "content": "<p>It's the enriched Yoneda lemma where the enriching category is the poset of truth values {false -&gt; true}</p>",
        "id": 125783616,
        "sender_full_name": "Reid Barton",
        "timestamp": 1524849425
    },
    {
        "content": "<p><code>{ z | z ≤ x }</code> is the characteristic feature of Yoneda things.</p>",
        "id": 125783685,
        "sender_full_name": "Reid Barton",
        "timestamp": 1524849506
    },
    {
        "content": "<p>I guess there's slightly more going on here because you said \"embedded into a powerset\" = all functions from \\a to V = {false -&gt; true}, while the Yoneda embedding lands in order-reversing maps \\a to V, i.e., lower sets of \\a.</p>",
        "id": 125783948,
        "sender_full_name": "Reid Barton",
        "timestamp": 1524849948
    }
]