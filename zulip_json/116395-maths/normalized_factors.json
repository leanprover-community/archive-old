[
    {
        "content": "<p>Why <a href=\"https://leanprover-community.github.io/mathlib_docs/find/unique_factorization_monoid.normalized_factors\">docs#unique_factorization_monoid.normalized_factors</a> depends on <code>decidable_eq</code>? It is noncomputable anyway.</p>",
        "id": 284255512,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1653783569
    },
    {
        "content": "<p>Same question about <code>factors</code>.</p>",
        "id": 284255522,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1653783598
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110294\">@Johannes HÃ¶lzl</span>, <span class=\"user-mention\" data-user-id=\"111160\">@Jens Wagemaker</span>, and <span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span> are listed as the authors of this file.</p>",
        "id": 284255581,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1653783662
    },
    {
        "content": "<p>Also, I get \"deterministic timeout\" in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ideal.count_normalized_factors_eq\">docs#ideal.count_normalized_factors_eq</a> (see also <a href=\"https://github.com/leanprover-community/mathlib/pull/14444\">#14444</a> - one of the assumptions is not needed).</p>",
        "id": 284291719,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1653838959
    },
    {
        "content": "<p>Ping here.</p>",
        "id": 284427803,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1653972936
    },
    {
        "content": "<p>(Given our current definition of unique factorization monoid,) I'm happy if we delete the dec_eq even looking intuitionistically. Looks like there are no lemmas that would unfold the definition to expose a <code>classical.dec_eq</code>, so I think just an <code>open_locale classical</code> would work here with no complications.</p>",
        "id": 284449064,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1653989572
    },
    {
        "content": "<p>Do I understand correctly that <a href=\"https://github.com/leanprover-community/mathlib/pull/14444\">#14444</a> fixes the timeout?</p>",
        "id": 284449496,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1653989829
    },
    {
        "content": "<p>No. I failed to understand why the timeout happens bot noticed that one assumption is not needed. Could you please adopt <a href=\"https://github.com/leanprover-community/mathlib/pull/14444\">#14444</a>?</p>",
        "id": 284476474,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1654004350
    },
    {
        "content": "<p>Sure. I'm busy the coming weeks so hopefully I can find some time to investigate. If it's taking too long, I'm happy for someone else to take over before I get a chance, of course.</p>",
        "id": 284483480,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1654006906
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/14590\">#14590</a> should fix the <a href=\"https://leanprover-community.github.io/mathlib_docs/find/unique_factorization_monoid.count_normalized_factors_eq\">docs#unique_factorization_monoid.count_normalized_factors_eq</a> timeout</p>",
        "id": 285265981,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1654614773
    }
]