[
    {
        "content": "<p>I have two different questions, both regarding <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Set.image\">docs#Set.image</a></p>",
        "id": 323152222,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1674526071
    },
    {
        "content": "<p>First. What's the deal with the <code>definable</code> condition? I think we discussed it many months before but I don't remember what was said.</p>",
        "id": 323152291,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1674526115
    },
    {
        "content": "<p>I think the purpose of this is that declaring that this set exists is equivalent to replacement, but in practice nothing seems to come out of this.</p>",
        "id": 323152384,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1674526205
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> probably has a good reason for this though.</p>",
        "id": 323152393,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1674526219
    },
    {
        "content": "<p>Second. I want to define an alternate version that takes in a general type (of the appropriate universe) instead of a set. What should it be called?</p>",
        "id": 323152422,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1674526259
    },
    {
        "content": "<p>The intention was to be able to construct choice-free proofs of sets in ZF, and prove instances of replacement without using lean's choice</p>",
        "id": 323152453,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674526287
    },
    {
        "content": "<p>Ah I see, I can get behind that</p>",
        "id": 323152519,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1674526330
    },
    {
        "content": "<p>it wasn't critical for my goals though so I just made a classical instance and didn't worry too much about it</p>",
        "id": 323152525,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674526332
    },
    {
        "content": "<p>I don't understand your second question</p>",
        "id": 323152557,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674526386
    },
    {
        "content": "<p>what is in a general type here?</p>",
        "id": 323152569,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674526394
    },
    {
        "content": "<p>The type signature would be this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo_image</span> <span class=\"o\">{</span><span class=\"bp\">\\</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">\\</span><span class=\"n\">a</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">Set.</span><span class=\"o\">{</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">}}</span> <span class=\"o\">:</span> <span class=\"n\">Set.</span><span class=\"o\">{</span><span class=\"n\">max</span> <span class=\"n\">u</span> <span class=\"n\">v</span><span class=\"o\">}</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 323152670,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1674526500
    },
    {
        "content": "<p>This isn't trivial to construct, it's kind of a more general replacement</p>",
        "id": 323152704,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1674526538
    },
    {
        "content": "<p>I don't even have naming suggestions here. Anything is appreciated.</p>",
        "id": 323161558,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1674532869
    },
    {
        "content": "<p>I guess <code>image'</code> is the easy pic but I'm not a fan</p>",
        "id": 323162077,
        "sender_full_name": "Violeta Hernández",
        "timestamp": 1674533304
    },
    {
        "content": "<p>It looks like <code>Set.range</code> or <code>Set.range'</code> to me</p>",
        "id": 323162093,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1674533323
    }
]