[
    {
        "content": "<p>What are alpha, beta, delta, zeta, eta, iota reudctions?</p>",
        "id": 127179083,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527460207
    },
    {
        "content": "<p><a href=\"http://www.aplusplus.net/lcintro.pdf\" target=\"_blank\" title=\"http://www.aplusplus.net/lcintro.pdf\">http://www.aplusplus.net/lcintro.pdf</a></p>",
        "id": 127179138,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1527460343
    },
    {
        "content": "<p>it might not have some of the fancier reductions, but its got the basics</p>",
        "id": 127179139,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1527460358
    },
    {
        "content": "<p>ncatlab has the rest</p>",
        "id": 127179146,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1527460417
    },
    {
        "content": "<p>ncatlab :o</p>",
        "id": 127179148,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527460424
    },
    {
        "content": "<p>i, too, dislike going to ncatlab first, but for some reason the people there really like dtt and hott and so they have a decent encyclopedia of concepts</p>",
        "id": 127179191,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1527460491
    },
    {
        "content": "<p>i didn't say i don't like ncatlab</p>",
        "id": 127179193,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527460503
    },
    {
        "content": "<p>heh, cross out my 'too' then</p>",
        "id": 127179200,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1527460521
    },
    {
        "content": "<p>the lambda calculus has alpha, beta, eta, and they have the same meaning in DTT</p>",
        "id": 127179341,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527460808
    },
    {
        "content": "<p>delta is definition reduction, replace a definition with its definiens</p>",
        "id": 127179349,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527460829
    },
    {
        "content": "<p>zeta is let reduction, let x := t in s -&gt; s[t/x]</p>",
        "id": 127179351,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527460851
    },
    {
        "content": "<p>iota is for inductive types, a T.rec where the major premise is a constructor of the type</p>",
        "id": 127179361,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527460885
    },
    {
        "content": "<p>actually alpha is not a reduction, and eta is not usually used as a reduction either, they are just equalities</p>",
        "id": 127179403,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527460924
    },
    {
        "content": "<p>and alpha isn't even needed in lean because de bruijn indices make alpha equivalent expressions syntactically equal</p>",
        "id": 127179406,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1527460959
    }
]