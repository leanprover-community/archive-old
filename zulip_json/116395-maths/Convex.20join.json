[
    {
        "content": "<p>Has anybody heard of the convex join? I wrote this code a year ago and it's very useful to deal with convex hulls of unions (mostly for finite sets).</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">analysis.convex.basic</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"bp\">ùïú</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ordered_semiring</span> <span class=\"bp\">ùïú</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"bp\">ùïú</span> <span class=\"n\">E</span><span class=\"o\">]</span>\n\n<span class=\"sd\">/-- The join of two sets is the union of the segments joining them. This can be interpreted as the</span>\n<span class=\"sd\">topological join, but within the original space. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">convex_join</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">E</span> <span class=\"o\">:=</span> <span class=\"bp\">‚ãÉ</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">‚àà</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">‚àà</span> <span class=\"n\">t</span><span class=\"o\">),</span> <span class=\"n\">segment</span> <span class=\"bp\">ùïú</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n</code></pre></div>\n<p>I can't remember whether I made up the name or even the object or not. Looking up \"convex join\" yields <a href=\"https://math.stackexchange.com/questions/1641305/the-join-of-two-convex-sets-is-convex\">this maths stack exchange question</a> and <a href=\"https://en.wikipedia.org/wiki/Join_(topology)\">the topological join</a>, which both look very close to what I have above.</p>",
        "id": 285005693,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1654386398
    },
    {
        "content": "<p>I will PR it anyway because I need it for Stone's separation theorem, but it would be good to get the terminology right, if there is one.</p>",
        "id": 285005753,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1654386510
    },
    {
        "content": "<p>I recall hearing that you could provide a very general axiomatization of convex geometry by just using the convex join, and I believe it referred to this same operation</p>",
        "id": 285011812,
        "sender_full_name": "Violeta Hern√°ndez",
        "timestamp": 1654396072
    },
    {
        "content": "<p>I'm like 95% sure</p>",
        "id": 285011814,
        "sender_full_name": "Violeta Hern√°ndez",
        "timestamp": 1654396076
    },
    {
        "content": "<p>In algebraic geometry, the <a href=\"https://en.m.wikipedia.org/wiki/Join_(algebraic_geometry)\">join</a> of two subsets usually denotes the union of all the lines intersecting both sets.  In that context, the \"sets\" usually have some further properties (irreducible, closed,...).  There are also some other small subtleties, but the concept is very similar.</p>",
        "id": 285019625,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1654408115
    },
    {
        "content": "<p>Here's more of the code if you want to have a look: <a href=\"https://github.com/leanprover-community/mathlib/tree/stone_separation\">branch#stone_separation</a></p>",
        "id": 285035330,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1654433562
    },
    {
        "content": "<p>I find it actually hard to work with finite combinations, so if anyone manages to fill the the two <code>sorry</code> in, I would be glad!</p>",
        "id": 285035356,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1654433602
    },
    {
        "content": "<p>I am very interested in the topic (especially convex geometry) but I just started learning lean so I don't know how quickly I could be of use!</p>",
        "id": 293790251,
        "sender_full_name": "Michelle Olson",
        "timestamp": 1660680006
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"523375\">@Michelle Olson</span>, just fyi we now have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/convex_join\">docs#convex_join</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/exists_convex_convex_compl_subset\">docs#exists_convex_convex_compl_subset</a> in mathlib. You're very welcome to contribute other topics!</p>",
        "id": 294478045,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1661025631
    },
    {
        "content": "<p>thank you for letting me know!</p>",
        "id": 294510297,
        "sender_full_name": "Michelle Olson",
        "timestamp": 1661060540
    }
]