[
    {
        "content": "<p>What is the reason that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/topological_group.to_uniform_space\">docs#topological_group.to_uniform_space</a> is not an instance? I am trying to prove some things about uniform boundedness/Cauchy sequences in topological vector spaces and it is extremely annoying to specify all the uniformity classes by hand.</p>",
        "id": 277555522,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1648938640
    },
    {
        "content": "<p>Surely the issue will be that topological group -&gt; uniform space -&gt; topological space will be different to topological group -&gt; topological space in general (I mean the two topologies will be equal but not definitionally equal, which will mess up type class inference). Is there a way around this though?</p>",
        "id": 277557631,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648941629
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_space\">docs#uniform_space</a></p>",
        "id": 277557638,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648941648
    },
    {
        "content": "<p>Yeah, uniform space extends topological space so I don't immediately see why one can't make the triangle commute. Is the issue simply that the authors didn't want to assume in the non abelian case that you wanted the left or right uniformity? What happens if you make the def a local instance? Does anything break in your file? Here the group is abelian so I can't see any issues (but then again it is getting late here...)</p>",
        "id": 277557728,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648941770
    },
    {
        "content": "<p>ah I think you are not supposed to use <code>[topological_space E] [topological_group E]</code>, but <code>[uniform_space E] [uniform_group E]</code>, then everything works just fine. The documentation in <code>topology.algebra.group</code> and <code>topology.algebra.uniform_group</code> is not really mentioning it though.</p>",
        "id": 277561162,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1648946829
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_group\">docs#uniform_group</a></p>",
        "id": 277561271,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648947007
    },
    {
        "content": "<p>Oh nice. My students also had this sort of problem -- \"how do you make a Banach space?\". There are all these typeclasses but perhaps less documentation about how to use them, and it's got a lot more complicated since back in the day when it was just <code>[topological_space]</code></p>",
        "id": 277561349,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648947126
    },
    {
        "content": "<p>Yes, the answer is almost surely that you want to use <code>[uniform_space E] [uniform_group E]</code>.</p>",
        "id": 277596428,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1648974645
    },
    {
        "content": "<p>Is there any reason to use <code>[topological_space E] [topological_group E]</code> at all? Even in the case that you don't need the uniform structure?</p>",
        "id": 277601649,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1648977544
    },
    {
        "content": "<p>Not really. I also know I should make a big refactor at some point to also allow using the uniform structure on non-commutative groups, but I've been postponing this forever since nobody ever needed it.</p>",
        "id": 277602034,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1648977751
    },
    {
        "content": "<p>For my purposes everything is fine, it is just a bit unintuitive. Before Lean I have never heard of uniformity and <code>topological_add_group</code> looks like the thing one needs for topological vector spaces. I will write some documentation for this today.</p>",
        "id": 277602615,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1648978052
    },
    {
        "content": "<p>I have a related question. I will soon define the strong topology/uniform structure on <code>E â†’L F</code>, using the general setup in <a href=\"https://github.com/leanprover-community/mathlib/pull/13073\">#13073</a>. In the linear case, one can define the topology directly from the topology on <code>F</code> without referencing the uniform structure. Is this worth doing in Lean, or do we assume that any topological vector space has a <code>uniform_space</code> instance anyway ? Would it have better definitional properties ?</p>",
        "id": 277630188,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1648993302
    },
    {
        "content": "<p>I am not really qualified to answer that, but I would use the uniform structure. As Heather pointed out the uniform structure might not be defeq to the one coming from the topological group, so if you need uniformities you might run into annoying issues if you don't use <code>uniform_space</code>.</p>",
        "id": 277937506,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1649189673
    }
]