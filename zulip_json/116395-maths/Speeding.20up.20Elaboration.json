[
    {
        "content": "<p>Hello,</p>\n<p>So I've been working on this with <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> , and one issue that is coming up is how long it takes for Lean to finish checking the file.</p>\n<p><a href=\"https://gist.github.com/shingtaklam1324/7939604394643c1ac1b0e70b0022548e\" title=\"https://gist.github.com/shingtaklam1324/7939604394643c1ac1b0e70b0022548e\">https://gist.github.com/shingtaklam1324/7939604394643c1ac1b0e70b0022548e</a></p>\n<p>I suspect it's to do with <code>ring</code>, since commenting out <code>ring</code> and replacing it with <code>sorry</code> in <code>structure_theorem</code> speeds it up significantly, from 11 seconds to 2.</p>\n<p>Also, <code>structure_classification</code> takes around 2 seconds to parse. Is this normal?</p>",
        "id": 191882226,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1585228664
    },
    {
        "content": "<p>Nice work! You should update the docstring now you've proved <code>structure_classification</code>. Can you use this stuff to prove the STEP question we started with? That would be a cool finish :-)</p>\n<p>But on the other hand I can see that you don't really want to add code at the bottom of the file because the orange bars are getting tedious.</p>\n<p>[Background: I wrote the skeleton and Shing proved the theorems]</p>",
        "id": 191882470,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585228769
    },
    {
        "content": "<p>yeah don't use <code>ring</code></p>",
        "id": 191885838,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1585230225
    },
    {
        "content": "<p>So use ten rewrites instead??</p>",
        "id": 191886811,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585230620
    },
    {
        "content": "<p>Or are they all easy?</p>",
        "id": 191886826,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585230625
    },
    {
        "content": "<p>If they're all easy, why is <code>ring</code> taking a long time -- <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  do you have any idea?</p>",
        "id": 191886861,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585230643
    },
    {
        "content": "<p>my first guess if <code>ring</code> is slow is the defeq check</p>",
        "id": 191886971,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585230691
    },
    {
        "content": "<p>hm, looks like the default unfolding mode is <code>reducible</code>, it shouldn't really start unfolding unless you use <code>ring!</code></p>",
        "id": 191887207,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585230778
    },
    {
        "content": "<p>next guess is typeclass inference</p>",
        "id": 191887260,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585230801
    },
    {
        "content": "<p>I try not to use any lean builtin tactics because they all have bad edge case behavior, but it's not 100%</p>",
        "id": 191887457,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585230884
    },
    {
        "content": "<p>oh, we're talking about polynomials, so it's almost certainly typeclass inference</p>",
        "id": 191887584,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585230946
    },
    {
        "content": "<p>One thing you can try is to break out just the statement of the theorem you want to prove by <code>ring</code> as a separate lemma, and see if it's still slow</p>",
        "id": 191887778,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585231018
    },
    {
        "content": "<p>If so, try replacing the base type with a variable of type comm_ring and see if it's still slow</p>",
        "id": 191887837,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1585231042
    },
    {
        "content": "<p>These are great ideas, thanks.</p>",
        "id": 191887896,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585231063
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266440\">@Shing Tak Lam</span> get in touch with me offline if you don't understand what Mario is suggesting.</p>",
        "id": 191887949,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585231081
    },
    {
        "content": "<p>Alright that worked. Extracting the goal and proving that separately sped it up significantly. 10ms for the lemma and 2.6 seconds for the main theorem. Much faster than the 11 seconds previously.</p>",
        "id": 191888683,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1585231401
    },
    {
        "content": "<p>Nice.</p>",
        "id": 191888714,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585231423
    },
    {
        "content": "<p>So now you can update the gist and get to work on doing the STEP question :-)</p>",
        "id": 191888805,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585231458
    },
    {
        "content": "<p>I'll extract the goal from the other places where it's slow first.</p>",
        "id": 191888859,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1585231495
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 191889211,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1585231675
    },
    {
        "content": "<p>Yeah, I think the general lesson is that structures are very-super-linear in elaboration time, and breaking out anything but the most trivial of proofs in fields into separate lemmas is a good idea.</p>",
        "id": 191958627,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1585262778
    }
]