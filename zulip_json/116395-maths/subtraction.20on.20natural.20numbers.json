[
    {
        "content": "<p>Is there a name and notation to distinguish between subtraction on natural numbers and subtraction on integers? This is for my dissertation rather than a Lean proof</p>",
        "id": 124913490,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1523412943
    },
    {
        "content": "<p>Subtraction on natural numbers is sometimes called \"monus\" and denoted with a subtraction sign with a dot over it, like the top half of an american division sign</p>",
        "id": 124914007,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523414260
    },
    {
        "content": "<p>like so: ∸</p>",
        "id": 124914047,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523414293
    },
    {
        "content": "<p>Thanks! Is there a LaTeX command for that?</p>",
        "id": 124914053,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1523414331
    },
    {
        "content": "<p>wiki says <code>\\dot -</code></p>",
        "id": 124914058,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523414348
    },
    {
        "content": "<p>you will probably have to play with spacing to get it to look nice</p>",
        "id": 124914101,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523414406
    },
    {
        "content": "<p>Alright then</p>",
        "id": 124914108,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1523414459
    },
    {
        "content": "<p>Short answer: use <code>unicode-math</code> and type ∸<br>\nLong answer: if for some reason, you don't want to use <code>unicode-math</code>, use its documentation: <a href=\"http://mirrors.ctan.org/macros/latex/contrib/unicode-math/unimath-symbols.pdf\" target=\"_blank\" title=\"http://mirrors.ctan.org/macros/latex/contrib/unicode-math/unimath-symbols.pdf\">http://mirrors.ctan.org/macros/latex/contrib/unicode-math/unimath-symbols.pdf</a> search for \"dot above\" and get to page 17 where you see that ∸ is translated to <code>\\dotminus</code>.  The problem is that you need to find which package defines this (an information which is irrelevant if you go with unicode-math). Very quick google latex dotminus brings: <a href=\"https://tex.stackexchange.com/questions/360069/what-symbol-for-primitive-recursive-cutoff-minus\" target=\"_blank\" title=\"https://tex.stackexchange.com/questions/360069/what-symbol-for-primitive-recursive-cutoff-minus\">https://tex.stackexchange.com/questions/360069/what-symbol-for-primitive-recursive-cutoff-minus</a></p>",
        "id": 124920713,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1523429383
    },
    {
        "content": "<p>Actually maybe using this symbol in Lean could make sense</p>",
        "id": 124920758,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1523429418
    },
    {
        "content": "<p>It would help mathematicians notice this is not the right operation</p>",
        "id": 124920760,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1523429435
    },
    {
        "content": "<p>I think there's an argument for using some sort of modification on all the total extensions of the usual functions as well ;-)</p>",
        "id": 124920768,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1523429473
    },
    {
        "content": "<p>It's a thought, but I'd hate to have to explain to newcomers why <code>3 - 2 = 1</code> doesn't work</p>",
        "id": 124920771,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523429482
    },
    {
        "content": "<p>Yeah, this is not great either</p>",
        "id": 124920777,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1523429497
    },
    {
        "content": "<p>Can we have both?</p>",
        "id": 124920779,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1523429508
    },
    {
        "content": "<p>Yes but I have to explain why 2 - 3 gets evaluated as something wrong, which is worse</p>",
        "id": 124920780,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1523429511
    },
    {
        "content": "<p>Like, the lib uses the funny symbol but users can still use -</p>",
        "id": 124920822,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1523429527
    },
    {
        "content": "<p>And when they complain about 2 - 3 we tell them about ∸</p>",
        "id": 124920824,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1523429544
    },
    {
        "content": "<p>I don't know</p>",
        "id": 124920825,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1523429548
    },
    {
        "content": "<p>I am not seriously advocating changes to <code>-</code> and <code>/</code>, however it was the realisation that I could think about them in this way which made me realise that the \"make it total\" system would not lead to contradictions.</p>",
        "id": 124920826,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1523429554
    },
    {
        "content": "<p>It's in core, so this isn't changing anyway</p>",
        "id": 124920827,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523429569
    },
    {
        "content": "<p>this would break too much of the \"programming\" part of lean I think</p>",
        "id": 124920832,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523429589
    },
    {
        "content": "<p>Maybe obscure unicode characters which look the same and can be redefined by users is the best option :-)</p>",
        "id": 124920835,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1523429623
    },
    {
        "content": "<p>it would be hard to support a separate notation without a separate constant, and that would then mess up simp lemmas and such</p>",
        "id": 124920837,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523429639
    },
    {
        "content": "<p>It's plausible that you could make a local notation (for <code>@has_sub.sub nat _</code>) work</p>",
        "id": 124920885,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523429682
    },
    {
        "content": "<p>My favorite way to reason about <code>2 - 3</code> is to consider that <code>2 - 3 : nat</code> (since <code>-</code> is a binary op on <code>nat</code>) so it can't possibly be the \"right\" answer. Now just consider, what's the next best option?</p>",
        "id": 124920948,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523429855
    },
    {
        "content": "<p>I think it suffices to just remind people that this isn't a partial function</p>",
        "id": 124920993,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1523429913
    }
]