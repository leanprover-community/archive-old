[
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/finsupp.prod\">docs#finsupp.prod</a> returns the product of a <code>finsupp</code> over all nonzero values. But isn't that bit weird compared to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finsupp.sum\">docs#finsupp.sum</a>? <code>finsupp.sum</code> is literally the sum of all values of a finitely supported function, but the product isn't. Are we missing <code>α →₁ β</code> the multiplicative version of <code>α →₀ β</code>, or does it simply not turn up anywhere?</p>",
        "id": 269094611,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643025443
    },
    {
        "content": "<p>In particular, <code>finsupp.prod</code> is always nonzero (when we have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/no_zero_divisors\">docs#no_zero_divisors</a>).</p>",
        "id": 269099252,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1643028184
    },
    {
        "content": "<p>There's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.mul_indicator\">docs#set.mul_indicator</a> that gets used in finprod</p>",
        "id": 269108257,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1643032459
    },
    {
        "content": "<p>I don't think sum is any weirder than prod; <code>f.sum g</code> is weird on any map that doesn't satisfy <code>g 0 = 0</code>, while <code>f.prod g</code> is weird on any map that doesn't satisfy <code>g 0 = 1</code></p>",
        "id": 269171933,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1643057988
    }
]