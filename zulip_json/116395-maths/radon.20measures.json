[
    {
        "content": "<p>Has anything been done with Radon measures? <a href=\"https://en.wikipedia.org/wiki/Radon_measure\">https://en.wikipedia.org/wiki/Radon_measure</a><br>\nI don't think mathlib has anything about them, so far.</p>",
        "id": 290992457,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658902187
    },
    {
        "content": "<p>I guess mathlib has all the ingredients for the measure theoretic definition (inner regular, locally finite). But what about the functional analytic approach? Do we have ctu functions with compact support?</p>",
        "id": 290994100,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658903569
    },
    {
        "content": "<p>Aha <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_compact_support\">docs#has_compact_support</a> exists. But not the bundled locally convex TVS.</p>",
        "id": 290994578,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658903927
    },
    {
        "content": "<p>Not exactly an answer to <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>'s question, but in my opinion related:</p>\n<p><span class=\"user-mention\" data-user-id=\"513978\">@Jesse Reimann</span> is working on the Riesz-Markov-Kakutani representation theorem (i.e., characterizing positive linear functionals on compactly supported continuous functions on locally compact Hausdorff spaces as regular Borel measures). First in compact Hausdorff spaces, though, in which case the relevant measures are simply finite Borel measures (regularity is automatic) and there is no need to require compact support, so one in fact simply characterizes the dual of <code>X →ᵇ ℝ≥0</code> (indeed the full dual <code>(X →ᵇ ℝ≥0) →ₗ[ℝ≥0] ℝ≥0</code>, which just happens to coincide with the mere topological dual <code>(X →ᵇ ℝ≥0) →L[ℝ≥0] ℝ≥0</code>). The locally compact case should not be an awful lot harder (although you never know what Lean throws at you).</p>",
        "id": 291025876,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1658924624
    },
    {
        "content": "<p>Thanks, maybe we should just go with that dual space, and postpone the measure theoretic definition to some later point in time.</p>",
        "id": 291042798,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658932316
    },
    {
        "content": "<p>Defining <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>c</mi></msub><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C_c(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> might be a good way to test whether the locally convex space library has everything one needs for concrete applications.</p>",
        "id": 291043000,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1658932417
    },
    {
        "content": "<p>Well I defined <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>C</mi><mi>c</mi><mi>n</mi></msubsup><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C_c^n(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-2.453em;margin-left:-0.0715em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> in my distribution projects, and it went quite well, so that should be okay. If anyone needs it I can work on this.</p>",
        "id": 291127346,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1658967655
    },
    {
        "content": "<p>(Maybe « It went well » is over optimistic, I should say « I added the missing API to make it work well »)</p>",
        "id": 291128156,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1658968553
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"373986\">Kalle Kytölä</span> <a href=\"#narrow/stream/116395-maths/topic/radon.20measures/near/291025876\">said</a>:</p>\n<blockquote>\n<p>Not exactly an answer to <span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span>'s question, but in my opinion related:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"513978\">Jesse Reimann</span> is working on the Riesz-Markov-Kakutani representation theorem (i.e., characterizing positive linear functionals on compactly supported continuous functions on locally compact Hausdorff spaces as regular Borel measures). First in compact Hausdorff spaces, though, in which case the relevant measures are simply finite Borel measures (regularity is automatic) and there is no need to require compact support, so one in fact simply characterizes the dual of <code>X →ᵇ ℝ≥0</code> (indeed the full dual <code>(X →ᵇ ℝ≥0) →ₗ[ℝ≥0] ℝ≥0</code>, which just happens to coincide with the mere topological dual <code>(X →ᵇ ℝ≥0) →L[ℝ≥0] ℝ≥0</code>). The locally compact case should not be an awful lot harder (although you never know what Lean throws at you).</p>\n</blockquote>\n<p>This is really nice btw ! Which proof are you following ?</p>",
        "id": 291132444,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1658973881
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> <a href=\"#narrow/stream/116395-maths/topic/radon.20measures/near/291132444\">said</a>:</p>\n<blockquote>\n<p>This is really nice btw ! Which proof are you following ?</p>\n</blockquote>\n<p>We're following Rudin's proof - but at least for compact X we are shortening the construction of the measure by instead using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/measure_theory.content\">docs#measure_theory.content</a>.</p>",
        "id": 291142205,
        "sender_full_name": "Jesse Reimann",
        "timestamp": 1658984979
    }
]