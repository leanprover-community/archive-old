[
    {
        "content": "<p>Is it possible to (a) prove that the first order theory of algebraically closed fields is complete (via quantifier elimination or otherwise) and (b) use such a statement/proof to actually deduce things about the complex numbers (or arbitrary algebraically closed fields)?</p>\n<p>For instance, I am thinking that Hilbert's Nullstellensatz can be proved quite quickly using quantifier elimination.</p>",
        "id": 207133977,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597665352
    },
    {
        "content": "<p>Sure, but I don't think that (a) is very easy. It will require quite a bit of prior work.</p>",
        "id": 207134122,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597665478
    },
    {
        "content": "<p>I do think it would be nice to have some more model theory in mathlib, in general</p>",
        "id": 207134217,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597665542
    },
    {
        "content": "<p>What about focusing on quantifier elimination?  For algebraically closed fields, quantifier elimination and elimination theory are very close and formalizing this might be more at hand?</p>",
        "id": 207134342,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597665615
    },
    {
        "content": "<p>For instance, is it in theory possible in Lean to prove quantifier elimination by some form of induction on propositions, to show that every proposition reduces to true or false constructively?  Is there an \"induction on proposition\"?</p>",
        "id": 207134406,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597665678
    },
    {
        "content": "<p>Something along the lines of: a proposition either begins with a <code>\\exist</code> or a <code>\\forall</code>.  in the first case, do something, in the second case, negate, push negations through and repeat</p>",
        "id": 207134535,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597665752
    },
    {
        "content": "<p>I think unfortunately one has model first order sentences as some kind of inductive type. The closest thing I know of is in the flypitch project</p>",
        "id": 207134600,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597665795
    },
    {
        "content": "<p>Would working with the first order theory of ACF, possibly make this any easier?</p>",
        "id": 207134714,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597665859
    },
    {
        "content": "<p>Even just proving something about nested sequences of <code>\\exist</code>s and <code>\\forall</code>s might be a good testing ground</p>",
        "id": 207134765,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597665914
    },
    {
        "content": "<p>I think with the current stuff from mathlib it would be easier to try to prove the AG formulation a la Chevalley's theorem.</p>",
        "id": 207134897,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597665993
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span> Sure this can be done. Flypitch probably did a lot of similar stuff. But right now, there is no definition in mathlib of what it means to be a first order formula in the language of \"whatever\"</p>",
        "id": 207134923,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597666021
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/116395-maths/topic/model.20completeness.20of.20algebraically.20closed.20fields/near/207134897\">said</a>:</p>\n<blockquote>\n<p>I think with the current stuff from mathlib it would be easier to try to prove the AG formulation a la Chevalley's theorem.</p>\n</blockquote>\n<p>I was actually trying to get a proof of Chevalley's theorem and this is how I got to this question...</p>",
        "id": 207134972,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597666060
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/116395-maths/topic/model.20completeness.20of.20algebraically.20closed.20fields/near/207134923\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> Sure this can be done. Flypitch probably did a lot of similar stuff. But right now, there is no definition in mathlib of what it means to be a first order formula in the language of \"whatever\"</p>\n</blockquote>\n<p>Ok, I do not know what Flypitch is, but I get the idea that this is not a viable approach, at least for the moment!</p>",
        "id": 207135062,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597666103
    },
    {
        "content": "<p>I think Chevalley's theorem is approachable in lean without going through general stuff about quantifier elimination</p>",
        "id": 207135313,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597666307
    },
    {
        "content": "<p>The first step would be to formalize constructive sets in the Zariski topology</p>",
        "id": 207135389,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597666338
    },
    {
        "content": "<p>This would presumably be done as some inductive relation building on top of the Zariski topology.</p>",
        "id": 207135440,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597666377
    },
    {
        "content": "<p>And inducting on this definition is essentially equivalent to induction on the quantifiers in a given first order formula</p>",
        "id": 207135498,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597666426
    },
    {
        "content": "<p>so you could make constructible sets as an inductive Prop, like the way Alex Best did topology generated by a collection of sets in LFTCM</p>",
        "id": 207135607,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597666505
    },
    {
        "content": "<p>Yeah that's approximately what I was thinking</p>",
        "id": 207135708,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597666572
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321459\">@Damiano Testa</span>  <a href=\"https://github.com/flypitch/\">https://github.com/flypitch/</a> is a formal verification of independence of the continuum hypothesis. Arguably the biggest milestone that Lean can brag about (-;</p>",
        "id": 207135712,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597666575
    },
    {
        "content": "<p>oh in fact he even did constructible sets:<br>\n<a href=\"https://github.com/leanprover-community/lftcm2020/blob/1948bfaf58e3b340b39cd9b8366aa4f13e5ffa7d/src/exercises_sources/wednesday/afternoon/topological_spaces.lean#L117-L122\">https://github.com/leanprover-community/lftcm2020/blob/1948bfaf58e3b340b39cd9b8366aa4f13e5ffa7d/src/exercises_sources/wednesday/afternoon/topological_spaces.lean#L117-L122</a></p>",
        "id": 207135715,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597666576
    },
    {
        "content": "<p>We need the Zariski topology too</p>",
        "id": 207135772,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597666637
    },
    {
        "content": "<p>that might be there</p>",
        "id": 207135787,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597666653
    },
    {
        "content": "<p>In the sense of \"classical\" ag</p>",
        "id": 207135788,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597666661
    },
    {
        "content": "<p>Zariski top on prime spectrum is in algebraic_geometry.prime_spectrum. I guess we might be talking at cross purposes here. I was envisaging that Chevalley's theorem was some statement about finitely presented morphisms of schemes</p>",
        "id": 207136038,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597666835
    },
    {
        "content": "<p>Oh sure, but the original question was about quantifier elimination in algebraically closed fields, so for that it's just Chevalley's theorem for varieties over the alg. cl field in question</p>",
        "id": 207136240,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597666976
    },
    {
        "content": "<p>But is the Zariski part of the topology needed much more than just to say this: let R be a ring and c an element of R.  The set of all prime ideals containing c is closed and \"essentially equal to\" Spec R/c, the complement is open and \"essentially equal to\" Spec R_c?</p>",
        "id": 207136251,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597666984
    },
    {
        "content": "<p>To go from here to the general case of finite presentation, indeed it is mostly playing around with quasi-compact opens, retrocompactness and complements of finitely generated ideals</p>",
        "id": 207136298,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597667038
    },
    {
        "content": "<p>(I am thinking of the proof of Chevalley's theorem in the stacks project:<br>\n<a href=\"https://stacks.math.columbia.edu/tag/00F5\">https://stacks.math.columbia.edu/tag/00F5</a><br>\n)</p>",
        "id": 207136529,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597667176
    },
    {
        "content": "<p>yeah that should be fun to do in Lean, it will probably teach you a lot</p>",
        "id": 207136626,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597667270
    },
    {
        "content": "<p>I am trying to do it, in fact!  Ahahaha  (But you probably already knew this! ;)</p>",
        "id": 207136725,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597667315
    },
    {
        "content": "<p>(Anyway, now I am the one who has to go!  Bye!)</p>",
        "id": 207136742,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1597667337
    },
    {
        "content": "<p>oh this uses the EGA version of constructible, with retrocompact in, so the link to constructible I sent is no good</p>",
        "id": 207136951,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597667465
    },
    {
        "content": "<p>right, I guess it has to use this version because there are no Noetherian hypotheses</p>",
        "id": 207136974,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597667484
    },
    {
        "content": "<p>I’m starting to adapt some flypitch to conventions that seem to match the rest of mathlib a little better at a branch, <code>mathlib:fol_project</code>.</p>",
        "id": 207167936,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1597683140
    },
    {
        "content": "<p>I’m still not particularly close, but I have a definition of definable sets that doesn’t require formulas.</p>",
        "id": 207168360,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1597683369
    },
    {
        "content": "<p>One thing I noticed is that I couldn’t find a super-suitable definition of the Boolean algebra generated by a particular subset. Perhaps I just need to look again, but I think that’d be useful for defining constructible</p>",
        "id": 207168471,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1597683449
    }
]