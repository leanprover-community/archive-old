[
    {
        "content": "<p>I think this was maybe discussed before but is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msup><mi>x</mi><mi>n</mi></msup><mi mathvariant=\"normal\">/</mi><mi>n</mi><mo stretchy=\"false\">!</mo></mrow><annotation encoding=\"application/x-tex\">\\sum_{n = 0}^{p-1} x^n / n!</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2537em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">!</span></span></span></span> a useful thing to consider in characteristic <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>?</p>",
        "id": 281340858,
        "sender_full_name": "Reid Barton",
        "timestamp": 1651775858
    },
    {
        "content": "<p>I think we decided it wasn't</p>",
        "id": 281341004,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651775919
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/exponential.20in.20banach.20algebras/near/278641841\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/exponential.20in.20banach.20algebras/near/278641841</a></p>",
        "id": 281341081,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651775950
    },
    {
        "content": "<p>Or rather, even if that is interesting it makes no sense to call it <code>exp</code> since it's only equal to the usual definition of exp under mathlibs \"stupid\" division.</p>",
        "id": 281341269,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651776031
    },
    {
        "content": "<p>Changing the definition of <code>exp</code> to just use <code>rat</code> would probably be fine, although it puts the burden on the caller to have <code>[algebra rat A]</code> around.</p>",
        "id": 281341873,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651776311
    },
    {
        "content": "<p>Right, I remember this conversation now.</p>",
        "id": 281342386,
        "sender_full_name": "Reid Barton",
        "timestamp": 1651776589
    },
    {
        "content": "<p>The definition of the exponential could even be: if A is a Q-algebra (i.e. every positive integer has an inverse in A) then [normal tsum thing] else 1</p>",
        "id": 281342718,
        "sender_full_name": "Reid Barton",
        "timestamp": 1651776726
    },
    {
        "content": "<p>&amp; then you have lemmas describing the terms if A is a char_zero field or an <code>algebra Q</code> or whatever other thing</p>",
        "id": 281342798,
        "sender_full_name": "Reid Barton",
        "timestamp": 1651776773
    },
    {
        "content": "<p>I think <code>normed_algebra Q A</code> from the other conversation was kind of a red herring, unless I just don't understand where it gets used</p>",
        "id": 281342907,
        "sender_full_name": "Reid Barton",
        "timestamp": 1651776837
    },
    {
        "content": "<p>Alternatively, if the current definition is desirable for some reason, it would be easy to reproduce its behavior as well without the definition depending on the field K</p>",
        "id": 281343546,
        "sender_full_name": "Reid Barton",
        "timestamp": 1651777152
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/116395-maths/topic/.22exp.22.20in.20char.20p/near/281342907\">said</a>:</p>\n<blockquote>\n<p>I think <code>normed_algebra Q A</code> from the other conversation was kind of a red herring, unless I just don't understand where it gets used</p>\n</blockquote>\n<p>Yes, it became a red herring because <a href=\"https://leanprover-community.github.io/mathlib_docs/find/exp\">docs#exp</a> no longer requires a <code>normed_algebra</code>; but it used to. Now it just requires a topological algebra, aka <code>algebra</code> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_continuous_const_smul\">docs#has_continuous_const_smul</a>.</p>",
        "id": 281347055,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651778781
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/116395-maths/topic/.22exp.22.20in.20char.20p/near/281342798\">said</a>:</p>\n<blockquote>\n<p>&amp; then you have lemmas describing the terms if A is a char_zero field or an <code>algebra Q</code> or whatever other thing</p>\n</blockquote>\n<p>Should the lemmas involving the radius of convergence of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/exp_series\">docs#exp_series</a> be stated in terms of an arbitrary field still, or just Q?</p>",
        "id": 281347144,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651778845
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/.22exp.22.20in.20char.20p/near/281347055\">said</a>:</p>\n<blockquote>\n<p>Now it just requires a topological algebra, aka <code>algebra</code> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_continuous_const_smul\">docs#has_continuous_const_smul</a>.</p>\n</blockquote>\n<p>Actually the latter isn't even needed: <a href=\"https://github.com/leanprover-community/mathlib/pull/13987\">#13987</a></p>",
        "id": 281413778,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651828895
    }
]