[
    {
        "content": "<p>We currently don't have the topology on continuous maps when only a topology is available on the (co)domains; If we had this, we could relax a lot of typeclasses.</p>",
        "id": 281707504,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652112627
    },
    {
        "content": "<p>(cc <span class=\"user-mention\" data-user-id=\"243312\">@Jason KY.</span> who had some thoughts on discord about that)</p>",
        "id": 281707797,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652112753
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113488-general/topic/Undergraduate.20math.20list/near/281707797\">said</a>:</p>\n<blockquote>\n<p>(cc <span class=\"user-mention silent\" data-user-id=\"243312\">Jason KY.</span> who had some thoughts on discord about that)</p>\n</blockquote>\n<p>I'll copy what I wrote on discord here (the question is how to generalize the topology on the space of bounded linear operators between normed spaces to TVS. No promise what I've written is at all correct):</p>\n<p>Since the space of operators is also a topological vector space it suffices to give a basis of open sets at 0. I think since this basis for the topology induced by the norm is given by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>B</mi><mi>ϵ</mi></msub><mo stretchy=\"false\">(</mo><mn>0</mn><mo stretchy=\"false\">)</mo><mo>=</mo><mo stretchy=\"false\">{</mo><mi>T</mi><mo stretchy=\"false\">(</mo><msub><mi>B</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>ϵ</mi><msub><mi>B</mi><mn>1</mn></msub><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">B_\\epsilon(0) = \\{T(B_1) \\le \\epsilon B_1\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">ϵ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">ϵ</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">}</span></span></span></span> we can do the similar for the not norm case. So since bounded is defined in general for all TVS (Yael pointed out this is the von Nuemann boundedness which we have), maybe a compatible basis at 0 is all sets of the form  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mi>T</mi><mo stretchy=\"false\">(</mo><mi>U</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>V</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{T(U) \\le V\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"mclose\">}</span></span></span></span> for bounded open neighborhood <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>U</mi><mo separator=\"true\">,</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">U, V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">U</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> of 0 in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi></mrow><annotation encoding=\"application/x-tex\">Y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span></span></span></span> resp.</p>",
        "id": 281708724,
        "sender_full_name": "Jason KY.",
        "timestamp": 1652113147
    },
    {
        "content": "<p>If we attempt to put a topology on Hom(X,Y) when only one of X and Y has a topology, then this will almost surely be the wrong topology in the case where both X and Y have a topology (for example, one often wants to take the compact-open topology, or the weak or strong dual topology for a space of linear maps to the ground field etc etc). Is this not an issue?</p>",
        "id": 281714372,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652115613
    },
    {
        "content": "<p>I'm not sure if I understand. My suggestion requires both X and Y to be topological vector spaces so it won't work if only one of X and Y has a topology</p>",
        "id": 281714988,
        "sender_full_name": "Jason KY.",
        "timestamp": 1652115877
    },
    {
        "content": "<p>I think Kevin's point still stands. There's a lot of operator topologies. I guess the point is just that you want to weaken the type class assumptions on <code>continuous_linear_map</code>?</p>",
        "id": 281715860,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1652116237
    },
    {
        "content": "<p>You can't even talk about continuous linear maps if you don't have a topology on both sides. I'm not sure I understand what is being proposed here.</p>",
        "id": 281715953,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652116280
    },
    {
        "content": "<p>Kevin there's a topology on both spaces.</p>",
        "id": 281716036,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1652116317
    },
    {
        "content": "<p>The question is about the topology on the space of linear maps between them.</p>",
        "id": 281716172,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1652116364
    },
    {
        "content": "<p>In finite dimensions, for t2 TVSs over a complete field, all linear maps are continuous and so the space of linear maps is a subset of the space of continuous maps. So if we take the compact-open topology on continuous maps we get a topology on the subset of linear maps. I expect when both domain+codomain are finite-dimensional all topologies are equal.</p>",
        "id": 281716409,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1652116449
    },
    {
        "content": "<p>For TVS topologies I think that's true. But aren't we talking about the infinite dimensional case too?</p>",
        "id": 281716569,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1652116522
    },
    {
        "content": "<p>I'm not clear on what the proposal is: I just wanted to make this one remark which I expected was known to some but not all people in this thread!</p>",
        "id": 281716621,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1652116550
    },
    {
        "content": "<p>My understanding is that we have the topology induced by the operator norm on bounded linear maps between normed spaces and Eric wants a compatible topology on bounded linear maps between TVS</p>",
        "id": 281716622,
        "sender_full_name": "Jason KY.",
        "timestamp": 1652116552
    },
    {
        "content": "<p>Oh btw Mathlib will soon know the above: <a href=\"https://github.com/leanprover-community/mathlib/pull/13460\">#13460</a></p>",
        "id": 281716699,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1652116574
    },
    {
        "content": "<p>Yes but you can't register this topology as an instance because otherwise, when both spaces are normes spaces, you will have two non defeq topologies on the space of continuous linear maps.</p>",
        "id": 281716844,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1652116652
    },
    {
        "content": "<p>One could maybe bundle the topology in a normed vector space? I am more worried about e.g. the weak and strong topologies on the dual space.</p>",
        "id": 281717166,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652116764
    },
    {
        "content": "<p>We already have type synonyms for that.</p>",
        "id": 281717223,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1652116789
    },
    {
        "content": "<p>oh nice!</p>",
        "id": 281717294,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652116806
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/weak_dual\">docs#weak_dual</a></p>",
        "id": 281717307,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1652116812
    },
    {
        "content": "<p>If the question is: \"will the topology corresponding to the von Neumann bornology work?\" then I think the answer should be yes for the reason <span class=\"user-mention\" data-user-id=\"243312\">@Jason KY.</span> explained.</p>",
        "id": 281717818,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1652116998
    },
    {
        "content": "<p>You would have to bundle the topology into normed space though.</p>",
        "id": 281718034,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1652117073
    },
    {
        "content": "<p>actually, isn't there a way to do this? I mean, can't we put the topology on the linear maps, and then when we declare the metric / normed group instances we can use one of those \"inducing\" constructions that makes sure the generated topology agrees in a defeq way?</p>",
        "id": 281718639,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1652117391
    },
    {
        "content": "<p>Doesn't <span class=\"user-mention\" data-user-id=\"268315\">@Anatole Dedecker</span> have a PR for topologies on the space of linear maps?</p>",
        "id": 281719086,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1652117608
    },
    {
        "content": "<p>Sorry all for the vagueness, I extracted this from a thread it didn't belong in but didn't clean up the first post enough to be clear!</p>",
        "id": 281723218,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652119631
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"412682\">Moritz Doll</span> <a href=\"#narrow/stream/116395-maths/topic/Topology.20on.20continuous_maps.20without.20a.20norm/near/281719086\">said</a>:</p>\n<blockquote>\n<p>Doesn't <span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> have a PR for topologies on the space of linear maps?</p>\n</blockquote>\n<p>Yes, that's</p>\n<p><span class=\"user-mention silent\" data-user-id=\"240862\">Oliver Nash</span> <a href=\"#narrow/stream/116395-maths/topic/Topology.20on.20continuous_maps.20without.20a.20norm/near/281716699\">said</a>:</p>\n<blockquote>\n<p>Oh btw Mathlib will soon know the above: <a href=\"https://github.com/leanprover-community/mathlib/pull/13460\">#13460</a></p>\n</blockquote>\n<p>But I think doesn't fully address this thread</p>",
        "id": 281746355,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652130685
    },
    {
        "content": "<p>Can you clarify what the question is? I can't really understand the first post</p>",
        "id": 281747143,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652131076
    },
    {
        "content": "<p>Sure, I'm asking for a </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">noncomputable</span> <span class=\"kd\">instance</span> <span class=\"n\">continuous_linear_map.topological_space</span>\n  <span class=\"o\">{</span><span class=\"bp\">𝕜</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"bp\">𝕜₂</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_2</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_4</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_6</span><span class=\"o\">}</span>\n  <span class=\"c1\">-- maybe doesn't need `field`?</span>\n  <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"bp\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"bp\">𝕜₂</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"bp\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"bp\">𝕜₂</span> <span class=\"n\">F</span><span class=\"o\">]</span>\n  <span class=\"c1\">-- maybe needs `[topological_add_group E] [has_continuous_smul 𝕜 E]` etc?</span>\n  <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">F</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">σ₁₂</span> <span class=\"o\">:</span> <span class=\"bp\">𝕜</span> <span class=\"bp\">→+*</span> <span class=\"bp\">𝕜₂</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring_hom_isometric</span> <span class=\"n\">σ₁₂</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n<span class=\"n\">topological_space</span> <span class=\"o\">(</span><span class=\"n\">E</span> <span class=\"bp\">→</span><span class=\"n\">SL</span><span class=\"o\">[</span><span class=\"n\">σ₁₂</span><span class=\"o\">]</span> <span class=\"n\">F</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>which is compatible with the norm induced by <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_linear_map.to_normed_group\">docs#continuous_linear_map.to_normed_group</a></p>",
        "id": 281749120,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652132126
    },
    {
        "content": "<p>The motivation would be to be able to talk about continuous bi-linear maps without having to choose a particular norm on the codomain.</p>",
        "id": 281749461,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652132324
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/ring_hom_isometric\">docs#ring_hom_isometric</a></p>",
        "id": 281749790,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652132511
    },
    {
        "content": "<p>This needs a norm, which I don't think you have?</p>",
        "id": 281749852,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1652132531
    },
    {
        "content": "<p>You have all the details about this at <a href=\"https://en.wikipedia.org/wiki/Topologies_on_spaces_of_linear_maps\">https://en.wikipedia.org/wiki/Topologies_on_spaces_of_linear_maps</a>. Look in particular for the topology of \"uniform convergence on bounded sets\" for the definition of a topology which, in normed spaces, coincides with the norm topology on operators.</p>",
        "id": 281750286,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1652132798
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Topology.20on.20continuous_maps.20without.20a.20norm/near/281749852\">said</a>:</p>\n<blockquote>\n<p>This needs a norm, which I don't think you have?</p>\n</blockquote>\n<p>Ah yes, I probably meant <code>[fact (continuous σ₁₂)]</code>.</p>",
        "id": 281750859,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652133179
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"412682\">Moritz Doll</span> <a href=\"#narrow/stream/116395-maths/topic/Topology.20on.20continuous_maps.20without.20a.20norm/near/281719086\">said</a>:</p>\n<blockquote>\n<p>Doesn't <span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> have a PR for topologies on the space of linear maps?</p>\n</blockquote>\n<p>Sorry for the delay, I had my exams last week. I don't have anything yet, but it is a few PR away from what we have now and I do have a precise plan for getting there. Basically, what's missing is :</p>\n<ul>\n<li><a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_convergence_on.uniform_space\">docs#uniform_convergence_on.uniform_space</a> is a uniform group when the codomain is a uniform group</li>\n<li>when restricted to continuous linear maps, if all the elements of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">S</span></span></span></span> are bounded, then we get a topological vector space topology</li>\n</ul>\n<p>Then the plan is to make an instance with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">S</span></span></span></span> being the full Von Neumann bornology, which coincides with the norm topology when it exists, and then fix definitional equalities as usual</p>",
        "id": 282427208,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1652646124
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/Topology.20on.20continuous_maps.20without.20a.20norm/near/281749461\">said</a>:</p>\n<blockquote>\n<p>The motivation would be to be able to talk about continuous bi-linear maps without having to choose a particular norm on the codomain.</p>\n</blockquote>\n<p>Note however that with this topology, continuous bilinear maps <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>×</mo><mi>B</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">A\\times B\\to C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> do <strong><em>not</em></strong> correspond to continuous linear maps <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">L</mi><mo stretchy=\"false\">(</mo><mi>A</mi><mo separator=\"true\">,</mo><mi mathvariant=\"script\">L</mi><mo stretchy=\"false\">(</mo><mi>B</mi><mo separator=\"true\">,</mo><mi>C</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathcal{L}(A,\\mathcal{L}(B,C))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathcal\">L</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathcal\">L</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mclose\">))</span></span></span></span> in general</p>",
        "id": 282427646,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1652646838
    },
    {
        "content": "<p>I'm not sure I understand your point; I assume <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>×</mo></mrow><annotation encoding=\"application/x-tex\">\\times</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">×</span></span></span></span> should be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">⊗</span></span></span></span> in that first one? Either way, it sounds like you're in a much better position to explore this than I am; I hope the exams went well, and I'd be curious to see whatever PR comes of this even if its mostly over my head!</p>",
        "id": 282428619,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652648270
    },
    {
        "content": "<p>What I'm saying is that there are bilinear maps <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>:</mo><mi>A</mi><mo>×</mo><mi>B</mi><mo>→</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">b : A \\times B \\to C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>↦</mo><mi>b</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mo>⋅</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x \\mapsto b(x,\\cdot)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.522em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">⋅</span><span class=\"mclose\">)</span></span></span></span> is continuous but <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> is not. Actually, even having both <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>↦</mo><mi>b</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mo>⋅</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x\\mapsto b(x,\\cdot)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.522em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">⋅</span><span class=\"mclose\">)</span></span></span></span> <em>and</em> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>↦</mo><mi>b</mi><mo stretchy=\"false\">(</mo><mo>⋅</mo><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">y\\mapsto b(\\cdot,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7054em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mopen\">(</span><span class=\"mord\">⋅</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> be continuous does not imply continuity of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>, that's called hypocontinuity.</p>",
        "id": 282429324,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1652649347
    },
    {
        "content": "<p>In mathlib we seem to use \"continuous bilinear map\" to mean only the <code>L(A, L(B, C))</code> version</p>",
        "id": 282431726,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1652652877
    },
    {
        "content": "<p>I've been talking about it for a loooong time, but it is finally here! <a href=\"https://github.com/leanprover-community/mathlib/pull/16053\">#16053</a> (still WIP but the math content is complete) defines the strong topology associted to a family of bounded subsets of the domain, declares the special case of considering all bounded subsetes as a <code>topological_space</code> instance on continuous linear maps, and redefines <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_linear_map.to_seminormed_add_comm_group\">docs#continuous_linear_map.to_seminormed_add_comm_group</a> using forgetful inheritance so that everything is completely transparent. It is sitting on a few preliminary PRs, but as I said the math content is here.</p>",
        "id": 293411503,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1660490753
    },
    {
        "content": "<p>I was scared at the last minute because most people (including Bourbaki) do this only for <code>ℝ</code> or <code>ℂ</code>, and the naive proof to prove that it indeed gives the same topology as the operator norm use the \"sup of the unit ball\" definition of the operator norm, but <em>I think</em> our definition isn't equivalent to this in general (although it is for <code>ℝ</code> or <code>ℂ</code>), or at least we don't seem to have it and it is non trivial, because we can't just divide a vector by its norm. Thankfully I managed to find a way around it.</p>",
        "id": 293412191,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1660491144
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Topology.20on.20continuous_maps.20without.20a.20norm/near/281749852\">said</a>:</p>\n<blockquote>\n<p>This needs a norm, which I don't think you have?</p>\n</blockquote>\n<p>You have a norm on the field, which is what you need here</p>",
        "id": 293412484,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1660491351
    },
    {
        "content": "<p>For future reference, we should have (not yet)  a sup over the unit ball lemma which holds over a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/densely_normed_field\">docs#densely_normed_field</a> but of course if you managed to avoid it, that's even better.</p>",
        "id": 293426098,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1660499066
    },
    {
        "content": "<p>For some reason this change seems to confuse Lean in some specific places (you can look at the diff for <code>analysis/convolution</code> and <code>analysis/normed_space/bounded_linear_maps</code> in the PR), but just adding a little bit more information fixes it. I don't think it is a big deal since it only happened twice in the whole library, but if someone has an idea of what could be causing that it would be nice</p>",
        "id": 293533636,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1660574850
    }
]