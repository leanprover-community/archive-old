[
    {
        "content": "<p>I am using the following function as a condition in a lemma : </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"mi\">0</span> <span class=\"k\">else</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">nat.factorial</span> <span class=\"o\">(</span><span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">))</span> <span class=\"o\">)</span>\n</code></pre></div>\n<p>Lean changes this to :</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">g</span><span class=\"o\">:</span> <span class=\"n\">opt_param</span> <span class=\"o\">(</span><span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">ite</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">i.factorial</span><span class=\"o\">)))</span>\n</code></pre></div>\n<p>I don't know what <code>opt_param</code> is, or why it appears there, or how to work with it. The only option I see is <code>apply_opt_param</code>, but that does not help.</p>\n<p>Any help is appreciated, thank you!</p>",
        "id": 220220966,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1608196849
    },
    {
        "content": "<p>Lean thinks that you want a <em>variable</em> <code>g</code> with a default argument.<br>\nBut that's not what you <em>meant</em>.</p>",
        "id": 220221375,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1608197141
    },
    {
        "content": "<p>So, it's probably the easiest to turn <code>g</code> into a separate definition. Although you could also use a <code>let</code> statement.</p>",
        "id": 220221471,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1608197187
    },
    {
        "content": "<p>Ah I see. Yes I did that, it works! Thank you!</p>",
        "id": 220221518,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1608197236
    }
]