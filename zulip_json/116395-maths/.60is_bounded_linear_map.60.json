[
    {
        "content": "<p>Is there any good reason to have <code>is_bounded_linear_map</code>? Do I understand correctly that it is equivalent to being a <code>continuous_linear_map</code>?</p>",
        "id": 185075951,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1578451335
    },
    {
        "content": "<p>to define the operator norm</p>",
        "id": 185076064,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1578451498
    },
    {
        "content": "<p>Between Banach spaces I think they're the same, but what generality are these things defined in?</p>",
        "id": 185076085,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1578451527
    },
    {
        "content": "<p>Thinking aloud. If the pre-image of an open ball is open, then we see |x|&lt;=epsilon -&gt; |f(x)|&lt;=1 so the linear map is bounded. Oh and the converse is also true, right? So this is true in some huge generality?</p>",
        "id": 185076170,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1578451637
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> <code>is_bounded_linear_map</code> is defined in <code>bounded_linear_maps</code>, and this file <code>import</code>s <code>operator_norm</code>.</p>",
        "id": 185076177,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1578451650
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">variables</span> <span class=\"o\">[</span><span class=\"n\">nondiscrete_normed_field</span> <span class=\"err\">𝕜</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"err\">𝕜</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"err\">𝕜</span> <span class=\"n\">F</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">normed_space</span> <span class=\"err\">𝕜</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n<span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"err\">𝕜</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"err\">𝕜</span><span class=\"o\">]</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">F</span> <span class=\"bp\">→</span><span class=\"n\">L</span><span class=\"o\">[</span><span class=\"err\">𝕜</span><span class=\"o\">]</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">)</span>\n<span class=\"n\">include</span> <span class=\"err\">𝕜</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">bound_of_continuous</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"err\">𝕜</span><span class=\"o\">]</span> <span class=\"n\">F</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">continuous</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">C</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">C</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">E</span><span class=\"o\">,</span> <span class=\"err\">∥</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"err\">∥</span> <span class=\"bp\">≤</span> <span class=\"n\">C</span> <span class=\"bp\">*</span> <span class=\"err\">∥</span><span class=\"n\">x</span><span class=\"err\">∥</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n</pre></div>",
        "id": 185076236,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1578451701
    },
    {
        "content": "<p>(quote from <code>operator_norm</code>)</p>",
        "id": 185076245,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1578451722
    },
    {
        "content": "<p>I've never seen a lowercase blackboard bold in my life</p>",
        "id": 185076251,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1578451731
    },
    {
        "content": "<p>Ah, I see: this is an <strong>unbundled</strong> version of <code>continuous_linear_map</code>. If we want to keep it, this distinction should be made clearer.</p>",
        "id": 185076468,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1578452147
    }
]