[
    {
        "content": "<p>We have a few lemmas/instances at <a href=\"https://github.com/pglutz/galois_theory/blob/master/src/subfield_stuff.lean\">https://github.com/pglutz/galois_theory/blob/master/src/subfield_stuff.lean</a> which relate field extensions (in terms of [algebra F E]) with the image as a subfield (set.range (algebra_map F E)). These are used in our proof of the primitive element theorem. Do these have a home somewhere in mathlib? (i.e., should we PR them to mathlib and if so, where?)</p>",
        "id": 207484719,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1597892956
    },
    {
        "content": "<p>My gut feeling is that you want to define a type <code>intermediate_field F E</code> that extends <code>subalgebra</code> and <code>subfield</code> (once that one is bundled). <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> do you have ideas for the design here?</p>",
        "id": 207485007,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597893420
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253861\">@Thomas Browning</span> This stuff should certainly end up in mathlib in <em>some</em> form. Probably in <code>algebra.(sub)field</code> or <code>field_theory.subfield</code>.<br>\nBut to determine <em>which</em> form it should be in, I think it's better to see that these definitions can be used in an <em>elegant and efficient</em> way to prove some things. There might be a mathematically equivalent but Lean-different way of setting things up that works better. And you only know this once you've started using it.</p>",
        "id": 207485082,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597893565
    },
    {
        "content": "<p>That isn't necessary, as every subring of F that contains E is a field as long as F/E is algebraic</p>",
        "id": 207494666,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597907333
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/116395-maths/topic/Basic.20lemmas.2Finstances.20about.20subfields/near/207485082\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"253861\">Thomas Browning</span> This stuff should certainly end up in mathlib in <em>some</em> form. Probably in <code>algebra.(sub)field</code> or <code>field_theory.subfield</code>.<br>\nBut to determine <em>which</em> form it should be in, I think it's better to see that these definitions can be used in an <em>elegant and efficient</em> way to prove some things. There might be a mathematically equivalent but Lean-different way of setting things up that works better. And you only know this once you've started using it.</p>\n</blockquote>\n<p>We used them in our proof of the primitive element theorem.</p>",
        "id": 207548238,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1597943423
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"298851\">@Patrick Lutz</span> Aha, that's good</p>",
        "id": 207549057,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597943921
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> That's a good point. And we're only interested in <code>F/E</code> algebraic anyways</p>",
        "id": 207549126,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597943971
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"298851\">@Patrick Lutz</span> Do you think it makes sense to prove stuff about <code>subalgebra F E</code> instead?</p>",
        "id": 207549870,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597944349
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/116395-maths/topic/Basic.20lemmas.2Finstances.20about.20subfields/near/207549126\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110064\">Kenny Lau</span> That's a good point. And we're only interested in <code>F/E</code> algebraic anyways</p>\n</blockquote>\n<p>What? Why?</p>",
        "id": 207551099,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597944918
    },
    {
        "content": "<p>I understand that this work is mainly building up towards Galois theory, but what if, for example, I want to take the relative algebraic closure of a field <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> in a non-algebraic extension <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span>?</p>",
        "id": 207551281,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597945017
    },
    {
        "content": "<p>Or what if I want to do Galois theory for complete subextensions of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">C</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}_p</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.974998em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">C</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">Q</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}_p</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.974998em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">Q</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>?</p>",
        "id": 207551330,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597945046
    },
    {
        "content": "<p>Certainly in the latter case you need a completely new bundled type, right?</p>",
        "id": 207551918,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597945336
    },
    {
        "content": "<p>But, you have a fair point, that outside of the immediate interest of Galois theory, there are probably good examples of subfields where we really want to know it's a bundled subfield.</p>",
        "id": 207552028,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597945410
    },
    {
        "content": "<p>Actually, both of these examples are not really relevant. In the first example, the relative algebraic closure of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> is subalgebra of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> which is the integral closure of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>, and in the second example, you again would just need complete subalgebras. But it would be nice, for example, to do the following: if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi mathvariant=\"normal\">∣</mi><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">L|K</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> is an arbitrary extension and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo>⊂</mo><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">S \\subset L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72243em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">⊂</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span>, we should be able to take, for example, the relative algebraic closure of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo stretchy=\"false\">(</mo><mi>S</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">k(S)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span>, as an intermediate subfield between <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>. Such things pop up all the time in algebraic geometry.</p>",
        "id": 207553545,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597946158
    },
    {
        "content": "<p>And eventually if you want to do, say, differential Galois theory, then you would need to move away from just algebraic extensions.</p>",
        "id": 207553735,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597946263
    },
    {
        "content": "<p>Are you arguing to figure out whether transcendental extensions exist? I don't whether this is worse than the debate about existence of non-commutative rings...</p>",
        "id": 207555861,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1597947391
    },
    {
        "content": "<p>I'm mainly saying that I agree with <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> 's first suggestion of defining <code>intermediate_field</code> as extending <code>subalgebra</code>, and doing Galois theory with such a bundled type.</p>",
        "id": 207556108,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597947512
    },
    {
        "content": "<p>I think this approach would also be helpful for eventually defining transcendence bases of fields.</p>",
        "id": 207556561,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1597947772
    },
    {
        "content": "<p>so should we go ahead and refactor our code in terms of <code>intermediate_field</code>?</p>",
        "id": 207652633,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1598026160
    }
]