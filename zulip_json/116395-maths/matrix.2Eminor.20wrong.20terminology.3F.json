[
    {
        "content": "<p>I think the term \"minor\" is used in the wrong way in mathlib. Minors are the determinants of submatrices, not the submatrix itself. Should I make a PR to rename <code>matrix.minor</code> to <code>matrix.submatrix</code>?</p>",
        "id": 293526440,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660572560
    },
    {
        "content": "<p>technically it is not even a submatrix, right? you could have rows/columns that you reindex twice (i.e., the maps are not injective)</p>",
        "id": 293527279,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1660572838
    },
    {
        "content": "<p>I think probably we don't need to worry about that though; we frequently use names that only actually match convention under extra assumptions</p>",
        "id": 293527993,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660573069
    },
    {
        "content": "<p>Such as <code>module</code> which isn't really a module without <code>ring</code></p>",
        "id": 293528110,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660573093
    },
    {
        "content": "<p>Or <code>monoid_hom</code> which isn't really a monoid homomorphism without <code>monoid</code></p>",
        "id": 293528189,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660573120
    },
    {
        "content": "<p>It's unfortunate that <code>submatrix</code> is almost twice as long a name</p>",
        "id": 293528258,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660573148
    },
    {
        "content": "<p>Note that on square matrices, <code>matrix.minor A f f</code> is the same as <code>matrix.of (A on f)</code> (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/function.on_fun\">docs#function.on_fun</a>). Perhaps then simply <code>matrix.on</code> is a reasonable (<code>protected</code>) name?</p>",
        "id": 293528942,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660573372
    },
    {
        "content": "<p>I like <code>matrix.on</code>.</p>",
        "id": 293529218,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1660573465
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/16063\">#16063</a></p>",
        "id": 293554842,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660577364
    },
    {
        "content": "<p>That will conflict with <a href=\"https://github.com/leanprover-community/mathlib/pull/14035\">#14035</a>.</p>",
        "id": 293555048,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1660577418
    },
    {
        "content": "<p>That's ok. When the first one gets merged, I am happy to update the other.</p>",
        "id": 293565047,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660579641
    },
    {
        "content": "<p>The PR for <code>on</code> is ready, but <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span>  and I aren't really happy about <code>on</code>. For me, it's because <code>on</code> is not really illuminating for newcomers. Indeed, <code>submatrix</code> is a bit long, but maybe acceptable? How about abbreviating it as <code>submat</code> or <code>submx</code>? Any other ideas?</p>",
        "id": 293701668,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660651317
    },
    {
        "content": "<p>/poll What should <code>matrix.minor</code> be called?</p>\n<ul>\n<li>matrix.minor</li>\n<li>matrix.on</li>\n<li>matrix.submat</li>\n<li>matrix.submx</li>\n</ul>",
        "id": 293702789,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660651725
    },
    {
        "content": "<p>Another similar definition is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finsupp.comap_domain\">docs#finsupp.comap_domain</a>, which does the same type of composition on the left; thought the name IMO would be worse here.</p>",
        "id": 293703773,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660652141
    },
    {
        "content": "<p>yet another similar definition is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_map\">docs#linear_map</a>.compl₁₂</p>",
        "id": 293705619,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1660652916
    },
    {
        "content": "<p>Some other options I considered are to call this <code>matrix.reindex</code> and rename <code>reindex</code> to <code>reindex_equiv</code>, or <code>matrix.(co)map_index</code>.</p>",
        "id": 293705722,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1660652979
    },
    {
        "content": "<p>That's made a little messy by the fact that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/matrix.reindex/src\">src#matrix.reindex</a> is implemented as <code>reindex e f = minor e.symm f.symm</code>; the direction is flipped, so one is not just a bundled version of the other</p>",
        "id": 293707195,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660653542
    },
    {
        "content": "<p>Ok, <code>submatrix</code> seems to be the most popular.  Here is the PR for <code>submatrix</code>: <a href=\"https://github.com/leanprover-community/mathlib/pull/16101\">#16101</a></p>",
        "id": 293907614,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660746446
    },
    {
        "content": "<p>merged!</p>",
        "id": 294078667,
        "sender_full_name": "Alexander Bentkamp",
        "timestamp": 1660829914
    }
]