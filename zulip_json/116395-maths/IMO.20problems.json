[
    {
        "content": "<p>(following on from <a href=\"#narrow/stream/116395-maths/topic/IMO2019\" title=\"#narrow/stream/116395-maths/topic/IMO2019\">the IMO2019 thread</a> ): IMO 1988 Q6 has just gone viral at some school maths camp which is taking place at Imperial. It's a famous problem -- the one about if <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">a</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">b</span></span></span></span> are positive integers such that <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mi>b</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">ab+1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> divides <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>b</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">a^2+b^2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> then the ratio <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mfrac><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>b</mi><mn>2</mn></msup></mrow><mrow><mi>a</mi><mi>b</mi><mo>+</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{a^2+b^2}{ab+1}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.4212509999999998em;vertical-align:-0.403331em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01792em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"mord mathdefault mtight\">b</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913142857142857em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8913142857142857em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.403331em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> must be a perfect square. The proof is not too hard if you know the trick, see e.g. <a href=\"https://en.wikipedia.org/wiki/Vieta_jumping#Standard_Vieta_jumping\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Vieta_jumping#Standard_Vieta_jumping\">Wikipedia</a> but very tough otherwise (as is sometimes the case for IMO problems).</p>",
        "id": 172671187,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1565179393
    },
    {
        "content": "<p>The guy running the camp is going to make a little video about it, and I've been asked to supply a Lean proof ASAP. I have a busy day :-/ but might get to it later if nobody else takes the bait. The proof is that if the ratio is k, a given fixed non-square,  then considering the set of bad pairs (a,b) for which the ratio is k one can choose an element of the set with  b&lt;=a and a+b minimised,  and then check check that a'=kb-a is a smaller counterexample.</p>",
        "id": 172671387,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1565179569
    },
    {
        "content": "<p>It would be good to ultimately get a solution in Patrick's formatter</p>",
        "id": 172671577,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1565179724
    },
    {
        "content": "<p>Here is a little start:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">rat</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">square_zero</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">↔</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">pow_two</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">contrapose</span><span class=\"bp\">!</span><span class=\"o\">,</span> <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">lt_trichotomy</span> <span class=\"n\">n</span> <span class=\"mi\">0</span> <span class=\"k\">with</span> <span class=\"n\">H</span><span class=\"bp\">|</span><span class=\"n\">rfl</span><span class=\"bp\">|</span><span class=\"n\">H</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">ne_of_gt</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">mul_pos_of_neg_of_neg</span> <span class=\"n\">H</span> <span class=\"n\">H</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">contradiction</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">ne_of_gt</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">mul_pos</span> <span class=\"n\">H</span> <span class=\"n\">H</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rintro</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">},</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">square_pos</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">n</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"bp\">↔</span> <span class=\"n\">n</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span><span class=\"n\">not_iff_not</span><span class=\"o\">,</span> <span class=\"n\">push_neg</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"err\">←</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">square_zero</span><span class=\"o\">,</span> <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">le_antisymm</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">pow_two_nonneg</span> <span class=\"n\">n</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rintro</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">pow_two</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"err\">∣</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span>\n<span class=\"n\">include</span> <span class=\"n\">h</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">nz</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">c</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_eq_zero_iff&#39;</span> <span class=\"o\">(</span><span class=\"n\">pow_two_nonneg</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">pow_two_nonneg</span> <span class=\"bp\">_</span><span class=\"o\">)],</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">square_zero</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">square_zero</span><span class=\"o\">],</span>\n  <span class=\"n\">rintro</span> <span class=\"bp\">⟨</span><span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">q6_aux</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"err\">∣</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">k</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">q6</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"err\">∣</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">,</span> <span class=\"n\">q</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">q6_aux</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">k</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n  <span class=\"n\">rw_mod_cast</span> <span class=\"n\">hk</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">rat</span><span class=\"bp\">.</span><span class=\"n\">mk_eq_div</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">mul_div_cancel</span><span class=\"o\">,</span>\n  <span class=\"n\">norm_cast</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">nz</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 172683123,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565188532
    },
    {
        "content": "<p>I also started, but may not finish <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span> </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">order</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">wlog</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">omega</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">tidy</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">library_search</span>\n\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">,</span> <span class=\"n\">priority</span> <span class=\"mi\">0</span><span class=\"o\">]</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">prop_decidable</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">q6</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)))</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>  <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">))),</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"k\">by</span> <span class=\"n\">exact</span> <span class=\"n\">this</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">clear</span> <span class=\"n\">h</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"c1\">-- forget about a b now</span>\n<span class=\"c1\">-- the set of possible counterexamples</span>\n<span class=\"k\">let</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">×</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">ab</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">*</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">*</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">},</span>\n<span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"err\">∅</span><span class=\"o\">,</span> <span class=\"k\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">by_contradiction</span> <span class=\"n\">not_exists</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">ab_in_A</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⟨</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"bp\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">×</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">dsimp</span><span class=\"o\">,</span> <span class=\"n\">split</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">not_exists</span><span class=\"o\">,</span> <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">eq_empty_iff_forall_not_mem</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">this</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">contradiction</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span><span class=\"o\">,</span>\n<span class=\"n\">by_contradiction</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"k\">let</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">×</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n<span class=\"k\">let</span> <span class=\"n\">min_elem</span> <span class=\"o\">:=</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">measure_wf</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">A</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"k\">let</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">max</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n<span class=\"k\">let</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">min</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">min_is_elem</span> <span class=\"o\">:</span> <span class=\"n\">min_elem</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">min_mem</span> <span class=\"o\">(</span><span class=\"n\">measure_wf</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">A</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">dsimp</span> <span class=\"n\">at</span> <span class=\"n\">min_is_elem</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">ab_mem</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">dsimp</span><span class=\"o\">,</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">if_pos</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">if_pos</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">min_is_elem</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span><span class=\"n\">min_is_elem</span><span class=\"o\">],</span>\n  <span class=\"o\">},</span>\n  <span class=\"o\">{</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">if_neg</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">if_neg</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"n\">min_is_elem</span><span class=\"o\">,</span>\n  <span class=\"o\">}</span>\n<span class=\"kn\">end</span><span class=\"o\">,</span>\n<span class=\"k\">let</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n<span class=\"k\">let</span> <span class=\"n\">newa</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">new_mem</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">newa</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">newa</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">],</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">new_smaller</span> <span class=\"o\">:</span> <span class=\"n\">measure</span> <span class=\"n\">r</span> <span class=\"o\">(</span><span class=\"n\">newa</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">sorry</span> <span class=\"kn\">end</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">not_lt_min</span> <span class=\"o\">(</span><span class=\"n\">measure_wf</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">A</span> <span class=\"n\">h</span> <span class=\"n\">new_mem</span><span class=\"o\">,</span>\n\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 172684001,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565189196
    },
    {
        "content": "<p>Ok, I missed the positivity condition.</p>",
        "id": 172686514,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565190885
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> What does \"positive\" mean on IMO problems?</p>",
        "id": 172686535,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565190911
    },
    {
        "content": "<p>≥ 0 or &gt; 0?</p>",
        "id": 172686541,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565190917
    },
    {
        "content": "<blockquote>\n<p>0</p>\n</blockquote>",
        "id": 172686542,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1565190919
    },
    {
        "content": "<p>rofl <code>&gt; 0</code></p>",
        "id": 172686549,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1565190925
    },
    {
        "content": "<p>Great.</p>",
        "id": 172686557,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565190932
    },
    {
        "content": "<p>The strategy would be to use <code>prod.lex_wf</code></p>",
        "id": 172686583,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565190955
    },
    {
        "content": "<p>And <code>well_found.min</code></p>",
        "id": 172686588,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565190961
    },
    {
        "content": "<p>I don't have working Lean nearby, but I think this should be very straightforward.</p>",
        "id": 172686647,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565190978
    },
    {
        "content": "<p>It would be nice to formalise a theorem <code>standard_vieta_jumping</code> and <code>standard_vieta_jumping_2</code></p>",
        "id": 172687314,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565191449
    },
    {
        "content": "<p>(The latter would take two arguments, instead of pairs.)</p>",
        "id": 172687338,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565191458
    },
    {
        "content": "<p>Hmmm, maybe I should shut up and code before doing any more talking.</p>",
        "id": 172688942,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565192498
    },
    {
        "content": "<p>Its still true if you just assume nonneg right? At least that's how I justified using nat to myself so id have less hypotheses floating around</p>",
        "id": 172690115,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565193245
    },
    {
        "content": "<p>Did we have this part already?</p>\n<div class=\"codehilite\"><pre><span></span>import data.int.basic\n\n/- Vieta&#39;s formula for a quadratic equation -/\nlemma Vieta_formula_quadratic {α} [comm_ring α] {b c x : α}\n  (h : x * x - b * x + c = 0) : ∃ y : α,\n    y * y - b * y + c = 0 ∧ x + y = b ∧ x * y = c :=\nbegin\n  have : c = b * x - x * x, { apply eq_of_sub_eq_zero, simpa using h },\n  use b - x, simp [left_distrib, right_distrib, mul_comm, this],\nend\n</pre></div>",
        "id": 172698764,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1565199825
    },
    {
        "content": "<p>That's nice!</p>",
        "id": 172699138,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565200043
    },
    {
        "content": "<p>Oh cool, here's where I'm up to, going to stop for a while so feel free to combine them and finish (if you want to) I think that missing piece is almost everything (except some sillyness?)</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">order</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">wlog</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">interactive</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">omega</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">abel</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">linarith</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">tidy</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">library_search</span>\n\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"kn\">instance</span><span class=\"o\">,</span> <span class=\"n\">priority</span> <span class=\"mi\">0</span><span class=\"o\">]</span> <span class=\"n\">classical</span><span class=\"bp\">.</span><span class=\"n\">prop_decidable</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">max_add_min</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">max</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">min</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">min</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">if_pos</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">max</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">if_pos</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">add_comm</span><span class=\"o\">],</span>\n  <span class=\"o\">},</span>\n  <span class=\"o\">{</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">min</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">if_neg</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">max</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">if_neg</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">dumb_measure_fact</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">r</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">r</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">measure</span> <span class=\"n\">r</span> <span class=\"n\">c</span> <span class=\"n\">a</span> <span class=\"bp\">↔</span> <span class=\"n\">measure</span> <span class=\"n\">r</span> <span class=\"n\">c</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">change</span> <span class=\"n\">r</span> <span class=\"n\">c</span> <span class=\"bp\">&lt;</span> <span class=\"n\">r</span> <span class=\"n\">a</span> <span class=\"bp\">↔</span> <span class=\"n\">r</span> <span class=\"n\">c</span> <span class=\"bp\">&lt;</span> <span class=\"n\">r</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n<span class=\"n\">rwa</span> <span class=\"err\">←</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">q6</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)))</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>  <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)),</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"k\">by</span> <span class=\"n\">exact</span> <span class=\"n\">this</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">clear</span> <span class=\"n\">h</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"c1\">-- forget about a b now</span>\n<span class=\"c1\">-- the set of possible counterexamples</span>\n<span class=\"k\">let</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"bp\">ℤ</span> <span class=\"bp\">×</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">ab</span> <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">((</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">*</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"err\">∣</span> <span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">))</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span><span class=\"bp\">*</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">},</span>\n<span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"err\">∅</span><span class=\"o\">,</span> <span class=\"k\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">by_contradiction</span> <span class=\"n\">not_exists</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">ab_in_A</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⟨</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span> <span class=\"bp\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span> <span class=\"bp\">×</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">rw</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_set_of_eq</span><span class=\"o\">,</span> <span class=\"n\">split</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">split</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">hb</span><span class=\"o\">,</span> <span class=\"n\">split</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">not_exists</span><span class=\"o\">,</span> <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">eq_empty_iff_forall_not_mem</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">this</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">contradiction</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span><span class=\"o\">,</span>\n<span class=\"n\">by_contradiction</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"k\">let</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">ℤ</span> <span class=\"bp\">×</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">nat_abs</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">),</span>\n<span class=\"k\">let</span> <span class=\"n\">min_elem</span> <span class=\"o\">:=</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">measure_wf</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">A</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"k\">let</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">max</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n<span class=\"k\">let</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">min</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">min_is_elem</span> <span class=\"o\">:</span> <span class=\"n\">min_elem</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">min_mem</span> <span class=\"o\">(</span><span class=\"n\">measure_wf</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">A</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">dsimp</span> <span class=\"n\">at</span> <span class=\"n\">min_is_elem</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">ab_mem</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">dsimp</span><span class=\"o\">,</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">if_pos</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">if_pos</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">min_is_elem</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span><span class=\"n\">min_is_elem</span><span class=\"o\">],</span>\n  <span class=\"o\">},</span>\n  <span class=\"o\">{</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">if_neg</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">min_elem</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">if_neg</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"n\">min_is_elem</span><span class=\"o\">,</span>\n  <span class=\"o\">}</span>\n<span class=\"kn\">end</span><span class=\"o\">,</span>\n<span class=\"n\">rcases</span> <span class=\"n\">ab_mem</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">ha</span><span class=\"o\">,</span> <span class=\"n\">hb</span><span class=\"o\">,</span> <span class=\"n\">h1</span><span class=\"o\">,</span> <span class=\"n\">h2</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n<span class=\"n\">dsimp</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n\n<span class=\"k\">let</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n<span class=\"k\">have</span> <span class=\"n\">a2b2_pos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">add_pos</span> <span class=\"o\">(</span><span class=\"n\">pow_pos</span> <span class=\"n\">ha</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">pow_pos</span> <span class=\"n\">hb</span> <span class=\"mi\">2</span><span class=\"o\">),</span>\n<span class=\"k\">have</span> <span class=\"n\">abadd1_pos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">add_pos</span> <span class=\"o\">(</span><span class=\"n\">mul_pos</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span><span class=\"o\">)</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">one_pos</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">x_pos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"k\">let</span> <span class=\"n\">newa</span> <span class=\"o\">:=</span> <span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">newa_pos</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">newa</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">new_mem</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">newa</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">squeeze_simp</span> <span class=\"o\">[</span><span class=\"n\">newa</span><span class=\"o\">],</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">newa</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">newa</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">newa</span><span class=\"o\">],</span>\n  <span class=\"n\">ring</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">eq</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">div_eq_iff_eq_mul_right</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">ring</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"kn\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n  <span class=\"n\">ring</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"o\">},</span>\n  <span class=\"o\">{</span><span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"o\">},</span>\n<span class=\"kn\">end</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">new_smaller</span> <span class=\"o\">:</span> <span class=\"n\">measure</span> <span class=\"n\">r</span> <span class=\"o\">(</span><span class=\"n\">newa</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"o\">((</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">nat_abs</span> <span class=\"o\">(</span><span class=\"n\">newa</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"o\">(</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">nat_abs</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)),</span>\n <span class=\"n\">exact</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_nat_lt</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n <span class=\"n\">rw</span> <span class=\"o\">(</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">nat_abs_of_nonneg</span> <span class=\"err\">$</span> <span class=\"n\">le_of_lt</span> <span class=\"err\">$</span> <span class=\"n\">add_pos</span> <span class=\"n\">newa_pos</span> <span class=\"n\">hb</span><span class=\"o\">),</span>\n <span class=\"n\">rw</span> <span class=\"o\">(</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">nat_abs_of_nonneg</span> <span class=\"err\">$</span> <span class=\"n\">le_of_lt</span> <span class=\"err\">$</span> <span class=\"n\">add_pos</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span><span class=\"o\">),</span>\n <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">newa</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">),</span>\n <span class=\"o\">{</span><span class=\"n\">linarith</span><span class=\"o\">},</span>\n<span class=\"n\">sorry</span>\n<span class=\"kn\">end</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">not_lt_min</span> <span class=\"o\">(</span><span class=\"n\">measure_wf</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">A</span> <span class=\"n\">h</span> <span class=\"n\">new_mem</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">measure_eq</span> <span class=\"o\">:</span> <span class=\"n\">r</span> <span class=\"n\">min_elem</span> <span class=\"bp\">=</span> <span class=\"n\">r</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span> <span class=\"n\">squeeze_simp</span> <span class=\"o\">[</span><span class=\"n\">r</span><span class=\"o\">,</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">],</span> <span class=\"n\">rw</span> <span class=\"n\">max_add_min</span><span class=\"o\">,</span>\n<span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"kn\">end</span><span class=\"o\">,</span>\n<span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">min_elem</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">measure_eq</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">dumb_measure_fact</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n<span class=\"n\">contradiction</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"n\">measure_eq</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 172700822,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565201080
    },
    {
        "content": "<p>Thanks to everyone for this. I am bogged down in a grant application and would never have got round to doing this over the next few days.</p>",
        "id": 172700962,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1565201164
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> That's an impressively long proof!</p>",
        "id": 172703411,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565203059
    },
    {
        "content": "<p>Yeah thats my bad lol, I always forget to split things off into lemmas.</p>",
        "id": 172703475,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565203094
    },
    {
        "content": "<p>Also I still write things in an inefficient way I'm sure!</p>",
        "id": 172703656,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565203210
    },
    {
        "content": "<p>I'm also working on this, and almost done. I'm struggling a bit with the argument (on the Wikipedia page) that <code>x_2</code> is nonnegative: you have to show that <code>x_2 * B + 1 != 0</code>. If it were equal to 0, then you can easily derive a contradiction, using the fact that <code>a ^ 2 + b ^ 2 = 0 -&gt; a = b = 0</code>. Is this fact already in mathlib?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Vieta&#39;s formula for a quadratic equation -/</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">Vieta_formula_quadratic</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n    <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">eq_of_sub_eq_zero</span><span class=\"o\">,</span> <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">h</span> <span class=\"o\">},</span>\n  <span class=\"n\">use</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">left_distrib</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">this</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">fn_min_add_fn_max</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_semigroup</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"n\">le_of_lt</span> <span class=\"o\">(</span><span class=\"n\">lt_of_not_ge</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">]</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">min_add_max</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_semigroup</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">max</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"n\">fn_min_add_fn_max</span> <span class=\"n\">id</span> <span class=\"n\">n</span> <span class=\"n\">m</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">fn_min_mul_fn_max</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">comm_semigroup</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"n\">le_of_lt</span> <span class=\"o\">(</span><span class=\"n\">lt_of_not_ge</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">min_mul_max</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">comm_semigroup</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">max</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"n\">fn_min_mul_fn_max</span> <span class=\"n\">id</span> <span class=\"n\">n</span> <span class=\"n\">m</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">min_le_max</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">max</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">min_le_left</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">le_max_left</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">eq_iff_eq_of_eq</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">z</span> <span class=\"bp\">↔</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">z</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">q6&#39;</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">,</span> <span class=\"n\">l</span> <span class=\"bp\">*</span> <span class=\"n\">l</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">lemma1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">},</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">↔</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">right_distrib</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">sub_eq_iff_eq_add</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">sub_eq_zero</span><span class=\"o\">],</span>\n    <span class=\"n\">apply</span> <span class=\"n\">eq_iff_eq_of_eq</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">cases</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">eq_zero_or_pos</span> <span class=\"n\">k</span> <span class=\"k\">with</span> <span class=\"n\">hk</span> <span class=\"n\">hk</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hk</span><span class=\"o\">],</span> <span class=\"n\">refl</span> <span class=\"o\">},</span>\n  <span class=\"k\">let</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">×</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">ab</span> <span class=\"bp\">|</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">≠</span> <span class=\"err\">∅</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">ne_empty_iff_exists_mem</span><span class=\"o\">],</span> <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">hab</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">hab</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"k\">let</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">×</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">ab</span><span class=\"o\">,</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">s_min</span> <span class=\"o\">:=</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">measure_wf</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">a&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"n\">min</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">b&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"n\">max</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span> <span class=\"o\">:=</span> <span class=\"n\">a&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span> <span class=\"o\">:=</span> <span class=\"n\">b&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_zero_le</span> <span class=\"n\">a&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_zero_le</span> <span class=\"n\">b&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">a_le_b</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">apply_mod_cast</span> <span class=\"n\">min_le_max</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">fn_min_add_fn_max</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">min_mul_max</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">],</span>\n    <span class=\"n\">exact</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">min_mem</span> <span class=\"o\">(</span><span class=\"n\">measure_wf</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"n\">hs</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2ab</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">lemma1</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">Vieta_formula_quadratic</span> <span class=\"n\">h2ab</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">h1c</span><span class=\"o\">,</span> <span class=\"n\">h2c</span><span class=\"o\">,</span> <span class=\"n\">h3c</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h4c</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n    <span class=\"o\">{</span> <span class=\"n\">sorry</span> <span class=\"o\">},</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n    <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">this</span><span class=\"o\">],</span> <span class=\"n\">apply</span> <span class=\"n\">add_nonneg</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">mul_self_nonneg</span> <span class=\"o\">},</span>\n    <span class=\"c1\">-- apply nonneg_of_mul_nonneg_right,</span>\n    <span class=\"n\">sorry</span>\n     <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">h5c</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">lt_of_mul_lt_mul_left</span> <span class=\"bp\">_</span> <span class=\"n\">hb</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h3c</span><span class=\"o\">],</span>\n    <span class=\"n\">apply</span> <span class=\"n\">lt_of_lt_of_le</span> <span class=\"o\">(</span><span class=\"n\">sub_lt_self</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mul_le_mul</span> <span class=\"n\">a_le_b</span> <span class=\"n\">a_le_b</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span><span class=\"o\">),</span>\n    <span class=\"n\">apply_mod_cast</span> <span class=\"n\">hk</span> <span class=\"o\">},</span>\n  <span class=\"k\">obtain</span> <span class=\"bp\">⟨</span><span class=\"n\">c&#39;</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">c&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">c&#39;</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"n\">c</span><span class=\"bp\">.</span><span class=\"n\">nat_abs</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">nat_abs_of_nonneg</span> <span class=\"n\">h4c</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">c&#39;</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">subst</span> <span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">use</span> <span class=\"n\">a&#39;</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_nat_zero</span><span class=\"o\">,</span> <span class=\"n\">mul_zero</span><span class=\"o\">,</span> <span class=\"n\">eq_comm</span><span class=\"o\">,</span> <span class=\"n\">sub_eq_zero</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h3c</span><span class=\"o\">,</span>\n    <span class=\"n\">exact_mod_cast</span> <span class=\"n\">h3c</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hc&#39;</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a&#39;</span><span class=\"o\">,</span> <span class=\"n\">c&#39;</span><span class=\"o\">)</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">lemma1</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h1c</span><span class=\"o\">,</span> <span class=\"n\">exact_mod_cast</span> <span class=\"n\">h1c</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">a&#39;</span> <span class=\"bp\">+</span> <span class=\"n\">b&#39;</span> <span class=\"bp\">≤</span> <span class=\"n\">a&#39;</span> <span class=\"bp\">+</span> <span class=\"n\">c&#39;</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">not_lt</span><span class=\"o\">,</span> <span class=\"n\">min_add_max</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">],</span>\n    <span class=\"n\">exact</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">not_lt_min</span> <span class=\"o\">(</span><span class=\"n\">measure_wf</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"n\">hs</span> <span class=\"n\">hc&#39;</span> <span class=\"o\">},</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n\n\n<span class=\"kn\">theorem</span> <span class=\"n\">q6</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"err\">∣</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>  <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">k</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">q6&#39;</span> <span class=\"n\">k</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"bp\">_⟩</span> <span class=\"k\">with</span> <span class=\"n\">l</span> <span class=\"n\">hl</span><span class=\"o\">,</span>\n  <span class=\"n\">swap</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_two</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_two</span><span class=\"o\">,</span> <span class=\"n\">hk</span><span class=\"o\">],</span>\n  <span class=\"n\">use</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hk</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">mul_div_cancel_left</span><span class=\"o\">],</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_two</span><span class=\"o\">,</span> <span class=\"n\">hl</span><span class=\"o\">],</span> <span class=\"n\">apply</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">zero_lt_succ</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 172710101,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1565207983
    },
    {
        "content": "<p>I think <code>nat.add_eq_zero</code> and <code>nat.mul_self_eq_zero</code> are there.</p>",
        "id": 172710444,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1565208229
    },
    {
        "content": "<p>In the proof that the complexes are a field it uses a lemma of the form <code>x*x+y*y=0 -&gt; x=0</code> but I can't remember the hypotheses, it might be totally ordered fields</p>",
        "id": 172710751,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1565208454
    },
    {
        "content": "<p>done! </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">basic</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Vieta&#39;s formula for a quadratic equation -/</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">Vieta_formula_quadratic</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">eq_of_sub_eq_zero</span><span class=\"o\">,</span> <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">h</span> <span class=\"o\">},</span>\n  <span class=\"n\">use</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">left_distrib</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">this</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">fn_min_add_fn_max</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_semigroup</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"n\">le_of_lt</span> <span class=\"o\">(</span><span class=\"n\">lt_of_not_ge</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">]</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">min_add_max</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_semigroup</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">max</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"n\">fn_min_add_fn_max</span> <span class=\"n\">id</span> <span class=\"n\">n</span> <span class=\"n\">m</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">fn_min_mul_fn_max</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">comm_semigroup</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">max</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">f</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"n\">le_of_lt</span> <span class=\"o\">(</span><span class=\"n\">lt_of_not_ge</span> <span class=\"n\">h</span><span class=\"o\">),</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">min_mul_max</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">comm_semigroup</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">max</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"n\">fn_min_mul_fn_max</span> <span class=\"n\">id</span> <span class=\"n\">n</span> <span class=\"n\">m</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">min_le_max</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">decidable_linear_order</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">min</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"bp\">≤</span> <span class=\"n\">max</span> <span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"n\">le_trans</span> <span class=\"o\">(</span><span class=\"n\">min_le_left</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">le_max_left</span> <span class=\"n\">n</span> <span class=\"n\">m</span><span class=\"o\">)</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">eq_iff_eq_of_eq</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">z</span> <span class=\"bp\">↔</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">z</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">]</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">mul_self_eq_zero</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">domain</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">↔</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">simp</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">mul_self_add_mul_self_eq_zero</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">linear_ordered_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">↔</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">split</span><span class=\"bp\">;</span> <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">swap</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">norm_num</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">≤</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">h</span><span class=\"o\">],</span> <span class=\"n\">apply</span> <span class=\"n\">le_add_of_nonneg_left</span> <span class=\"o\">(</span><span class=\"n\">mul_self_nonneg</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">le_antisymm</span> <span class=\"n\">this</span> <span class=\"o\">(</span><span class=\"n\">mul_self_nonneg</span> <span class=\"n\">y</span><span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"n\">mul_self_eq_zero</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">mul_zero</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">,</span> <span class=\"n\">mul_self_eq_zero</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span> <span class=\"o\">},</span>\n  <span class=\"n\">split</span><span class=\"bp\">;</span> <span class=\"n\">assumption</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">q6&#39;</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">,</span> <span class=\"n\">l</span> <span class=\"bp\">*</span> <span class=\"n\">l</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">lemma1</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span><span class=\"o\">},</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">↔</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">right_distrib</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">sub_eq_iff_eq_add</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">sub_eq_zero</span><span class=\"o\">],</span>\n    <span class=\"n\">apply</span> <span class=\"n\">eq_iff_eq_of_eq</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">cases</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">eq_zero_or_pos</span> <span class=\"n\">k</span> <span class=\"k\">with</span> <span class=\"n\">hk</span> <span class=\"n\">hk</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hk</span><span class=\"o\">],</span> <span class=\"n\">refl</span> <span class=\"o\">},</span>\n  <span class=\"k\">let</span> <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"bp\">ℕ</span> <span class=\"bp\">×</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">ab</span> <span class=\"bp\">|</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">≠</span> <span class=\"err\">∅</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">ne_empty_iff_exists_mem</span><span class=\"o\">],</span> <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">hab</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">hab</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"k\">let</span> <span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">×</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">ab</span><span class=\"o\">,</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">ab</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">s_min</span> <span class=\"o\">:=</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">min</span> <span class=\"o\">(</span><span class=\"n\">measure_wf</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">a&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"n\">min</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">b&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"n\">max</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span> <span class=\"o\">:=</span> <span class=\"n\">a&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℤ</span> <span class=\"o\">:=</span> <span class=\"n\">b&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_zero_le</span> <span class=\"n\">a&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_zero_le</span> <span class=\"n\">b&#39;</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">a_le_b</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">apply_mod_cast</span> <span class=\"n\">min_le_max</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">norm_cast</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">fn_min_add_fn_max</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"n\">min_mul_max</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">],</span>\n    <span class=\"n\">exact</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">min_mem</span> <span class=\"o\">(</span><span class=\"n\">measure_wf</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"n\">hs</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">h2ab</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">lemma1</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"n\">cases</span> <span class=\"n\">eq_or_lt_of_le</span> <span class=\"n\">ha</span> <span class=\"k\">with</span> <span class=\"n\">h2a</span> <span class=\"n\">h2a</span><span class=\"o\">,</span> <span class=\"c1\">-- if a = 0 it is easy</span>\n  <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"n\">b&#39;</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">h2a</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hab</span><span class=\"o\">,</span> <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">hab</span> <span class=\"o\">},</span> <span class=\"n\">exact_mod_cast</span> <span class=\"n\">this</span> <span class=\"o\">},</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">Vieta_formula_quadratic</span> <span class=\"n\">h2ab</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">h1c</span><span class=\"o\">,</span> <span class=\"n\">h2c</span><span class=\"o\">,</span> <span class=\"n\">h3c</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h4c</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n    <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_eq_zero_iff_eq_neg</span><span class=\"o\">,</span> <span class=\"n\">sub_eq_iff_eq_add</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h1c</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h1c</span><span class=\"o\">],</span> <span class=\"n\">ring</span> <span class=\"o\">},</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"err\">↑</span><span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n    <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">h1</span><span class=\"o\">],</span> <span class=\"n\">apply</span> <span class=\"n\">add_nonneg</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">mul_self_nonneg</span> <span class=\"o\">},</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">nonneg_of_mul_nonneg_left</span> <span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">apply_mod_cast</span> <span class=\"n\">hk</span> <span class=\"o\">},</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">le_of_lt_add_one</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">lt_of_le_of_ne</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n      <span class=\"n\">intro</span> <span class=\"n\">h2</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">h2</span><span class=\"o\">,</span> <span class=\"n\">mul_zero</span><span class=\"o\">,</span> <span class=\"n\">mul_self_add_mul_self_eq_zero</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h1</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"n\">ne_of_gt</span> <span class=\"n\">h2a</span> <span class=\"n\">h1</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"o\">},</span>\n    <span class=\"n\">apply</span> <span class=\"n\">nonneg_of_mul_nonneg_right</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">h2a</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">h5c</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">lt_of_mul_lt_mul_left</span> <span class=\"bp\">_</span> <span class=\"n\">hb</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">h3c</span><span class=\"o\">],</span>\n    <span class=\"n\">apply</span> <span class=\"n\">lt_of_lt_of_le</span> <span class=\"o\">(</span><span class=\"n\">sub_lt_self</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">mul_le_mul</span> <span class=\"n\">a_le_b</span> <span class=\"n\">a_le_b</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span><span class=\"o\">),</span>\n    <span class=\"n\">apply_mod_cast</span> <span class=\"n\">hk</span> <span class=\"o\">},</span>\n  <span class=\"k\">obtain</span> <span class=\"bp\">⟨</span><span class=\"n\">c&#39;</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">c&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">c&#39;</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"n\">c</span><span class=\"bp\">.</span><span class=\"n\">nat_abs</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">nat_abs_of_nonneg</span> <span class=\"n\">h4c</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">hc&#39;</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a&#39;</span><span class=\"o\">,</span> <span class=\"n\">c&#39;</span><span class=\"o\">)</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">lemma1</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h1c</span><span class=\"o\">,</span> <span class=\"n\">exact_mod_cast</span> <span class=\"n\">h1c</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">a&#39;</span> <span class=\"bp\">+</span> <span class=\"n\">b&#39;</span> <span class=\"bp\">≤</span> <span class=\"n\">a&#39;</span> <span class=\"bp\">+</span> <span class=\"n\">c&#39;</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">not_lt</span><span class=\"o\">,</span> <span class=\"n\">min_add_max</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">s_min</span><span class=\"bp\">.</span><span class=\"mi\">2</span><span class=\"o\">],</span>\n    <span class=\"n\">exact</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">not_lt_min</span> <span class=\"o\">(</span><span class=\"n\">measure_wf</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"n\">hs</span> <span class=\"n\">hc&#39;</span> <span class=\"o\">},</span>\n  <span class=\"n\">exfalso</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">not_le_of_lt</span> <span class=\"n\">h5c</span><span class=\"o\">,</span>\n  <span class=\"n\">apply_mod_cast</span> <span class=\"n\">le_of_add_le_add_left</span> <span class=\"n\">this</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">q6</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"err\">∣</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>  <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">k</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">q6&#39;</span> <span class=\"n\">k</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"bp\">_⟩</span> <span class=\"k\">with</span> <span class=\"n\">l</span> <span class=\"n\">hl</span><span class=\"o\">,</span>\n  <span class=\"n\">swap</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_two</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_two</span><span class=\"o\">,</span> <span class=\"n\">hk</span><span class=\"o\">],</span>\n  <span class=\"n\">use</span> <span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hk</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">mul_div_cancel_left</span><span class=\"o\">],</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_two</span><span class=\"o\">,</span> <span class=\"n\">hl</span><span class=\"o\">],</span> <span class=\"n\">apply</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">zero_lt_succ</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 172712577,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1565209580
    },
    {
        "content": "<p>I used some of <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> proof steps (involving finding the minimal pair).</p>",
        "id": 172713025,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1565209919
    },
    {
        "content": "<blockquote>\n<p>I used some of <span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> proof steps (involving finding the minimal pair).</p>\n</blockquote>\n<p>Nice job! I'm glad some of what I did was helpful in the end <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 172713389,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565210156
    },
    {
        "content": "<p>I wonder how much of the overall strategy can be made into a general <code>infinite_descent</code> or <code>vieta_jumping</code> theorem? For instance to prove the other example on the wikipedia page also:</p>\n<blockquote>\n<p>Let a and b be positive integers such that ab divides a^2 + b^2 + 1. Prove that 3ab= a^2 + b^2 + 1</p>\n</blockquote>",
        "id": 172713690,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1565210381
    },
    {
        "content": "<p>This is what I have so far:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">rat</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">linarith</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">wlog</span>\n\n<span class=\"c1\">-- local attribute [instance] classical.prop_decidable</span>\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_two</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">le_one_cases</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span>     <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">left</span><span class=\"bp\">;</span>  <span class=\"n\">refl</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span>     <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">right</span><span class=\"bp\">;</span> <span class=\"n\">refl</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">linarith</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Vieta&#39;s formula for a quadratic equation -/</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">Vieta_formula_quadratic</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n    <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">eq_of_sub_eq_zero</span><span class=\"o\">,</span> <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">h</span> <span class=\"o\">},</span>\n  <span class=\"n\">use</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">left_distrib</span><span class=\"o\">,</span> <span class=\"n\">right_distrib</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">this</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">infinite_descent</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">ih</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">P</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"bp\">∃</span> <span class=\"n\">m</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">P</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"c1\">-- let k := well_founded.min</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"kn\">reducible</span><span class=\"o\">]</span>\n<span class=\"n\">def</span> <span class=\"n\">P</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">k</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">}</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P_comm</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">P</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_comm</span><span class=\"o\">,</span> <span class=\"n\">mul_right_comm</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">P_comm</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"n\">h</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P_of_eq</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">replace</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n  <span class=\"o\">{</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">P</span><span class=\"o\">,</span> <span class=\"n\">two_mul</span><span class=\"o\">,</span> <span class=\"n\">mul_add</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">ne_of_lt</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span>       <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">mul_le_mul_right</span> <span class=\"bp\">_</span> <span class=\"n\">h</span>\n           <span class=\"bp\">...</span> <span class=\"bp\">&lt;</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"k\">begin</span>\n    <span class=\"n\">apply</span> <span class=\"n\">mul_lt_mul&#39;</span><span class=\"o\">,</span>\n    <span class=\"n\">all_goals</span> <span class=\"o\">{</span><span class=\"n\">linarith</span><span class=\"o\">},</span>\n  <span class=\"kn\">end</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"n\">level_zero</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"mi\">0</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">P</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P_zero</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">symmetry</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">P</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">h</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P_quadratic_iff</span> <span class=\"o\">:</span>\n  <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">:</span><span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">P</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_nat_inj&#39;</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">sub_eq_zero</span><span class=\"o\">],</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">pow_two</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"n\">level_pos</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">le_zero_iff</span> <span class=\"n\">at</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">subst</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">level_zero</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">refl</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P_root_ineq</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span><span class=\"bp\">*</span><span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">exists_eq_add_of_le</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">exists_eq_add_of_lt</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">level_pos</span> <span class=\"n\">H</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">l</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">clear</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">P</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span> <span class=\"err\">⊢</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">succ_mul</span><span class=\"o\">,</span> <span class=\"n\">add_comm</span><span class=\"o\">],</span>\n  <span class=\"n\">apply</span> <span class=\"n\">add_le_add_right</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">ring</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- contrapose! h,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P_vieta_jump</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">*</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">hb</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span><span class=\"bp\">*</span><span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">P_root_ineq</span> <span class=\"n\">h</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">P_quadratic_iff</span> <span class=\"n\">at</span> <span class=\"n\">h</span> <span class=\"err\">⊢</span><span class=\"o\">,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">Vieta_formula_quadratic</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">h_root</span><span class=\"o\">,</span> <span class=\"n\">hV₁</span><span class=\"o\">,</span> <span class=\"n\">hV₂</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">eq_sub_of_add_eq&#39;</span> <span class=\"n\">hV₁</span><span class=\"o\">,</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_nat_sub</span> <span class=\"n\">hb</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">h_root</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">level_square</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">suffices</span> <span class=\"n\">h₀</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">d</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rcases</span> <span class=\"n\">h₀</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"n\">d</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">P_zero</span> <span class=\"n\">hd</span> <span class=\"o\">},</span>\n  <span class=\"n\">apply</span> <span class=\"n\">infinite_descent</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"n\">b</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">clear</span> <span class=\"n\">h</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"n\">rintros</span> <span class=\"n\">b</span> <span class=\"n\">bpos</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">aneb</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n    <span class=\"n\">subst</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">P_of_eq</span> <span class=\"n\">h</span> <span class=\"o\">},</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">lt_trichotomy</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"k\">with</span> <span class=\"n\">h&#39;</span><span class=\"bp\">|</span><span class=\"n\">rfl</span><span class=\"bp\">|</span><span class=\"n\">h&#39;</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">H&#39;</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">*</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">],</span>\n    <span class=\"n\">rw</span> <span class=\"n\">P_comm</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">P_vieta_jump</span> <span class=\"n\">h</span> <span class=\"n\">H&#39;</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">specialize</span> <span class=\"n\">this</span> <span class=\"o\">(</span><span class=\"n\">lt_trans</span> <span class=\"n\">bpos</span> <span class=\"n\">H&#39;</span><span class=\"o\">)</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"n\">aneb</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 172714995,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565211257
    },
    {
        "content": "<p>This follows the ideas at the bottom of the Wiki page.</p>",
        "id": 172715021,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565211280
    },
    {
        "content": "<p>I've tried to write it in a style that is easy to document for use with Patrick's formatter.</p>",
        "id": 172715211,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565211432
    },
    {
        "content": "<p>I'm struggling with two the \"wlog\" part of the proof <span aria-label=\"expressionless\" class=\"emoji emoji-1f611\" role=\"img\" title=\"expressionless\">:expressionless:</span></p>",
        "id": 172715230,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565211457
    },
    {
        "content": "<p>Ok, here is my working solution</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">rat</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">linarith</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">wlog</span>\n\n<span class=\"n\">local</span> <span class=\"n\">attribute</span> <span class=\"o\">[</span><span class=\"n\">simp</span><span class=\"o\">]</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_two</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">le_one_cases</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span>     <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">left</span><span class=\"bp\">;</span>  <span class=\"n\">refl</span>\n<span class=\"bp\">|</span> <span class=\"mi\">1</span>     <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">right</span><span class=\"bp\">;</span> <span class=\"n\">refl</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">linarith</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"> Vieta&#39;s formula for a quadratic equation -/</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">Vieta_formula_quadratic</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n    <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">eq_of_sub_eq_zero</span><span class=\"o\">,</span> <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">h</span> <span class=\"o\">},</span>\n  <span class=\"n\">use</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">left_distrib</span><span class=\"o\">,</span> <span class=\"n\">right_distrib</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"n\">this</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"kn\">reducible</span><span class=\"o\">]</span>\n<span class=\"n\">def</span> <span class=\"n\">P</span> <span class=\"o\">:=</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">k</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">}</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P_comm</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">P</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_comm</span><span class=\"o\">,</span> <span class=\"n\">mul_right_comm</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">b</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">P_comm</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"n\">h</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">level_le_one_of_eq</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">replace</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n  <span class=\"o\">{</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">P</span><span class=\"o\">,</span> <span class=\"n\">two_mul</span><span class=\"o\">,</span> <span class=\"n\">mul_add</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">ne_of_lt</span><span class=\"o\">,</span>\n  <span class=\"k\">calc</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span>       <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">mul_le_mul_right</span> <span class=\"bp\">_</span> <span class=\"n\">h</span>\n           <span class=\"bp\">...</span> <span class=\"bp\">&lt;</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"k\">begin</span>\n    <span class=\"n\">apply</span> <span class=\"n\">mul_lt_mul&#39;</span><span class=\"o\">,</span>\n    <span class=\"n\">all_goals</span> <span class=\"o\">{</span><span class=\"n\">linarith</span><span class=\"o\">},</span>\n  <span class=\"kn\">end</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"n\">level_zero</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"mi\">0</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">P</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P_zero</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">symmetry</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">P</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">h</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P_quadratic_iff</span> <span class=\"o\">:</span>\n  <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">:</span><span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">P</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_nat_inj&#39;</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">sub_eq_zero</span><span class=\"o\">],</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">pow_two</span><span class=\"o\">],</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P</span><span class=\"bp\">.</span><span class=\"n\">level_pos</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">le_zero_iff</span> <span class=\"n\">at</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">subst</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">level_zero</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">refl</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">P_vieta_jump</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">*</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">k</span><span class=\"bp\">*</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">hk</span> <span class=\"o\">:=</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">level_pos</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">P_quadratic_iff</span> <span class=\"n\">at</span> <span class=\"n\">h</span> <span class=\"err\">⊢</span><span class=\"o\">,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">Vieta_formula_quadratic</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"n\">h_root</span><span class=\"o\">,</span> <span class=\"n\">hV₁</span><span class=\"o\">,</span> <span class=\"n\">hV₂</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hc</span> <span class=\"o\">:=</span> <span class=\"n\">eq_sub_of_add_eq&#39;</span> <span class=\"n\">hV₁</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hnat</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"n\">Pkac</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"bp\">ℤ</span><span class=\"o\">)</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">sub_eq_zero</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">h_root</span><span class=\"o\">],</span>\n      <span class=\"n\">ring</span> <span class=\"o\">},</span>\n    <span class=\"k\">have</span> <span class=\"n\">hpos</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"bp\">ℤ</span><span class=\"o\">)</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">c</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">add_pos_of_pos_of_nonneg</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">pow_two</span><span class=\"o\">,</span>\n        <span class=\"n\">apply</span> <span class=\"n\">mul_pos</span><span class=\"bp\">;</span>\n        <span class=\"n\">exact_mod_cast</span> <span class=\"n\">ha</span> <span class=\"o\">},</span>\n      <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">pow_two_nonneg</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"n\">Pkac</span> <span class=\"n\">at</span> <span class=\"n\">hpos</span><span class=\"o\">,</span>\n    <span class=\"n\">replace</span> <span class=\"n\">hpos</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">pos_of_mul_pos_right</span> <span class=\"n\">hpos</span>\n      <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">exact_mod_cast</span> <span class=\"o\">(</span><span class=\"n\">le_of_lt</span> <span class=\"n\">hk</span><span class=\"o\">)),</span>\n    <span class=\"n\">replace</span> <span class=\"n\">hpos</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">le_of_lt_add_one</span> <span class=\"n\">hpos</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">nonneg_of_mul_nonneg_left</span> <span class=\"n\">hpos</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">exact_mod_cast</span> <span class=\"n\">ha</span><span class=\"o\">),</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">b_le_ka</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_nat_le</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">sub_nonneg</span><span class=\"o\">],</span>\n    <span class=\"n\">rw</span> <span class=\"n\">hc</span> <span class=\"n\">at</span> <span class=\"n\">hnat</span><span class=\"o\">,</span>\n    <span class=\"n\">exact_mod_cast</span> <span class=\"n\">hnat</span> <span class=\"o\">},</span>\n  <span class=\"k\">have</span> <span class=\"n\">c_lt_a</span> <span class=\"o\">:</span> <span class=\"n\">c</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">hV₂</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">ne_of_gt</span><span class=\"o\">,</span>\n    <span class=\"k\">calc</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">:</span><span class=\"bp\">ℤ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">&gt;</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"o\">:</span>\n      <span class=\"k\">begin</span>\n        <span class=\"n\">rw</span> <span class=\"n\">pow_two</span><span class=\"o\">,</span>\n        <span class=\"n\">apply</span> <span class=\"n\">mul_lt_mul</span><span class=\"o\">,</span>\n        <span class=\"n\">all_goals</span> <span class=\"o\">{</span> <span class=\"n\">linarith</span> <span class=\"o\">},</span>\n      <span class=\"kn\">end</span>\n      <span class=\"bp\">...</span> <span class=\"bp\">&gt;</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">sub_lt_self</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">exact_mod_cast</span> <span class=\"n\">hk</span><span class=\"o\">)</span> <span class=\"o\">},</span>\n  <span class=\"n\">subst</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_nat_sub</span> <span class=\"n\">b_le_ka</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">h_root</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">assumption_mod_cast</span> <span class=\"o\">},</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">infinite_descent</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">ih</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">P</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"bp\">∃</span> <span class=\"n\">m</span> <span class=\"bp\">&lt;</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">P</span> <span class=\"n\">m</span><span class=\"o\">))</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"err\">∅</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span><span class=\"o\">),</span>\n  <span class=\"o\">{</span> <span class=\"n\">rintro</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n    <span class=\"n\">assumption</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"k\">let</span> <span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">min</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">lt_wf</span> <span class=\"n\">P</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hPk</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">min_mem</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">lt_wf</span> <span class=\"n\">P</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">hk</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rwa</span> <span class=\"n\">hk</span> <span class=\"n\">at</span> <span class=\"n\">hPk</span> <span class=\"o\">},</span>\n  <span class=\"n\">replace</span> <span class=\"n\">hk</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pos_iff_ne_zero</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">ih</span> <span class=\"n\">k</span> <span class=\"n\">hk</span> <span class=\"n\">hPk</span> <span class=\"k\">with</span> <span class=\"n\">H</span><span class=\"bp\">|⟨</span><span class=\"n\">m</span><span class=\"o\">,</span><span class=\"n\">hm</span><span class=\"o\">,</span><span class=\"n\">hPm</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">assumption</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">exfalso</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">well_founded</span><span class=\"bp\">.</span><span class=\"n\">not_lt_min</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">lt_wf</span> <span class=\"n\">P</span> <span class=\"n\">h</span> <span class=\"n\">hPm</span> <span class=\"n\">hm</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">level_square</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">wlog</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"n\">swap</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">this</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">},</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">subst</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n    <span class=\"n\">replace</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">level_le_one_of_eq</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">le_one_cases</span> <span class=\"n\">k</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">rfl</span><span class=\"bp\">|</span><span class=\"n\">rfl</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n      <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"n\">suffices</span> <span class=\"n\">h₀</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">d</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rcases</span> <span class=\"n\">h₀</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">d</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"n\">d</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">P_zero</span> <span class=\"n\">hd</span> <span class=\"o\">},</span>\n  <span class=\"n\">replace</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"n\">lt_of_le_of_ne</span> <span class=\"n\">case</span> <span class=\"n\">H</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">infinite_descent</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">P</span> <span class=\"n\">k</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">x</span> <span class=\"bp\">&lt;</span> <span class=\"n\">y</span><span class=\"o\">))</span> <span class=\"n\">b</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">this</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">use</span> <span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">],</span>\n      <span class=\"n\">intro</span><span class=\"o\">,</span>\n      <span class=\"n\">assumption</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">clear</span> <span class=\"n\">h</span> <span class=\"n\">H</span> <span class=\"n\">case</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n      <span class=\"n\">rintros</span> <span class=\"n\">b</span> <span class=\"n\">bpos</span> <span class=\"bp\">⟨</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">h&#39;</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n      <span class=\"n\">specialize</span> <span class=\"n\">h&#39;</span> <span class=\"n\">bpos</span><span class=\"o\">,</span>\n      <span class=\"n\">by_cases</span> <span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span> <span class=\"n\">left</span><span class=\"o\">,</span>\n        <span class=\"n\">subst</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n        <span class=\"n\">simp</span><span class=\"o\">,</span>\n        <span class=\"n\">use</span> <span class=\"o\">[</span><span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">],</span> <span class=\"o\">},</span>\n      <span class=\"o\">{</span> <span class=\"n\">right</span><span class=\"o\">,</span>\n        <span class=\"n\">use</span> <span class=\"o\">[</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">h&#39;</span><span class=\"o\">,</span> <span class=\"n\">k</span><span class=\"bp\">*</span><span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span><span class=\"o\">],</span>\n        <span class=\"n\">replace</span> <span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pos_iff_ne_zero</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n        <span class=\"n\">cases</span> <span class=\"n\">P_vieta_jump</span> <span class=\"n\">h</span> <span class=\"n\">ha</span> <span class=\"n\">h&#39;</span><span class=\"o\">,</span>\n        <span class=\"n\">split</span><span class=\"o\">,</span>\n        <span class=\"o\">{</span> <span class=\"n\">rwa</span> <span class=\"n\">P_comm</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n        <span class=\"o\">{</span> <span class=\"n\">intro</span><span class=\"o\">,</span>\n          <span class=\"n\">assumption</span> <span class=\"o\">}</span> <span class=\"o\">}</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 172726748,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565222544
    },
    {
        "content": "<p>Maybe, strictly speaking, I should include a little wrapper at the end...</p>",
        "id": 172726760,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565222562
    },
    {
        "content": "<p>But Kevin didn't provide a formalisation. So I will say that I completed the problem (-;</p>",
        "id": 172726778,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565222589
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> Voila:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"err\">∣</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"mi\">3</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">hk</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"bp\">*</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span> <span class=\"n\">ring</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">pow_two</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hk</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">constant_descent_vieta_jumping</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">hk</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">eq_iff_eq_cancel_left</span><span class=\"o\">,</span> <span class=\"n\">ring</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">dsimp</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">int</span><span class=\"bp\">.</span><span class=\"n\">coe_nat_inj&#39;</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">sub_eq_zero</span><span class=\"o\">],</span>\n    <span class=\"n\">apply</span> <span class=\"n\">eq_iff_eq_cancel_right</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">ring</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">clear</span> <span class=\"n\">hk</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"n\">x_sq_dvd</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">x</span> <span class=\"err\">∣</span> <span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"n\">dvd_mul_right</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">*</span><span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">hx</span> <span class=\"n\">at</span> <span class=\"n\">x_sq_dvd</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">dvd_add_self_left</span><span class=\"o\">,</span> <span class=\"n\">add_assoc</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">x_sq_dvd</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">x_sq_dvd</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">eq_comm</span> <span class=\"n\">at</span> <span class=\"n\">hy</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">mul_eq_one_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">hy</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">hy</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">rfl</span><span class=\"o\">,</span><span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">hx</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">clear</span> <span class=\"n\">hk</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n    <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">x_lt_y</span> <span class=\"n\">hx</span> <span class=\"n\">h_base</span> <span class=\"n\">h</span> <span class=\"n\">z</span> <span class=\"n\">h_root</span> <span class=\"n\">hV₁</span> <span class=\"n\">hV₀</span><span class=\"o\">,</span>\n    <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"n\">zy_pos</span> <span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">hV₀</span><span class=\"o\">,</span> <span class=\"n\">exact_mod_cast</span> <span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">zero_le</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">},</span>\n      <span class=\"n\">apply</span> <span class=\"n\">nonneg_of_mul_nonneg_right</span> <span class=\"n\">zy_pos</span><span class=\"o\">,</span>\n      <span class=\"n\">linarith</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">contrapose</span><span class=\"bp\">!</span> <span class=\"n\">hV₀</span><span class=\"o\">,</span>\n      <span class=\"n\">apply</span> <span class=\"n\">ne_of_gt</span><span class=\"o\">,</span>\n      <span class=\"n\">push_neg</span> <span class=\"n\">at</span> <span class=\"n\">h_base</span><span class=\"o\">,</span>\n      <span class=\"k\">calc</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">&gt;</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span>       <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">apply</span> <span class=\"n\">mul_lt_mul_of_pos_right</span><span class=\"bp\">;</span> <span class=\"n\">linarith</span>\n             <span class=\"bp\">...</span> <span class=\"bp\">≥</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">apply</span> <span class=\"n\">mul_le_mul</span><span class=\"bp\">;</span> <span class=\"n\">linarith</span>\n             <span class=\"bp\">...</span> <span class=\"bp\">&gt;</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span>   <span class=\"o\">:</span>\n        <span class=\"k\">begin</span>\n          <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_add</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">],</span>\n          <span class=\"n\">apply</span> <span class=\"n\">add_lt_add_left</span><span class=\"o\">,</span>\n          <span class=\"n\">assumption_mod_cast</span>\n        <span class=\"kn\">end</span><span class=\"o\">,</span> <span class=\"o\">}</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">h</span> <span class=\"n\">h_base</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">le_one_cases</span> <span class=\"n\">x</span> <span class=\"n\">h_base</span> <span class=\"k\">with</span> <span class=\"n\">rfl</span><span class=\"bp\">|</span><span class=\"n\">rfl</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">contradiction</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">y_dvd</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"err\">∣</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"o\">:=</span> <span class=\"n\">dvd_mul_right</span> <span class=\"n\">y</span> <span class=\"n\">k</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">add_assoc</span><span class=\"o\">,</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">dvd_add_left</span> <span class=\"o\">(</span><span class=\"n\">dvd_mul_left</span> <span class=\"n\">y</span> <span class=\"n\">y</span><span class=\"o\">)]</span> <span class=\"n\">at</span> <span class=\"n\">y_dvd</span><span class=\"o\">,</span>\n      <span class=\"k\">have</span> <span class=\"n\">y_eq</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">prime_two</span><span class=\"bp\">.</span><span class=\"mi\">2</span> <span class=\"n\">y</span> <span class=\"n\">y_dvd</span><span class=\"o\">,</span>\n      <span class=\"n\">rcases</span> <span class=\"n\">y_eq</span> <span class=\"k\">with</span> <span class=\"n\">rfl</span><span class=\"bp\">|</span><span class=\"n\">rfl</span><span class=\"o\">,</span>\n      <span class=\"o\">{</span> <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n      <span class=\"o\">{</span> <span class=\"n\">replace</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n        <span class=\"n\">apply</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">eq_of_mul_eq_mul_left</span> <span class=\"bp\">_</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n        <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">succ_pos</span> <span class=\"bp\">_</span><span class=\"o\">),</span> <span class=\"o\">}</span> <span class=\"o\">}</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 172842543,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565349057
    },
    {
        "content": "<p>I'm quite satisfied with how this turned out</p>",
        "id": 172842556,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565349086
    },
    {
        "content": "<p>All the magic happens in <code>apply constant_descent_vieta_jumping</code></p>",
        "id": 172842566,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565349110
    },
    {
        "content": "<p>Here's a gist with the full code: <a href=\"https://gist.github.com/jcommelin/619d66ccb3dcf534017051b0a1263f6f\" target=\"_blank\" title=\"https://gist.github.com/jcommelin/619d66ccb3dcf534017051b0a1263f6f\">https://gist.github.com/jcommelin/619d66ccb3dcf534017051b0a1263f6f</a></p>",
        "id": 172842627,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565349178
    },
    {
        "content": "<p>I didn't try to golf, on purpose. I want to run this through Patrick's formatter now.</p>",
        "id": 172842648,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565349214
    },
    {
        "content": "<p>I hoped that <code>omega</code> would discharge some of the easier goals... but it didn't want to, see the other thread.</p>",
        "id": 172842698,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1565349249
    }
]