[
    {
        "content": "<p>I have a domain <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> and its field of fractions <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> with the localization map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mspace></mspace><mspace width=\"0.1111111111111111em\"></mspace><mo lspace=\"0em\" rspace=\"0.17em\"></mo><mtext> ⁣</mtext><mo lspace=\"0em\" rspace=\"0em\">:</mo><mspace width=\"0.3333333333333333em\"></mspace><mi>R</mi><mo>→</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">f\\colon R\\to K</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace nobreak\"></span><span class=\"mspace\" style=\"margin-right:0.1111111111111111em;\"></span><span class=\"mpunct\"></span><span class=\"mspace\" style=\"margin-right:-0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mrel\">:</span></span><span class=\"mspace\" style=\"margin-right:0.3333333333333333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> and I am trying to use its injectivity to shows that two elements <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>x</mi><mo>∈</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">a,x\\in R</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7335400000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> are equal knowing that they are equal in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>, so that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(a)=f(x)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>. But I guess I am poorly using the command <code>submonoid.localization_map.to_map_injective</code>. Indeed, If I apply <code>apply submonoid.localization_map.to_map_injective f</code> I get the error `type mismatch at application</p>\n<p>submonoid.localization_map.to_map_injective f</p>\n<p>term  f has type</p>\n<p>fraction_map R K : Type (max u_1 u_2)</p>\n<p>but is expected to have type</p>\n<p>?m_6.to_map = ?m_7.to_map : Prop`</p>\n<p>If I try to read the error, it seems to me that it wants a proof that two things are equal, but the syntax seems to suggest that it wants a proof that two localization maps coincide. Is it the case?</p>",
        "id": 209630168,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1599740660
    },
    {
        "content": "<p>based on the error message, what if you just delete <code>f</code>?</p>",
        "id": 209630314,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599740755
    },
    {
        "content": "<p>invalid apply tactic, failed to unify<br>\n  a = x<br>\nwith<br>\n  ?m_6 = ?m_7</p>",
        "id": 209630384,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1599740778
    },
    {
        "content": "<p>Oh, this is not the lemma you want--it says that the function assigning to a <code>localization_map</code> its underlying function is injective.</p>",
        "id": 209630454,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599740836
    },
    {
        "content": "<p>and If I replace f with the proof that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f(x)=f(x)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> (called <code>haxf</code>) it becomes</p>\n<p>`type mismatch at application</p>\n<p>submonoid.localization_map.to_map_injective haxf</p>\n<p>term haxf</p>\n<p>has type<br>\n  ⇑(localization_map.to_map f) a = ⇑(localization_map.to_map f) x<br>\nbut is expected to have type<br>\n  ?m_6.to_map = ?m_7.to_map<br>\n`</p>",
        "id": 209630463,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1599740839
    },
    {
        "content": "<p>Ah, I see!</p>",
        "id": 209630493,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1599740855
    },
    {
        "content": "<p>It makes sense with the error I get.</p>",
        "id": 209630513,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1599740865
    },
    {
        "content": "<p>Looks like the one you want is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fraction_map.injective\">docs#fraction_map.injective</a></p>",
        "id": 209630617,
        "sender_full_name": "Reid Barton",
        "timestamp": 1599740919
    },
    {
        "content": "<p>Great! I am trying now...</p>",
        "id": 209630844,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1599741054
    },
    {
        "content": "<p>YES! Thanks so much!</p>",
        "id": 209630905,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1599741094
    },
    {
        "content": "<p>Everything is set up in perhaps a slightly confusing way for people who think about stuff like fields of fractions in a very concrete way. We've seen situations where we want isomorphic non-equal things to both be \"the\" field of fractions of something in mathematics, so we have a concrete story where we give an example field of fractions and also a universal theory where we develop some of the theory for anything satisfying the universal property.</p>",
        "id": 209639766,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1599744830
    }
]