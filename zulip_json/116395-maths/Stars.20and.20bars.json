[
    {
        "content": "<p>Do you think we could get a version of stars and bars that looks like that?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">stars_and_bars</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">card</span> <span class=\"o\">(</span><span class=\"n\">sym</span> <span class=\"n\">α</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">card</span> <span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">choose</span> <span class=\"o\">(</span><span class=\"n\">card</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>My idea is to show the equivalence between <code>sym</code> and <code>sym''</code> where</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">sym''</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"o\">(</span><span class=\"n\">option</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">//</span> <span class=\"n\">s.length</span> <span class=\"bp\">=</span> <span class=\"n\">card</span> <span class=\"n\">α</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">s.filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">none</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>The <code>some a</code> in the list represent stars and the <code>none</code> represent bars.<br>\nAnd then hopefully we can show <code>card sym'' α n = (card α + n - 1).choose (card α)</code> by simultaneous induction on <code>α</code> and <code>n</code>.</p>",
        "id": 247702655,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1627649090
    },
    {
        "content": "<p>This <code>sym''</code> looks too big -- you want the stars to be indistinguishable. I <em>think</em> the right thing to do is prove the theorem only for <code>fin n</code>, where you can say that multisets correspond to sorted lists. Then construct a bijection between sorted lists and \"binary vectors\" (the thing that <code>nat.choose</code> counts). At least this is the stars-and-bars proof, there might be another proof more amenable to formalisation.</p>",
        "id": 247725776,
        "sender_full_name": "David Wärn",
        "timestamp": 1627660193
    },
    {
        "content": "<p>What is <code>sym</code>? <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>",
        "id": 247725975,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1627660272
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/sym\">docs#sym</a></p>",
        "id": 247726011,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1627660295
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"130377\">David Wärn</span> <a href=\"#narrow/stream/116395-maths/topic/Stars.20and.20bars/near/247725776\">said</a>:</p>\n<blockquote>\n<p>This <code>sym''</code> looks too big -- you want the stars to be indistinguishable.</p>\n</blockquote>\n<p>Whoops, right.</p>",
        "id": 247792478,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1627718498
    }
]