[
    {
        "content": "<p>I now understand much better why the reals are marked as irreducible. But why are some things marked reducible? For example</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"kn\">reducible</span><span class=\"o\">]</span> <span class=\"n\">def</span> <span class=\"n\">ideal</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"n\">submodule</span> <span class=\"n\">α</span> <span class=\"n\">α</span>\n</pre></div>",
        "id": 171001425,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563293464
    },
    {
        "content": "<p>So you can rewrite with lemmas about submodules.</p>",
        "id": 171001834,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1563293704
    },
    {
        "content": "<p>im guessing that the elaborator reduces <code>ideal</code> and allows you to use results proven about submodules</p>",
        "id": 171001848,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1563293712
    },
    {
        "content": "<p>But you could say that about any definition, right? We should perhaps make the reals reducible, so we can rewrite with lemmas about quotients.</p>",
        "id": 171001971,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563293782
    },
    {
        "content": "<p>But in practice you never want to do that for the reals, but you do for ideals.</p>",
        "id": 171002114,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1563293882
    },
    {
        "content": "<p>Indeed, if you ever use that the reals are a quotient, you are in danger of being kicked out of maths club for breaking the interface. So this is merely a practical question about exactly how an object is used. I guess an alternative is to leave it semireducible and then reprove a whole bunch of lemmas for ideals by unfolding ideal and then applying the module theorems. I can see that this is less appealing.</p>",
        "id": 171002527,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563294163
    },
    {
        "content": "<p>Right. This is a time saving device until/unless we make a separate API for ideals</p>",
        "id": 171010910,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563300053
    }
]