[
    {
        "content": "<p>How can I construct in Lean the linear transformation (as a function) given by an (infinite) set of vectors (in <code>ℕ → ℝ</code>), a proof that they are linearly independent, and their images?</p>\n<p>On the subtype of <code>ℕ → ℝ</code> that is their span, of course.</p>",
        "id": 180752464,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573752200
    },
    {
        "content": "<p>I'm not very familiar with the <code>linear_algebra</code> in mathlib.</p>",
        "id": 180752917,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573752473
    },
    {
        "content": "<p>Oh I guess it's <code>to_lin</code>.</p>",
        "id": 180753021,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573752520
    },
    {
        "content": "<p>Or <code>eval</code>.</p>",
        "id": 180753042,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573752540
    },
    {
        "content": "<p>The linear transformation on what? Their span?</p>",
        "id": 180753269,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573752687
    },
    {
        "content": "<p>PS are you in the same room as me?</p>",
        "id": 180753285,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573752705
    },
    {
        "content": "<p>Yes.</p>",
        "id": 180753369,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573752754
    },
    {
        "content": "<p>And yes.</p>",
        "id": 180753381,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573752762
    },
    {
        "content": "<p>Apparently <code>matric</code>es don't work.</p>",
        "id": 180754305,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573753313
    },
    {
        "content": "<p>Because they're finite.</p>",
        "id": 180754404,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573753336
    },
    {
        "content": "<p>At least there must be a way to define a linear map from basis elements even if we were defining it on the entire space and not a subspace.</p>",
        "id": 180754494,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573753399
    },
    {
        "content": "<p>The setup confuses me. What is the type of the input and output?</p>",
        "id": 180754706,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1573753519
    },
    {
        "content": "<p>The type of the input is a submodule of <code>ℕ → ℝ</code> (given as the span of a set). The type of the output is <code>ℝ</code> as a module.</p>",
        "id": 180755006,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573753687
    },
    {
        "content": "<p>is <code>ℕ → ℝ</code> the vector space or is it a countable family over <code>ℝ</code>?</p>",
        "id": 180755074,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1573753741
    },
    {
        "content": "<p>It's the vector space.</p>",
        "id": 180755096,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573753759
    },
    {
        "content": "<p>But the map is defined only on a subtype of it.</p>",
        "id": 180755102,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573753769
    },
    {
        "content": "<p>The set of vectors is something like <code>1/(n+m) : m \\in \\nat</code></p>",
        "id": 180755135,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573753801
    },
    {
        "content": "<p>what map? you only have a submodule</p>",
        "id": 180755176,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1573753804
    },
    {
        "content": "<p>Right, but I can make it a subtype and it would still be a module.</p>",
        "id": 180755210,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573753827
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130500\">@Abhimanyu Pallavi Sudhir</span> If I understand you correctly, you don't really care about the vector space</p>",
        "id": 180755567,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573754043
    },
    {
        "content": "<p>So you have some family <code>v : \\iota → V</code> of vectors</p>",
        "id": 180755595,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573754061
    },
    {
        "content": "<p>And you have a proof that they are linearly independent.</p>",
        "id": 180755616,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573754075
    },
    {
        "content": "<p>And you have a family <code>f : \\iota → W</code> of \"images\"</p>",
        "id": 180755636,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573754093
    },
    {
        "content": "<p>And now you want the map from the span of the <code>v i</code> to <code>W</code>, that maps <code>v i</code> to <code>f i</code>.</p>",
        "id": 180755733,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573754151
    },
    {
        "content": "<p>Is that correct?</p>",
        "id": 180755741,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573754160
    },
    {
        "content": "<p>Yes.</p>",
        "id": 180755811,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573754185
    },
    {
        "content": "<p>Chris tells me <code>linear_independent.repr</code> is what I'm looking for.</p>",
        "id": 180755824,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573754197
    },
    {
        "content": "<p>I'm having a look at it.</p>",
        "id": 180755833,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1573754205
    },
    {
        "content": "<p>I think that's right</p>",
        "id": 180755834,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573754207
    }
]