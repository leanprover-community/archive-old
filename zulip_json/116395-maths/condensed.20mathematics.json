[
    {
        "content": "<p>I mentioned a link to a talk of Scholze on condensed sets recently. He's giving a course on it now:</p>\n<p><a href=\"http://www.math.uni-bonn.de/ag/alggeom/veranstaltungen/veranstaltungen_ss19\" target=\"_blank\" title=\"http://www.math.uni-bonn.de/ag/alggeom/veranstaltungen/veranstaltungen_ss19\">http://www.math.uni-bonn.de/ag/alggeom/veranstaltungen/veranstaltungen_ss19</a></p>\n<p>Here's <a href=\"https://www.math.uni-bonn.de/people/scholze/Condensed.pdf\" target=\"_blank\" title=\"https://www.math.uni-bonn.de/people/scholze/Condensed.pdf\">a direct link to the pdf notes</a>. <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> if you want to find a use for your categories other than \"doing schemes properly\" -- can you do this? This all looks very very reasonable to do in Lean, and it is a Fields Medallist explaining some completely up to the minute ideas. <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> can you make anything of this? Scholze is wresting with some very general ideas about how mathematicians put topology in their work, but of course he is coming from a very algebraic perspective. <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> after exams do you want to take a look at this? This might be a big thing, and in stark contrast to the perfectoid space theory, the entireity of what is known to humanity about condensed mathematics is in those 33 pages. Seems like a great time to start formalising it!</p>",
        "id": 164484834,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556568950
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Theorem 1.10. The category of condensed abelian groups is an abelian category which satis-\nfies Grothendieck’s axioms (AB3), (AB4), (AB5), (AB6), (AB3*) and (AB4*), to wit: all limits\n(AB3*) and colimits (AB3) exist, arbitrary products (AB4*), arbitrary direct sums (AB4) and fil-\ntered colimits (AB5) are exact,...\n</pre></div>\n\n\n<p>The proof looks simple. <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> how far are we from formalising this stuff in Lean?</p>",
        "id": 164485006,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556569072
    },
    {
        "content": "<p>Proof is in lecture 2.</p>",
        "id": 164485068,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556569098
    },
    {
        "content": "<p>Scholze seems to be worrying about the kind of things you once told me you were worrying about (cutting off the universe at kappa and then worrying about what he's lost)</p>",
        "id": 164485131,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556569177
    },
    {
        "content": "<p>Tom and I were actually discussing this as a possible project last week. I guess it depends on the API for sheaves on sites. Do we have a definition of what it means for a Grothendieck topology to be generated by covering families, and can we work with sheaves on sites other than the opens of a topological space? Do we have the category of pro-objects of finsets, or at least Stone spaces? If that's all there, then the various categories of condensed (insert models of algebraic theory) should be straightforward to define.</p>",
        "id": 164486068,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1556569892
    },
    {
        "content": "<p>I know that <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> was thinking about Grothendieck topologies at some point but he ran into problems. Johan -- why did you stop doing sheaves on sites? Would working in one fixed universe help matters? Note that Scholze spends half his life justifying how he can do everything in <code>Type 0</code>.</p>",
        "id": 164486498,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556570206
    },
    {
        "content": "<p>what is condensed mathematics?</p>",
        "id": 164489594,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1556572639
    },
    {
        "content": "<p>You need to read the paper, or watch the talk</p>",
        "id": 164490025,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556572982
    },
    {
        "content": "<p>A condensed X is a functor from the cat of profinite sets to the cat of X's. This is all coming out of Scholze's pro-etale stuff but it's independent of that.</p>",
        "id": 164490436,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556573289
    },
    {
        "content": "<p>in a slogan, \"mathematics internal to the topos of sheaves on the pro-etale site\"</p>",
        "id": 164490444,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1556573298
    },
    {
        "content": "<p>One of the insights is that we always used to think about the etale site, but never the pro-etale site; this was only discovered a few years ago.</p>",
        "id": 164490473,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556573338
    },
    {
        "content": "<p>I stopped doing sheaves because I wasn't getting anywhere, and I wanted to move on with the perfectoid project. I would love to return to sites and topoi. Especially if there are more people who want to contribute!</p>",
        "id": 164510063,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556598241
    },
    {
        "content": "<p>Note that the first 5 pages out of 33 don't contain any maths. Otoh... lecturing has just started in Germany... so you can expect that from this week onwards this document will grow with 25 pages a week, until mid-July. (In particular, I don't think the statement \"all that is known about condensed mathematics is written in these 33 pages\" is correct. There are likely stacks of notes by Dustin and Peter lying around in there offices. And those will be appended to these lecture notes at high speed.)</p>",
        "id": 164510183,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556598375
    },
    {
        "content": "<p>I fear that formalising §2 will be quite hard. We'll need a very decent API for sites if we want to prove that a certain topos is equivalent to sheaves on various different sites.</p>",
        "id": 164515477,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556606433
    },
    {
        "content": "<p>Warning 2.8 suggests that we might first want to formalise <code>infty</code>-cats</p>",
        "id": 164516034,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556607230
    },
    {
        "content": "<p>I believe that both <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> and I have similar feelings about category theory -- at a basic level it offers little more than a collection of organising principles, and so far in mathlib we have managed to formalise many of those basic organising principles just fine without having to bundle everything -- see Galois connections etc. However, beyond a certain point the language does become a lot more useful and powerful, when the stuff you're organising starts getting out of hand. We are on the verge of this in mathlib -- we don't have sheaf cohomology yet but I could imagine defining it as a derived functor, for example. But because it's not been essential for anything else just yet, it is still there being rather uncared for with only Scott and Reid ever contributing to it. I have proposed rewriting parts of the schemes project using this language, and I would still very much like to do this. But this much meatier project of condensed mathematics might be a way of understanding much better which parts of the library need developing. How much of the basic category theory material needed before we can even contemplate a basic API for sites is already in mathlib and how much is just languishing elsewhere, about ten PR's away? That's a key question right now.</p>",
        "id": 164517454,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556608951
    },
    {
        "content": "<p>oh boy</p>",
        "id": 164517975,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556609674
    },
    {
        "content": "<p>If you think handling non-defeq type equalities and equivs are bad now, just wait until you see what infinity cats are like</p>",
        "id": 164518005,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556609758
    },
    {
        "content": "<p>More and more people are using infinity categories. Lurie is using them to do number theory.</p>",
        "id": 164518061,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556609790
    },
    {
        "content": "<p>that seems infinitely more complicated than necessary</p>",
        "id": 164518069,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556609813
    },
    {
        "content": "<p><a href=\"https://press.princeton.edu/titles/8957.html\" target=\"_blank\" title=\"https://press.princeton.edu/titles/8957.html\">https://press.princeton.edu/titles/8957.html</a></p>",
        "id": 164518083,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556609827
    },
    {
        "content": "<p>This stuff is no longer in the fringes. That's not just some logician doing navel-gazing, that's someone interested in actual questions in geometry</p>",
        "id": 164518098,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556609857
    },
    {
        "content": "<p>Infinity categories are deeply connected to HoTT. The language of HoTT is basically infinity groupoids</p>",
        "id": 164518099,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556609858
    },
    {
        "content": "<p>But we can emulate HoTT in Lean, right?</p>",
        "id": 164518168,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556609895
    },
    {
        "content": "<p>Where is this HoTT library that I never look at...</p>",
        "id": 164518174,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556609911
    },
    {
        "content": "<p>but the level of dependent types you have to deal with is almost unpalatable</p>",
        "id": 164518177,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556609912
    },
    {
        "content": "<p><a href=\"https://github.com/gebner/hott3\" target=\"_blank\" title=\"https://github.com/gebner/hott3\">https://github.com/gebner/hott3</a></p>",
        "id": 164518186,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556609932
    },
    {
        "content": "<p><code>don't use rewrite, use rwr instead</code></p>",
        "id": 164518219,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556609988
    },
    {
        "content": "<p>oh hells bells</p>",
        "id": 164518220,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556609992
    },
    {
        "content": "<p>It's possible, but it tends to take over your research program until everything is homotopy classes of spheres</p>",
        "id": 164518221,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556609993
    },
    {
        "content": "<p>That is <em>exactly</em> what I want to not happen.</p>",
        "id": 164518276,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610011
    },
    {
        "content": "<p>when you said \"the entirety of what is known to humanity about condensed mathematics is in those 33 pages\" I thought you meant \"the entirety of what is known to humanity about mathematics is condensed in those 33 pages\"</p>",
        "id": 164518306,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1556610071
    },
    {
        "content": "<p>Voevodsky's 2017 talk in Cambridge: \"I got interested in this stuff, I kind of wanted to formalise some of my work on Bloch-Kato, and then all of a sudden I decided to reject the axiom of choice and now I am doing other things. And Bloch-Kato will now never be done because I lost interest.\"</p>",
        "id": 164518309,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610074
    },
    {
        "content": "<blockquote>\n<p>when you said \"the entirety of what is known to humanity about condensed mathematics is in those 33 pages\" I thought you meant \"the entirety of what is known to humanity about mathematics is condensed in those 33 pages\"</p>\n</blockquote>\n<p>I am not sure the theory has had that much impact yet ;-)</p>",
        "id": 164518323,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610097
    },
    {
        "content": "<p>and then to my disappointment I couldn't find the Green's function for the Laplacian there</p>",
        "id": 164518325,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1556610102
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> is definitely the best expert to ask about this</p>",
        "id": 164518327,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610105
    },
    {
        "content": "<blockquote>\n<p>and then to my disappointment I couldn't find the Green's function for the Laplacian there</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> you might find it in Faltings' work on the Mordell conjecture...</p>",
        "id": 164518386,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610150
    },
    {
        "content": "<p>I would be curious to see what a \"plain formalization\" of infinity categories looks like. HoTT is more of a \"synthetic\" formulation, a.k.a a shallow embedding, where you can't see outside the theory and so principles like univalence can be stated unqualified as axioms</p>",
        "id": 164518470,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610285
    },
    {
        "content": "<p>Right. The difference between the two ideas is slowly dawning on me.</p>",
        "id": 164518498,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610319
    },
    {
        "content": "<p>I don't know if anyone has tried the external perspective, where they are just some structure with stuff</p>",
        "id": 164518503,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610333
    },
    {
        "content": "<p>So HoTT in Lean 3 is just like doing HoTT in Coq? There are various tactics which you're not allowed to use any more because they lead to contradictions?</p>",
        "id": 164518552,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610366
    },
    {
        "content": "<p>yes</p>",
        "id": 164518557,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610378
    },
    {
        "content": "<p>They add an axiom which formally speaking is inconsistent?</p>",
        "id": 164518561,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610390
    },
    {
        "content": "<p>And then get round it by making us promise not to use subsingleton elimination?</p>",
        "id": 164518567,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610406
    },
    {
        "content": "<p>In lean 3, unlike lean 2, you can't \"turn off Prop\", which is inconsistent with HoTT, so instead you have to carefully examine every def to make sure it doesn't use anything bad</p>",
        "id": 164518574,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610421
    },
    {
        "content": "<p>oh boy</p>",
        "id": 164518587,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610436
    },
    {
        "content": "<p>There is a <code>@[hott]</code> attribute to automate this</p>",
        "id": 164518590,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610453
    },
    {
        "content": "<p>of course, Prop is \"no axioms\"...</p>",
        "id": 164518655,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610506
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">axiom</span> <span class=\"n\">univalence</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">is_equiv</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">equiv_of_eq</span> <span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>There it is.</p>",
        "id": 164518660,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610523
    },
    {
        "content": "<p>It's too strong</p>",
        "id": 164518672,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610543
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Have you read the intro of HTT by Lurie? It is very readable and it show how the \"external\" theory of infty-cats might be done.</p>",
        "id": 164518682,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556610547
    },
    {
        "content": "<p>We just want univalence to apply to mathematical objects, and only at certain times.</p>",
        "id": 164518686,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610567
    },
    {
        "content": "<p>is it free?</p>",
        "id": 164518687,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610569
    },
    {
        "content": "<p>It is</p>",
        "id": 164518693,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556610574
    },
    {
        "content": "<p><a href=\"https://arxiv.org/abs/math/0608040\" target=\"_blank\" title=\"https://arxiv.org/abs/math/0608040\">https://arxiv.org/abs/math/0608040</a></p>",
        "id": 164518703,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556610599
    },
    {
        "content": "<p>Checkout Lurie's website! It contains several thousands of carefully written hardcore maths</p>",
        "id": 164518708,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556610601
    },
    {
        "content": "<p><a href=\"https://kerodon.net/\" target=\"_blank\" title=\"https://kerodon.net/\">https://kerodon.net/</a> — this is where Lurie is now putting all his stuff. But it isn't as complete as his other writings yet.</p>",
        "id": 164518758,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556610614
    },
    {
        "content": "<p>I am highly doubtful that any HoTT embedding stuff will help you in your quest <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> better than <code>transfer</code>, even as it currently exists</p>",
        "id": 164518767,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610647
    },
    {
        "content": "<p>Mario, infty cats existed and where used before HoTT was cooked up.</p>",
        "id": 164518794,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556610670
    },
    {
        "content": "<p>of course</p>",
        "id": 164518799,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610692
    },
    {
        "content": "<p>They are really essential to certain parts of maths. Not because of transport-like things. Because of actual maths-with-content</p>",
        "id": 164518801,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556610694
    },
    {
        "content": "<p>See Warning 2.8 in the notes by Scholze at the top of this thread.</p>",
        "id": 164518814,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556610717
    },
    {
        "content": "<p>I know, I'm just saying that category theory is hard and infty-cats are harder</p>",
        "id": 164518862,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610726
    },
    {
        "content": "<p>Hmm... you seemed to be saying more than that (-;</p>",
        "id": 164518880,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556610773
    },
    {
        "content": "<p>I've expected this request to appear for some time now; we already have CAT as a higher category</p>",
        "id": 164518908,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610822
    },
    {
        "content": "<p>and given the way equalities \"aren't good enough\" for DTT it's really natively an infty cat even if you don't want it to be</p>",
        "id": 164518976,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610887
    },
    {
        "content": "<p>and that's why HoTT is implemented as a dependent type theory rather than something else</p>",
        "id": 164519014,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556610949
    },
    {
        "content": "<p>but I don't think this makes anything easier - it's more like \"DTT is hard, infty-cats are hard - match made in heaven\"</p>",
        "id": 164519070,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556611002
    },
    {
        "content": "<p>That said I'm obviously biased. There are lots of type theorists that will tell you how great HoTT is. My worry is that they are all type theorists</p>",
        "id": 164519107,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556611074
    },
    {
        "content": "<p>For this discussion, I (for once, w00t) don't care about HoTT.</p>",
        "id": 164519164,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556611101
    },
    {
        "content": "<p>I just want actual infty-cats</p>",
        "id": 164519171,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556611113
    },
    {
        "content": "<p>No matter which foundations we have.</p>",
        "id": 164519184,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556611133
    },
    {
        "content": "<p>I don't know enough about this stuff to know why I as a working mathematician should care about this stuff.</p>",
        "id": 164519190,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556611143
    },
    {
        "content": "<p>Lurie manages to prove a nonabelian version of proper base change. Great.</p>",
        "id": 164519200,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556611159
    },
    {
        "content": "<p>Did I ever need that? Classical proper base change sure, but why this?</p>",
        "id": 164519206,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556611177
    },
    {
        "content": "<blockquote>\n<p>Lurie manages to prove a nonabelian version of proper base change. Great.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> That's the kind of stuff we're talking about. This is completely orthogonal to HoTT (as far as I know).</p>",
        "id": 164519215,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556611191
    },
    {
        "content": "<p>Well, Lurie also managed to prove some stuff in geometric Langlands</p>",
        "id": 164519279,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556611215
    },
    {
        "content": "<p>And Bhatt and Scholze didn't jump on the infty-cat-ship for no reason</p>",
        "id": 164519287,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556611230
    },
    {
        "content": "<blockquote>\n<p>Well, Lurie also managed to prove some stuff in geometric Langlands</p>\n</blockquote>\n<p>Did he prove anything concrete which wasn't known already, or did he somehow just categorify known results? Do you understand anything about his work on the Tamagawa number problem Johan? Does one need category theory to prove it?</p>",
        "id": 164520971,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613128
    },
    {
        "content": "<p>I am not even close to really understanding his work. But he seems to have proven new stuff, yes.</p>",
        "id": 164521013,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556613206
    },
    {
        "content": "<p>I wish we had a better proof-theoretic analysis of these kinds of proofs, so we can say to what extent the use of categories or higher categories is necessary or compresses the direct proof</p>",
        "id": 164521194,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556613418
    },
    {
        "content": "<p>He proved the Tamagawa number conjecture for function fields, right? If he did it using infinity categories in an \"essential\" way (i.e. stripping them out would cause genuine pain) then that would be interesting. I simply have no idea how he did it. I went to a lecture by him about it all and it was 55 minutes history of the problem and then 5 minutes \"oh by the way I finished the job\"</p>",
        "id": 164521212,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613438
    },
    {
        "content": "<p>Yup, I've seen a similar talk by him...</p>",
        "id": 164521222,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556613472
    },
    {
        "content": "<blockquote>\n<p>I wish we had a better proof-theoretic analysis of these kinds of proofs, so we can say to what extent the use of categories or higher categories is necessary or compresses the direct proof</p>\n</blockquote>\n<p>\"necessary\" - I bet nothing is necessary. \"Compresses the proof\" -- yeah, this is the sort of question which might be interesting.</p>",
        "id": 164521268,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613487
    },
    {
        "content": "<p>Well, they say similar things about FLT, but AFAIK it's all still folklore</p>",
        "id": 164521273,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556613517
    },
    {
        "content": "<p>What is said about FLT?</p>",
        "id": 164521274,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613528
    },
    {
        "content": "<p>that you don't need categories or universes to prove it</p>",
        "id": 164521282,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556613543
    },
    {
        "content": "<p>and it's provable in PA</p>",
        "id": 164521291,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556613552
    },
    {
        "content": "<p>Oh you definitely don't need categories or universes</p>",
        "id": 164521293,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613558
    },
    {
        "content": "<p>you can easily modify the proof to avoid them</p>",
        "id": 164521296,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613572
    },
    {
        "content": "<p>but modifying the proof so that it worked without AC would be extremely difficult</p>",
        "id": 164521303,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613588
    },
    {
        "content": "<p>There's just some nonsense logic theorem saying something, isn't there? Completely nonconstructive</p>",
        "id": 164521357,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613608
    },
    {
        "content": "<p>I don't even know what it says. Certainly \"provable in ZFC\" -&gt; \"true in PA\" but do we know \"provable in PA\"?</p>",
        "id": 164521371,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613637
    },
    {
        "content": "<p>all the nonsense logic theorems I've heard in this area are actually constructive, although possibly with an obscene upper bound</p>",
        "id": 164521383,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556613655
    },
    {
        "content": "<p>That Goodstein sequence thing is true but not provable in PA</p>",
        "id": 164521386,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613657
    },
    {
        "content": "<p>But is that somehow of some higher complexity than FLT?</p>",
        "id": 164521401,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613674
    },
    {
        "content": "<p>FLT is Pi1, that's probably part of it</p>",
        "id": 164521410,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556613688
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/Paris%E2%80%93Harrington_theorem\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Paris%E2%80%93Harrington_theorem\">https://en.wikipedia.org/wiki/Paris%E2%80%93Harrington_theorem</a></p>",
        "id": 164521413,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613693
    },
    {
        "content": "<p>Paris-Harrington is Pi2</p>",
        "id": 164521492,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556613747
    },
    {
        "content": "<p>Thanks</p>",
        "id": 164521499,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613751
    },
    {
        "content": "<p>So do you think it's a theorem that FLT has a proof in PA?</p>",
        "id": 164521505,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613761
    },
    {
        "content": "<p>I don't know enough logic</p>",
        "id": 164521512,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613778
    },
    {
        "content": "<p>I have no idea... I know someone claims this</p>",
        "id": 164521529,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556613788
    },
    {
        "content": "<p>Most mathematicians have no interest in this sort of thing</p>",
        "id": 164521544,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613805
    },
    {
        "content": "<p>I'm not familiar with the details of the argument</p>",
        "id": 164521547,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556613809
    },
    {
        "content": "<p>[obviously we're assuming FLT has a proof in ZFC, which I am happy to believe]</p>",
        "id": 164521558,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613832
    },
    {
        "content": "<p>Con(PA) is also Pi1, so it can't be as simple as that</p>",
        "id": 164521562,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556613839
    },
    {
        "content": "<p>aah, and it has a proof in ZFC too</p>",
        "id": 164521610,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556613855
    },
    {
        "content": "<p>But I'm more interested in whether there is a practical proof in PA</p>",
        "id": 164521655,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556613951
    },
    {
        "content": "<p>like maybe all the linguistic fluff about infinite sets can be removed</p>",
        "id": 164521710,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556613977
    },
    {
        "content": "<p>There are definitely examples of the opposite phenomenon though - whenever you increase the consistency strength you get more than just new proofs, you also get shorter proofs for provable things</p>",
        "id": 164521853,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556614153
    },
    {
        "content": "<p>It's impossible to rule out some trivial proof of FLT in PA although it would be the biggest shock to happen in pure mathematics for centuries were an elementary proof to be found. Number theorists believe they understand the nature of Diophantine equations in general, especially smooth affine curves like <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup><mo>+</mo><msup><mi>y</mi><mi>n</mi></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">x^n+y^n=1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.664392em;\"></span><span class=\"strut bottom\" style=\"height:0.858832em;vertical-align:-0.19444em;\"></span><span class=\"base\"><span class=\"mord\"><span class=\"mord mathit\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathit mtight\">n</span></span></span></span></span></span></span></span><span class=\"mbin\">+</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathit mtight\">n</span></span></span></span></span></span></span></span><span class=\"mrel\">=</span><span class=\"mord mathrm\">1</span></span></span></span> over the rationals. Developing tools to bound the solutions to such equations has been a focal point of interest for centuries now, or even millenia if you count Diophantus himself. So many brilliant people have thought about this general problem, that the idea that there might be some cheap new method is almost inconcievable.</p>",
        "id": 164521861,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614165
    },
    {
        "content": "<p>My hope is not so much to invent a new method as find a way to extract the content from the existing proof</p>",
        "id": 164521939,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556614237
    },
    {
        "content": "<p>We have elaborate methods and conjectures, which ultimately yielded a proof of FLT, but 25 years later we are not really any closer to seeing on a more elementary level why it is true. It's a consequence of the Langlands philosophy, by deep work of Ribet and an observation of Frey-Hellgouarch.</p>",
        "id": 164521949,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614246
    },
    {
        "content": "<p>The content, when unravelled, would stretch for miles.</p>",
        "id": 164521954,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614262
    },
    {
        "content": "<p>Would giving the proof term help you to extract the content??</p>",
        "id": 164521973,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614287
    },
    {
        "content": "<p>In Lean, say.</p>",
        "id": 164521976,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614292
    },
    {
        "content": "<p>with all the <code>classical.choice</code> stuff in it</p>",
        "id": 164521982,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614299
    },
    {
        "content": "<p>yes, absolutely</p>",
        "id": 164521984,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556614303
    },
    {
        "content": "<p>and the p-adic numbers etc</p>",
        "id": 164521989,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614312
    },
    {
        "content": "<p>any kind of formalization would be a huge help</p>",
        "id": 164521991,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556614313
    },
    {
        "content": "<p>and real and complex numbers</p>",
        "id": 164521996,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614317
    },
    {
        "content": "<p>just having it all in one place with all prerequisites is immensely useful</p>",
        "id": 164522047,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556614336
    },
    {
        "content": "<p>What about giving a partial proof term of the form \"and so if we believe this explicit statement relating modular forms to elliptic curves, then we're done\"</p>",
        "id": 164522063,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614355
    },
    {
        "content": "<p>A proof that Shimura-Taniyama-Weil implies FLT.</p>",
        "id": 164522076,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614373
    },
    {
        "content": "<p>As input there's some statement about modular forms, which are functions on the upper half of the complex plane.</p>",
        "id": 164522096,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614399
    },
    {
        "content": "<p>The problem with this kind of result is that it's not \"closed\" in the original language - you are giving a statement that is in the new language, so any conservativity results don't apply</p>",
        "id": 164522110,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556614428
    },
    {
        "content": "<p>That's just hundreds of pages of scheme nonsense :-)</p>",
        "id": 164522111,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614428
    },
    {
        "content": "<p>I see.</p>",
        "id": 164522162,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614445
    },
    {
        "content": "<p>If there is a PA way to state an equivalent of that conjecture, that would work</p>",
        "id": 164522176,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556614464
    },
    {
        "content": "<p>Hmm</p>",
        "id": 164522181,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614476
    },
    {
        "content": "<p>I don't know if that is possible or not.</p>",
        "id": 164522197,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614497
    },
    {
        "content": "<p>I guess I believe the proof of it so it is possible in a crappy logic sense</p>",
        "id": 164522219,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614518
    },
    {
        "content": "<p>but I have no idea how bad PA really is.</p>",
        "id": 164522231,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556614534
    },
    {
        "content": "<p>It's not obvious that RH has a PA equivalent either</p>",
        "id": 164522232,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556614536
    },
    {
        "content": "<blockquote>\n<p>The theorem states that any elliptic curve over <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">\\Bbb Q</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68889em;\"></span><span class=\"strut bottom\" style=\"height:0.85556em;vertical-align:-0.16667em;\"></span><span class=\"base\"><span class=\"mord mathbb\">Q</span></span></span></span> can be obtained via a rational map with integer coefficients from the classical modular curve <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>X</mi><mn>0</mn></msub><mo>(</mo><mi>N</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">X_{0}(N)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> for some integer N; this is a curve with integer coefficients with an explicit definition. This mapping is called a modular parametrization of level N.  [From <a href=\"https://en.wikipedia.org/wiki/Modularity_theorem\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Modularity_theorem\">https://en.wikipedia.org/wiki/Modularity_theorem</a> ]</p>\n</blockquote>\n<p>I think that's a statement in PA</p>",
        "id": 164522451,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556614778
    },
    {
        "content": "<p>insofar as it's a claim about equality of polynomials over Q</p>",
        "id": 164522533,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556614846
    },
    {
        "content": "<p>oh wait, \"<a href=\"https://en.wikipedia.org/wiki/Rational_mapping\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Rational_mapping\">rational map</a>\" does not mean what I thought it meant</p>",
        "id": 164522782,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615095
    },
    {
        "content": "<p>is this just a rational function?</p>",
        "id": 164522812,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615121
    },
    {
        "content": "<p>No... not exactly</p>",
        "id": 164522882,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556615172
    },
    {
        "content": "<p>A rational function is a rational map to P^1 (= projective line)</p>",
        "id": 164522894,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556615190
    },
    {
        "content": "<p>A rational map is a morphism defined on a dense open subset.</p>",
        "id": 164522908,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556615209
    },
    {
        "content": "<p>We are hoping that the new <code>partial</code> keyword will make it very easy to use rational maps in Lean 4 <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 164522935,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556615245
    },
    {
        "content": "<p>we're talking about equivalence of elliptic curves, though, so it's CP^1, right?</p>",
        "id": 164522936,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615248
    },
    {
        "content": "<p>I don't get your question</p>",
        "id": 164522946,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556615281
    },
    {
        "content": "<p>I want to know if there is an easy way to express \"obtained by a rational map\" in the quoted theorem</p>",
        "id": 164523010,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615305
    },
    {
        "content": "<p>I think the theorem is saying \"For every ell.curve <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">E</span></span></span></span>, there exists an integer <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span></span> and a rational map <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>X</mi><mn>0</mn></msub><mo>(</mo><mi>N</mi><mo>)</mo><mo>→</mo><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">X_0(N) \\to E</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span><span class=\"mrel\">→</span><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">E</span></span></span></span>.</p>",
        "id": 164523016,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556615317
    },
    {
        "content": "<p>I believe that, but I don't know what parameterizes the possible rational maps</p>",
        "id": 164523033,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615344
    },
    {
        "content": "<p>That is, both sides are elliptic curves over Q, so surely there is an easy way to describe when a rational map exists?</p>",
        "id": 164523115,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615405
    },
    {
        "content": "<p>The LHS is not an ell.curve, it usually has higher genus</p>",
        "id": 164523144,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556615427
    },
    {
        "content": "<p>pretend I don't know what that means :) It's still a variety?</p>",
        "id": 164523185,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615480
    },
    {
        "content": "<p>i.e. solution set to some polynomial</p>",
        "id": 164523195,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615497
    },
    {
        "content": "<p>For all N there's some magic set of equations depending on N with rational coefficients which define an algebraic variety, yes</p>",
        "id": 164523280,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615567
    },
    {
        "content": "<p>Indeed the equations define a smooth projective curve</p>",
        "id": 164523293,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615577
    },
    {
        "content": "<p>I think that one could even just rephrase this in terms of function fields.</p>",
        "id": 164523319,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615607
    },
    {
        "content": "<p>but how much \"data\" is needed to specify the rational map that connects it to the original curve?</p>",
        "id": 164523331,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615624
    },
    {
        "content": "<p>An elliptic curve is determined by two integers A and B</p>",
        "id": 164523338,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615635
    },
    {
        "content": "<p>I don't want to have to specify a dense open set</p>",
        "id": 164523387,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615646
    },
    {
        "content": "<p>and using these integers one can make an explicit field</p>",
        "id": 164523390,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615647
    },
    {
        "content": "<p>it's OK, what I'm going to say is concrete and avoids those problems</p>",
        "id": 164523401,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615668
    },
    {
        "content": "<p>The field is the field of fractions of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><mi mathvariant=\"double-struck\">Q</mi></mrow><mo>[</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo>]</mo><mi mathvariant=\"normal\">/</mi><mo>(</mo><msup><mi>Y</mi><mn>2</mn></msup><mo>−</mo><msup><mi>X</mi><mn>3</mn></msup><mo>−</mo><mi>A</mi><mi>X</mi><mo>−</mo><mi>B</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}[X,Y]/(Y^2-X^3-AX-B)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord\"><span class=\"mord mathbb\">Q</span></span><span class=\"mopen\">[</span><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mclose\">]</span><span class=\"mord mathrm\">/</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.22222em;\">Y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span></span></span></span></span><span class=\"mbin\">−</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span></span></span></span></span><span class=\"mbin\">−</span><span class=\"mord mathit\">A</span><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"mbin\">−</span><span class=\"mord mathit\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span></span></p>",
        "id": 164523425,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615691
    },
    {
        "content": "<p>Similarly given a positive integer <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span></span> there is another field of this form</p>",
        "id": 164523443,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615705
    },
    {
        "content": "<p>the field of rational functions of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>X</mi><mn>0</mn></msub><mo>(</mo><mi>N</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">X_0(N)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span></p>",
        "id": 164523456,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615715
    },
    {
        "content": "<p>so far so good</p>",
        "id": 164523478,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615744
    },
    {
        "content": "<p>and the conjecture is that for all <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\">A</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.05017em;\">B</span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>4</mn><msup><mi>A</mi><mn>3</mn></msup><mo>−</mo><mn>2</mn><mn>7</mn><msup><mi>B</mi><mn>2</mn></msup><mo≯</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">4A^3-27B^2\\not=0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"base\"><span class=\"mord mathrm\">4</span><span class=\"mord\"><span class=\"mord mathit\">A</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">3</span></span></span></span></span></span></span></span><span class=\"mbin\">−</span><span class=\"mord mathrm\">2</span><span class=\"mord mathrm\">7</span><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathrm mtight\">2</span></span></span></span></span></span></span></span><span class=\"mrel\" style=\"position:relative;\"><span class=\"mainrm\" style=\"position:absolute;right:0;\"≯</span><span class=\"mrel\">=</span></span><span class=\"mord mathrm\">0</span></span></span></span> there exists <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span></span> and a ring homomorphism from the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi><mo separator=\"true\">,</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A, B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"base\"><span class=\"mord mathit\">A</span><span class=\"mpunct\">,</span><span class=\"mord mathit\" style=\"margin-right:0.05017em;\">B</span></span></span></span> field to the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span></span> field.</p>",
        "id": 164523517,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615762
    },
    {
        "content": "<p>aha</p>",
        "id": 164523543,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615770
    },
    {
        "content": "<p>that's PA alright</p>",
        "id": 164523551,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1556615784
    },
    {
        "content": "<p>I am not sure how explicit I can make the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span></span> field</p>",
        "id": 164523556,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615792
    },
    {
        "content": "<p>no scratch that</p>",
        "id": 164523558,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615797
    },
    {
        "content": "<p>I can make it completely explicit</p>",
        "id": 164523562,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615805
    },
    {
        "content": "<p>I can use <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi><mo>(</mo><mi>N</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">X(N)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> and build the field using division polynomials on the universal elliptic curve</p>",
        "id": 164523579,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615825
    },
    {
        "content": "<p>I can use <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi><mo>(</mo><mn>3</mn><mi>N</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">X(3N)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">3</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> and not have to worry about representability issues</p>",
        "id": 164523602,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615858
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> how about this: I write down the universal elliptic curve over <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi><mo>(</mo><mn>3</mn><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">X(3)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">3</span><span class=\"mclose\">)</span></span></span></span> explicitly (<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi><mo>(</mo><mn>3</mn><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">X(3)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">3</span><span class=\"mclose\">)</span></span></span></span> has genus 0) and then I find the equation for the modular curves <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>X</mi><mo>(</mo><mn>3</mn><mi>N</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">X(3N)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathrm\">3</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> using division polynomials, which are completely algorithmic</p>",
        "id": 164523681,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615914
    },
    {
        "content": "<p>The division polynomials factor because a point of order <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span></span> can have exact order <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">d</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\">d</span></span></span></span> for some <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>d</mi><mo>∣</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">d\\mid N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord mathit\">d</span><span class=\"mrel\">∣</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span></span></span></span></p>",
        "id": 164523727,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556615969
    },
    {
        "content": "<p>but I am not sure I even care. I can take the total ring of fractions and then just demand that for all Weierstrass models there's some N such that the field of fractions of the Weierstrass model over Q embeds into this total ring of fractions.</p>",
        "id": 164523797,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556616017
    },
    {
        "content": "<p>That's a surprisingly low-level statement of Taniyama-Shimura or whatever it's called nowadays</p>",
        "id": 164523809,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556616036
    },
    {
        "content": "<p>Right... I guess you can prove it by induction on <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\">A</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68333em;\"></span><span class=\"strut bottom\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord mathit\" style=\"margin-right:0.05017em;\">B</span></span></span></span>. (But that's probably the hard part of the proof.)</p>",
        "id": 164523962,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556616212
    },
    {
        "content": "<p>given that that's the only technique you have, I would definitely recommend using it at least once.</p>",
        "id": 164524465,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556616662
    },
    {
        "content": "<p>Re: condensed mathematics. If people think this would be an interesting project to formalize, I'd be happy to help with the formalization.</p>",
        "id": 164544234,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1556635087
    },
    {
        "content": "<p>Re: higher categories. I believe there is a formalization in progress to do semantics of HoTT. Maybe they formalized higher or infinity categories there, although I cannot find the repository now. <br>\nOn the other hand, often when doing categorical semantics of (homotopy) type theory, you don't directly work with infinity-categories, but instead you work with a model category (or similar), which is just a 1-category with some extra data. You can construct an infinity-category out of this data, but in practice it's easier to work with the 1-categorical formulation (for obvious reasons).</p>",
        "id": 164544903,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1556635548
    },
    {
        "content": "<p>Floris, you must understand Kevin is overexcited by the completion of the perfectoid project, and dreaming out loud. There is no way we can formalize condensed mathematics when the category theory part of mathlib is not usable to define schemes.</p>",
        "id": 164545363,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1556635845
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> let's do it! (after we finish Flypitch, and iterated forcing, and <del>inter-universal Teichmueller theory</del>...)</p>",
        "id": 164545610,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1556636032
    },
    {
        "content": "<p>related: <a href=\"https://arxiv.org/abs/1904.09966\" target=\"_blank\" title=\"https://arxiv.org/abs/1904.09966\">https://arxiv.org/abs/1904.09966</a></p>\n<p>they take hypersheaves (whatever that means) on compact hausdorff spaces instead of just Stone spaces (with the same type of Grothendieck topology, I believe)</p>\n<p>interestingly, in 0.3 of the introduction, the authors point out that their theory actually requires an inaccessible cardinal while the theory of condensed objects can be developed in ZFC</p>\n<p>also all the careful bookkeeping of universe-levels for sheaves and the word \"tiny\" (which I think is their terminology for <code>_ : Type 0</code>) is something that we're already used to dealing with in the category theory library</p>",
        "id": 164625930,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1556719858
    },
    {
        "content": "<blockquote>\n<p>We will just note that “the” real numbers are not well-defined anymore:To define a category of modules over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span></span></span></span>, one needs to specify in addition <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>p</mi><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 &lt; p &lt; 1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68354em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335400000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>; and in some sense an infinitesimal deformation of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span></span></span></span> gives rise to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>B</mi><mrow><mi mathvariant=\"normal\">d</mi><mi mathvariant=\"normal\">R</mi></mrow><mo>+</mo></msubsup></mrow><annotation encoding=\"application/x-tex\">B^+_{\\mathrm{dR}}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1127699999999998em;vertical-align:-0.3013079999999999em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.811462em;\"><span style=\"top:-2.3986920000000005em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathrm mtight\">d</span><span class=\"mord mathrm mtight\">R</span></span></span></span></span><span style=\"top:-3.1031310000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">+</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013079999999999em;\"><span></span></span></span></span></span></span></span></span></span>, so there is in some sense a 1-parameter family of versions of the real numbers.</p>\n</blockquote>",
        "id": 181813386,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574682012
    },
    {
        "content": "<p>I'm not sure what the type of <code>p</code> is in this remark <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 181813751,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574682320
    },
    {
        "content": "<p>I've been thinking about this with <span class=\"user-mention\" data-user-id=\"132603\">@Calle Sönne</span> . I think that this stuff represents a really good way to see the category theory stuff in action. For a start it forces you to think about sites. <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> suggested following <a href=\"https://en.wikipedia.org/wiki/Grothendieck_topology#Axioms\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Grothendieck_topology#Axioms\">this approach</a> for sites; then we need profinite sets, extremely disconnected sets and some basic theorems relating them -- do we have Stone-Cech compactifications? They would be really fun to do. Proving that the categories of sheaves on the three sites are equivalent (props 2.3 and 2.7 of <a href=\"https://www.math.uni-bonn.de/people/scholze/Condensed.pdf\" target=\"_blank\" title=\"https://www.math.uni-bonn.de/people/scholze/Condensed.pdf\">Scholze's notes</a> ) would be a great exercise, the maths proofs are relatively simple. Did anyone do sites in Coq or any of the other systems yet? Then proving Theorem 2.2 of those notes would be some flagship result.</p>",
        "id": 181813913,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574682435
    },
    {
        "content": "<p>The <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span></span></span></span></span> stuff is much further away.</p>",
        "id": 181813942,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574682463
    },
    {
        "content": "<p>Stone-Cech is in mathlib. Done by Reid.</p>",
        "id": 181814014,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574682488
    },
    {
        "content": "<p>Sites have been done in Coq.</p>",
        "id": 181814021,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574682494
    },
    {
        "content": "<p>Do they work? Have people used them to do anything?</p>",
        "id": 181814052,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574682522
    },
    {
        "content": "<p>As far as I know, they haven't been used.</p>",
        "id": 181814070,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574682535
    },
    {
        "content": "<p>I found that defining sites and sheaves was not the hard thing. The hard thing for me was the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mo>∗</mo></msub></mrow><annotation encoding=\"application/x-tex\">f_*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.175696em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>-<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mo>∗</mo></msup></mrow><annotation encoding=\"application/x-tex\">f^*</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.688696em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∗</span></span></span></span></span></span></span></span></span></span></span> adjunction.</p>",
        "id": 181814157,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574682582
    },
    {
        "content": "<p>And such adjunctions will be rather crucial a little down the road.</p>",
        "id": 181814222,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574682603
    },
    {
        "content": "<p>Did you already do sites and sheaves?</p>",
        "id": 181815751,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574683663
    },
    {
        "content": "<p>Yes, last year. But I never got a satisfactory API</p>",
        "id": 181815822,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574683698
    },
    {
        "content": "<p>Just having sheaves is not good enough. You need to be able to pull and push them around</p>",
        "id": 181815874,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574683737
    },
    {
        "content": "<p>I also had trouble showing that representable functors on <code>Top</code> are sheaves wrt the usual topology</p>",
        "id": 181815940,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574683790
    },
    {
        "content": "<p>So I could neither handle abstract nonsense nor concrete examples</p>",
        "id": 181815995,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574683805
    },
    {
        "content": "<p>Can they do either of these in Coq?</p>",
        "id": 181816050,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574683843
    },
    {
        "content": "<p>Je ne sais pas</p>",
        "id": 181816064,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574683855
    },
    {
        "content": "<p>Do we have adjunctions in Lean?</p>",
        "id": 181816099,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574683873
    },
    {
        "content": "<p>Where is this work? It needs to be done.</p>",
        "id": 181816121,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574683883
    },
    {
        "content": "<p><a href=\"http://www-sop.inria.fr/lemme/personnel/Laurent.Chicli/FrCoq.html\" target=\"_blank\" title=\"http://www-sop.inria.fr/lemme/personnel/Laurent.Chicli/FrCoq.html\">http://www-sop.inria.fr/lemme/personnel/Laurent.Chicli/FrCoq.html</a></p>",
        "id": 181816215,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574683960
    },
    {
        "content": "<p>I mean where is the Lean work?</p>",
        "id": 181816431,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574684135
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> this is a better generality for gluing than sheaves on a topological space.</p>",
        "id": 181816513,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574684188
    },
    {
        "content": "<p>what is?</p>",
        "id": 181816529,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1574684211
    },
    {
        "content": "<p>gluing sheaves on a site.</p>",
        "id": 181816545,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574684224
    },
    {
        "content": "<p>What I am unclear about is whether it's worth making an API for sheaves on a topological space and then starting on e.g. etale cohomology and realising that one has to do it all again for sheaves on a site.</p>",
        "id": 181816586,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574684283
    },
    {
        "content": "<p>My guess is that Mario would say it's worth it to do it twice</p>",
        "id": 181817783,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574685306
    },
    {
        "content": "<p>Why?</p>",
        "id": 181817818,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574685343
    },
    {
        "content": "<p>Because that's what he often seems to say</p>",
        "id": 181817878,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574685362
    },
    {
        "content": "<p>Premature optimization and all that....</p>",
        "id": 181817893,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574685375
    },
    {
        "content": "<p>Sometimes generalities are good, sometimes they're not</p>",
        "id": 181817904,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574685392
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I've pushed some branches to github</p>",
        "id": 181818076,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574685492
    },
    {
        "content": "<p><code>sheaf-old</code>, <code>presheaf</code>, <code>sheaf</code>, and <code>sheaf-2</code></p>",
        "id": 181818099,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574685512
    },
    {
        "content": "<p>which one should I look at?</p>",
        "id": 181818109,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574685523
    },
    {
        "content": "<p>Don't ask me about how they compare...</p>",
        "id": 181818113,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574685524
    },
    {
        "content": "<p>:D</p>",
        "id": 181818120,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574685530
    },
    {
        "content": "<p>It's been 1 year since I worked on this</p>",
        "id": 181818123,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574685531
    },
    {
        "content": "<p>There is also <code>sheaves</code> by <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>. But it's not doing sites, just topological spaces</p>",
        "id": 181818266,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574685621
    },
    {
        "content": "<p>I see now we talked about this on the <a href=\"#narrow/stream/116395-maths/topic/Taking.20the.20Stacks.20Project.20formalisation.20forward\" title=\"#narrow/stream/116395-maths/topic/Taking.20the.20Stacks.20Project.20formalisation.20forward\">stacks project thread</a>.</p>",
        "id": 181818446,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574685766
    },
    {
        "content": "<p>Yup... the analysis side of mathlib has made major strides in the last 6 months... the algebraic side didn't really move at all <span aria-label=\"expressionless\" class=\"emoji emoji-1f611\" role=\"img\" title=\"expressionless\">:expressionless:</span></p>",
        "id": 181818648,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574685915
    },
    {
        "content": "<p>the analysis side has got a lot of catching up to do though :D</p>",
        "id": 181818690,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574685954
    },
    {
        "content": "<p>If you imagine what we teach our 1st years, they certainly know that a power series is differentiable within its radius of convergence.</p>",
        "id": 181818766,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1574685999
    },
    {
        "content": "<p>The 2nd year students know that a degree 5 equation can't be solved by radicals...</p>",
        "id": 181818830,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574686055
    },
    {
        "content": "<p>Anyway... let's stay on the topic of sites and sheaves (-;</p>",
        "id": 181818848,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574686068
    },
    {
        "content": "<p>I'm about to run a way to a seminar that has the same name as this thread</p>",
        "id": 181818936,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574686112
    },
    {
        "content": "<p>I agree with Johan's projection of me</p>",
        "id": 181820496,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1574687416
    },
    {
        "content": "<p>The important thing is to get out of the slump, and just do something. It's not as bad as it sounds to do almost the same thing twice, and you often learn a lot in the process</p>",
        "id": 181820550,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1574687480
    },
    {
        "content": "<p>if in the end it turns out they are better served with a common definition, then you refactor later, simple as that</p>",
        "id": 181820592,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1574687522
    },
    {
        "content": "<p>Getting out of the slump seems rather hard here... we've had countless discussions about sheaves here on Zulip. We have the approach taken in the schemes project, which worked I guess. We used that code for perfectoid spaces as well, where it started to show some cracks, because all of a sudden we needed sheaves of X's for lots of values of X. And Kevin just hacked the code together, but it was very much write-only code.</p>",
        "id": 181828921,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574693493
    },
    {
        "content": "<p>Designing something that scales well seems a rather non-trivial issue</p>",
        "id": 181828965,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574693520
    },
    {
        "content": "<p>Scott wrote <a href=\"https://github.com/leanprover-community/mathlib/issues/1462\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1462\">https://github.com/leanprover-community/mathlib/issues/1462</a> which I think is a good strategy for dealing with \"down-to-earth\" sheaves</p>",
        "id": 181829049,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574693546
    },
    {
        "content": "<p>But I keep coming back to the push-pull adjunction. In all my experiments over a year ago, I couldn't pull that off.</p>",
        "id": 181829140,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1574693607
    },
    {
        "content": "<p>For anyone interested in condensed maths:</p>\n<blockquote>\n<p>Dear all,</p>\n<p>This is to inform you that the Master Class on Condensed Mathematics, to be held in Copenhagen, November 9th-13th with lectures by Dustin Clausen and Peter Scholze, will be shifted to a fully online event. This is due to the rising number of Covid-19 cases which, together with the number of already registered participants, makes it difficult for us to organise this event in accordance to the safety and health regulations of the University of Copenhagen.</p>\n<p>The lectures will be live streamed through Zoom and in addition will be made available on the Youtube channel of the Center of Geometry and Topology at Copenhagen, which is:<br>\n<a href=\"https://www.youtube.com/channel/UCuDrbQmLiT0jkSlMKPN-fsQ\">https://www.youtube.com/channel/UCuDrbQmLiT0jkSlMKPN-fsQ</a></p>\n<p>If you are interested in joining the meetings, please register at our webpage (the deadline is extended until November 8th):<br>\n<a href=\"https://www.math.ku.dk/english/calendar/events/condensed-mathematics/\">https://www.math.ku.dk/english/calendar/events/condensed-mathematics/</a></p>\n<p>The schedule is available on the webpage (all times are in the local Copenhagen time), but other information, like the Zoom links and passwords, will be made available for registered participants only.</p>\n<p>We look forward to seeing many of you (though not in person) at the Master Class,</p>\n<p>Best wishes,<br>\nLars Hesselholt, Ryomei Iwasa, Markus Land, Piotr Pstragowski</p>\n</blockquote>",
        "id": 214622383,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1603740853
    }
]