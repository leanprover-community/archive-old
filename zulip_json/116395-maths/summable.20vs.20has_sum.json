[
    {
        "content": "<p>I am playing a bit with the <code>topology/algebra/infinite_sum</code> file and I see that there are many results stated for the <code>has_sum</code> property and not for the <code>summable</code> one. They are equivalent, somehow, but I find myself doing</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">((</span><span class=\"n\">has_sum_subtype_iff_of_support_subset</span> <span class=\"n\">this</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"o\">(</span><span class=\"n\">summable.has_sum</span> <span class=\"n\">_</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">summable</span><span class=\"o\">,</span>\n</code></pre></div>\n<p>to get the (missing)</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">support</span> <span class=\"n\">f</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span>  <span class=\"n\">summable</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">∘</span> <span class=\"n\">coe</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"bp\">→</span> <span class=\"n\">summable</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>Indeed, the library has</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">support</span> <span class=\"n\">f</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">has_sum</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">∘</span> <span class=\"n\">coe</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"bp\">↔</span> <span class=\"n\">has_sum</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>and I am going back-and-forth twice. Is there a specific reason for this choice (e.g. there is a shorter workaround) or should I add these lemma in a PR? In the first case, would it worth it to add something to the doc?</p>",
        "id": 263596310,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1638545819
    },
    {
        "content": "<p>Not too familiar with this part of the library, but I expect it is just missing API since <code>summable</code> is used less than <code>has_sum</code>.</p>",
        "id": 263598256,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1638546701
    },
    {
        "content": "<p>Ok, I might wait for <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>  to give his advice (I think he developed most of it) and then I will open a PR.</p>",
        "id": 263598383,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1638546752
    },
    {
        "content": "<p>I think most of the summable results can be proved with a one-liner using <code>has_sum</code>? What's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/summable/src\">src#summable</a> defined as?</p>",
        "id": 263625778,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1638559428
    },
    {
        "content": "<p>Although I guess that's basically what you have already</p>",
        "id": 263625949,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1638559514
    },
    {
        "content": "<p>If you PR what you have above, it should be the <code>iff</code> version to match the one for <code>has_sum</code>, not the <code>of</code> version in your message.</p>",
        "id": 263626206,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1638559633
    },
    {
        "content": "<p>You can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/exists_congr\">docs#exists_congr</a> to get your theorem from <code>has_sum</code> version.</p>",
        "id": 263653183,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1638565677
    }
]