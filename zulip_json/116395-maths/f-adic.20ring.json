[
    {
        "content": "<p>An <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>-adic ring is a topological ring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> for which there is an open subring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">A_0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> and a finite generated ideal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mo>⊴</mo><msub><mi>A</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">I \\trianglelefteq A_0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8200000000000001em;vertical-align:-0.13667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⊴</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><msup><mi>I</mi><mi>n</mi></msup><mo>∣</mo><mi>n</mi><mo>≥</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{I^n \\mid n \\ge 0\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">}</span></span></span></span> is a neighbourhood basis of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>.</p>",
        "id": 207759197,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598164478
    },
    {
        "content": "<p>How should we formalize this in Lean?</p>",
        "id": 207759200,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598164486
    },
    {
        "content": "<p>Theorem: if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>∈</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">x \\in A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow></msub><msup><mi>x</mi><mi>n</mi></msup><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\lim_{n \\to \\infty} x^n = 0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mop\"><span class=\"mop\">lim</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">∞</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>, then <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup><mo>∈</mo><msub><mi>A</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">x^n \\in A_0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.703492em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≫</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">n \\gg 0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≫</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>.</p>",
        "id": 207759219,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598164545
    },
    {
        "content": "<p>You can look at how we formalised it in the perfectoid project</p>",
        "id": 207759592,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598165291
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"c\">/-</span><span class=\"cm\">- A “ring of definition” of a topological ring A is an open subring A₀</span>\n<span class=\"cm\">that has a finitely generated ideal J such that the topology on A₀ is J-adic.</span>\n<span class=\"cm\">See [Wedhorn, Def 6.1] -/</span>\n<span class=\"kn\">structure</span> <span class=\"n\">Huber_ring</span><span class=\"bp\">.</span><span class=\"n\">ring_of_definition</span>\n  <span class=\"o\">(</span><span class=\"n\">A₀</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">A₀</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">A₀</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_ring</span> <span class=\"n\">A₀</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_ring</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n  <span class=\"kn\">extends</span> <span class=\"n\">algebra</span> <span class=\"n\">A₀</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">emb</span> <span class=\"o\">:</span> <span class=\"n\">open_embedding</span> <span class=\"n\">to_fun</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">J</span>   <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A₀</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"o\">:</span> <span class=\"n\">J</span><span class=\"bp\">.</span><span class=\"n\">fg</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">top</span> <span class=\"o\">:</span> <span class=\"n\">is_ideal_adic</span> <span class=\"n\">J</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 207759601,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598165378
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean-perfectoid-spaces/blob/master/src/Huber_ring/basic.lean\">https://github.com/leanprover-community/lean-perfectoid-spaces/blob/master/src/Huber_ring/basic.lean</a></p>",
        "id": 207759602,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598165383
    },
    {
        "content": "<p>how would you state the theorem then?</p>",
        "id": 207759646,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598165426
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/FvN_UBu3o7MpVDZYvmyBf0zY/2020-08-23-1.png\">Wedhorn 6.14</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/FvN_UBu3o7MpVDZYvmyBf0zY/2020-08-23-1.png\" title=\"Wedhorn 6.14\"><img src=\"/user_uploads/3121/FvN_UBu3o7MpVDZYvmyBf0zY/2020-08-23-1.png\"></a></div>",
        "id": 207759705,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598165565
    },
    {
        "content": "<p>how can we even do these transitions seamlessly?</p>",
        "id": 207759707,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598165571
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">sB</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is open because <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo>:</mo><mi>A</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">s : A \\to A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is a homeomorphism</p>",
        "id": 207759714,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598165589
    },
    {
        "content": "<p>so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">sB</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is an open ideal of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span></p>",
        "id": 207759721,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598165622
    },
    {
        "content": "<p>Well, we have a ring homomorphism B -&gt; A, so either B is a subring of A, or A is a B-algebra, and you have to choose which one and then it's irritating when you want the other one</p>",
        "id": 207759809,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598165843
    },
    {
        "content": "<p>no in maths they're all just subsets of each other and stuff</p>",
        "id": 207759811,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598165868
    },
    {
        "content": "<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">sB</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> opens so many cans of worms</p>",
        "id": 207759849,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598165901
    },
    {
        "content": "<p>it's the fusion of different types that are meant to be segregated</p>",
        "id": 207759853,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598165928
    },
    {
        "content": "<p>in maths we just say, oh just multiply the elements pointwise</p>",
        "id": 207759865,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598165961
    },
    {
        "content": "<p>in Lean the ideal <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">sB</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is <code>ideal.span ({s} : set B)</code></p>",
        "id": 207759869,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598165979
    },
    {
        "content": "<p>and the open set is <code>(*) s '' B</code></p>",
        "id": 207759914,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598166006
    },
    {
        "content": "<p>(the two <code>B</code>s in the pseudocode already have different meanings)</p>",
        "id": 207759919,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598166033
    },
    {
        "content": "<p>but in maths they are the same set</p>",
        "id": 207759923,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598166052
    },
    {
        "content": "<p>I don't know if s has type A or type B. In Lean they're the same set too, right? But this is a lemma.</p>",
        "id": 207759934,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598166119
    },
    {
        "content": "<p>when I see <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">sB</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> in the statement, my internal representation is <code>ideal.span {s}</code></p>",
        "id": 207759974,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598166131
    },
    {
        "content": "<p>right</p>",
        "id": 207759976,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598166144
    },
    {
        "content": "<p>then when it says <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo>:</mo><mi>A</mi><mo>→</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">s : A \\to A</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is a homeomorphism so <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">sB</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is open, I see <code>(*) s '' B</code></p>",
        "id": 207759977,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598166152
    },
    {
        "content": "<p>and they're the same set</p>",
        "id": 207759985,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598166172
    },
    {
        "content": "<p>so it's a translator seeing \"you\", ne sachant pas si on doit ecrire \"tu\" ou \"vous\"</p>",
        "id": 207760044,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598166315
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory</span><span class=\"bp\">.</span><span class=\"n\">algebra</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology</span><span class=\"bp\">.</span><span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">A₀</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n<span class=\"kn\">variables</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">A₀</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">A₀</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_ring</span> <span class=\"n\">A₀</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_ring</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n<span class=\"kn\">variables</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">A₀</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">emb</span> <span class=\"o\">:</span> <span class=\"n\">open_embedding</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">A₀</span> <span class=\"n\">A</span><span class=\"o\">))</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">is_unit</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">A</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">is_open</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">is_open</span> <span class=\"o\">((</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"n\">s</span> <span class=\"err\">&#39;&#39;</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">let</span> <span class=\"bp\">⟨</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">ht</span><span class=\"bp\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">is_unit_iff_exists_inv</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"n\">hs</span> <span class=\"k\">in</span>\n<span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">convert</span> <span class=\"n\">continuous_mul_left</span> <span class=\"n\">t</span> <span class=\"bp\">_</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"bp\">⟨λ</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">,</span> <span class=\"n\">hsyz</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">hsyz</span> <span class=\"bp\">▸</span> <span class=\"k\">show</span> <span class=\"n\">t</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"err\">∈</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n      <span class=\"k\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">],</span>\n    <span class=\"bp\">λ</span> <span class=\"n\">hz</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">t</span> <span class=\"bp\">*</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">hz</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">]</span><span class=\"bp\">⟩⟩</span><span class=\"o\">)</span> <span class=\"o\">}</span>\n\n<span class=\"n\">include</span> <span class=\"n\">emb</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">bar</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">A₀</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">is_unit</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">A₀</span> <span class=\"n\">A</span> <span class=\"n\">s</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_open</span> <span class=\"o\">(</span><span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">span</span> <span class=\"o\">({</span><span class=\"n\">s</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">A₀</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">A₀</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">emb</span><span class=\"bp\">.</span><span class=\"n\">open_iff_image_open</span><span class=\"o\">,</span>\n  <span class=\"n\">convert</span> <span class=\"n\">foo</span> <span class=\"bp\">_</span> <span class=\"n\">hs</span> <span class=\"n\">emb</span><span class=\"bp\">.</span><span class=\"n\">open_range</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- ⊢ ⇑(algebra_map A₀ A) &#39;&#39; ↑(ideal.span {s}) =</span>\n  <span class=\"c1\">--     has_mul.mul (⇑(algebra_map A₀ A) s) &#39;&#39; set.range ⇑(algebra_map A₀ A)</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 207760482,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598167330
    },
    {
        "content": "<p>how to tell Lean \"they are equal because they are both <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><msub><mi>A</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">sA_0</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>\"?</p>",
        "id": 207760489,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598167405
    },
    {
        "content": "<p>ext, split, etc?</p>",
        "id": 207760794,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598168077
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">theorem</span> <span class=\"n\">bar</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">A₀</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hs</span> <span class=\"o\">:</span> <span class=\"n\">is_unit</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">A₀</span> <span class=\"n\">A</span> <span class=\"n\">s</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_open</span> <span class=\"o\">(</span><span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">span</span> <span class=\"o\">({</span><span class=\"n\">s</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">A₀</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">A₀</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">emb</span><span class=\"bp\">.</span><span class=\"n\">open_iff_image_open</span><span class=\"o\">,</span>\n  <span class=\"n\">convert</span> <span class=\"n\">foo</span> <span class=\"bp\">_</span> <span class=\"n\">hs</span> <span class=\"n\">emb</span><span class=\"bp\">.</span><span class=\"n\">open_range</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- ⊢ ⇑(algebra_map A₀ A) &#39;&#39; ↑(ideal.span {s}) =</span>\n  <span class=\"c1\">--     has_mul.mul (⇑(algebra_map A₀ A) s) &#39;&#39; set.range ⇑(algebra_map A₀ A)</span>\n  <span class=\"n\">ext</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">rintro</span> <span class=\"bp\">⟨</span><span class=\"n\">a0</span><span class=\"o\">,</span> <span class=\"n\">ha0</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">submodule</span><span class=\"bp\">.</span><span class=\"n\">mem_coe</span> <span class=\"n\">at</span> <span class=\"n\">ha0</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">mem_span_singleton&#39;</span> <span class=\"n\">at</span> <span class=\"n\">ha0</span><span class=\"o\">,</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">ha0</span> <span class=\"k\">with</span> <span class=\"bp\">⟨</span><span class=\"n\">a1</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_image</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">A₀</span> <span class=\"n\">A</span> <span class=\"n\">a1</span><span class=\"o\">),</span>\n    <span class=\"n\">use</span> <span class=\"n\">a1</span><span class=\"o\">,</span>\n    <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">mul_comm</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">rintro</span> <span class=\"bp\">⟨-</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"n\">a1</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n    <span class=\"n\">use</span> <span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"n\">a1</span><span class=\"o\">,</span>\n    <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">submodule</span><span class=\"bp\">.</span><span class=\"n\">mem_coe</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">mem_span_singleton&#39;</span><span class=\"o\">,</span>\n      <span class=\"n\">use</span> <span class=\"n\">a1</span><span class=\"o\">,</span>\n      <span class=\"n\">apply</span> <span class=\"n\">mul_comm</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">simp</span> <span class=\"o\">}</span> <span class=\"o\">}</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 207760976,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598168411
    },
    {
        "content": "<p>Your objection is that \"this is obvious\"?</p>",
        "id": 207760980,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598168436
    },
    {
        "content": "<p>my objection is that the mathematician identifies the two sets, an identification that cannot be done in Lean</p>",
        "id": 207760991,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598168516
    },
    {
        "content": "<p>I have no objection; I am merely pointing out that identifications open cans of worms</p>",
        "id": 207761029,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598168536
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">emb</span><span class=\"bp\">.</span><span class=\"n\">open_iff_image_open</span><span class=\"o\">,</span>\n  <span class=\"n\">convert</span> <span class=\"n\">foo</span> <span class=\"bp\">_</span> <span class=\"n\">hs</span> <span class=\"n\">emb</span><span class=\"bp\">.</span><span class=\"n\">open_range</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- ⊢ ⇑(algebra_map A₀ A) &#39;&#39; ↑(ideal.span {s}) =</span>\n  <span class=\"c1\">--     has_mul.mul (⇑(algebra_map A₀ A) s) &#39;&#39; set.range ⇑(algebra_map A₀ A)</span>\n  <span class=\"n\">ext</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_image</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_image</span><span class=\"o\">,</span>\n  <span class=\"n\">simp_rw</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_range</span><span class=\"o\">,</span>\n  <span class=\"n\">simp_rw</span> <span class=\"n\">submodule</span><span class=\"bp\">.</span><span class=\"n\">mem_coe</span><span class=\"o\">,</span>\n  <span class=\"n\">simp_rw</span> <span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">mem_span_singleton&#39;</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">exists_congr</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 207761081,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598168676
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">emb</span><span class=\"bp\">.</span><span class=\"n\">open_iff_image_open</span><span class=\"o\">,</span>\n  <span class=\"n\">convert</span> <span class=\"n\">foo</span> <span class=\"bp\">_</span> <span class=\"n\">hs</span> <span class=\"n\">emb</span><span class=\"bp\">.</span><span class=\"n\">open_range</span><span class=\"o\">,</span>\n  <span class=\"n\">ext</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">ideal</span><span class=\"bp\">.</span><span class=\"n\">mem_span_singleton&#39;</span><span class=\"o\">,</span> <span class=\"n\">exists_congr</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">]</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 207761140,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598168780
    },
    {
        "content": "<p>Now the proof is the same as the maths proof -- \"they're equal because they have the same elements -- oh by the way the ideal spanned by a singleton is its multiples\"</p>",
        "id": 207761154,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598168831
    },
    {
        "content": "<p>you don't need <code>exists_congr</code></p>",
        "id": 207761228,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598169001
    },
    {
        "content": "<p>I object that the maths proof is \"they're equal because they're the same\"</p>",
        "id": 207761269,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598169020
    },
    {
        "content": "<p>as you say, in maths the identifications are very transparent</p>",
        "id": 207761276,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598169035
    },
    {
        "content": "<p>you should learn to love the simplifier</p>",
        "id": 207761277,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598169042
    },
    {
        "content": "<p>\"the ideal spanned by s\" is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">sB</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span></p>",
        "id": 207761279,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598169044
    },
    {
        "content": "<p>That's a theorem</p>",
        "id": 207761281,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598169062
    },
    {
        "content": "<p>the ideal spanned by s is some stupid Inf probably</p>",
        "id": 207761288,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598169075
    },
    {
        "content": "<p>that's another of our definitions of the ideal spanned by something</p>",
        "id": 207761297,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598169100
    },
    {
        "content": "<p>of course things are the same if you're allowed to have 10 definitions for everything</p>",
        "id": 207761298,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1598169115
    },
    {
        "content": "<p>yeah but you'll notice that the text doesn't even say it</p>",
        "id": 207761330,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598169122
    },
    {
        "content": "<p>yeah exactly</p>",
        "id": 207761346,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1598169129
    }
]