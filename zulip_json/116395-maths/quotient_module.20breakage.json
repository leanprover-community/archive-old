[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">quotient_module</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"o\">:</span> <span class=\"n\">S</span><span class=\"o\">)</span>\n<span class=\"kn\">end</span>\n\n<span class=\"c\">/-</span><span class=\"cm\"></span>\n\n<span class=\"cm\">maximum class-instance resolution depth has been reached (the limit can be increased by setting option &#39;class.instance_max_depth&#39;) (the class-instance resolution trace can be visualized by setting option &#39;trace.class_instances&#39;)</span>\n<span class=\"cm\">state:</span>\n<span class=\"cm\">R : Type ?,</span>\n<span class=\"cm\">S : set R,</span>\n<span class=\"cm\">_inst_1 : ring ↥S</span>\n<span class=\"cm\">⊢ ↥S</span>\n\n<span class=\"cm\">-/</span>\n</pre></div>\n\n\n<p>What is going on here? If I remove the import of <code>linear_algebra.quotient_module</code> then this compiles fine. <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> you thought about quotient module instances maybe -- do you know how to diagnose these things?</p>\n<p>Related -- I have to ask here because I cannot diagnose the issue myself.  I cannot read the <code>trace.class_instances</code> output and I would really love to be able to. For what it's worth, just before it chokes it looks like this gist (and it's quite funny, manifestly something has gone wrong and it's a nice change from the usual, it's not a loop, it's a recursive hell).</p>\n<p><a href=\"https://gist.github.com/kbuzzard/2582db6593c7b7467f3e0020909af467\" target=\"_blank\" title=\"https://gist.github.com/kbuzzard/2582db6593c7b7467f3e0020909af467\">https://gist.github.com/kbuzzard/2582db6593c7b7467f3e0020909af467</a></p>",
        "id": 134325716,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537466471
    },
    {
        "content": "<p>nice picture</p>",
        "id": 134325803,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537466528
    },
    {
        "content": "<p>Could you give a more realistic example?</p>",
        "id": 134325866,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537466609
    },
    {
        "content": "<p>Is R actually a ring and S a subring?</p>",
        "id": 134325879,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537466626
    },
    {
        "content": "<p>I don't understand why that would compile. If S is empty, it's trivial to get a contradiction from this.</p>",
        "id": 134325883,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1537466629
    },
    {
        "content": "<p>Also note I had to modify stuff like this recently in the perfectoid project</p>",
        "id": 134325972,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537466689
    },
    {
        "content": "<p>There's nothing wrong with the statement of the theorem. It is a set with a ring structure, which is therefore nonempty and has a <code>4</code></p>",
        "id": 134326401,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537467129
    },
    {
        "content": "<p>As usual, modules are acting up because of the search for a ring instance</p>",
        "id": 134326574,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537467353
    },
    {
        "content": "<p>Chris : you're happy with <code>(x : nat) (h : x &gt; 4)</code>, right? But if x was 2 it's trivial to get a contradiction from this.</p>",
        "id": 134326633,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537467381
    },
    {
        "content": "<p>As long as it's a nonempty set there is a ring structure on it and a <code>4</code></p>",
        "id": 134326662,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537467418
    },
    {
        "content": "<p>and being a ring implies it is nonempty</p>",
        "id": 134326675,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537467429
    },
    {
        "content": "<p>Patrick -- it was trying to fix up the perfectoid project which led me to this. We need p in R^o for the definition to be OK. The statement that p divides something in R is vacuous because p is a unit in R -- R is like Q_p and R^o is like Z_p</p>",
        "id": 134326693,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537467449
    },
    {
        "content": "<p>I don't think the offending instances are in <code>quotient_module</code>. Do you get the same problem with <code>algebra.pi_instances</code> and <code>algebra.module</code>?</p>",
        "id": 134326712,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537467468
    },
    {
        "content": "<p>anyway this is yet another problem that will be solved by my refactor</p>",
        "id": 134326777,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1537467507
    },
    {
        "content": "<p>OK, I can definitely wait. I was planning on spending tomorrow thinking about the perfectoid project in a top-down way; this issue came up because the definition of a perfectoid ring is currently broken :-)</p>",
        "id": 134326801,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537467552
    },
    {
        "content": "<p>I'm having a day off real life tomorrow; my last day off for a while.</p>",
        "id": 134327608,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537468239
    },
    {
        "content": "<blockquote>\n<p>Patrick -- it was trying to fix up the perfectoid project which led me to this. We need p in R^o for the definition to be OK. The statement that p divides something in R is vacuous because p is a unit in R -- R is like Q_p and R^o is like Z_p</p>\n</blockquote>\n<p>I told you to carefully review that PR. I fixed the compilation error but I was really unsure I didn't change the maths</p>",
        "id": 134331345,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537471630
    },
    {
        "content": "<blockquote>\n<p>I'm having a day off real life tomorrow; my last day off for a while.</p>\n</blockquote>\n<p>Do you mean you'll have a Lean day or a no-Lean day?</p>",
        "id": 134331353,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537471652
    },
    {
        "content": "<blockquote>\n<p>anyway this is yet another problem that will be solved by my refactor</p>\n</blockquote>\n<p>Do you have any estimation about when this refactor will be ready for use?</p>",
        "id": 134331541,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537471816
    },
    {
        "content": "<p>I am going to have a Lean day, but it's a bit cheeky -- I should really be doing other things.</p>",
        "id": 134331826,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537472176
    },
    {
        "content": "<p>Do you have stuff you can do without modules? Do you want to have fun with uniform spaces?</p>",
        "id": 134331861,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537472244
    },
    {
        "content": "<p>ha ha, I have been working from the bottom up during the little time I've had over the last month or so. I was going to try defining the presheaf on Spa(A), sorrying whatever I couldn't do.</p>",
        "id": 134331952,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1537472296
    },
    {
        "content": "<p>Great!</p>",
        "id": 134331983,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537472334
    },
    {
        "content": "<p>It gets my vote</p>",
        "id": 134331986,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1537472340
    }
]