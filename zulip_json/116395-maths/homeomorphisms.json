[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>, did you have a definition of homeomorphisms somewhere?</p>",
        "id": 127431536,
        "sender_full_name": "Reid Barton",
        "timestamp": 1527879046
    },
    {
        "content": "<p><a href=\"https://github.com/PatrickMassot/lean-scratchpad/blob/master/src/homeos.lean\" target=\"_blank\" title=\"https://github.com/PatrickMassot/lean-scratchpad/blob/master/src/homeos.lean\">https://github.com/PatrickMassot/lean-scratchpad/blob/master/src/homeos.lean</a></p>",
        "id": 127431596,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527879110
    },
    {
        "content": "<p>thanks! I like this <code>extends equiv</code> idea</p>",
        "id": 127432191,
        "sender_full_name": "Reid Barton",
        "timestamp": 1527879836
    },
    {
        "content": "<p>This was Mario's idea. At that time I had no idea <code>equiv</code> existed</p>",
        "id": 127435414,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527883913
    },
    {
        "content": "<p>just do it in a category man</p>",
        "id": 127435457,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527883938
    },
    {
        "content": "<p>won't there be universe issues?</p>",
        "id": 127437006,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527885977
    },
    {
        "content": "<p>just build a category theory without universe issue, man</p>",
        "id": 127437010,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527885989
    },
    {
        "content": "<p>I think Russell had something to say about that</p>",
        "id": 127437112,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527886196
    },
    {
        "content": "<p>the category itself as an object has universe issues</p>",
        "id": 127437168,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527886218
    },
    {
        "content": "<p>if you use the things within, you should be fine</p>",
        "id": 127437170,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527886223
    },
    {
        "content": "<p>I never really understood the issues that Scott had with universes but my impression is that things are harder than you might think</p>",
        "id": 127437171,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527886225
    },
    {
        "content": "<p>(there's a different category for each universe)</p>",
        "id": 127437173,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527886229
    },
    {
        "content": "<p>(but it doesn't matter)</p>",
        "id": 127437175,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527886232
    },
    {
        "content": "<p>my understanding is that sometimes it does matter</p>",
        "id": 127437712,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527886882
    },
    {
        "content": "<p>because maybe you end up with the right object but in the wrong universe</p>",
        "id": 127437718,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1527886897
    },
    {
        "content": "<p>The problem with universes (which is the sole reason I didn't have a PR ready months ago) is that there are genuinely two different sorts of categories one needs in mathematics: \"small categories\", in which objects and morphisms live in the same fixed universe, and \"large categories\", in which objects get to live in one higher universe than the morphisms.</p>",
        "id": 127440872,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1527891477
    },
    {
        "content": "<p>For a very long time in my pre-Lean mathematical career, I thought this wasn't such a big deal, but I've learnt better. :-)</p>",
        "id": 127440923,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1527891513
    },
    {
        "content": "<p>(Briefly: we need large categories because all the basic algebra examples like <code>Types</code>, <code>Groups</code>, <code>PL</code>, etc are large. We need small categories because if you try thinking about any of the basic machinery in category theory, particularly taking limits, when you index over objects in a large category you find yourself having to move up the universe hierarchy over and over again, while when you index over objects in a small category you can stay at one level. Happily, one can get away with doing most of mathematics only having to index over a small category --- but not quite all, so eventually you need to admit that the universe parameter can vary across a development.)</p>",
        "id": 127441044,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1527891694
    },
    {
        "content": "<p>So, how to implement this? We don't want to have parallel developments of small and large categories, because then we'd have at least 3 different types of functors (small to small, small to large, large to large -- large to small is just silly, of course :-), and lifts between these, and then more mess at the level of transformations, and it will all end badly.</p>",
        "id": 127441103,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1527891761
    },
    {
        "content": "<p>The two options I considered were:</p>",
        "id": 127441107,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1527891781
    },
    {
        "content": "<p>1) \"categories\" by default have objects in <code>Type (u+1)</code> and morphisms in <code>Type u</code>, and a small category is a category along with the additional evidence that the objects are equivalent in something in <code>Type u</code> after all.</p>",
        "id": 127441133,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1527891830
    },
    {
        "content": "<p>2) We define \"categories\" to have two universe parameters, so objects live in <code>Type u</code> and morphisms in <code>Type v</code>, and define \"small_category\" and \"large_category\" as subclasses (with <code>u=v</code> and <code>u=v+1</code> respectively).</p>",
        "id": 127441186,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1527891871
    },
    {
        "content": "<p>In the end, it seems that 1) just doesn't work; I found that I was having to implement multiple sorts of functors and natural transformations anyway.</p>",
        "id": 127441203,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1527891905
    },
    {
        "content": "<p>2) mostly works. You develop as much as you need at the level of \"independent universe\" categories, but then when it makes sense restrict to either <code>small_category</code> or <code>large_category</code>. Working entirely with independent universe categories becomes problematic, because Lean usually can't infer the morphism universe level. Mostly you can get around this just by specifying that level explicitly, but it also starts to break typeclass inference and so eventually becomes a serious problem.</p>",
        "id": 127441301,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1527892046
    }
]