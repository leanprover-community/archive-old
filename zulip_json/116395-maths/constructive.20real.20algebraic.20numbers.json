[
    {
        "content": "<p>Not really a Lean question but the real algebraic numbers form a real closed field constructively, right? What's the easiest way to see this?</p>",
        "id": 180618539,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573646789
    },
    {
        "content": "<p>I'm supposed to represent a real algebraic number by a polynomial together with an interval of rationals on which it has a unique root, or something?</p>",
        "id": 180618609,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573646843
    },
    {
        "content": "<p>I think the original reference is <a href=\"https://www.jstor.org/stable/2270515\" target=\"_blank\" title=\"https://www.jstor.org/stable/2270515\">Madison 1970</a>, but there may have been some improvements since.</p>",
        "id": 180618833,
        "sender_full_name": "Ulrik Buchholtz",
        "timestamp": 1573647020
    },
    {
        "content": "<p>Madison just pairs a polynomial together with the number of roots left of the desired root.</p>",
        "id": 180618912,
        "sender_full_name": "Ulrik Buchholtz",
        "timestamp": 1573647096
    },
    {
        "content": "<p>Oh thanks. Let's suppose I already believe in quantifier elimination for real closed fields. Then it's easy to see how to decide the ordering on such descriptions. Let's suppose I also believe that given polynomials f and g I can find a polynomial whose roots are the sums of the roots of f and g. Is it easy to see how to pick out the index of the correct root?</p>",
        "id": 180619049,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573647237
    },
    {
        "content": "<p>And same for products</p>",
        "id": 180619091,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573647244
    },
    {
        "content": "<p>I guess this is probably in this 3-page paper, which I can't conveniently download at the moment</p>",
        "id": 180619106,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573647277
    },
    {
        "content": "<blockquote>\n<p>I guess this is probably in this 3-page paper, which I can't conveniently download at the moment</p>\n</blockquote>\n<p>Actually, it's not, since he just shows that the relations <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\"> x + y = z </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mi>y</mi><mo>=</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\"> xy = z </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.04398em;\">z</span></span></span></span> are decidable. (Check you mail for the paper.) I don't see immediately how compute the representations of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\"> x + y </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\"> xy </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span></span></span></span> from those of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\"> x </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\"> y </annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">y</span></span></span></span>.</p>",
        "id": 180619895,
        "sender_full_name": "Ulrik Buchholtz",
        "timestamp": 1573648021
    },
    {
        "content": "<p>Is his proof constructive?</p>",
        "id": 180619918,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573648057
    },
    {
        "content": "<p>I think there are methods using resultants and such, to go from <code>x</code> and <code>y</code> to <code>x + y</code> and <code>xy</code>.</p>",
        "id": 180619973,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573648089
    },
    {
        "content": "<p>I don't remember the details, but I think it can be done quite constructively</p>",
        "id": 180619987,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573648108
    },
    {
        "content": "<p>Yes, I think it's constructive. There are bunch of other representations where you pair a polynomial with either an interval, a Cauchy sequence, or something else. (I see <em>Thom representations</em> and <em>sign representations</em> and what-notâ€¦)</p>",
        "id": 180620136,
        "sender_full_name": "Ulrik Buchholtz",
        "timestamp": 1573648254
    },
    {
        "content": "<p>The algorithms for arithmetic in the Madison paper are of the form \"try every representation until you find one that works\" (tested by quantifier elimination). I guess those won't satisfy a constructivist.</p>",
        "id": 180620685,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573648792
    },
    {
        "content": "<p>I feel like this is the sort of thing someone would definitely have already formalized in Coq</p>",
        "id": 180620821,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573648908
    },
    {
        "content": "<p>Why? <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span> It would only have doubly-exponential running time...</p>",
        "id": 180620823,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573648916
    },
    {
        "content": "<p>Because you don't know that the search will actually succeed unless you already proved (meaning constructively) that a solution exists</p>",
        "id": 180620950,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573648988
    },
    {
        "content": "<p>How about you combine the two representations: both small intervals around the roots and a pointer to the interval you care about.</p>",
        "id": 180620956,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573648994
    },
    {
        "content": "<p>in which case you don't need the search</p>",
        "id": 180620960,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573648998
    },
    {
        "content": "<p>That might lead to rather efficient add/mul ?</p>",
        "id": 180620970,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573649010
    },
    {
        "content": "<p>Aha, <a href=\"https://hal.inria.fr/hal-00671809v2\" target=\"_blank\" title=\"https://hal.inria.fr/hal-00671809v2\">https://hal.inria.fr/hal-00671809v2</a></p>",
        "id": 180621159,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573649122
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110193\">@Cyril Cohen</span> We are watching you <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 180621287,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573649213
    },
    {
        "content": "<p>Why are we loosing Reid? What happened? He used to be doing mathematics!</p>",
        "id": 180621462,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1573649373
    },
    {
        "content": "<p>I remember talking to Cyril about this. This is one place where Lean wins over Coq, because of quotients. In order to remain constructive in Coq, he had to reduce each number to a canonical, but I think he said most computer implementations actually don't reduce each number to a canonical form.</p>",
        "id": 180624508,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1573651337
    },
    {
        "content": "<p>Interesting.<br>\nI was going to ask <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> to automatically export the construction from Coq and import it into Lean (while remaining constructive of course) but I guess he's off the hook</p>",
        "id": 180625917,
        "sender_full_name": "Reid Barton",
        "timestamp": 1573652331
    },
    {
        "content": "<p>Out of curiosity <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> what's your usecase for real algebraics? Wenda Li has been doing some great work on using them for efficiently deciding certain kinds of univariate polynomial inequalities in Isabelle: <a href=\"https://www.cl.cam.ac.uk/~wl302/publications/cpp16.pdf\" target=\"_blank\" title=\"https://www.cl.cam.ac.uk/~wl302/publications/cpp16.pdf\">paper1</a> <a href=\"https://www.cl.cam.ac.uk/~wl302/publications/jar17.pdf\" target=\"_blank\" title=\"https://www.cl.cam.ac.uk/~wl302/publications/jar17.pdf\">paper2</a></p>",
        "id": 182207977,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1575066320
    }
]