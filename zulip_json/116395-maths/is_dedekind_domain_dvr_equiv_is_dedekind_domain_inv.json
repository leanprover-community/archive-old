[
    {
        "content": "<p>Hi, I'm trying to show</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">is_dedekind_domain_dvr_equiv_is_dedekind_domain_inv</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_dedekind_domain_dvr_iff</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span> <span class=\"n\">is_dedekind_domain_inv_iff</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>and noticed that <code>is_dedekind_domain_dvr_iff</code> isn't implemented yet.<br>\nGetting inspiration from <code>is_dedekind_domain_iff</code> and <code>is_dedekind_domain_inv_iff</code><br>\nI defined it like so</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">is_dedekind_domain_dvr_iff</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_dedekind_domain_dvr</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span>\n    <span class=\"o\">(</span><span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">is_noetherian_ring</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n    <span class=\"o\">((</span><span class=\"bp\">∀</span> <span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">P.is_prime</span> <span class=\"bp\">→</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">localization.at_prime</span> <span class=\"n\">P</span><span class=\"o\">)))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>however I'm getting the error</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">type</span> <span class=\"kd\">class</span> <span class=\"kd\">instance</span> <span class=\"n\">for</span>\n<span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_2</span><span class=\"o\">,</span>\n<span class=\"n\">_inst_2</span> <span class=\"o\">:</span> <span class=\"n\">integral_domain</span> <span class=\"n\">A</span><span class=\"o\">,</span>\n<span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A</span><span class=\"o\">,</span>\n<span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"bp\">⊥</span><span class=\"o\">,</span>\n<span class=\"n\">ᾰ</span> <span class=\"o\">:</span> <span class=\"n\">P.is_prime</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">P.is_prime</span>\n</code></pre></div>\n<p>when I change <code>discrete_valuation_ring (localization.at_prime P)))</code> to <code>discrete_valuation_ring A</code> it type checks so it seems to me like it's unhappy with <code>localization.at_prime P</code> but I'm not sure why.</p>",
        "id": 243009278,
        "sender_full_name": "François Sunatori",
        "timestamp": 1623932658
    },
    {
        "content": "<p>here is an mwe</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.discrete_valuation_ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.fractional_ideal</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.ideal.over</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"n\">A</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">integral_domain</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">is_dedekind_domain_dvr</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">not_is_field</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">is_noetherian_ring</span> <span class=\"o\">:</span> <span class=\"n\">is_noetherian_ring</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">is_dvr_at_nonzero_prime</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">P.is_prime</span> <span class=\"bp\">→</span>\n  <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">localization.at_prime</span> <span class=\"n\">P</span><span class=\"o\">))</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">is_dedekind_domain_dvr_iff</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_dedekind_domain_dvr</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span>\n    <span class=\"o\">(</span><span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">is_noetherian_ring</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n    <span class=\"o\">((</span><span class=\"bp\">∀</span> <span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">P.is_prime</span> <span class=\"bp\">→</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">localization.at_prime</span> <span class=\"n\">P</span><span class=\"o\">)))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 243009320,
        "sender_full_name": "François Sunatori",
        "timestamp": 1623932682
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>    <span class=\"o\">((</span><span class=\"bp\">∀</span> <span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">P.is_prime</span> <span class=\"bp\">→</span> <span class=\"kd\">by</span> <span class=\"n\">exactI</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">localization.at_prime</span> <span class=\"n\">P</span><span class=\"o\">)))</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p>seems to work - this is an issue related to the instance cache</p>",
        "id": 243009748,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1623932927
    },
    {
        "content": "<p>great! thank you <span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span></p>",
        "id": 243014585,
        "sender_full_name": "François Sunatori",
        "timestamp": 1623935527
    },
    {
        "content": "<p>if you don't mind, could you elaborate about<br>\n\"this is an issue related to the instance cache\"?</p>",
        "id": 243014619,
        "sender_full_name": "François Sunatori",
        "timestamp": 1623935542
    },
    {
        "content": "<p><code>localization.at_prime</code> needs to know that <code>P</code> is a prime ideal. The proof is found automatically by the typeclass system, based on a set of instances that the typeclass system searches through. However, this set is only updated \"before the <code>:</code>\" of a statement, so the <code>P.is_prime</code> is not added to it and so it cannot be found. <code>exactI</code> is a special tactic that updates the cache, which fixes this kind of issue.</p>",
        "id": 243015310,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1623935828
    },
    {
        "content": "<p>An alternative is to name the hypothesis and apply it manually, this is slightly more brittle though I guess:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.discrete_valuation_ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.fractional_ideal</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.ideal.over</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"n\">A</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">integral_domain</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">is_dedekind_domain_dvr</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">not_is_field</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">is_noetherian_ring</span> <span class=\"o\">:</span> <span class=\"n\">is_noetherian_ring</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">is_dvr_at_nonzero_prime</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">P.is_prime</span> <span class=\"bp\">→</span>\n  <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">localization.at_prime</span> <span class=\"n\">P</span><span class=\"o\">))</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">is_dedekind_domain_dvr_iff</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_dedekind_domain_dvr</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span>\n    <span class=\"o\">(</span><span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">is_noetherian_ring</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">∧</span>\n    <span class=\"o\">((</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A</span><span class=\"o\">))</span> <span class=\"o\">[</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">P.is_prime</span><span class=\"o\">],</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">localization.at_prime</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">P</span> <span class=\"n\">h</span><span class=\"o\">)))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 243015396,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1623935877
    },
    {
        "content": "<p>thanks for the clear explanation <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> , and the alternative <span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> !</p>",
        "id": 243017637,
        "sender_full_name": "François Sunatori",
        "timestamp": 1623936819
    },
    {
        "content": "<p>Hi, this is what I have now,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.discrete_valuation_ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.fractional_ideal</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.ideal.over</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"n\">A</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">integral_domain</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">is_dedekind_domain_dvr</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">not_is_field</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">is_noetherian_ring</span> <span class=\"o\">:</span> <span class=\"n\">is_noetherian_ring</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">is_dvr_at_nonzero_prime</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">P.is_prime</span> <span class=\"bp\">→</span>\n  <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">localization.at_prime</span> <span class=\"n\">P</span><span class=\"o\">))</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">is_dedekind_domain_dvr_iff</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_dedekind_domain_dvr</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span>\n    <span class=\"o\">(</span><span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">is_noetherian_ring</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span>\n    <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">P.is_prime</span> <span class=\"bp\">→</span> <span class=\"kd\">by</span> <span class=\"n\">exactI</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">localization.at_prime</span> <span class=\"n\">P</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">⟩,</span>\n   <span class=\"bp\">λ</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">⟩⟩</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">is_dedekind_domain_dvr_equiv_is_dedekind_domain_inv</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_dedekind_domain_dvr</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span> <span class=\"n\">is_dedekind_domain_inv</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">intro</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">is_dedekind_domain_inv_iff</span><span class=\"o\">,</span>\n      <span class=\"gr\">sorry</span>\n    <span class=\"o\">},</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">intro</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">is_dedekind_domain_dvr_iff</span><span class=\"o\">,</span>\n      <span class=\"gr\">sorry</span>\n    <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I'm not too sure why <code>rw is_dedekind_domain_inv_iff</code> is giving me the error</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"n\">rewrite</span> <span class=\"n\">tactic</span><span class=\"o\">,</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">synthesize</span> <span class=\"n\">type</span> <span class=\"kd\">class</span> <span class=\"kd\">instance</span>\n</code></pre></div>\n<p>but <code>rw is_dedekind_domain_dvr_iff</code> doesn't give me any error.</p>",
        "id": 244094666,
        "sender_full_name": "François Sunatori",
        "timestamp": 1624843992
    },
    {
        "content": "<p>Your code doesn't compile for me on current master -- I get <code>unknown identifier 'is_dedekind_domain_inv'</code></p>",
        "id": 244112773,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1624867332
    },
    {
        "content": "<p>Oh sorry, yes I was missing <code>is_dedekind_domain_inv</code>. The <code>sorry</code> are in the last lemma at the bottom:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.discrete_valuation_ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.fractional_ideal</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.ideal.over</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"n\">A</span> <span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">integral_domain</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n\n<span class=\"sd\">/-- A ring `R` has Krull dimension at most one if all nonzero prime ideals are maximal. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">ring.dimension_le_one</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∀</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">R</span><span class=\"o\">),</span> <span class=\"n\">p.is_prime</span> <span class=\"bp\">→</span> <span class=\"n\">p.is_maximal</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">ideal</span> <span class=\"n\">ring</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">ring</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">dimension_le_one.principal_ideal_ring</span>\n  <span class=\"o\">[</span><span class=\"n\">is_principal_ideal_ring</span> <span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">dimension_le_one</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">nonzero</span> <span class=\"n\">prime</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">haveI</span> <span class=\"o\">:=</span> <span class=\"n\">prime</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">is_prime.to_maximal_ideal</span> <span class=\"n\">nonzero</span> <span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">dimension_le_one.integral_closure</span> <span class=\"o\">[</span><span class=\"n\">nontrivial</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">R</span> <span class=\"n\">A</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">dimension_le_one</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">dimension_le_one</span> <span class=\"o\">(</span><span class=\"n\">integral_closure</span> <span class=\"n\">R</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">λ</span> <span class=\"n\">p</span> <span class=\"n\">ne_bot</span> <span class=\"n\">prime</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">exactI</span>\n  <span class=\"n\">integral_closure.is_maximal_of_is_maximal_comap</span> <span class=\"n\">p</span>\n    <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">integral_closure.comap_ne_bot</span> <span class=\"n\">ne_bot</span><span class=\"o\">)</span> <span class=\"n\">infer_instance</span><span class=\"o\">)</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">ring</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">is_dedekind_domain</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">not_is_field</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">is_noetherian_ring</span> <span class=\"o\">:</span> <span class=\"n\">is_noetherian_ring</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">dimension_le_one</span> <span class=\"o\">:</span> <span class=\"n\">dimension_le_one</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">is_integrally_closed</span> <span class=\"o\">:</span> <span class=\"n\">integral_closure</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">fraction_ring</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">⊥</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">is_dedekind_domain_iff</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">fraction_map</span> <span class=\"n\">A</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_dedekind_domain</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span>\n    <span class=\"o\">(</span><span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">is_noetherian_ring</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span> <span class=\"n\">dimension_le_one</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span>\n    <span class=\"n\">integral_closure</span> <span class=\"n\">A</span> <span class=\"n\">f.codomain</span> <span class=\"bp\">=</span> <span class=\"bp\">⊥</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">,</span> <span class=\"n\">hi</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">,</span>\n  <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">integral_closure_map_alg_equiv</span> <span class=\"o\">(</span><span class=\"n\">fraction_ring.alg_equiv_of_quotient</span> <span class=\"n\">f</span><span class=\"o\">),</span>\n         <span class=\"n\">hi</span><span class=\"o\">,</span> <span class=\"n\">algebra.map_bot</span><span class=\"o\">]⟩,</span>\n <span class=\"bp\">λ</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">,</span> <span class=\"n\">hi</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">,</span>\n  <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">integral_closure_map_alg_equiv</span> <span class=\"o\">(</span><span class=\"n\">fraction_ring.alg_equiv_of_quotient</span> <span class=\"n\">f</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n         <span class=\"n\">hi</span><span class=\"o\">,</span> <span class=\"n\">algebra.map_bot</span><span class=\"o\">]⟩⟩</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">is_dedekind_domain_dvr</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">not_is_field</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">is_noetherian_ring</span> <span class=\"o\">:</span> <span class=\"n\">is_noetherian_ring</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">is_dvr_at_nonzero_prime</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">P.is_prime</span> <span class=\"bp\">→</span>\n  <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">localization.at_prime</span> <span class=\"n\">P</span><span class=\"o\">))</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">is_dedekind_domain_dvr_iff</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_dedekind_domain_dvr</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span>\n    <span class=\"o\">(</span><span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">is_noetherian_ring</span> <span class=\"n\">A</span> <span class=\"bp\">∧</span>\n    <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">P</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">P.is_prime</span> <span class=\"bp\">→</span> <span class=\"kd\">by</span> <span class=\"n\">exactI</span> <span class=\"n\">discrete_valuation_ring</span> <span class=\"o\">(</span><span class=\"n\">localization.at_prime</span> <span class=\"n\">P</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n  <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">⟩,</span>\n   <span class=\"bp\">λ</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hr</span><span class=\"o\">,</span> <span class=\"n\">hd</span><span class=\"o\">⟩⟩</span>\n\n<span class=\"kn\">section</span> <span class=\"n\">inverse</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R₁</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">integral_domain</span> <span class=\"n\">R₁</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">fraction_map</span> <span class=\"n\">R₁</span> <span class=\"n\">K</span><span class=\"o\">}</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">I</span> <span class=\"n\">J</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">}</span>\n\n<span class=\"kd\">noncomputable</span> <span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_inv</span> <span class=\"o\">(</span><span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"n\">I</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">inv_eq</span> <span class=\"o\">:</span> <span class=\"n\">I</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"n\">I</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">inv_zero'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">fractional_ideal.div_zero</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">inv_nonzero</span> <span class=\"o\">{</span><span class=\"n\">J</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">J</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"o\">⟨(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"n\">J</span><span class=\"o\">,</span> <span class=\"n\">fractional_ideal.fractional_div_of_nonzero</span> <span class=\"n\">h</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span>\n<span class=\"n\">fractional_ideal.div_nonzero</span> <span class=\"n\">_</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">coe_inv_of_nonzero</span> <span class=\"o\">{</span><span class=\"n\">J</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">J</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R₁</span> <span class=\"n\">g.codomain</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">g.coe_submodule</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"n\">J</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rwa</span> <span class=\"n\">inv_nonzero</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">refl</span><span class=\"o\">,</span> <span class=\"n\">assumption</span><span class=\"o\">}</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">right_inverse_eq</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"n\">J</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">J</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">J</span> <span class=\"bp\">=</span> <span class=\"n\">I</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">hI</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"n\">fractional_ideal.ne_zero_of_mul_eq_one</span> <span class=\"n\">I</span> <span class=\"n\">J</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">suffices</span> <span class=\"n\">h'</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">congr_arg</span> <span class=\"n\">units.inv</span> <span class=\"bp\">$</span>\n      <span class=\"bp\">@</span><span class=\"n\">units.ext</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">units.mk_of_mul_eq_one</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">units.mk_of_mul_eq_one</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">h'</span><span class=\"o\">)</span> <span class=\"n\">rfl</span><span class=\"o\">)</span> <span class=\"o\">},</span>\n  <span class=\"n\">apply</span> <span class=\"n\">le_antisymm</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">apply</span> <span class=\"n\">fractional_ideal.mul_le.mpr</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n    <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">y</span> <span class=\"n\">hy</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">mul_comm</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">fractional_ideal.mem_div_iff_of_nonzero</span> <span class=\"n\">hI</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mp</span> <span class=\"n\">hy</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">fractional_ideal.mul_left_mono</span> <span class=\"n\">I</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"n\">fractional_ideal.le_div_iff_of_nonzero</span> <span class=\"n\">hI</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">y</span> <span class=\"n\">hy</span> <span class=\"n\">x</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">mul_comm</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">fractional_ideal.mul_mem_mul</span> <span class=\"n\">hx</span> <span class=\"n\">hy</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">mul_inv_cancel_iff</span> <span class=\"o\">{</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"n\">J</span><span class=\"o\">,</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">J</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">I</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">⟩,</span> <span class=\"bp\">λ</span> <span class=\"o\">⟨</span><span class=\"n\">J</span><span class=\"o\">,</span> <span class=\"n\">hJ</span><span class=\"o\">⟩,</span> <span class=\"kd\">by</span> <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"bp\">←</span> <span class=\"bp\">@</span><span class=\"n\">right_inverse_eq</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">I</span> <span class=\"n\">J</span> <span class=\"n\">hJ</span><span class=\"o\">]⟩</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">K'</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K'</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">g'</span> <span class=\"o\">:</span> <span class=\"n\">fraction_map</span> <span class=\"n\">R₁</span> <span class=\"n\">K'</span><span class=\"o\">}</span>\n\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">map_inv</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">g.codomain</span> <span class=\"bp\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">R₁</span><span class=\"o\">]</span> <span class=\"n\">g'.codomain</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">I</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">g.codomain</span> <span class=\"bp\">→ₐ</span><span class=\"o\">[</span><span class=\"n\">R₁</span><span class=\"o\">]</span> <span class=\"n\">g'.codomain</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">I.map</span> <span class=\"n\">h</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">inv_eq</span><span class=\"o\">,</span> <span class=\"n\">fractional_ideal.map_div</span><span class=\"o\">,</span> <span class=\"n\">fractional_ideal.map_one</span><span class=\"o\">,</span> <span class=\"n\">inv_eq</span><span class=\"o\">]</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">submodule</span> <span class=\"n\">submodule.is_principal</span>\n\n<span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">span_singleton_inv</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">g.codomain</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">fractional_ideal.span_singleton</span> <span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"n\">fractional_ideal.span_singleton</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">fractional_ideal.one_div_span_singleton</span> <span class=\"n\">x</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">mul_generator_self_inv</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">submodule.is_principal</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R₁</span> <span class=\"n\">g.codomain</span><span class=\"o\">)]</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">fractional_ideal.span_singleton</span> <span class=\"o\">(</span><span class=\"n\">generator</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R₁</span> <span class=\"n\">g.codomain</span><span class=\"o\">))</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"c1\">-- Rewrite only the `I` that appears alone.</span>\n  <span class=\"n\">conv_lhs</span> <span class=\"o\">{</span> <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">fractional_ideal.eq_span_singleton_of_principal</span> <span class=\"n\">I</span> <span class=\"o\">},</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">fractional_ideal.span_singleton_mul_span_singleton</span><span class=\"o\">,</span> <span class=\"n\">mul_inv_cancel</span><span class=\"o\">,</span>\n    <span class=\"n\">fractional_ideal.span_singleton_one</span><span class=\"o\">],</span>\n  <span class=\"n\">intro</span> <span class=\"n\">generator_I_eq_zero</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">fractional_ideal.eq_span_singleton_of_principal</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">generator_I_eq_zero</span><span class=\"o\">,</span>\n    <span class=\"n\">fractional_ideal.span_singleton_zero</span><span class=\"o\">]</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">invertible_of_principal</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">submodule.is_principal</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R₁</span> <span class=\"n\">g.codomain</span><span class=\"o\">)]</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">fractional_ideal.mul_div_self_cancel_iff</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">mpr</span>\n  <span class=\"o\">⟨</span><span class=\"n\">fractional_ideal.span_singleton</span> <span class=\"o\">(</span><span class=\"n\">generator</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R₁</span> <span class=\"n\">g.codomain</span><span class=\"o\">))</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span>\n    <span class=\"bp\">@</span><span class=\"n\">mul_generator_self_inv</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">I</span> <span class=\"n\">_</span> <span class=\"n\">h</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">invertible_iff_generator_nonzero</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">submodule.is_principal</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R₁</span> <span class=\"n\">g.codomain</span><span class=\"o\">)]</span> <span class=\"o\">:</span>\n  <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">↔</span> <span class=\"n\">generator</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R₁</span> <span class=\"n\">g.codomain</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">hI</span> <span class=\"n\">hg</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">fractional_ideal.ne_zero_of_mul_eq_one</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">hI</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">fractional_ideal.eq_span_singleton_of_principal</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">hg</span><span class=\"o\">,</span>\n        <span class=\"n\">fractional_ideal.span_singleton_zero</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">intro</span> <span class=\"n\">hg</span><span class=\"o\">,</span>\n    <span class=\"n\">apply</span> <span class=\"n\">invertible_of_principal</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">fractional_ideal.eq_span_singleton_of_principal</span> <span class=\"n\">I</span><span class=\"o\">],</span>\n    <span class=\"n\">intro</span> <span class=\"n\">hI</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">fractional_ideal.mem_span_singleton_self</span> <span class=\"o\">(</span><span class=\"n\">generator</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R₁</span> <span class=\"n\">g.codomain</span><span class=\"o\">)),</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hI</span><span class=\"o\">,</span> <span class=\"n\">fractional_ideal.mem_zero_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n    <span class=\"n\">contradiction</span> <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">is_principal_inv</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n  <span class=\"o\">[</span><span class=\"n\">submodule.is_principal</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R₁</span> <span class=\"n\">g.codomain</span><span class=\"o\">)]</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">submodule.is_principal</span> <span class=\"o\">(</span><span class=\"n\">I</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">fractional_ideal.val_eq_coe</span><span class=\"o\">,</span> <span class=\"n\">fractional_ideal.is_principal_iff</span><span class=\"o\">],</span>\n  <span class=\"n\">use</span> <span class=\"o\">(</span><span class=\"n\">generator</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R₁</span> <span class=\"n\">g.codomain</span><span class=\"o\">))</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">hI</span> <span class=\"o\">:</span> <span class=\"n\">I</span>  <span class=\"bp\">*</span> <span class=\"n\">fractional_ideal.span_singleton</span> <span class=\"o\">((</span><span class=\"n\">generator</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R₁</span> <span class=\"n\">g.codomain</span><span class=\"o\">))</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span>  <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"bp\">@</span><span class=\"n\">mul_generator_self_inv</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">I</span> <span class=\"n\">_</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">right_inverse_eq</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">I</span> <span class=\"o\">(</span><span class=\"n\">fractional_ideal.span_singleton</span>\n    <span class=\"o\">(</span> <span class=\"o\">(</span><span class=\"n\">generator</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R₁</span> <span class=\"n\">g.codomain</span><span class=\"o\">))</span><span class=\"bp\">⁻¹</span><span class=\"o\">))</span> <span class=\"n\">hI</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">is_dedekind_domain_inv</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">not_is_field</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">mul_inv_cancel</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">I</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"o\">(</span><span class=\"n\">fraction_ring.of</span> <span class=\"n\">A</span><span class=\"o\">)),</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">ring.fractional_ideal</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">is_dedekind_domain_inv_iff</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">fraction_map</span> <span class=\"n\">A</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_dedekind_domain_inv</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span>\n    <span class=\"o\">(</span><span class=\"bp\">¬</span> <span class=\"n\">is_field</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">I</span> <span class=\"bp\">≠</span> <span class=\"o\">(</span><span class=\"bp\">⊥</span> <span class=\"o\">:</span> <span class=\"n\">fractional_ideal</span> <span class=\"n\">f</span><span class=\"o\">),</span> <span class=\"n\">I</span> <span class=\"bp\">*</span> <span class=\"n\">I</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">set</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fraction_ring.of</span> <span class=\"n\">A</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">codomain</span> <span class=\"bp\">≃ₐ</span><span class=\"o\">[</span><span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"n\">f.codomain</span> <span class=\"o\">:=</span> <span class=\"n\">fraction_ring.alg_equiv_of_quotient</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"bp\">;</span> <span class=\"n\">rintros</span> <span class=\"o\">⟨</span><span class=\"n\">hf</span><span class=\"o\">,</span> <span class=\"n\">hi</span><span class=\"o\">⟩</span><span class=\"bp\">;</span> <span class=\"n\">use</span> <span class=\"n\">hf</span><span class=\"bp\">;</span> <span class=\"n\">intros</span> <span class=\"n\">I</span> <span class=\"n\">hI</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">hi</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"bp\">↑</span><span class=\"n\">h.symm</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">map_ne_zero</span> <span class=\"n\">_</span> <span class=\"n\">hI</span><span class=\"o\">),</span>\n    <span class=\"n\">convert</span> <span class=\"n\">congr_arg</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fraction_ring.of</span> <span class=\"n\">A</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">codomain</span> <span class=\"bp\">→ₐ</span><span class=\"o\">[</span><span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"n\">f.codomain</span><span class=\"o\">))</span> <span class=\"n\">this</span><span class=\"bp\">;</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">map_symm_map</span><span class=\"o\">,</span> <span class=\"n\">map_one</span><span class=\"o\">,</span> <span class=\"n\">fractional_ideal.map_mul</span><span class=\"o\">,</span> <span class=\"n\">fractional_ideal.map_div</span><span class=\"o\">,</span>\n                 <span class=\"n\">inv_eq</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">hi</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"bp\">↑</span><span class=\"n\">h</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">map_ne_zero</span> <span class=\"n\">_</span> <span class=\"n\">hI</span><span class=\"o\">),</span>\n    <span class=\"n\">convert</span> <span class=\"n\">congr_arg</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">h.symm</span> <span class=\"o\">:</span> <span class=\"n\">f.codomain</span> <span class=\"bp\">→ₐ</span><span class=\"o\">[</span><span class=\"n\">A</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">fraction_ring.of</span> <span class=\"n\">A</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">codomain</span><span class=\"o\">))</span> <span class=\"n\">this</span><span class=\"bp\">;</span>\n      <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">map_map_symm</span><span class=\"o\">,</span> <span class=\"n\">map_one</span><span class=\"o\">,</span> <span class=\"n\">fractional_ideal.map_mul</span><span class=\"o\">,</span> <span class=\"n\">fractional_ideal.map_div</span><span class=\"o\">,</span>\n                 <span class=\"n\">inv_eq</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">is_dedekind_domain_dvr_equiv_is_dedekind_domain_inv</span> <span class=\"o\">:</span>\n  <span class=\"n\">is_dedekind_domain_dvr</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span> <span class=\"n\">is_dedekind_domain_inv</span> <span class=\"n\">A</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">intro</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">is_dedekind_domain_dvr_iff</span> <span class=\"n\">at</span> <span class=\"n\">ᾰ</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">is_dedekind_domain_inv_iff</span><span class=\"o\">,</span>\n      <span class=\"gr\">sorry</span>\n    <span class=\"o\">},</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">intro</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">is_dedekind_domain_dvr_iff</span><span class=\"o\">,</span>\n      <span class=\"gr\">sorry</span>\n    <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">inverse</span>\n</code></pre></div>",
        "id": 244147014,
        "sender_full_name": "François Sunatori",
        "timestamp": 1624888209
    }
]