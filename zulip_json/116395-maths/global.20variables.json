[
    {
        "content": "<p>Yeah I understand. It's very similar to writing things in mathematics. But from a software engineering perspective it's somewhat similar to using global variables, which forces the reader to either read everything from the very beginning or to scroll the code up and down a few times. But I can appreciate the trade-off in the context of a language for math</p>",
        "id": 259277149,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1635356398
    },
    {
        "content": "<p>The <code>#where</code> command is helpful to see exactly which variables are in effect.</p>",
        "id": 259279156,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1635357194
    },
    {
        "content": "<p>A problem with global variables is that this is state you have to reason about to be able to tell whether the code you're writing is correct, since any given function can change behavior depending on the value of a global.  A nice thing about <code>variables</code> is that all it does is insert extra arguments, and when in doubt you can <code>#check</code> the type of a function or move your cursor to the beginning of a proof and look at the goal window.</p>",
        "id": 259279964,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1635357498
    },
    {
        "content": "<p>An interesting insight is that it's like moving towards the concept of live books, as opposed to static ones written on paper, pdfs or static html. And I am very fond of interactive media</p>",
        "id": 259280833,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1635357810
    }
]