[
    {
        "content": "<p>I wanted to understand if it was a misunderstanding on my part, but we don't have any \"general\" pigeonhole principles in mathlib?</p>\n<p>Let's say I have $f : A \\to B$ where <code>range f: set B</code> is finite, i.e. I have a proof of <code>(range f).finite</code> and let's say <code>(set A).univ.infinite</code> (something like this), do I have a pigeonhole which gives me something like: <code>there is some y in B such that (preimage f y).infinite</code> (?).</p>",
        "id": 191526639,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1584992922
    },
    {
        "content": "<p>I haven't seen anything like that in mathlib. I have proved something very similar to what you suggest here though: <a href=\"https://github.com/b-mehta/combinatorics/blob/extras/src/inf_ramsey.lean#L10\" target=\"_blank\" title=\"https://github.com/b-mehta/combinatorics/blob/extras/src/inf_ramsey.lean#L10\">https://github.com/b-mehta/combinatorics/blob/extras/src/inf_ramsey.lean#L10</a></p>",
        "id": 191526980,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1584993060
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"246273\">Bhavik Mehta</span> <a href=\"#narrow/stream/116395-maths/topic/Pigeonhole.20for.20arbitrary.20cardinals.3F/near/191526980\" title=\"#narrow/stream/116395-maths/topic/Pigeonhole.20for.20arbitrary.20cardinals.3F/near/191526980\">said</a>:</p>\n<blockquote>\n<p>I haven't seen anything like that in mathlib. I have proved something very similar to what you suggest here though: <a href=\"https://github.com/b-mehta/combinatorics/blob/extras/src/inf_ramsey.lean#L10\" target=\"_blank\" title=\"https://github.com/b-mehta/combinatorics/blob/extras/src/inf_ramsey.lean#L10\">https://github.com/b-mehta/combinatorics/blob/extras/src/inf_ramsey.lean#L10</a></p>\n</blockquote>\n<p>Wow, awesome! I didn't know about bind and was using univ.</p>\n<p>I guess that's something really fundamental &amp; basic. That would make sense to PR it to mathlib in <code>set</code> I think.</p>",
        "id": 191527437,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1584993276
    },
    {
        "content": "<p>(also would be nice to make it work with <code>finset</code>)</p>",
        "id": 191527469,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1584993291
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"262143\">Ryan Lahfa</span> <a href=\"#narrow/stream/116395-maths/topic/Pigeonhole.20for.20arbitrary.20cardinals.3F/near/191527469\" title=\"#narrow/stream/116395-maths/topic/Pigeonhole.20for.20arbitrary.20cardinals.3F/near/191527469\">said</a>:</p>\n<blockquote>\n<p>(also would be nice to make it work with <code>finset</code>)</p>\n</blockquote>\n<p><a href=\"https://github.com/b-mehta/combinatorics/blob/extras/src/ramsey.lean#L11\" target=\"_blank\" title=\"https://github.com/b-mehta/combinatorics/blob/extras/src/ramsey.lean#L11\">https://github.com/b-mehta/combinatorics/blob/extras/src/ramsey.lean#L11</a></p>",
        "id": 191527637,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1584993362
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"262143\">Ryan Lahfa</span> <a href=\"#narrow/stream/116395-maths/topic/Pigeonhole.20for.20arbitrary.20cardinals.3F/near/191527469\" title=\"#narrow/stream/116395-maths/topic/Pigeonhole.20for.20arbitrary.20cardinals.3F/near/191527469\">said</a>:</p>\n<blockquote>\n<p>I guess that's something really fundamental &amp; basic. That would make sense to PR it to mathlib in <code>set</code> I think.</p>\n</blockquote>\n<p>Yeah it would, I just haven't gotten round to it yet. Feel free to do it yourself if you'd like!</p>",
        "id": 191527720,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1584993389
    },
    {
        "content": "<p>I wrote a pigeonhole principle for finset in <a href=\"https://github.com/anfelor/coc-lean/blob/master/src/FreshNames.lean\" target=\"_blank\" title=\"https://github.com/anfelor/coc-lean/blob/master/src/FreshNames.lean\">https://github.com/anfelor/coc-lean/blob/master/src/FreshNames.lean</a></p>",
        "id": 191527824,
        "sender_full_name": "Anton Lorenzen",
        "timestamp": 1584993427
    },
    {
        "content": "<p>But there might be nicer approaches; it feels a bit hacked together</p>",
        "id": 191528041,
        "sender_full_name": "Anton Lorenzen",
        "timestamp": 1584993512
    },
    {
        "content": "<p>Maybe we should wait some inputs from maintainers of mathlib to have their opinion and see what I can collect to do a nice PR :)</p>",
        "id": 191528419,
        "sender_full_name": "Ryan Lahfa",
        "timestamp": 1584993679
    }
]