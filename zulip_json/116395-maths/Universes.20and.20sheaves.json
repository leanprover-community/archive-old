[
    {
        "content": "<p>Our definition of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.Sheaf\">docs#category_theory.Sheaf</a> has the following universe restriction, which seems too restrictive to me: Given <code>C : Type u</code> with <code>category.{v} C</code> and grothendieck topology <code>T</code>on <code>C</code>, we can define <code>A</code>-valued sheaves on <code>C</code> (w.r.t. <code>T</code>) provided <code>A : Type u'</code> has a <code>category.{v} A</code>. </p>\n<p>Is there a good reason why the universe level of morphisms for <code>C</code> is required to be the same as the one for <code>A</code>?</p>",
        "id": 256635261,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633634659
    },
    {
        "content": "<p>Perhaps not - I recall trying to make the universes as un-restricted as possible (without resorting to <code>ulift</code>), but this might have been one of the cases where the universe level of <code>Sheaf J</code> and its morphisms look very ugly if they're different.</p>",
        "id": 256644550,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1633638507
    },
    {
        "content": "<p>Oh actually, looking at this again, <code>coyoneda</code> is the one which insists on the universe restrictions, in <code>is_sheaf</code>. Can you lift the universe-level of the morphisms for your case?</p>",
        "id": 256644949,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1633638671
    },
    {
        "content": "<p>I see. <code>coyoneda</code> does indeed impose this restriction. I would have to think more carefully about what I actually want.</p>\n<p>The main thing that seems silly to me, in the context of condensed sets, is that <code>as_small.{u+1} Profinite.{u} \\func Type (u+1)</code> is equivalent to <code>Profinite.{u} \\func Type (u+1)</code>. Adding the <code>as_small</code> stuff just introduces some seemingly unnecessary complexity.</p>",
        "id": 256650052,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633640881
    },
    {
        "content": "<p>I agree - the distinction is in the statement of the sheaf condition</p>",
        "id": 256650311,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1633640991
    },
    {
        "content": "<p>I tracked down the issue to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.sieve.functor\">docs#category_theory.sieve.functor</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/category_theory.presieve.yoneda_sheaf_condition\">docs#category_theory.presieve.yoneda_sheaf_condition</a></p>",
        "id": 256816156,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1633733089
    }
]