[
    {
        "content": "<p>Hi, <code>field_simp</code> fails to simplify <code>y = (y - x) / (z - x) * z + (1 - (y - x) / (z - x)) * x</code>. It gives <code>y = (y + -x) * z / (z + -x) + (1 + (x + -y) / (z + -x)) * x</code>. It seems that it lacks <code>a + b / c = (a * c + b) / c</code> rule.</p>",
        "id": 183890772,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1576793697
    },
    {
        "content": "<p>Sorry, adding <code>h : z + -x ≠ 0</code> did the trick (didn't work with <code>z - x ≠ 0</code>).</p>",
        "id": 183891060,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1576793931
    },
    {
        "content": "<p>aah, the dreaded <code>sub_eq_add_neg</code> strikes again!</p>",
        "id": 183891324,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1576794147
    },
    {
        "content": "<p>Possibly <code>field_simp</code> should (partially) simplify its arguments first.</p>",
        "id": 183891451,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1576794250
    },
    {
        "content": "<p>Without <code>sub_eq_add_neg</code> we would need separate lemmas for <code>a - b / c</code> etc.</p>",
        "id": 183891480,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1576794279
    },
    {
        "content": "<p>Yes, it is somehow a necessary evil sometimes</p>",
        "id": 183891501,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1576794301
    }
]