[
    {
        "content": "<p>Quiz: define the following function in Lean, evaluate the values of the first ten arguments of that function, and find another way of defining it.</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mrow><mo fence=\"true\">(</mo><mn>0</mn><mo fence=\"true\">)</mo></mrow><mo>=</mo><mn>1</mn><mo>∧</mo><mi>f</mi><mrow><mo fence=\"true\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo fence=\"true\">)</mo></mrow><mo>=</mo><mi>f</mi><mrow><mo fence=\"true\">(</mo><mi>n</mi><mo fence=\"true\">)</mo></mrow><mo>+</mo><mi>f</mi><mrow><mo fence=\"true\">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo fence=\"true\">)</mo></mrow><mo>+</mo><mo>⋯</mo><mo>+</mo><mi>f</mi><mrow><mo fence=\"true\">(</mo><mn>0</mn><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">f \\left( 0 \\right) = 1 \\wedge f \\left(n + 1 \\right) = f \\left( n \\right) + f \\left( n - 1 \\right) + \\cdots + f \\left( 0 \\right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">0</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">0</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span></span></p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Solution</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- this code is written in Lean 4</span>\n<span class=\"kn\">import</span> <span class=\"n\">Std.Data.Nat.Lemmas</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">List</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">sumOfAllPrevSums</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">List</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span>\n  <span class=\"k\">match</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"mi\">0</span>     <span class=\"bp\">=&gt;</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span>\n  <span class=\"bp\">|</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">loop</span> <span class=\"n\">m</span> <span class=\"bp\">++</span> <span class=\"o\">[</span><span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)]</span>\n\n<span class=\"k\">#reduce</span> <span class=\"n\">loop</span> <span class=\"mi\">0</span> <span class=\"c1\">-- [1]</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">loop</span> <span class=\"mi\">1</span> <span class=\"c1\">-- [1, 1]</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">loop</span> <span class=\"mi\">2</span> <span class=\"c1\">-- [1, 1, 2]</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">loop</span> <span class=\"mi\">3</span> <span class=\"c1\">-- [1, 1, 2, 4]</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">loop</span> <span class=\"mi\">4</span> <span class=\"c1\">-- [1, 1, 2, 4, 8]</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">loop</span> <span class=\"mi\">5</span> <span class=\"c1\">-- [1, 1, 2, 4, 8, 16]</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">loop</span> <span class=\"mi\">6</span> <span class=\"c1\">-- [1, 1, 2, 4, 8, 16, 32]</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">loop</span> <span class=\"mi\">7</span> <span class=\"c1\">-- [1, 1, 2, 4, 8, 16, 32, 64]</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">loop</span> <span class=\"mi\">8</span> <span class=\"c1\">-- [1, 1, 2, 4, 8, 16, 32, 64, 128]</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">loop</span> <span class=\"mi\">9</span> <span class=\"c1\">-- [1, 1, 2, 4, 8, 16, 32, 64, 128, 256]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">loop_lt</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Nat.sub_lt_self</span>\n  <span class=\"n\">case</span> <span class=\"n\">h₀</span> <span class=\"bp\">=&gt;</span> <span class=\"k\">show</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span><span class=\"bp\">;</span> <span class=\"n\">decide</span>\n  <span class=\"n\">case</span> <span class=\"n\">h₁</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"k\">show</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span>\n    <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">apply</span> <span class=\"n\">Nat.le_of_eq</span>\n      <span class=\"k\">show</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"mi\">0</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span>\n      <span class=\"k\">calc</span>\n        <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span><span class=\"bp\">.</span><span class=\"n\">length</span>      <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n        <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"mi\">0</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n    <span class=\"bp\">|</span> <span class=\"n\">succ</span> <span class=\"n\">m</span> <span class=\"n\">ih</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">apply</span> <span class=\"n\">Nat.le_trans</span> <span class=\"n\">ih</span>\n      <span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">length</span>\n      <span class=\"k\">calc</span>\n        <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span>\n      <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span>                   <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">Nat.le_add_right</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">+</span> <span class=\"o\">[</span><span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)]</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span> <span class=\"bp\">++</span> <span class=\"o\">[</span><span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)])</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">length_append</span><span class=\"o\">]</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">length</span>                 <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">sumOfAllPrevSums</span>\n\n<span class=\"c1\">-- sum of all previous sums</span>\n<span class=\"kd\">def</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span>\n  <span class=\"k\">let</span> <span class=\"n\">loop</span>    <span class=\"o\">:=</span> <span class=\"n\">sumOfAllPrevSums.loop</span>\n  <span class=\"k\">let</span> <span class=\"n\">loop_lt</span> <span class=\"o\">:=</span> <span class=\"n\">sumOfAllPrevSums.loop_lt</span>\n  <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">get</span> <span class=\"o\">⟨(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">loop_lt</span> <span class=\"n\">n</span><span class=\"o\">⟩</span>\n\n<span class=\"k\">#reduce</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"mi\">0</span> <span class=\"c1\">-- 1</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"mi\">1</span> <span class=\"c1\">-- 1</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"mi\">2</span> <span class=\"c1\">-- 2</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"mi\">3</span> <span class=\"c1\">-- 4</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"mi\">4</span> <span class=\"c1\">-- 8</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"mi\">5</span> <span class=\"c1\">-- 16</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"mi\">6</span> <span class=\"c1\">-- 32</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"mi\">7</span> <span class=\"c1\">-- 64</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"mi\">8</span> <span class=\"c1\">-- 128</span>\n<span class=\"k\">#reduce</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"mi\">9</span> <span class=\"c1\">-- 256</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">sumOfAllPrevSums</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">loop_lemma</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">n</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rfl</span>\n  <span class=\"bp\">|</span> <span class=\"n\">succ</span> <span class=\"n\">m</span> <span class=\"n\">ih</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"k\">show</span> <span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n    <span class=\"k\">calc</span>\n      <span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span>\n    <span class=\"bp\">=</span> <span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span> <span class=\"bp\">++</span> <span class=\"o\">[</span><span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)])</span>        <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">Nat.sum</span> <span class=\"o\">[</span><span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)]</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Nat.sum_append</span><span class=\"o\">]</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)</span>           <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">m</span><span class=\"o\">)</span>                          <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Nat.two_mul</span><span class=\"o\">]</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">m</span>                                     <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">ih</span><span class=\"o\">]</span>\n  <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>                                   <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">Nat.pow_succ'</span><span class=\"o\">]</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">general_term_lemma</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n      <span class=\"o\">:</span> <span class=\"n\">length</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">length</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">apply</span> <span class=\"n\">Eq.symm</span>\n  <span class=\"k\">show</span> <span class=\"n\">length</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"bp\">=</span> <span class=\"n\">length</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)</span>\n  <span class=\"k\">calc</span>\n    <span class=\"n\">length</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span>\n  <span class=\"bp\">=</span> <span class=\"n\">length</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span> <span class=\"bp\">++</span> <span class=\"o\">[</span><span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)])</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">length</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"n\">length</span> <span class=\"o\">([</span><span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)])</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span>\n                                 <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">length_append</span><span class=\"o\">]</span>\n<span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">length</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n<span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">length</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"n\">n</span><span class=\"o\">)</span>         <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">general_term</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span><span class=\"o\">)</span>\n      <span class=\"o\">:</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">induction</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n  <span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">rfl</span>\n  <span class=\"bp\">|</span> <span class=\"n\">succ</span> <span class=\"n\">m</span> <span class=\"n\">ihm</span> <span class=\"bp\">=&gt;</span>\n    <span class=\"n\">simp</span>\n    <span class=\"k\">show</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"n\">m</span>\n    <span class=\"n\">induction</span> <span class=\"n\">m</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">zero</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">simp</span>\n    <span class=\"bp\">|</span> <span class=\"n\">succ</span> <span class=\"n\">k</span> <span class=\"n\">ihk</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"bp\">*</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"bp\">*</span>\n      <span class=\"k\">show</span> <span class=\"n\">sumOfAllPrevSums</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n      <span class=\"k\">calc</span>\n        <span class=\"n\">sumOfAllPrevSums</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n      <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">get</span> <span class=\"o\">(</span><span class=\"n\">Fin.mk</span> <span class=\"o\">((</span><span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">length</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n          <span class=\"o\">(</span><span class=\"n\">loop_lt</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">)))</span>   <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"n\">Nat.sum</span> <span class=\"o\">(</span><span class=\"n\">loop</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n          <span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">get_last</span><span class=\"bp\">;</span>     <span class=\"n\">apply</span> <span class=\"n\">Nat.not_lt_of_le</span>\n             <span class=\"n\">apply</span> <span class=\"n\">Nat.le_of_eq</span><span class=\"bp\">;</span> <span class=\"n\">apply</span> <span class=\"n\">general_term_lemma</span>\n    <span class=\"n\">_</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">^</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>            <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">loop_lemma</span><span class=\"o\">]</span>\n\n<span class=\"kd\">end</span> <span class=\"n\">sumOfAllPrevSums</span>\n</code></pre></div>\n<p>By theorem <code>sumOfAllPrevSums.general_term</code>,</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mrow><mo fence=\"true\">(</mo><mn>0</mn><mo fence=\"true\">)</mo></mrow><mo>=</mo><mn>1</mn><mo>∧</mo><mi>f</mi><mrow><mo fence=\"true\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo fence=\"true\">)</mo></mrow><mo>=</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">f \\left( 0 \\right) = 1 \\wedge f \\left( n + 1 \\right) = 2 ^ n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">0</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7144em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7144em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></p>\n</div></div>\n<p><strong>Reference</strong></p>\n<p>CWoo. “course-of-values recursion.” PlanetMath. Last modified Mar 22, 2013. <a href=\"https://planetmath.org/courseofvaluesrecursion\">https://planetmath.org/courseofvaluesrecursion</a>.</p>",
        "id": 317293838,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1671689012
    },
    {
        "content": "<p>While trying to solve Exercise 3 from Chapter 8 of <a href=\"https://leanprover.github.io/theorem_proving_in_lean4/\">#tpil4</a>, I came up with the quiz above.</p>",
        "id": 317294921,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1671689915
    },
    {
        "content": "<p>Can you define <code>f</code> without using lists and without proving any theorem before the definition of <code>f</code>?</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Simpler definition</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Nat</span> <span class=\"bp\">→</span> <span class=\"n\">Nat</span> <span class=\"o\">:=</span>\n<span class=\"n\">Classical.epsilon</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">f</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">f</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n<span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">rec</span> <span class=\"mi\">0</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">k</span> <span class=\"n\">a</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">k</span><span class=\"o\">))</span>\n</code></pre></div>\n</div></div>\n<p>The final proof may be harder using this definition though.</p>",
        "id": 317315237,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1671699863
    },
    {
        "content": "<p>Right. Maybe I can also use <code>Finset</code> to define <code>f</code>; I'd like it to be computable.</p>",
        "id": 317337761,
        "sender_full_name": "Bulhwi Cha",
        "timestamp": 1671707268
    }
]