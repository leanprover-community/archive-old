[
    {
        "content": "<p>It seems that <code>smul</code> over <code>ℝ</code> isn't defined for functions from <code>ℝ</code> to <code>ℝ</code> -- or at least, I can't get it to work.</p>",
        "id": 148196578,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1542923753
    },
    {
        "content": "<p>It seems to me that functions are a rather natural type to use scalar multiplication on -- or am I missing some trick?</p>",
        "id": 148196620,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1542923805
    },
    {
        "content": "<p>(also, should there be a coercion from <code>α</code> to <code>β → α</code> -- i.e. to constant functions?)</p>",
        "id": 148196682,
        "sender_full_name": "Abhimanyu Pallavi Sudhir",
        "timestamp": 1542923902
    },
    {
        "content": "<p>Chris Hughes suggested that importing pi_instances might fix this -- but it didn't seem to.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">module</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">pi_instances</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">module</span> <span class=\"n\">ℝ</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply_instance</span>\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">has_scalar</span> <span class=\"n\">ℝ</span> <span class=\"o\">(</span><span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply_instance</span> <span class=\"c1\">-- fails</span>\n</pre></div>\n\n\n<p><code>pi_instances</code> contains the line</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"n\">module</span>       <span class=\"o\">(</span><span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">}</span>           <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">add_comm_group</span> <span class=\"err\">$</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">]</span>  <span class=\"o\">[</span><span class=\"bp\">∀</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">module</span> <span class=\"n\">α</span> <span class=\"err\">$</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">]</span>       <span class=\"o\">:</span> <span class=\"n\">module</span> <span class=\"n\">α</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)</span>       <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"bp\">..</span><span class=\"n\">pi</span><span class=\"bp\">.</span><span class=\"n\">semimodule</span> <span class=\"n\">α</span><span class=\"o\">}</span>\n</pre></div>",
        "id": 148196749,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1542924041
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">module</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">pi_instances</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">module</span> <span class=\"n\">ℚ</span> <span class=\"n\">ℚ</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply_instance</span>\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"n\">has_scalar</span> <span class=\"n\">ℚ</span> <span class=\"o\">(</span><span class=\"n\">ℚ</span> <span class=\"bp\">→</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">apply_instance</span> <span class=\"c1\">-- fails</span>\n</pre></div>\n\n\n<p>That fails too so it's not some decidable equality issue</p>",
        "id": 148196761,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1542924118
    }
]