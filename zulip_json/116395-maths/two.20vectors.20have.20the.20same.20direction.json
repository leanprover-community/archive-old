[
    {
        "content": "<p>There are quite a few ways to say that two vectors in a real vector space have the same direction (or at least one of them is zero). Do we have some <code>iff</code>/<code>tfae</code> lemmas about this?<br>\n<span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> <span class=\"user-mention\" data-user-id=\"311453\">@Frédéric Dupuis</span> , you probably needed something like that in <code>rayleigh*</code></p>",
        "id": 272908210,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1645596009
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/same_ray\">docs#same_ray</a> is perhaps one such spelling</p>",
        "id": 272913362,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645601743
    },
    {
        "content": "<p>It was all quite cumbersome -- I think we tried to restrict to the sphere as soon as possible.</p>",
        "id": 272940469,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1645618804
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> I want a similar relation, namely \"<code>same_ray</code> or one of the vectors is zero\". How should I call it?</p>",
        "id": 272944074,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1645620956
    },
    {
        "content": "<p>BTW, over the field it is equivalent to <code>orbit_rel</code> for the induced action of positive elements, not for the action of the original field.</p>",
        "id": 272944215,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1645621036
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/116395-maths/topic/two.20vectors.20have.20the.20same.20direction/near/272944215\">said</a>:</p>\n<blockquote>\n<p>BTW, over the field it is equivalent to <code>orbit_rel</code> for the induced action of positive elements, not for the action of the original field.</p>\n</blockquote>\n<p>To be clear, you're saying the current docstring is wrong, right? Indeed, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/same_ray_setoid_eq_orbit_rel\">docs#same_ray_setoid_eq_orbit_rel</a>  has the correct statement</p>",
        "id": 272945556,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645621703
    },
    {
        "content": "<p>Something like this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebra.order.ring</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.module</span>\n<span class=\"kn\">import</span> <span class=\"n\">linear_algebra.orientation</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ordered_comm_semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">same_ray₀</span> <span class=\"o\">(</span><span class=\"n\">v₁</span> <span class=\"n\">v₂</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">r₁</span> <span class=\"n\">r₂</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">),</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"o\">(</span><span class=\"n\">r₁</span><span class=\"o\">,</span> <span class=\"n\">r₂</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"n\">r₁</span> <span class=\"bp\">•</span> <span class=\"n\">v₁</span> <span class=\"bp\">=</span> <span class=\"n\">r₂</span> <span class=\"bp\">•</span> <span class=\"n\">v₂</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span><span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">same_ray.same_ray₀</span> <span class=\"o\">{</span><span class=\"n\">v₁</span> <span class=\"n\">v₂</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">same_ray</span> <span class=\"n\">R</span> <span class=\"n\">v₁</span> <span class=\"n\">v₂</span> <span class=\"bp\">→</span> <span class=\"n\">same_ray₀</span> <span class=\"n\">R</span> <span class=\"n\">v₁</span> <span class=\"n\">v₂</span> <span class=\"o\">:=</span>\n<span class=\"n\">Exists₂.imp</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">r₁</span> <span class=\"n\">r₂</span> <span class=\"o\">⟨</span><span class=\"n\">hr₁</span><span class=\"o\">,</span> <span class=\"n\">hr₂</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">⟩,</span> <span class=\"o\">⟨</span><span class=\"n\">prod.mk_lt_mk.mpr</span> <span class=\"bp\">$</span> <span class=\"n\">or.inl</span> <span class=\"o\">⟨</span><span class=\"n\">hr₁</span><span class=\"o\">,</span> <span class=\"n\">hr₂.le</span><span class=\"o\">⟩,</span> <span class=\"n\">h</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 272945869,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645621872
    },
    {
        "content": "<p>Maybe we should just redefine <code>same_ray</code> to mean that though?</p>",
        "id": 272946588,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645622256
    },
    {
        "content": "<p>I think all the uses of <code>same_ray</code> are on <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ray_vector\">docs#ray_vector</a> anyway which is never zero, so the difference doesn't matter</p>",
        "id": 272946698,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645622322
    }
]