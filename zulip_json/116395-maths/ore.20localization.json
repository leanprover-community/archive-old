[
    {
        "content": "<p>I've been <a href=\"https://git.scc.kit.edu/xs9495/localisations\">formalizing</a> the notion of <a href=\"https://ncatlab.org/nlab/show/Ore+set\">ore sets</a> and <a href=\"https://ncatlab.org/nlab/show/Ore+localization\">ore localizations</a> together with some other people and I was wondering if that should find a place in mathlib eventually. The formalization works on right ore sets instead of left ore sets. It's a generalization of <code>group_theory.monoid_localization</code> but I'm not sure if it should replace it since it's a bit more \"out there\" and there are other generalizations as well...</p>",
        "id": 266166286,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1640605130
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> was also working on this about a year ago, I think.</p>",
        "id": 266167974,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1640607008
    },
    {
        "content": "<p>No idea if his attempts were on some branch, or on a separate project.</p>",
        "id": 266167991,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1640607028
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/rwbarton-ore\">branch#rwbarton-ore</a></p>",
        "id": 266168047,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640607113
    },
    {
        "content": "<p>Oh, I probably should have asked beforehand ^^</p>",
        "id": 266168211,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1640607265
    },
    {
        "content": "<p>Nevertheless, the question still stands, should I make it a PR, maybe taking into account some of the things <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> did differently? I see that he defined the ore property as data instead of a proposition, which we chose not to, in order to make it a well-behaved type class</p>",
        "id": 266174750,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1640613907
    },
    {
        "content": "<p>What do you mean by \"in order to make it a well-behaved type class\"?</p>",
        "id": 266175244,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1640614352
    },
    {
        "content": "<p>The choice of witnesses in the ore condition is very much non-unique and sometimes non-canonical, but it also doesn't seem interesting to study different ore conditions on the same submonoid</p>",
        "id": 266175840,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1640614667
    },
    {
        "content": "<p>The PR for our implementation of ore localization is <a href=\"https://github.com/leanprover-community/mathlib/pull/14348\">up</a>, comments welcome, especially on the notations</p>",
        "id": 283719087,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1653384741
    },
    {
        "content": "<p>... and on whether to split the files further vs merging them</p>",
        "id": 283719277,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1653384862
    },
    {
        "content": "<p>Anyone want to review this? <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> ? <span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> ?</p>",
        "id": 288403003,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1656937507
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span></p>",
        "id": 288403182,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1656937603
    },
    {
        "content": "<p>I added a few comments, but I'm not familiar with the mathematics</p>",
        "id": 288406178,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1656939266
    },
    {
        "content": "<p>Thanks a lot!</p>",
        "id": 288406447,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1656939429
    },
    {
        "content": "<p>My main question is to what extent the choice of num and denom are unique</p>",
        "id": 288407812,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1656940153
    },
    {
        "content": "<p>Can you give a situation where you don't just want <code>num = prod.fst</code>, <code>denom = prod.snd</code>?</p>",
        "id": 288408125,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1656940336
    },
    {
        "content": "<p>They are not</p>",
        "id": 288415279,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1656944595
    },
    {
        "content": "<p>But we do show that multiplication and addition are independent of the choice of num and denom</p>",
        "id": 288415305,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1656944613
    },
    {
        "content": "<p>Is there a useful quotient under which they are unique?</p>",
        "id": 288428927,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1656952745
    },
    {
        "content": "<p>I don't think so, if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span> are num and denom, so are <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">n s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">s</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">d s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">s</span></span></span></span></p>",
        "id": 288443975,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1656963489
    }
]