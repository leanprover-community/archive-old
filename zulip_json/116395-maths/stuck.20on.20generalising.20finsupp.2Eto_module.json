[
    {
        "content": "<p>I really don't see why I'm getting stuck here. See the two comment lines just after the first <code>sorry</code>.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"c\">/-</span><span class=\"cm\"> should this be stronger? [module γ β] → module γ (α →₀ β) -/</span>   <span class=\"c1\">-- yes!</span>\n<span class=\"n\">def</span> <span class=\"n\">to_module</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">γ</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">β</span> <span class=\"n\">γ</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">module</span> <span class=\"n\">β</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"bp\">→</span><span class=\"err\">₀</span> <span class=\"n\">γ</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">smul</span>     <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n                <span class=\"n\">intros</span> <span class=\"n\">r</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n                <span class=\"n\">apply</span> <span class=\"n\">f</span><span class=\"bp\">.</span><span class=\"n\">map_range</span> <span class=\"o\">((</span><span class=\"err\">•</span><span class=\"o\">)</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n                <span class=\"n\">simp</span>\n              <span class=\"kn\">end</span><span class=\"o\">,</span> <span class=\"c1\">-- (•)</span>\n  <span class=\"n\">smul_add</span> <span class=\"o\">:=</span> <span class=\"k\">begin</span>\n                <span class=\"n\">intros</span> <span class=\"n\">r</span> <span class=\"n\">f</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n                <span class=\"n\">apply</span> <span class=\"n\">finsupp</span><span class=\"bp\">.</span><span class=\"n\">ext</span><span class=\"o\">,</span>\n                <span class=\"n\">intro</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n                <span class=\"n\">simp</span><span class=\"o\">,</span>\n                <span class=\"n\">rw</span> <span class=\"n\">smul_add</span><span class=\"o\">,</span>\n                <span class=\"n\">sorry</span>\n  <span class=\"kn\">end</span><span class=\"o\">,</span> <span class=\"c1\">-- assume a x y, finsupp.ext $ by simp [mul_add], -- original</span>\n  <span class=\"c1\">-- assume a x y, finsupp.ext $ by simp [map_range,smul_add], -- why doesn&#39;t this one work? &lt;=====</span>\n  <span class=\"n\">add_smul</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span><span class=\"o\">,</span> <span class=\"c1\">--assume a x y, finsupp.ext $ by simp [add_mul],</span>\n  <span class=\"n\">one_smul</span> <span class=\"o\">:=</span> <span class=\"k\">assume</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">finsupp</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"k\">by</span> <span class=\"n\">simp</span><span class=\"o\">,</span>\n  <span class=\"n\">mul_smul</span> <span class=\"o\">:=</span> <span class=\"k\">assume</span> <span class=\"n\">r</span> <span class=\"n\">s</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">finsupp</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"err\">$</span> <span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">mul_smul</span><span class=\"o\">],</span>\n  <span class=\"bp\">..</span> <span class=\"n\">finsupp</span><span class=\"bp\">.</span><span class=\"n\">add_comm_group</span> <span class=\"o\">}</span>\n</pre></div>",
        "id": 127201824,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1527507330
    },
    {
        "content": "<p>Never mind. I just realised that <code>is_linear_map</code> is not a class. Not going down the rabbit hole of modules.</p>",
        "id": 127202256,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1527508022
    },
    {
        "content": "<p><code>linear_map</code> is</p>",
        "id": 127202261,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1527508034
    },
    {
        "content": "<p>And where does that beast live?</p>",
        "id": 127202328,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1527508180
    },
    {
        "content": "<p>not in algebra/module</p>",
        "id": 127202329,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1527508187
    },
    {
        "content": "<p>Ok, I found it... thanks!</p>",
        "id": 127202473,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1527508356
    }
]