[
    {
        "content": "<p>We don't seem to have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">antimono</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"bp\">∀</span> <span class=\"o\">⦃</span><span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">⦄,</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>Is this by design, i.e. if someone wants to use this idea then they are either supposed to spell it out (there are over 100 occurrences of <code>antimono</code> in mathlib) or use some <code>monotone</code> together with <code>order_dual</code> -- or is it just because nobody ever defined it and made a basic API for it? In <code>order.basic</code> we have <a href=\"https://github.com/leanprover-community/mathlib/blob/9fc45d81e8d6eb7968e0c1c7aa3938044e4af61b/src/order/basic.lean#L114-L155\">a little API for <code>monotone</code></a> -- could one imagine a little API for <code>antimono</code> just after?</p>\n<p>The reason I ask in that it comes up in <a href=\"https://github.com/leanprover-community/mathlib/issues/8853\">#8853</a>: Ines would like to use</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">order.basic</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">antitone_nat_of_succ_le</span> <span class=\"o\">{</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">preorder</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">L</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∀</span> <span class=\"o\">⦃</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">⦄,</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">b</span> <span class=\"bp\">≤</span> <span class=\"n\">f</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"bp\">@</span><span class=\"n\">monotone_nat_of_le_succ</span> <span class=\"o\">(</span><span class=\"n\">order_dual</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">f</span> <span class=\"n\">hf</span>\n</code></pre></div>\n<p>but I'm wondering whether the conclusion should just be <code>antimono f</code> (the corresponding conclusion for <code>monotone_nat_of_le_succ</code> is <code>monotone f</code>).</p>",
        "id": 252101096,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630875091
    },
    {
        "content": "<p>Isn't <code>contravariant</code> to your <code>antitone</code> what <code>covariant</code> is to <code>monotone</code>?</p>",
        "id": 252101196,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1630875195
    },
    {
        "content": "<p>Indeed, and the issue is that <code>covariant</code> is \"the default thing\" (e.g. our functors are covariant) and our definition of contravariant functors inserts an op in a random side of the equation rather than making a new definition.</p>",
        "id": 252102072,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630876149
    },
    {
        "content": "<p>Yeah, supposedly you can make the above using <code>monotone</code> and that is arguably the right way to do it to avoid code duplication. But maybe defining <code>antimono</code> is worth it?</p>",
        "id": 252102176,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1630876255
    },
    {
        "content": "<p>(Just to emphasize Yaël's subtle correction: <code>antitone</code> is an actual word and <code>antimono</code> is made-up.)</p>",
        "id": 252116942,
        "sender_full_name": "François G. Dorais",
        "timestamp": 1630893677
    },
    {
        "content": "<p>What do people think of defining <code>antitone</code>? It'll probably lead to some code duplication but it would be nice to have for dot notation and stuff. It came up for me again because I need <code>map_cInf_of_continuous_at_of_antitone</code> (we currently only have <a href=\"https://leanprover-community.github.io/mathlib_docs/topology/algebra/ordered/basic.html#map_cInf_of_continuous_at_of_monotone\"><code>map_cInf_of_continuous_at_of_monotone</code></a>.</p>",
        "id": 252580829,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1631171465
    },
    {
        "content": "<p>We would then probably also define <code>strict_anti</code>, just as we have <code>strict_mono</code>.</p>",
        "id": 252581141,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1631171652
    },
    {
        "content": "<p>I'd prefer <code>antimono</code> over <code>antitone</code>, but otherwise I'm all for it.</p>",
        "id": 252583425,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1631173002
    },
    {
        "content": "<p>Note François' comment above though</p>",
        "id": 252592021,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1631177488
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/9119\">#9119</a>, for anyone interested</p>",
        "id": 252658828,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1631206555
    },
    {
        "content": "<p>ok for <code>antitone</code>, if that's a real word, but in this case it would be worth renaming the 106 occurences of <code>antimono</code> in mathlib to <code>antitone</code> :-)</p>",
        "id": 252663702,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1631208487
    },
    {
        "content": "<p>Maybe we could have a poll to choose between <code>antitone</code> and <code>antimono</code>?</p>",
        "id": 252663780,
        "sender_full_name": "Frédéric Dupuis",
        "timestamp": 1631208526
    },
    {
        "content": "<p>Sure</p>",
        "id": 252667866,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1631210275
    },
    {
        "content": "<p>/poll How should we name the dual notion of <code>monotone</code>?<br>\nantitone<br>\nantimono</p>",
        "id": 252668260,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1631210410
    },
    {
        "content": "<p>There was some (long) related discussion at <a href=\"#narrow/stream/113489-new-members/topic/mathlib.20monotone.20definition/near/203536746\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/mathlib.20monotone.20definition/near/203536746</a></p>",
        "id": 252675902,
        "sender_full_name": "Reid Barton",
        "timestamp": 1631213362
    },
    {
        "content": "<p>I used to be quite used to <strong>monotone</strong> meaning <em>either</em> <strong>increasing</strong> <em>or</em> <strong>decreasing</strong>. The terminology of increasing and decreasing (maybe with naming conventions <code>incr</code> and <code>decr</code>) would be intuitive and unambiguous (unless I overlook something), but it would be a massive change <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span>.</p>\n<p>I'm not advocating for the massive change <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span>. Both <strong>antitone</strong> and <strong>antimono</strong> seem anyway rather good (even the latter, despite not being a \"real word\", appears very logically cooked up given that <code>mono</code> is the established abbreviation for monotone).</p>",
        "id": 252685240,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1631217369
    },
    {
        "content": "<p>Regarding the actual issue of introducing the property in the first place, I do remember occasionally struggling with using just <code>monotone</code> in combination with <code>order_dual</code> (and worrying about when that type synonym automatically gets all the structure needed). I think this <code>antismth</code> might help, but obviously don't have an informed opinion.</p>",
        "id": 252686237,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1631217832
    },
    {
        "content": "<p>Wikipedia uses <code>antitone</code> in <a href=\"https://en.wikipedia.org/wiki/Monotonic_function\">its article on monotonic functions</a></p>",
        "id": 252695676,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1631221524
    },
    {
        "content": "<blockquote>\n<p>The terminology of increasing and decreasing (maybe with naming conventions incr and decr) would be intuitive and unambiguous (unless I overlook something), but it would be a massive change <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span>.</p>\n</blockquote>\n<p>Unfortunately, as mentioned in the previous thread, \"increasing\" is <em>not</em> unambiguous, because it may or may not mean \"strictly increasing\"</p>",
        "id": 252695904,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1631221609
    },
    {
        "content": "<p>Indeed, the \"strictness\" remains equally ambiguous with both \"increasing\"/\"decreasing\" or \"monotone\"/\"antixxxx\". I only meant unambiguity of the directions (reversal or not of order relation), should have been clearer about that. Anyways, I think there are good options already and among them I couldn't decide how to vote.</p>",
        "id": 252696706,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1631221931
    }
]