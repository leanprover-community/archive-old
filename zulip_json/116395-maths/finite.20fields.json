[
    {
        "content": "<p>I'm going to do some works concerning finite fields. (number of elements, existence and uniqueness)<br>\nCan anyone tell me if the following things exist for lean in mathlib or somewhere else and where I can find them?<br>\nIntegers modulo a prime, prime subfields, ring isomorphisms?</p>",
        "id": 154730425,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547046591
    },
    {
        "content": "<p>Integers mod a prime are at least instantiated as a field: <a href=\"https://github.com/leanprover/mathlib/blob/master/data/zmod/basic.lean#L313\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/data/zmod/basic.lean#L313\">https://github.com/leanprover/mathlib/blob/master/data/zmod/basic.lean#L313</a></p>",
        "id": 154730801,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1547046868
    },
    {
        "content": "<p>Others will probably know more about your other questions. (<span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> ?)</p>",
        "id": 154730956,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1547046986
    },
    {
        "content": "<p>ik ben aan het bezoeken in de stedelijk museum :p</p>",
        "id": 154731006,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547047030
    },
    {
        "content": "<p>Integers modulo p is a nice start</p>",
        "id": 154731019,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547047039
    },
    {
        "content": "<p>I'm glad someone is taking my suggestion to relax this afternoon!</p>",
        "id": 154731107,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1547047084
    },
    {
        "content": "<p>Do isomorphisms exist in any context? I can only find them for types</p>",
        "id": 154731112,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547047086
    },
    {
        "content": "<p>use hott!</p>",
        "id": 154731465,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1547047334
    },
    {
        "content": "<p>what do you mean by use hott?</p>",
        "id": 154731624,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547047465
    },
    {
        "content": "<p>he's just trolling. He says \"use something other than Lean\"</p>",
        "id": 154732681,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1547048250
    },
    {
        "content": "<p>But I guess the answer to your question is that in general most objects don't have isomorphism between those objects already defined in Lean.</p>",
        "id": 154732787,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1547048317
    },
    {
        "content": "<p>You are more likely to find morphisms though, so you can define isomorphisms without too much pain. I guess morphisms of rings will be there somewhere.</p>",
        "id": 154732821,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1547048351
    },
    {
        "content": "<p>Some students at Imperial have done some work on splitting fields, but I don't know if it's public. What is your proposal for defining a finite field? Usually the definition I give is \"splitting field of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi>X</mi><msup><mi>p</mi><mi>n</mi></msup></msup><mo>−</mo><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X^{p^n}-X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.87998em;\"></span><span class=\"strut bottom\" style=\"height:0.96331em;vertical-align:-0.08333em;\"></span><span class=\"base\"><span class=\"mord\"><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.87998em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathit mtight\">p</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385428571428572em;\"><span style=\"top:-2.931em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathit mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mbin\">−</span><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span></span></span></span> over <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"double-struck\">F</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{F}_p</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68889em;\"></span><span class=\"strut bottom\" style=\"height:0.974998em;vertical-align:-0.286108em;\"></span><span class=\"base\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathit mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"></span></span></span></span></span></span></span></span>, but I don't think Lean has splitting fields, at least not publically.</p>",
        "id": 154732935,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1547048427
    },
    {
        "content": "<p>I'm going to use the definition as a splitting field, by using the splitting field stuff currently in the community repo</p>",
        "id": 154733013,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547048506
    },
    {
        "content": "<p>I will also use the material there concerning algebras as it will give me the tools to realize any finite field as a vector space over <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi mathvariant=\"double-struck\">F</mi><mi>p</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mathbb{F}_p</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68889em;\"></span><span class=\"strut bottom\" style=\"height:0.974998em;vertical-align:-0.286108em;\"></span><span class=\"base\"><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">F</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathit mtight\">p</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"></span></span></span></span></span></span></span></span></p>",
        "id": 154733317,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547048717
    },
    {
        "content": "<p>How do you put latex in these messages?</p>",
        "id": 154733332,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547048729
    },
    {
        "content": "<p><code>$$\\mathbb{F}_p$$</code></p>",
        "id": 154733420,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1547048767
    },
    {
        "content": "<p>Doesn't always work, for example \\sqrt doesn't seem to work</p>",
        "id": 154733467,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1547048800
    },
    {
        "content": "<p>So I have been doing some work on the finite fields with the help of <span class=\"user-mention\" data-user-id=\"198529\">@Casper Putz</span>  for the past couple of days.<br>\nWe are now close to proving that every finite field has p^n elements with p a prime number.<br>\nMost effort was spent proving some simple results which we couldn't find anywhere,<br>\nsuch as the specification of the prime ideals and maximal ideals of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.68889em;\"></span><span class=\"strut bottom\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"base\"><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span></span></span></span> and proving that the zero ideal in a field is in fact maximal.<br>\nWould people be interested in seeing these results added to mathlib separately? They seem quite useful</p>",
        "id": 154923261,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547219673
    },
    {
        "content": "<p>Yes</p>",
        "id": 154924258,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1547220577
    },
    {
        "content": "<p>Any suggestions of where to put that stuff?</p>",
        "id": 154924456,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547220749
    },
    {
        "content": "<p>Do you guys have push access to <a href=\"https://github.com/leanprover-community/mathlib/\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/\">https://github.com/leanprover-community/mathlib/</a> ?</p>",
        "id": 154924479,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547220788
    },
    {
        "content": "<p>For example should the explicit specification of the prime ideals of the integers be put with ideals, with the integers or a separate file entirely</p>",
        "id": 154924488,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547220799
    },
    {
        "content": "<p>If so, put it on a branch <code>finite_fields</code> in that repo.</p>",
        "id": 154924492,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547220809
    },
    {
        "content": "<p>Aaah, I'm always bad at deciding what should go in which file.</p>",
        "id": 154924550,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547220845
    },
    {
        "content": "<blockquote>\n<p>Do you guys have push access to <a href=\"https://github.com/leanprover-community/mathlib/\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/\">https://github.com/leanprover-community/mathlib/</a> ?</p>\n</blockquote>\n<p>We don't have access to the leanprover-community yet. Would be nice to have</p>",
        "id": 154924557,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547220858
    },
    {
        "content": "<p>We're still working on it on my github, but after some cleanup that would probably be the best place to put it</p>",
        "id": 154924578,
        "sender_full_name": "Joey van Langen",
        "timestamp": 1547220902
    },
    {
        "content": "<p>It basically depends on imports. Probably ideals imports everything you need, so it should probably go there.</p>",
        "id": 154924590,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1547220909
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Could you please give <span class=\"user-mention\" data-user-id=\"143810\">@Joey van Langen</span> push access on community mathlib? He's a PhD student of Sander Dahmen.</p>",
        "id": 154926308,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1547222425
    }
]