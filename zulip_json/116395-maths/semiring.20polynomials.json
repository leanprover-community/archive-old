[
    {
        "content": "<p>Do we want polynomials over a semiring? If we do, then it's really necessary to have a way of expressing <code>zero_ne_one</code> as a class for semirings. I'm trying to prove some lemmas now for semirings, not because I care about semirings, but they are true in a semiring so I may as well prove it. It's very hard without <code>degree_X</code>.</p>",
        "id": 157995396,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1549840360
    },
    {
        "content": "<p>I propose </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">class</span> <span class=\"n\">zero_ne_one_class&#39;</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">has_zero</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_one</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">zero_ne_one</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 157997933,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1549844757
    },
    {
        "content": "<p>Part of me wants to say \"I see <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mrow><mi mathvariant=\"double-struck\">N</mi></mrow><mo>[</mo><mi>X</mi><mo>]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{N}[X]</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base\"><span class=\"mord\"><span class=\"mord mathbb\">N</span></span><span class=\"mopen\">[</span><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">]</span></span></span></span> occasionally\" and part of me wants to say \"I have been a mathematician for 30 years and had never once heard of the concept of a semiring before I came here\". However the same applies to uniform spaces.</p>",
        "id": 158012653,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549870909
    },
    {
        "content": "<p>I think toric geometers would like to see them. Is that right?</p>",
        "id": 158013000,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1549871320
    },
    {
        "content": "<p>Maybe that's exactly where I saw N[X]</p>",
        "id": 158013094,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549871433
    },
    {
        "content": "<p>I have a totally ordered abelian group under <code>*</code> and I've been adding a bottom element 0 to it. That's another example of a structure with 0 and a 1, although in that case 0 ne 1 is guaranteed. I can't offhand think of anything else with a 0 and a 1 that isn't a semiring</p>",
        "id": 158013173,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549871560
    },
    {
        "content": "<p>I'm not sure what the issue is. Is <code>zero_ne_one_class</code> only defined for <code>ring</code>s or something?</p>",
        "id": 158013935,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549872400
    },
    {
        "content": "<p>The proposal seems very reasonable (provided it is put in <code>Prop</code> instead of <code>Type</code>)</p>",
        "id": 158013956,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549872445
    },
    {
        "content": "<p>I had guessed that was the issue, from the context, but I might be wrong</p>",
        "id": 158013968,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549872482
    },
    {
        "content": "<p>Do we have the submodules <code>degree t &lt;= n</code>? Last time we talked about this it seemed like this was the way to go - it's much nicer constructively and you don't have to do all this cases stuff</p>",
        "id": 158014060,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549872594
    },
    {
        "content": "<p>+1 for those submodules -- they can be used to give a really nice proof of Hilbert Basis. I assume this is the proof Kenny used.</p>",
        "id": 158014470,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549873091
    },
    {
        "content": "<p>You avoid having to assume that the ring is not the zero ring.</p>",
        "id": 158014477,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549873105
    },
    {
        "content": "<p>Multiplication by X is a map from deg&lt;=n to deg&lt;=n+1 whether or not the degree of X is 1</p>",
        "id": 158014485,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549873127
    },
    {
        "content": "<p>In stable homotopy theory we definitely want to deal with semirings, such as the Burnside semiring or the representation semiring of a finite group.</p>",
        "id": 158018361,
        "sender_full_name": "Neil Strickland",
        "timestamp": 1549878269
    },
    {
        "content": "<p>We have a student here at ANU who does Galois theory for semirings...</p>",
        "id": 158065019,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1549918898
    },
    {
        "content": "<p>And studying fusion categories it's nice to think of the Grothendieck ring as a (based) semiring.</p>",
        "id": 158065104,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1549918935
    },
    {
        "content": "<blockquote>\n<p>Do we want polynomials over a semiring? If we do, then it's really necessary to have a way of expressing <code>zero_ne_one</code> as a class for semirings. I'm trying to prove some lemmas now for semirings, not because I care about semirings, but they are true in a semiring so I may as well prove it. It's very hard without <code>degree_X</code>.</p>\n</blockquote>\n<p>What makes this different for rings and semirings?</p>",
        "id": 158082286,
        "sender_full_name": "Reid Barton",
        "timestamp": 1549934496
    },
    {
        "content": "<p>I see <code>zero_ne_one_class</code> extends <code>has_zero</code> and <code>has_one</code>--I don't understand how that doesn't make nonzero rings really awkward to work with</p>",
        "id": 158082376,
        "sender_full_name": "Reid Barton",
        "timestamp": 1549934585
    },
    {
        "content": "<p>or does <code>class nonzero_comm_ring (α : Type*) extends zero_ne_one_class α, comm_ring α</code> merge the common fields?</p>",
        "id": 158082493,
        "sender_full_name": "Reid Barton",
        "timestamp": 1549934748
    },
    {
        "content": "<p><code>extends</code> does merge the common fields.</p>",
        "id": 158083748,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1549936296
    },
    {
        "content": "<p>as long as you have some old structure command or whatnot</p>",
        "id": 158084243,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549936998
    },
    {
        "content": "<p>Then we could also make a parallel <code>nonzero_comm_semiring</code> right?</p>",
        "id": 158088731,
        "sender_full_name": "Reid Barton",
        "timestamp": 1549943242
    },
    {
        "content": "<p>Yes,but maybe we want an ordered nonzero semiring or something like that. There's too many combinations.</p>",
        "id": 158097027,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1549954973
    },
    {
        "content": "<p>Will Lean 4 abandon the old structure command so I can finally understand what one can and can't do with structures and then be able to rant about how they're not fit for purpose when doing mathematics?</p>",
        "id": 158098071,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549956600
    }
]