[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"439483\">@Andrew Yang</span> why does one need <code>C</code> and <code>D</code> to be small categories in this line?<br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/9c39019f05579b5d0792661515c1d91636a180e4/src/category_theory/sites/dense_subsite.lean#L458\">https://github.com/leanprover-community/mathlib/blob/9c39019f05579b5d0792661515c1d91636a180e4/src/category_theory/sites/dense_subsite.lean#L458</a></p>",
        "id": 268876920,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642787015
    },
    {
        "content": "<p>Is it because you use Kan extensions somewhere?</p>",
        "id": 268877257,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642787156
    },
    {
        "content": "<p>I think so. The construction of the glued sheaf is by definition the right kan extension of the original sheaf along the inclusion functor.</p>",
        "id": 268877691,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1642787345
    },
    {
        "content": "<p>Right, that's what I figured.</p>",
        "id": 268877718,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642787360
    },
    {
        "content": "<p>It's causing me some issues unfortunately. Can we geeneralize the universes for Kan extensions using the <code>max</code> trick?</p>",
        "id": 268877897,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642787437
    },
    {
        "content": "<p>How general do you need it to be? I think the smallness condition is quite essential here.</p>",
        "id": 268878583,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1642787740
    },
    {
        "content": "<p>Well, if <code>A : Type w</code> and <code>category.{max u v} A</code>, then we could presumably take <code>C : Type u</code> with <code>category.{v} C</code> and similarly for <code>D</code>.</p>",
        "id": 268878789,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642787820
    },
    {
        "content": "<p>Or maybe <code>C : Type (max u v)</code>.</p>",
        "id": 268878830,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642787836
    },
    {
        "content": "<p>I wish we had a way of using inequality on universe parameters...</p>",
        "id": 268878922,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642787867
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/116395-maths/topic/Universe.20restriction.20for.20sheaves/near/268878922\">said</a>:</p>\n<blockquote>\n<p>I wish we had a way of using inequality on universe parameters...</p>\n</blockquote>\n<p>We all wish...</p>",
        "id": 268878998,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1642787885
    },
    {
        "content": "<p>Feature request for Lean 5</p>",
        "id": 268879012,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642787889
    },
    {
        "content": "<p>Or lean 37?</p>",
        "id": 268879041,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642787906
    },
    {
        "content": "<p>I never wish it, I just go back to using Type and remember how in the old days I used to believe in ZFC</p>",
        "id": 268879045,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642787910
    },
    {
        "content": "<p>I had an interesting conversation with Jeremy about that approach yesterday; I said \"obviously universes are dangerous because all mathematicians are happy with ZFC but the moment you start using universes you're assuming the consistency of a strictly stronger theory, which is an unnecessary risk\". His reply, which caught me completely off guard, was \"yes -- you're assuming ZFC is consistent -- and if you didn't believe that then what the heck are you doing working in ZFC in the first place!\"</p>",
        "id": 268879302,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642788012
    },
    {
        "content": "<p>I mean there is no reason why something can't hold for non-small sites, because you can always promote a category to a small category over <code>max v u</code>. You just need the morphisms of the target category to be at the same level, and things should work. I could try to trek my way through with <code>ulift</code>s and such, but it would be nicer if we could just arrange the universes to work.</p>",
        "id": 268879450,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642788057
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/11588\">#11588</a></p>",
        "id": 268880647,
        "sender_full_name": "Andrew Yang",
        "timestamp": 1642788608
    },
    {
        "content": "<p>Awesome! Thank you!</p>",
        "id": 268880758,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642788671
    },
    {
        "content": "<p>I must say I'm very happy that generalizing the universes for Kan extensions was so easy once you have the right instances :)</p>",
        "id": 268881330,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1642788855
    }
]