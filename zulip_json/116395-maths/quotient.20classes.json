[
    {
        "content": "<p>Can I suggest the creation of something a bit like this. <code>quotient_map</code> can be extended with <code>group_hom</code>, <code>linear_map</code> <code>localisation_map</code>, etc., and used to do definitions on quotient objects that are not defined using the <code>quot</code> constant. I'm considering a major refactoring using something like this.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">logic</span><span class=\"bp\">.</span><span class=\"n\">function</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">quot</span>\n<span class=\"kn\">open</span> <span class=\"n\">function</span>\n\n<span class=\"kn\">structure</span> <span class=\"n\">quotient_map</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">to_fun</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">inv_fun</span> <span class=\"o\">:</span> <span class=\"n\">trunc</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">β</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">//</span> <span class=\"n\">right_inverse</span> <span class=\"n\">f</span> <span class=\"n\">to_fun</span><span class=\"o\">})</span>\n</pre></div>",
        "id": 157826992,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1549587310
    },
    {
        "content": "<p>I don't think you can prove that quotienting by a setoid is a <code>quotient_map</code></p>",
        "id": 157827026,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549587358
    },
    {
        "content": "<p>I think this is not the right assumption. The inverse map should be <code>B -&gt; quotient (to_fun ⁻¹'o eq)</code></p>",
        "id": 157827450,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549587805
    },
    {
        "content": "<p>and it should be an equiv when paired with the lift of <code>to_fun</code></p>",
        "id": 157827459,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549587833
    },
    {
        "content": "<p>(this might be a use for <code>is_equiv</code>, if that was ever added for the category stuff)</p>",
        "id": 157827536,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549587900
    },
    {
        "content": "<p><code>quot</code> is important because it is the only thing that can reach other universes</p>",
        "id": 157827752,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1549588148
    },
    {
        "content": "<p>I think you actually mean <code>set.preimage f ∘ eq ∘ f</code>, though I've no idea why you'd write it like this.</p>",
        "id": 157857348,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1549630826
    },
    {
        "content": "<p>Or even better <code>(∘ f) ∘ eq ∘ f</code></p>",
        "id": 157857597,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1549631104
    },
    {
        "content": "<p>for some interpretations of \"better\", at least :-)</p>",
        "id": 157860695,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1549634445
    },
    {
        "content": "<p>I admit what I wrote is not quite type correct, but I do mean what I wrote. (That notation is <code>order.preimage</code>.) We should have a setoid construction for this case since it's a very common situation (it is also universal, any equivalence relation can be written as f x = f y for an appropriate f), but there is already an easy proof using <code>preimage.equivalence</code> and <code>eq.equivalence</code>.</p>",
        "id": 157894587,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1549661217
    }
]