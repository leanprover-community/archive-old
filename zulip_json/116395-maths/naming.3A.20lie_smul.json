[
    {
        "content": "<p>Currently, in mathlib, we have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">lie_smul</span>  <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">L</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">lie_ring</span> <span class=\"n\">L</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">lie_algebra</span> <span class=\"n\">R</span> <span class=\"n\">L</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">L</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">⁅</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">t</span> <span class=\"bp\">•</span> <span class=\"n\">y</span><span class=\"bp\">⁆</span> <span class=\"bp\">=</span> <span class=\"n\">t</span> <span class=\"bp\">•</span> <span class=\"bp\">⁅</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"bp\">⁆</span> <span class=\"o\">:=</span>\n <span class=\"n\">lie_algebra.lie_smul</span> <span class=\"n\">t</span> <span class=\"n\">x</span> <span class=\"n\">y</span>\n</code></pre></div>\n\n<p>However, if we want to define a <code>lie_action</code> (which will be part of <code>lie_module</code>), then this is one of the axioms<br>\n<a href=\"user_uploads/3121/EJyObeCf2sCwWg3jtlDoJSxi/image.png\">image.png</a><br>\nwhich I assume would be called <code>lie_smul</code>.</p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/3121/EJyObeCf2sCwWg3jtlDoJSxi/image.png\" title=\"image.png\"><img src=\"user_uploads/3121/EJyObeCf2sCwWg3jtlDoJSxi/image.png\"></a></div><p>Does anyone have a good suggestion for fixing this naming conflict?<br>\nThe best I have come up with is a namespaced <code>lie_action.lie_smul</code>. But that's quite a mouthful.</p>",
        "id": 212905909,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602319509
    },
    {
        "content": "<p>Should the existing one be lie_smul_right, to distinguish from the case with <code>t . x, y</code>?</p>",
        "id": 212906127,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1602319853
    },
    {
        "content": "<p>No, the latter would be <code>smul_lie</code>...</p>",
        "id": 212909240,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602325090
    },
    {
        "content": "<p>... in the current naming scheme.</p>",
        "id": 212909244,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602325107
    },
    {
        "content": "<p>But I guess we need a more sophisticated naming scheme to distinguish all the possible combinations</p>",
        "id": 212909247,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602325129
    },
    {
        "content": "<p>I thought the naming was assuming all functions were prefix notation</p>",
        "id": 212909561,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1602325686
    },
    {
        "content": "<p>Ah I guess <code>add_mul</code> vs <code>mul_add</code> is the counterexample I need</p>",
        "id": 212909583,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1602325757
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> the second one is called <code>lie_smul'</code>, the third one <code>lie_smul''</code>, etc.</p>",
        "id": 212909804,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1602326147
    },
    {
        "content": "<p>(/s)</p>",
        "id": 212910169,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1602326723
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> am I confused or do we not already have a version of this <a href=\"https://github.com/leanprover-community/mathlib/blob/c8738cb621626d1c79fd1d79e9a3acf4629c486e/src/algebra/lie/basic.lean#L537\">here</a> ?</p>",
        "id": 212928756,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1602354553
    },
    {
        "content": "<p>(called <code>lie_act</code>)</p>",
        "id": 212928758,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1602354559
    },
    {
        "content": "<p>(As it happens I have plans to refactor <code>lie_module</code> in my non-existent copious free time so that the action is an instance of <code>has_scalar</code>.)</p>",
        "id": 212928890,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1602354786
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"240862\">@Oliver Nash</span> Oooh cool! I didn't realise we already had this!</p>",
        "id": 212933613,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602362358
    },
    {
        "content": "<p>Thanks for the pointer</p>",
        "id": 212933615,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602362371
    },
    {
        "content": "<p>Let me know if there’s anything I can do to help. Perhaps I should just bump the priority of that refactor I mentioned?</p>",
        "id": 212934887,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1602364559
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"240862\">@Oliver Nash</span> If such a priority bumping feature is available... I would happily see the results <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 213000674,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1602482671
    }
]