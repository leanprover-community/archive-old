[
    {
        "content": "<p>Can somebody help me understand <a href=\"https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game/?world=5&amp;level=8\">function wolrd, level 8 of the natural numbers game</a>? I know relevant set theory but I'm clueless in HoTT. If you define functions as relations (sets of ordered pairs), for h to be a function, Q has to be the empty set too, see <a href=\"https://math.stackexchange.com/questions/789123/why-is-there-no-function-with-a-nonempty-domain-and-an-empty-range\">mathoverflow</a>. Apply the same argument to <code>f: P -&gt; Q</code>, we see <code>P</code> also is necessarily an empty set. Thus the construction is <em>impossible</em> - you can't construct an instance of (P -&gt; Q) -&gt; ((P -&gt; empty) -&gt; (Q -&gt; empty) ) for <em>arbitrary</em> sets, <code>P</code> and <code>Q</code> both have to be the empty set</p>",
        "id": 270812565,
        "sender_full_name": "Matt Yan",
        "timestamp": 1644047336
    },
    {
        "content": "<p>You wrote the exercise wrong. It's <code>(P → Q) → ((Q → empty) → (P → empty))</code></p>",
        "id": 270812635,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644047450
    },
    {
        "content": "<p>thanks for the correction</p>",
        "id": 270812646,
        "sender_full_name": "Matt Yan",
        "timestamp": 1644047475
    },
    {
        "content": "<p>So you're asked to prove something hard, namely that <code>P</code> is the empty set. But also you have hard (aka strong hypotheses), so maybe you can prove it after all?</p>",
        "id": 270812653,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1644047508
    },
    {
        "content": "<p>I don't understand, am I asked to construct an instance of a certain type for arbitrary P and Q? the type being <code>(P → Q) → ((Q → empty) → (P → empty))</code></p>",
        "id": 270812776,
        "sender_full_name": "Matt Yan",
        "timestamp": 1644047689
    },
    {
        "content": "<p>I'm also clueless in HoTT but I wrote the natural number game. Your claims are false. If P is nonempty then P -&gt; empty <em>exists</em>, it's just empty. I claim that you can construct the instance for all P and Q.</p>",
        "id": 270812779,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644047698
    },
    {
        "content": "<p>Mathematicians write Hom(X,Y) for the type that Lean refers to as <code>X -&gt; Y</code>, if this helps (this notation confused me for a while when I was learning this stuff)</p>",
        "id": 270812867,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644047843
    },
    {
        "content": "<p>For example, if P and Q are nonempty then I'm asking you to write down a function which takes a map from P to Q and returns a map from the empty set to the empty set, and this can certainly be done.</p>",
        "id": 270812948,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644047981
    }
]