[
    {
        "content": "<p>Good point, my final conclusion should be gcd a b &gt; 1 (Corrected the title)</p>",
        "id": 207023628,
        "sender_full_name": "Rick Love",
        "timestamp": 1597500745
    },
    {
        "content": "<p>That also assumes a,b,c &gt; 1</p>",
        "id": 207023710,
        "sender_full_name": "Rick Love",
        "timestamp": 1597500886
    },
    {
        "content": "<p>Ok, here is a better approach:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">-- 4 * 4 = 2 * 8  -&gt; gcd a b = 2 gcd a c = 4</span>\n<span class=\"c1\">-- 6 * 6 = 4 * 9  -&gt; gcd a b = 2 gcd a c = 3</span>\n<span class=\"kn\">theorem</span> <span class=\"n\">multiple_factors_then_gcd</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">):</span>\n    <span class=\"n\">a</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">1</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">b</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">1</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">c</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">1</span> <span class=\"bp\">-&gt;</span>\n    <span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">c</span> <span class=\"bp\">-&gt;</span>\n    <span class=\"n\">gcd</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n    <span class=\"n\">intros</span> <span class=\"n\">ha</span> <span class=\"n\">hb</span> <span class=\"n\">hc</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n\n    <span class=\"k\">let</span> <span class=\"n\">faa</span> <span class=\"o\">:=</span> <span class=\"n\">factors</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"o\">),</span>\n    <span class=\"k\">let</span> <span class=\"n\">fbc</span> <span class=\"o\">:=</span> <span class=\"n\">factors</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"bp\">*</span><span class=\"n\">c</span><span class=\"o\">),</span>\n    <span class=\"k\">let</span> <span class=\"n\">fa</span> <span class=\"o\">:=</span> <span class=\"n\">factors</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">),</span>\n    <span class=\"k\">let</span> <span class=\"n\">fb</span> <span class=\"o\">:=</span> <span class=\"n\">factors</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">),</span>\n    <span class=\"k\">let</span> <span class=\"n\">fc</span> <span class=\"o\">:=</span> <span class=\"n\">factors</span> <span class=\"o\">(</span><span class=\"n\">c</span><span class=\"o\">),</span>\n    <span class=\"k\">have</span> <span class=\"n\">h_faa_fbc</span> <span class=\"o\">:</span> <span class=\"n\">faa</span> <span class=\"bp\">=</span> <span class=\"n\">fbc</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">dsimp</span> <span class=\"o\">[</span><span class=\"n\">faa</span><span class=\"o\">,</span> <span class=\"n\">fbc</span><span class=\"o\">],</span> <span class=\"n\">rw</span> <span class=\"n\">h</span><span class=\"o\">,},</span>\n    <span class=\"k\">have</span> <span class=\"n\">h_faa_fa_fa</span> <span class=\"o\">:</span> <span class=\"n\">faa</span> <span class=\"bp\">=</span> <span class=\"n\">list</span><span class=\"bp\">.</span><span class=\"n\">append</span> <span class=\"n\">fa</span> <span class=\"n\">fa</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"o\">{</span>\n        <span class=\"c1\">-- cc,</span>\n        <span class=\"c1\">-- Is there an operation for factors(a*a) = factors(a) âˆ§ factors(a)</span>\n        <span class=\"n\">sorry</span><span class=\"o\">,</span>\n    <span class=\"o\">},</span>\n\n    <span class=\"c1\">-- have</span>\n    <span class=\"n\">sorry</span><span class=\"o\">,</span>\n\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 207023849,
        "sender_full_name": "Rick Love",
        "timestamp": 1597501116
    },
    {
        "content": "<p>If all you want to do is prove the gcd is bigger than one then you can just prove that if b&gt;1 then it has a prime factor and this prime factor divides a^2 and hence a</p>",
        "id": 207023973,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597501325
    },
    {
        "content": "<p>I should think these facts are already in mathlib</p>",
        "id": 207023979,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1597501354
    },
    {
        "content": "<p>Right, I was trying to use dvd and gcd, but I'll take a look at the prime functions. That's probably the missing piece 'prime factor divides a^2 and hence a'</p>",
        "id": 207024061,
        "sender_full_name": "Rick Love",
        "timestamp": 1597501526
    },
    {
        "content": "<p>if <code>gcd a b &lt;= 1</code> then <code>gcd a b = 0</code> or <code>gcd a b = 1</code>.</p>\n<p>In the first case, we have <code>a = 0</code> or <code>b = 0</code>, contradiction.</p>\n<p>In the second case, we have <code>gcd (a * a) b = 1</code>, so <code>gcd (b * c) b = 1</code>, so <code>b = 1</code>, contradiction.</p>",
        "id": 207030704,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597511976
    },
    {
        "content": "<p>no primes required</p>",
        "id": 207030710,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597511994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> even with that, the difficulty is programming it in lean. How would you write that? Specifically how would you set up a proof by contradiction like this. (Note, I've done plenty of rw apply, etc, but still new to using exfalso and a contradiction).</p>",
        "id": 207031370,
        "sender_full_name": "Rick Love",
        "timestamp": 1597513110
    },
    {
        "content": "<p>you can start with:</p>\n<div class=\"codehilite\"><pre><span></span><code>  <span class=\"n\">generalize</span> <span class=\"n\">hg</span> <span class=\"o\">:</span> <span class=\"n\">gcd</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n  <span class=\"n\">by_contra</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">g</span> <span class=\"k\">with</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n</code></pre></div>\n\n\n<p>(not tested)</p>",
        "id": 207031669,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597513642
    },
    {
        "content": "<p>Well that's giving me:<br>\n<a href=\"/user_uploads/3121/jgSE5B434zXIFFxusEGRvyp1/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/jgSE5B434zXIFFxusEGRvyp1/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/jgSE5B434zXIFFxusEGRvyp1/image.png\"></a></div><p>How do I pull the h out to work with it?</p>",
        "id": 207031989,
        "sender_full_name": "Rick Love",
        "timestamp": 1597514094
    },
    {
        "content": "<p>What do you mean with \"pull out\"? Does <code>push_neg</code> help?</p>",
        "id": 207032134,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1597514347
    },
    {
        "content": "<p>what's your goal state before my invocations?</p>",
        "id": 207032135,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1597514348
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/116395-maths/topic/a*a.20.3D.20b*c.20-.3E.20gcd.20a.20b.20.3E.201/near/207032134\">said</a>:</p>\n<blockquote>\n<p>What do you mean with \"pull out\"? Does <code>push_neg</code> help?</p>\n</blockquote>\n<p>Yeah, that helps. I'd just been using simp, but this gives better control.</p>",
        "id": 207036487,
        "sender_full_name": "Rick Love",
        "timestamp": 1597521164
    }
]