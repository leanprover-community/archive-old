[
    {
        "content": "<p>Hello, </p>\n<p>do you have an idea for the sorry  ?  My fonction <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>θ</mi></mrow><annotation encoding=\"application/x-tex\">\\theta</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">θ</span></span></span></span> is define with <code> if then else </code> and i don't know how to deal with !  Perhaps something by case ?  Perhaps my starting point is not good !</p>\n<div class=\"codehilite\"><pre><span></span><code> <span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">basis</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">finite_dimensional</span>\n<span class=\"kn\">open</span> <span class=\"n\">is_basis</span> <span class=\"n\">linear_map</span>\n<span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">vector_space</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">]</span>\n<span class=\"o\">[</span><span class=\"n\">finite_dimensional</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">](</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">V</span><span class=\"o\">)(</span><span class=\"n\">hv</span> <span class=\"o\">:</span> <span class=\"n\">is_basis</span> <span class=\"n\">K</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n   <span class=\"k\">let</span> <span class=\"n\">θ</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">V</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"k\">then</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"k\">else</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n   <span class=\"k\">let</span> <span class=\"n\">φ</span> <span class=\"o\">:=</span> <span class=\"n\">constr</span> <span class=\"n\">hv</span> <span class=\"n\">θ</span><span class=\"o\">,</span>\n   <span class=\"k\">have</span> <span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">linear_map</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"n\">φ</span> <span class=\"n\">φ</span> <span class=\"bp\">=</span> <span class=\"n\">φ</span> <span class=\"o\">,</span>\n   <span class=\"n\">apply</span> <span class=\"n\">is_basis</span><span class=\"bp\">.</span><span class=\"n\">ext</span> <span class=\"n\">hv</span><span class=\"o\">,</span>\n   <span class=\"n\">intro</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n   <span class=\"n\">rw</span> <span class=\"n\">comp_apply</span><span class=\"o\">,</span>\n   <span class=\"n\">rw</span> <span class=\"n\">constr_basis</span><span class=\"o\">,</span>\n        <span class=\"n\">sorry</span><span class=\"o\">,</span>\n   <span class=\"n\">trivial</span><span class=\"o\">,</span>\n <span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>The tactic state before <code>sorry</code> is   : </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mi\">2</span> <span class=\"n\">goals</span>\n<span class=\"n\">K</span> <span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_1</span> <span class=\"o\">:</span> <span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_2</span> <span class=\"o\">:</span> <span class=\"n\">add_comm_group</span> <span class=\"n\">V</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_3</span> <span class=\"o\">:</span> <span class=\"n\">vector_space</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">,</span>\n<span class=\"bp\">_</span><span class=\"n\">inst_4</span> <span class=\"o\">:</span> <span class=\"n\">finite_dimensional</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">,</span>\n<span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">V</span><span class=\"o\">,</span>\n<span class=\"n\">hv</span> <span class=\"o\">:</span> <span class=\"n\">is_basis</span> <span class=\"n\">K</span> <span class=\"n\">B</span><span class=\"o\">,</span>\n<span class=\"n\">θ</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"bp\">→</span> <span class=\"n\">V</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span><span class=\"o\">),</span> <span class=\"n\">ite</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n<span class=\"n\">φ</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">→</span><span class=\"err\">ₗ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">V</span> <span class=\"o\">:=</span> <span class=\"n\">constr</span> <span class=\"n\">hv</span> <span class=\"n\">θ</span><span class=\"o\">,</span>\n<span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span>\n<span class=\"err\">⊢</span> <span class=\"err\">⇑</span><span class=\"n\">φ</span> <span class=\"o\">(</span><span class=\"n\">θ</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">θ</span> <span class=\"n\">i</span>\n</code></pre></div>",
        "id": 195936411,
        "sender_full_name": "orlando",
        "timestamp": 1588315647
    },
    {
        "content": "<p><code>dsimp only [θ]; split_ifs</code></p>",
        "id": 195936503,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1588315795
    },
    {
        "content": "<p>Good <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span>  <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 195936674,
        "sender_full_name": "orlando",
        "timestamp": 1588316074
    }
]