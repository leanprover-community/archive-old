[
    {
        "content": "<p>Hi, I'm trying to use the <a href=\"https://leanprover-community.github.io/mathlib_docs/find/convex_cone\">docs#convex_cone</a> for linear programming and I'm a bit surprised by the definition. The scalars are required to only be positive, <code>0 &lt; c</code>. I checked the wikipedia reference and I can see where this definition is coming from.</p>\n<p>However, most textbooks instead define convex cones by <code>0  â‰¤ c</code>. For example, Section 2.1.5 here: <a href=\"https://web.stanford.edu/~boyd/cvxbook/bv_cvxbook.pdf\">https://web.stanford.edu/~boyd/cvxbook/bv_cvxbook.pdf</a></p>\n<p>IMO the current definition is too weak for conic/linear programming. Would it be ok to define another structure <code>closed_convex_cone</code> which replaces <code>0 &lt; c</code> with <code>0 \\le c</code> and create some basic API for it similar to the <code>convex_cone</code> API? Or is this too much duplication.</p>\n<p>Another option is to define a <code>closed_convex_cone</code> as something that is both a <code>convex_cone</code> and <code>closed</code>, but this definition will require the ring and the total space to be topological. </p>\n<p>It is not clear to me which of the two options is more appropriate by mathlib standards.</p>",
        "id": 287642431,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1656366995
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 287662736,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1656382744
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 287662819,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1656382839
    },
    {
        "content": "<p>Here's a reference that suggests that the first approach is the prefered one (even though the definition does not provide a <code>closed</code> set in the topological sense): <a href=\"https://ti.inf.ethz.ch/ew/lehre/ApproxSDP09/notes/conelp.pdf\">https://ti.inf.ethz.ch/ew/lehre/ApproxSDP09/notes/conelp.pdf</a></p>",
        "id": 287663015,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1656383067
    }
]