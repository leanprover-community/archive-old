[
    {
        "content": "<p>From <a href=\"https://github.com/leanprover-community/mathlib/tree/measure-subadditive\">branch#measure-subadditive</a>, <a href=\"https://github.com/leanprover-community/mathlib/blob/measure-subadditive/src/analysis/stokes.lean#L255\">this file</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">box_boundary_integral</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">E</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∑</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n  <span class=\"o\">((</span><span class=\"bp\">∫</span> <span class=\"n\">z</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">∘</span> <span class=\"n\">i.succ_above</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">∘</span> <span class=\"n\">i.succ_above</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">fin.insert_nth</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">-</span>\n    <span class=\"bp\">∫</span> <span class=\"n\">z</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">∘</span> <span class=\"n\">i.succ_above</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"bp\">∘</span> <span class=\"n\">i.succ_above</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">fin.insert_nth</span> <span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">box_boundary_integral_eq_fderiv</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hd</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">z</span> <span class=\"bp\">∈</span> <span class=\"n\">Icc</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">differentiable_at</span> <span class=\"n\">ℝ</span> <span class=\"n\">f</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hf'c</span> <span class=\"o\">:</span> <span class=\"n\">continuous_on</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">fderiv</span> <span class=\"n\">ℝ</span> <span class=\"n\">f</span> <span class=\"n\">z</span> <span class=\"o\">(</span><span class=\"n\">update</span> <span class=\"mi\">0</span> <span class=\"n\">i</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">Icc</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">box_boundary_integral</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"bp\">∫</span> <span class=\"n\">z</span> <span class=\"k\">in</span> <span class=\"n\">Icc</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"bp\">∑</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">fderiv</span> <span class=\"n\">ℝ</span> <span class=\"n\">f</span> <span class=\"n\">z</span> <span class=\"o\">(</span><span class=\"n\">update</span> <span class=\"mi\">0</span> <span class=\"n\">i</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">i</span> <span class=\"o\">:=</span>\n</code></pre></div>\n<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span>  <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span>  <span class=\"user-mention\" data-user-id=\"252920\">@Alex Kontorovich</span> </p>\n<p>The code is not PR-ready yet (but is sorry-free)</p>",
        "id": 221643860,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1609852192
    },
    {
        "content": "<p>It takes some work to parse these statements, but if I understand correctly, this is Stokes' theorem for boxes in R^n.</p>\n<p><code>∫ z in Icc x y</code> is a very nice way to write an integral over a box!</p>",
        "id": 221674495,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1609867182
    },
    {
        "content": "<p>BTW, thanks for defining <code>pi</code>-measures!</p>",
        "id": 221701852,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1609880892
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/5625\">#5625</a>, <a href=\"https://github.com/leanprover-community/mathlib/issues/5626\">#5626</a>, <a href=\"https://github.com/leanprover-community/mathlib/issues/5627\">#5627</a>, <a href=\"https://github.com/leanprover-community/mathlib/issues/5571\">#5571</a>, and <a href=\"https://github.com/leanprover-community/mathlib/issues/4913\">#4913</a> are dependencies of a future PR with the Stokes theorem.</p>",
        "id": 221719433,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1609891756
    }
]