[
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/local-equiv-piecewise\">branch#local-equiv-piecewise</a> has a proof of the fact that any topological fiber bundle over <code>[a, b]</code> is trivializable.</p>",
        "id": 229480042,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1615298177
    },
    {
        "content": "<p>Oh nice! This is a key step towards proving an analogous result for simply connected spaces, right?</p>",
        "id": 229485012,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1615300111
    },
    {
        "content": "<p>contractible spaces rather, no?</p>",
        "id": 229486334,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1615300600
    },
    {
        "content": "<p>probably -- I'm no topologist.</p>",
        "id": 229500049,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1615305719
    },
    {
        "content": "<p>The ones with no pi_1. Do you know that in 2018 an undergraduate at Imperial, <span class=\"user-mention\" data-user-id=\"120726\">@Luca Gerolla</span> , formalised the theory of fundamental groups of a pointed space. It was much harder than I had expected, but he is a smart kid and he battled through -- I remember Mario helping him a lot with things like f being continuous on [a,b] iff it was continuous on [a,c] and [c,b] with the two values at c coinciding. <a href=\"https://github.com/ImperialCollegeLondon/xena-UROP-2018/blob/master/src/Topology/Material/fundamental_group.lean\">Here's a link to a very very old Lean file</a> where pi_1 is defined. Do we have this in mathlib?</p>",
        "id": 229501337,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1615305988
    },
    {
        "content": "<p>You can have spaces with no pi_1 but still with nontrivial fiber bundles, since the nontriviality can come from higher homotopy groups. For instance, the tangent bundle to the 2-sphere is nontrivial.</p>",
        "id": 229502401,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1615306208
    },
    {
        "content": "<p>And I don't think we have the fundamental group in mathlib. There was a PR by Kenny a long time ago, but I think Reid said it wasn't done in the right generality (which is probably true, I don't know anything about this stuff).</p>",
        "id": 229502692,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1615306289
    },
    {
        "content": "<p>My plan is to define the index of a continuous map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><msup><mi>S</mi><mn>1</mn></msup><mo>→</mo><msup><mi>S</mi><mn>1</mn></msup></mrow><annotation encoding=\"application/x-tex\">f : S^1\\to S^1</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span> and have some sort of <a href=\"https://en.wikipedia.org/wiki/Rouch%C3%A9%27s_theorem\">Rouché's Theorem</a>.</p>",
        "id": 229510316,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1615308704
    },
    {
        "content": "<p>(and an alternative proof of the fact that complex numbers are algebraically closed).</p>",
        "id": 229510432,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1615308731
    },
    {
        "content": "<p>It seems that we'll need a refactor of fiber bundles in mathlib. I think that they should be done similarly to charted spaces, possibly extending <code>[charted_space (B × F) Z]</code>. This way we'll be able to bring <code>has_groupoid</code> from manifolds and speak about, e.g., vector bundles, <code>C^r</code> bundles etc.</p>",
        "id": 229529506,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1615315049
    },
    {
        "content": "<p>But I'm not going to do it in the next few weeks. I have quite a few unfinished PRs, I'll try to get them finished&amp;merged.</p>",
        "id": 229529699,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1615315122
    },
    {
        "content": "<p>I have nothing to add for now except to say that I'm very excited at the prospect of fiber bundles arriving.</p>",
        "id": 229535499,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1615317306
    },
    {
        "content": "<p>(or more precisely, being developed further)</p>",
        "id": 229535592,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1615317344
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"214703\">Yury G. Kudryashov</span> <a href=\"#narrow/stream/116395-maths/topic/trivialization.20of.20fiber.20bundles.20over.20intervals/near/229529506\">said</a>:</p>\n<blockquote>\n<p>It seems that we'll need a refactor of fiber bundles in mathlib. I think that they should be done similarly to charted spaces, possibly extending <code>[charted_space (B × F) Z]</code>. This way we'll be able to bring <code>has_groupoid</code> from manifolds and speak about, e.g., vector bundles, <code>C^r</code> bundles etc.</p>\n</blockquote>\n<p>There are two different things here. </p>\n<p>From the topological point of view, saying that we have a fiber bundle, or a topological vector bundle, or whatever, is just Prop, on top of already existing typeclasses. Since there is no data in there, I don't think we should put any artifical data in the definition, it would just be calling for diamonds uselessly. I have just completed the PR <a href=\"https://github.com/leanprover-community/mathlib/issues/4658\">#4658</a> by <span class=\"user-mention\" data-user-id=\"267205\">@Nicolò Cavalleri</span> in which he implements topological vector bundles, and it seems to work pretty well.</p>\n<p>On the other hand, when you want to deal with smoothness, then you definitely need data, and then it should be implemented with a <code>charted_space</code> instance, and expressed as the fact that the charts respect the groupoid of maps which are, say, smooth in one direction and linear in the other one. The formalism was designed to allow this kind of things, this is definitely desirable, and it hasn't been done yet.</p>",
        "id": 229552600,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1615323526
    }
]