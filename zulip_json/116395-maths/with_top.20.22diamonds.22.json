[
    {
        "content": "<p>The following equality isn't <code>rfl</code>. I think it should be. I tried redefining the instances, because I thought it might have something to do with the issue that stopped <code>(0 : with_bot nat) = some 0</code> being definitional, but I couldn't get it to work </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">@</span><span class=\"n\">with_top</span><span class=\"bp\">.</span><span class=\"n\">add_monoid</span> <span class=\"bp\">â„•</span> <span class=\"bp\">_</span> <span class=\"bp\">=</span> <span class=\"n\">add_comm_monoid</span><span class=\"bp\">.</span><span class=\"n\">to_add_monoid</span> <span class=\"bp\">_</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span>\n</pre></div>",
        "id": 136461132,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1540453197
    },
    {
        "content": "<p>Hmmm, since when is <code>(0 : with_bot nat) = some 0</code> no longer defeq? I know that things like that worked for <code>with_zero</code> a couple of weeks ago. You are just using a wrapper around <code>option</code> and the obvious coercion. This seems a bit surprising.</p>",
        "id": 136592348,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1540616768
    },
    {
        "content": "<p>Ages ago it didn't work, but it's now fixed.</p>",
        "id": 136598822,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1540630644
    },
    {
        "content": "<p>Ok, good!</p>",
        "id": 136598865,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1540630683
    },
    {
        "content": "<p>Found a fix and PRed. <a href=\"https://github.com/leanprover/mathlib/issues/442\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/issues/442\">#442</a></p>",
        "id": 136603200,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1540639350
    }
]