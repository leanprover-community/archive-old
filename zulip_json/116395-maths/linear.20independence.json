[
    {
        "content": "<p>I'm struggling to prove this lemma about linear independence. Not sure it's even stated correctly.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">le_of_span_le_span</span>  <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">M</span><span class=\"o\">]</span>  <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"n\">u</span><span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">M</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">hl</span> <span class=\"o\">:</span> <span class=\"n\">linear_independent</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">subtype</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"o\">:</span> <span class=\"n\">u</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hsu</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"err\">⊆</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">htu</span> <span class=\"o\">:</span> <span class=\"n\">t</span> <span class=\"err\">⊆</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hst</span> <span class=\"o\">:</span> <span class=\"n\">span</span> <span class=\"n\">R</span> <span class=\"n\">s</span> <span class=\"bp\">≤</span> <span class=\"n\">span</span> <span class=\"n\">R</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"err\">⊆</span> <span class=\"n\">t</span> <span class=\"o\">:=</span>\n</pre></div>",
        "id": 171211587,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1563486209
    },
    {
        "content": "<p>I think it's true</p>",
        "id": 171212508,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563487010
    },
    {
        "content": "<p>I guess the last bit could be an iff, but otherwise it looks fine</p>",
        "id": 171212529,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563487027
    },
    {
        "content": "<p>You could state it with functions; the claim would be that the function from s to u factors through t</p>",
        "id": 171212613,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563487097
    },
    {
        "content": "<p>It certainly looks true. I want to argue that if <code>a \\in s</code> then <code>single a</code> or whatever it's called is in the <code>t</code>-span and one of the finitely many functions involved will mention...wait wait What is the definition of <code>span</code>?</p>",
        "id": 171212749,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563487215
    },
    {
        "content": "<p>OK I looked. I guess the reason I say it's obvious is that I am thinking about everything in the span being a finite R-linear combination of elements in the set.</p>",
        "id": 171212939,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563487362
    },
    {
        "content": "<p>I have some canonical surjection from (s -&gt;0 R) to the R-span and I pull back and argue up there.</p>",
        "id": 171213047,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563487448
    },
    {
        "content": "<p>You probably need to assume the ring is nonzero</p>",
        "id": 171213861,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563488284
    },
    {
        "content": "<p>oh no</p>",
        "id": 171213911,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1563488363
    },
    {
        "content": "<p>if the ring is zero then hl implies u is empty, so s and t are both empty by hsu and htu, so the theorem is true</p>",
        "id": 171213990,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1563488416
    },
    {
        "content": "<p>I think it's the other way around - <code>linear_independent_of_zero_eq_one</code> says everything is independent in the zero ring</p>",
        "id": 171214113,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563488546
    },
    {
        "content": "<p>oh no</p>",
        "id": 171214132,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1563488580
    },
    {
        "content": "<p>Is every module over the zero ring equal to {0}?</p>",
        "id": 171214165,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563488626
    },
    {
        "content": "<p>I think it is</p>",
        "id": 171214168,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563488632
    },
    {
        "content": "<p>so then s = u = {0} and t = {} violate the theorem</p>",
        "id": 171214223,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563488656
    },
    {
        "content": "<p>Every module over the zero ring is canoncially isomorphic to {0}</p>",
        "id": 171214280,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563488741
    },
    {
        "content": "<p>heh</p>",
        "id": 171214286,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563488753
    },
    {
        "content": "<p>any two singletons are canonically correspondent</p>",
        "id": 171214333,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1563488769
    },
    {
        "content": "<p>rofl the result is false</p>",
        "id": 171214341,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563488780
    },
    {
        "content": "<p>Touche Chris</p>",
        "id": 171214356,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563488801
    },
    {
        "content": "<p>The spectrum of the zero ring is empty so there is no point where you can realise your inclusion. There's probably a way to think about this in terms of toposes.</p>",
        "id": 171214391,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563488850
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">le_of_span_le_span</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">M</span><span class=\"o\">]</span>  <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"n\">u</span><span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">M</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">zero_ne_one</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hl</span> <span class=\"o\">:</span> <span class=\"n\">linear_independent</span> <span class=\"n\">R</span> <span class=\"o\">(</span><span class=\"n\">subtype</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"o\">:</span> <span class=\"n\">u</span> <span class=\"bp\">→</span> <span class=\"n\">M</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">hsu</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"err\">⊆</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">htu</span> <span class=\"o\">:</span> <span class=\"n\">t</span> <span class=\"err\">⊆</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hst</span> <span class=\"o\">:</span> <span class=\"n\">span</span> <span class=\"n\">R</span> <span class=\"n\">s</span> <span class=\"bp\">≤</span> <span class=\"n\">span</span> <span class=\"n\">R</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"err\">⊆</span> <span class=\"n\">t</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">eq_of_linear_independent_of_span_subtype</span> <span class=\"n\">zero_ne_one</span>\n    <span class=\"o\">(</span><span class=\"n\">hl</span><span class=\"bp\">.</span><span class=\"n\">mono</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">union_subset</span> <span class=\"n\">hsu</span> <span class=\"n\">htu</span><span class=\"o\">))</span>\n    <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">subset_union_right</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">union_subset</span> <span class=\"o\">(</span><span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">subset</span><span class=\"bp\">.</span><span class=\"n\">trans</span> <span class=\"n\">subset_span</span> <span class=\"n\">hst</span><span class=\"o\">)</span> <span class=\"n\">subset_span</span><span class=\"o\">),</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">this</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">subset_union_left</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 171215024,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1563489603
    },
    {
        "content": "<p>I see that restricting to the true subcase made things easier.</p>",
        "id": 171215385,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1563490071
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 185394541,
        "sender_full_name": "Neil Strickland",
        "timestamp": 1578757460
    }
]