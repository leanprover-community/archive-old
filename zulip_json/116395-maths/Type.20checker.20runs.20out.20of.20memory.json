[
    {
        "content": "<p>For some reason, whenever I try to typecheck my project I run into a compiler error that says that Lean ran out of memory at \"type checker.\"</p>",
        "id": 319504016,
        "sender_full_name": "Quarrie",
        "timestamp": 1672883869
    },
    {
        "content": "<p>I searched the error in the Zulip archive and could only find one other instance of it, which was apparently resolved by getting up-to-date oleans. I tried this. It did not solve anything.</p>",
        "id": 319504127,
        "sender_full_name": "Quarrie",
        "timestamp": 1672883953
    },
    {
        "content": "<p>Is this lean 3 or lean 4? Are you using mathlib?</p>",
        "id": 319529885,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672904803
    },
    {
        "content": "<p>Lean 3.50.3 with what was the latest version of mathlib a few weeks ago</p>",
        "id": 319573709,
        "sender_full_name": "Quarrie",
        "timestamp": 1672921381
    },
    {
        "content": "<p>Mathlib was only bumped to 3.50.3 a week ago. Are you using <code>elan</code>? It is highly recommended (over installing specific lean versions using your package manager, that is).</p>",
        "id": 319574360,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1672921605
    },
    {
        "content": "<p>Any given mathlib commit is associated to a specific lean version (via the <code>leanpkg.toml</code>) file, and the oleans only work for that particular version. Elan takes care of that for you by downloading and using the version declared in the <code>leanpkg.toml</code> file.</p>",
        "id": 319574940,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1672921770
    },
    {
        "content": "<p>Are you working in mathlib itself or in a project which depends on mathlib? Does <code>leanproject get-m</code>, run in your project, fix the problem?</p>",
        "id": 319575401,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672921919
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"325367\">Mauricio Collares</span> <a href=\"#narrow/stream/116395-maths/topic/Type.20checker.20runs.20out.20of.20memory/near/319574360\">said</a>:</p>\n<blockquote>\n<p>Mathlib was only bumped to 3.50.3 a week ago. Are you using <code>elan</code>? It is highly recommended (over installing specific lean versions using your package manager, that is).</p>\n</blockquote>\n<p>Yes, I am using elan/leanproject, learned that the hard way lol</p>",
        "id": 319603912,
        "sender_full_name": "Quarrie",
        "timestamp": 1672930942
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Type.20checker.20runs.20out.20of.20memory/near/319575401\">said</a>:</p>\n<blockquote>\n<p>Are you working in mathlib itself or in a project which depends on mathlib? Does <code>leanproject get-m</code>, run in your project, fix the problem?</p>\n</blockquote>\n<p>Depends on mathlib, and I already checked</p>",
        "id": 319603953,
        "sender_full_name": "Quarrie",
        "timestamp": 1672930956
    },
    {
        "content": "<p>After <code>leanproject get-m</code>, what happens if you try <code>leanproject build</code> on the command line?</p>",
        "id": 319606993,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672931784
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Type.20checker.20runs.20out.20of.20memory/near/319606993\">said</a>:</p>\n<blockquote>\n<p>After <code>leanproject get-m</code>, what happens if you try <code>leanproject build</code> on the command line?</p>\n</blockquote>\n<p>Well, I get a bunch of compiler errors that imply that none of the import statements are being accepted, and in VSCode itself I still get this error on the imports</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"kn\">import</span><span class=\"o\">:</span> <span class=\"n\">data.option.defs</span>\n<span class=\"n\">excessive</span> <span class=\"n\">memory</span> <span class=\"n\">consumption</span> <span class=\"n\">detected</span> <span class=\"n\">at</span> <span class=\"bp\">'</span><span class=\"n\">type</span> <span class=\"n\">checker'</span> <span class=\"o\">(</span><span class=\"n\">potential</span> <span class=\"n\">solution</span><span class=\"o\">:</span> <span class=\"n\">increase</span> <span class=\"n\">memory</span> <span class=\"n\">consumption</span> <span class=\"n\">threshold</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 319614047,
        "sender_full_name": "Quarrie",
        "timestamp": 1672933939
    },
    {
        "content": "<p>Just to be clear -- are you trying <code>leanproject build</code> in the root directory of your project? What does <code>lean --make src/</code> do? If imports aren't being accepted then your project is corrupt in some way. Perhaps you want to post the <code>leanpkg.path</code> and <code>leanpkg.toml</code> from your project.</p>",
        "id": 319614540,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672934088
    },
    {
        "content": "<p>lean --make src/ parses the entirety of mathlib.</p>",
        "id": 319615314,
        "sender_full_name": "Quarrie",
        "timestamp": 1672934344
    },
    {
        "content": "<p>and yes, I am running build from project root</p>",
        "id": 319615356,
        "sender_full_name": "Quarrie",
        "timestamp": 1672934357
    },
    {
        "content": "<p>leanpkg.path</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">builtin_path</span>\n<span class=\"n\">path</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span><span class=\"bp\">/</span><span class=\"n\">src</span>\n<span class=\"n\">path</span> <span class=\"bp\">./</span><span class=\"n\">src</span>\n</code></pre></div>\n<p>leanpkg.toml</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">package</span><span class=\"o\">]</span>\n<span class=\"n\">name</span> <span class=\"bp\">=</span> <span class=\"s2\">\"mathlib-tensor-lib\"</span>\n<span class=\"n\">version</span> <span class=\"bp\">=</span> <span class=\"s2\">\"0.1\"</span>\n<span class=\"n\">lean_version</span> <span class=\"bp\">=</span> <span class=\"s2\">\"leanprover-community/lean:3.50.3\"</span>\n<span class=\"n\">path</span> <span class=\"bp\">=</span> <span class=\"s2\">\"src\"</span>\n\n<span class=\"o\">[</span><span class=\"n\">dependencies</span><span class=\"o\">]</span>\n<span class=\"n\">mathlib</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">git</span> <span class=\"bp\">=</span> <span class=\"s2\">\"https://github.com/leanprover-community/mathlib\"</span><span class=\"o\">,</span> <span class=\"n\">rev</span> <span class=\"bp\">=</span> <span class=\"s2\">\"46a64b5b4268c594af770c44d9e502afc6a515cb\"</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 319615404,
        "sender_full_name": "Quarrie",
        "timestamp": 1672934381
    },
    {
        "content": "<p>and what's the output of <code>leanproject get-m</code>?</p>",
        "id": 319615858,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672934492
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span> <span class=\"n\">for</span> <span class=\"mi\">46</span><span class=\"n\">a64b5b42</span>\n  <span class=\"n\">locally...</span>\n  <span class=\"n\">Found</span> <span class=\"kn\">local</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Located</span> <span class=\"n\">matching</span> <span class=\"n\">cache</span>\n<span class=\"n\">Applying</span> <span class=\"n\">cache</span>\n  <span class=\"n\">files</span> <span class=\"n\">extracted</span><span class=\"o\">:</span> <span class=\"mi\">3020</span> <span class=\"o\">[</span><span class=\"mi\">00</span><span class=\"o\">:</span><span class=\"mi\">15</span><span class=\"o\">,</span> <span class=\"mi\">193</span><span class=\"bp\">.</span><span class=\"mi\">30</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 319616642,
        "sender_full_name": "Quarrie",
        "timestamp": 1672934681
    },
    {
        "content": "<p>Assuming it just downloads oleans as normal, the most common issue which causes errors such as yours is that someone has edited your set-up of core Lean by accident (e.g. by jumping to definition and then pressing a key). You can fix this with brute force uninstalling Lean 3.50.3 with <code>rm -rf ~/.elan/toolchains/leanprover-community--lean---3.50.3 ~/.elan/update-hashes/leanprover-community--lean---3.50.3</code> and then trying <code>lean --make src</code> again; then <code>elan</code> should redownload Lean and hopefully it fixes your problem.</p>",
        "id": 319616670,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1672934692
    },
    {
        "content": "<p>Trying that nwo</p>",
        "id": 319616999,
        "sender_full_name": "Quarrie",
        "timestamp": 1672934782
    },
    {
        "content": "<p>It did not, in fact, fix my problem.</p>",
        "id": 320773983,
        "sender_full_name": "Quarrie",
        "timestamp": 1673463396
    },
    {
        "content": "<p>Is it possible to update the leanproject utility in-place? I tested creating a new project, and it seems to think the latest Lean version is 3.33.0 even though 3.50.3 is the only one I have installed.</p>",
        "id": 320789276,
        "sender_full_name": "Quarrie",
        "timestamp": 1673468278
    },
    {
        "content": "<p>There is some debugging output when you make a new project which at some point essentially prints out a random version of Lean. Are you sure that your new project thinks it's on 3.33.0, or was this part of random debugging output? What does the <code>leanpkg.toml</code> have to say about the matter? That is the source of truth.</p>",
        "id": 320962862,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1673536554
    }
]