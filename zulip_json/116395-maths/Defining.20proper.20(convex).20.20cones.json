[
    {
        "content": "<p>I'm working on proving some geometric theorems about convex cones here <a href=\"https://github.com/leanprover-community/mathlib/pull/15637\">#15637</a>. I now have a few theorems that only hold true for convex cones that are <code>closed</code> and <code>nonempty</code>. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">pointed_of_nonempty_closed</span>\n  <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">convex_cone</span> <span class=\"n\">ℝ</span> <span class=\"n\">H</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ne</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">H</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">is_closed</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">H</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"n\">K.pointed</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">geometric_farkas_lemma</span>\n  <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">convex_cone</span> <span class=\"n\">ℝ</span> <span class=\"n\">H</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ne</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">H</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">is_closed</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">H</span><span class=\"o\">))</span>\n  <span class=\"o\">{</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">H</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">disj</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">∉</span> <span class=\"n\">K</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">H</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">H</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">K</span> <span class=\"bp\">→</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"bp\">⟪</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"bp\">⟫</span><span class=\"n\">_ℝ</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"bp\">⟪</span><span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"bp\">⟫</span><span class=\"n\">_ℝ</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">dual_of_dual_eq_self</span>\n  <span class=\"o\">{</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">convex_cone</span> <span class=\"n\">ℝ</span> <span class=\"n\">H</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">ne</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">H</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">nonempty</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">is_closed</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">H</span><span class=\"o\">))</span> <span class=\"o\">:</span>\n  <span class=\"o\">((</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">H</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">inner_dual_cone</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">H</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">inner_dual_cone</span> <span class=\"bp\">=</span> <span class=\"n\">K</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>Should I define a new structure called <code>proper_cone</code> (= closed, nonempty, convex cone), create some basic API, and phrase the above results only for <a href=\"https://en.wikipedia.org/wiki/Convex_cone#:~:text=The%20term%20proper%20(convex)%20cone,salient%2C%20and%20full%2Ddimensional.\">proper cones</a>? The last result allows us to define an involutive star operation on proper cones which suggests that this is the correct definition.</p>\n<p>These are the only cones used in the definition of a <a href=\"https://inst.eecs.berkeley.edu/~ee227a/fa10/login/l_dual_conic.html\">conic program</a> so I can refactor this definition into a conic programming file later once I have a few basic results about it.</p>",
        "id": 291615741,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1659379058
    }
]