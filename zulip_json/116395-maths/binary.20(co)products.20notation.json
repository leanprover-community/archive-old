[
    {
        "content": "<p>We seem to be taking over notation ending in <code>_</code> in category theory; maybe we should use <code>√ó_</code> for product then?<br>\nBy the way, I'm not sure how I feel about using the symbol <code>‚äï</code> for the coproduct. <code>‚®ø</code> seems more appropriate if we can use it.</p>",
        "id": 175072289,
        "sender_full_name": "Reid Barton",
        "timestamp": 1567781700
    },
    {
        "content": "<p>Both suggestions seem pretty reasonable. Perhaps we should reserve <code>‚äï</code> for biproducts?</p>",
        "id": 175113649,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1567813365
    },
    {
        "content": "<p>By the way --- my initial use of these \"terminal <code>_</code>\" notations was all in places where common maths notation used a subscript. These <code>‚®ø_</code> and <code>√ó_</code> notations are fine, but much less readable than the original uses.</p>",
        "id": 175168221,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1567916691
    },
    {
        "content": "<p>Shall I just PR these?</p>",
        "id": 175168222,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1567916698
    },
    {
        "content": "<p>Done as <a href=\"https://github.com/leanprover-community/mathlib/issues/1413\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1413\">#1413</a>.</p>",
        "id": 175169857,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1567919774
    },
    {
        "content": "<p>I do agree the <code>'</code> looks a bit nicer</p>",
        "id": 175178712,
        "sender_full_name": "Reid Barton",
        "timestamp": 1567937254
    },
    {
        "content": "<p>What do you mean about a subscript?</p>",
        "id": 175178713,
        "sender_full_name": "Reid Barton",
        "timestamp": 1567937260
    },
    {
        "content": "<p>I think the first place I introduced notations with a trailing <code>_</code> was in the monoidal categories definition:</p>\n<div class=\"codehilite\"><pre><span></span>notation `ùüô_` := tensor_unit\nnotation `Œ±_` := associator\nnotation `Œª_` := left_unitor\nnotation `œÅ_` := right_unitor\n</pre></div>\n\n\n<p>So you can write for example <code>Œª_ X</code>, which reads very naturally to me as \"lambda-subscript-X\", which is exactly what you'd usually see for the component of a natural transformation.</p>",
        "id": 175178874,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1567937564
    },
    {
        "content": "<p>That is, I was using the trailing subscript in places where it was natural to expect a subscript.</p>",
        "id": 175178883,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1567937598
    },
    {
        "content": "<p>ah, I see</p>",
        "id": 175178932,
        "sender_full_name": "Reid Barton",
        "timestamp": 1567937659
    },
    {
        "content": "<p>So, <code>'</code> or <code>_</code> here?</p>",
        "id": 175179274,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1567938382
    },
    {
        "content": "<p>Personally, I'm not that keen on notations at all, so I find it a bit hard to care which. :-)</p>",
        "id": 175179275,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1567938382
    },
    {
        "content": "<p>Or we could be more creative; how about ‚®Ø? In my font it looks like a bigger √ó and it's <code>\\X</code> in emacs. Not really semantically sensible according to its Unicode name (VECTOR OR CROSS PRODUCT) but maybe that doesn't matter?</p>",
        "id": 175426061,
        "sender_full_name": "Reid Barton",
        "timestamp": 1568205205
    },
    {
        "content": "<p>Likewise, we don't really need a prime or anything on ‚®ø</p>",
        "id": 175426095,
        "sender_full_name": "Reid Barton",
        "timestamp": 1568205232
    },
    {
        "content": "<p>In my font it looks pretty similar to the normal \\times. I'm game, though.</p>",
        "id": 175478434,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1568237751
    },
    {
        "content": "<p>Hopefully it should not be too confusing if they look similar, since if both make sense they should be \"the same\"</p>",
        "id": 175478971,
        "sender_full_name": "Reid Barton",
        "timestamp": 1568238293
    },
    {
        "content": "<p>... assuming that the category-theory product of types is the actual <code>prod</code> product</p>",
        "id": 175478987,
        "sender_full_name": "Reid Barton",
        "timestamp": 1568238313
    },
    {
        "content": "<p>Okay, I've updated the PR.</p>",
        "id": 175479682,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1568238929
    },
    {
        "content": "<p>We also need to add shortcuts in VSCode</p>",
        "id": 175479687,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1568238937
    },
    {
        "content": "<p>Any suggestions? <code>\\X</code> is already taken in VSCode for <code>Œû</code></p>",
        "id": 175479789,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1568239007
    },
    {
        "content": "<p>I wouldn't mind stealing <code>\\X</code>, and turning the existing on into <code>\\Xi</code>.</p>",
        "id": 175501647,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1568268127
    },
    {
        "content": "<p>Sounds good to me. What about <code>‚®ø</code>?</p>",
        "id": 175501882,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1568268502
    },
    {
        "content": "<p><code>\\UU</code>??</p>",
        "id": 175501886,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1568268525
    },
    {
        "content": "<p>Sure, and maybe also <code>\\coprod</code> because I'll forget the other</p>",
        "id": 175501898,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1568268569
    },
    {
        "content": "<p>Is this cross the one I used to use and <span class=\"user-mention\" data-user-id=\"121918\">@Edward Ayers</span> accidentally removed? If yes then I'm all in favor of restoring it in the VScode translation file, but please make that a local notation in the category theory library</p>",
        "id": 175565761,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568318666
    }
]