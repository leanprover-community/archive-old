[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">even</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">k</span>\n<span class=\"n\">def</span> <span class=\"n\">odd</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"bp\">∃</span> <span class=\"n\">k</span><span class=\"o\">,</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"bp\">*</span><span class=\"n\">k</span><span class=\"bp\">+</span><span class=\"mi\">1</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">luckyseven</span> <span class=\"o\">:</span> <span class=\"n\">odd</span> <span class=\"mi\">7</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">rw</span> <span class=\"n\">odd</span><span class=\"o\">,</span>\n<span class=\"n\">existsi</span> <span class=\"mi\">3</span><span class=\"o\">,</span>\n\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>\"existsi 3,\" takes the goal to 7 = 2*3+1, but I'm not sure how to get it to evaluate the expression</p>",
        "id": 188026839,
        "sender_full_name": "Nicholas McConnell",
        "timestamp": 1581525079
    },
    {
        "content": "<p><code>7=2*3+1</code> is true by definition so you can finish the proof with <code>refl</code></p>",
        "id": 188027034,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581525166
    },
    {
        "content": "<p>Okay thanks</p>",
        "id": 188027077,
        "sender_full_name": "Nicholas McConnell",
        "timestamp": 1581525178
    },
    {
        "content": "<p>If you put <code> ```lean </code> above your code and <code> ``` </code> under it, you'll get syntax highlighting etc.</p>",
        "id": 188027106,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581525200
    },
    {
        "content": "<p>If you use mathlib and write <code>import tactic</code> at the top of your code, you can use the slightly less bizarrely named <code>use</code> tactic: <code>use 3</code> does the same as <code>existsi 3</code>.</p>",
        "id": 188027272,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581525273
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"mi\">1</span> <span class=\"n\">goal</span>\n<span class=\"n\">d</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span>\n<span class=\"n\">q</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span>\n<span class=\"err\">⊢</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">succ</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>I'm also not sure how to deal with this goal, specifically how to distribute the multiplication over the addition at the start</p>",
        "id": 188027301,
        "sender_full_name": "Nicholas McConnell",
        "timestamp": 1581525287
    },
    {
        "content": "<p>Big question: do you just want to destroy this quickly with a tactic which proves all such equalities in general rings, or do you want to do all the steps by yourself?</p>",
        "id": 188027385,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581525336
    },
    {
        "content": "<p>Either of these seems fine to me</p>",
        "id": 188027424,
        "sender_full_name": "Nicholas McConnell",
        "timestamp": 1581525356
    },
    {
        "content": "<p>If the former, then <code>rw q, ring</code> (assuming you have mathlib tactics imported)</p>",
        "id": 188027429,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581525361
    },
    {
        "content": "<p>\"import tactic\" didn't work for me</p>",
        "id": 188027512,
        "sender_full_name": "Nicholas McConnell",
        "timestamp": 1581525398
    },
    {
        "content": "<p>if the latter, then <code>rw mul_add</code> is what you need to apply the distributivity. It's also called <code>left_distrib</code> or something, but <code>mul_add</code> is easier to remember.</p>",
        "id": 188027535,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581525416
    },
    {
        "content": "<p>Alright thanks</p>",
        "id": 188027553,
        "sender_full_name": "Nicholas McConnell",
        "timestamp": 1581525429
    },
    {
        "content": "<p><code>import tactic</code> not working just means that you don't have Lean's maths library set up to work with your project.</p>",
        "id": 188027586,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581525447
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib#installation\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib#installation\">https://github.com/leanprover-community/mathlib#installation</a> and then download the sample project and make a new file in it with your Lean code and it will work. Alternatively use the <a href=\"https://leanprover-community.github.io/lean-web-editor/\" target=\"_blank\" title=\"https://leanprover-community.github.io/lean-web-editor/\">online editor</a></p>",
        "id": 188027775,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581525562
    },
    {
        "content": "<p>The <a href=\"https://wwwf.imperial.ac.uk/~buzzard/xena/natural_number_game/\" target=\"_blank\" title=\"https://wwwf.imperial.ac.uk/~buzzard/xena/natural_number_game/\">natural number game</a> teaches you stuff like <code>mul_add</code> (disclaimer: I was involved in writing it)</p>",
        "id": 188027856,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1581525612
    }
]