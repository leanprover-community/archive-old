[
    {
        "content": "<p>I missed <a href=\"https://github.com/leanprover-community/mathlib/issues/4357\">#4357</a> that introduced odd numbers in mathlib until it broke the tutorials project automatic update. Of course I'm extremely grateful that someone defined <code>int.odd</code>, not having it was extremely weird. However I don't understand why this definition was chosen. Why not <code>def int.odd (n : ℤ) := ∃ k, n = 2*k + 1</code>? We could even have it for a general semiring. This makes it completely analogous to <code>even</code>, and allow to use <code>rintro</code>/<code>rcases</code> directly on an assumption <code>odd n</code>. Also, shouldn't we put <code>pp_nodot</code> on <code>even</code> and <code>odd</code>?</p>",
        "id": 212343121,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601924744
    },
    {
        "content": "<p>My assumption was that it was deliberate that <code>even</code> was defined without <code>odd</code>, so given that <code>odd</code> was wanted to allow more literal formal expression of informal statements that say \"odd\", it should be defined as simply as possible in terms of <code>even</code> and <code>simp</code> should convert it to be in terms of <code>even</code>. If it turns out a different definition (or different handling in <code>simp</code>) is useful, including a definition for general semirings, that's fine with me.</p>",
        "id": 212350534,
        "sender_full_name": "Joseph Myers",
        "timestamp": 1601928789
    },
    {
        "content": "<p>What's an example of this other definition of <code>odd</code> being useful for semirings?  (And, having no theorem in mind, why not generalize it more?  \"An element <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> is <em>odd</em> if there is a unit <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">u</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> and another element <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mn>2</mn><mi>y</mi><mo>+</mo><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">x=2y+u</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span>.\")</p>",
        "id": 212351935,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1601929496
    },
    {
        "content": "<p>I really meant I'd like to have the nice definition for integers and natural numbers. I don't care about other semi-rings here.</p>",
        "id": 212359385,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601933402
    },
    {
        "content": "<p>We can have any definition (e.g., <code>not even</code>) and add <code>∃ k, 2 * k + 1 = n</code> as <code>odd.exists</code>.</p>",
        "id": 212364555,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1601937072
    },
    {
        "content": "<p>I've got that proof lying around, if people want it</p>",
        "id": 212396542,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1601971982
    },
    {
        "content": "<p>I'll open a PR soon</p>",
        "id": 212398179,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601973034
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> fyi <a href=\"https://gist.github.com/Ruben-VandeVelde/bfc190d3334b6f423015012ffd4e2b77\">https://gist.github.com/Ruben-VandeVelde/bfc190d3334b6f423015012ffd4e2b77</a></p>",
        "id": 212401457,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1601975123
    },
    {
        "content": "<p>Thanks Ruben,  but I think we already have everything that is needed here.</p>",
        "id": 212401696,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601975274
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/4473\">#4473</a></p>",
        "id": 212403241,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601976357
    }
]