[
    {
        "content": "<p>Would anyone object to a new notation for <a href=\"https://leanprover-community.github.io/mathlib_docs/find/ext_chart_at\">docs#ext_chart_at</a>? They are quite a pain to type repetitively when working with manifolds. I propose <code>𝓔(I, x)</code> to mean <code>ext_chart_at I x</code>, where the script E is entered with <code>\\MCE</code>.</p>",
        "id": 307227816,
        "sender_full_name": "Winston Yin",
        "timestamp": 1667262869
    },
    {
        "content": "<p>PR <a href=\"https://github.com/leanprover-community/mathlib/pull/17294\">#17294</a> shows the effect of the new notation for <code>ext_chart_at</code>.</p>",
        "id": 307248817,
        "sender_full_name": "Winston Yin",
        "timestamp": 1667280070
    },
    {
        "content": "<p>I haven't found <code>ext_chart_at</code> particularly annoying to write myself, so I'm neutral towards this proposal.<br>\nIf we do this, do we want similar notation for <code>chart_at</code>?</p>",
        "id": 307394938,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1667333354
    },
    {
        "content": "<ul>\n<li><code>𝓔(I, x)</code> is much shorter, allowing formulas involving them to look like their regular mathematical counterparts. For me, it has made reading and thinking about these formulas much quicker.</li>\n<li>I find myself going back and adding parentheses to <code>ext_chart_at I x</code> all the time when I need to append <code>.symm</code>, <code>.source</code>, <code>.target</code>. Writing <code>𝓔(I, x)</code> would eliminate the need for this decision.</li>\n<li>The notation <code>𝓝</code> for <code>nhds</code> seems like a negative improvement (5 keystrokes instead of 4 including shift key) compared to <code>𝓔</code> for <code>ext_chart_at</code> (5 instead of 14).</li>\n</ul>",
        "id": 307466469,
        "sender_full_name": "Winston Yin",
        "timestamp": 1667374468
    },
    {
        "content": "<p>As for <code>chart_at</code>, I guess a natural choice would be <code>𝓒</code> (<code>\\MCC</code>), but it looks so darn similar to <code>𝓔</code>.</p>",
        "id": 307466638,
        "sender_full_name": "Winston Yin",
        "timestamp": 1667374565
    },
    {
        "content": "<p>One alternative proposal would be to use <code>𝓒(H, x)</code> (script C) for <code>chart_at</code> and <code>e𝓒(I, x)</code> or <code>𝓒ₑ(I, x)</code> for <code>ext_chart_at</code> (also script C).</p>",
        "id": 307466955,
        "sender_full_name": "Winston Yin",
        "timestamp": 1667374780
    },
    {
        "content": "<p>If you just want this for files you're writing you can use local notation, this trick (or a local abbreviation) is used several times in mathlib to save typing</p>",
        "id": 307467180,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1667374900
    },
    {
        "content": "<p>Not everything is about saving keystrokes. We use <code>𝓝</code> in mathlib because it is commonly used notation for neighborhoods.</p>",
        "id": 307468640,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1667375856
    },
    {
        "content": "<p>Winston, the neighborhood notation does save key, you only need to type <code>\\nh</code> to trigger it.</p>",
        "id": 307470353,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1667376800
    },
    {
        "content": "<p>I suppose a local notation is sufficient for my use. Thanks for the comments!</p>",
        "id": 307490060,
        "sender_full_name": "Winston Yin",
        "timestamp": 1667384200
    }
]