[
    {
        "content": "<p>This got lost in the <a class=\"stream\" data-stream-id=\"116290\" href=\"/#narrow/stream/116290-rss\">#rss</a> stream:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"112165\">rss-bot</span> <a href=\"#narrow/stream/116290-rss/topic/Recent.20Commits.20to.20mathlib.3Amaster/near/279075009\">said</a>:</p>\n<blockquote>\n<p><strong><a href=\"https://github.com/leanprover-community/mathlib/commit/ebc8b441f8f602d8b0cf28c201056bfc0c86bc9c\">feat(analysis/normed_space/basic): <code>pi</code> and <code>prod</code> are <code>normed_algebra</code>s</a></strong> (<a href=\"https://github.com/leanprover-community/mathlib/pull/13442\">mathlib#13442</a>)</p>\n<p>Note that over an empty index type, <code>pi</code> is not a normed_algebra since it is trivial as a ring.</p>\n<p>Authored-by: <a href=\"https://github.com/eric-wieser\">eric-wieser</a> <a href=\"https://github.com/leanprover-community/mathlib/commit/ebc8b441f8f602d8b0cf28c201056bfc0c86bc9c\">(commit)</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> <a href=\"#narrow/stream/116290-rss/topic/Recent.20Commits.20to.20mathlib.3Amaster/near/279076268\">said</a>:</p>\n<blockquote>\n<p>The zero algebra isn't normed? Looks odd from the viewpoint of algebra or geometry. I found a few references saying that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mo stretchy=\"false\">(</mo><mi>X</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">C(X)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span></span></span></span> is a normed (unital) algebra for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> compact, even when (on the same page nearly) they claim to require <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">||1|| = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣1∣∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n</blockquote>\n<p>(referring to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/pi.normed_algebra\">docs#pi.normed_algebra</a>)</p>",
        "id": 279515954,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650445267
    },
    {
        "content": "<p>IIRC in Bosch-Guentzer-Remmert they require ||1||&lt;=1 and go on to prove that either 1=0 or ||1||=1.</p>",
        "id": 279522186,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650448942
    },
    {
        "content": "<p>Oh I'm slightly off. The axioms for a seminormed ring in BGR are |xy|&lt;=|x||y| and |1|&lt;=1, and then they instantly observe that because |1|&lt;=|1|^2&lt;=|1| either |1|=1 or |1|=0 and in the latter case |x|=0 for all x. And a norm is just a seminorm with |x|=0 iff x=0, so the zero ring is a normed ring in the sense of BGR.</p>",
        "id": 279522449,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650449107
    },
    {
        "content": "<p>Mathlib agrees that the zero <em>ring</em> is a normed_ring (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/pi.normed_ring\">docs#pi.normed_ring</a> has no nonemptiness requirement)</p>",
        "id": 279522910,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650449382
    },
    {
        "content": "<p>The BGR axioms make sense to me. However I note that <a href=\"https://leanprover-community.github.io/mathlib_docs/find/normed_ring\">docs#normed_ring</a> doesn't seem to require ||1|| &lt;= 1 and I'm not sure whether this is intentional.</p>",
        "id": 279527288,
        "sender_full_name": "Reid Barton",
        "timestamp": 1650452562
    },
    {
        "content": "<p>If the zero ring is a normed ring then I think it really doesn't make sense to not allow it as a normed algebra.</p>",
        "id": 279527904,
        "sender_full_name": "Reid Barton",
        "timestamp": 1650452957
    },
    {
        "content": "<p>Should we require <code>norm (algebra_map R A r) ≤ norm r</code> instead of the current equality (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/norm_algebra_map_eq\">docs#norm_algebra_map_eq</a>), or is that too weak?</p>",
        "id": 279530903,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650455017
    },
    {
        "content": "<p>I think the correct way to think about it is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi>a</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi></msub><mo>≤</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>R</mi></msub><mo>⋅</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>a</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">||r a||_A \\le ||r||_R \\cdot ||a||_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, which as our <code>algebra</code>s are unital, is equivalent to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi></msub><mo>≤</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>R</mi></msub></mrow><annotation encoding=\"application/x-tex\">||r||_A \\le ||r||_R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, at least if we add the missing axiom <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">||1|| \\le 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣1∣∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></p>",
        "id": 279531746,
        "sender_full_name": "Reid Barton",
        "timestamp": 1650455443
    },
    {
        "content": "<p>i.e. a normed algebra is an algebra that is a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/normed_space\">docs#normed_space</a></p>",
        "id": 279533065,
        "sender_full_name": "Reid Barton",
        "timestamp": 1650456118
    },
    {
        "content": "<p>Except that <code>α</code> should not need to be a <code>normed_field</code> in <code>normed_space</code></p>",
        "id": 279533158,
        "sender_full_name": "Reid Barton",
        "timestamp": 1650456149
    },
    {
        "content": "<p>I've had a go at using <code>norm (algebra_map R A r) ≤ norm r</code> which seem weak enough for my purposes</p>",
        "id": 279534229,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650456743
    },
    {
        "content": "<p>I agree that we can do better</p>",
        "id": 279534243,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650456751
    },
    {
        "content": "<p>PR'd as <a href=\"https://github.com/leanprover-community/mathlib/pull/13544\">#13544</a>, although I suspect CI will complain</p>",
        "id": 279540963,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650460219
    },
    {
        "content": "<p>I agree that <code>0</code> should definitely be a <code>normed_algebra</code>. However, I also care a great deal about the case of non-unital algebras. In that case, the correct condition should I think be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi>a</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi></msub><mo>=</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>R</mi></msub><mo>⋅</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>a</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">||r a||_A = ||r||_R \\cdot ||a||_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> (which, incidentally, also works in the unital case even if it isn't the way we want to phrase it). I guess we don't have anything like this for non-unital algebras in mathlib, right?</p>",
        "id": 279552763,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650465965
    },
    {
        "content": "<p>Are you sure you want equality?</p>",
        "id": 279555063,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650466887
    },
    {
        "content": "<p>That's the problem that motivated this thread in the first place</p>",
        "id": 279555144,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650466907
    },
    {
        "content": "<p>Oh, I guess that's just <a href=\"https://leanprover-community.github.io/mathlib_docs/find/norm_smul\">docs#norm_smul</a></p>",
        "id": 279555237,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650466934
    },
    {
        "content": "<p>but norm_smul is about fields. There's a trick with fields where you multiply by r and then by r^{-1} and show that equality is equivalent to &lt;=</p>",
        "id": 279555369,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650466987
    },
    {
        "content": "<p>Right, but <code>normed_space</code> only exists for fields at the moment anyway</p>",
        "id": 279555425,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650467010
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span>, You can already do non-unital normed algebras with <code>[normed_field α] [non_unital_semi_normed_ring β] [normed_space α β] [is_scalar_tower α β β] [is_scalar_tower α α β]</code></p>",
        "id": 279555566,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650467065
    },
    {
        "content": "<p>Ah, right, you get it with <code>normed_space</code>. I knew that and forgot.</p>",
        "id": 279555702,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650467121
    },
    {
        "content": "<p>and a cunning use of is_scalar_tower by the looks of things</p>",
        "id": 279555742,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650467140
    },
    {
        "content": "<p>It's the same cunningness as in the <a href=\"https://leanprover-community.github.io/mathlib_docs/find/algebra\">docs#algebra</a> docstring</p>",
        "id": 279555799,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650467160
    },
    {
        "content": "<p>Perhaps we should copy that across to normed_algebra's docs</p>",
        "id": 279555886,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650467179
    },
    {
        "content": "<p>By the way, the equality version I mentioned above works because you include the <code>a</code>. So in the case of the zero ring, both sides are automatically zero.</p>",
        "id": 279556017,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650467228
    },
    {
        "content": "<p>I think in various sources I've read on Banach algebras, the equality I stated above (essentially <code>docs#norm_smul</code>) is the definition, <em>without</em> the added condition that <code>∥1∥ ≤ 1</code>. In this case, one gets <code>∥1∥ ≥ 1</code> (except for the zero ring) for free because it's a normed ring. Then there are various shenanigans involved to renorm the algebra with an equivalent norm so that <code>∥1∥ = 1</code> (except for the zero ring). I'm not claiming this is what we want in mathlib.</p>",
        "id": 279557484,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650467859
    },
    {
        "content": "<blockquote>\n<p>In this case, one gets <code>∥1∥ ≥ 1</code> (except for the zero ring) for free</p>\n</blockquote>\n<p>Do we have this lemma anywhere? <a href=\"https://leanprover-community.github.io/mathlib_docs/find/one_le_norm_one\">docs#one_le_norm_one</a>?</p>",
        "id": 279562642,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650469967
    },
    {
        "content": "<p>in mathlib we have the stronger <a href=\"https://leanprover-community.github.io/mathlib_docs/find/normed_algebra.norm_one_class\">docs#normed_algebra.norm_one_class</a> because our definition of <code>normed_algebra</code> is stronger than the one I just described.</p>",
        "id": 279564974,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650470881
    },
    {
        "content": "<p>I thought you said that <code>∥1∥ ≥ 1</code> was a consequence of <code>normed_ring</code> alone?</p>",
        "id": 279565430,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650471079
    },
    {
        "content": "<p>(note that <a href=\"https://github.com/leanprover-community/mathlib/pull/13544\">#13544</a> removes <a href=\"https://leanprover-community.github.io/mathlib_docs/find/normed_algebra.norm_one_class\">docs#normed_algebra.norm_one_class</a> as it is no longer true)</p>",
        "id": 279565476,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650471112
    },
    {
        "content": "<p>Ah, I see what you mean. Well, I haven't seen that lemma, so maybe we don't have it. Of course you need <code>nontrivial R</code>. The proof is just <code>∥1∥ = ∥1 * 1∥ ≤ ∥1∥ * ∥1∥</code>, and then cancel a <code>∥1∥</code> on both sides because it's positive by nontriviality.</p>",
        "id": 279569367,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650472786
    },
    {
        "content": "<p>Isn't <a href=\"https://leanprover-community.github.io/mathlib_docs/find/normed_algebra.norm_one_class\">docs#normed_algebra.norm_one_class</a> still true assuming nontriviality? I thought the only difference in <a href=\"https://github.com/leanprover-community/mathlib/pull/13544\">#13544</a> is that it also the zero ring to be a normed algebra. Or is there a further weakening?</p>",
        "id": 279570103,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650473142
    },
    {
        "content": "<p>Yes, I think it is still true</p>",
        "id": 279572564,
        "sender_full_name": "Reid Barton",
        "timestamp": 1650474068
    },
    {
        "content": "<p>What prevents the norm being 0 everywhere?</p>",
        "id": 279574354,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650474841
    },
    {
        "content": "<p>(in a non-trivial ring)</p>",
        "id": 279574507,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650474916
    },
    {
        "content": "<p>Ah, never mind</p>",
        "id": 279574655,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650474984
    },
    {
        "content": "<p>You're probably already changing it, but I think in <a href=\"https://github.com/leanprover-community/mathlib/pull/13544\">#13544</a> because of the above it makes sense to have everything point the opposite direction. That is, nontrivial → norm_one_class, and then add the nontrivial type class everywhere necessary instead of norm_one_class.</p>",
        "id": 279576414,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650475777
    },
    {
        "content": "<p>I'm trying to, but I'm struggling to find the right cancellation lemma for \"cancel a ∥1∥ on both sides\"</p>",
        "id": 279576967,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650475993
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/le_of_mul_le_mul_left\">docs#le_of_mul_le_mul_left</a>?</p>",
        "id": 279577146,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650476077
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/le_mul_iff_one_le_left\">docs#le_mul_iff_one_le_left</a></p>",
        "id": 279577525,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1650476244
    },
    {
        "content": "<p>Wait, I'm still confused what you're suggesting I do here</p>",
        "id": 279577956,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650476405
    },
    {
        "content": "<p>As far as I can tell <code>nontrivial</code> does not imply <code>norm_one_class</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">norm_one_class.nontrivial</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">semi_normed_group</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_one</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">norm_one_class</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span>\n  <span class=\"n\">nontrivial</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"n\">nontrivial_of_ne</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span> <span class=\"bp\">$</span> <span class=\"n\">ne_of_apply_ne</span> <span class=\"n\">norm</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">norm_one_class_iff_nontrivial</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">normed_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"n\">norm_one_class</span> <span class=\"n\">α</span> <span class=\"bp\">↔</span> <span class=\"n\">nontrivial</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span><span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">resetI</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">norm_one_class.nontrivial</span> <span class=\"n\">α</span> <span class=\"o\">},</span>\n  <span class=\"bp\">λ</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"kd\">by</span> <span class=\"o\">{</span>\n    <span class=\"n\">resetI</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">norm_mul_le</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">),</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">one_mul</span> <span class=\"bp\">∥</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">∥</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n    <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"bp\">∥</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">∥</span> <span class=\"o\">:=</span> <span class=\"n\">le_of_mul_le_mul_right</span> <span class=\"n\">this</span> <span class=\"o\">(</span><span class=\"n\">norm_pos_iff.mpr</span> <span class=\"n\">one_ne_zero</span><span class=\"o\">),</span>\n    <span class=\"n\">refine</span> <span class=\"n\">le_antisymm</span> <span class=\"n\">_</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n    <span class=\"k\">show</span> <span class=\"bp\">∥</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span><span class=\"bp\">∥</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"gr\">sorry</span>\n  <span class=\"o\">}⟩⟩</span>\n</code></pre></div>",
        "id": 279577984,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650476420
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/Is.20the.20zero.20algebra.20normed.3F/near/279574354\">said</a>:</p>\n<blockquote>\n<p>What prevents the norm being 0 everywhere?</p>\n</blockquote>\n<p>Answer: <code>normed_group</code> as opposed to <code>semi_normed_group</code></p>",
        "id": 279578069,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650476459
    },
    {
        "content": "<p>Oh yeah if you are missing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">||1|| \\le 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣1∣∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> then it doesn't follow.</p>",
        "id": 279578534,
        "sender_full_name": "Reid Barton",
        "timestamp": 1650476646
    },
    {
        "content": "<p>I'd be inclined to leave things as is in <a href=\"https://github.com/leanprover-community/mathlib/pull/13544\">#13544</a> then</p>",
        "id": 279578824,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650476787
    },
    {
        "content": "<p>right, I thought we were adding that hypothesis to the the definition of <code>normed_algebra</code>?</p>",
        "id": 279578854,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650476797
    },
    {
        "content": "<p>I would kind of prefer to decide on what we actually want and fix it from the bottom up rather than replacing things piecemeal</p>",
        "id": 279578926,
        "sender_full_name": "Reid Barton",
        "timestamp": 1650476827
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/116395-maths/topic/Is.20the.20zero.20algebra.20normed.3F/near/279578854\">said</a>:</p>\n<blockquote>\n<p>right, I thought we were adding that hypothesis to the the definition of <code>normed_algebra</code>?</p>\n</blockquote>\n<p>My proposed change in that PR is</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gd\">-(norm_algebra_map_eq : ∀x:𝕜, ∥algebra_map 𝕜 𝕜' x∥ = ∥x∥)</span><span class=\"w\"></span>\n<span class=\"gi\">+(norm_algebra_map_le : ∀ x, ∥algebra_map 𝕜 𝕜' x∥ ≤ ∥x∥)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The consequence is a handful of lemmas hold more generally on trivial norm structures, and the ones that don't now need to assume <code>[normed_algebra R A] [norm_one_class A]</code></p>",
        "id": 279579140,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650476910
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/116395-maths/topic/Is.20the.20zero.20algebra.20normed.3F/near/279578854\">said</a>:</p>\n<blockquote>\n<p>right, I thought we were adding that hypothesis to the the definition of <code>normed_algebra</code>?</p>\n</blockquote>\n<p>Do you really mean <code>normed_algebra</code> and not <code>normed_ring</code>?</p>",
        "id": 279579407,
        "sender_full_name": "Reid Barton",
        "timestamp": 1650477022
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/116395-maths/topic/Is.20the.20zero.20algebra.20normed.3F/near/279578534\">said</a>:</p>\n<blockquote>\n<p>Oh yeah if you are missing <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">||1|| \\le 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣1∣∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span> then it doesn't follow.</p>\n</blockquote>\n<p>Note that if we add this hypothesis to <code>normed_ring</code>, then the frobenious norm on matrices is no longer an instance of this</p>",
        "id": 279579491,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650477055
    },
    {
        "content": "<p>So, the question is: do we want to allow normed algebras where the norm of the identity is strictly greater than 1? If not, then <code>∥1∥ ≤ 1</code> should be added to the definition, otherwise not. (Even with that condition the results would still hold on trivial norm structures.)</p>",
        "id": 279579550,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650477075
    },
    {
        "content": "<p>What's the Frobenious norm on matrices?</p>",
        "id": 279579650,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650477114
    },
    {
        "content": "<p>I think not adding the condition is better though. It matches my familiarity with the literature.</p>",
        "id": 279579726,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650477133
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Is.20the.20zero.20algebra.20normed.3F/near/279579650\">said</a>:</p>\n<blockquote>\n<p>What's the Frobenious norm on matrices?</p>\n</blockquote>\n<p><a href=\"https://mathworld.wolfram.com/FrobeniusNorm.html\">https://mathworld.wolfram.com/FrobeniusNorm.html</a> (or <a href=\"https://github.com/leanprover-community/mathlib/pull/13497\">#13497</a>)</p>",
        "id": 279579743,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650477142
    },
    {
        "content": "<p>I spelt it wrong, oops</p>",
        "id": 279579754,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650477149
    },
    {
        "content": "<blockquote>\n<p>It matches my familiarity with the literature.</p>\n</blockquote>\n<p>yeah, and it doesn't match mine! This makes the question quite interesting I think! In the nonarchimedean setting this is commonplace but apparently it's not commonplace elsewhere?</p>",
        "id": 279579885,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650477213
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> : I actually did mean normed algebras, yes. It doesn't make sense to add it for normed rings I don't think.</p>",
        "id": 279579933,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650477237
    },
    {
        "content": "<p>Sorry, can you be more specific Kevin? You mean that in your literature a normed algebra always satisfies ∥1∥ = 1 (except for the zero ring)?</p>",
        "id": 279580166,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650477331
    },
    {
        "content": "<p>|1|&lt;=1 is an axiom in one of the canonical references for nonarchimedean normed rings.</p>",
        "id": 279580317,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650477391
    },
    {
        "content": "<p>Does <code>∥1∥ ≤ 1</code> follow from <code> ∥algebra_map 𝕜 𝕜' x∥ ≤ ∥x∥</code> applied at <code>x=1</code>, noting that <code>𝕜</code> is a normed field and so <a href=\"https://leanprover-community.github.io/mathlib_docs/find/normed_division_ring.to_norm_one_class\">docs#normed_division_ring.to_norm_one_class</a>  applies?</p>",
        "id": 279580322,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650477393
    },
    {
        "content": "<p>Is \\k a field? If so then this looks promising.</p>",
        "id": 279580377,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650477423
    },
    {
        "content": "<p>Well I guess in the nonarchimedean setting you would not be adding norms together anyways, so it makes sense that you would not have an example like the Frobenius norm</p>",
        "id": 279580411,
        "sender_full_name": "Reid Barton",
        "timestamp": 1650477436
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Is.20the.20zero.20algebra.20normed.3F/near/279580377\">said</a>:</p>\n<blockquote>\n<p>Is \\k a field? If so then this looks promising.</p>\n</blockquote>\n<p>Yes, right now <code>normed_algebra</code> refers only to fields</p>",
        "id": 279580457,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650477472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> , yes, I think that works.</p>",
        "id": 279580725,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650477587
    },
    {
        "content": "<p>Yep:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">norm_one_le</span> <span class=\"o\">:</span> <span class=\"bp\">∥</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"bp\">𝕜'</span><span class=\"o\">)</span><span class=\"bp\">∥</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span>\n<span class=\"k\">calc</span> <span class=\"bp\">∥</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"bp\">𝕜'</span><span class=\"o\">)</span><span class=\"bp\">∥</span> <span class=\"bp\">=</span> <span class=\"bp\">∥</span><span class=\"n\">algebra_map</span> <span class=\"bp\">𝕜</span> <span class=\"bp\">𝕜'</span> <span class=\"mi\">1</span><span class=\"bp\">∥</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"n\">map_one</span>\n            <span class=\"bp\">...</span> <span class=\"bp\">≤</span> <span class=\"bp\">∥</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"bp\">𝕜</span><span class=\"o\">)</span><span class=\"bp\">∥</span> <span class=\"o\">:</span> <span class=\"n\">norm_algebra_map_le</span> <span class=\"n\">_</span> <span class=\"n\">_</span>\n            <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">norm_one</span>\n</code></pre></div>",
        "id": 279581340,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650477805
    },
    {
        "content": "<p>Okay, so the reason it works here and it differs in the literature I read is the following: In my literature, an algebra is basically defined to be a vector space with a compatible (non-unital) ring structure, and then a normed algebra is basically a vector space with a compatible (non-unital) normed ring structure. However, it is never assumed in this context that we have the ring homomorphism <code>algebra_map</code> (or the corresponding condition on the norm), and the reason it is never assumed is that we consider non-unital algebras as first-class citizens, so it wouldn't make sense to have that homomorphism.</p>",
        "id": 279581459,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650477847
    },
    {
        "content": "<p>I guess a related issue is whether \"algebra\" means unital or not. In Bourbaki it does not mean a unital algebra by default.<br>\nIn math, we could perhaps distinguish \"normed unital algebra\" (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">||1|| \\le 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣1∣∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>) and \"unital normed algebra\" (no assumption on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">||1||</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣1∣∣</span></span></span></span>).</p>",
        "id": 279581471,
        "sender_full_name": "Reid Barton",
        "timestamp": 1650477853
    },
    {
        "content": "<p>Does the literature have much to say about semi_normed algebras?</p>",
        "id": 279582720,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650478395
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/116395-maths/topic/Is.20the.20zero.20algebra.20normed.3F/near/279576414\">said</a>:</p>\n<blockquote>\n<p>You're probably already changing it, but I think in <a href=\"https://github.com/leanprover-community/mathlib/pull/13544\">#13544</a> because of the above it makes sense to have everything point the opposite direction. That is, nontrivial → norm_one_class, and then add the nontrivial type class everywhere necessary instead of norm_one_class.</p>\n</blockquote>\n<p>I'm still reluctant to do this, as the reverse direction only holds in a <code>normed_ring</code> not a <code>semi_normed_ring</code>. I also really don't want to open too many cans of worms at once!</p>",
        "id": 279583029,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650478535
    },
    {
        "content": "<p>I understand, but I guess then we can't have <code>normed_algebra</code> + <code>nontrivial</code> → <code>norm_one_class</code> as an instance because of instance loops? That would be a shame.</p>",
        "id": 279583546,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650478778
    },
    {
        "content": "<p>Not even instance loops, we can't have <code>normed_algebra K A</code> - &gt; <code>foo A</code> ever because <code>K</code> is unknown</p>",
        "id": 279585446,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650479637
    },
    {
        "content": "<p>Which is why <a href=\"https://leanprover-community.github.io/mathlib_docs/find/normed_algebra.norm_one_class\">docs#normed_algebra.norm_one_class</a> is not an instance</p>",
        "id": 279585513,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650479652
    },
    {
        "content": "<p>Then I completely agree with you. Adding <code>norm_one_class</code> everywhere necessary is fine with me.</p>",
        "id": 279585766,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650479767
    },
    {
        "content": "<blockquote>\n<p>In that case, the correct condition should I think be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi>a</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi></msub><mo>=</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>R</mi></msub><mo>⋅</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>a</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">||r a||_A = ||r||_R \\cdot ||a||_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n</blockquote>\n<p>I think this is weaker (by itself, as it doesn't imply <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">||1|| ≤ 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣1∣∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>); on the other hand, this weakening means that the frobenius norm on matrices _is_ a normed algebra</p>",
        "id": 279586704,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650480233
    },
    {
        "content": "<p>So maybe <code>normed_algebra</code> should be as you describe there, which is even weaker than what I have in the PR.</p>",
        "id": 279586861,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650480311
    },
    {
        "content": "<p>(or as <code>norm (algebra_map R A r) ≤ norm r * norm (1 : A)</code>, which is <em>probably</em> equivalent but likely easier to prove)</p>",
        "id": 279587044,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650480392
    },
    {
        "content": "<p>In the presence of <code>norm_one_class</code> it's still just the same as what we have now</p>",
        "id": 279587106,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650480426
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> thoughts?</p>",
        "id": 279587177,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650480474
    },
    {
        "content": "<p>The interpretation becomes simply \"a normed algebra is an algebra that is a normed module and a normed ring\"</p>",
        "id": 279587272,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650480516
    },
    {
        "content": "<p>With no extra conditions</p>",
        "id": 279587286,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650480525
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/116395-maths/topic/Is.20the.20zero.20algebra.20normed.3F/near/279552763\">said</a>:</p>\n<blockquote>\n<p>However, I also care a great deal about the case of non-unital algebras. In that case, the correct condition should I think be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi>a</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi></msub><mo>=</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>R</mi></msub><mo>⋅</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>a</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">||r a||_A = ||r||_R \\cdot ||a||_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n</blockquote>\n<p>Do you have <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">=</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.3669em;\"></span><span class=\"mrel\">=</span></span></span></span> and not <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\"application/x-tex\">\\le</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719em;vertical-align:-0.136em;\"></span><span class=\"mrel\">≤</span></span></span></span> because you are assuming <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> is a normed field?</p>",
        "id": 279587369,
        "sender_full_name": "Reid Barton",
        "timestamp": 1650480573
    },
    {
        "content": "<p>Yes, that's the only context in which we currently have <code>normed_algebra</code> in mathlib</p>",
        "id": 279587832,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650480821
    },
    {
        "content": "<p>Note that even though that's the case, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/normed_space/src\">src#normed_space</a> only requires the inequality (and derives <a href=\"https://leanprover-community.github.io/mathlib_docs/find/norm_smul\">docs#norm_smul</a> from it)</p>",
        "id": 279587952,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650480879
    },
    {
        "content": "<p>Do you want me to PR this, putting it right after <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nnnorm_mul_le\">docs#nnnorm_mul_le</a>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">one_le_norm_one</span> <span class=\"o\">(</span><span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">normed_ring</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">nontrivial</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"bp\">∥</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span><span class=\"bp\">∥</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">le_mul_iff_one_le_left</span> <span class=\"bp\">$</span> <span class=\"n\">norm_pos_iff.mpr</span> <span class=\"o\">(</span><span class=\"n\">one_ne_zero</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">mp</span>\n  <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">mul_one</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">norm_mul_le</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">one_le_nnnorm_one</span> <span class=\"o\">(</span><span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">normed_ring</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">nontrivial</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"bp\">∥</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">β</span><span class=\"o\">)</span><span class=\"bp\">∥₊</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"bp\">←</span><span class=\"n\">norm_to_nnreal</span><span class=\"o\">,</span> <span class=\"n\">real.to_nnreal_one</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">real.to_nnreal_mono</span> <span class=\"o\">(</span><span class=\"n\">one_le_norm_one</span> <span class=\"n\">β</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 279589095,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650481400
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/13556\">#13556</a> : you're welcome to push any changes if you want. I put it in the root namespace because I don't think it should clash with anything.</p>",
        "id": 279591872,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1650482879
    },
    {
        "content": "<p>The only thing I have to add is that yes seminormed algebras over a field are a thing. The spectral seminorm plays an important role in nonarchimedean analysis in the sense of Tate; here you would have a field like k=Q_p and then any affinoid k-algebra e.g. k[T]/(T^2) gets a canonical spectral seminorm which in this case would not be a norm because |T|=0.</p>",
        "id": 279610007,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1650492700
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/Is.20the.20zero.20algebra.20normed.3F/near/279587044\">said</a>:</p>\n<blockquote>\n<p>(or as <code>norm (algebra_map R A r) ≤ norm r * norm (1 : A)</code>, which is <em>probably</em> equivalent but likely easier to prove)</p>\n</blockquote>\n<p>I don't think this is equivalent after all</p>\n<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/116395-maths/topic/Is.20the.20zero.20algebra.20normed.3F/near/279531746\">said</a>:</p>\n<blockquote>\n<p>I think the correct way to think about it is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi>a</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi></msub><mo>≤</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>r</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>R</mi></msub><mo>⋅</mo><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><mi>a</mi><mi mathvariant=\"normal\">∣</mi><msub><mi mathvariant=\"normal\">∣</mi><mi>A</mi></msub></mrow><annotation encoding=\"application/x-tex\">||r a||_A \\le ||r||_R \\cdot ||a||_A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">A</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n</blockquote>\n<p>I've modified <a href=\"https://github.com/leanprover-community/mathlib/pull/13544\">#13544</a> to use this definition</p>",
        "id": 279644788,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1650525855
    }
]