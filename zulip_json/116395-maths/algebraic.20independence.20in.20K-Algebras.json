[
    {
        "content": "<p>I want to define algebraic independence for elements </p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_1, ..., x_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>of a K-Algebra A via injectivity of</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>K</mi><mo stretchy=\"false\">[</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy=\"false\">]</mo><mo>→</mo><mi>A</mi><mo separator=\"true\">,</mo><msub><mi>X</mi><mi>i</mi></msub><mo>↦</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">K[X_1, ..., X_n] \\to A, X_i \\mapsto x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">K</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">A</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>Do we already have homomorphisms of algebras?</p>",
        "id": 179055209,
        "sender_full_name": "Lennard Henze",
        "timestamp": 1572014397
    },
    {
        "content": "<p>We definitely have that map, it's called <code>mv_polynomial.eval₂</code></p>",
        "id": 179055341,
        "sender_full_name": "Reid Barton",
        "timestamp": 1572014463
    },
    {
        "content": "<p>Also <code>A →ₐ[K] B</code> is a homomorphism of K-algebras</p>",
        "id": 179055577,
        "sender_full_name": "Reid Barton",
        "timestamp": 1572014611
    },
    {
        "content": "<p>okay not quite sure how to use it jet, but i think ill figure it out! thanks!</p>",
        "id": 179056672,
        "sender_full_name": "Lennard Henze",
        "timestamp": 1572015351
    },
    {
        "content": "<p>is something like this usefull?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">is_algebraic_independent</span> <span class=\"o\">(</span><span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n <span class=\"bp\">&lt;</span><span class=\"n\">injective</span><span class=\"bp\">&gt;</span>  <span class=\"o\">(</span><span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"kn\">eval</span><span class=\"err\">\\</span><span class=\"mi\">2</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"n\">id</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>with a def of injective substituted</p>",
        "id": 179059414,
        "sender_full_name": "Lennard Henze",
        "timestamp": 1572016846
    },
    {
        "content": "<p><code>function.injective</code></p>",
        "id": 179059734,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1572017035
    },
    {
        "content": "<p>also you didn't use <code>Y</code></p>",
        "id": 179059800,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1572017046
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 179060231,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1572017318
    },
    {
        "content": "<p>giving the arguments explicit might work</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">@</span><span class=\"n\">mv_polynomial</span><span class=\"bp\">.</span><span class=\"n\">eval₂</span> <span class=\"bp\">_</span> <span class=\"n\">A</span> <span class=\"n\">Y</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">algebra_map</span> <span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">id</span> <span class=\"n\">Y</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>but than I need to substitute an embedding for (@id Y)<br>\nIs there a better way to find where/how it is defined than \"git-grep emb\"?</p>",
        "id": 179060967,
        "sender_full_name": "Lennard Henze",
        "timestamp": 1572017659
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 179061076,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1572017723
    },
    {
        "content": "<p>you can right click it</p>",
        "id": 179061090,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1572017735
    },
    {
        "content": "<p>my hope is, that K is implicit in the first underscore</p>",
        "id": 179061123,
        "sender_full_name": "Lennard Henze",
        "timestamp": 1572017758
    },
    {
        "content": "<p>yeah I think that works</p>",
        "id": 179061178,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1572017776
    },
    {
        "content": "<p>ahh nice i did not knew that right-clicking jumps to definition, but how can i find the def of an embedding if i dont know the name?^^</p>",
        "id": 179061273,
        "sender_full_name": "Lennard Henze",
        "timestamp": 1572017840
    },
    {
        "content": "<p>but you must have seen the word \"embedding\" somewhere</p>",
        "id": 179061486,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1572017997
    },
    {
        "content": "<p>namely one of the inputs of <code>mv_polynomial.eval\\2</code></p>",
        "id": 179061548,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1572018008
    },
    {
        "content": "<p>mv_polynomial.eval\\2 just wants a definition of a function from the index set to A, but it does not say that it is an embedding. i want to give the function by giving the natural embedding from Y to A</p>",
        "id": 179061804,
        "sender_full_name": "Lennard Henze",
        "timestamp": 1572018152
    },
    {
        "content": "<p>oh, that's just <code>\\lambda x, x : Y \\to A</code></p>",
        "id": 179061856,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1572018191
    },
    {
        "content": "<p>oh yeah makes sense!</p>",
        "id": 179061881,
        "sender_full_name": "Lennard Henze",
        "timestamp": 1572018211
    }
]