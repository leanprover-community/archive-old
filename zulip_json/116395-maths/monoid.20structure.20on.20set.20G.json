[
    {
        "content": "<p>Does mathlib have this monoid struture on subsets of a monoid? If not, should I PR it?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">monoid</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">one</span> <span class=\"o\">:=</span> <span class=\"o\">{</span><span class=\"mi\">1</span><span class=\"o\">},</span>\n    <span class=\"n\">mul</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">S</span> <span class=\"n\">T</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">s</span> <span class=\"bp\">∈</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">t</span> <span class=\"bp\">∈</span> <span class=\"n\">T</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"o\">,</span>\n    <span class=\"n\">one_mul</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n        <span class=\"n\">intro</span> <span class=\"n\">S</span><span class=\"o\">,</span>\n        <span class=\"n\">ext</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n        <span class=\"n\">split</span><span class=\"o\">,</span>\n        <span class=\"o\">{</span> <span class=\"n\">rintro</span> <span class=\"o\">⟨</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"n\">hg</span><span class=\"o\">⟩,</span>\n            <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">hg</span><span class=\"o\">,</span> <span class=\"n\">set.mem_singleton_iff.mp</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"n\">one_mul</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n        <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"bp\">λ</span> <span class=\"n\">hg</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">set.mem_singleton</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">hg</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">one_mul</span> <span class=\"n\">g</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n    <span class=\"kd\">end</span><span class=\"o\">,</span>\n    <span class=\"n\">mul_one</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n        <span class=\"n\">intro</span> <span class=\"n\">S</span><span class=\"o\">,</span>\n        <span class=\"n\">ext</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n        <span class=\"n\">split</span><span class=\"o\">,</span>\n        <span class=\"o\">{</span> <span class=\"n\">rintro</span> <span class=\"o\">⟨</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"n\">hg</span><span class=\"o\">⟩,</span>\n            <span class=\"n\">rwa</span> <span class=\"o\">[</span><span class=\"n\">hg</span><span class=\"o\">,</span> <span class=\"n\">set.mem_singleton_iff.mp</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"n\">mul_one</span><span class=\"o\">]</span> <span class=\"o\">},</span>\n        <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"bp\">λ</span> <span class=\"n\">hg</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">hg</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">set.mem_singleton</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">mul_one</span> <span class=\"n\">g</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">symm</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n    <span class=\"kd\">end</span><span class=\"o\">,</span>\n    <span class=\"n\">mul_assoc</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n        <span class=\"n\">intros</span> <span class=\"n\">S</span> <span class=\"n\">T</span> <span class=\"n\">U</span><span class=\"o\">,</span>\n        <span class=\"n\">ext</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n        <span class=\"n\">split</span><span class=\"o\">,</span>\n        <span class=\"o\">{</span> <span class=\"n\">rintros</span> <span class=\"o\">⟨</span><span class=\"n\">st</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"n\">hst</span><span class=\"o\">⟩,</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"n\">hu</span><span class=\"o\">,</span> <span class=\"n\">hg</span><span class=\"o\">⟩,</span>\n            <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"n\">t</span> <span class=\"bp\">*</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"n\">hu</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩,</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hg</span><span class=\"o\">,</span> <span class=\"n\">hst</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]⟩</span> <span class=\"o\">},</span>\n        <span class=\"o\">{</span> <span class=\"n\">rintros</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"n\">tu</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"n\">hu</span><span class=\"o\">,</span> <span class=\"n\">htu</span><span class=\"o\">⟩,</span> <span class=\"n\">hg</span><span class=\"o\">⟩,</span>\n            <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">s</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"o\">⟨</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">hs</span><span class=\"o\">,</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">ht</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩,</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"n\">hu</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hg</span><span class=\"o\">,</span> <span class=\"n\">htu</span><span class=\"o\">,</span> <span class=\"n\">mul_assoc</span><span class=\"o\">]⟩</span> <span class=\"o\">},</span>\n    <span class=\"kd\">end</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 218188985,
        "sender_full_name": "Thomas Browning",
        "timestamp": 1606611378
    },
    {
        "content": "<p>Yes, it's in <a href=\"https://leanprover-community.github.io/mathlib_docs/algebra/pointwise.html\">https://leanprover-community.github.io/mathlib_docs/algebra/pointwise.html</a></p>",
        "id": 218189208,
        "sender_full_name": "Reid Barton",
        "timestamp": 1606611791
    }
]