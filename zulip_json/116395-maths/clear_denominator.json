[
    {
        "content": "<p>Let's start a new thread about this</p>",
        "id": 127303903,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527681262
    },
    {
        "content": "<p>It's a dream about a tactic called <code>clear_denominator</code></p>",
        "id": 127303917,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527681317
    },
    {
        "content": "<p>Assume the current goal is either an equality or an inequality</p>",
        "id": 127303920,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527681336
    },
    {
        "content": "<p>It has a bunch of +, -, *, /, maybe • (scalar multiplication)</p>",
        "id": 127303973,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527681420
    },
    {
        "content": "<p>we want to get rid of all divisions</p>",
        "id": 127303979,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527681429
    },
    {
        "content": "<p>the tactic walks through the goal and builds a list of all denominators (right-hand argument of a /)</p>",
        "id": 127303981,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527681460
    },
    {
        "content": "<p>It creates sub-goals <code>x ≠ 0</code> for all denominators <code>x</code>, and immediately tries to discharge them by <code>assumption</code> or applying <code>ne_of_gt</code> or <code>ne_of_lt</code> to all assumptions</p>",
        "id": 127304035,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527681545
    },
    {
        "content": "<p>then it multiplies both sides of the goal by the product of all denominators, using the relevant lemmas (assuming the subgoals)</p>",
        "id": 127304043,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527681600
    },
    {
        "content": "<p>and then simplifies the goal to get rid of divisions by using <code>x/x = 1</code></p>",
        "id": 127304095,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527681652
    },
    {
        "content": "<p>Of course nested divisions would be problematic</p>",
        "id": 127304100,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527681665
    },
    {
        "content": "<p>The Cauchy-Schwarz thread is an example where you could use this</p>",
        "id": 127304107,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527681710
    },
    {
        "content": "<p>The inequality case is more difficult because of sign conditions, isn't it? But even in the equality case, the size of the formula to be proved can become quite large. Coq has a <code>field</code> tactic, built on top of <code>ring</code>, that does about the same thing as what you describe I think.</p>",
        "id": 127304282,
        "sender_full_name": "Assia Mahboubi",
        "timestamp": 1527681994
    },
    {
        "content": "<p>Indeed signs matter in inequalities</p>",
        "id": 127304898,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527683125
    },
    {
        "content": "<p>And we clearly need this field tactic (but Mario always want us to suffer instead of using automation)</p>",
        "id": 127304904,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1527683151
    },
    {
        "content": "<p>The <code>field</code> problem is more difficult than the <code>ring</code> one. It probably has to start as a partial procedure, like the one you describe, because a complete one is much more delicate from an algorithmic point of view (you need stuff like subresultants or even may be probabilistic methods otherwise the complexity and growth of the polynomials are dreadful).</p>",
        "id": 127306985,
        "sender_full_name": "Assia Mahboubi",
        "timestamp": 1527686071
    }
]