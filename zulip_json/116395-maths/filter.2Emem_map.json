[
    {
        "content": "<p>Is there any reason that <code>mem_map</code> is in mathlib in this form</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">mem_map</span> <span class=\"o\">:</span> <span class=\"n\">t</span> <span class=\"bp\">∈</span> <span class=\"n\">map</span> <span class=\"n\">m</span> <span class=\"n\">f</span> <span class=\"bp\">↔</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"n\">m</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">t</span><span class=\"o\">}</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">iff.rfl</span>\n</code></pre></div>\n<p>and not in this form</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span> <span class=\"kd\">lemma</span> <span class=\"n\">mem_map</span> <span class=\"o\">:</span> <span class=\"n\">t</span> <span class=\"bp\">∈</span> <span class=\"n\">map</span> <span class=\"n\">m</span> <span class=\"n\">f</span> <span class=\"bp\">↔</span> <span class=\"n\">m</span> <span class=\"bp\">⁻¹'</span> <span class=\"n\">t</span> <span class=\"bp\">∈</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"n\">iff.rfl</span>\n</code></pre></div>\n<p>?</p>",
        "id": 242229262,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1623340666
    },
    {
        "content": "<p>Does <code>set.preimage</code> work here?</p>",
        "id": 242229962,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1623340920
    },
    {
        "content": "<p>This is not the type of <code>t</code></p>",
        "id": 242230055,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623340940
    },
    {
        "content": "<p>I don't see any reason why this lemma should be stated like that.</p>",
        "id": 242230124,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623340963
    },
    {
        "content": "<p>You should try to change it and see whether it breaks anything</p>",
        "id": 242230151,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623340975
    },
    {
        "content": "<p><del>Ah yes, <code>t : \\beta</code>. And I bet it would not work because <code>t</code> is not a <code>set _</code></del></p>",
        "id": 242230473,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1623341105
    },
    {
        "content": "<p><del>You could try <code>m ⁻¹' {t}</code>?</del></p>",
        "id": 242230580,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1623341150
    },
    {
        "content": "<p>Why do you say <code>t</code> is not a set?</p>",
        "id": 242230669,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623341173
    },
    {
        "content": "<p>But I bet the simp-normal form is the one as it is stated</p>",
        "id": 242230677,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1623341176
    },
    {
        "content": "<p>Patrick, you are again correct, and I am confused.</p>",
        "id": 242230713,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1623341194
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/116395-maths/topic/filter.2Emem_map/near/242230124\">said</a>:</p>\n<blockquote>\n<p>I don't see any reason why this lemma should be stated like that.</p>\n</blockquote>\n<p>Like what sorry? You don't see why it is how it is or why it should be how I want it?</p>",
        "id": 242231000,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1623341312
    },
    {
        "content": "<p>I don't why it is stated the way it's currently stated. Maybe this isn't clearer. I mean I agree with you.</p>",
        "id": 242231087,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1623341348
    },
    {
        "content": "<p>Ok thanks I will PR then</p>",
        "id": 242231115,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1623341361
    }
]