[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> did you really meant to write <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/measure_theory/interval_integral.lean#L13-L14\">https://github.com/leanprover-community/mathlib/blob/master/src/measure_theory/interval_integral.lean#L13-L14</a>? It seems inconsistent with the actual <em>definition</em>.</p>",
        "id": 211060503,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1600894180
    },
    {
        "content": "<p>This paragraph describes something that can't be a definition in lean: <code>a=b</code> matches both <code>if</code>s. AFAIR, or guidelines allow mathematically but not formally true descriptions in the docstrings. The actual definition is discussed in the section \"implementation details\". If you prefer to have a formally correct explanation right away, then feel free to reformulate the docstrings.</p>",
        "id": 211061353,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1600894673
    },
    {
        "content": "<p>Maybe that paragraph could contain a very quick warning then.</p>",
        "id": 211061770,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1600894902
    },
    {
        "content": "<p>Since you're here, is there any kind of general procedure to deduce stuff for <code>interval_integral</code> from the corresponding stuff for the general theory?</p>",
        "id": 211061873,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1600894940
    },
    {
        "content": "<p>(I mean in Lean of course, in maths there is no problem)</p>",
        "id": 211061899,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1600894957
    },
    {
        "content": "<p>There are two ways: (1) unfold the definition and rewrite each integral; (2) <code>by_cases h : le_total a b</code> (or some <code>wlog</code>), then <code>simp</code> to a set integral.</p>",
        "id": 211064389,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1600896424
    },
    {
        "content": "<p>Note that <code>∫ x in Ioc a b, f x ∂μ</code> is actually <code>∫ x, f x ∂(μ.restrict (Ioc a b))</code>, so you can apply theorems about <code>∫ x, f x ∂μ</code> directly.</p>",
        "id": 211064513,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1600896483
    },
    {
        "content": "<p>Thanks. I used the first strategy before asking, but I'll keeping the second one in mind as well.</p>",
        "id": 211185767,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1600979358
    },
    {
        "content": "<p>Another related question: do we have an analogue of <code>integrable_on</code> for interval integrals?</p>",
        "id": 211185969,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1600979469
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/interval_integrable\">docs#interval_integrable</a></p>",
        "id": 211190434,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1600981853
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 211190452,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1600981863
    }
]