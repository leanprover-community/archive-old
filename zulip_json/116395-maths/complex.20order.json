[
    {
        "content": "<p>I've just realized that assumption <code>h₂ : 0 &lt; (f x).re ∨ (f x).im ≠ 0</code> of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/has_deriv_at.clog\">docs#has_deriv_at.clog</a> and a bunch of similar lemmas can be formulated as <code>¬ (f x ≤ 0)</code> in locale <code>complex_order</code>, see <a href=\"https://leanprover-community.github.io/mathlib_docs/find/complex.complex_partial_order\">docs#complex.complex_partial_order</a> and its redefinition in <a href=\"https://github.com/leanprover-community/mathlib/issues/9420\">#9420</a>. Why not make it an instance?</p>",
        "id": 255139908,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1632787356
    },
    {
        "content": "<p>I think it was/is controversial to make that order an instance on <code>ℂ</code>, because it is pretty non-canonical.</p>",
        "id": 255140481,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632787688
    },
    {
        "content": "<p>We should probably add some comments about the pros and cons to one of those files.</p>",
        "id": 255140503,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632787705
    },
    {
        "content": "<p>Another solution: define it as an instance, add a library note, and mention it in the docstring of every lemma that depends on <code>complex.partial_order</code>.</p>",
        "id": 255142385,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1632789001
    },
    {
        "content": "<p>I guess, we can have a linter for the docstring requirement.</p>",
        "id": 255142457,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1632789020
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> was one of the proponents of making this an instance. But maybe I don't remember correctly.</p>",
        "id": 255142504,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632789059
    },
    {
        "content": "<p>In any Banach algebra, there's the cone of positive elements. Everyone would be pretty happy saying that there is a partial order on the self-adjoint elements, given by <code>x &gt;= y</code> iff <code>x - y</code> is positive.  Of course, you can extend that definition to the whole Banach algebra if you like: <code>x</code> and <code>y</code> will never be comparable if their difference is not self-adjoint. Is that a useful thing to do? Not obvious. Yury is observing that it's ever so slightly useful for stating some hypotheses concisely.</p>\n<p>I'm still in favour of making it an instance, on the general theme that we like to make our functions \"total\", and so we might as well extend the partial order of self-adjoint elements to a partial order on everything, using \"the default value\" of \"incomparable\". But I agree that not everyone is going to like that <code>-7 + 7i &lt; 1 + 7i</code>.</p>",
        "id": 255149923,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632794663
    },
    {
        "content": "<p>I'm complex-partial-order-agnostic.</p>",
        "id": 255159425,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632802964
    },
    {
        "content": "<p>Yury has a PR that puts the instances in a locale <code>complex_order</code>, which seems a good middle path.</p>",
        "id": 255160193,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632803755
    },
    {
        "content": "<p>0&lt;re or im!=0 is instantly comprehensible to any reader, whereas not z&lt;=0 is instantly confusing</p>",
        "id": 255168162,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632810693
    },
    {
        "content": "<p>I should add that it's not just experts who read mathlib. I sometimes link to mathlib code on Twitter for example as part of my evangelism attempts</p>",
        "id": 255168623,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632810999
    },
    {
        "content": "<p>They were already in this locale. I'm changing the definition from <code>∃ x : real, 0 ≤ x ∧ z + x = w</code> to something about <code>re</code> and <code>im</code>.</p>",
        "id": 255200061,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1632828238
    }
]