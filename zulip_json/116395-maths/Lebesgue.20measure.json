[
    {
        "content": "<p>Do we have n-dimensional Lebesgue measure yet?</p>",
        "id": 175192469,
        "sender_full_name": "Reid Barton",
        "timestamp": 1567963711
    },
    {
        "content": "<p>You can define it using the giry monad. <br>\n<a href=\"#narrow/stream/113488-general/topic/Giry.20monad.20for.20product.20measures\" title=\"#narrow/stream/113488-general/topic/Giry.20monad.20for.20product.20measures\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Giry.20monad.20for.20product.20measures</a></p>",
        "id": 175196167,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1567970468
    },
    {
        "content": "<p>I have some stuff on this but it's in a closed repo -- will push this back to mathlib at somepoint</p>",
        "id": 175196194,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1567970499
    },
    {
        "content": "<p>How do you define <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mi>n</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span></span></span></span></span></span></span></span>?</p>",
        "id": 175197613,
        "sender_full_name": "Reid Barton",
        "timestamp": 1567973077
    },
    {
        "content": "<p>probably an iterated binary product instead of mathlib vectors</p>",
        "id": 175198588,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1567975050
    },
    {
        "content": "<p>Yeah I found working with subtypes very painful so I switched over to iterated binary products.</p>",
        "id": 175199395,
        "sender_full_name": "Koundinya Vajjha",
        "timestamp": 1567976448
    },
    {
        "content": "<p>how about <code>fin n -&gt; \\R</code></p>",
        "id": 175205478,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1567987817
    },
    {
        "content": "<p>For something I was doing recently, I found it useful to give that a name, <code>tuple \\R n</code>. It doesn't save that many keystrokes, but you get to use the projection notation, which is nice.</p>",
        "id": 175248053,
        "sender_full_name": "Jeremy Avigad",
        "timestamp": 1568040261
    },
    {
        "content": "<p>That is perhaps a better name than <code>vector2</code> that is the current name in some local file or other</p>",
        "id": 175250444,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1568041651
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> was arguing for using this type for vectors, I forget if <code>dvector</code> means this or the inductive type in flypitch</p>",
        "id": 175250585,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1568041727
    },
    {
        "content": "<p>In flypitch we define <code>dvector</code> to be the inductive family of vectors. That was before I realized how nice <code>fin n -&gt; \\a</code> is. I think everything we do with <code>dvector</code> in flypitch can be done nicer or equally nice with <code>fin n -&gt; \\a</code>.</p>",
        "id": 175251762,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1568042409
    }
]