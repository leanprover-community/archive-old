[
    {
        "content": "<p>I remember <span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span>  saying something in Orsay about having an interface for polynomials in horner form? What exactly did he mean by this? Is something like this worth having, and is it worth proving the equation lemmas for this, and proving it in a semiring? It does make some proofs easier.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">elab_as_eliminator</span><span class=\"o\">]</span> <span class=\"n\">def</span> <span class=\"n\">rec_on_horner</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">nonzero_comm_ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_eq</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">Sort</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">polynomial</span> <span class=\"n\">α</span><span class=\"o\">),</span>\n  <span class=\"n\">M</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span>\n  <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">p</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">coeff</span> <span class=\"n\">p</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"n\">a</span><span class=\"o\">))</span> <span class=\"bp\">→</span>\n  <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">*</span> <span class=\"n\">X</span><span class=\"o\">))</span> <span class=\"bp\">→</span>\n  <span class=\"n\">M</span> <span class=\"n\">p</span>\n<span class=\"bp\">|</span> <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">M0</span> <span class=\"n\">MC</span> <span class=\"n\">MX</span><span class=\"o\">,</span>\n<span class=\"k\">if</span> <span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"k\">then</span> <span class=\"n\">eq</span><span class=\"bp\">.</span><span class=\"n\">rec_on</span> <span class=\"n\">hp</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"n\">M0</span>\n<span class=\"k\">else</span>\n<span class=\"k\">have</span> <span class=\"n\">wf</span> <span class=\"o\">:</span> <span class=\"n\">degree</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">degree</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n  <span class=\"k\">from</span> <span class=\"n\">degree_div_by_monic_lt</span> <span class=\"bp\">_</span> <span class=\"n\">monic_X</span> <span class=\"n\">hp</span> <span class=\"o\">(</span><span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">degree_X</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">dec_trivial</span><span class=\"o\">),</span>\n<span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"err\">←</span> <span class=\"n\">mod_by_monic_add_div</span> <span class=\"n\">p</span> <span class=\"n\">monic_X</span><span class=\"o\">,</span> <span class=\"n\">mod_by_monic_X</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">coeff_zero_eq_eval_zero</span><span class=\"o\">,</span>\n  <span class=\"n\">add_comm</span><span class=\"o\">,</span> <span class=\"n\">mul_comm</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"bp\">*;</span>\n  <span class=\"n\">exact</span>\n  <span class=\"k\">if</span> <span class=\"n\">hcp0</span> <span class=\"o\">:</span> <span class=\"n\">coeff</span> <span class=\"n\">p</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n  <span class=\"k\">then</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hcp0</span><span class=\"o\">,</span> <span class=\"n\">C_0</span><span class=\"o\">,</span> <span class=\"n\">add_zero</span><span class=\"o\">]</span><span class=\"bp\">;</span>\n    <span class=\"n\">exact</span> <span class=\"n\">MX</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"n\">X</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">hcp0</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">hp</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">rec_on_horner</span> <span class=\"bp\">_</span> <span class=\"n\">M0</span> <span class=\"n\">MC</span> <span class=\"n\">MX</span><span class=\"o\">)</span>\n  <span class=\"k\">else</span> <span class=\"n\">MC</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">coeff_mul_X_zero</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"n\">hcp0</span> <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">hpX0</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"n\">X</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">then</span> <span class=\"k\">show</span> <span class=\"n\">M</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"n\">X</span> <span class=\"bp\">*</span> <span class=\"n\">X</span><span class=\"o\">),</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">hpX0</span><span class=\"o\">,</span> <span class=\"n\">zero_mul</span><span class=\"o\">]</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">M0</span>\n    <span class=\"k\">else</span> <span class=\"n\">MX</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">/</span><span class=\"err\">ₘ</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"n\">hpX0</span> <span class=\"o\">(</span><span class=\"n\">rec_on_horner</span> <span class=\"bp\">_</span> <span class=\"n\">M0</span> <span class=\"n\">MC</span> <span class=\"n\">MX</span><span class=\"o\">))</span>\n<span class=\"n\">using_well_founded</span> <span class=\"o\">{</span><span class=\"n\">dec_tac</span> <span class=\"o\">:=</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">assumption</span><span class=\"o\">}</span>\n</pre></div>",
        "id": 148810007,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1543518620
    },
    {
        "content": "<p>My idea was a little bit different. Instead of using <code>p + C a</code> and assuming <code>coeff p 0 = 0</code> we only use</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">horner</span> <span class=\"n\">p</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">p</span> <span class=\"bp\">*</span> <span class=\"n\">X</span> <span class=\"bp\">+</span> <span class=\"n\">C</span> <span class=\"n\">a</span>\n</pre></div>\n\n\n<p>My hope is that some proofs are easier using this construction, especially proofs about <code>coeff</code> <code>degree</code> etc. <br>\nAnd it would not be limited to a recursor, but would also include a lot of rewrite rules for <code>horner</code>. </p>\n<p>I also tried to define polynomials using the horner scheme, i.e. <code>subtype</code> on <code>list</code> with an additional non-leading zero assumption.</p>",
        "id": 148849553,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1543568512
    }
]