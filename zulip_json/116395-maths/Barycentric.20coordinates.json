[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"240862\">@Oliver Nash</span>, do you think we could use your new <a href=\"https://leanprover-community.github.io/mathlib_docs/find/barycentric_coord\">docs#barycentric_coord</a> to solve this kind of problems?</p>\n<ul>\n<li>Two cevians intersect</li>\n<li>For <code>a b c d : E</code> a vector space (I assume convex space is enough), <code>u ∈ [a, b]</code>,<code>v ∈ [b, c]</code>, <code>w ∈ [c, d]</code>, <code>[u, w]</code> and the triangle <code>avd</code> intersect.</li>\n</ul>\n<p>The second comes up in Stone's separation theorem. This is exactly <a href=\"https://github.com/leanprover-community/mathlib/blob/sperner-again/src/combinatorics/simplicial_complex/stone_separation.lean\">this sorry</a>.</p>",
        "id": 256330009,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1633473500
    },
    {
        "content": "<p>Reading ...</p>",
        "id": 256330077,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1633473546
    },
    {
        "content": "<p>Not sure, sorry!</p>",
        "id": 256330139,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1633473602
    },
    {
        "content": "<p>Plain calculations work, but are very annoying given that weights can be <code>0</code>, which forces unnatural manipulations to get the sum of the weights to be <code>1</code>.</p>",
        "id": 256330164,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1633473603
    },
    {
        "content": "<p>Agreed, though in recent examples in my work this has turned out not so bad.</p>",
        "id": 256330271,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1633473680
    },
    {
        "content": "<p>Hmm... do you have another idea then? Also, I haven't yet figured out what's the condition about these arrangements that make them work.</p>",
        "id": 256330273,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1633473681
    },
    {
        "content": "<p>I'm afraid I've just finished a bottle of wine. Ask me again tomorrow morning ;-)</p>",
        "id": 256330328,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1633473719
    },
    {
        "content": "<p>I've just logged in to do some quick easy stuff!</p>",
        "id": 256330394,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1633473734
    },
    {
        "content": "<p><span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span> I can wait</p>",
        "id": 256330411,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1633473744
    },
    {
        "content": "<p>Incidentally have your lectures resumed yet?</p>",
        "id": 256330419,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1633473747
    },
    {
        "content": "<p>They will, tomorrow supposedly.</p>",
        "id": 256330448,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1633473769
    },
    {
        "content": "<p>Ah right. I'm sure you'll enjoy it! Lots of fun stuff to learn :-)</p>",
        "id": 256330481,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1633473791
    },
    {
        "content": "<p>And not-so-fun example sheets to hand in! But sure enough it will be fine <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 256330517,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1633473823
    },
    {
        "content": "<p>Take care!</p>",
        "id": 256330639,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1633473889
    },
    {
        "content": "<p>Likewise! Off to recharge now.</p>",
        "id": 256330952,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1633474069
    }
]