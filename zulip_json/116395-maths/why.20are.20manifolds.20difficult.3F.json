[
    {
        "content": "<p>This is not a general question about why setting up the full theory of manifolds in Lean is so difficult -- I know part of the reasons why, and I've read some of the module docstrings, but perhaps I've not read the right one.</p>\n<p>This is a specific question about formalising specifically the definition of a smooth (C^infty) manifold. Let's skip corners and C^n functions for now. My memory, which is possibly incorrect, is that Patrick once told me that there is some issue with atlases and that we sometimes cheat. Chris Hughes also made some comment about this which I didn't internalise at the time. I think the issue is something to do with the difference between an atlas and a maximal atlas. My memory is that Patrick claimed that sometimes the books say \"obviously all this stuff works\" but when he actually sat down to think about formalising the details he realised that there were subtleties.</p>\n<p>What has prompted this question is that I've just got an email from Paolo Cascini, the person who teaches manifolds at Imperial right now, saying \"don't you just need as data a bunch of open sets of R^n with some functions (the transition functions) which are known to be diffeomorphic?\" We were talking about Heather's construction of a manifold structure on the n-sphere.</p>\n<p>For a while now it has been on my job list to find out something about the details of what makes this stuff difficult in Lean. For algebraic geometry I now have this coherent story about R[1/fg] not being R[1/f][1/g] and how there is this implicit diagram-chase which is never done in the books, checking that some squares commute. Grothendieck's proof was \"everything is canonical so it must work out\", and it does, but his proof involves using <code>=</code> when comparing localisations in situations where what is really happening is that there is an isomorphism rather than an equality, so he doesn't even notice that there is something which needs to be checked -- he just applies the substitution principle (A = B -&gt; f(A) = f(B)), but for a predicate which is canonical-isomorphism-invariant, something which should be checked but which is never checked in the literature. When I explained this subtlety to de Jong he seemed genuinely interested and he's been teching alg geom at Columbia, and before that at MIT, for a very long time. He made remarks about how some students never seem to get some arguments around this point and he wondered whether this was what was confusing them. It would be nice if I could understand a corresponding story for manifolds which indicated some subtlety which a generic manifolds lecturer might not even notice exists.</p>",
        "id": 225456468,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612693225
    },
    {
        "content": "<p>The main difficulties are of technical nature, with implementation details and type-theoretic difficulties (especially with partially defined functions).</p>\n<p>Let me still mention one mathematical subtlety related to this maximal atlas issue, with the example of the sphere. You can consider a maximal atlas when you consider the sphere as an analytic manifold, or as a smooth manifold. And you also have a functorial construction associating to a manifold its tangent bundle, so you get formally two tangent bundles, the one coming from the analytic structure and the other one coming from the smooth structure. Of course from the mathematical point of view they are the same thing, but from the formal point of view they are completely different stuff, and it should be a theorem that there is a canonical isomorphism between them. And the same goes if you consider a maximal <code>C^1</code> structure, a maximal <code>C^2</code> structure, and so on: each time, you get a new tangent bundle. But then, what is the derivative of a <code>C^1</code> map? Do you want to see it as a map on the <code>C^\\infty</code> tangent bundle, or just on the <code>C^0</code> tangent bundle coming from the <code>C^1</code> structure? But a <code>C^\\infty</code> map is also a <code>C^1</code> map, so you should have a theorem saying that the derivative of this map, seen as a map on the smooth tangent bundle, coincides with the derivative of the very same map seen as a map on the <code>C^0</code> tangent bundle, under the canonical isomorphism I mentioned above. Of course, you will never see a theorem like that in books, because it is just \"obvious\" (is it really?).</p>\n<p>If you want to formalize this in Lean, you can imagine how you run very quickly into trouble, if the definition of the derivative depends on the smoothness class you're considering. The design decision we have currently is to avoid all this by not using maximal atlases for a given smoothness class, but use one fixed (non-maximal) atlas on a manifold, and then use it to define one (and only one) tangent bundle, one (and only one) derivative, and so on. Depending on how nice the atlas is, the tangent bundle will automatically inherit a <code>C^1</code> structure, a smooth structure, an analytic structure, and so on, and everything will be compatible by design.</p>",
        "id": 225458841,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1612696473
    },
    {
        "content": "<p>TLDR: there are a bunch of different objects that usual mathematical practice treats as equal, so using them properly would mean checking that a lot of diagrams commute, which is never done in practice. Does it ring a bell? :-)</p>",
        "id": 225462676,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1612702202
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/why.20are.20manifolds.20difficult.3F/near/225456468\">said</a>:</p>\n<blockquote>\n<p>What has prompted this question is that I've just got an email from Paolo Cascini, the person who teaches manifolds at Imperial right now, saying \"don't you just need as data a bunch of open sets of R^n with some functions (the transition functions) which are known to be diffeomorphic?\" We were talking about Heather's construction of a manifold structure on the n-sphere.</p>\n</blockquote>\n<p>To this point:  Sébastien gave us two ways to make manifolds.  One is the way that Paolo describes here, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/charted_space_core\">docs#charted_space_core</a>.  It is indeed just a bunch of open sets and smooth functions between fixed open subsets.  The manifold (as, eg, a topological space) is then constructed as a quotient of the disjoint union of all the open sets by a certain equivalence relation.</p>\n<p>But the preferred way to construct a manifold is directly from the definition, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/charted_space\">docs#charted_space</a>.  Here we have a <em>pre-existing</em> topological space, charts to it, <em>and</em> the smoothness of the transition functions.  The advantage here is that we get a manifold instance on that pre-existing topological space, here <a href=\"https://leanprover-community.github.io/mathlib_docs/find/metric.sphere\">docs#metric.sphere</a>.  We can pull in all topological facts (compactness, connectedness) from pre-existing theory.</p>\n<p>It's just like how mathlib provides <a href=\"https://leanprover-community.github.io/mathlib_docs/find/uniform_space_of_dist\">docs#uniform_space_of_dist</a>, but it's not the preferred way to construct metric spaces; instead we use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/metric_space\">docs#metric_space</a> which is built on top of a pre-existing uniform space.</p>",
        "id": 225472138,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1612715965
    },
    {
        "content": "<p>Going back to schemes, there is probably something we can learn here. I remember Kenny struggling to make projective 1-space in an earlier incantation of schemes because it was two copies of affine 1-space glued together -- at least this is what it says in the books. Sounds like we should have made the topological space first (e.g. using <code>Proj</code>).</p>",
        "id": 225472231,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612716101
    },
    {
        "content": "<p>Won't that give the Zariski topology? :)</p>",
        "id": 225472306,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1612716203
    },
    {
        "content": "<p>I think one should make projective space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{P}(E)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">P</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span> as a set, provide the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mo>∖</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo stretchy=\"false\">}</mo><mo>→</mo><mi mathvariant=\"double-struck\">P</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">E\\setminus\\{0\\}\\to \\mathbb{P}(E)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∖</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">P</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span>, and then give it the coinduced topology.</p>",
        "id": 225472314,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1612716222
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243562\">@Adam Topaz</span> has been working on this ...</p>",
        "id": 225472355,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1612716253
    },
    {
        "content": "<p>No we really were doing algebraic geometry, this was over some arbitrary commutative ring. I know you guys struggle with just <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> but...</p>",
        "id": 225472360,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612716268
    },
    {
        "content": "<p>Shameless plug: <a href=\"https://github.com/leanprover-community/mathlib/tree/proj-space-quot\">branch#proj-space-quot</a></p>",
        "id": 225472371,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612716296
    },
    {
        "content": "<p>And \"working\" is a strong word.</p>",
        "id": 225472381,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612716310
    },
    {
        "content": "<p>I want projective spaces because I want things like the fundamental theorem of projective geometry, which is one of the main useful things for anabelian geometry. And for that I really do need just the \"classical\" projective spaces.</p>",
        "id": 225472397,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612716359
    },
    {
        "content": "<p>One thing which we see in arithmetic geometry a lot is a place where mathematicians really do not write down the invisible maps in situations where they are actually highly non-trivial -- the analyticification of a complex algebraic variety, i.e. the functor which sends it to a complex analytic space (or complex manifold if the variety is smooth). Sometimes people even use the same notation for both, but people who are being careful use \"X^an\" for the manifold associated to the smooth scheme X of finite type over C.</p>",
        "id": 225472483,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612716449
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/116395-maths/topic/why.20are.20manifolds.20difficult.3F/near/225472314\">said</a>:</p>\n<blockquote>\n<p>I think one should make projective space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{P}(E)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">P</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span> as a set, provide the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mo>∖</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo stretchy=\"false\">}</mo><mo>→</mo><mi mathvariant=\"double-struck\">P</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">E\\setminus\\{0\\}\\to \\mathbb{P}(E)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∖</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mclose\">}</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">P</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span>, and then give it the coinduced topology.</p>\n</blockquote>\n<p>Now that I think about it, does this construction also work to transfer the Zariski topology from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mo>∖</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">E\\setminus\\{0\\}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∖</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mclose\">}</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">P</mi><mo stretchy=\"false\">(</mo><mi>E</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{P}(E)</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">P</span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mclose\">)</span></span></span></span>?</p>",
        "id": 225472691,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1612716748
    },
    {
        "content": "<p>Yes, but the Zariski topology (in the classical sense) is only really useful over algebraically closed fields.</p>",
        "id": 225472702,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612716792
    },
    {
        "content": "<p>Hey! I'm very new to this community so please forgive my naivety and maybe this is offtopic. But I'm getting the feeling that implicit isomorphisms like the ones you describe here are really a central hurdle in formalized mathematics. Mathematicians constantly use various identifications and natural isomorphisms without even thinking about them anymore. Making all of this explicit requires painful amount of care and attention to detail. I remember reading somewhere that in SGA, Grothendieck explicitly blurs the distinction between equality and isomorphism by using the symbol <code>=</code> to denote a \"canonical isomorphism\". Having a CS background, arguments like \"everything is canonical so it must work out\" always remind me of what functional programmers call \"Theorems for free\", which basically states that \"parametricity implies naturality\". This means that whenever you write a function which is parametrically polymorphic (as opposed to ad-hoc polymorphism), then it must automatically be a natural transformation. I've always wondered whether one can make this intuition precise in mathematics as well, stating that whenever a construction is canonical enough, it's automatically natural.</p>",
        "id": 225472789,
        "sender_full_name": "Justus Springer",
        "timestamp": 1612716907
    },
    {
        "content": "<p>I would say that what Kevin described above is more like a coercion. You have the category of schemes over <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span>, say, and some functor (Betti cohomology)  which is defined on complex-analytic things, but there just so happens to be an invisible coercion from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span>-varieties to the complex-analytic category, which some people explicitly write as <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo>↦</mo><msup><mi>X</mi><mrow><mi>a</mi><mi>n</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">X \\mapsto X^{an}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69433em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span></span>.</p>",
        "id": 225472874,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612717026
    },
    {
        "content": "<p>But humans are smart, and they can figure out that when I say \"Consider the Betti cohomology <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>H</mi><mi>i</mi></msup><mo stretchy=\"false\">(</mo><mi>X</mi><mo separator=\"true\">,</mo><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H^i(X,\\mathbb{Z})</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0746639999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span><span class=\"mclose\">)</span></span></span></span> of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span>-variety <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span>.\" that I really want to first pass through this invisible coercion, because Betti cohomology only makes sense after passing to this coercion.</p>",
        "id": 225472958,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612717116
    },
    {
        "content": "<p>A bigger sin IMO is when the author fixes some embedding of a number field into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> and computes things like Betti cohomology by base-change along this embedding (I'm guilty of this sin), because such an embedding is not \"canonical\".</p>",
        "id": 225473141,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612717375
    },
    {
        "content": "<p>But in SGA (and EGA, and plenty of other books on the subject) there is this <code>=</code> trick (you might have read it in something I wrote, I tend to bang on about this in various places) and getting the theorems we wanted for schemes involved refactoring proofs which didn't use universal properties enough.</p>",
        "id": 225473173,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612717408
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/116395-maths/topic/why.20are.20manifolds.20difficult.3F/near/225473141\">said</a>:</p>\n<blockquote>\n<p>A bigger sin IMO is when the author fixes some embedding of a number field into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> and computes things like Betti cohomology by base-change along this embedding (I'm guilty of this sin), because such an embedding is not \"canonical\".</p>\n</blockquote>\n<p>The answers can be different, right? Some early theorem of Serre.</p>",
        "id": 225473186,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612717432
    },
    {
        "content": "<p>[I know this because I once started to read his collected works from the beginning :-)  No, I didn't make it to the end...]</p>",
        "id": 225473236,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612717461
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/116395-maths/topic/why.20are.20manifolds.20difficult.3F/near/225473141\">said</a>:</p>\n<blockquote>\n<p>A bigger sin IMO is when the author fixes some embedding of a number field into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> and computes things like Betti cohomology by base-change along this embedding (I'm guilty of this sin), because such an embedding is not \"canonical\".</p>\n</blockquote>\n<p>Or, God forbid, fixes an embedding of a Riemannian manifold into some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mi>N</mi></msup></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^N</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413309999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathbb\">R</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413309999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></span></span></span></span></span></span> (which exists by Nash's theorem), and defines some functional using this embedding and then checks that it's independent of the embedding.  I have seen many people do this!</p>",
        "id": 225473241,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1612717473
    },
    {
        "content": "<p>The sin is not checking, right?</p>",
        "id": 225473261,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612717511
    },
    {
        "content": "<p>People generally check, I would just prefer to see an alternative construction that doesn't require such an embedding :)</p>",
        "id": 225473300,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1612717558
    },
    {
        "content": "<p>The sin is \"it is easy to see that this construction doesn't depend on the embedding [5].\"</p>\n<p>[5] J. Smith. Private communication (1983).</p>\n<p>(I'm not guilty of this sin...)</p>",
        "id": 225473348,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612717573
    },
    {
        "content": "<p>Concerning the issue of schemes: It seems like the issue that came up here is the lack of API around gluing, right?</p>",
        "id": 225473433,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612717707
    },
    {
        "content": "<p>Right -- this was with a preliminary version anyway. This is just one of many things I want to get around to. But gluing in the category of schemes is not so simple! Pushouts of two morphisms don't exist in general, you have to be careful.</p>",
        "id": 225473519,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612717820
    },
    {
        "content": "<p>Brian Conrad once told me that he couldn't find a reference and sketched some general criteria for when things work. Private communication (1998 or so?)</p>",
        "id": 225473549,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612717893
    },
    {
        "content": "<p>Does it work if all the morphisms in the colimit diagram are open embeddings? I guess no, since you can have some crazy tower of open neighborhoods of something closed, etc.</p>",
        "id": 225473621,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612717976
    },
    {
        "content": "<p>you're saying you want me to find the email??</p>",
        "id": 225473695,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612718078
    },
    {
        "content": "<p>Actually maybe it does work?</p>",
        "id": 225473696,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612718080
    },
    {
        "content": "<p>I'm curious, because I've never seen such a criterion written down.</p>",
        "id": 225473708,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612718101
    },
    {
        "content": "<p>It would be easier to just email Brian again ;-)</p>",
        "id": 225473716,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1612718113
    },
    {
        "content": "<p>Anyway, for gluing schemes, you would just want some descent datum in the Zariski topology... No need to really think about which colimits make sense.</p>",
        "id": 225474640,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1612719430
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/why.20are.20manifolds.20difficult.3F/near/225473186\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/116395-maths/topic/why.20are.20manifolds.20difficult.3F/near/225473141\">said</a>:</p>\n<blockquote>\n<p>A bigger sin IMO is when the author fixes some embedding of a number field into <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">C</span></span></span></span></span> and computes things like Betti cohomology by base-change along this embedding (I'm guilty of this sin), because such an embedding is not \"canonical\".</p>\n</blockquote>\n<p>The answers can be different, right? Some early theorem of Serre.</p>\n</blockquote>\n<p>If you consider the intersection product on singular cohomology you can get different rings. I think an example is in F. Charles's \"Conjugate varieties with distinct real cohomology algebras\"</p>",
        "id": 225475549,
        "sender_full_name": "Roman Bars",
        "timestamp": 1612720872
    },
    {
        "content": "<p>I am a little late for this discussion, but, with respect to gluing of schemes, this paper has some criteria:</p>\n<p><a href=\"https://www.math.utah.edu/~schwede/Papers/SchemeWithoutPoints.pdf\">https://www.math.utah.edu/~schwede/Papers/SchemeWithoutPoints.pdf</a></p>",
        "id": 225802131,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1612942476
    }
]