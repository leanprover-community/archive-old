[
    {
        "content": "<p>Under what hypotheses could I obtain the following theorem? I think <code>nondiscrete_normed_field ùïú</code> is not enough, but maybe I'm missing something. I believe <code>is_R_or_C ùïú</code> is sufficient, but overkill.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"o\">{</span><span class=\"bp\">ùïú</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">normed_field</span> <span class=\"bp\">ùïú</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">‚Ñù</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hr</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ùïú</span><span class=\"o\">,</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">r</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">‚à•</span><span class=\"n\">k</span><span class=\"bp\">‚à•</span> <span class=\"bp\">‚àß</span> <span class=\"bp\">‚à•</span><span class=\"n\">k</span><span class=\"bp\">‚à•</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 289821723,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1657967998
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nondiscrete_normed_field\">docs#nondiscrete_normed_field</a></p>",
        "id": 289826843,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657975987
    },
    {
        "content": "<p>Right so the p-adics would be a nondiscrete normed field counterexample (|p|=1/p, no k if r&lt;1-1/p)</p>",
        "id": 289826913,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657976072
    },
    {
        "content": "<p>What you want is what I'd probably call a non-discretely-valued field; we might not have it. It's a shame, there seem to be 2 uses of the word \"discrete\" going on here. If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mo>:</mo><msup><mi>K</mi><mo>‚àó</mo></msup><mo>‚Üí</mo><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">v:K^*\\to\\R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6887em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6887em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">‚àó</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">‚Üí</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> is a valuation (multiplicative, sending 1 to 1) or norm (additive, sending 1 to 0) then one could use the adjective \"discrete\" to indicate that the induced topology on v coming from the metric is discrete, or one could use it to indicate that the image of v in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> is discrete, and the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>-adics satisfy one but not the other. In BGR they say \"nontrivial\" for what we've called \"nondiscrete\", and say that the valuation is nondiscrete if the image is not discrete (which is what your question is about).</p>",
        "id": 289827431,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657976867
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> the BGR \"nondiscrete\" would correspond to the image being dense, right?</p>",
        "id": 289833785,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1657986078
    },
    {
        "content": "<p>Right. A broad classification of additive subgroups of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">R</mi></mrow><annotation encoding=\"application/x-tex\">\\R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span></span></span></span> is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{0\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mclose\">}</span></span></span></span>, the infinite cyclic ones (one for each element of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"double-struck\">R</mi><mrow><mo>&gt;</mo><mn>0</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\R_{&gt;0}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8663em;vertical-align:-0.1774em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mrel mtight\">&gt;</span><span class=\"mord mtight\">0</span></span></span></span></span><span class=\"vlist-s\">‚Äã</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1774em;\"><span></span></span></span></span></span></span></span></span></span>) and then all the others are topologically dense.</p>",
        "id": 289834656,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657987233
    },
    {
        "content": "<p>You can at least replace <code>is_R_or_C</code> with being a normed algebra over the rationals, right ?</p>",
        "id": 289836799,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1657990368
    },
    {
        "content": "<p>You mean in combination with nondiscrete_normed_field? Otherwise there's the zero algebra. Seems plausible but I don't see the proof.</p>",
        "id": 289837164,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1657990911
    },
    {
        "content": "<p>Oh sorry I thought normed algebra implied that the algebra map was isometric, but it‚Äôs only an inequality</p>",
        "id": 289837733,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1657991744
    },
    {
        "content": "<p>I‚Äôve been fooled by this definition so much times üòÖ</p>",
        "id": 289837784,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1657991780
    },
    {
        "content": "<p>It used to be isometric, but Eric refactored</p>",
        "id": 289838205,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1657992427
    },
    {
        "content": "<p>Oh that‚Äôs why, I thought the fooling was the other way around</p>",
        "id": 289838317,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1657992574
    },
    {
        "content": "<p>But wasn‚Äôt there a plan to also have the isometric version ? Or is it mostly useless ?</p>",
        "id": 289838556,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1657992839
    },
    {
        "content": "<p>You don't want to ban the zero ring</p>",
        "id": 289840507,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657995683
    },
    {
        "content": "<p>IIRC, I think (a) you want the zero ring, and (b) you can recover the isomeric version with norm_one_class</p>",
        "id": 289840517,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1657995720
    },
    {
        "content": "<p>That sounds right to me</p>",
        "id": 289843036,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657998642
    },
    {
        "content": "<p>I think there was a separate discussion by someone else about normed vs valued fields, and which one <code>normed_field</code> should be</p>",
        "id": 289843060,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657998701
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/normed_ring.20vs.20normed_field\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/normed_ring.20vs.20normed_field</a></p>",
        "id": 289843240,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1657998931
    },
    {
        "content": "<p>normed_algebra over Q would not cover examples like the algebraic closure of p-adic fields, which are algebras over Q but not normed_algebras with the default (archimedean) norm on Q. The condition of interest is equivalent to the range of norm being dense in R&gt;=0 and that's a nice lemma to have, but I'm not sure if either of the conditions should become a typeclass.</p>",
        "id": 289844689,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1658001136
    },
    {
        "content": "<p>So, should we have a <code>nondiscretely_valued_field</code> (perhaps with another name)? I'm reasonably sure that I need this lemma to show that the multiplier algebra satisfies the C‚ãÜ-property.</p>",
        "id": 289850931,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658010873
    },
    {
        "content": "<p>I thought the claim in the other thread was that our existing <a href=\"https://leanprover-community.github.io/mathlib_docs/find/nondiscrete_normed_field\">docs#nondiscrete_normed_field</a> is really describing a <code>nondiscrete_valued_field</code></p>",
        "id": 289851079,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1658011150
    },
    {
        "content": "<p>I'm not at all sure about naming, but I think the type class itself makes sense. If there is standard terminology for this, then great.</p>",
        "id": 289853596,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658015305
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span> How did we settle things with the lemma at the top of this thread?  Is it true for <code>nondiscrete_normed_field</code> or does it require a new typeclass?  I was trying to generalize the scalar field in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_linear_map.op_norm_bound_of_ball_bound\">docs#continuous_linear_map.op_norm_bound_of_ball_bound</a> and decided this was what was needed.</p>",
        "id": 290062064,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658214960
    },
    {
        "content": "<p>see <a href=\"https://github.com/leanprover-community/mathlib/tree/nondiscrete-normed-field-facts\">branch#nondiscrete-normed-field-facts</a> (optimistically named)</p>",
        "id": 290062300,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658215154
    },
    {
        "content": "<p>Kevin gave a counterexample. We need a new type class. I'm only waiting because I'm not sure what to call it.</p>",
        "id": 290092856,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658234684
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/116395-maths/topic/hypotheses.20for.20a.20field.20property/near/289850931\">said</a>:</p>\n<blockquote>\n<p>So, should we have a <code>nondiscretely_valued_field</code> (perhaps with another name)? I'm reasonably sure that I need this lemma to show that the multiplier algebra satisfies the C‚ãÜ-property.</p>\n</blockquote>\n<p>If I may, the <code>nondiscrete_normed_field</code> terminology is really misleading. <br>\nIn his book, Berkovich uses a periphrase ‚ÄúAssume that the valuation of k is nontrivial‚Äù  which indicates <code>nontrivial_normed_field</code> would be better.</p>",
        "id": 290093018,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1658234785
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/hypotheses.20for.20a.20field.20property/near/289827431\">said</a>:</p>\n<blockquote>\n<p>In BGR they say \"nontrivial\" for what we've called \"nondiscrete\", and say that the valuation is nondiscrete if the image is not discrete (which is what your question is about).</p>\n</blockquote>\n<p>So now we have two votes in favor of a rename?</p>",
        "id": 290107770,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1658241341
    },
    {
        "content": "<p>I'm in favor of a rename. I was duped into thinking the lemma at the top of the thread was true for the current <code>nondiscrete_normed_field</code> until I tried to prove it.</p>",
        "id": 290112335,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658243110
    },
    {
        "content": "<p>/poll Rename nondiscrete_normed_field to ...<br>\nnontrivial_normed_field<br>\ndon't rename</p>",
        "id": 290113162,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658243424
    },
    {
        "content": "<p>Happy to go with consensus here, thanks for thinking about it!</p>",
        "id": 290121202,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1658246491
    },
    {
        "content": "<p>I am kind of the worst sort of person here. There are people doing functional analysis over R or C and I've done a bit of functional analysis in my time but over the p-adics, so keep looking over at what's going on and saying annoying things like \"oh in p-adic land we do this a bit differently\" but not actually ever doing any formalising, just moaning, which is basically me at my worst. Maybe I should get people working on p-adic functional analysis so we'll begin to notice these issues earlier</p>",
        "id": 290126535,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1658248622
    },
    {
        "content": "<p>I appreciate the insights into p-adics (I've never learned anything about it). Also formalizing functional analysis is really fun and I don't want to bother with really subtle details about derivatives every day <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 290127655,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1658249059
    },
    {
        "content": "<p>I have no strong feelings about the rename, but I agree that the current name might be a bit misleading.</p>",
        "id": 290127999,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1658249209
    },
    {
        "content": "<p>Let me just mention that the current naming <code>nondiscrete_normed_field</code> corresponds exactly to normed fields which are not discrete (i.e., in which <code>0</code> -- or any point -- is not isolated). But if everyone gets confused by this terminology then we can of course change it!</p>",
        "id": 290128465,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1658249434
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span>, for me the main problem with the current name is that I'm not sure what to call \"fields whose image under the norm is dense in ‚Ñù\", and it seems like both Heather and I will need that type class. So, I could be okay with <code>nondiscrete_normed_field</code> as is if there were a viable naming suggestion for the new class. On the other hand, as Antoine and Kevin suggested, it might be good to go with the naming in the literature.</p>",
        "id": 290132293,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658250973
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> personally, I don't mind your \"moaning\". For me, it's helpful to recognize when I'm not making my arguments/objects general enough, especially since in operator algebras ‚ÑÇ is the only field in sight (even ‚Ñù relegated to second class status unless we want to talk about order properties of selfadjoint elements).</p>",
        "id": 290133371,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658251524
    },
    {
        "content": "<p>I need to put my thoughts together about <code>is_R_or_C</code>. I will try to find the time later.</p>",
        "id": 290137551,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1658253504
    },
    {
        "content": "<p>I think <code>nontrivial_normed_field</code> is a bit misleading considering that <code>nontrivial</code> already means containing at least two points and on a cursory inspection of the claim I think that this is not the kind of triviality under consideration</p>",
        "id": 290188596,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1658285795
    },
    {
        "content": "<p>so I tend to agree with <span class=\"user-mention silent\" data-user-id=\"110050\">Sebastien Gouezel</span> that <code>nondiscrete_normed_field</code> is more correct (we also use the word <code>discrete</code> for the top topology and that's exactly the kind of triviality we mean here)</p>",
        "id": 290188623,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1658285859
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197836\">Jireh Loreaux</span> <a href=\"#narrow/stream/116395-maths/topic/hypotheses.20for.20a.20field.20property/near/290132293\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110050\">Sebastien Gouezel</span>, for me the main problem with the current name is that I'm not sure what to call \"fields whose image under the norm is dense in ‚Ñù\", and it seems like both Heather and I will need that type class.</p>\n</blockquote>\n<p>How does this typeclass relate to <code>nondiscrete_normed_field</code>? Naming these as <code>densely_normed_field</code> modulo bikeshedding, it is clear to me that a discrete normed field is not densely normed, and it seems like ostrowski's theorem would say that a nondiscrete normed field is densely normed but perhaps there are some additional conditions like nontriviality (in the sense of having two points) to actually make this an equivalence</p>",
        "id": 290188848,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1658286123
    },
    {
        "content": "<p>Waitwaitwait. Is Sebastien saying \"it is standard in real analysis to name it this way\" or is he saying \"we made this name up, here is a logical reason why it's correct\"? I thought the latter. I'm saying that it's standard in p-adic analysis to use \"discrete\" to mean \"valuation has discrete image\", e.g. \"discrete valuation ring\" or \"discretely-normed field\". This can't happen in real or complex analysis.</p>",
        "id": 290190245,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1658288262
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>, as Kevin mentioned at the top of the thread, the p-adics are a nondiscrete normed field which are not densely normed.</p>\n<p>As for the confusion with nontrivial, I think this can be explained away by the fact that it's its own type class (as opposed to just stacking the two). I thought about this possible confusion. </p>\n<p>Personally, I would prefer the nontrivial / nondiscrete pair in order to be consistent with the literature, but I would be okay with nondiscrete / densely (or similar) pair because it is more precise.</p>",
        "id": 290190594,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658288694
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/hypotheses.20for.20a.20field.20property/near/290190245\">said</a>:</p>\n<blockquote>\n<p>Waitwaitwait. Is Sebastien saying \"it is standard in real analysis to name it this way\" or is he saying \"we made this name up, here is a logical reason why it's correct\"? I thought the latter. I'm saying that it's standard in p-adic analysis to use \"discrete\" to mean \"valuation has discrete image\", e.g. \"discrete valuation ring\" or \"discretely-normed field\". This can't happen in real or complex analysis.</p>\n</blockquote>\n<p>I mean the latter.</p>\n<p>What about the following names: <code>normed_nondiscrete_field</code> for a field which is not discrete (i.e., the norm does not take only the values 0, 1) and <code>nondiscretely_normed_field</code> for a field in which the norm takes dense values? I think they would lift the ambiguity.</p>",
        "id": 290202869,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1658302576
    },
    {
        "content": "<p>How about <code>nontrivially_normed_field</code> for the former? And <code>densely_normed_field</code> for the latter?</p>",
        "id": 290203307,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658302936
    },
    {
        "content": "<p>This also sounds great!</p>",
        "id": 290203506,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1658303084
    },
    {
        "content": "<p>That means that the crazy number theorists with their p-adics can (ab)use discrete norms however they wish /s <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span></p>",
        "id": 290203642,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1658303172
    },
    {
        "content": "<p>Yes, we can add <code>discretely_normed_field</code> to your naming scheme if needed. I think I like it!</p>",
        "id": 290204723,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1658304012
    },
    {
        "content": "<p>Alright, I'm ready to make this happen, but I need to check the consensus, so let's try another poll. I will summarize the thread so that people who vote don't have to read the entire thing. </p>\n<ol>\n<li>There is currently a type class <code>nondiscrete_normed_field</code> (so named because they are precisely the normed fields in which no point is isolated). For the moment we will call this type class <code>X</code></li>\n<li>We have need of a stronger type class on normed fields ensuring that the range of the norm is dense in ‚Ñù. That these classes do not coincide can be shown by considering the $p$-adics. For the moment we will call this type class <code>Y</code>.</li>\n<li>In the literature, <code>X</code> is sometimes called a nontrivial normed field (or a normed field for which the valuation is nontrivial), whereas for <code>Y</code> (perhaps confusingly for users of <code>mathlib</code>) they say the valuation is <code>nondiscrete</code>.</li>\n<li>We definitely need to add a new type class for <code>Y</code>, which needs a name, and we need to consider renaming <code>X</code> depending on what we choose for <code>Y</code>. There have been some proposals above which I have tried to incorporate in the poll below. As always, feel free to add your own suggestions.</li>\n</ol>\n<p>Pinging all the people who were involved in this thread at some point: <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> , <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> , <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> , <span class=\"user-mention\" data-user-id=\"240862\">@Oliver Nash</span> , <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> , <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> , <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> , <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> , <span class=\"user-mention\" data-user-id=\"130609\">@Antoine Chambert-Loir</span> , <span class=\"user-mention\" data-user-id=\"412682\">@Moritz Doll</span> , <span class=\"user-mention\" data-user-id=\"224323\">@Junyan Xu</span> , <span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> , <span class=\"user-mention\" data-user-id=\"387244\">@Ya√´l Dillies</span> , <span class=\"user-mention\" data-user-id=\"268315\">@Anatole Dedecker</span> , <span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span></p>",
        "id": 290408091,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658424755
    },
    {
        "content": "<p>/poll Names for type classes X /  Y above<br>\nnondiscrete_normed_field / densely_normed_field<br>\nnontrivially_normed_field / densely_normed_field<br>\nnontrivially_normed_field / nondiscretely_normed_field<br>\nnontrivial_normed_field / nondiscrete_normed_field<br>\nnormed_nondiscrete_field / nondiscretely_normed_field</p>",
        "id": 290408108,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658424768
    },
    {
        "content": "<p>Are the people who feel like \"discrete\" should mean \"topology generated by |.| on source is discrete\" precisely the people whose norms are archimedean, and those who feel that \"discrete\" should mean \"image of |.| in target is discrete\" precisely the people whose norms are nonarchimedean? I guess it is precisely this point (the choice of the fundamental relationship between <code>norm</code> and <code>+</code>) where the geometric ideas start to diverge (the continuum vs the profinite).</p>",
        "id": 290449924,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1658448376
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/15625\">#15625</a> for the <code>nondiscrete_normed_field</code> ‚Üí <code>nontrivially_normed_field</code> rename; densely normed fields should follow tonight or tomorrow.</p>",
        "id": 290581705,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658535850
    },
    {
        "content": "<p>Argh, this will probably quite conflict with <a href=\"https://github.com/leanprover-community/mathlib/pull/15619\">#15619</a></p>",
        "id": 290618083,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1658588538
    },
    {
        "content": "<p>yeah, I just saw <a href=\"https://github.com/leanprover-community/mathlib/pull/15619\">#15619</a>, sorry. <a href=\"https://github.com/leanprover-community/mathlib/pull/15625\">#15625</a> is on the queue now, so hopefully you can merge it in a few hours.</p>",
        "id": 290621913,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658594028
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/15657\">#15657</a> for the new <code>densely_normed_field</code>.</p>",
        "id": 290654769,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658641638
    },
    {
        "content": "<p>Aaaah, conflicts <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 290668793,
        "sender_full_name": "Ya√´l Dillies",
        "timestamp": 1658663905
    },
    {
        "content": "<p>They should be minor, and I expect yours to be merged first, so it will be my turn to resolve them.</p>",
        "id": 290683131,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1658673097
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> since you needed it: <a href=\"https://github.com/leanprover-community/mathlib/pull/15657\">#15657</a> is merged now.</p>",
        "id": 292826032,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1660162608
    }
]