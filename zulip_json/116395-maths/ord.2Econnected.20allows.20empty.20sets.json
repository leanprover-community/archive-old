[
    {
        "content": "<p>For a <code>preorder  α</code> and <code>s  : set  α</code>,  the definition of <code>set.ord_connected s</code> in says that <code>s</code> is an interval in <code>α</code>.<br>\nI feel that the chosen terminology is not consistent with the corresponding notion in <code>topology.connected </code> where it is required that<br>\nconnected sets are nonempty.</p>",
        "id": 261442573,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1636930346
    },
    {
        "content": "<p>I guess that with the order topology they're not in general connected even if they're nonempty. Maybe connected is a bad word to use here?</p>",
        "id": 261445504,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636934266
    },
    {
        "content": "<p>Yes, there is the issue about connectedness in topology, but my point was to suggest that we define this as<code>set.ord_preconnected</code> <br>\n(and maybe define <code>set.ord_connected</code> for <code>preconnected</code>+<code>nonempty</code>.</p>\n<p>Other possible words would be <code>interval</code> or <code>convex</code>. (See the commentary below <code>set.ord_preconnected</code> in the file.)</p>",
        "id": 261446666,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1636935742
    },
    {
        "content": "<p>(There are less than 150 occurrences of  the subword<code>ord_preconnected</code> in mathlib, in less than 10 files.)</p>",
        "id": 261446828,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1636936006
    },
    {
        "content": "<p>I think <code>set.is_interval</code> would be my preferred terminology.</p>",
        "id": 261480430,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1636972447
    },
    {
        "content": "<p>FWIW in o-minimal structures \"interval\" has a more specific meaning requiring it to be specified by endpoints, e.g., <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mtext> </mtext><mi>a</mi><mo>∈</mo><mi mathvariant=\"double-struck\">Q</mi><mo>∣</mo><msup><mi>a</mi><mn>2</mn></msup><mo>&lt;</mo><mn>2</mn><mtext> </mtext><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{\\,a \\in \\mathbb{Q} \\mid a^2 &lt; 2 \\,\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Q</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∣</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8532em;vertical-align:-0.0391em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mclose\">}</span></span></span></span> is not called an \"interval\"</p>",
        "id": 261495037,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636982192
    },
    {
        "content": "<p>In his book on <em>Tame topology and o-minimal geometry</em>, van den Dries only uses “interval” for open intervals (with named endpoints) and speaks of the the other ones as “convex”. However, in that context, I've seen some authors introducing the lower/upper bounds of an interval (in the classical sense) as types (not necessarily represented in the structure).</p>",
        "id": 261505355,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1636987399
    },
    {
        "content": "<p>Now I'm starting to like this terminology less :)</p>",
        "id": 261505536,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1636987487
    },
    {
        "content": "<p>For me \"convex\" always felt like the obvious name, though I understand that it's also not literally convex in the sense of having an algebraic convex-linear-combination structure (since <code>α</code> might not have any algebraic structure at all)</p>",
        "id": 261506949,
        "sender_full_name": "Reid Barton",
        "timestamp": 1636988043
    },
    {
        "content": "<p>Maybe <code>set.ord_convex</code> would make it invoke convexity without promising literal convexity?</p>",
        "id": 261519497,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1636992817
    },
    {
        "content": "<p>There is a notion of convexity in ordered abelian groups. <br>\nMy feeling is that what we have here is really intervals, with bounds which can be defined in the structure or not, hence the interest of having them, as compared to <code>Icc</code>, <code>Ico</code>, etc. which force us to state the bounds and whether they belong or not to the interval.</p>",
        "id": 261541196,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1637001941
    },
    {
        "content": "<p>Isn't <code>set.ord_connected</code> that it contains every interval, not that it is itself an interval?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">class</span> <span class=\"n\">ord_connected</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">out'</span> <span class=\"o\">⦃</span><span class=\"n\">x</span><span class=\"o\">⦄</span> <span class=\"o\">(</span><span class=\"n\">hx</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">⦃</span><span class=\"n\">y</span><span class=\"o\">⦄</span> <span class=\"o\">(</span><span class=\"n\">hy</span> <span class=\"o\">:</span> <span class=\"n\">y</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">Icc</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">⊆</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>For example, this set of sets doesn't seem to be an interval in any sense:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">set.ord_connected</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℕ</span> <span class=\"bp\">|</span> <span class=\"mi\">1</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span> <span class=\"bp\">∨</span> <span class=\"mi\">2</span> <span class=\"bp\">∈</span> <span class=\"n\">s</span><span class=\"o\">}</span> <span class=\"o\">:=</span>\n<span class=\"o\">⟨</span><span class=\"kd\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">x</span> <span class=\"n\">hx</span> <span class=\"n\">y</span> <span class=\"n\">hy</span> <span class=\"n\">z</span> <span class=\"n\">hz</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">hz</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hx</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hy</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">or.inl</span> <span class=\"o\">(</span><span class=\"n\">hz.1</span> <span class=\"n\">hx</span><span class=\"o\">),</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hy</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">or.inr</span> <span class=\"o\">(</span><span class=\"n\">hz.1</span> <span class=\"n\">hx</span><span class=\"o\">),</span>\n<span class=\"kd\">end</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 261546083,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1637004197
    },
    {
        "content": "<p>mmmmm/</p>",
        "id": 261555191,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1637008400
    },
    {
        "content": "<p>Sorry, my pocket wrote that.</p>",
        "id": 261556297,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1637009059
    }
]