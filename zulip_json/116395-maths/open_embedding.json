[
    {
        "content": "<p>Should <code>open_embedding</code> (an open map which is an embedding) be a class? I want to prove ten things about open embeddings and define some <code>comap</code> stuff (pulling back a bunch of structures along open embeddings). Currently I have this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">topology</span><span class=\"bp\">.</span><span class=\"n\">maps</span>\n\n<span class=\"n\">class</span> <span class=\"n\">open_embedding</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">β</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">Hopen</span> <span class=\"o\">:</span> <span class=\"n\">is_open_map</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">Hembedding</span> <span class=\"o\">:</span> <span class=\"n\">embedding</span> <span class=\"n\">f</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>But then I remember that in core Lean things like <code>bijective f</code> is not defined as a class at all, it's just <code>injective f \\and surjective f</code>. Which is the best approach? What will make things easier later on?</p>",
        "id": 164011451,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556041108
    },
    {
        "content": "<p>I think this is the Stricklandization of the inclusion of an open subset of alpha into alpha</p>",
        "id": 164011702,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1556041288
    },
    {
        "content": "<p>Note that you could also have other hypotheses, like</p>\n<ul>\n<li><code>is_open (set.range f)</code> and <code>embedding f</code>, or</li>\n<li><code>is_open_map f</code> and <code>injective f</code> and <code>continuous f</code><br>\nSo we will likely want several constructors</li>\n</ul>",
        "id": 164014866,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1556043356
    }
]