[
    {
        "content": "<p>Do I understand correctly that we have a file defining group action and a file defining left and right cosets in a group, but no link between those? And we don't have G\\X if G acts on X?</p>",
        "id": 133907297,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536866619
    },
    {
        "content": "<p>we do have orbit-stabalizer theorem, if that's what you mean</p>",
        "id": 133907861,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1536867178
    },
    {
        "content": "<p>I'm not sure exactly  what you mean, but it may well be part of my Sylow PR.</p>",
        "id": 133907907,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536867227
    },
    {
        "content": "<p>No, I don't mean orbit stabilizer. I mean: if G acts on X, quotient X by \"x equivalent to y if there exists g such that y = g x\"</p>",
        "id": 133908423,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536867787
    },
    {
        "content": "<p>This: <a href=\"https://github.com/leanprover/mathlib/pull/257/files#diff-a1c68f03014617e86345e35b6885b923R90\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/257/files#diff-a1c68f03014617e86345e35b6885b923R90\">https://github.com/leanprover/mathlib/pull/257/files#diff-a1c68f03014617e86345e35b6885b923R90</a></p>",
        "id": 133908526,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536867895
    },
    {
        "content": "<p>What is the status of this PR?</p>",
        "id": 133908563,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536867930
    },
    {
        "content": "<p>On hold because of the cardinals of finite sets issue.</p>",
        "id": 133908650,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536867980
    },
    {
        "content": "<p>Is this something someone is working on?</p>",
        "id": 133908941,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536868203
    },
    {
        "content": "<p>Not really.</p>",
        "id": 133908971,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536868251
    },
    {
        "content": "<p>I'm playing with tactics, and hope to be able to write a tactic to deal with it at some point.</p>",
        "id": 133908998,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536868281
    },
    {
        "content": "<p>But it could take a while</p>",
        "id": 133909003,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536868289
    },
    {
        "content": "<p>I could separate out the bits that aren't about finite sets, and PR them first if you're desperate for it. Do you want the fact that G acts on the cosets of a subgroup as well?</p>",
        "id": 133909156,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1536868425
    },
    {
        "content": "<p>I'm not desperate, I wrote:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">group_theory</span><span class=\"bp\">.</span><span class=\"n\">group_action</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">ρ</span> <span class=\"o\">:</span> <span class=\"n\">G</span> <span class=\"bp\">→</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">is_group_action</span> <span class=\"n\">ρ</span><span class=\"o\">]</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">is_group_action</span><span class=\"bp\">.</span><span class=\"n\">inverse_left</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ρ</span> <span class=\"n\">g</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"err\">∘</span> <span class=\"n\">ρ</span> <span class=\"n\">g</span> <span class=\"bp\">=</span> <span class=\"n\">id</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">ext</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">change</span> <span class=\"n\">ρ</span> <span class=\"n\">g</span><span class=\"bp\">⁻¹</span> <span class=\"o\">(</span><span class=\"n\">ρ</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span>  <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">is_monoid_action</span><span class=\"bp\">.</span><span class=\"n\">mul</span> <span class=\"n\">ρ</span> <span class=\"n\">g</span><span class=\"bp\">⁻¹</span> <span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">is_monoid_action</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"n\">ρ</span><span class=\"o\">]</span>\n<span class=\"kn\">end</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">is_group_action</span><span class=\"bp\">.</span><span class=\"n\">inverse_right</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ρ</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"err\">∘</span> <span class=\"n\">ρ</span> <span class=\"n\">g</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span> <span class=\"n\">id</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">simpa</span> <span class=\"kn\">using</span> <span class=\"n\">is_group_action</span><span class=\"bp\">.</span><span class=\"n\">inverse_left</span> <span class=\"n\">ρ</span> <span class=\"n\">g</span><span class=\"bp\">⁻¹</span>\n\n<span class=\"n\">def</span> <span class=\"n\">action_rel</span> <span class=\"o\">:</span> <span class=\"n\">setoid</span> <span class=\"n\">X</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨λ</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"bp\">∃</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">ρ</span> <span class=\"n\">g</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"bp\">⟨λ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">⟨</span><span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">),</span>  <span class=\"n\">is_monoid_action</span><span class=\"bp\">.</span><span class=\"n\">one</span> <span class=\"n\">ρ</span> <span class=\"n\">x</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"k\">begin</span>\n  <span class=\"o\">{</span> <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">rintros</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">⟨</span><span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n      <span class=\"n\">existsi</span> <span class=\"n\">g</span><span class=\"bp\">⁻¹</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"err\">←</span><span class=\"n\">h</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"n\">congr_fun</span> <span class=\"o\">(</span><span class=\"n\">is_group_action</span><span class=\"bp\">.</span><span class=\"n\">inverse_left</span> <span class=\"n\">ρ</span> <span class=\"n\">g</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">rintros</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"bp\">⟨</span><span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">g&#39;</span><span class=\"o\">,</span> <span class=\"n\">h&#39;</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n      <span class=\"n\">existsi</span> <span class=\"n\">g&#39;</span><span class=\"bp\">*</span><span class=\"n\">g</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">is_monoid_action</span><span class=\"bp\">.</span><span class=\"n\">mul</span> <span class=\"n\">ρ</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">h&#39;</span><span class=\"o\">]</span> <span class=\"o\">}</span> <span class=\"o\">}</span>\n  <span class=\"kn\">end</span><span class=\"bp\">⟩⟩</span>\n</pre></div>",
        "id": 133909216,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536868466
    },
    {
        "content": "<p>So I have my setoid</p>",
        "id": 133909233,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536868493
    },
    {
        "content": "<p>I don't think your PR contains much more in this direction</p>",
        "id": 133909249,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536868508
    },
    {
        "content": "<p>Does someone know where is the lemma saying that if a finite set surjects onto a type then this type is finite?</p>",
        "id": 133910622,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536869806
    },
    {
        "content": "<p><code>fintype.of_surjective</code> I guess</p>",
        "id": 133910888,
        "sender_full_name": "Reid Barton",
        "timestamp": 1536870036
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 133911324,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1536870460
    }
]