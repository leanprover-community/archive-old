[
    {
        "content": "<p>Why does an <code>ordered_semiring</code> need to be an <code>add_cancel_comm_monoid</code>?</p>",
        "id": 276147003,
        "sender_full_name": "FR",
        "timestamp": 1647929183
    },
    {
        "content": "<p>This has been a subject of long discussions.  A partial fix comes from using <code>co(ntra)variant_class</code>es, but the refactor is taking me a long time!</p>",
        "id": 276148123,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1647930673
    },
    {
        "content": "<p>In many cases, there is no <code>add_left_cancel</code>. Also, many lemmas do not need it. Would it become more appropriate if we rename the structure and def a new <code>ordered_semiring</code>?</p>",
        "id": 276149137,
        "sender_full_name": "FR",
        "timestamp": 1647931832
    },
    {
        "content": "<p>My understanding is that <code>norm_num</code>, <code>linarith</code> and likely <code>ring</code>, <code>abel</code>, <code>field_simp</code> use <code>ordered_semiring</code> with its assumptions to work.</p>\n<p>Changing the definition of <code>ordered_semiring</code> would break a lot of what is currently in mathlib.  This is the ain reason for not having already done what you suggest.</p>\n<p>At least, this is how I internalised the issue!</p>",
        "id": 276150980,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1647933841
    },
    {
        "content": "<p>I have written a version of <code>algebra/order/ring.lean</code> which <code>ordered_semiring</code> does not need to be an <code>add_cancel_comm_monoid</code>. The previous class is <code>ordered_add_cancel_semiring</code> now. But I'm still confused with <code>canonically_ordered_comm_semiring</code>. I even suspect it is a misspelling of <code>conically_ordered</code>.</p>",
        "id": 276211486,
        "sender_full_name": "FR",
        "timestamp": 1647964804
    },
    {
        "content": "<p>By canonically ordered we mean that <code>a ≤ b ↔ ∃ c, a + c = b</code>. Never heard of a conical order before.</p>",
        "id": 276214083,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1647965770
    },
    {
        "content": "<p>I've seen a similar expression (Conical) in the agda stdlib, although it doesn't refer to exactly the same thing. It doesn't matter. What confuses me is whether a <code>canonically_ordered_comm_semiring</code> is also an <code>ordered_semiring</code>.</p>",
        "id": 276217919,
        "sender_full_name": "FR",
        "timestamp": 1647967183
    },
    {
        "content": "<p>It currently is not, for the precise reason you started this thread.</p>",
        "id": 276218051,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1647967216
    },
    {
        "content": "<p>I wonder if there's a counterexample...</p>",
        "id": 276290265,
        "sender_full_name": "Trebor Huang",
        "timestamp": 1648013205
    },
    {
        "content": "<p>Either I missed some assumptions, or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∞</mi><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{0, 1, \\infty\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∞</span><span class=\"mclose\">}</span></span></span></span> is ...?</p>",
        "id": 276291991,
        "sender_full_name": "Trebor Huang",
        "timestamp": 1648015324
    }
]