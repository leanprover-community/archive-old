[
    {
        "content": "<p>In his 2007 paper <a href=\"http://mizar.org/trybulec65/8.pdf\" title=\"http://mizar.org/trybulec65/8.pdf\">\"The QED Manifesto revisited\"</a> <span class=\"user-mention\" data-user-id=\"217807\">@Freek Wiedijk</span> complains about how no prover at that time was suitable for formalising all of mathematics. I've said to Freek several times that I think Lean is a better candidate but he still moans about it for reasons I don't really understand. However one can look at the issues he raises which he says have not been solved, and then ask whether Lean solves them. For example he complains on p4 of the manuscript that none of the projects that existed at that time \"have solved the difficult problem of how to integrate work by multiple people into a nice coherent whole\". I think mathlib and github have solved that problem better than any of the systems he is talking about. He also highlights four mathematical statements and complains on the same page that none of the systems can \"express all four statements in a good way\". Statements are attached:</p>\n<p><a href=\"/user_uploads/3121/tLiGyjau7D2UUCf7B7dHp3om/freek.png\" title=\"freek.png\">freek.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/tLiGyjau7D2UUCf7B7dHp3om/freek.png\" title=\"freek.png\"><img src=\"/user_uploads/3121/tLiGyjau7D2UUCf7B7dHp3om/freek.png\"></a></div><p>How are we doing with that one? (2) and (3) I am completely happy that we can express naturally. How about (1) and (4)?</p>",
        "id": 192874221,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1585955110
    },
    {
        "content": "<p>I want to say that (4) might be nicely expressible using the framework in the flypitch project: we could write the first-order logic sentence (in the language of set theory) expressing \"2^{\\aleph_0} = \\aleph_2\", and then just write essentially <code>{ZFC + PFA} ⊢'</code> that sentence</p>",
        "id": 192882779,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1585964409
    },
    {
        "content": "<p>I think the challenge in 4 is just to state the axiom PFA at all. I couldn't find a description of it that I could understand.</p>",
        "id": 192883503,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585965398
    },
    {
        "content": "<p>We definitely can already formulate the conclusion <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><msub><mi mathvariant=\"normal\">ℵ</mi><mn>0</mn></msub></msup><mo>=</mo><msub><mi mathvariant=\"normal\">ℵ</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">2^{\\aleph_0} = \\aleph_2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.849108em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">ℵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord\">ℵ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>--it seems this is what the author was mainly concerned about.</p>",
        "id": 192883603,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585965592
    },
    {
        "content": "<p>It's</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">set_theory</span><span class=\"bp\">.</span><span class=\"n\">ordinal</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">cardinal</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"o\">((</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">cardinal</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">})</span> <span class=\"err\">^</span> <span class=\"n\">omega</span><span class=\"bp\">.</span><span class=\"o\">{</span><span class=\"mi\">0</span><span class=\"o\">}</span> <span class=\"bp\">=</span> <span class=\"n\">aleph</span> <span class=\"mi\">2</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 192883746,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585965786
    },
    {
        "content": "<p>I was hoping PFA was some obscure statement about infinite combinatorics but it seems to really be an obscure statement about set-theoretic forcing</p>",
        "id": 192883829,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585965896
    },
    {
        "content": "<p>or more precisely, it involves quantifying over all the formulas of the language of set theory</p>",
        "id": 192883909,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585965982
    },
    {
        "content": "<p>I don't see the difficulty there - once we have the basic definitions of forcing at least. Defining a stationary subset (see eg Def 8.1 of Jech Set Theory) of a regular uncountable cardinal is easy (and defining a regular uncountable cardinal should be easy if it's not already done), then given a forcing P we can define the generic model - from here we can easily define what a proper forcing is (I'm using Def 31.1 of Jech), and then PFA is easy (density and such are one liners). In particular I don't think we ever need to quantify over all formulas in the language of set theory, this is the sort of thing the forcing theorem and generic model theorem should fix nicely</p>",
        "id": 192886190,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1585969343
    },
    {
        "content": "<p>I might be missing some subtlety though</p>",
        "id": 192886191,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1585969355
    },
    {
        "content": "<p>The difficulty is I don't know what forcing is.</p>",
        "id": 192886258,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585969490
    },
    {
        "content": "<p>Wait, maybe not. Maybe you found a different formulation of the axiom than the ones I found.</p>",
        "id": 192886277,
        "sender_full_name": "Reid Barton",
        "timestamp": 1585969517
    },
    {
        "content": "<p>I'm using the one on wikipedia and the one in Jech Set Theory</p>",
        "id": 192886975,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1585970742
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110032\">Reid Barton</span> <a href=\"#narrow/stream/116395-maths/topic/Wiedijk's.20.22Benchmark.22/near/192886258\" title=\"#narrow/stream/116395-maths/topic/Wiedijk's.20.22Benchmark.22/near/192886258\">said</a>:</p>\n<blockquote>\n<p>The difficulty is I don't know what forcing is.</p>\n</blockquote>\n<p>I should warn you that forcing is an unsolved problem in exposition - although the best I've read so far is <a href=\"https://arxiv.org/abs/0712.1320\" title=\"https://arxiv.org/abs/0712.1320\">https://arxiv.org/abs/0712.1320</a></p>",
        "id": 192898207,
        "sender_full_name": "Patrick Stevens",
        "timestamp": 1585991084
    },
    {
        "content": "<p>In any case, hasn't the flypitch project shown that lean can definitely define cohen forcing</p>",
        "id": 192907706,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1586007030
    },
    {
        "content": "<p>Maybe but I doubt it can be used to say anything about the cardinals in data.cardinal</p>",
        "id": 192908591,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586008425
    },
    {
        "content": "<p>(or wherever they are, sorry)</p>",
        "id": 192908637,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586008451
    },
    {
        "content": "<p>Yeah I agree with that, I think the sensible way to formulate (4) would be defining cardinals in the language of set theory using the definitions from flypitch rather than <code>set_theory.ordinal</code> cardinals</p>",
        "id": 192908697,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1586008514
    },
    {
        "content": "<p>Note that flypitch only defines a very limited class of forcing models.  Essentially just <code>Setᵤ</code> and <code>Setᵤ[G]</code> (where <code>Setᵤ</code> is the collection of sets with cardinality less than <code>Type u</code> as defined in Lean).<br>\nBut even with that you can still define <code>properᵤ</code> (i.e., proper in <code>Setᵤ</code>) and <code>PFUᵤ</code>.  From there you should be able to prove that <code>PFU₀ → Setᵤ ⊧ 2^ℵ₀ = ℵ₂ </code> and I believe this should be equivalent to <code>2^ℵ₀ = ℵ₂</code></p>",
        "id": 192908714,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1586008554
    },
    {
        "content": "<p>I believe the ordinals and cardinals in <code>Setᵤ</code> and <code>Type (u+1)</code> are isomorphic.</p>",
        "id": 192908766,
        "sender_full_name": "Gabriel Ebner",
        "timestamp": 1586008609
    }
]