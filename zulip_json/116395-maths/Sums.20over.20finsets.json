[
    {
        "content": "<p>I'm stuck on the following triviality</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">sums</span> <span class=\"o\">{</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">m</span> <span class=\"bp\">→</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span>\n<span class=\"o\">:</span> <span class=\"n\">sum</span> <span class=\"n\">univ</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"n\">univ</span><span class=\"bp\">.</span><span class=\"n\">filter</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"n\">j</span><span class=\"o\">))</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">sum</span> <span class=\"n\">univ</span> <span class=\"n\">x</span>\n<span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</pre></div>\n\n\n<p>It looks like I might want to use <code>finset.sum_sigma</code> but I don't see how to get all the sigma's in place. And the unification magic doesn't do the job either.</p>",
        "id": 126924811,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1526998147
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span>  I remember that you were also working on these kind of sum-rewritings about 2 months ago. Is this similar to what you did?</p>",
        "id": 126924898,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1526998215
    },
    {
        "content": "<p>you can use <code>finset.sum_bind</code> to combine both sum to a single one and then use extensionality that the combination of the index sets on the right is <code>univ</code>. Or use <code>finset.sum_subset</code>  which also uses some sort of extensionality.</p>",
        "id": 126925378,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1526998714
    },
    {
        "content": "<p>Ok, thanks!</p>",
        "id": 126925926,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1526999293
    },
    {
        "content": "<p>Ok, I proved the lemma using <code>bind</code> and <code>ext.2</code>. Thanks a lot!</p>",
        "id": 126933905,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1527009625
    }
]