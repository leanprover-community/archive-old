[
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/star_module\">docs#star_module</a> has as its defining property that:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">star_smul</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">star</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">•</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">star</span> <span class=\"n\">r</span> <span class=\"bp\">•</span> <span class=\"n\">star</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>Is this the right choice of definition? Would we expect<code>star_module ℍ[R] (ι → ℍ[R])</code>to be true? (it's not with this definition)</p>\n<p>If so, then a better definition might be</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">star_smul</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">star</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">•</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">op</span> <span class=\"o\">(</span><span class=\"n\">star</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">star</span> <span class=\"n\">a</span>\n</code></pre></div>",
        "id": 257272767,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634073030
    },
    {
        "content": "<p>It does seem like the definition forces the action to be commutative, that is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>s</mi><mi>a</mi><mo>=</mo><mi>s</mi><mi>r</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">rsa = sra</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">rs</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">sr</span><span class=\"mord mathnormal\">a</span></span></span></span> for any <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo>∈</mo><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">s \\in R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">a \\in A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>, even when <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> itself is not commutative. Equivalently the action factors through the commutative ring <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi mathvariant=\"normal\">/</mi><mo stretchy=\"false\">[</mo><mi>R</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">R/[R,R]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\">/</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">]</span></span></span></span>. This is under the other assumptions listed at <a href=\"https://leanprover-community.github.io/mathlib_docs/find/star_module\">docs#star_module</a> (<code>star</code> is involutive and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span>-module, etc.)</p>",
        "id": 257343426,
        "sender_full_name": "Reid Barton",
        "timestamp": 1634121227
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/Is.20star_module.20sensible.20for.20non-commutative.20rings.3F/near/257272767\">said</a>:</p>\n<blockquote>\n<p>If so, then a better definition might be</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">star_smul</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span><span class=\"o\">),</span> <span class=\"n\">star</span> <span class=\"o\">(</span><span class=\"n\">r</span> <span class=\"bp\">•</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">op</span> <span class=\"o\">(</span><span class=\"n\">star</span> <span class=\"n\">r</span><span class=\"o\">)</span> <span class=\"bp\">•</span> <span class=\"n\">star</span> <span class=\"n\">a</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>I'm not sure what this is supposed to mean, are you suggesting that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> should be a bimodule?</p>",
        "id": 257343492,
        "sender_full_name": "Reid Barton",
        "timestamp": 1634121251
    },
    {
        "content": "<p>I guess the intended examples of <code>star_module</code> in its current form are with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span></span></span></span> a commutative ring but with nontrivial <code>star</code> structure, like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord mathbb\">C</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">C</mi><mo stretchy=\"false\">[</mo><mi>X</mi><mo separator=\"true\">,</mo><mi>Y</mi><mo separator=\"true\">,</mo><mi>Z</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{C}[X,Y,Z]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">C</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">Z</span><span class=\"mclose\">]</span></span></span></span> or the ring of continuous complex-valued functions on some space. In that case it does seem more useful to consider modules (e.g. sections of a complex vector bundle with a real structure), not bimodules.</p>",
        "id": 257345450,
        "sender_full_name": "Reid Barton",
        "timestamp": 1634122463
    },
    {
        "content": "<blockquote>\n<p>I'm not sure what this is supposed to mean, are you suggesting that A should be a bimodule?</p>\n</blockquote>\n<p>Yes, I'm suggesting it should apply to cases when A is a left- and right- R-module. Is there a reason to avoid bi-modules beside the obvious lack of API around them?</p>",
        "id": 257350254,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634125214
    },
    {
        "content": "<p>For commutative rings you could have a typeclass <code>equal_bimodule R A</code> that says <code>op r • a = r • a</code>, to make all the <code>op</code>s go away for the cases like the ones you describe.</p>",
        "id": 257350544,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634125399
    },
    {
        "content": "<p>If all you care about is modules over a commutative ring then it's a bit artificial to instead treat them as bimodules where the two actions agree. Otherwise, I agree with what you say.</p>",
        "id": 257351898,
        "sender_full_name": "Reid Barton",
        "timestamp": 1634126116
    },
    {
        "content": "<p>Would any of <code>symmetric_bimodule</code>, <code>simple_bimodule</code>, and <code>trivial_bimodule</code> be a better name?</p>",
        "id": 257352638,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634126459
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/Is.20star_module.20sensible.20for.20non-commutative.20rings.3F/near/257352638\">said</a>:</p>\n<blockquote>\n<p>Would any of <code>symmetric_bimodule</code>, <code>simple_bimodule</code>, and <code>trivial_bimodule</code> be a better name?</p>\n</blockquote>\n<p>This now exists as <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_central_scalar\">docs#is_central_scalar</a>, which has about 50 instances.</p>",
        "id": 281138358,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651661638
    },
    {
        "content": "<p>I'm now running into some other annoyances with <code>star_module</code> in <a href=\"https://github.com/leanprover-community/mathlib/pull/13938\">#13938</a></p>",
        "id": 281138420,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651661659
    },
    {
        "content": "<p>Should we put a trivial star structure on <code>nat</code>, <code>int</code>, and <code>rat</code> so that we can make those actions count as star modules?</p>",
        "id": 281138434,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1651661677
    }
]