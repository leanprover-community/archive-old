[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110294\">@Johannes Hölzl</span> The next thing we discussed in Amsterdam was <code>def uniformity {α : Type*} [uniform_space α] : filter (α × α) :=\n(@uniform_space.to_core α _).uniformity</code>. There are a lot of places where we see <code>@uniformity α _</code> but also a lot of place where <code>α</code> is indeed inferred. <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> seemed to think we should make <code>α</code> an explicit argument in this definition. This is not an easy decision. Simply changing the argument type results in a <em>lot</em> or errors in <code>uniform_space.basic</code>. So I won't PR this change before discussing it more. My opinion is we should change it anyway, because I find many statements and goals confusing because it says <code>uniformity</code> without saying what is the base type. Of course there are intermediate options, like having two defs, but I fear this will lead to pain. I'm also in favor of having a local notation for this, as in my Amsterdam talk (I use mathcal U for the def with explicit α).</p>",
        "id": 160274994,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1552037073
    },
    {
        "content": "<p>I'm fine with this change i think replacing <code>([^@])uniformity</code> with <code>\\1(uniformity _)</code> should solve most errors.</p>",
        "id": 160295012,
        "sender_full_name": "Johannes Hölzl",
        "timestamp": 1552056164
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/814\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/pull/814\">https://github.com/leanprover-community/mathlib/pull/814</a></p>",
        "id": 160561881,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1552389820
    },
    {
        "content": "<p>Lol, the <code>@uniformity</code> in the commit message confuses GitHub, who thinks we are trying to mention a user. If you've always been looking for a nice GitHub handle... here's your chance: @uniformity is currently free.</p>",
        "id": 160575714,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1552401601
    },
    {
        "content": "<p>And congrats to <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> for getting this in mathlib. Thanks for doing all this tedious work! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <span aria-label=\"octopus\" class=\"emoji emoji-1f419\" role=\"img\" title=\"octopus\">:octopus:</span></p>",
        "id": 160575797,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1552401631
    }
]