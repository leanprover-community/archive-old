[
    {
        "content": "<p><code>simp</code> lemmas in <code>set_theory.cardinal</code> simplify, e.g., <code>#α * #β</code> to <code>#(α×β)</code>, and similarly for other operations. This seems counter-intuitive for me. I think that <code>simp</code> should be able to compute cardinality of a complex type by applying <code>simp</code> lemmas (e.g., simplify <code>#(nat → rat)</code> to <code>ω ^ ω</code>). Any objections to a refactor?</p>",
        "id": 254645057,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1632454314
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span> <span aria-label=\"up\" class=\"emoji emoji-2b06\" role=\"img\" title=\"up\">:up:</span></p>",
        "id": 254646968,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1632455973
    },
    {
        "content": "<p>I agree, the simp lemma should go the other way there</p>",
        "id": 254647843,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1632456699
    },
    {
        "content": "<p>Yes, that seems good.</p>\n<p>presumably the original motivation was \"we just defined multiplication, how do we evaluate it on constructors,\" but the other way around makes more sense.</p>",
        "id": 254817745,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1632555189
    }
]