[
    {
        "content": "<p>I am trying to prove a property of Bernoulli polynomials, for which I need to use the lemma <code>tsum_eq_zero_iff</code>. However, I end up with some strange error every time I try to use it : </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">number_theory.bernoulli</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.nat.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis.complex.roots_of_unity</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.complex.exponential</span>\n<span class=\"kn\">import</span> <span class=\"n\">topology.algebra.infinite_sum</span>\n\n<span class=\"kd\">noncomputable theory</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kd\">class</span> <span class=\"n\">ber</span> <span class=\"o\">(</span><span class=\"n\">bernoulli_polynomial</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">ber</span> <span class=\"o\">:</span>  <span class=\"bp\">∀</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∑'</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">bernoulli_polynomial</span> <span class=\"n\">i</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"bp\">^</span><span class=\"n\">i</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">nat.factorial</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"bp\">*</span> <span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"o\">)</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"n\">t</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">)</span> <span class=\"o\">)</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">bernoulli_polynomial</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ber</span> <span class=\"n\">B</span><span class=\"o\">]</span>\n<span class=\"c1\">--def bernoulli_polynomial (n : ℕ) : ℂ → ℂ := λ X, ∑' i : fin (n+1), (bernoulli n)*(nat.choose n i)*(X^(n-i))</span>\n<span class=\"c1\">--def bernoulli_polynomial (n : ℕ) : ℂ → ℂ := B n</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">exp_bernoulli_poly</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∑'</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">i</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"bp\">^</span><span class=\"n\">i</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">nat.factorial</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"bp\">*</span> <span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"o\">)</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"n\">t</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">ber.ber</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">exp_bernoulli</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">∑'</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"o\">((</span><span class=\"n\">bernoulli</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">t</span><span class=\"bp\">^</span><span class=\"n\">i</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">nat.factorial</span> <span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"bp\">/</span><span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"n\">t</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">sorry</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">bernoulli_polynomial_eq_sum</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">B</span> <span class=\"n\">n</span> <span class=\"n\">X</span> <span class=\"bp\">=</span> <span class=\"bp\">∑'</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">),</span> <span class=\"o\">(</span><span class=\"n\">bernoulli</span> <span class=\"n\">n</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">nat.choose</span> <span class=\"n\">n</span> <span class=\"n\">i</span><span class=\"o\">)</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">X</span><span class=\"bp\">^</span><span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">-</span><span class=\"n\">i</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">one_sub_eq_neg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"mi\">1</span><span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"n\">n</span> <span class=\"n\">X</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rintros</span> <span class=\"n\">n</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:=</span> <span class=\"n\">exp_bernoulli_poly</span> <span class=\"n\">B</span> <span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">X</span><span class=\"o\">),</span>\n  <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">h'</span> <span class=\"o\">:=</span> <span class=\"n\">exp_bernoulli_poly</span> <span class=\"n\">B</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n  <span class=\"n\">simp</span> <span class=\"n\">at</span> <span class=\"n\">h'</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">-</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">1</span><span class=\"o\">),</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">f</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">&lt;-</span><span class=\"n\">h'</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">&lt;-</span><span class=\"n\">sub_eq_zero_iff_eq</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">&lt;-</span><span class=\"n\">tsum_sub</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">b.factorial</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">B</span> <span class=\"n\">b</span> <span class=\"n\">X</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">b</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">b.factorial</span><span class=\"o\">)),</span>\n  <span class=\"k\">have</span> <span class=\"n\">g'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑'</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">g''</span> <span class=\"o\">:</span> <span class=\"n\">summable</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">f'</span> <span class=\"o\">:=</span> <span class=\"n\">tsum_eq_zero_iff</span> <span class=\"n\">g''</span> <span class=\"n\">g'</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>The second last line gives me a deterministic timeout.</p>\n<p>Any help is appreciated, thank you!</p>",
        "id": 218738172,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1607021704
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">one_sub_eq_neg</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">((</span><span class=\"mi\">1</span><span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"n\">n</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"n\">n</span> <span class=\"n\">X</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rintros</span> <span class=\"n\">n</span> <span class=\"n\">X</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℂ</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"n\">b</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">-</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">b.factorial</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"n\">B</span> <span class=\"n\">b</span> <span class=\"n\">X</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">^</span> <span class=\"n\">b</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">b.factorial</span><span class=\"o\">)),</span>\n  <span class=\"k\">have</span> <span class=\"n\">g'</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∑'</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">g''</span> <span class=\"o\">:</span> <span class=\"n\">summable</span> <span class=\"n\">g</span><span class=\"o\">,</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">f'</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">tsum_eq_zero_iff</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">g</span><span class=\"o\">,</span> <span class=\"c1\">-- it's failing to find `canonically_ordered_add_monoid ℂ` here</span>\n  <span class=\"n\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 218742361,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1607023584
    },
    {
        "content": "<p><code>ℂ</code> isn't a canonically ordered monoid for a couple reasons</p>",
        "id": 218744187,
        "sender_full_name": "Reid Barton",
        "timestamp": 1607024508
    },
    {
        "content": "<p>Ah, I see now. Thank you!</p>",
        "id": 218794050,
        "sender_full_name": "Ashvni Narayanan",
        "timestamp": 1607057239
    }
]