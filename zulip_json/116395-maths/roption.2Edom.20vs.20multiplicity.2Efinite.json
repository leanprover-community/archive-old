[
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/multiplicity.finite\">docs#multiplicity.finite</a> and</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">finite_iff_dom</span> <span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"o\">((</span><span class=\"bp\">∣</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"kt\">Prop</span><span class=\"o\">)]</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">finite</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">multiplicity</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">dom</span> <span class=\"o\">:=</span> <span class=\"n\">iff.rfl</span>\n</code></pre></div>\n<p>what do people think of defining <code>enat.finite</code> instead (as abbreviation for <code>roption.dom</code>)?<br>\nBecause <code>data.nat.enat</code> has many occurences of <code>x.dom</code> for some <code>x : enat</code>, and I think <code>x.finite</code> looks much better.</p>",
        "id": 221056182,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1609156762
    },
    {
        "content": "<p>Maybe <code>enat.finite</code> shouldn't replace <code>multiplicity.finite</code>... both defs could coexist.</p>",
        "id": 221056734,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1609157444
    }
]