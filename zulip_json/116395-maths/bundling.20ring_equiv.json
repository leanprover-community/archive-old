[
    {
        "content": "<p>Currently we have</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">structure</span> <span class=\"n\">ring_equiv</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"kn\">extends</span> <span class=\"n\">α</span> <span class=\"err\">≃</span> <span class=\"n\">β</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">hom</span> <span class=\"o\">:</span> <span class=\"n\">is_ring_hom</span> <span class=\"n\">to_fun</span><span class=\"o\">)</span>\n\n<span class=\"kn\">infix</span> <span class=\"bp\">`</span> <span class=\"err\">≃</span><span class=\"n\">r</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">25</span> <span class=\"o\">:=</span> <span class=\"n\">ring_equiv</span>\n</pre></div>\n\n\n<p>I am on a bundling mission at the minute, and propose changing the definition to</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">structure</span> <span class=\"n\">ring_equiv</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">β</span><span class=\"o\">]</span> <span class=\"kn\">extends</span> <span class=\"n\">α</span> <span class=\"err\">≃</span> <span class=\"n\">β</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">map_add&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">to_fun</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">to_fun</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">to_fun</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">map_mul&#39;</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">to_fun</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">to_fun</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">to_fun</span> <span class=\"n\">y</span><span class=\"o\">)</span>\n\n<span class=\"kn\">infix</span> <span class=\"bp\">`</span> <span class=\"err\">≃</span><span class=\"bp\">+*</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">25</span> <span class=\"o\">:=</span> <span class=\"n\">ring_equiv</span>\n</pre></div>\n\n\n<p>The field changes are so we can move away from <code>is_ring_hom</code> in general. The notation change is to align the notation for ring equivs with <code> ≃* </code> and <code> ≃+ </code>, which are monoid equivs and add_monoid equivs.</p>\n<p>Would this change be welcome?</p>",
        "id": 172067031,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1564513666
    },
    {
        "content": "<p>Oh -- the primes are because <code>to_fun</code> is not the canonical notation -- I am proposing a coe to fun and then defining <code>map_add</code> etc using the coercion notation.</p>",
        "id": 172067132,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1564513747
    },
    {
        "content": "<p>I have spent some time over the last few weeks trying to imagine a coherent bundled algebraic hierarchy, with subthings, morphisms, equivs all bundled, and this PR suggestion is somehow the sort of thing that comes out of it.</p>",
        "id": 172067258,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1564513843
    },
    {
        "content": "<p>This change would be welcome.</p>",
        "id": 172067753,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1564514235
    },
    {
        "content": "<p>Sounds good to me</p>",
        "id": 172068484,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1564514825
    }
]