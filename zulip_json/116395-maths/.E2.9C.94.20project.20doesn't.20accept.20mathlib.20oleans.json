[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/project.20doesn't.20accept.20mathlib.20oleans/near/305795381\">said</a>:</p>\n<blockquote>\n<p>I don't understand why you would expect <code>lean --make src</code>, a command which builds lean files directly and has nothing to do with python, to print out a message which a python program prints out when attempting to access the internet to find olean files.</p>\n</blockquote>\n<p>I didn't expect that, sorry. I just completely misunderstood your above post, I think</p>",
        "id": 305799469,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1666611744
    },
    {
        "content": "<p>Sorry :-)</p>",
        "id": 305799567,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666611790
    },
    {
        "content": "<p>Let me know if you have any questions, I'm standing in a queue in a bank right now</p>",
        "id": 305799598,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666611807
    },
    {
        "content": "<p>What I'm conjecturing is that you were working on some other lean project using the same version of lean, accidentally corrupted it and then this causes mathlib oleans to be rejected</p>",
        "id": 305799824,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666611886
    },
    {
        "content": "<p>So nuke the version of lean stored in .elan corresponding to the version being used by your project</p>",
        "id": 305799910,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666611916
    },
    {
        "content": "<p>Thanks, will try that</p>",
        "id": 305800052,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1666611965
    },
    {
        "content": "<p>You have to nuke two things</p>",
        "id": 305800109,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666611993
    },
    {
        "content": "<p>Thanks, that solved it!! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 305800874,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1666612357
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110789\">Jakob von Raumer</span> has marked this topic as resolved.</p>",
        "id": 305800878,
        "sender_full_name": "Notification Bot",
        "timestamp": 1666612360
    },
    {
        "content": "<p>Sorry for not being clearer earlier</p>",
        "id": 305803274,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666613183
    },
    {
        "content": "<p>I somehow didn'r really expect it a lean version issue, and I still don't get exactly how this happens</p>",
        "id": 305806066,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1666613858
    },
    {
        "content": "<p>If you hadn't nuked those lean directories you could have diffed them against what's there now and discovered what you accidentally did when you sneezed, jumped to a definition in core and pressed the space bar</p>",
        "id": 305902004,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666640791
    },
    {
        "content": "<p>It's usually harder than just sneezing: the files in core the elan has provided are all read-only.</p>",
        "id": 305924451,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1666651006
    },
    {
        "content": "<p>I'm a strong sneezer, though</p>",
        "id": 305968053,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1666681587
    },
    {
        "content": "<p>That's true of core, but not mathlib</p>",
        "id": 305968143,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1666681630
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/116395-maths/topic/.E2.9C.94.20project.20doesn't.20accept.20mathlib.20oleans/near/305968143\">said</a>:</p>\n<blockquote>\n<p>That's true of core, but not mathlib</p>\n</blockquote>\n<p>Yes, but I had already nuked the <code>_target</code> mathlib  and the problem persisted, so it coulnd't have been mathlib <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 305968901,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1666682013
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/116395-maths/topic/.E2.9C.94.20project.20doesn't.20accept.20mathlib.20oleans/near/305924451\">said</a>:</p>\n<blockquote>\n<p>It's usually harder than just sneezing: the files in core the elan has provided are all read-only.</p>\n</blockquote>\n<p>That's not true for my set-up! Is this working for other people? I can edit core Lean 3.48 just fine on Ubuntu 20.04 with VS Code when working on e.g. mathlib (I right click, I add a space, I save, I break everything)</p>",
        "id": 306000847,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666694734
    },
    {
        "content": "<p>Just checked, and it's also writable for me.</p>",
        "id": 306013887,
        "sender_full_name": "Jakob von Raumer",
        "timestamp": 1666699999
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>buzzard@bob:~/.elan/toolchains/leanprover-community--lean---3.48.0/lib/lean/library/init$ ls -la\ntotal 840\ndrwxr-xr-x  6 buzzard buzzard   4096 Oct 23 18:48 .\ndrwxr-xr-x  7 buzzard buzzard   4096 Sep  1 22:45 ..\ndrwxr-xr-x  2 buzzard buzzard   4096 Oct 23 18:48 algebra\n-rw-r--r--  1 buzzard buzzard   4653 Aug 30 12:14 cc_lemmas.lean\n-rw-r--r--  1 buzzard buzzard   6382 Aug 30 12:20 cc_lemmas.olean\n-rw-r--r--  1 buzzard buzzard   5556 Aug 30 12:14 classical.lean\n-rw-r--r--  1 buzzard buzzard  13061 Aug 30 12:20 classical.olean\n-rw-r--r--  1 buzzard buzzard   7601 Aug 30 12:14 coe.lean\n-rw-r--r--  1 buzzard buzzard  46052 Aug 30 12:20 coe.olean\ndrwxr-xr-x  2 buzzard buzzard   4096 Oct 23 18:48 control\n-rw-r--r--  1 buzzard buzzard  18729 Aug 30 12:14 core.lean\n-rw-r--r--  1 buzzard buzzard 178898 Aug 30 12:20 core.olean\ndrwxr-xr-x 16 buzzard buzzard   4096 Oct 23 18:48 data\n-rw-r--r--  1 buzzard buzzard    645 Aug 30 12:14 default.lean\n-rw-r--r--  1 buzzard buzzard   1409 Aug 30 12:21 default.olean\n-rw-r--r--  1 buzzard buzzard   6628 Aug 30 12:14 function.lean\n-rw-r--r--  1 buzzard buzzard  20354 Aug 30 12:20 function.olean\n-rw-r--r--  1 buzzard buzzard   2408 Aug 30 12:14 funext.lean\n-rw-r--r--  1 buzzard buzzard   5045 Aug 30 12:20 funext.olean\n-rw-r--r--  1 buzzard buzzard   1367 Aug 30 12:14 init.md\n-rw-r--r--  1 buzzard buzzard    898 Aug 30 12:14 ite_simp.lean\n-rw-r--r--  1 buzzard buzzard   4062 Aug 30 12:21 ite_simp.olean\n-rw-r--r--  1 buzzard buzzard  38948 Aug 30 12:14 logic.lean\n-rw-r--r--  1 buzzard buzzard 130351 Aug 30 12:20 logic.olean\ndrwxr-xr-x  6 buzzard buzzard  20480 Oct 23 18:48 meta\n-rw-r--r--  1 buzzard buzzard   1387 Aug 30 12:14 propext.lean\n-rw-r--r--  1 buzzard buzzard   1631 Aug 30 12:20 propext.olean\n-rw-r--r--  1 buzzard buzzard   2218 Aug 30 12:14 util.lean\n-rw-r--r--  1 buzzard buzzard   3766 Aug 30 12:20 util.olean\n-rw-r--r--  1 buzzard buzzard    332 Aug 30 12:14 version.lean\n-rw-r--r--  1 buzzard buzzard   1439 Aug 30 12:20 version.olean\n-rw-r--r--  1 buzzard buzzard   7103 Aug 30 12:14 wf.lean\n-rw-r--r--  1 buzzard buzzard  29319 Aug 30 12:20 wf.olean\nbuzzard@bob:~/.elan/toolchains/leanprover-community--lean---3.48.0/lib/lean/library/init$\n</code></pre></div>",
        "id": 306014248,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1666700136
    },
    {
        "content": "<p>Weird, not writeable for me:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">scott</span><span class=\"bp\">@</span><span class=\"n\">idaeus</span> <span class=\"n\">lib</span> <span class=\"bp\">%</span> <span class=\"n\">cd</span> <span class=\"n\">lean</span><span class=\"bp\">/</span><span class=\"n\">library</span><span class=\"bp\">/</span><span class=\"n\">init</span><span class=\"bp\">/</span><span class=\"kd\">meta</span>\n<span class=\"n\">scott</span><span class=\"bp\">@</span><span class=\"n\">idaeus</span> <span class=\"kd\">meta</span> <span class=\"bp\">%</span> <span class=\"n\">ls</span> <span class=\"bp\">-</span><span class=\"n\">al</span>\n<span class=\"n\">total</span> <span class=\"mi\">3888</span>\n<span class=\"n\">drwxr</span><span class=\"bp\">-</span><span class=\"n\">xr</span><span class=\"bp\">-</span><span class=\"n\">x</span>  <span class=\"mi\">116</span> <span class=\"n\">scott</span>  <span class=\"n\">staff</span>    <span class=\"mi\">3712</span> <span class=\"mi\">26</span> <span class=\"n\">Oct</span> <span class=\"mi\">07</span><span class=\"o\">:</span><span class=\"mi\">33</span> <span class=\"bp\">.</span>\n<span class=\"n\">drwxr</span><span class=\"bp\">-</span><span class=\"n\">xr</span><span class=\"bp\">-</span><span class=\"n\">x</span>   <span class=\"mi\">33</span> <span class=\"n\">scott</span>  <span class=\"n\">staff</span>    <span class=\"mi\">1056</span> <span class=\"mi\">26</span> <span class=\"n\">Oct</span> <span class=\"mi\">07</span><span class=\"o\">:</span><span class=\"mi\">33</span> <span class=\"bp\">..</span>\n<span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r--r--    1 scott  staff     496 30 Aug 21:14 ac_tactics.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r--r--    1 scott  staff     281 30 Aug 21:28 ac_tactics.olean</span>\n<span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r--r--    1 scott  staff    1903 30 Aug 21:14 async_tactic.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r--r--    1 scott  staff    4589 30 Aug 21:29 async_tactic.olean</span>\n<span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r--r--    1 scott  staff    5895 30 Aug 21:14 attribute.lean</span>\n<span class=\"bp\">-</span><span class=\"n\">r</span><span class=\"c1\">--r--r--    1 scott  staff   17422 30 Aug 21:29 attribute.olean</span>\n</code></pre></div>",
        "id": 306117247,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1666730099
    }
]