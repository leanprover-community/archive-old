[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110064\">@Kenny Lau</span> and <span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span> with the recent merge of <a href=\"https://github.com/leanprover/mathlib/pull/196\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/pull/196\">PR196</a> how does current mathlib compare to <a href=\"https://github.com/leanprover/lean2/blob/master/library/theories/commutative_algebra/ideal.lean\" target=\"_blank\" title=\"https://github.com/leanprover/lean2/blob/master/library/theories/commutative_algebra/ideal.lean\">Lean 2 lib</a>?</p>",
        "id": 130050846,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1532172888
    },
    {
        "content": "<p>Is that a hint that I should work on ideals? I was delayed by type class problems, but now I've found a long term solution, so I can work on it properly.</p>",
        "id": 130064086,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1532195811
    },
    {
        "content": "<p>was the lean 2 ideals library significant?</p>",
        "id": 130064153,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532195960
    },
    {
        "content": "<p>Looking at it, although it's much longer than the ideals file in mathlib, a lot of it covers stuff that's already done for modules.</p>",
        "id": 130064270,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1532196153
    },
    {
        "content": "<p>aren't those easy then? I thought mathlib ideals were defined in terms of submodules, so it should just be a theorem application away</p>",
        "id": 130064286,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532196200
    },
    {
        "content": "<p>Exactly.</p>",
        "id": 130064288,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1532196216
    },
    {
        "content": "<p>Is it even worth proving them specifically for ideals?</p>",
        "id": 130064291,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1532196237
    },
    {
        "content": "<p>It can be helpful to change the statement the way you need it, if it is going to be used in <code>rw</code> for example</p>",
        "id": 130064337,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532196272
    },
    {
        "content": "<p>I have said before that the most important thing about many of the early files is the statements, not the proofs</p>",
        "id": 130064346,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1532196304
    }
]