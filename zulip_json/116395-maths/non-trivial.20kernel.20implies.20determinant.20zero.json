[
    {
        "content": "<p>Is there a quick way to finish this: </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">k</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span>\n  <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">k</span><span class=\"o\">]</span>\n  <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">n</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"n\">n</span> <span class=\"n\">n</span> <span class=\"n\">k</span><span class=\"o\">}</span>\n  <span class=\"o\">(</span><span class=\"n\">v</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">k</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hv_ne0</span> <span class=\"o\">:</span> <span class=\"n\">v</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hv_ker</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"bp\">.</span><span class=\"n\">mul_vec</span> <span class=\"n\">v</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">M</span><span class=\"bp\">.</span><span class=\"n\">det</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">sorry</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>I could not find anything on mathlib_docs and <code>library_search</code> also returned nothing. <br>\nThanks,</p>",
        "id": 206888182,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597365903
    },
    {
        "content": "<p>Please include the imports and stuff like</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">linear_algebra</span><span class=\"bp\">.</span><span class=\"n\">matrix</span>\n<span class=\"kn\">open</span> <span class=\"n\">matrix</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n</code></pre></div>\n\n\n<p>too!</p>",
        "id": 206888456,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1597366288
    },
    {
        "content": "<p>Check linear_algebra/nonsingular_inverse</p>",
        "id": 206888715,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1597366594
    },
    {
        "content": "<p>We have that a matrix is a unit iff its determinant is. That should get you close enough</p>",
        "id": 206888741,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1597366648
    },
    {
        "content": "<p>Ah! thanks!  And sorry about the imports</p>",
        "id": 206888800,
        "sender_full_name": "Apurva Nakade",
        "timestamp": 1597366693
    }
]