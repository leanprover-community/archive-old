[
    {
        "content": "<p>To work on flt-regular we will need the discriminant of a number field. The usual <a href=\"https://en.wikipedia.org/wiki/Discriminant_of_an_algebraic_number_field\">definition</a> uses embeddings in the complex numbers.</p>\n<p>I propose to define it as the determinant of the matrix given by the trace of all the products of an integral basis of the ring of integers.</p>\n<p>Any ideas about this definition?</p>",
        "id": 259517408,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635510766
    },
    {
        "content": "<p>Note that we already have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/algebra.trace\">docs#algebra.trace</a></p>",
        "id": 259517611,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635510886
    },
    {
        "content": "<p>This I guess would be an easy way to define it, but having the embedding definition is handy for proving things about discriminants. So I'm not sure if we've just made our proofs more annoying (although maybe for <code>flt_regular</code> we can get away with it).</p>",
        "id": 259518654,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635511557
    },
    {
        "content": "<p>The problem with the other definition is that we have to choose an algebraic closure (or work inside <code>C</code>) from the beginning. But if at some point we want to add something to our base field, like the root of a polynomial and we use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/adjoin_root\">docs#adjoin_root</a>, we are note anymore in the same algebraic closure. We can of course add the relevant root from the algebraic closure, but we don't have the API for <code>adjoint_root</code>.</p>",
        "id": 259521081,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635512831
    },
    {
        "content": "<p>It might not be relevant for flt-regular but at some point we'll need the theorem saying the rank of the unit group is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>+</mo><mi>s</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">r+s-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> and we'll need embeddings in the complexes for this too.</p>",
        "id": 259521110,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635512842
    },
    {
        "content": "<p>Sure, sooner or later embeddings are needed for algebraic number theory. But a number field is not a subfield of <code>C</code>, so it seems quite unnatural to work only in <code>C</code>.</p>",
        "id": 259521277,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635512924
    },
    {
        "content": "<p>One also wants the concept of the determinant of an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>-tuple (e.g. isn't this the way one proves that certain rings are the full ring of integers, you find a potential ring of integers, like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><mi>α</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}[\\alpha]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">]</span></span></span></span> in some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}(\\alpha)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span></span></span></span>, compute the discriminant of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>-tuple <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>α</mi><mo separator=\"true\">,</mo><msup><mi>α</mi><mn>2</mn></msup><mo separator=\"true\">,</mo><mo>…</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{1,\\alpha,\\alpha^2,\\ldots\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mclose\">}</span></span></span></span>, and then argue that if the ring were any bigger then its discriminant would not be an integer).</p>",
        "id": 259521498,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635513045
    },
    {
        "content": "<p>How do Pari and LMFDB do it? I doubt they use complexes. I think the determinant of the trace form is a fine idea.</p>",
        "id": 259521784,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635513180
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Discriminant.20of.20a.20number.20field/near/259521498\">said</a>:</p>\n<blockquote>\n<p>One also wants the concept of the determinant of an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>-tuple (e.g. isn't this the way one proves that certain rings are the full ring of integers, you find a potential ring of integers, like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi><mo stretchy=\"false\">[</mo><mi>α</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}[\\alpha]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">]</span></span></span></span> in some <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><mi>α</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Q}(\\alpha)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span></span></span></span>, compute the discriminant of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>-tuple <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">{</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>α</mi><mo separator=\"true\">,</mo><msup><mi>α</mi><mn>2</mn></msup><mo separator=\"true\">,</mo><mo>…</mo><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\{1,\\alpha,\\alpha^2,\\ldots\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mclose\">}</span></span></span></span>, and then argue that if the ring were any bigger then its discriminant would not be an integer).</p>\n</blockquote>\n<p>You can still do this with this Ricardo's definition, just take the det of the matrix of  traces of the products of the elements.</p>",
        "id": 259521859,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635513224
    },
    {
        "content": "<p>Exactly, this works out of the box for a tuple of elements in a <code>R</code>-algebra <code>A</code>, without any assumption.</p>",
        "id": 259522021,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635513302
    },
    {
        "content": "<p>I guess that to take the trace you need finitely generated and projective (maybe finitely presented in the non-Noetherian case)</p>",
        "id": 259523252,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635513881
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">noncomputable</span> <span class=\"kd\">def</span> <span class=\"n\">trace</span> <span class=\"o\">:</span> <span class=\"n\">S</span> <span class=\"bp\">→ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">linear_map.trace</span> <span class=\"n\">R</span> <span class=\"n\">S</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">comp</span> <span class=\"o\">(</span><span class=\"n\">lmul</span> <span class=\"n\">R</span> <span class=\"n\">S</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">to_linear_map</span>\n</code></pre></div>\n<p>No assumptions <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 259523547,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635514018
    },
    {
        "content": "<p>It's probably not very well behaved in general, but it's there.</p>",
        "id": 259523584,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635514037
    },
    {
        "content": "<p>?! Does it give the right thing in a projective non-free example?</p>",
        "id": 259523873,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635514197
    },
    {
        "content": "<p>Not that it matters for fields, but still...</p>",
        "id": 259523940,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635514215
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- Trace of an endomorphism independent of basis. -/</span>\n<span class=\"kd\">def</span> <span class=\"n\">trace</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">→ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"bp\">→ₗ</span><span class=\"o\">[</span><span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"n\">R</span> <span class=\"o\">:=</span>\n<span class=\"k\">if</span> <span class=\"n\">H</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">M</span><span class=\"o\">),</span> <span class=\"n\">nonempty</span> <span class=\"o\">(</span><span class=\"n\">basis</span> <span class=\"n\">s</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n<span class=\"k\">then</span> <span class=\"n\">trace_aux</span> <span class=\"n\">R</span> <span class=\"n\">H.some_spec.some</span>\n<span class=\"k\">else</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>youch</p>",
        "id": 259524028,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635514264
    },
    {
        "content": "<p>the definition should have a health warning</p>",
        "id": 259524057,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635514283
    },
    {
        "content": "<p><span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span></p>",
        "id": 259524235,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635514365
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> I know you're on holiday so this can definitely wait. If <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">A\\to B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is a morphism of commutative rings and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is <em>not</em> a finite free <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>-module but if it is _locally_ finite free (for example a non-zero ideal of a Dedekind domain is not always principal i.e. free but it is always locally free of rank 1) then there's still a notion of trace, which will be used by people in the algebra community. On the other hand what we currently have covers most usages of the word (but perhaps not what we want in this thread, if we start doing traces from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> is the integers in a number field and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> is the integers in a smaller number field). I guess also there is a notion of trace in the theory of Banach spaces, where the endomorphisms are of infinite-dimensional spaces but there might be a good notion of trace anyway (morally the sum of the eigenvalues happens to converge). Maybe this is just an unsolvable problem -- maybe the algebraists / algebraic number theorists need to define <code>relative_trace</code> or something, and the Banach space people need to define <code>banach_trace</code> ...</p>",
        "id": 259524935,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635514667
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Discriminant.20of.20a.20number.20field/near/259521784\">said</a>:</p>\n<blockquote>\n<p>How do Pari and LMFDB do it? I doubt they use complexes. I think the determinant of the trace form is a fine idea.</p>\n</blockquote>\n<p>I expect they compute an integral basis and then use the trace form. Computing the discriminant of the defining polynomial can be done without embeddings by using resultants and from there I think one can start to generate the integral basis.</p>",
        "id": 259525518,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635514936
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> For infinite dimensional spaces, you indeed have (at least) two notions of traces:</p>\n<ol>\n<li>The algebraic one, for endomorphisms of finite rank. </li>\n<li>For (say Banach) spaces,  analytic one, defined on the subspace of “endomorphisms with finite trace”, which are limits of operators of finite rank, defined by a formula $\\sum a_i f_i \\otimes e_i$ (where $(a_i)$ is a summable family of scalars, $f_i$ an bounded family of linear forms, $e_i$ a bounded family of vectors), and the trace is $\\sum a_i f_i(e_i)$.</li>\n</ol>\n<p>In Hilbert spaces, (2) coincides with the linear span of hermitian endomorphisms whose sum of eigenvalues converges.</p>",
        "id": 259527554,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1635515817
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Discriminant.20of.20a.20number.20field/near/259521110\">said</a>:</p>\n<blockquote>\n<p>It might not be relevant for flt-regular but at some point we'll need the theorem saying the rank of the unit group is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo>+</mo><mi>s</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">r+s-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> and we'll need embeddings in the complexes for this too.</p>\n</blockquote>\n<p>We might even need it here. At some point,  the proofs I've seen use something like \"An algebraic integer all of whose conjugates have absolute value one is a root of unity\" and I'm not sure if you get away without using embeddings. But I could be wrong.</p>",
        "id": 259529755,
        "sender_full_name": "Chris Birkbeck",
        "timestamp": 1635516658
    },
    {
        "content": "<p>Yes you need embeddings for that, or all the infinite norms</p>",
        "id": 259559628,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1635529579
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"389019\">Chris Birkbeck</span> <a href=\"#narrow/stream/116395-maths/topic/Discriminant.20of.20a.20number.20field/near/259525518\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Discriminant.20of.20a.20number.20field/near/259521784\">said</a>:</p>\n<blockquote>\n<p>How do Pari and LMFDB do it? I doubt they use complexes. I think the determinant of the trace form is a fine idea.</p>\n</blockquote>\n<p>I expect they compute an integral basis and then use the trace form. Computing the discriminant of the defining polynomial can be done without embeddings by using resultants and from there I think one can start to generate the integral basis.</p>\n</blockquote>\n<p>Sage's NumberField definitely doesn't need an embedding to give you its discriminant.</p>",
        "id": 259998793,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1635861631
    },
    {
        "content": "<p>In flt-regular we went for the definition that uses the trace. <a href=\"https://github.com/leanprover-community/flt-regular/blob/20df55f180ea139206e1b2effe2781669f5bd4ed/src/number_theory/discriminant/basic.lean#L161\">Here</a> is a proof that this is the same as using embeddings.</p>",
        "id": 260137419,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1635947914
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/algebra.discr\">docs#algebra.discr</a> has now a reasonable API, and, with <a href=\"https://github.com/leanprover-community/mathlib/pull/11396\">#11396</a>, mathlib will know that the discriminant is integral.</p>\n<p>I wrote this for the flt-regular project, and I think I have proved more or less the results we need there (we computed the discriminant of the <code>p</code>-th cyclotomic field). If someone is looking for a good first project I think it would be very nice to develop the API for the discriminant <em>of a number field</em>, rather than of a family of vectors, as a well defined integer. All the relevant results are already there so it shouldn't be too difficult. I don't think we need this so I am not going to work on it anytime soon.</p>",
        "id": 267789626,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1642023473
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"325022\">@Elias Caeiro</span></p>",
        "id": 267789746,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642023530
    },
    {
        "content": "<p>And of course then we will want arithmetic of quadratic fields!</p>",
        "id": 267789839,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1642023594
    },
    {
        "content": "<p>I can't cc them twice <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 267789897,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642023608
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"130384\">@Riccardo Brasca</span> how about adding this project (or two projects) as a github issue? Maybe as part of <a href=\"https://github.com/leanprover-community/mathlib/projects/3\">https://github.com/leanprover-community/mathlib/projects/3</a></p>",
        "id": 267790345,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1642023861
    },
    {
        "content": "<p>Good idea!</p>",
        "id": 267790518,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1642023946
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/11407\">Done</a></p>",
        "id": 267793924,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1642025684
    },
    {
        "content": "<p>What's the sign of this \"well-defined integer\"? Is there ambiguity in the literature?</p>",
        "id": 267832255,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642058630
    },
    {
        "content": "<p>It depends on the number field. The discriminant scales by determinant-squared under change of basis, so the discriminant of a number field is well-defined modulo <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi mathvariant=\"double-struck\">Z</mi><mo>×</mo></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>=</mo><mo stretchy=\"false\">{</mo><mn>1</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">(\\Z^\\times)^2 = \\{1\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathbb\">Z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7713em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">×</span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">1</span><span class=\"mclose\">}</span></span></span></span></p>",
        "id": 267835699,
        "sender_full_name": "David Wärn",
        "timestamp": 1642061556
    },
    {
        "content": "<p>That doesn't stop there being ambiguity in the literature</p>",
        "id": 267835923,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642061748
    },
    {
        "content": "<p>So you're asking how the literature scales under change of author?</p>",
        "id": 267836421,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1642062113
    },
    {
        "content": "<p>I guess we make the sensible choice and hope that most other people do too. In the relative setting the discriminant can only be defined as an ideal but as David says in the absolute situation there seems to be a canonical generator</p>",
        "id": 267836503,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642062152
    },
    {
        "content": "<p>It would be interesting to start writing down solutions to Mordell equations y^2=x^3+n for small nonzero integers. Each equation only has finitely many integer solutions but as n increases so do the amount of techniques that one needs to solve them</p>",
        "id": 267836788,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642062376
    },
    {
        "content": "<p>IIRC I set a nasty one of these as a codewars kata</p>",
        "id": 267836825,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642062407
    },
    {
        "content": "<p>The sign is <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><msub><mi>r</mi><mn>2</mn></msub></msup></mrow><annotation encoding=\"application/x-tex\">(-1)^{r_2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>, isn't it? (Here <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>r</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">r_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is the number of complex places of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>.)</p>",
        "id": 267843794,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1642066398
    },
    {
        "content": "<p>Note that I am talking about the discriminant <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mi mathvariant=\"normal\">/</mi><mi mathvariant=\"double-struck\">Q</mi></mrow><annotation encoding=\"application/x-tex\">K/\\mathbb{Q}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord\">/</span><span class=\"mord mathbb\">Q</span></span></span></span>, I don't see any ambiguity here: take any algebraic integer <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> such that <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo>=</mo><mi mathvariant=\"double-struck\">Q</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">K=\\mathbb{Q}(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathbb\">Q</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span> and then set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi mathvariant=\"normal\">Δ</mi><mrow><mi>K</mi><mi mathvariant=\"normal\">/</mi><mi mathvariant=\"double-struck\">Q</mi></mrow></msub><mo>=</mo><mi mathvariant=\"normal\">discr</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>x</mi><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msup><mi>x</mi><mrow><mi>d</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\Delta_{K/\\mathbb{Q}}=\\operatorname{discr}(1,x,\\ldots,x^{d-1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0385em;vertical-align:-0.3552em;\"></span><span class=\"mord\"><span class=\"mord\">Δ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.5198em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mtight\">/</span><span class=\"mord mathbb mtight\">Q</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3552em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span class=\"mord mathrm\">discr</span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">d</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mo>=</mo><msub><mrow><mi>dim</mi><mo>⁡</mo></mrow><mi mathvariant=\"double-struck\">Q</mi></msub><mo stretchy=\"false\">(</mo><mi>K</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">d=\\dim_{\\mathbb{Q}}(K)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0167em;vertical-align:-0.2667em;\"></span><span class=\"mop\"><span class=\"mop\">dim</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3322em;\"><span style=\"top:-2.55em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathbb mtight\">Q</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2667em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mclose\">)</span></span></span></span>.</p>",
        "id": 267844004,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1642066533
    },
    {
        "content": "<p>Right. I'm just familiar with the general theory, where the discriminant is usually define as an ideal of the bottom ring, and the different (in the LCI case) as an ideal of the top ring</p>",
        "id": 267854103,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642072285
    },
    {
        "content": "<p>I don't think I'd ever internalised that in the absolute case the ideal had a canonical generator. Most of the more advanced results about discriminant are only about primes dividing it or its absolute value, and here the sign doesn't matter</p>",
        "id": 267854253,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1642072370
    },
    {
        "content": "<p>I certainly  agree that the real discriminant is an ideal, and sooner or later we will need it... time to have the trace of for projective modules I guess!</p>",
        "id": 267864706,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1642078711
    }
]