[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">norm_num</span>\n\n<span class=\"kn\">definition</span> <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℝ</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">x</span> <span class=\"bp\">|</span> <span class=\"n\">x</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span><span class=\"o\">}</span>\n\n<span class=\"c1\">-- hangs</span>\n<span class=\"c1\">--example : (1 / 2 : ℝ) ∈ A := by norm_num</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">4</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"c1\">-- two goals</span>\n    <span class=\"n\">norm_num</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- where did my second goal go?</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>I don't really know why the first example hangs. I can believe that Lean is reluctant to change <code>(1/2) \\in A</code> to <code>A (1/2)</code> to <code>(lam x, x^2&lt;3) (1/2)</code> to <code>(1/2)^2&lt;3</code> (note that norm_num can solve the latter no problem) but I don't really know why it hangs. The reason I discovered it choked on this was trying to solve a goal of the form <code>(1 / 2 : ℝ) ^ 2 &lt; 3 ∧  (1 / 2 : ℝ) ∈ A</code> by \"split,norm_num,...\" and <code>norm_num</code> hung on me, I thought because of the first goal, but actually because of the second.</p>\n<p>Is making <code>norm_num</code> just act on the current goal something that can be trivially done? I know about the <code>{norm_num}</code> trick but this was an undergraduate that tripped up, not me.</p>",
        "id": 132069983,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1534192225
    }
]