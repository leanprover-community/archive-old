[
    {
        "content": "<p>In the branch mathlib:characteristic_polynomial_trace, <span class=\"user-mention\" data-user-id=\"252300\">@Jalex Stark</span>  and I have shown, among other things, that the trace of a matrix is the second-highest coefficient of the characteristic polynomial. While that exact statement is phrased in terms of the dimension of the matrix, the proof involves a function I call <code>next_coeff</code>.</p>",
        "id": 203747880,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1594663173
    },
    {
        "content": "<p><code>p.next_coeff</code> is basically defined as <code>p.coeff (p.nat_degree - 1)</code>, except I use <code>ite</code> to make it return 0 on constant polynomials.</p>",
        "id": 203748193,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1594663272
    },
    {
        "content": "<p>The whole thing seems like a reasonably common construction when doing elementary algebra with polynomials, but it's awkward to describe. Does anybody have any recommendations on how to make it more elegant?</p>",
        "id": 203748369,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1594663337
    },
    {
        "content": "<p>Perhaps it should all be done by embedding polynomials in <code>add_monoid k Z</code> and then using integer-indexed coefficients?</p>",
        "id": 203748503,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1594663395
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span> I don't think that such a generalisation will make it easier to use.</p>",
        "id": 203754088,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594665937
    },
    {
        "content": "<p>In fact, I'm not yet convinced that we need this definition at all. The example that you've proven is a very clear use case. But apart from that, I don't know how often it will be used. Do you have other use cases in mind? (You mention \"elementary algebra with polynomials\" but are you thinking of something more specific?)</p>",
        "id": 203754505,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594666111
    },
    {
        "content": "<p>I think it comes up reasonably frequently. For example, if you multiply monic polynomials, the next leading coefficients add. Sort of like a first derivative at infinity.</p>",
        "id": 203755264,
        "sender_full_name": "Reid Barton",
        "timestamp": 1594666468
    },
    {
        "content": "<p>Ok, that's another example. Thanks!</p>",
        "id": 203755694,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594666669
    },
    {
        "content": "<p>I thought <code>next_coeff</code> was silly when Aaron showed it to me; the content of Reid's comment is what convinced me otherwise</p>",
        "id": 203756048,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1594666810
    },
    {
        "content": "<p>how do I link to code on a branch of mathlib that is not a PR?</p>",
        "id": 203756101,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1594666835
    },
    {
        "content": "<p>From the main page, you can select a branch in some dropdown menu</p>",
        "id": 203756146,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594666855
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/JJM_Jlbn7hiQa-zhuea5Mlfr/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/JJM_Jlbn7hiQa-zhuea5Mlfr/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/JJM_Jlbn7hiQa-zhuea5Mlfr/image.png\"></a></div>",
        "id": 203756222,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594666887
    },
    {
        "content": "<p>In the top left of that screen shot</p>",
        "id": 203756251,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594666898
    },
    {
        "content": "<p>we prove the lemma reid talks about <a href=\"https://github.com/leanprover-community/mathlib/blob/polynomial_lemmas_for_freek_83/src/algebra/polynomial/monic.lean#L49\">here</a> as <code>monic.next_coeff_mul</code></p>",
        "id": 203756689,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1594667091
    },
    {
        "content": "<p>(the proof right now is pretty terrible, this is I think the biggest reason this is not a PR yet)</p>",
        "id": 203756756,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1594667125
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/3402\">#3402</a></p>",
        "id": 203857215,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1594745303
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252300\">@Jalex Stark</span> <span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span> I think it's a good idea to start a <code>polynomial/</code> directory, and split the large file into pieces. You are kind of starting the new files already, without having done the split yet.<br>\nCould I ask you to also work on that refactor?<br>\nIt would actually be best to do the refactor first. That way it becomes really easy to review. It should not add <em>any</em> new things. Only split the file into pieces, and start a bunch of new files. (It's still not completely trivial, you still need to move things around, probably.)</p>",
        "id": 203865634,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594749418
    },
    {
        "content": "<p>splitting the file data/polynomial.lean?</p>",
        "id": 203865707,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1594749458
    },
    {
        "content": "<p>Starting the new files before the refactor will make the split a lot harder</p>",
        "id": 203865930,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594749572
    },
    {
        "content": "<p>Because then you need to combine the old and the new stuff. It will work, but as a reviewer it will be less trivial to see what's happening</p>",
        "id": 203865978,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594749601
    },
    {
        "content": "<p>okay, i will switch over to that</p>",
        "id": 203866049,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1594749618
    },
    {
        "content": "<p>I know that it is a lot less exciting than new stuff...</p>",
        "id": 203866088,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594749635
    },
    {
        "content": "<p>I also have plans for improvements to <code>data/polynomial.lean</code>--- but I'm certainly not going to start until next week at least.</p>",
        "id": 203905664,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594773587
    },
    {
        "content": "<p>And I agree that splitting the file first, then making changes, will be easier overall.</p>",
        "id": 203905669,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594773600
    },
    {
        "content": "<p>So I love the idea of someone trying to do that. :-)</p>",
        "id": 203905714,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1594773611
    }
]