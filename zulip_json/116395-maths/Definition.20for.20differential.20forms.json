[
    {
        "content": "<p>Hi, I'm pretty new to Lean. I've worked through all the exercises in the current version of  <em>Mathematics in Lean</em> and that's about it.</p>\n<p>With that out of the way, I'm mostly interested in differential geometry in Lean (partially to aid in my learning of DG), and I thought I'd have a go at defining cotangent spaces and bundles, and differential forms. Specifically, do these extra definitions for <code>geometry.manifold.basic_smooth_bundle</code> look about right?</p>\n<p>After the definition of <code>tangent_space</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[nolint unused_arguments, derive [has_coe_to_fun, semi_normed_group, semi_normed_space ùïú, normed_group, normed_space ùïú]</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">cotangent_space</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span> <span class=\"o\">:=</span> <span class=\"n\">normed_space.dual</span> <span class=\"bp\">ùïú</span> <span class=\"n\">E</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">differential_form</span> <span class=\"o\">:=</span> <span class=\"bp\">Œ†</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">),</span> <span class=\"n\">exterior_algebra</span> <span class=\"bp\">ùïú</span> <span class=\"o\">(</span><span class=\"n\">cotangent_space</span> <span class=\"n\">I</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>After the definition of <code>tangent_bundle</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[nolint has_inhabited_instance, reducible]</span> <span class=\"c1\">-- is empty if the base manifold is empty</span>\n<span class=\"kd\">def</span> <span class=\"n\">cotangent_bundle</span> <span class=\"o\">:=</span> <span class=\"bp\">Œ£</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">),</span> <span class=\"n\">cotangent_space</span> <span class=\"n\">I</span> <span class=\"n\">x</span>\n</code></pre></div>",
        "id": 238803288,
        "sender_full_name": "Dylan Ede",
        "timestamp": 1621014149
    },
    {
        "content": "<p>My definition of <code>differential_form</code> looks like this now:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[derive [inhabited, semiring, ring, algebra ùïú]</span><span class=\"o\">]</span>\n<span class=\"kd\">def</span> <span class=\"n\">differential_form</span> <span class=\"o\">:=</span> <span class=\"bp\">Œ†</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">),</span> <span class=\"n\">exterior_algebra</span> <span class=\"bp\">ùïú</span> <span class=\"o\">(</span><span class=\"n\">cotangent_space</span> <span class=\"n\">I</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>In order for this to be useful, do I now need to wrap all of the results in <code>linear_algebra.exterior_algebra</code> so that they apply to <code>differential_form</code>?</p>",
        "id": 238842098,
        "sender_full_name": "Dylan Ede",
        "timestamp": 1621034408
    },
    {
        "content": "<p>I don't think this definition of <code>differential_form</code> is correct.</p>",
        "id": 238842338,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1621034575
    },
    {
        "content": "<p>All this is saying is that to each point <code>x</code> you assign some element (with no restrictions whatsoever!) in the exterior algebra of the dual of the tangent space at <code>x</code>.</p>",
        "id": 238842441,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1621034649
    },
    {
        "content": "<p>I'm an algebraic geometer so my inclination is to define things as sections of some sheaf, but I hope that someone who is more familiar with the manifolds library should be able to direct you to a better definition.</p>",
        "id": 238842536,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1621034726
    },
    {
        "content": "<p>OK, I thought there might be a problem since I was struggling with the definition of section to use. I was basing things on <a href=\"https://ncatlab.org/nlab/show/differential+form\">https://ncatlab.org/nlab/show/differential+form</a> and <a href=\"https://mathworld.wolfram.com/BundleSection.html\">https://mathworld.wolfram.com/BundleSection.html</a></p>",
        "id": 238842711,
        "sender_full_name": "Dylan Ede",
        "timestamp": 1621034878
    },
    {
        "content": "<p>As a toy example, perhaps it's worthwhile to write down the definition of a vector field as a section to the tangent bundle</p>",
        "id": 238844042,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1621035964
    },
    {
        "content": "<p>I've done a bit more reading, and it seems like the main (only?) thing missing is that some definitions require the section/map to be continuous. Indeed, that is what the Wikipedia definition requires. I had previously found a definition that suggested that sometimes you don't want to require that a differential form is continuous, but now I can't find it.</p>",
        "id": 238898642,
        "sender_full_name": "Dylan Ede",
        "timestamp": 1621085822
    },
    {
        "content": "<p>If you're working with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">C^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span> manifolds, you would want to require the section to be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mi>p</mi></msup></mrow><annotation encoding=\"application/x-tex\">C^p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">p</span></span></span></span></span></span></span></span></span></span></span>. So when p is 0, that's continuity, and when p is infinity, that means smooth</p>",
        "id": 238899511,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1621086662
    },
    {
        "content": "<p>OK, thanks, I think I see what I need to do now. I think <code>differential_form</code> needs to look something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">differential_form_bundle</span> <span class=\"o\">:=</span> <span class=\"bp\">Œ£</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">),</span> <span class=\"n\">exterior_algebra</span> <span class=\"bp\">ùïú</span> <span class=\"o\">(</span><span class=\"n\">cotangent_space</span> <span class=\"n\">I</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n<span class=\"kd\">def</span> <span class=\"n\">differential_form</span> <span class=\"o\">:=</span> <span class=\"n\">C</span><span class=\"bp\">^‚àû‚üÆ</span><span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">M</span><span class=\"bp\">;</span> <span class=\"n\">I</span><span class=\"o\">,</span> <span class=\"n\">differential_form_bundle</span> <span class=\"n\">I</span> <span class=\"n\">M</span><span class=\"bp\">‚üØ</span>\n</code></pre></div>\n<p>But of course that means that I need to implement all the necessary type classes on <code>differential_form_bundle</code>, and <code>contangent_bundle</code> as well, probably with definitions of <code>differential_form_bundle_core</code> and <code>cotangent_bundle_core</code> to help with that.</p>",
        "id": 238901530,
        "sender_full_name": "Dylan Ede",
        "timestamp": 1621088612
    }
]