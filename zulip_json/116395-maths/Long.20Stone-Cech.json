[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> <a href=\"https://github.com/leanprover/mathlib/blob/master/src/topology/stone_cech.lean#L253\" target=\"_blank\" title=\"https://github.com/leanprover/mathlib/blob/master/src/topology/stone_cech.lean#L253\">https://github.com/leanprover/mathlib/blob/master/src/topology/stone_cech.lean#L253</a> takes forever to elaborate. Do you care if I change it to:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">instance</span> <span class=\"n\">stone_cech</span><span class=\"bp\">.</span><span class=\"n\">t2_space</span> <span class=\"o\">:</span> <span class=\"n\">t2_space</span> <span class=\"o\">(</span><span class=\"n\">stone_cech</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">t2_iff_ultrafilter</span><span class=\"o\">,</span>\n  <span class=\"n\">rintros</span> <span class=\"n\">g</span> <span class=\"bp\">⟨</span><span class=\"n\">x</span><span class=\"bp\">⟩</span> <span class=\"bp\">⟨</span><span class=\"n\">y</span><span class=\"bp\">⟩</span> <span class=\"n\">u</span> <span class=\"n\">gx</span> <span class=\"n\">gy</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">quotient</span><span class=\"bp\">.</span><span class=\"n\">sound</span><span class=\"o\">,</span>\n  <span class=\"n\">intros</span> <span class=\"n\">γ</span> <span class=\"n\">tγ</span> <span class=\"n\">h₁</span> <span class=\"n\">h₂</span> <span class=\"n\">f</span> <span class=\"n\">hf</span><span class=\"o\">,</span>\n  <span class=\"n\">resetI</span><span class=\"o\">,</span>\n  <span class=\"k\">let</span> <span class=\"n\">ff</span> <span class=\"o\">:=</span> <span class=\"n\">stone_cech_extend</span> <span class=\"n\">hf</span><span class=\"o\">,</span>\n  <span class=\"n\">change</span> <span class=\"n\">ff</span> <span class=\"err\">⟦</span><span class=\"n\">x</span><span class=\"err\">⟧</span> <span class=\"bp\">=</span> <span class=\"n\">ff</span> <span class=\"err\">⟦</span><span class=\"n\">y</span><span class=\"err\">⟧</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">lim</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ultrafilter</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">g</span> <span class=\"bp\">≤</span> <span class=\"n\">nhds</span> <span class=\"err\">⟦</span><span class=\"n\">z</span><span class=\"err\">⟧</span> <span class=\"bp\">→</span> <span class=\"n\">tendsto</span> <span class=\"n\">ff</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"o\">(</span><span class=\"n\">ff</span> <span class=\"err\">⟦</span><span class=\"n\">z</span><span class=\"err\">⟧</span><span class=\"o\">))</span> <span class=\"o\">:=</span>\n  <span class=\"k\">assume</span> <span class=\"n\">z</span> <span class=\"n\">gz</span><span class=\"o\">,</span>\n    <span class=\"k\">calc</span> <span class=\"n\">map</span> <span class=\"n\">ff</span> <span class=\"n\">g</span> <span class=\"bp\">≤</span> <span class=\"n\">map</span> <span class=\"n\">ff</span> <span class=\"o\">(</span><span class=\"n\">nhds</span> <span class=\"err\">⟦</span><span class=\"n\">z</span><span class=\"err\">⟧</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">map_mono</span> <span class=\"n\">gz</span>\n              <span class=\"bp\">...</span> <span class=\"bp\">≤</span> <span class=\"n\">nhds</span> <span class=\"o\">(</span><span class=\"n\">ff</span> <span class=\"err\">⟦</span><span class=\"n\">z</span><span class=\"err\">⟧</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">continuous_stone_cech_extend</span> <span class=\"n\">hf</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">tendsto</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">tendsto_nhds_unique</span> <span class=\"n\">u</span><span class=\"bp\">.</span><span class=\"mi\">1</span> <span class=\"o\">(</span><span class=\"n\">lim</span> <span class=\"n\">x</span> <span class=\"n\">gx</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">lim</span> <span class=\"n\">y</span> <span class=\"n\">gy</span><span class=\"o\">)</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 156598228,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1548157877
    },
    {
        "content": "<p>which I think is also easier to read by the way</p>",
        "id": 156598235,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1548157901
    },
    {
        "content": "<p>If it's faster go for it</p>",
        "id": 156598456,
        "sender_full_name": "Reid Barton",
        "timestamp": 1548158202
    },
    {
        "content": "<p>Thanks. I'm asking because this change will be hidden in a large reorganization PR (the second phase of the topology reorganization decided in Amsterdam).</p>",
        "id": 156598640,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1548158410
    },
    {
        "content": "<p>Oh great, are you already working on that?</p>",
        "id": 156598653,
        "sender_full_name": "Reid Barton",
        "timestamp": 1548158437
    },
    {
        "content": "<p>Yes. I'm splitting <code>topology.basic</code> and <code>topology.continuity</code></p>",
        "id": 156598677,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1548158471
    },
    {
        "content": "<p>And guess what I learned? Non-finishing calls to <code>simp</code> are evil</p>",
        "id": 156599697,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1548159610
    }
]