[
    {
        "content": "<p>I have some fields, <code>K</code> and <code>L</code> and <code>N : subalgebra K L</code>. I now need <code>algebra K (algebra.adjoin N {(x : L)} : subalgebra N L)</code> What's the best way to get this instance and all the 4 choose 3 <code>is_scalar tower</code> instances I might need?</p>",
        "id": 252229521,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1630968080
    },
    {
        "content": "<p>Does <a href=\"https://leanprover-community.github.io/mathlib_docs/find/subalgebra.algebra\">docs#subalgebra.algebra</a> exist and answer your question?</p>",
        "id": 252229713,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1630968288
    },
    {
        "content": "<p>Hmm, it doesn't allow scalar towers</p>",
        "id": 252229742,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1630968320
    },
    {
        "content": "<p>I guess either that should be fixed, or the tower version is defined elsewhere</p>",
        "id": 252229770,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1630968361
    },
    {
        "content": "<p>That would give me <code>algebra N (algebra.adjoin N {x})</code>, but I need <code>algebra K (algebra.adjoin N {x})</code></p>",
        "id": 252230146,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1630968725
    },
    {
        "content": "<p>I know <code>N</code> is a <code>K</code> algebra, so it's basically transitivity of <code>algebra</code>, but then I'll probably need the fact that everything commutes.</p>",
        "id": 252230203,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1630968801
    },
    {
        "content": "<p>I think the conditions should be the same as <a href=\"https://leanprover-community.github.io/mathlib_docs/find/submodule.module'\">docs#submodule.module'</a></p>",
        "id": 252230589,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1630969201
    },
    {
        "content": "<p>I think so.</p>",
        "id": 252231454,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1630969965
    },
    {
        "content": "<p>But we'll need two extra <code>is_scalar_tower</code> instances for this.</p>",
        "id": 252231466,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1630969988
    },
    {
        "content": "<p>Why two? Isn't <code>K L N</code> enough</p>",
        "id": 252231658,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1630970188
    },
    {
        "content": "<p>You need <code>K (algebra.adjoin N {x}) L</code> and <code>N (algebra.adjoin N {x}) L</code>. If you have a chain of n fields you're going to need n choose 3 <code>is_scalar_tower</code> instances.</p>",
        "id": 252231772,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1630970323
    },
    {
        "content": "<p>I actually already have <code>is_scalar_tower N (algebra.adjoin N {x}) L</code>, so I guess it's just one extra. <code>is_scalar_tower</code> never felt like it would work for more complicated diagrams, but maybe it does.</p>",
        "id": 252232490,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1630970978
    },
    {
        "content": "<p>I think <code>is_scalar_tower</code> just says \"one triangle commutes in this diagram\" and in a complex diagram there might be lots of triangles</p>",
        "id": 252258449,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1630996804
    },
    {
        "content": "<p>Maybe a little bit of meta code could help us add all those triangles to the context.</p>",
        "id": 252259113,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630997302
    },
    {
        "content": "<p>Certainly lean 4 macros should be able to help us there.</p>",
        "id": 252259139,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630997318
    },
    {
        "content": "<p><code>long_scalar_tower [A, B, C, D, E]</code> just expands to <code>5 choose 3</code> versions of <code>[is_scalar_tower foo bar baz]</code></p>",
        "id": 252259204,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1630997365
    },
    {
        "content": "<p>I'll add the missing instance here tomorrow, probably</p>",
        "id": 252270344,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631003997
    },
    {
        "content": "<p>I really wanted this quickly so <a href=\"https://github.com/leanprover-community/mathlib/issues/9062\">#9062</a></p>",
        "id": 252303422,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1631020802
    },
    {
        "content": "<p>I have the more general version I was thinking of locally, just with an easy sorry left</p>",
        "id": 252345634,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631037525
    },
    {
        "content": "<p>has <a href=\"https://leanprover-community.github.io/mathlib_docs/find/subalgebra.algebra'\">docs#subalgebra.algebra'</a> now resolved this?</p>",
        "id": 252459419,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1631107896
    },
    {
        "content": "<p>Yes. It was all motivated by <a href=\"https://github.com/leanprover-community/mathlib/issues/9110\">#9110</a></p>",
        "id": 252806188,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1631288510
    }
]