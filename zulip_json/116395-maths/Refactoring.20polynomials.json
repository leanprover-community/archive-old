[
    {
        "content": "<p>I'm starting a new thread on this topic. For reference, <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> wrote a proposal over here: <a href=\"https://github.com/leanprover-community/mathlib/issues/1864\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/issues/1864\">#1864</a><br>\nA lot of previous discussion is over here: <a href=\"#narrow/stream/116395-maths/topic/Algebraic.20geometry.20course/near/186673407\" title=\"#narrow/stream/116395-maths/topic/Algebraic.20geometry.20course/near/186673407\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Algebraic.20geometry.20course/near/186673407</a></p>",
        "id": 186676397,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580127668
    },
    {
        "content": "<p>One thing that I would really like to have is given <code>f : polynomial R</code> and <code>r : R</code>, that <code>f r</code> becomes <code>f.eval r</code>. I guess that is possible with <code>coe_to_fun</code>.<br>\nHowever... can we do a similar thing for mv polynomials, and maintain readability?</p>",
        "id": 186676513,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580127763
    },
    {
        "content": "<p>This would require some hackery, because it requires a linear ordering on <code>σ</code></p>",
        "id": 186676567,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580127817
    },
    {
        "content": "<p>Suppose that <code>f : mv_polynomial (fin 3) R</code>. Then I would love to be able to write <code>f [r₁, r₂, r₃]</code>.</p>",
        "id": 186676633,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580127861
    },
    {
        "content": "<p>Is there any chance we can make that happen?</p>",
        "id": 186676648,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580127881
    },
    {
        "content": "<p>Should we add special support for polynomials in <code>n : ℕ</code> variables?</p>",
        "id": 186676944,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1580128151
    },
    {
        "content": "<p>I've been doing algebraic geometry and I'm just at the point where I want to talk about polynomials in n variables. I don't really know what to do. I know what theorems I want to prove but I'm still very confused about what exactly is being suggested. I would happily start refactoring <code>mv_polynomial</code> if someone said \"here's the definitions, here are ten theorems, can you prove then?\" but I don't know where to start if I don't have definitions.</p>",
        "id": 186677077,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1580128308
    },
    {
        "content": "<p>I think, a good first step would be to move <code>algebra</code> below <code>polynomial</code>s in the <code>import</code> chain. This means moving <code>aeval</code> to polynomials.</p>",
        "id": 186721062,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580156335
    },
    {
        "content": "<p>The next step is to define <code>monoid_algebra</code> (e.g., as <code>finsupp</code> or <code>dfinsupp</code>) and prove the universal property (is it already in <code>finsupp</code>?).</p>",
        "id": 186721242,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580156436
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> We have <code>fin.cons</code></p>",
        "id": 186721528,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580156656
    },
    {
        "content": "<p>It has the desired type but lacks notation.</p>",
        "id": 186721596,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1580156708
    }
]