[
    {
        "content": "<p>For anybody interested, I have a draft of the fact that convex functions from a finite dimensional real inner product space to <code>ℝ</code> are continuous in <a href=\"https://github.com/leanprover-community/mathlib/pull/17081\">#17081</a>. The structure of the proof is already set up. What needs doing is filling in the details. In particular, I have trouble with proving continuity from the epsilon-delta definition because my candidate delta is possibly zero, but if you look at the argument (second answer <a href=\"https://math.stackexchange.com/questions/2961783/is-a-convex-function-always-continuous\">here</a>), you will that it should cause any trouble.</p>",
        "id": 305093945,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666250957
    },
    {
        "content": "<p>Help wanted!</p>",
        "id": 305093956,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666250964
    },
    {
        "content": "<p>The \"inner product space\" assumption seems odd.  To generalize to normed space, perhaps you can observe that for vectors <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><msub><mi>v</mi><mi>N</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_1,\\ldots v_N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> which span a finite-dimensional real normed space <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>, the map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mi>N</mi></msup><mo>→</mo><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{R}^N\\to V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8413em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> defined by <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>↦</mo><msub><mo>∑</mo><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x\\mapsto \\sum_i x_iv_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.522em;vertical-align:-0.011em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">↦</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497em;vertical-align:-0.2997em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.162em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is surjective and therefore open.  So the \"strict convex hull\" of such points in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> is open, and so their convex hull is a neighbourhood of zero.</p>\n<p>Relevant lemmas: <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_linear_map.exists_right_inverse_of_surjective\">docs#continuous_linear_map.exists_right_inverse_of_surjective</a>, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/is_open_map.of_sections\">docs#is_open_map.of_sections</a></p>",
        "id": 305103081,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1666254882
    },
    {
        "content": "<p>That's the kind of generalisation I was after, thanks!</p>",
        "id": 305109369,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666257541
    },
    {
        "content": "<p>Where is the fact that this function is surjective? Not sure what the mathlib way of spelling it out is.</p>",
        "id": 305245782,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666303568
    },
    {
        "content": "<p>and do you have a better proof that <code>ball 0 1</code> (in the <code>∞</code>-metric) gets mapped to the convex hull of the parallelepiped than brute-forcing the convex combinations?</p>",
        "id": 305246066,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666303715
    },
    {
        "content": "<p>You may use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/basis.equiv_fun\">docs#basis.equiv_fun</a> with the basis produced by <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finite_dimensional.fin_basis\">docs#finite_dimensional.fin_basis</a> and then you know both direction are continuous (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_map.continuous_of_finite_dimensional\">docs#linear_map.continuous_of_finite_dimensional</a>) so it's a homeomorphism (you just need a Hausdorff TVS, not a norm).</p>\n<p>I also suggest that you use a simplex instead of a hypercube; we have<br>\n0 = 1/(n+1) * (-1, -1, ..., -1) + 1/(n+1) * (1, 0, ..., 0) + 1/(n+1) * (0, 1, ..., 0) + ... + 1/(n+1) * (0, 0, ..., 1)<br>\nand since all coefficients are positive, we may solve easy equations to get a convex combination that sum up to any (small enough) (x1, x2, ..., xn).</p>",
        "id": 305247644,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1666304512
    },
    {
        "content": "<p>The good thing about using an hypercube is that I have access to lemmas like <a href=\"https://leanprover-community.github.io/mathlib_docs/find/convex_hull_prod\">docs#convex_hull_prod</a> (but the pi version, which I apparently forgot to write).</p>",
        "id": 305247916,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666304640
    },
    {
        "content": "<p>I think that allows me to fully avoid touching linear combinations? All the heavy lifting is done by <a href=\"https://leanprover-community.github.io/mathlib_docs/find/Icc_subset_segment\">docs#Icc_subset_segment</a>.</p>",
        "id": 305248729,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666304972
    },
    {
        "content": "<p>Yeah that lemma is pretty convenient and seems to solve all difficulties. I think you can then just use the ∞-metric on R^n, where balls are just <code>set.pi</code> of identical <code>segment</code>s, and then transfer the result to any Hausdorff TVS; just amounts to composing the convex function with the bi-continuous linear_equiv, right?</p>",
        "id": 305250064,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1666305623
    },
    {
        "content": "<p>Something like that, yeah. But there's still a lot of glue missing in between.</p>",
        "id": 305250115,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666305656
    },
    {
        "content": "<p>Right now, I am proving a bunch of properties of the hypercube inline, which doesn't sound great.</p>",
        "id": 305250190,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666305704
    },
    {
        "content": "<p>I am done for today. I just pushed all I have so far and ecnourage anyone to have a look at the seven sorries. None of them is hard, but they sure make me grit my teeth.</p>",
        "id": 305251392,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666306398
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> , take a good book on convex analysis where the mathematical proof is clear.<br>\nOne I like is Hiriart-Urruty, Convex Analysis and Optimization. The proof is pages 173--.</p>",
        "id": 305309837,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1666343497
    },
    {
        "content": "<p>I copy the three relevant pages<br>\n<a href=\"/user_uploads/3121/87d-cCJ-ljToAiDzFa37w025/image.png\">image.png</a> <br>\n<a href=\"/user_uploads/3121/R_ZTtv_r1l4ldXAkvDCm1o8U/image.png\">image.png</a><br>\n<a href=\"/user_uploads/3121/JLwArURNANE_YAdnp7seCp3z/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/87d-cCJ-ljToAiDzFa37w025/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/87d-cCJ-ljToAiDzFa37w025/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/R_ZTtv_r1l4ldXAkvDCm1o8U/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/R_ZTtv_r1l4ldXAkvDCm1o8U/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/3121/JLwArURNANE_YAdnp7seCp3z/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/JLwArURNANE_YAdnp7seCp3z/image.png\"></a></div>",
        "id": 305310125,
        "sender_full_name": "Antoine Chambert-Loir",
        "timestamp": 1666343629
    },
    {
        "content": "<p>You can probably get the surjectivity working with the simplex using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/affine_basis.surjective_coord\">docs#affine_basis.surjective_coord</a></p>",
        "id": 305453291,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1666390944
    },
    {
        "content": "<p>Oh no, I was trying to avoid the relative interior and here it comes again <span aria-label=\"rofl\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rofl\">:rofl:</span></p>",
        "id": 305473947,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666404895
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221653\">@Paul A. Reichert</span>, how are relative things going?</p>",
        "id": 305473970,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1666404922
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/116395-maths/topic/Convex.20functions.20are.20continuous/near/305473970\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"221653\">Paul A. Reichert</span>, how are relative things going?</p>\n</blockquote>\n<p>Oh, I was pushing my code in small PR tranches and then I got sidetracked by the time-intensive weeks before my Master's thesis deadline Thursday, October 27th. After that, I'll continue with the merging work, I promise :)</p>",
        "id": 305554039,
        "sender_full_name": "Paul A. Reichert",
        "timestamp": 1666453743
    },
    {
        "content": "<p>Update: I've picked up where I left a few days ago. I was breaking down my code into smaller PRs and now I have to change some parts of the module about the intrinsic interior to accomodate the changes introduced during code review. So -- I'm not exactly finished but working on it. The main work is extracting the required linear algebra lemmas and PRing them in small pieces.</p>",
        "id": 307575782,
        "sender_full_name": "Paul A. Reichert",
        "timestamp": 1667409181
    }
]