[
    {
        "content": "<p>Now that bornologies have landed in mathlib, I'd like to define the topology of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">S</span></span></span></span>-convergence on spaces of linear maps between two TVSs <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> and <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span>, where <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">S</span></span></span></span> is a set of Von Neumann bounded sets of E, but I'd like to discuss a few design decisions before actually starting to work on that :</p>\n<ul>\n<li>do we want to have type aliases for each possible <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">S</span></span></span></span> ? for each <em>bornology</em>  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">S</span></span></span></span> (since taking the generated bornology doesn't change the topology) ? Or is the von Neumann bornology canonical enough that we can put it as the default topology on <code>E -&gt;L[k] F</code> ?</li>\n<li>If we put a topology on <code>E -&gt;L[k] F</code>, we'll have to make sure that the instance coming from the <code>normed_space</code> structure is defeq to the more general one. Would it work to separate the PRs by first localizing the new instance, and then making it global when everything is fixed ?</li>\n<li>Is there any point to first define the topology of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">S</span></span></span></span>-convergence on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi><mo>−</mo><mo>&gt;</mo><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">E -&gt; F</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> like Bourbaki does (which might mean a new type synonym again...). For example we could redefine compact-open topology from it ?</li>\n<li>What do you think would be easier : giving a neighborhood basis (this is what mathlib does for the compact-open topology), or define it as the initial topology associated with restrictions to set of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"fraktur\">S</mi></mrow><annotation encoding=\"application/x-tex\">\\mathfrak{S}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6914em;\"></span><span class=\"mord mathfrak\">S</span></span></span></span>, whith the topology of uniform convergence on the codomain (this is what Bourbaki does)</li>\n<li>If we don't redefine the compact open topology, nor the weak dual, or anything which could be a special case of this general setup, do we want a <code>topology_of_convergence S</code> Prop-valued typeclass asserting that the topology on a type is (provably) equal to the topology of <code>S</code>-convergence ?</li>\n</ul>\n<p><span class=\"user-mention\" data-user-id=\"197836\">@Jireh Loreaux</span> <span class=\"user-mention\" data-user-id=\"412682\">@Moritz Doll</span> You might have started to work on / think about this, so I'd like to hear your thoughts in particular. I've also seen <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> might need some of this in the sphere-version project, am I right ?</p>\n<p>Anyway, thanks in advance !</p>",
        "id": 276359015,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1648052208
    },
    {
        "content": "<p>To be honest, I have not done much here, and have not started on any of the above. There is <a href=\"https://github.com/leanprover-community/mathlib/pull/12078\">#12078</a> (which is open and ready for anyone reading this; I think Moritz already had a look) that puts a bornology instance on metric spaces. I will probably not contribute much to bornology unless anyone has something specific they want me to do because I have plenty of other things to work on.</p>",
        "id": 276361098,
        "sender_full_name": "Jireh Loreaux",
        "timestamp": 1648052887
    },
    {
        "content": "<p>I think we should define bornological spaces first, <span class=\"user-mention\" data-user-id=\"387244\">@Yaël Dillies</span> wanted to define bornivorous sets, which is needed for that. I thought a bit about the question whether to use type synonyms for all kinds operator topologies and I am tending towards no. Maybe <span class=\"user-mention\" data-user-id=\"110050\">@Sebastien Gouezel</span> has some ideas about that (seems quite related the issues with polish spaces).</p>",
        "id": 276361290,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1648052956
    },
    {
        "content": "<p>@4 I think the initial topology might be less code (but more weird code IMO). You can see the difference between <a href=\"https://leanprover-community.github.io/mathlib_docs/find/weak_bilin\">docs#weak_bilin</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/seminorm_family.module_filter_basis\">docs#seminorm_family.module_filter_basis</a> the weirdness comes when you try to calculate the filter basis - for <code>weak_bilin</code> it is in <a href=\"https://github.com/leanprover-community/mathlib/pull/12623\">#12623</a> (as you can see nobody wants to review that <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> ). In the end it should not matter that much as you have the same results. I found writing the module filter basis way easier as all steps are straightforward.</p>",
        "id": 276372644,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1648057138
    },
    {
        "content": "<p>I'll try to get bornivores out this weekend!</p>",
        "id": 276373120,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1648057353
    },
    {
        "content": "<p>Could you expand on why we need bornological spaces for this ? I see why we need bornologies, but not bornological spaces. Sorry, I'm discovering the maths at the same time, so I don't see the full picture yet <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 276404905,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1648071883
    },
    {
        "content": "<p>But anyway I can wait / help if we need to setup more things first</p>",
        "id": 276404970,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1648071923
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"412682\">Moritz Doll</span> <a href=\"#narrow/stream/116395-maths/topic/Strong.20topology.20on.20linear.20maps/near/276372644\">said</a>:</p>\n<blockquote>\n<p>@4 I think the initial topology might be less code (but more weird code IMO). You can see the difference between <a href=\"https://leanprover-community.github.io/mathlib_docs/find/weak_bilin\">docs#weak_bilin</a> and <a href=\"https://leanprover-community.github.io/mathlib_docs/find/seminorm_family.module_filter_basis\">docs#seminorm_family.module_filter_basis</a> the weirdness comes when you try to calculate the filter basis - for <code>weak_bilin</code> it is in <a href=\"https://github.com/leanprover-community/mathlib/pull/12623\">#12623</a> (as you can see nobody wants to review that <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> ). In the end it should not matter that much as you have the same results. I found writing the module filter basis way easier as all steps are straightforward.</p>\n</blockquote>\n<p>Yeah I know, sometimes filter bases are just painful to use. I've been keeping <a href=\"https://github.com/leanprover-community/mathlib/pull/12118\">#12118</a> \"WIP\" for waaaay too long because I need to refactor some things about filter bases first</p>",
        "id": 276405499,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1648072207
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> <a href=\"#narrow/stream/116395-maths/topic/Strong.20topology.20on.20linear.20maps/near/276404905\">said</a>:</p>\n<blockquote>\n<p>Could you expand on why we need bornological spaces for this ? I see why we need bornologies, but not bornological spaces. Sorry, I'm discovering the maths at the same time, so I don't see the full picture yet <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>\n</blockquote>\n<p>I might have been wrong here, I was under the impression that bornological spaces were needed for some results because they connect the bornology with the TVS structure. I don't know that much about this extremely abstract functional analysis and especially not about bornologies,  I also use lean as a way to learn it.</p>",
        "id": 276407665,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1648073364
    },
    {
        "content": "<p>I would use type synonyms for the three or so standard topologies on operator spaces. More precisely, I would put the standard one (that corresponds to the norm topology) on <code>E -&gt;L[k] F</code>, and use type synonyms for respectively the pointwise convergence topology, and the pointwise weak convergence topology.</p>",
        "id": 276443924,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1648110517
    },
    {
        "content": "<p>Does the topology on <code>E -&gt;L[k] F</code> have to be defeq to the topology induced by the operator norm? Right now the normed space structure on <code>E -&gt;L[k] F</code> is defined using <code>normed_space.of_core</code>. If have a topology (or probably a uniformity) on <code>E -&gt;L[k] F</code> in a more general case then we cannot use <code>of_core</code> but have to provide our proof that the topologies (uniformities) coincide.</p>",
        "id": 276459348,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1648119840
    },
    {
        "content": "<p>Also it seems that the construction in Bourbaki GT.X is more general than what is in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/compact_convergence\">docs#compact_convergence</a> so we should get a generalization of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_map.compact_open_eq_compact_convergence\">docs#continuous_map.compact_open_eq_compact_convergence</a> for the relationship with the compact open topology.</p>",
        "id": 276459871,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1648120131
    },
    {
        "content": "<p>The weak topologies should also be a special case, but I would not worry about that for now.</p>",
        "id": 276459995,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1648120203
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"412682\">Moritz Doll</span> <a href=\"#narrow/stream/116395-maths/topic/Strong.20topology.20on.20linear.20maps/near/276459871\">said</a>:</p>\n<blockquote>\n<p>Also it seems that the construction in Bourbaki GT.X is more general than what is in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/compact_convergence\">docs#compact_convergence</a> so we should get a generalization of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/continuous_map.compact_open_eq_compact_convergence\">docs#continuous_map.compact_open_eq_compact_convergence</a> for the relationship with the compact open topology.</p>\n</blockquote>\n<p>Oh you made me realize that we can't <em>define</em> the compact-open topology this way, because compact-open topology doesn't involve any uniform structure <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 276470170,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1648126204
    },
    {
        "content": "<p>Do we already have a type synonym for functions to an uniform space with the topology of uniform convergence (on the whole domain) ?</p>",
        "id": 276470272,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1648126252
    },
    {
        "content": "<p>Like, all the functions, not only the continuous ones</p>",
        "id": 276470827,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1648126502
    }
]