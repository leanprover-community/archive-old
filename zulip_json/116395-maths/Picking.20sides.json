[
    {
        "content": "<p>Consider the following lemmas from mathlib:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">Œ±</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span>\n\n<span class=\"n\">cluster_point_of_compact</span> <span class=\"o\">[</span><span class=\"n\">compact_space</span> <span class=\"n\">Œ±</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">filter</span> <span class=\"n\">Œ±</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">f</span> <span class=\"bp\">‚â†</span> <span class=\"err\">‚ä•</span> <span class=\"bp\">‚Üí</span> <span class=\"bp\">‚àÉ</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"err\">‚äì</span> <span class=\"err\">ùìù</span> <span class=\"n\">x</span> <span class=\"bp\">‚â†</span> <span class=\"err\">‚ä•</span>\n\n<span class=\"n\">closure_eq_nhds</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">Œ±</span><span class=\"o\">},</span> <span class=\"n\">closure</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"o\">{</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">Œ±</span> <span class=\"bp\">|</span> <span class=\"err\">ùìù</span> <span class=\"n\">a</span> <span class=\"err\">‚äì</span> <span class=\"err\">ùìü</span> <span class=\"n\">s</span> <span class=\"bp\">‚â†</span> <span class=\"err\">‚ä•</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 201889729,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593025365
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span> <span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> is there are reason to keep this discrepancy? I think it causes quite a few <code>rw inf_comm</code> down the road.</p>",
        "id": 201889821,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593025408
    },
    {
        "content": "<p>Does <code>ùìù _ ‚äì _</code> or <code>_ ‚äì ùìù _</code> appear elsewhere?</p>",
        "id": 201890292,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593025610
    },
    {
        "content": "<p>T2 spaces?</p>",
        "id": 201890499,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593025711
    },
    {
        "content": "<p><span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 201890518,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593025725
    },
    {
        "content": "<p>how about xor?</p>",
        "id": 201891192,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593026086
    },
    {
        "content": "<p>If I wrote either of these, I don't remember picking the order for any particular reason.</p>",
        "id": 201891247,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593026126
    },
    {
        "content": "<p><code>def nhds_within (a : Œ±) (s : set Œ±) : filter Œ± := ùìù a ‚äì principal s</code></p>",
        "id": 201891500,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593026267
    },
    {
        "content": "<p>As far as I can see, all occurrences are linked to one of these three sources.</p>",
        "id": 201891563,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593026296
    },
    {
        "content": "<p>I don't claim you wrote any of these, I only pinged people who care about topology and were online at that time.</p>",
        "id": 201891588,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593026318
    },
    {
        "content": "<p>I think changing the order used in the definition of compact would be less work.</p>",
        "id": 201891658,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593026374
    },
    {
        "content": "<p>And I also think that defining <code>cluster_pt (x : X) (F : filter X)</code> would help maintaining consistency.</p>",
        "id": 201891873,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593026488
    },
    {
        "content": "<p>I think that would help with readability too. I have to think a lot about <code>f ‚äì ùìù x ‚â† ‚ä•</code> but I have at least some intuition for cluster points of filters.</p>",
        "id": 201892141,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593026655
    },
    {
        "content": "<p>I'm the worst enemy of the sphere eversion project. Each day I swear I'll work on it I find some tiny mathlib hole to fill and it turns into giant refactoring.</p>",
        "id": 201892690,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593027005
    },
    {
        "content": "<p>Of course this will also impact my recent work on subsequences, where I was already fighting this discrepancy.</p>",
        "id": 201893444,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593027385
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/116395-maths/topic/Picking.20sides/near/201892690\">said</a>:</p>\n<blockquote>\n<p>I'm the worst enemy of the sphere eversion project. Each day I swear I'll work on it I find some tiny mathlib hole to fill and it turns into giant refactoring.</p>\n</blockquote>\n<p>What happened today is I pushed <a href=\"https://github.com/leanprover-community/mathlib/tree/heine-4\">heine-4</a>, I was writting the PR message and I thought: really I should prove that extra theorem before I forgot all about this. And I fell into a new rabbit hole.</p>",
        "id": 201893658,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593027490
    },
    {
        "content": "<p>I think this is a really good use of projects like this -- they test the library</p>",
        "id": 201893869,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593027607
    },
    {
        "content": "<p>But this time you've learnt that the correct thing to do is to fix the library. <code>for_mathlib</code> directories considered harmful.</p>",
        "id": 201893959,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593027653
    },
    {
        "content": "<p>I'll get back to schemes over the summer and will hopefully be doing the same sort of thing</p>",
        "id": 201894029,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593027691
    },
    {
        "content": "<p>I think that it should be normalized to \"nhds first\".</p>",
        "id": 201894084,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1593027720
    },
    {
        "content": "<p>Since I'm a refactoring mood, is there any objection to having notation \\MCP for <code>filter.principal</code>? This appears in more than 250 lines of mathlib without notation.</p>",
        "id": 201894675,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593028051
    },
    {
        "content": "<p>Since <code>principal s</code> is already completely obscure <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> , the notation can only help here!</p>",
        "id": 201894830,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1593028149
    },
    {
        "content": "<p>I have to say I just kind of assumed that <code>ùìü s</code> meant the power set of <code>s</code> without thinking about it</p>",
        "id": 201895121,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593028303
    },
    {
        "content": "<p>Obviously, any amount of contemplation would have shown that this is wrong</p>",
        "id": 201895297,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593028370
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Picking.20sides/near/201893869\">said</a>:</p>\n<blockquote>\n<p>I think this is a really good use of projects like this -- they test the library</p>\n</blockquote>\n<p>Actually, the Heine PR series has nothing to do with this project. It's because of <a href=\"https://leanprover-community.github.io/undergrad_todo.html\">https://leanprover-community.github.io/undergrad_todo.html</a>. Also it's a bit ridiculous that I asked my students to prove the Heine theorem in Lean at the end of  my exam (for function on segments of reals numbers of course) but it's not in mathlib.</p>",
        "id": 201895371,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593028409
    },
    {
        "content": "<p>Reid, do you have a better notation?</p>",
        "id": 201895425,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593028435
    },
    {
        "content": "<p>In order.filter.basic alone, <code>principal</code> appears 139 times...</p>",
        "id": 201895968,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593028719
    },
    {
        "content": "<p>I don't have a better suggestion. If the notation is localized to topology, I think it's unambiguous enough.</p>",
        "id": 201898002,
        "sender_full_name": "Reid Barton",
        "timestamp": 1593029712
    },
    {
        "content": "<p>I'm fixing all the breakage in compactness stuff from switching sides. It's amazing how defining <code>cluster_pt</code> and proving a handful of lemmas about it shortens many proofs.</p>",
        "id": 201906923,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593034561
    },
    {
        "content": "<p>See <a href=\"https://github.com/leanprover-community/mathlib/issues/3160\">#3160</a>.</p>",
        "id": 201915113,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593040491
    },
    {
        "content": "<p>We need to merge that one really fast, because it touches 33 files...</p>",
        "id": 201915149,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593040524
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/116395-maths/topic/Picking.20sides/near/201895371\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Picking.20sides/near/201893869\">said</a>:</p>\n<blockquote>\n<p>I think this is a really good use of projects like this -- they test the library</p>\n</blockquote>\n<p>Actually, the Heine PR series has nothing to do with this project. It's because of <a href=\"https://leanprover-community.github.io/undergrad_todo.html\">https://leanprover-community.github.io/undergrad_todo.html</a>. Also it's a bit ridiculous that I asked my students to prove the Heine theorem in Lean at the end of  my exam (for function on segments of reals numbers of course) but it's not in mathlib.</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/116395-maths/topic/Picking.20sides/near/201895371\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/116395-maths/topic/Picking.20sides/near/201893869\">said</a>:</p>\n<blockquote>\n<p>I think this is a really good use of projects like this -- they test the library</p>\n</blockquote>\n<p>Actually, the Heine PR series has nothing to do with this project. It's because of <a href=\"https://leanprover-community.github.io/undergrad_todo.html\">https://leanprover-community.github.io/undergrad_todo.html</a>. Also it's a bit ridiculous that I asked my students to prove the Heine theorem in Lean at the end of  my exam (for function on segments of reals numbers of course) but it's not in mathlib.</p>\n</blockquote>\n<p>Wait Heine isn't in Mathlib ? Also, I'm keeping this page in a bookmark, that's another idea of things to do this summer <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 201997929,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1593105457
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> <a href=\"#narrow/stream/116395-maths/topic/Picking.20sides/near/201997929\">said</a>:</p>\n<blockquote>\n<p>Wait Heine isn't in Mathlib ? Also, I'm keeping this page in a bookmark, that's another idea of things to do this summer <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>\n</blockquote>\n<p>We could have put the elementary version a long time ago. But doing the general case requires more work, and nobody has needed it up to now. The main reason why this theorem is taught very early is because it's useful in order to construct Riemann integration. mathlib jumped over this and went straight to Lebesgue (and even Bochner actually).</p>",
        "id": 202002171,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593107542
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/116395-maths/topic/Picking.20sides/near/202002171\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> <a href=\"#narrow/stream/116395-maths/topic/Picking.20sides/near/201997929\">said</a>:</p>\n<blockquote>\n<p>Wait Heine isn't in Mathlib ? Also, I'm keeping this page in a bookmark, that's another idea of things to do this summer <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>\n</blockquote>\n<p>We could have put the elementary version a long time ago. But doing the general case requires more work, and nobody has needed it up to now. The main reason why this theorem is taught very early is because it's useful in order to construct Riemann integration. mathlib jumped over this and went straight to Lebesgue (and even Bochner actually).</p>\n</blockquote>\n<p>Yeah I see. In general, would it be a good idea to actually put such specializations first in the library, or do you recommend always starting by the general case ?</p>",
        "id": 202010090,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1593111363
    },
    {
        "content": "<p>We usually start with the general case, but there are exceptions. For instance, the file defining exponential and trigonometric functions is <em>very</em> elementary.</p>",
        "id": 202010209,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593111429
    },
    {
        "content": "<p>Yes, but hopefully it won't stay like that forever.</p>",
        "id": 202015801,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1593114280
    },
    {
        "content": "<p>Sure, but we started with the super elementary approach.</p>",
        "id": 202015856,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593114317
    }
]