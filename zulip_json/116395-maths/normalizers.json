[
    {
        "content": "<p><code>subgroup.normalizer</code> (<a href=\"https://github.com/leanprover-community/mathlib/blob/5d41ec7022a04e5304fb640eac7d7aa699313ca1/src/group_theory/subgroup.lean#L691\">src</a>) is the normalizer of a subgoup. This definition works fine for sets too. I changed it to sets, and the same definition still works fine (it never uses that H is a subgroup), but then in the applications I have a gazillion errors because Lean can't figure out the coercion from <code>subgroup G</code> to <code>set ??</code>. Basically, normalizers work for sets, and are occasionally useful for sets, however in pretty much all applications they're used on subgroups. What is the best way to solve this? I'd like to have access to the set normalizer function.</p>",
        "id": 204891392,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595579731
    },
    {
        "content": "<p>Can we write <code>normalizer</code> just in terms of <code>set</code>, and then have a <code>subgroup.normalizer</code> as essentially a forward that that <code>normalizer</code>, that includes the coercion explicitly.</p>",
        "id": 204891636,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595579939
    },
    {
        "content": "<p>Which namespace does <code>normalizer : set G -&gt; subgroup G</code> go in? I'm not very good at namespaces</p>",
        "id": 204892761,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595580798
    },
    {
        "content": "<p><code>group</code>?</p>",
        "id": 204907713,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1595592561
    },
    {
        "content": "<p>I'm imagining I've done <code>open group</code>. If I have a set s I can say <code>normalizer s</code> and if I have a subgroup H I can say <code>H.normalizer</code></p>",
        "id": 204907843,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1595592672
    }
]