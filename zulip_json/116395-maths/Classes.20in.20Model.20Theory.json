[
    {
        "content": "<p>I've made several recent PRs adding more model theory to the library, and one of my goals is to prove the existence and uniqueness of Fraisse limits. I have some work to that effect at <a href=\"https://github.com/leanprover-community/mathlib/tree/fraisse_limit\">branch#fraisse_limit</a>.</p>",
        "id": 271669309,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1644641007
    },
    {
        "content": "<p>However, I'm not sure what the best formalism is for a Fraisse class.</p>",
        "id": 271669362,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1644641078
    },
    {
        "content": "<p>In that branch, so far, I've really used a notion of a Fraisse family, that is, <code>{ι : Type*} (K : ι → Type*) [Π i, L.Structure (K i)]</code>.</p>",
        "id": 271669443,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1644641194
    },
    {
        "content": "<p>Is this better than considering a Fraisse class as a predicate on structures which is invariant under isomorphisms? The latter seems a little harder to work with, but more honest to my mathematical intuition, and seems more amenable to discussing whether a class of structures is axiomatizable.</p>",
        "id": 271669525,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1644641348
    },
    {
        "content": "<p>People who might have opinions: <span class=\"user-mention\" data-user-id=\"298851\">@Patrick Lutz</span>  <span class=\"user-mention\" data-user-id=\"111080\">@Floris van Doorn</span></p>",
        "id": 271669582,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1644641410
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133584\">@Joseph Hua</span> did you see this?</p>",
        "id": 271679977,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1644658300
    },
    {
        "content": "<p>I'm not too familiar with the mathematics here, but if the main usage is to construct a new model <code>M</code> out of a collection of existing models <code>K i</code>, then it makes sense to define it as a family of structures as you wrote in your messages.</p>",
        "id": 272103197,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1645010598
    },
    {
        "content": "<p>As I've been playing with this, I've realized that even if one starts with a family of structures, one in practice has to reduce everything to the case of a family indexed by <code>nat</code>. Thus I think it using a family doesn't give me the practical advantage I thought, so I may switch to a property.</p>",
        "id": 272187080,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1645049735
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/12138\">#12138</a></p>",
        "id": 272491915,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1645244572
    }
]