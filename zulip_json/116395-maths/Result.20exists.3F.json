[
    {
        "content": "<p>Is there any results in mathlib similar to this, <code>int.gcd a b = int.gcd c d ↔ ∀ k, (k ∣ a) ∧ (k ∣ b) ↔ (k ∣ c) ∧ (k ∣ d)</code>, exist?</p>",
        "id": 179756158,
        "sender_full_name": "rory",
        "timestamp": 1572803167
    },
    {
        "content": "<p>I guess the roadmap to proving this would be to show that away from the edge cases, the gcd is the largest non-negative int dividing both (which might be in mathlib, it sounds like a natural statement) and then use the fact that if two finite sets are equal then so is their largest element.</p>",
        "id": 179757031,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572804420
    },
    {
        "content": "<p>My gut feeling is that mathlib is a library of standard results (like the two I mentioned) but then probably it's the user's job to put them together to make statements such as this.</p>",
        "id": 179757084,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572804501
    },
    {
        "content": "<p>Hopefully there is a lemma <code>(k ∣ a) ∧ (k ∣ b) ↔ k ∣int.gcd a b</code>. That already gives you one direction.</p>",
        "id": 179765601,
        "sender_full_name": "Reid Barton",
        "timestamp": 1572818906
    },
    {
        "content": "<p>For the other direction you need to show that two nonnegative integers which divide each other are equal, which should also be a lemma</p>",
        "id": 179765623,
        "sender_full_name": "Reid Barton",
        "timestamp": 1572818966
    },
    {
        "content": "<p>Aah yes this is a much neater way to do it.</p>",
        "id": 179767023,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1572821518
    },
    {
        "content": "<p>The result Reid mentions is </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">dvd_gcd_iff</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">gcd</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>in <code>algebra.gcd_domain</code></p>",
        "id": 179862498,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1572893624
    },
    {
        "content": "<p>oh I tried looking for it in <code>euclidean_domain</code></p>",
        "id": 179862534,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1572893645
    },
    {
        "content": "<p>The single direction exists multiple times, in <code>algebra.euclidean_domain</code> and <code>data.nat.gcd</code> and <code>data.pnat.basic</code></p>",
        "id": 179862691,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1572893734
    },
    {
        "content": "<blockquote>\n<p>The result Reid mentions is </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">dvd_gcd_iff</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">gcd</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"bp\">↔</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">b</span> <span class=\"bp\">∧</span> <span class=\"n\">a</span> <span class=\"err\">∣</span> <span class=\"n\">c</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>in <code>algebra.gcd_domain</code></p>\n</blockquote>\n<p>How do I eventually convert from <code>gcd a b</code> to  <code>int.gcd</code>?<br>\nThe final result could be proved using <code>int.antisymm</code>, but that requires <code>int.gcd</code> not <code>gcd</code></p>",
        "id": 180025759,
        "sender_full_name": "rory",
        "timestamp": 1573042511
    },
    {
        "content": "<p>there is almost certainly an analogous theorem for <code>int.gcd</code></p>",
        "id": 180025853,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1573042592
    },
    {
        "content": "<p>Hm, this particular theorem appears to be missing, but you can reconstruct it from <code>int.dvd_gcd</code>, <code>int.gcd_dvd_left</code>, <code>int.gcd_dvd_right</code></p>",
        "id": 180026003,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1573042764
    },
    {
        "content": "<p>or you can use <code>int.coe_gcd</code> to convert <code>gcd</code> to <code>int.gcd</code></p>",
        "id": 180026086,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1573042813
    }
]