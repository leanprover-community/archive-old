[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266253\">@Joseph Myers</span> <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> What do you think about rewriting the definition of <code>affine_subspace</code> in the following way?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">affine_subspace</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">k</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">V</span><span class=\"o\">]</span>\n    <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">k</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">affine_space</span> <span class=\"n\">V</span> <span class=\"n\">P</span><span class=\"o\">]</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">carrier</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">P</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">direction</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">k</span> <span class=\"n\">V</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">vadd_mem_iff'</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∈</span> <span class=\"n\">carrier</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">v</span><span class=\"o\">),</span> <span class=\"n\">v</span> <span class=\"bp\">+ᵥ</span> <span class=\"n\">p</span> <span class=\"bp\">∈</span> <span class=\"n\">carrier</span> <span class=\"bp\">↔</span> <span class=\"n\">v</span> <span class=\"bp\">∈</span> <span class=\"n\">direction</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">nonempty'</span> <span class=\"o\">:</span> <span class=\"n\">direction</span> <span class=\"bp\">≠</span> <span class=\"bp\">⊥</span> <span class=\"bp\">→</span> <span class=\"n\">carrier.nonempty</span><span class=\"o\">)</span>\n</code></pre></div>\n\n<p>This approach allows us to define subspaces with good defeq properties of <code>direction</code>, and is more consistent with what we do for <code>affine_map</code>s. <span class=\"user-mention\" data-user-id=\"266253\">@Joseph Myers</span> I'm sorry if I was the one who advised against bundling <code>direction</code> when you were writing this part of the library.</p>",
        "id": 213788185,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603115579
    },
    {
        "content": "<p>This should be fine, as long as you provide a function constructing this from the old definition of course.</p>",
        "id": 213794173,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1603117959
    },
    {
        "content": "<p>Of course.</p>",
        "id": 213799376,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603119954
    },
    {
        "content": "<p>I think this should mainly just rearrange details of which lemmas are true by <code>rfl</code> and which actually require something to be proved.</p>",
        "id": 213832499,
        "sender_full_name": "Joseph Myers",
        "timestamp": 1603135294
    },
    {
        "content": "<p>You originally suggested unbundled direction along with allowing empty affine subspaces. When I became convinced that empty affine subspaces were indeed useful, I then moved to unbundled direction along with allowing them (but of course you can bundle direction and still allow empty affine subspaces, via <code>nonempty'</code> as you have above).</p>",
        "id": 213832651,
        "sender_full_name": "Joseph Myers",
        "timestamp": 1603135384
    }
]