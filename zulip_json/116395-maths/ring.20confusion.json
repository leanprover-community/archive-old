[
    {
        "content": "<p>Goal before I apply <code>ring</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"bp\">-</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n</pre></div>\n\n\n<p>Goal after applying <code>ring</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">val</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">snd</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">val</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">fst</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n</pre></div>\n\n\n<p>Me after applying <code>ring</code>: <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> <span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span> <span aria-label=\"rage\" class=\"emoji emoji-1f621\" role=\"img\" title=\"rage\">:rage:</span></p>",
        "id": 159706972,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551442770
    },
    {
        "content": "<p>Try <code>simp</code>?</p>",
        "id": 159710281,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1551445417
    },
    {
        "content": "<p>I feel like with <code>linarith</code> I have got to the point where I understand what the tactic is doing so I can use it well. I had thought the same was true with <code>ring</code> but this confuses me. If you <code>generalize</code> <code>x.snd</code> or <code>x.snd.val</code> presumably the problem goes away?</p>",
        "id": 159710439,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1551445511
    },
    {
        "content": "<p>This means it doesn't think the two <code>x.snd.val</code>'s are the same</p>",
        "id": 159747753,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551473361
    },
    {
        "content": "<p>Is there more than one x?</p>",
        "id": 159747897,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1551473484
    },
    {
        "content": "<p>nope</p>",
        "id": 159748053,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551473591
    },
    {
        "content": "<p><code>simp</code> closes the second goal (but not the first)</p>",
        "id": 159748083,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1551473619
    },
    {
        "content": "<p>The equality relation used by <code>ring</code> is very restrictive, because it has to totally order the terms</p>",
        "id": 159749094,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551474413
    },
    {
        "content": "<p>To do something else would require a preprocessing step to merge defeq things or something</p>",
        "id": 159749123,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551474439
    }
]