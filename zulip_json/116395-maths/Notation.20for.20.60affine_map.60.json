[
    {
        "content": "<p>Now <code>affine_map</code> has only 3 explicit arguments, so I think it's time we add a notation. <code>R →ₐ S</code> is taken by <a href=\"https://leanprover-community.github.io/mathlib_docs/find/alg_hom\">docs#alg_hom</a> (at least until someone migrates it to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/mul_semiring_action_hom\">docs#mul_semiring_action_hom</a>). We have the following options:</p>\n<ul>\n<li><code>P₁ →ₐ[k] P₂</code>; lean will be able to tell it from <code>alg_hom</code> because of <code>[k]</code></li>\n<li><code>P₁ →ᵃᶠᶠ[k] P₂</code> (I found no subscript <code>f</code>);</li>\n<li><code>P₁ →ᵃ[k] P₂</code>.<br>\nWhat do you think?</li>\n</ul>",
        "id": 213717457,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603043699
    },
    {
        "content": "<p>I like 1 and 3. The middle one seems too long</p>",
        "id": 213719729,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1603047153
    },
    {
        "content": "<p>I was wrong about 1: of course, <code>alg_hom</code> needs to know the ring.</p>",
        "id": 213721190,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603049067
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/4675\">#4675</a></p>",
        "id": 213721396,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603049397
    },
    {
        "content": "<p>I'm tempted to merge right away, but it would be nice to read <span class=\"user-mention\" data-user-id=\"266253\">@Joseph Myers</span>'s opinion first.</p>",
        "id": 213721480,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1603049483
    },
    {
        "content": "<p>And wait for the CI</p>",
        "id": 213721483,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603049501
    },
    {
        "content": "<p>BTW, I'm working on <code>affine_equiv</code></p>",
        "id": 213721490,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603049515
    },
    {
        "content": "<p>bors will wait for CI anyway</p>",
        "id": 213721493,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1603049518
    },
    {
        "content": "<p>Any of those notations seem fine to me (hoping the notation for <code>affine_equiv</code> is consistent with that for <code>affine_map</code>).</p>",
        "id": 213724484,
        "sender_full_name": "Joseph Myers",
        "timestamp": 1603053262
    },
    {
        "content": "<p>It's sold then!</p>",
        "id": 213724509,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1603053306
    },
    {
        "content": "<p>As someone reading this on android, any tips for working out the symbol being proposed here (and other unicode-heavy messages)? Both the github page and zulip seem unaware of these unicode characters!</p>",
        "id": 213725246,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1603054366
    },
    {
        "content": "<p>I really dislike the fact that Android doesn't let me easily install a more unicode-friendly system font.</p>",
        "id": 213725432,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603054658
    },
    {
        "content": "<p>Here is item 3 in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding=\"application/x-tex\">\\LaTeX</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.89883em;vertical-align:-0.2155em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">L</span><span class=\"mspace\" style=\"margin-right:-0.36em;\"></span><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.68333em;\"><span style=\"top:-2.904999em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord\"><span class=\"mord textrm mtight sizing reset-size6 size3\">A</span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.15em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">T</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.46782999999999997em;\"><span style=\"top:-2.7845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord textrm\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2155em;\"><span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.125em;\"></span><span class=\"mord textrm\">X</span></span></span></span></span></span>: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub><msup><mo>→</mo><mi>a</mi></msup><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><msub><mi>P</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">P_1\\to^a[k]P_2</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\">→</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>",
        "id": 213725518,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603054761
    },
    {
        "content": "<p>Ah, just the monospace font is lacking, I can recover it (→ᵃ[ℝ]) through copy paste</p>",
        "id": 213726071,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1603055471
    },
    {
        "content": "<p>Can you elaborate on mul_semiring_action_hom? Is it identical to alg_hom, or is it weaker?</p>",
        "id": 213726142,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1603055559
    },
    {
        "content": "<p>And can/should <a href=\"https://leanprover-community.github.io/mathlib_docs/find/distrib_mul_action_hom\">docs#distrib_mul_action_hom</a>` replace <a href=\"https://leanprover-community.github.io/mathlib_docs/find/linear_map\">docs#linear_map</a>?</p>",
        "id": 213726269,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1603055742
    },
    {
        "content": "<p>not with a name like that</p>",
        "id": 213726366,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1603055855
    },
    {
        "content": "<p>Well, can one be an abbreviation of/ extend the other so that they're at least defeq?</p>",
        "id": 213726834,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1603056376
    },
    {
        "content": "<p>Bad name is the main reason why I haven't redefined <code>linear_map</code> to be <code>distrib_mul_action_hom</code> yet.</p>",
        "id": 213727120,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603056714
    },
    {
        "content": "<p>affine equivs: <a href=\"https://github.com/leanprover-community/mathlib/issues/2909\">#2909</a></p>",
        "id": 213817156,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1603127763
    }
]