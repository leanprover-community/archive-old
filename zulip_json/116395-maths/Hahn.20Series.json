[
    {
        "content": "<p>I currently have a stack of PRs forming on Hahn series, so I’m starting a thread.</p>",
        "id": 226276899,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613262051
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/issues/6208\">#6208</a> is needed to define multiplication, and <a href=\"https://github.com/leanprover-community/mathlib/issues/6226\">#6226</a> is needed to show the product is an actual Hahn series.</p>",
        "id": 226276947,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613262132
    },
    {
        "content": "<p>These are put to work in <a href=\"https://github.com/leanprover-community/mathlib/tree/hahn_series\">branch#hahn_series</a>.</p>",
        "id": 226276950,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613262148
    },
    {
        "content": "<p>I’m interested in any thoughts as to whether Laurent series should actually be defined as <code>hahn_series Z _</code>, or if I should just give an iso when both are done.</p>",
        "id": 226277025,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613262337
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span></p>",
        "id": 226277027,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613262348
    },
    {
        "content": "<p>My plan was to define Laurent series as Hahn series with coefficients in Z and to prove that that were a localisation of power series in one variable at the variable. Thanks so much for doing this!</p>",
        "id": 226293090,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1613291479
    },
    {
        "content": "<p>Ok, <a href=\"https://github.com/leanprover-community/mathlib/issues/6237\">#6237</a> gets up to the <code>comm_ring</code> structure.</p>",
        "id": 226345143,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613364600
    },
    {
        "content": "<p>Cool! You are moving fast!</p>",
        "id": 226347089,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1613367454
    },
    {
        "content": "<p>How nice! You did a really nice job, I am learning a lot reading what you did.</p>",
        "id": 226365625,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1613384172
    },
    {
        "content": "<p>Let me know if you have any further questions about it, it'd help the documentation.</p>",
        "id": 226404460,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613406191
    },
    {
        "content": "<p>Other than the order theory, creating a new type of series with a convolution product is a bit boilerplate, except for a few small things that can go wrong in the distributivity/associativity proofs, which go wrong differently in each different context it seems...</p>",
        "id": 226404602,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613406275
    },
    {
        "content": "<p>While <span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span>  was developing the more powerful theory of Hahn Series, I've amused myself defining Laurent series (in one variable), and <code>PR</code> it in <a href=\"https://github.com/leanprover-community/mathlib/issues/6258\">#6258</a>. There are still some <code>sorry</code>s left concerning associativity, but the basics of it being a <code>comm_ring</code> (when the coefficients are) is there. I've also defined coefficients (as a function from <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"double-struck\">Z</mi></mrow><annotation encoding=\"application/x-tex\">\\mathbb{Z}</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68889em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">Z</span></span></span></span></span> to the base ring). Being much less experienced  then <span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span> , my code is by far less efficient and I wonder if anything of what I've done should be kept or if the approach through Hahn series  makes everything obsolete. Before going further, I'd appreciate if anyone can have a look and tell me if it is worth spending more time on my approach, or not.</p>",
        "id": 226499114,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1613473060
    },
    {
        "content": "<p>I think the biggest issue is that working with quotients is difficult.</p>",
        "id": 226550838,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613498356
    },
    {
        "content": "<p>Personally I think it's much easier to define Laurent series as a subtype of a type of functions like how I defined Hahn series, or if you want to use ordered pairs, make the pair representation unique, like perhaps by representing it as a pair of a coefficient function with a rank, where the rank lives in <code>with_top Z</code>, with the rule that the rank is the largest possible rank such that all coefficients below that rank are 0.</p>",
        "id": 226551455,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613498612
    },
    {
        "content": "<p>The benefit of your sort of pair representation is in defining the embedding of power series into Laurent series, and I'll admit I haven't gotten there yet, but I think it should still not be too bad with Hahn series</p>",
        "id": 226552302,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1613498962
    },
    {
        "content": "<p>The actual Hahn series PR <a href=\"https://github.com/leanprover-community/mathlib/issues/6237\">#6237</a> is now unblocked. I've started developing the valuation at <a href=\"https://github.com/leanprover-community/mathlib/tree/hahn_series2\">branch#hahn_series2</a>, but won't be able to get around to it again for at least a week.</p>",
        "id": 227515633,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1614119169
    },
    {
        "content": "<p>An update on the Hahn series project if anyone wants it:</p>",
        "id": 233766117,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1617942025
    },
    {
        "content": "<p>I'm inching closer towards being able to define the field structure. The critical step that remains is proving Higman's Lemma.</p>",
        "id": 233766183,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1617942090
    },
    {
        "content": "<p>To do that, I started expanding the API on partial well-orderings,  and in the process of looking into all of this, found that with partial well-orderings, we can drop the linearity assumption on the monomial group, which means that things like multivariable Laurent series should be possible. This is what <a href=\"https://github.com/leanprover-community/mathlib/issues/7131\">#7131</a> is for.</p>",
        "id": 233766273,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1617942166
    },
    {
        "content": "<p>I've delayed defining Laurent series until I have the field structure, so I can define the localization map as a localization map, but if anyone has any requests for Laurent series API, I'd be happy to discuss it.</p>",
        "id": 233766310,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1617942225
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span> This is becoming a pretty huge project, but I'm really happy you are doing it. I don't have a pressing need for Laurent series right now. But probably in a couple of months, yes.<br>\nAnd it's just great to know that by that time there will be a solid API in place!</p>",
        "id": 233770175,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1617946022
    },
    {
        "content": "<p>Yes this is a much overdue API. Many thanks!</p>",
        "id": 233772289,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1617948134
    },
    {
        "content": "<p>Yes, this is rather more complicated than just defining Laurent series, but we should also be able to get Puiseux series for cheap, and Hahn series themselves are nice.</p>",
        "id": 233837220,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1617980632
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"302826\">Aaron Anderson</span> <a href=\"#narrow/stream/116395-maths/topic/Hahn.20Series/near/233766183\">said</a>:</p>\n<blockquote>\n<p>I'm inching closer towards being able to define the field structure. The critical step that remains is proving Higman's Lemma.</p>\n</blockquote>\n<p>Apparently Higman's Lemma was already done in lean by <span class=\"user-mention\" data-user-id=\"110187\">@Minchao Wu</span> in the Kruskal's Tree Theorem project</p>",
        "id": 233872553,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1617994254
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"302826\">@Aaron Anderson</span> Higman’s Lemma was done in a very early version of Lean 3 and has not yet been ported to the current mathlib. I can modernize it and make a PR if people want it.</p>",
        "id": 233904196,
        "sender_full_name": "Minchao Wu",
        "timestamp": 1618009425
    },
    {
        "content": "<p>I am already working on it, taking inspiration from your strategy. It would need to be connected to my definitions about well-quasi orders anyway.</p>",
        "id": 233904440,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1618009589
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/higmans_lemma\">branch#higmans_lemma</a></p>",
        "id": 233920824,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1618024531
    },
    {
        "content": "<p>Starting this at <a href=\"https://github.com/leanprover-community/mathlib/issues/7165\">#7165</a></p>",
        "id": 234239618,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1618266213
    },
    {
        "content": "<p>I have been trapped by other tasks last week and just came back to this. It seems that the formalization is almost done (and looks very nice), but I’ll try to see if there’s anything I can do.</p>",
        "id": 235072962,
        "sender_full_name": "Minchao Wu",
        "timestamp": 1618753251
    },
    {
        "content": "<p>It occurs to me that <code>finsum</code> can probably cut a lot of the nasty proofs way down</p>",
        "id": 235913055,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1619213757
    },
    {
        "content": "<p>Hrmm... I'm not so sure. I've started at <a href=\"https://github.com/leanprover-community/mathlib/tree/hahn_finsum\">branch#hahn_finsum</a>, and I'd like some input as to whether this is better.</p>",
        "id": 236013333,
        "sender_full_name": "Aaron Anderson",
        "timestamp": 1619303471
    }
]