[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126734\">@Thomas Eckl</span> There have been several discussions on Zulip about this topic, which you might find entertaining: <a href=\"#narrow/stream/113488-general/topic/what.20is.20wrong.20with.20HoTT\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/what.20is.20wrong.20with.20HoTT</a></p>",
        "id": 204191082,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594981801
    },
    {
        "content": "<p><a href=\"#narrow/stream/116395-maths/topic/Univalence\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/Univalence</a></p>",
        "id": 204191151,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594981846
    },
    {
        "content": "<p><a href=\"#narrow/stream/113488-general/topic/HoTT.20in.20Lean\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/HoTT.20in.20Lean</a></p>",
        "id": 204191205,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594981910
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126734\">@Thomas Eckl</span> That doesn't mean that we shouldn't have another discussion/chat in the future (-;</p>",
        "id": 204191297,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1594981986
    },
    {
        "content": "<p>The threads made interesting reading. I discovered Gabriel Ebner's project porting the Lean 2 HoTT library to Lean 3 - I will try to use it asap.</p>\n<p>I also liked how Kevin Buzzard and you insist that the ordinary working mathematician does not want to be bothered with type theory, let alone homotopy type theory. But the point for me is something else to what Kevin alludes: Type theory, and then homotopy type theory allows to do maths in a way that working mathematicians are much more used to than proofs in ZFC. There are more mathematical objects  than just sets; types are sets \"done right\", with proper objects as elements; and with univalence you can argue up to isomorphism. That's what allured me to (homotopy) type theory, not some perverse interest in foundations. And that's why I also don't care if homotopy type theory does not make formalizing easier (a comment of Mario Carneiro), it just should not get more difficult (and unfortunately, there is a possibility for that, as Floris van Doorn pointed out). My hope is that it feels more natural, and that's what will attract mathematicians.</p>\n<p>Actually, there is a fascinating parallel to the change from 19th to 20th century mathematics: The reason why mathematicians followed the more formal ways of doing mathematics paved by Hilbert and leading up to Bourbaki, despite the rage of the old and influential guard around Felix Klein and Henri Poincare, was not thatbthey cared so much about foundations, but becuase it was easier to do mathematics that way. Frank Quinn wrote a lot about this era and what conclusions we should draw from it nowadays  : <a href=\"https://www.ams.org/notices/201201/rtx120100031p.pdf\">https://www.ams.org/notices/201201/rtx120100031p.pdf</a> . I think that's also a point against Kevin's dismissal of \"implementation issues\":They play a decisive role, but often in a way not consciously recognized.</p>\n<p>I think for the next time I will continue to formalize localization in my little project (and maybe extend it to the formalization of schemes, which Kevin would like to see).  Then I will have a better idea whether my hopes are realistic and will be ready for a more substantial discussion.</p>",
        "id": 204216309,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1594998037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"126734\">@Thomas Eckl</span> Those are very good points, and I think I mostly agree with what you say. I find HoTT (as a general principle, not 1 implementation, so also cubical stuff, etc) very enticing as a mathematician.</p>\n<p>But <em>right now</em> I do not see what it buys me when I try to formalise things. And this is probably mostly a technical issue. Currently, the univalence principle is an extremely nice idea, but the implementations in current provers are such that in practice you avoid it. (This is what I learnt explicitly during my brief experiment in Coq.)</p>\n<p>I also think that the burden of proof for usability rests with the proponents of HoTT. But it seems that the community around HoTT is (mostly) more interested in pushing the foundations, rather than demonstrating that you can do \"real-world maths\" in proof assistants using HoTT.</p>\n<p>And that's totally fine. Because maybe by pushing those foundations, they will solve the problems I was talking about 2 paragraphs up. And maybe it will just take some time before enough mathematicians jump on the bandwagon.<br>\nBut I'm not the right person for developing these foundations. So right now, I'm happy to use Lean, because that's where the maths is happening, and that's what I care about.</p>\n<p>In the end, and that's also what Kevin has stressed before, lots of people should just try lots of systems. That's the best way to push their boundaries, and the best way to figure out what we really need.</p>",
        "id": 204226677,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595002614
    },
    {
        "content": "<p>I think that if we can finally get mathematicians using these systems there will be a lot of things we will learn about their pros and cons when it comes to mathematics.</p>",
        "id": 204229918,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595004352
    },
    {
        "content": "<p>Thank you for linking to the article by Quinn, it makes for interesting reading.</p>",
        "id": 204232114,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1595005562
    },
    {
        "content": "<p>Wow, that was an interesting read indeed!</p>",
        "id": 204243751,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595011608
    },
    {
        "content": "<p>The last page suggests that we should redesign NNG (kids don't like walls of text), and give some really precise and clear explanations. And then just make 8 year old kids play the game.</p>",
        "id": 204243831,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595011657
    },
    {
        "content": "<p>We've seen that some of our own kids are actually capable of playing it. Can we scale from 5 kids to 5000 kids?</p>",
        "id": 204243890,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595011683
    },
    {
        "content": "<p>(Maybe the most important thing would be to have a professional web-designer have a look at the project.)</p>",
        "id": 204243968,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1595011724
    },
    {
        "content": "<p>Yeah I've said this before -- the NNG could really benefit from being looked at by someone who actually knows what they're doing. If we could get it working on mobile it would be awesome but maybe this is just asking too much.</p>",
        "id": 204261541,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595021236
    },
    {
        "content": "<p>Typing code on mobile is terrible because of automatic correction</p>",
        "id": 204261951,
        "sender_full_name": "Anatole Dedecker",
        "timestamp": 1595021462
    },
    {
        "content": "<p>My kids are always on their phones. It would be great to get lean onto mobile somehow</p>",
        "id": 204262122,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595021564
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"268315\">Anatole Dedecker</span> <a href=\"#narrow/stream/238830-Lean-for.20the.20curious.20mathematician.202020/topic/Previous.20discussions.20on.20Lean.20and.20HoTT/near/204261951\">said</a>:</p>\n<blockquote>\n<p>Typing code on mobile is terrible because of automatic correction</p>\n</blockquote>\n<p>Unless you turn automatic correction off.</p>",
        "id": 204262165,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595021589
    },
    {
        "content": "<p>Yeah for mobile it seems there would need to be a remote lean server, rather than actually running lean on the phone. Perhaps this is something that should be thought about in conjunction with the <a href=\"#narrow/stream/113488-general/topic/cloud.20computing.20possibilities/near/197868435\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/cloud.20computing.20possibilities/near/197868435</a> cloud computing thread. How feasible is it to have a lean server that everyones app connects to (probably to one lean instance each) that then runs 10 sessions of the nng at once?</p>",
        "id": 204262593,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1595021804
    },
    {
        "content": "<p>Notwithstanding the beauty of a dedicated general server, the NNG is actually run on an Imperial College server AFAIK. So on the phone all you'd need would be a web browser-:)</p>",
        "id": 204262856,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595021971
    },
    {
        "content": "<p>Wait whattttt</p>",
        "id": 204262874,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1595021987
    },
    {
        "content": "<p>I mean this:</p>\n<p><a href=\"https://wwwf.imperial.ac.uk/~buzzard/xena/natural_number_game/\">https://wwwf.imperial.ac.uk/~buzzard/xena/natural_number_game/</a></p>",
        "id": 204262986,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595022044
    },
    {
        "content": "<p>Perhaps, find a way to pay William Stein et al. to run NNG off <a href=\"http://cocalc.com\">cocalc.com</a> - surely they'd take care of scalability very well indeed.</p>",
        "id": 204263245,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595022210
    },
    {
        "content": "<p>The web pages are hosted at Imperial but I think the way it works is that the lean server is hosted on your own computer</p>",
        "id": 204263552,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595022400
    },
    {
        "content": "<p>The issue with mobile and the NNG is that the web editor uses <a href=\"https://microsoft.github.io/monaco-editor/\">Monaco</a>, which has terrible mobile support. In fact, most Javascript text editors are pretty awful on mobile devices at the moment. I'm hoping that <a href=\"https://codemirror.net/6/\">Codemirror 6</a> will solve all our issues, but it's still not ready for primetime (and we'd have to write some new integration code as well).</p>",
        "id": 204263589,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595022424
    },
    {
        "content": "<p>We've discussed this before and I don't think anything has changed since then <a href=\"#narrow/stream/113488-general/topic/online.20leanprover/near/170927874\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/online.20leanprover/near/170927874</a></p>",
        "id": 204263693,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595022491
    },
    {
        "content": "<p>Hmm, actually Codemirror 6 is further along than I expected. Maybe I'll take a closer look when I have time... (at least a week from now, unfortunately).</p>",
        "id": 204263782,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595022588
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/238830-Lean-for.20the.20curious.20mathematician.202020/topic/Previous.20discussions.20on.20Lean.20and.20HoTT/near/204263552\">said</a>:</p>\n<blockquote>\n<p>The web pages are hosted at Imperial but I think the way it works is that the lean server is hosted on your own computer</p>\n</blockquote>\n<p>hmm, no, NNG works from any computer with a web browser, and no Lean in sight. I'm sure a Lean  instance is running at Imerial.<br>\n(unless you can embed Lean in Javascript, which I highly doubt)</p>",
        "id": 204263930,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595022692
    },
    {
        "content": "<p>You can embed Lean in Javascript.</p>",
        "id": 204264032,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595022750
    },
    {
        "content": "<p>Lean can be compiled to webassembly and then run from javascript.</p>",
        "id": 204264172,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595022845
    },
    {
        "content": "<p>OK, so that's the solution to the puzzle.</p>",
        "id": 204264226,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595022901
    },
    {
        "content": "<p>The NNG and the lean-web-editor are already statically hosted. There are no \"backend\" servers running Lean. When your browser visits those pages, it downloads a webassembly version of Lean and runs that on your computer.</p>",
        "id": 204264263,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595022931
    },
    {
        "content": "<p>Can any smartphone execute javascript? Or webassembly.</p>",
        "id": 204264268,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595022934
    },
    {
        "content": "<p>Most can; the issue with the NNG on phones is that the input interface hardly works.</p>",
        "id": 204264290,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595022953
    },
    {
        "content": "<p>See the thread I linked above.</p>",
        "id": 204264348,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595022975
    },
    {
        "content": "<p>OK, so aside from that it should work. Does it only mean \"harder to type\", or is there more to it?</p>",
        "id": 204264407,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595023036
    },
    {
        "content": "<p>OK, I stand corrected. Webassmebly is hard, I am very impressed!</p>",
        "id": 204264428,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595023057
    },
    {
        "content": "<p>Different issues on Android and iOS, I think. I can't test with Android, but on my iPad / iPhone, (last time I tried, months ago) typing in Lean code leads to weird zooming-in issues. Maybe it's better now, not sure.</p>",
        "id": 204264508,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595023107
    },
    {
        "content": "<p>In the thread I linked above, <span class=\"user-mention\" data-user-id=\"128280\">@Wojciech Nawrocki</span> said that backspace doesn't work on Android.</p>",
        "id": 204264546,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595023137
    },
    {
        "content": "<p>For what I can see right now from a brief test, it works on my iPad. Modulo the many characters/inputs I didn't check, of course.</p>",
        "id": 204264946,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595023442
    },
    {
        "content": "<p>perhaps, a CS student project to fix this mobile thing is possible. Probably fullblown javascript editor is not needed, either.</p>",
        "id": 204265035,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595023498
    },
    {
        "content": "<p>I guess one thing we could figure out what's the best way to have mobile users trigger unicode conversion, since it's harder to hit \"tab\" (at least on iPhones and iPads). While hitting \"space\" works, it's kind of annoying if you have to backspace away those extra spaces all the time.</p>",
        "id": 204265099,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595023558
    },
    {
        "content": "<p>A full blown editor with some extension support certainly makes it much easier to work with Lean, since the editor should be able to display the info / warning / error diagnostics, be able to provide completions, as well as support hover for doc strings, etc. And this is even before trying to implement the new widget functionality, which greatly increases usability of the tactic state...</p>",
        "id": 204265338,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595023706
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/238830-Lean-for.20the.20curious.20mathematician.202020/topic/Previous.20discussions.20on.20Lean.20and.20HoTT/near/204265099\">said</a>:</p>\n<blockquote>\n<p>I guess one thing we could figure out what's the best way to have mobile users trigger unicode conversion, since it's harder to hit \"tab\" (at least on iPhones and iPads). While hitting \"space\" works, it's kind of annoying if you have to backspace away those extra spaces all the time.</p>\n</blockquote>\n<p>I think just about anything one could use for an escape character would be harder to type on a mobile. <br>\nBut on the iPhone at least you can store your favorite character/escape sequences.</p>",
        "id": 204265443,
        "sender_full_name": "Dan Stanescu",
        "timestamp": 1595023801
    },
    {
        "content": "<p>Yeah, I was thinking we could potentially pop up a floating panel with some useful icons on it. Sort of like how mobile games sometimes pop up a little directional control, since mobile keyboards lack arrow keys and such.</p>",
        "id": 204265561,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595023888
    },
    {
        "content": "<p>people use smartphones differenly from computer keyboards, what works well on a keyboard is often awful on a touchscreen, and the other way around.  IIRC, Jupyter does not use a full-blown js editor, it has something built-in. And Jupyter works on smartphones reasonably well, I think</p>",
        "id": 204266134,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595024289
    },
    {
        "content": "<p>I just tried NNG on a ChromeOS tablet (probably very close to a typical Android tablet), and there was just no &lt;tab&gt; to hit on the onscreen keyboard.</p>",
        "id": 204266219,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595024378
    },
    {
        "content": "<p>Are you able to get backspace to work? </p>\n<p>(Hitting &lt;space&gt; will also do the conversion, but it also adds a space.)</p>",
        "id": 204266640,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595024688
    },
    {
        "content": "<p>no, hitting space to get \\lambda properly displayed just didn't work. On an Android phone it's even worse, as the onscreen keyboard covers too much  of the screen.</p>",
        "id": 204266862,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595024898
    },
    {
        "content": "<p>Ah, that's too bad.</p>",
        "id": 204266934,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595024989
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"316505\">Dima Pasechnik</span> <a href=\"#narrow/stream/238830-Lean-for.20the.20curious.20mathematician.202020/topic/Previous.20discussions.20on.20Lean.20and.20HoTT/near/204266134\">said</a>:</p>\n<blockquote>\n<p>people use smartphones differenly from computer keyboards, what works well on a keyboard is often awful on a touchscreen, and the other way around.  IIRC, Jupyter does not use a full-blown js editor, it has something built-in. And Jupyter works on smartphones reasonably well, I think</p>\n</blockquote>\n<p>Maybe the experience needs to be radically re-thought, to be touchscreen-friendly and reduce typing.  For example little buttons saying \"rw\" and \"intros\" and so on.  When you type a lemma name, underscores appear, and when you tap one, new buttons for any of the existing hypotheses whose type matches that of the underscore.</p>",
        "id": 204267001,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1595025019
    },
    {
        "content": "<p>(Of course, this would be an implementations headache with a combinatorics problem wrapped inside.)</p>",
        "id": 204267063,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1595025101
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span> <a href=\"#narrow/stream/238830-Lean-for.20the.20curious.20mathematician.202020/topic/Previous.20discussions.20on.20Lean.20and.20HoTT/near/204267001\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"316505\">Dima Pasechnik</span> <a href=\"#narrow/stream/238830-Lean-for.20the.20curious.20mathematician.202020/topic/Previous.20discussions.20on.20Lean.20and.20HoTT/near/204266134\">said</a>:</p>\n<blockquote>\n<p>people use smartphones differenly from computer keyboards, what works well on a keyboard is often awful on a touchscreen, and the other way around.  IIRC, Jupyter does not use a full-blown js editor, it has something built-in. And Jupyter works on smartphones reasonably well, I think</p>\n</blockquote>\n<p>Maybe the experience needs to be radically re-thought, to be touchscreen-friendly and reduce typing.  For example little buttons saying \"rw\" and \"intros\" and so on.  When you type a lemma name, underscores appear, and when you tap one, new buttons for any of the existing hypotheses whose type matches that of the underscore.</p>\n</blockquote>\n<p>for NNG this kind of interface could be wonderful - the ability to type arbitrary text is more of an obstacle than a help there, IMHO.</p>",
        "id": 204268129,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1595025962
    },
    {
        "content": "<p>Now that we have widgets, we really should remake <a href=\"http://incredible.pm/\">http://incredible.pm/</a> in javascript, talking to a Lean server, and then pop-out that interface into a web-browser.</p>",
        "id": 204279390,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595039314
    },
    {
        "content": "<p>Wow, that's great, and perfect for a phone (I would think).</p>",
        "id": 204279646,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1595039712
    },
    {
        "content": "<p>Well, maybe a phone with a very large screen.</p>",
        "id": 204279659,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1595039749
    },
    {
        "content": "<p>Or a tablet</p>",
        "id": 204287038,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1595053230
    },
    {
        "content": "<p>In this vein, something like Scratch for tactic proofs would be cool.  I once looked into whether something like this existed when I taught a discrete math course a couple years ago, but I don't remember anything turning up.</p>",
        "id": 204287325,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1595053739
    },
    {
        "content": "<p>This thread drifetd away from the original topic; I opened a new topic continuing the discussion of Quinn's article under <br>\n<a href=\"#narrow/stream/113488-general/topic/Lessons.20from.20History\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Lessons.20from.20History</a> .</p>",
        "id": 204305435,
        "sender_full_name": "Thomas Eckl",
        "timestamp": 1595087346
    }
]