[
    {
        "content": "<p>I modified the statement of the h-principle so that it is relative and C^0-dense. Does this seem right? <br>\nIn particular: do we want to be relative to a specified closed set in the domain <code>M</code> <em>and</em> a specified closed set in the parameter space <code>P</code>?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"sd\">/-- An arbitrary distance on `J¹(M, M')`. -/</span>\n<span class=\"kd\">@[reducible]</span> <span class=\"kd\">def</span> <span class=\"n\">some_dist</span> <span class=\"o\">:</span> <span class=\"n\">has_dist</span> <span class=\"o\">(</span><span class=\"n\">one_jet_bundle</span> <span class=\"n\">I</span> <span class=\"n\">M</span> <span class=\"n\">I'</span> <span class=\"n\">M'</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"c1\">-- some garbage; obtained from metrizability</span>\n\n<span class=\"sd\">/-- A relation `R` satisfies the parametric relative C⁰-dense h-principle w.r.t. manifold `P`,</span>\n<span class=\"sd\">`C₁ ⊆ P`, `C₂ ⊆ M` and `ε : M → ℝ` if for every family of</span>\n<span class=\"sd\">formal solutions `𝓕₀` indexed by a manifold with boundary `P` that is holonomic near `C₁` and `C₂`,</span>\n<span class=\"sd\">there is a homotopy `𝓕` between `𝓕₀` and a holonomic solution,</span>\n<span class=\"sd\">in such a way that `𝓕` is constant near `C₁` and `C₂` and `ε`-close to `𝓕₀`.</span>\n<span class=\"sd\">Note: `ε`-closeness is measured using an arbitrary distance function obtained from the metrizability</span>\n<span class=\"sd\">of `J¹(M, M')`. Potentially we prefer to have this w.r.t. an arbitrary compatible metric.</span>\n<span class=\"sd\">-/</span>\n<span class=\"kd\">def</span> <span class=\"n\">rel_mfld.satisfies_h_principle_with</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"n\">rel_mfld</span> <span class=\"n\">I</span> <span class=\"n\">M</span> <span class=\"n\">I'</span> <span class=\"n\">M'</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">C₁</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">C₂</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"n\">M</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span>\n<span class=\"bp\">∀</span> <span class=\"bp\">𝓕₀</span> <span class=\"o\">:</span> <span class=\"n\">family_formal_sol</span> <span class=\"n\">IP</span> <span class=\"n\">P</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"c1\">-- given a family of formal solutions with parameters in `P`</span>\n<span class=\"o\">(</span><span class=\"bp\">∀ᶠ</span> <span class=\"n\">s</span> <span class=\"k\">in</span> <span class=\"bp\">𝓝ˢ</span> <span class=\"n\">C₁</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">𝓕₀</span> <span class=\"n\">s</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">to_one_jet_sec.is_holonomic</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"c1\">-- holonomic near `C₁` of parameter space</span>\n<span class=\"o\">(</span><span class=\"bp\">∀ᶠ</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"bp\">𝓝ˢ</span> <span class=\"n\">C₂</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">𝓕₀</span> <span class=\"n\">s</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">to_one_jet_sec.is_holonomic_at</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"c1\">-- and near set `C₂` of the domain</span>\n<span class=\"bp\">∃</span> <span class=\"bp\">𝓕</span> <span class=\"o\">:</span> <span class=\"n\">family_formal_sol</span> <span class=\"o\">(</span><span class=\"bp\">𝓘</span><span class=\"o\">(</span><span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">prod</span> <span class=\"n\">IP</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ℝ</span> <span class=\"bp\">×</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"c1\">-- then there is a homotopy of such families</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"bp\">𝓕</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">𝓕₀</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"c1\">-- that agrees on `t = 0`</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀ᶠ</span> <span class=\"n\">s</span> <span class=\"k\">in</span> <span class=\"bp\">𝓝ˢ</span> <span class=\"n\">C₁</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"bp\">𝓕</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">𝓕₀</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"c1\">-- and agrees near `C₁`</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀ᶠ</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"bp\">𝓝ˢ</span> <span class=\"n\">C₂</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">P</span><span class=\"o\">),</span> <span class=\"bp\">𝓕</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"bp\">𝓕₀</span> <span class=\"n\">s</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"c1\">-- and agrees near `C₂`</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"bp\">𝓕</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">))</span><span class=\"bp\">.</span><span class=\"n\">to_one_jet_sec.is_holonomic</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"c1\">-- is holonomic everywhere for `t = 1`.</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">M</span><span class=\"o\">),</span> <span class=\"bp\">@</span><span class=\"n\">dist</span> <span class=\"n\">_</span> <span class=\"n\">some_dist</span> <span class=\"o\">(</span><span class=\"bp\">𝓕</span> <span class=\"o\">(</span><span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">𝓕₀</span> <span class=\"n\">s</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"c1\">-- and close to `𝓕₀`</span>\n\n<span class=\"sd\">/-- **Gromov's Theorem** -/</span>\n<span class=\"kd\">theorem</span> <span class=\"n\">rel_mfld.ample.satisfies_h_principle_with</span> <span class=\"o\">(</span><span class=\"n\">hC₁</span> <span class=\"o\">:</span> <span class=\"n\">is_closed</span> <span class=\"n\">C₁</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hC₂</span> <span class=\"o\">:</span> <span class=\"n\">is_closed</span> <span class=\"n\">C₂</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hε_pos</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ε</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hε_cont</span> <span class=\"o\">:</span> <span class=\"n\">continuous</span> <span class=\"n\">ε</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">h1</span> <span class=\"o\">:</span> <span class=\"n\">R.ample</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h2</span> <span class=\"o\">:</span> <span class=\"n\">is_open</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">R.satisfies_h_principle_with</span> <span class=\"n\">IP</span> <span class=\"n\">C₁</span> <span class=\"n\">C₂</span> <span class=\"n\">ε</span> <span class=\"o\">:=</span>\n<span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 295259738,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1661442903
    },
    {
        "content": "<p>I think for our application we would require the parametric version to be relative only to a closed subset of the parameter space but this is really a question for Patrick. Also, isn't it just the base map of the section of the jet bundle that has to be <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mn>0</mn></msup></mrow><annotation encoding=\"application/x-tex\">C^0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span> close?</p>",
        "id": 295269721,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1661446167
    },
    {
        "content": "<p>In the sphere eversion application of this theorem the homotopy is not relative to a subset in <code>M</code>. But there is a parameter space. And the way we get rid of parameters turns parameters into elements of <code>M</code> somehow, so we need need to have a result relative to a subset of <code>M</code> in the non-parametric case. So I don't think we can gain any simplification from removing <code>C₂</code></p>",
        "id": 295276383,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1661448436
    },
    {
        "content": "<p>Much more importantly, Oliver is right that only the base map stays <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mn>0</mn></msup></mrow><annotation encoding=\"application/x-tex\">C^0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span>-close.</p>",
        "id": 295276895,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1661448618
    },
    {
        "content": "<p>You need to keep in mind the important example of the <a href=\"https://en.wikipedia.org/wiki/Speed_(1994_film)\">Bullock-Reeves theorem</a>. This states that given any map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo>:</mo><mi mathvariant=\"double-struck\">R</mi><mo>→</mo><msup><mi mathvariant=\"double-struck\">R</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">f : \\R \\to \\R^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6889em;\"></span><span class=\"mord mathbb\">R</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>, there is a map <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> which is as close as you want to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span> in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mn>0</mn></msup></mrow><annotation encoding=\"application/x-tex\">C^0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span> topology and whose derivative satisfies <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∀</mi><mi>t</mi><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">∥</mi><msup><mi>g</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo stretchy=\"false\">(</mo><mi>t</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">∥</mi><mo>&gt;</mo><mn>50</mn><mtext> mph</mtext></mrow><annotation encoding=\"application/x-tex\">\\forall t, \\|g&#x27;(t) \\| &gt; 50 \\text{ mph}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em;\"></span><span class=\"mord\">∀</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">∥</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span><span class=\"mord\">∥</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">50</span><span class=\"mord text\"><span class=\"mord\"> mph</span></span></span></span></span>. That's because the complement of the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>50</mn><mtext> mph</mtext></mrow><annotation encoding=\"application/x-tex\">50 \\text{ mph}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">50</span><span class=\"mord text\"><span class=\"mord\"> mph</span></span></span></span></span> ball around the origin in ample in <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi mathvariant=\"double-struck\">R</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\R^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathbb\">R</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>. But there is no hope you can guarantee <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>g</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">g&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> stays close to <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup></mrow><annotation encoding=\"application/x-tex\">f&#x27;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9463em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span></span></span></span> if <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∥</mi><msup><mi>f</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mi mathvariant=\"normal\">∥</mi></mrow><annotation encoding=\"application/x-tex\">\\|f&#x27;\\|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0019em;vertical-align:-0.25em;\"></span><span class=\"mord\">∥</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7519em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mord\">∥</span></span></span></span> was very small. Note that our proof also doesn't yield any control on the acceleration of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>, which is presumably why Bullock and Reeves don't use convex integration (but they actually also give up on <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mn>0</mn></msup></mrow><annotation encoding=\"application/x-tex\">C^0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span> control).</p>",
        "id": 295278032,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1661449029
    },
    {
        "content": "<p>Floris, I also don't understand why you want to define the <code>has_dist (one_jet_bundle I M I' M')</code> instead of simply defining the <code>dist</code> function. I guess you want to be able to start the proof with a <code>letI</code> and then access all metric spaces lemmas but you could do both.</p>",
        "id": 295278471,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1661449200
    },
    {
        "content": "<p>In order to make the statement readable, it would also be nice to define abbreviation getting rid of all <code>.to_one_jet_sec</code> (unless Kyle's new dot notation tweaks allows it without doing anything, which would be <em>awesome</em>).</p>",
        "id": 295278645,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1661449263
    },
    {
        "content": "<p>Oh yes, of course we only get the <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mn>0</mn></msup></mrow><annotation encoding=\"application/x-tex\">C^0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span></span></span></span></span></span></span></span>-closeness on the base map. I'll correct it tomorrow. <br>\nIn that case I could just make <code>M'</code> a metric space, to have it for an arbitrary compatible metric.<br>\nPatrick, I'm not sure what you mean by \"instead of simply defining the <code>dist</code> function\".</p>",
        "id": 295288132,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1661452457
    },
    {
        "content": "<p>I mean replacing <code>@dist _ some_dist (𝓕 (t, s) x) (𝓕₀ s x)</code> with a def. That's not very important and indeed it is probably better to think of a better way of talking about a distance function on a metrizable space.</p>",
        "id": 295296474,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1661455602
    },
    {
        "content": "<p>With the corrected version, I made the change that the target space is a metric space, so we can talk about <em>the</em> distance, instead of having to define (and write API for) the distance on a metrizable space.</p>",
        "id": 295411257,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1661516409
    },
    {
        "content": "<p>Thanks for the updated statements, they look good to me now. We can drop the hypothesis <code>(hC₁ : is_closed C₁)</code> from <code>rel_mfld.ample.satisfies_h_principle</code> though since <code>C₁</code> is irrelevant, right?</p>",
        "id": 295434159,
        "sender_full_name": "Oliver Nash",
        "timestamp": 1661523850
    },
    {
        "content": "<p>Yes, this is a copy-paste mistake, there is no parameter in that lemma.</p>",
        "id": 295435399,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1661524258
    },
    {
        "content": "<p>We have a much more serious issue. The metrizable stuff is backfiring, as I feared. When applying all this to sphere eversion the target manifold is a normed space that get two metric spaces instances: one from the norm and one imposed by the statement and coming from its manifold structure.</p>",
        "id": 295435700,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1661524338
    },
    {
        "content": "<p>This isn't blocking since with a have a statement for Gromov's theorem assuming a distinguished metric has been fixed. But at some point we'll need a better way to handle this.</p>",
        "id": 295437263,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1661524816
    },
    {
        "content": "<p>I was expecting something like this, so I stated the main Gromov's theorem to use an arbitrary metric space instance</p>",
        "id": 295437469,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1661524877
    }
]