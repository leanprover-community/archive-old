[
    {
        "content": "<p>Hi everyone,<br>\nI'm a beginner Lean user and want to start contributing. I've been working on Pythagorean Triples and proved that for a primitive triple (a, b, c),  exactly one of a or b is divisible by 3. I was wondering if the proof would be worth contributing? If so, would it be worth showing exactly one of a or b is divisible by four?  Only the case involving 2 is in the library.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">number_theory.pythagorean_triples</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic.ring</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">sq_ne_two_fin_zmod_three</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">zmod</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">z</span> <span class=\"bp\">≠</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">change</span> <span class=\"n\">fin</span> <span class=\"mi\">3</span> <span class=\"n\">at</span> <span class=\"n\">z</span><span class=\"o\">,</span>\n  <span class=\"n\">fin_cases</span> <span class=\"n\">z</span><span class=\"bp\">;</span> <span class=\"n\">norm_num</span> <span class=\"o\">[</span><span class=\"n\">fin.ext_iff</span><span class=\"o\">,</span> <span class=\"n\">fin.coe_bit0</span><span class=\"o\">,</span> <span class=\"n\">fin.coe_bit1</span><span class=\"o\">],</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">int.sq_ne_two_mod_three</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">≠</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"k\">suffices</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">%</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"kd\">by</span> <span class=\"n\">norm_num</span> <span class=\"n\">at</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">zmod.int_coe_eq_int_coe_iff'</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span> <span class=\"n\">using</span> <span class=\"n\">sq_ne_two_fin_zmod_three</span> <span class=\"n\">_</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">mod_three_eq_zero_or_one_or_two</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"n\">n</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∨</span> <span class=\"n\">n</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"k\">have</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"n\">abs_of_nonneg</span> <span class=\"o\">(</span><span class=\"k\">show</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">),</span> <span class=\"k\">from</span> <span class=\"n\">dec_trivial</span><span class=\"o\">)</span> <span class=\"bp\">▸</span> <span class=\"n\">int.mod_lt</span> <span class=\"n\">_</span> <span class=\"n\">dec_trivial</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">n</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"o\">:=</span> <span class=\"n\">int.mod_nonneg</span> <span class=\"n\">_</span> <span class=\"n\">dec_trivial</span><span class=\"o\">,</span>\n<span class=\"k\">match</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span><span class=\"o\">),</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">h₁</span> <span class=\"k\">with</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">:</span><span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">or.inl</span> <span class=\"n\">rfl</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"mi\">1</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">or.inr</span> <span class=\"o\">(</span><span class=\"n\">or.inl</span> <span class=\"n\">rfl</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">or.inr</span> <span class=\"o\">(</span><span class=\"n\">or.inr</span> <span class=\"n\">rfl</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">h</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">absurd</span> <span class=\"n\">h</span> <span class=\"n\">dec_trivial</span>\n<span class=\"bp\">|</span> <span class=\"bp\">-</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"bp\">+</span> <span class=\"n\">a</span><span class=\"o\">]</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">_</span> <span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"n\">absurd</span> <span class=\"n\">h₁</span> <span class=\"n\">dec_trivial</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">pythagorean_triple</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n\n<span class=\"kn\">include</span> <span class=\"n\">h</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">exact_one_div_three</span> <span class=\"o\">(</span><span class=\"n\">hc</span> <span class=\"o\">:</span> <span class=\"n\">int.gcd</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">%</span> <span class=\"mi\">3</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rcases</span> <span class=\"n\">mod_three_eq_zero_or_one_or_two</span> <span class=\"n\">x</span> <span class=\"k\">with</span> <span class=\"n\">hx</span> <span class=\"bp\">|</span> <span class=\"n\">hx</span> <span class=\"bp\">|</span> <span class=\"n\">hx</span> <span class=\"bp\">;</span>\n    <span class=\"n\">rcases</span> <span class=\"n\">mod_three_eq_zero_or_one_or_two</span> <span class=\"n\">y</span> <span class=\"k\">with</span> <span class=\"n\">hy</span> <span class=\"bp\">|</span> <span class=\"n\">hy</span> <span class=\"bp\">|</span> <span class=\"n\">hy</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span><span class=\"c1\">-- x % 3 = 0, y % 3 = 0</span>\n  <span class=\"n\">exfalso</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">nat.not_coprime_of_dvd_of_dvd</span> <span class=\"o\">(</span><span class=\"n\">dec_trivial</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">3</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">hc</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span><span class=\"n\">apply</span> <span class=\"n\">int.dvd_nat_abs_of_of_nat_dvd</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">int.dvd_of_mod_eq_zero</span> <span class=\"n\">hx</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span><span class=\"n\">apply</span> <span class=\"n\">int.dvd_nat_abs_of_of_nat_dvd</span><span class=\"o\">,</span> <span class=\"n\">apply</span> <span class=\"n\">int.dvd_of_mod_eq_zero</span> <span class=\"n\">hy</span><span class=\"o\">}},</span>\n  <span class=\"o\">{</span><span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span> <span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">hy</span> <span class=\"o\">⟩},</span> <span class=\"c1\">--x % 3 = 0, y % 3 = 1</span>\n  <span class=\"o\">{</span><span class=\"n\">right</span><span class=\"o\">,</span><span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span> <span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">hy</span> <span class=\"o\">⟩},</span> <span class=\"c1\">--x % 3 = 0, y % 3 = 2</span>\n  <span class=\"o\">{</span><span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">right</span><span class=\"o\">,</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span> <span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">hy</span> <span class=\"o\">⟩},</span> <span class=\"c1\">--x % 3 = 1, y % 3 = 1</span>\n  <span class=\"o\">{</span><span class=\"c1\">-- x % 3 = 1, y % 3 = 1</span>\n    <span class=\"n\">exfalso</span><span class=\"o\">,</span>\n    <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x0</span><span class=\"o\">,</span> <span class=\"n\">y0</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">x0</span> <span class=\"n\">y0</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x0</span><span class=\"bp\">*</span> <span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y0</span> <span class=\"bp\">*</span> <span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">exists_eq_mul_left_of_dvd</span> <span class=\"o\">(</span><span class=\"n\">int.dvd_sub_of_mod_eq</span> <span class=\"n\">hx</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">x0</span> <span class=\"n\">hx2</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">exists_eq_mul_left_of_dvd</span> <span class=\"o\">(</span><span class=\"n\">int.dvd_sub_of_mod_eq</span> <span class=\"n\">hy</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">y0</span> <span class=\"n\">hy2</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">sub_eq_iff_eq_add</span> <span class=\"n\">at</span> <span class=\"n\">hx2</span> <span class=\"n\">hy2</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">x0</span><span class=\"o\">,</span> <span class=\"n\">y0</span><span class=\"o\">,</span> <span class=\"n\">hx2</span><span class=\"o\">,</span> <span class=\"n\">hy2</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n    <span class=\"n\">apply</span> <span class=\"n\">int.sq_ne_two_mod_three</span> <span class=\"n\">z</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"k\">show</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">x0</span> <span class=\"bp\">*</span> <span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">y0</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">y0</span> <span class=\"bp\">*</span> <span class=\"n\">y0</span> <span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">h.eq</span><span class=\"o\">,</span> <span class=\"n\">ring</span> <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int.add_mod</span><span class=\"o\">,</span> <span class=\"n\">int.mul_mod_right</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">,</span> <span class=\"n\">int.mod_mod</span><span class=\"o\">],</span> <span class=\"n\">norm_num</span><span class=\"o\">,},</span>\n  <span class=\"o\">{</span><span class=\"c1\">--x % 3 = 1, y % 3 = 2</span>\n    <span class=\"n\">exfalso</span><span class=\"o\">,</span>\n    <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x0</span><span class=\"o\">,</span> <span class=\"n\">y0</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">x0</span> <span class=\"n\">y0</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x0</span><span class=\"bp\">*</span> <span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y0</span> <span class=\"bp\">*</span> <span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">exists_eq_mul_left_of_dvd</span> <span class=\"o\">(</span><span class=\"n\">int.dvd_sub_of_mod_eq</span> <span class=\"n\">hx</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">x0</span> <span class=\"n\">hx2</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">exists_eq_mul_left_of_dvd</span> <span class=\"o\">(</span><span class=\"n\">int.dvd_sub_of_mod_eq</span> <span class=\"n\">hy</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">y0</span> <span class=\"n\">hy2</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">sub_eq_iff_eq_add</span> <span class=\"n\">at</span> <span class=\"n\">hx2</span> <span class=\"n\">hy2</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">x0</span><span class=\"o\">,</span> <span class=\"n\">y0</span><span class=\"o\">,</span> <span class=\"n\">hx2</span><span class=\"o\">,</span> <span class=\"n\">hy2</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n    <span class=\"n\">apply</span> <span class=\"n\">int.sq_ne_two_mod_three</span> <span class=\"n\">z</span><span class=\"o\">,</span>\n     <span class=\"n\">rw</span> <span class=\"k\">show</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">x0</span> <span class=\"bp\">*</span> <span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">y0</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">y0</span> <span class=\"bp\">*</span> <span class=\"n\">y0</span> <span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">h.eq</span><span class=\"o\">,</span> <span class=\"n\">ring</span> <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int.add_mod</span><span class=\"o\">,</span> <span class=\"n\">int.mul_mod_right</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">,</span> <span class=\"n\">int.mod_mod</span><span class=\"o\">],</span> <span class=\"n\">norm_num</span><span class=\"o\">,},</span>\n  <span class=\"o\">{</span><span class=\"n\">right</span> <span class=\"o\">,</span><span class=\"n\">right</span> <span class=\"o\">,</span><span class=\"n\">right</span> <span class=\"o\">,</span><span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">hx</span><span class=\"o\">,</span> <span class=\"n\">hy</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span><span class=\"c1\">--x % 3 = 2, y % 3 = 1</span>\n    <span class=\"n\">exfalso</span><span class=\"o\">,</span>\n    <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x0</span><span class=\"o\">,</span> <span class=\"n\">y0</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">x0</span> <span class=\"n\">y0</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x0</span><span class=\"bp\">*</span> <span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y0</span> <span class=\"bp\">*</span> <span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">exists_eq_mul_left_of_dvd</span> <span class=\"o\">(</span><span class=\"n\">int.dvd_sub_of_mod_eq</span> <span class=\"n\">hx</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">x0</span> <span class=\"n\">hx2</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">exists_eq_mul_left_of_dvd</span> <span class=\"o\">(</span><span class=\"n\">int.dvd_sub_of_mod_eq</span> <span class=\"n\">hy</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">y0</span> <span class=\"n\">hy2</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">sub_eq_iff_eq_add</span> <span class=\"n\">at</span> <span class=\"n\">hx2</span> <span class=\"n\">hy2</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">x0</span><span class=\"o\">,</span> <span class=\"n\">y0</span><span class=\"o\">,</span> <span class=\"n\">hx2</span><span class=\"o\">,</span> <span class=\"n\">hy2</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n    <span class=\"n\">apply</span> <span class=\"n\">int.sq_ne_two_mod_three</span> <span class=\"n\">z</span><span class=\"o\">,</span>\n     <span class=\"n\">rw</span> <span class=\"k\">show</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">x0</span> <span class=\"bp\">*</span> <span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">y0</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">y0</span> <span class=\"bp\">*</span> <span class=\"n\">y0</span> <span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">h.eq</span><span class=\"o\">,</span> <span class=\"n\">ring</span> <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int.add_mod</span><span class=\"o\">,</span> <span class=\"n\">int.mul_mod_right</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">,</span> <span class=\"n\">int.mod_mod</span><span class=\"o\">],</span>\n    <span class=\"n\">norm_num</span><span class=\"o\">,},</span>\n  <span class=\"o\">{</span><span class=\"c1\">--x % 3 = 2, y % 3 = 1</span>\n    <span class=\"n\">exfalso</span><span class=\"o\">,</span>\n    <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">x0</span><span class=\"o\">,</span> <span class=\"n\">y0</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">,</span> <span class=\"n\">rfl</span><span class=\"o\">⟩</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">x0</span> <span class=\"n\">y0</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">x0</span><span class=\"bp\">*</span> <span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">y0</span> <span class=\"bp\">*</span> <span class=\"mi\">3</span> <span class=\"bp\">+</span> <span class=\"mi\">2</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">cases</span> <span class=\"n\">exists_eq_mul_left_of_dvd</span> <span class=\"o\">(</span><span class=\"n\">int.dvd_sub_of_mod_eq</span> <span class=\"n\">hx</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">x0</span> <span class=\"n\">hx2</span><span class=\"o\">,</span>\n      <span class=\"n\">cases</span> <span class=\"n\">exists_eq_mul_left_of_dvd</span> <span class=\"o\">(</span><span class=\"n\">int.dvd_sub_of_mod_eq</span> <span class=\"n\">hy</span><span class=\"o\">)</span> <span class=\"k\">with</span> <span class=\"n\">y0</span> <span class=\"n\">hy2</span><span class=\"o\">,</span>\n      <span class=\"n\">rw</span> <span class=\"n\">sub_eq_iff_eq_add</span> <span class=\"n\">at</span> <span class=\"n\">hx2</span> <span class=\"n\">hy2</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"o\">⟨</span><span class=\"n\">x0</span><span class=\"o\">,</span> <span class=\"n\">y0</span><span class=\"o\">,</span> <span class=\"n\">hx2</span><span class=\"o\">,</span> <span class=\"n\">hy2</span><span class=\"o\">⟩</span> <span class=\"o\">},</span>\n    <span class=\"n\">apply</span> <span class=\"n\">int.sq_ne_two_mod_three</span> <span class=\"n\">z</span><span class=\"o\">,</span>\n     <span class=\"n\">rw</span> <span class=\"k\">show</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">z</span> <span class=\"bp\">=</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">x0</span> <span class=\"bp\">*</span> <span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">x0</span> <span class=\"bp\">+</span> <span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"n\">y0</span> <span class=\"bp\">+</span> <span class=\"mi\">3</span> <span class=\"bp\">*</span> <span class=\"n\">y0</span> <span class=\"bp\">*</span> <span class=\"n\">y0</span> <span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"mi\">8</span><span class=\"o\">,</span> <span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"bp\">←</span> <span class=\"n\">h.eq</span><span class=\"o\">,</span> <span class=\"n\">ring</span> <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">int.add_mod</span><span class=\"o\">,</span> <span class=\"n\">int.mul_mod_right</span><span class=\"o\">,</span> <span class=\"n\">zero_add</span><span class=\"o\">,</span> <span class=\"n\">int.mod_mod</span><span class=\"o\">],</span>\n    <span class=\"n\">norm_num</span><span class=\"o\">,},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 277662809,
        "sender_full_name": "Harry Pacitti",
        "timestamp": 1649022433
    },
    {
        "content": "<p>Which lemma is the one already in the library?</p>",
        "id": 277663457,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649023245
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Small.20contribution/near/277663457\">said</a>:</p>\n<blockquote>\n<p>Which lemma is the one already in the library?</p>\n</blockquote>\n<p>I've put the lemma I meant below from number_theory.pythagorean_triples</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">even_odd_of_coprime</span>\n</code></pre></div>",
        "id": 277663622,
        "sender_full_name": "Harry Pacitti",
        "timestamp": 1649023444
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/even_odd_of_coprime\">docs#even_odd_of_coprime</a>?</p>",
        "id": 277664038,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649023978
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Small.20contribution/near/277664038\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/pythagorean_triple.even_odd_of_coprime\">docs#pythagorean_triple.even_odd_of_coprime</a></p>\n</blockquote>\n<p>Yes, that's the one.</p>",
        "id": 277664062,
        "sender_full_name": "Harry Pacitti",
        "timestamp": 1649024023
    },
    {
        "content": "<p><del>Is it true more generally as <code>n \\dvd x ↔ ¬(n \\dvd y)</code> for nonsquare n?</del></p>",
        "id": 277664236,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649024240
    },
    {
        "content": "<p>To answer your original question though, this statement looks like a great first (or subsequent) contribution to me. I suspect reviewers can shorten the proof a little, but that's all part of the contribution process.</p>",
        "id": 277690493,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1649056632
    },
    {
        "content": "<p>Also, consider that <code>dec_trivial</code> can get you quite far.  This means that you need to do less work:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">my_pyt</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"bp\">+</span> <span class=\"n\">y</span> <span class=\"bp\">*</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"n\">z</span> <span class=\"bp\">*</span> <span class=\"n\">z</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">S</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">R</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">R</span> <span class=\"bp\">→+*</span> <span class=\"n\">S</span><span class=\"o\">)</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">pyt_map</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">my_pyt</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">my_pyt</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">map_add</span><span class=\"o\">,</span> <span class=\"n\">map_mul</span><span class=\"o\">]</span> <span class=\"n\">using</span> <span class=\"n\">congr_arg</span> <span class=\"bp\">⇑</span><span class=\"n\">f</span> <span class=\"n\">h</span>\n<span class=\"kd\">end</span> <span class=\"n\">my</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">int.my_pyt_iff</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">my_pyt</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"bp\">↔</span> <span class=\"n\">pythagorean_triple</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:=</span> <span class=\"n\">iff.rfl</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">zmod</span> <span class=\"mi\">3</span><span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">eq_zero_or_of_pyt</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">my_pyt</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span> <span class=\"bp\">∧</span> <span class=\"n\">y</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">unfold</span> <span class=\"n\">my_pyt</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">dec_trivial</span><span class=\"bp\">!</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 277781087,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1649100106
    }
]