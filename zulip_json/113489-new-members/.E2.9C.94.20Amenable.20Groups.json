[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"409809\">Matthias U</span> has marked this topic as resolved.</p>",
        "id": 299935216,
        "sender_full_name": "Notification Bot",
        "timestamp": 1663760391
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"409809\">@Matthias U</span> a few formatting comments on the PRs: you have to leave on blank line before the --- delimiter otherwise you have formatting issues. Also write the dependencies as `- [ ] depends on: #...\" (this is written in the comment of the PR message) so that the bot automatically tracks the dependencies and add labels</p>",
        "id": 300024280,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1663788085
    },
    {
        "content": "<p>also ~1000 lines is not small and please take a look at the formatting guidelines in <a href=\"https://leanprover-community.github.io/contribute/style.html\">https://leanprover-community.github.io/contribute/style.html</a></p>",
        "id": 300024604,
        "sender_full_name": "Moritz Doll",
        "timestamp": 1663788207
    },
    {
        "content": "<p>Regarding the <a href=\"https://github.com/leanprover-community/mathlib/pull/16574/files#diff-a6a799cf90419af6960b53171e1179f3e62d4864086ed013e4a426280b137c46R58-R61\">definition of <code>mean</code></a>:</p>\n<ul>\n<li>instead of using <code>continuous_bounded_function</code>, you may use l^infty via <a href=\"https://leanprover-community.github.io/mathlib_docs/find/lp\">docs#lp</a>, so you don't need to deal with continuity at all. (Of course it would be nicer if we generalize from discrete groups to locally compact Hausdorff groups, where we'd consider the L^infty space w.r.t. the Haar measure (see Wikipedia).)</li>\n<li>instead of <code>positivity</code> you may use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/monotone\">docs#monotone</a>, but mathlib doesn't seem to have the fact that monotonicity is equivalent to positivity for ordered add_groups. This is related to <a href=\"https://en.wikipedia.org/wiki/Positive_linear_functional\">positive linear functionals</a>; by the way do we have the Riesz–Markov–Kakutani representation theorem?</li>\n<li>instead of using the existence of an invariant mean on the space of bounded functions as the main definition, we may use the <a href=\"https://en.wikipedia.org/wiki/Amenable_group#Case_of_discrete_groups\">existence of an invariant finitely additive measure</a>, which seems simpler. The mean could be obtained by \"Lebesgue integration\" and the mathlib version requires a countably-additive measure, probably because we don't have finitely-additive measure as a def? Is a refactor in order?</li>\n</ul>",
        "id": 300076886,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1663822551
    },
    {
        "content": "<p>Actually maybe we don't need finitely-additive measures in their full generality; since the measure in our case is defined for all subsets of α, it could be seen as a <a href=\"https://leanprover-community.github.io/mathlib_docs/find/order_monoid_hom\">docs#order_monoid_hom</a> from the space of bounded functions α → ℤ to ℝ.</p>\n<p>As for lemmas in aux_lemmas_sums.lean, <code>sum_scalar</code> is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.mul_sum\">docs#finset.mul_sum</a>, and <code>symm_diff_of_diff_sum</code> is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.sum_sdiff_sub_sum_sdiff\">docs#finset.sum_sdiff_sub_sum_sdiff</a>.</p>",
        "id": 300084335,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1663827883
    },
    {
        "content": "<p>We should also probably define the mul_action of G on the space normalized <code>mean</code>s. The action on the space of (all) functions from G to ℤ or ℝ would be the \"regular representation\" (which doesn't seem to be in mathlib yet), and we can talk about <a href=\"https://leanprover-community.github.io/mathlib_docs/find/representation.invariants\">docs#representation.invariants</a>.</p>",
        "id": 300087609,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1663829742
    }
]