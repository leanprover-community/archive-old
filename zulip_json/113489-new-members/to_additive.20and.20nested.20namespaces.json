[
    {
        "content": "<p>Hallo - sorry I can't work this out from the documentation in <code>to_additive.lean</code>, but how do I get <code>localization.monoid</code> to transport to <code>add_localization.add_monoid</code> instead?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">algebra</span><span class=\"bp\">.</span><span class=\"n\">group</span><span class=\"bp\">.</span><span class=\"n\">to_additive</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">to_additive</span> <span class=\"n\">add_localization</span><span class=\"o\">]</span> <span class=\"n\">def</span> <span class=\"n\">localization</span> <span class=\"o\">:=</span> <span class=\"n\">α</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">monoid</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">to_additive</span><span class=\"o\">]</span> <span class=\"kn\">lemma</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span> <span class=\"n\">trivial</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">monoid</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">add_localization</span><span class=\"bp\">.</span><span class=\"n\">monoid</span><span class=\"bp\">.</span><span class=\"n\">foo</span> <span class=\"c1\">-- add_localization.monoid.foo : true</span>\n</pre></div>\n\n\n<p>I don't really want to write <code>@[to_additive add_localization.add_monoid.foo]</code> at the beginning of everything, and <code>attribute [to_additive add_localization.add_monoid] localization.monoid</code> doesn't make sense because <code>localization.monoid</code> is an unknown identifier, and those are my only ideas :( Thank you in advance.</p>",
        "id": 183194900,
        "sender_full_name": "Amelia Livingston",
        "timestamp": 1576094157
    },
    {
        "content": "<p>Indeed this is not documented. Try</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">run_cmd</span> <span class=\"n\">to_additive</span><span class=\"bp\">.</span><span class=\"n\">map_namespace</span> <span class=\"bp\">`</span><span class=\"n\">localization</span><span class=\"bp\">.</span><span class=\"n\">monoid</span> <span class=\"bp\">`</span><span class=\"n\">add_localization</span><span class=\"bp\">.</span><span class=\"n\">add_monoid</span>\n</pre></div>",
        "id": 183317756,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1576197261
    },
    {
        "content": "<p>Lean doesn't allow us to have attributes on namespaces, so <code>to_additive.map_namespace</code> creates an auxiliary <code>def</code> named <code>src._to_additive</code>.</p>",
        "id": 183317874,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1576197409
    },
    {
        "content": "<p>I should probably review the <code>to_additive</code> documentation, and add it to <code>tactic.md</code>.</p>",
        "id": 183317903,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1576197440
    },
    {
        "content": "<p>Thank you so much, this works great!</p>",
        "id": 183397309,
        "sender_full_name": "Amelia Livingston",
        "timestamp": 1576268896
    }
]