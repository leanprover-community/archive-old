[
    {
        "content": "<p>Hi all, I'm new to Lean and I'm going through the Number Game. At level 6/13 of Advanced Addition World, I noticed that given the hypothesis <code>h: t+a=t+b</code> if you type <code>repeat {rw add_comm at h}</code> it gets stuck an infinite loop :) Is this \"intended\" or ideally lean should detect and abort with a failure?</p>",
        "id": 205599918,
        "sender_full_name": "Raffaele Rossi",
        "timestamp": 1596207256
    },
    {
        "content": "<p>do you have a solution to the halting problem?</p>",
        "id": 205600012,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1596207297
    },
    {
        "content": "<p>this is not a halting problem, this is just detecting that you've come back to the current state.</p>",
        "id": 205600095,
        "sender_full_name": "Raffaele Rossi",
        "timestamp": 1596207331
    },
    {
        "content": "<p>that would make the tactic slower</p>",
        "id": 205600201,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1596207367
    },
    {
        "content": "<p>tactics are tools, not magic algorithms that prove every theorem</p>",
        "id": 205600252,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1596207388
    },
    {
        "content": "<p>only the repeat tactic, though</p>",
        "id": 205600272,
        "sender_full_name": "Raffaele Rossi",
        "timestamp": 1596207395
    },
    {
        "content": "<p>of course it's a tool, I did not ask for a magic wand. Just that if I say <code>repeat {x}</code> it could, conceptually, determine that it's going round an infinite loop</p>",
        "id": 205600484,
        "sender_full_name": "Raffaele Rossi",
        "timestamp": 1596207482
    },
    {
        "content": "<p>and it makes sense to slow down only the repeat tactic in this case</p>",
        "id": 205600543,
        "sender_full_name": "Raffaele Rossi",
        "timestamp": 1596207497
    },
    {
        "content": "<p>That's not what <code>repeat</code> is defined to do, but also it's generally not that useful to detect loops anyways--what would it do if it detects one?</p>",
        "id": 205600611,
        "sender_full_name": "Reid Barton",
        "timestamp": 1596207524
    },
    {
        "content": "<p>right, why not just use <code>iterate n { rw foo }</code> if you know it will be in a loop</p>",
        "id": 205600680,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1596207554
    },
    {
        "content": "<p>I did not know about <code>iterate</code></p>",
        "id": 205600723,
        "sender_full_name": "Raffaele Rossi",
        "timestamp": 1596207572
    },
    {
        "content": "<p>I'm literally just at level 6/13 of that world</p>",
        "id": 205600761,
        "sender_full_name": "Raffaele Rossi",
        "timestamp": 1596207594
    },
    {
        "content": "<p>Oh, you said raise an error--but I think that's too expensive in the non-erroring case, and usually it's pretty obvious where the problem is if you just added <code>repeat { foo }</code> to your proof and Lean starts taking a long time</p>",
        "id": 205601144,
        "sender_full_name": "Reid Barton",
        "timestamp": 1596207767
    },
    {
        "content": "<p>So to answer your original question, this is intended behavior</p>",
        "id": 205601182,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1596207782
    },
    {
        "content": "<p>there are in fact smarter tactics that can figure out how to apply commutativity,</p>",
        "id": 205601223,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1596207804
    },
    {
        "content": "<p>but the point of the natural number game is to learn how to do things without them :)</p>",
        "id": 205601241,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1596207819
    },
    {
        "content": "<p>well I understand where you are coming from</p>",
        "id": 205601261,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1596207833
    },
    {
        "content": "<p>the NNG is marketed as a game</p>",
        "id": 205601266,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1596207838
    },
    {
        "content": "<p>The original example isn't a good use of repeated <code>rw</code> anyways because the first rewrite will change <code>t+a=t+b</code> to <code>a+t=t+b</code> and the second one will change it back to <code>t+a=t+b</code>.</p>",
        "id": 205601318,
        "sender_full_name": "Reid Barton",
        "timestamp": 1596207850
    },
    {
        "content": "<p>so in a game I would expect <code>rw</code> to have loop detection feature I guess</p>",
        "id": 205601322,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1596207852
    },
    {
        "content": "<p>You mean <code>repeat</code>? I can just remove it if you like :-) Or replace with <code>iterate 37</code>, that should be enough for everyone</p>",
        "id": 205601718,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1596208049
    },
    {
        "content": "<p>A few months ago the user would lose all their progress if they did this :-/</p>",
        "id": 205601761,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1596208078
    },
    {
        "content": "<p>yeah so far the game did not mention <code>iterate</code> although even if it did I am sure I would have not used it :) was just food for thoughts and I understand this might have been a very trivial example that in real practice would not even actually happen</p>",
        "id": 205601945,
        "sender_full_name": "Raffaele Rossi",
        "timestamp": 1596208146
    },
    {
        "content": "<p>but I like that this community is very active</p>",
        "id": 205601965,
        "sender_full_name": "Raffaele Rossi",
        "timestamp": 1596208164
    },
    {
        "content": "<p>i would probably have had a better time with the nng my first time if <code>repeat</code> were a synonym for <code>iterate 37</code> or maybe just <code>iterate 3</code></p>",
        "id": 205601973,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1596208166
    },
    {
        "content": "<p>One can see that you guys aren't computer scientists. ;)</p>",
        "id": 205602750,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1596208437
    },
    {
        "content": "<p>yes, the computer scientist's version of the nng might have ~none of the overrides that kevin made. thankfully the computer scientists have less trouble installing lean locally and playing more faithful tutorials</p>",
        "id": 205605040,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1596209427
    },
    {
        "content": "<p>I think <code>repeat</code> is actually defined as <code>iterate 100000</code></p>",
        "id": 205652395,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1596238595
    },
    {
        "content": "<p>I don't see <code>100000</code> in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.repeat/src\">src#tactic.repeat</a></p>",
        "id": 205660846,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1596251187
    },
    {
        "content": "<p>yeah it looks like it's a plain old infinite loop</p>",
        "id": 205661155,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1596251767
    },
    {
        "content": "<p>It appears that the definition of <code>repeat</code> has changed since <a href=\"https://github.com/leanprover-community/lean/blame/7b97e82fb38790a364095d28a7ab30118a1c9723/library/init/meta/tactic.lean#L128\">my recollection</a>. It has since been renamed to <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.iterate/src\">src#tactic.iterate</a>, which differs from the current <code>tactic.repeat</code> only in the abnormally high limit</p>",
        "id": 205663732,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1596256176
    },
    {
        "content": "<p>Yeah I think I even remember reading in some docs (maybe Programming in Lean?) that <code>repeat</code> was <code>iterate 10^n</code> for some n which should be enough for everyone</p>",
        "id": 205667952,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1596263304
    }
]