[
    {
        "content": "<p>Hi. I'm new to lean and am recently reading Theorem Proving in Lean 4. </p>\n<p>I was trying to solve the problem in the exercise of Quantifiers and Equality and ended up using three 'byContradiction' in a row. <br>\nSo I'm wondering is it the right way to do it? </p>\n<p>And by the way, I would like to know how can we check out the standard library so as to learn how to use it? I know that there is a manual but, for example, when I wanted to look at what's in the Classical, I couldn't find it in the manual or in VS Code. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"bp\">¬</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n  <span class=\"n\">Iff.intro</span>\n    <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">hpx</span><span class=\"o\">⟩</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">h</span> <span class=\"n\">x</span> <span class=\"n\">hpx</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">h</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">byContradiction</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">hne</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"bp\">∃</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">p</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">=&gt;</span>\n      <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">byContradiction</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">hh</span> <span class=\"o\">:</span> <span class=\"bp\">¬¬</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span>\n        <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">byContradiction</span> <span class=\"o\">(</span><span class=\"k\">fun</span> <span class=\"n\">hnpx</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"n\">p</span> <span class=\"n\">x</span> <span class=\"bp\">=&gt;</span> <span class=\"n\">hh</span> <span class=\"n\">hnpx</span><span class=\"o\">)</span>\n        <span class=\"k\">show</span> <span class=\"n\">False</span> <span class=\"k\">from</span> <span class=\"n\">hne</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">this</span><span class=\"o\">⟩</span>\n        <span class=\"o\">))</span>\n      <span class=\"n\">absurd</span> <span class=\"n\">this</span> <span class=\"n\">h</span>\n    <span class=\"o\">))</span>\n</code></pre></div>",
        "id": 273764674,
        "sender_full_name": "T.X. XIA",
        "timestamp": 1646205024
    }
]