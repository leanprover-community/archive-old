[
    {
        "content": "<p>I'm trying to prove the prime field addition that I defined is correct,  but somehow I can't unfold the equation...<br>\n<a href=\"https://gist.github.com/potsrevennil/0cbf2204a8a16daa6eab367f153be748#file-primefield-lean-L71\" target=\"_blank\" title=\"https://gist.github.com/potsrevennil/0cbf2204a8a16daa6eab367f153be748#file-primefield-lean-L71\">https://gist.github.com/potsrevennil/0cbf2204a8a16daa6eab367f153be748#file-primefield-lean-L71</a></p>",
        "id": 136968269,
        "sender_full_name": "AHan",
        "timestamp": 1541132650
    },
    {
        "content": "<p>from your definitions it looks like the proof is just <code>eq.symm (add_equiv _)</code></p>",
        "id": 136968471,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541132907
    },
    {
        "content": "<p>if you want to get at this by unfolding, you should <code>dsimp [pf.add, (+)]</code>, although this might unfold too much</p>",
        "id": 136968579,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541133060
    },
    {
        "content": "<p>normally we would state a simp lemma expressing the definitional unfolding here, exactly because it's hard to get at unless you say it explicitly</p>",
        "id": 136968646,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541133131
    },
    {
        "content": "<p>what's dism's usage?<br>\nAnd why is that I can unfold eq in add_equiv but not of_int_add?</p>",
        "id": 136968659,
        "sender_full_name": "AHan",
        "timestamp": 1541133179
    },
    {
        "content": "<p>because <code>of_int_add</code> does not have the form <code>of_int ... = of_int ...</code></p>",
        "id": 136968681,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541133220
    },
    {
        "content": "<p>you have to unfold the addition on the lhs first, then you can unfold eq</p>",
        "id": 136968726,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541133243
    },
    {
        "content": "<p><code>dsimp</code> and <code>unfold</code> are very similar, they are implemented as the same tactic behind the scenes with different configuration options</p>",
        "id": 136968747,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541133298
    },
    {
        "content": "<p>in this case it's just because <code>dsimp</code> accepts operators like <code>(+)</code> for simplifying and <code>unfold</code> doesn't</p>",
        "id": 136968759,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1541133328
    },
    {
        "content": "<p>oh yes  I should unfold addition first!<br>\nBut after unfold add, I still cannot unfold eq....</p>",
        "id": 136968824,
        "sender_full_name": "AHan",
        "timestamp": 1541133425
    },
    {
        "content": "<p>Anyway <code>eq.symm (add_equiv _)</code> is really a nice solution, thanks a lot!</p>",
        "id": 136970809,
        "sender_full_name": "AHan",
        "timestamp": 1541136300
    }
]