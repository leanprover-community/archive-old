[
    {
        "content": "<p>Hi all. So, I proved that if d|a, d|b, then for any integers m, n, I have d | (ma + nb)</p>\n<div class=\"codehilite\"><pre><span></span>import tactic.ring\nvariables {a b c d: ℤ}\ndef divides (a b: ℤ): Prop := ∃(d: ℤ), b = a * d\n\ntheorem divides_linear_sum (hda: divides d a) (hdb: divides d b):\n  ∀ (m n: ℤ), divides d (m * a + n * b) :=\nbegin\n  assume m, assume n,\n  cases hda with q hq,\n  cases hdb with r hr,\n  use m * q + n * r,\n  rw [hq, hr],\n  ring,\nend\n</pre></div>\n\n\n<p>Now \"obviously\" this holds for the special case m = n = 1. However I couldn't write the proof in a concise way.</p>\n<div class=\"codehilite\"><pre><span></span>theorem divides_sum (hda: divides d a) (hdb: divides d b):\n  divides d (a + b) :=\nhave h : divides d (1 * a + 1 * b), from divides_linear_sum hda hdb 1 1,\nhave simplify: 1 * a + 1 * b = a + b, from\n  begin\n    ring,\n  end,\nsimplify ▸ h\n</pre></div>\n\n\n<p>I thought I could proof it in 1 step using <code>divides_linear_sum hda hdb 1 1</code>. The problem was, when I gave <code>divides_linear_sum hda hdb 1 1</code> I got <code>divides d (1 * a + 1 * b)</code> which isn't the same as <code>divides d (a + b)</code> syntactically. Any pointers (like how to write it concisely in tactics mode)? Thanks!</p>",
        "id": 180033943,
        "sender_full_name": "agro1986",
        "timestamp": 1573048434
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">divides_sum</span> <span class=\"o\">(</span><span class=\"n\">hda</span><span class=\"o\">:</span> <span class=\"n\">divides</span> <span class=\"n\">d</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hdb</span><span class=\"o\">:</span> <span class=\"n\">divides</span> <span class=\"n\">d</span> <span class=\"n\">b</span><span class=\"o\">):</span>\n  <span class=\"n\">divides</span> <span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">convert</span> <span class=\"n\">divides_linear_sum</span> <span class=\"n\">hda</span> <span class=\"n\">hdb</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span><span class=\"bp\">;</span> <span class=\"n\">rw</span> <span class=\"n\">one_mul</span>\n</pre></div>",
        "id": 180034278,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1573048654
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">divides_sum</span> <span class=\"o\">(</span><span class=\"n\">hda</span><span class=\"o\">:</span> <span class=\"n\">divides</span> <span class=\"n\">d</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hdb</span><span class=\"o\">:</span> <span class=\"n\">divides</span> <span class=\"n\">d</span> <span class=\"n\">b</span><span class=\"o\">):</span>\n  <span class=\"n\">divides</span> <span class=\"n\">d</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">simpa</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">one_mul</span><span class=\"o\">]</span> <span class=\"kn\">using</span> <span class=\"n\">divides_linear_sum</span> <span class=\"n\">hda</span> <span class=\"n\">hdb</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span>\n</pre></div>",
        "id": 180034379,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1573048708
    },
    {
        "content": "<p>wow thanks! everyone's a wizard here :)</p>",
        "id": 180034875,
        "sender_full_name": "agro1986",
        "timestamp": 1573049020
    },
    {
        "content": "<p>It's just practice. After a while your head ends up full of tricks</p>",
        "id": 180071421,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573070592
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"244890\">@agro1986</span> Btw, did you know that you can replicate the notation <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>a</mi><mi mathvariant=\"normal\">∣</mi><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a | b</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\">a</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">b</span></span></span></span> in Lean?</p>",
        "id": 180107547,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1573110215
    }
]