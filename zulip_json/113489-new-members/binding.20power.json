[
    {
        "content": "<p>If the binding powers are not specified, what is the precedence of <code>::</code> and <code>++</code> in the following examples?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">namespace</span> <span class=\"n\">hidden</span>\n\n<span class=\"kd\">inductive</span> <span class=\"n\">list</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">nil</span> <span class=\"o\">{}</span> <span class=\"o\">:</span> <span class=\"n\">list</span>\n<span class=\"bp\">|</span> <span class=\"n\">cons</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">list</span> <span class=\"bp\">→</span> <span class=\"n\">list</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">list</span>\n\n<span class=\"kd\">notation</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"bp\">`</span> <span class=\"n\">l</span><span class=\"o\">:(</span><span class=\"n\">foldr</span> <span class=\"bp\">`</span><span class=\"o\">,</span><span class=\"bp\">`</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">cons</span> <span class=\"n\">h</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">nil</span><span class=\"o\">)</span> <span class=\"bp\">`</span><span class=\"o\">]</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">l</span>\n\n<span class=\"kd\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"kd\">notation</span> <span class=\"n\">h</span> <span class=\"o\">::</span> <span class=\"n\">t</span>  <span class=\"o\">:=</span> <span class=\"n\">cons</span> <span class=\"n\">h</span> <span class=\"n\">t</span>\n\n<span class=\"kd\">@[simp]</span>\n<span class=\"kd\">def</span> <span class=\"n\">append</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"n\">list.rec_on</span> <span class=\"n\">s</span> <span class=\"n\">t</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"n\">l</span> <span class=\"n\">u</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"o\">::</span><span class=\"n\">u</span><span class=\"o\">)</span>\n\n<span class=\"kd\">notation</span> <span class=\"n\">s</span> <span class=\"bp\">++</span> <span class=\"n\">t</span> <span class=\"o\">:=</span> <span class=\"n\">append</span> <span class=\"n\">s</span> <span class=\"n\">t</span>\n</code></pre></div>",
        "id": 242970826,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1623903163
    },
    {
        "content": "<p>See <a href=\"https://github.com/leanprover-community/lean/blob/master/library/init/core.lean#L80-L81\">https://github.com/leanprover-community/lean/blob/master/library/init/core.lean#L80-L81</a><br>\nIt is reserved notation.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">reserve</span> <span class=\"kd\">infixl</span> <span class=\"bp\">`</span> <span class=\"bp\">++</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">65</span> <span class=\"c1\">-- has_append.append</span>\n<span class=\"kd\">reserve</span> <span class=\"kd\">infixr</span> <span class=\"bp\">`</span> <span class=\"o\">::</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">67</span> <span class=\"c1\">-- list.cons</span>\n</code></pre></div>",
        "id": 242973871,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1623906963
    }
]