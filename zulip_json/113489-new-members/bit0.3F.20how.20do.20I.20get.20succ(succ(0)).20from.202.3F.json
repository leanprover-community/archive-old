[
    {
        "content": "<p>I'm trying to prove <code>⊢ a ^ 2 = a ^ 2 + 0 ^ 2</code> (actually, part of <code>  (a + b) ^ (2 : mynat) = a ^ (2 : mynat) + b ^ (2 : mynat) + 2 * a * b :=</code> but ignore that for the moment) and think I need the fact that <code>2 = succ(succ(0))</code> but can't seem to get lean to output this. if I try <code>one_eq_succ_zero</code> I get a <code>bit0</code> which I'm not sure how to deal with yet.</p>",
        "id": 228114962,
        "sender_full_name": "eax",
        "timestamp": 1614500015
    },
    {
        "content": "<p>if I could get this, then I should be able to use <code>pow_succ</code> and then <code>mul_zero</code> and then <code>refl</code></p>",
        "id": 228115034,
        "sender_full_name": "eax",
        "timestamp": 1614500088
    },
    {
        "content": "<p>It's true by <code>rfl</code></p>",
        "id": 228115588,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1614500785
    },
    {
        "content": "<p>thanks! Same idea as my previous tread then. is there a more direct way of getting there fwiw?</p>",
        "id": 228142080,
        "sender_full_name": "eax",
        "timestamp": 1614531490
    },
    {
        "content": "<p>or alternatively, is there a way to enable tracing in the NNG? it would nice to see what lean is actually doing</p>",
        "id": 228143332,
        "sender_full_name": "eax",
        "timestamp": 1614532697
    },
    {
        "content": "<p>Download the repo from GitHub and play with it in VS Code maybe. It's filed under ImperialCollegeLondon IIRC.</p>",
        "id": 228144815,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1614534004
    },
    {
        "content": "<p>@eax there is a little more detail on <code>bit1</code> in this thread: <a href=\"#narrow/stream/113489-new-members/topic/if.20a.20.3C.20b.20then.20a.5E3.20.3C.20b.5E3/near/224516939\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/if.20a.20.3C.20b.20then.20a.5E3.20.3C.20b.5E3/near/224516939</a></p>",
        "id": 228150820,
        "sender_full_name": "Lars Ericson",
        "timestamp": 1614540159
    }
]