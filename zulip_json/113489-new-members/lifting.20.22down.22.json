[
    {
        "content": "<p>How do I, as opposed to ulift, lift \"down\" a type? In my case I have an element in a set of sets and I want to treat it as a set.</p>",
        "id": 186002901,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1579366832
    },
    {
        "content": "<p>you can't; that's the whole point</p>",
        "id": 186003093,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1579367086
    },
    {
        "content": "<p>but an element in a set of sets can definitely be treated as a set (MWE?)</p>",
        "id": 186003099,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1579367099
    },
    {
        "content": "<p>MWE?</p>",
        "id": 186003274,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1579367378
    },
    {
        "content": "<p>An element in a set of sets is a set</p>",
        "id": 186003289,
        "sender_full_name": "Reid Barton",
        "timestamp": 1579367399
    },
    {
        "content": "<p>MWE = minimal working example</p>",
        "id": 186003335,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1579367409
    },
    {
        "content": "<p>I think you should explain your question in Lean and not English</p>",
        "id": 186003337,
        "sender_full_name": "Reid Barton",
        "timestamp": 1579367409
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">MWE</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">opens</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">U</span> <span class=\"o\">:</span> <span class=\"n\">opens</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">U</span> <span class=\"bp\">=</span> <span class=\"n\">T</span><span class=\"o\">:=</span>\n</pre></div>",
        "id": 186003443,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1579367531
    },
    {
        "content": "<p>Maybe it is my instinct to want to lift down as opposed to up</p>",
        "id": 186003451,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1579367551
    },
    {
        "content": "<p>the MWE gives an error</p>",
        "id": 186003504,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1579367636
    },
    {
        "content": "<p><code>U.1</code></p>",
        "id": 186003555,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1579367655
    },
    {
        "content": "<p>and my question is how do I resolve this</p>",
        "id": 186003556,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1579367656
    },
    {
        "content": "<p>it's not <code>ulift</code></p>",
        "id": 186003563,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1579367672
    },
    {
        "content": "<p>wait what does .1 do in this case?</p>",
        "id": 186003599,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1579367762
    },
    {
        "content": "<p>Usually when I use it it is to access the carrier of some structure</p>",
        "id": 186003643,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1579367782
    },
    {
        "content": "<p>but set is defined as a function</p>",
        "id": 186003644,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1579367789
    },
    {
        "content": "<p>the way you coerce <code>opens</code> to a type is to use <code>subtype</code></p>",
        "id": 186003715,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1579367929
    },
    {
        "content": "<p><code>opens</code> is not a type</p>",
        "id": 186003718,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1579367935
    },
    {
        "content": "<p>oh</p>",
        "id": 186003727,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1579367945
    }
]