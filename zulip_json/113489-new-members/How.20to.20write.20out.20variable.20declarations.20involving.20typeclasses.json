[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">χ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">has_lt</span> <span class=\"n\">χ</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">lt</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">χ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">tree</span> <span class=\"o\">:</span> <span class=\"n\">rbmap</span> <span class=\"n\">χ</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n    <span class=\"k\">match</span> <span class=\"n\">tree</span><span class=\"bp\">.</span><span class=\"n\">find</span> <span class=\"n\">x</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">x</span>\n    <span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n    <span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>I somehow managed to write the above out.</p>\n<p>What I would like to do is write the above like...</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">χ</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">has_lt</span> <span class=\"n\">χ</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">decidable_rel</span> <span class=\"n\">h</span><span class=\"bp\">.</span><span class=\"n\">lt</span><span class=\"o\">]</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">χ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">tree</span> <span class=\"o\">:</span> <span class=\"n\">rbmap</span> <span class=\"n\">χ</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n    <span class=\"k\">match</span> <span class=\"n\">tree</span><span class=\"bp\">.</span><span class=\"n\">find</span> <span class=\"n\">x</span> <span class=\"k\">with</span>\n    <span class=\"bp\">|</span> <span class=\"n\">some</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"n\">x</span>\n    <span class=\"bp\">|</span> <span class=\"n\">none</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n    <span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>...but it is not working for me. Is it possible to do this somehow?</p>\n<p>Also as an aside, the Zulip allowed title length is too short. I do not even have room to put in an exclamation mark properly, let alone the full title.</p>",
        "id": 178394946,
        "sender_full_name": "Marko Grdinić",
        "timestamp": 1571327915
    },
    {
        "content": "<p>Alternatively, is there some other way to bundle types together with typeclasses?</p>",
        "id": 178395165,
        "sender_full_name": "Marko Grdinić",
        "timestamp": 1571328070
    },
    {
        "content": "<p>If you give a type class <code>variable</code> a name, you have to explicitly include it, using <code>include h</code>.</p>",
        "id": 178400605,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1571331696
    },
    {
        "content": "<p>This means that the hypothesis <code>h</code> (and therefore also <code>χ</code>) will be added to all declarations, even the ones that do not mention <code>χ</code> (you can use <code>omit h</code> to disable this).</p>",
        "id": 178400689,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1571331733
    },
    {
        "content": "<p>Regarding zulip title length, I am on a phone and I can only see \"How to write out a variable decl...\", even less from the main screen. So probably it is a bad idea to write too much in the title.</p>",
        "id": 178411218,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571338842
    }
]