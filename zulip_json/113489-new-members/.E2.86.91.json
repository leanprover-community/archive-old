[
    {
        "content": "<p>In <code>∀ (i j : fin n), i &lt; j → x ↑i &lt; x ↑j</code>, where x is a function from \\N to \\R, what does <code>\\u</code> mean?</p>",
        "id": 240741706,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1622356815
    },
    {
        "content": "<p>It's a coercion.</p>",
        "id": 240741709,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1622356834
    },
    {
        "content": "<p>Lean can see that <code>x i</code> doesn't typecheck, because <code>i</code> is a <code>fin n</code>, but needs to be a <code>nat</code>. So before giving up and complaining, it goes looking (via the typeclass search mechanism) for a coercion from <code>fin n</code> to <code>nat</code>. It finds one, and wraps the <code>i</code> in this. The pretty printer knows to write these coercions with the arrow, for readability (although often for decreased copy-and-paste-ability).</p>",
        "id": 240741724,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1622356909
    }
]