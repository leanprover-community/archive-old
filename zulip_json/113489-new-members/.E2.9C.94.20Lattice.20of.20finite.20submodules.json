[
    {
        "content": "<p>I did my best searching through the documentation and Zulip and I wasn't able to find exactly what I was looking for. </p>\n<p>Is there anything in mathlib already about the lattice of finitely generated submodules of  a fixed module? If not, is this a reasonable definition to work with (kind of copying the definition for ideals):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">fg_submodule</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_monoid</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">v</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">submod</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">is_fg</span> <span class=\"o\">:</span> <span class=\"bp\">âˆƒ</span><span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">M</span><span class=\"o\">),</span> <span class=\"n\">submod</span> <span class=\"bp\">=</span> <span class=\"n\">submodule.span</span> <span class=\"n\">R</span> <span class=\"n\">s</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>The context of this question is that I want to try and take a bite out of the todo in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.flat\">docs#module.flat</a>, and an important lemma in proving flat modules preserve injectives is that any module can be realized as a direct limit over its finite submodules.</p>",
        "id": 273883746,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1646258299
    },
    {
        "content": "<p>We have <a href=\"https://leanprover-community.github.io/mathlib_docs/find/submodule.fg\">docs#submodule.fg</a> which would be better to use for the finitely-generated condition.</p>",
        "id": 273883852,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646258369
    },
    {
        "content": "<p>( you gave essentially the same definition, but using <code>submodule.fg</code> will allow you to use the API from mathlib)</p>",
        "id": 273883982,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1646258412
    },
    {
        "content": "<p>Oh shoot, I should have probably looked at the Noetherian stuff... Thanks!</p>",
        "id": 273884354,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1646258506
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"455674\">Matej Penciak</span> has marked this topic as resolved.</p>",
        "id": 273884442,
        "sender_full_name": "Notification Bot",
        "timestamp": 1646258542
    }
]