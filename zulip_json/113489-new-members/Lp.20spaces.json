[
    {
        "content": "<p>Hello,<br>\nI have been proving things about Lp spaces (the spaces of functions with norm having finite integral when raised to the power p, not quotiented) and I would like to turn that work into a pull request.<br>\nCould I get access to non-master branches? My github name is RemyDegenne.</p>\n<p>The main results are, depending on hypotheses : Lp spaces are add_comm_group; Hölder inequality for functions with values in nnreal; Minkowski inequality; Lp spaces are premetric_space; Lp spaces are vector_space.<br>\nNext step is to prove completeness, but I first need to learn how to use Cauchy sequences in lean. Can anyone point me to a file where Cauchy sequences are used?<br>\nAfter that, the plan is to have specialized results for L1 (but a lot is already done through the \"integrable\" statements) and mostly for L2 and to relate to the quotiented Lp, proving for example that it is then a metric_space (and inner_product_space for L2).</p>",
        "id": 216457179,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1605181268
    },
    {
        "content": "<p><span class=\"user-group-mention\" data-user-group-id=\"2494\">@maintainers</span> <span aria-label=\"upvote\" class=\"emoji emoji-1f53c\" role=\"img\" title=\"upvote\">:upvote:</span></p>",
        "id": 216460013,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1605183483
    },
    {
        "content": "<p>To prove completeness, you could for instance use the criterion <a href=\"https://leanprover-community.github.io/mathlib_docs/find/metric.complete_of_convergent_controlled_sequences\">docs#metric.complete_of_convergent_controlled_sequences</a>. Although it would probably be better to prove a criterion in terms of converging series, of the form: assume <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>B</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">B_n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is a positive sequence of real numbers, and any series <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo><msub><mi>u</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sum u_n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> with <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∥</mi><msub><mi>u</mi><mi>n</mi></msub><mi mathvariant=\"normal\">∥</mi><mo>&lt;</mo><msub><mi>B</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\|u_n\\| &lt; B_n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∥</span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> for all <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> is converging. Then the space is complete.</p>",
        "id": 216460868,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1605184164
    },
    {
        "content": "<p>Thanks for the tip!<br>\nI don't have a metric space but only a premetric one, but by looking under the hood very quickly it seems that all I need is an uniform space, and premetric space implies uniform space, so that works.</p>",
        "id": 216463224,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1605185698
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"350992\">@Rémy Degenne</span> invite sent!</p>",
        "id": 216463600,
        "sender_full_name": "Reid Barton",
        "timestamp": 1605185940
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 216463671,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1605185993
    },
    {
        "content": "<p>It sounds like you have material for several PRs; it's better to PR things separately, especially when they are independent.</p>",
        "id": 216463989,
        "sender_full_name": "Reid Barton",
        "timestamp": 1605186162
    },
    {
        "content": "<p>Just to get a feel for the process, you might want to make a first PR with ~50 lines of code.</p>",
        "id": 216464229,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1605186298
    },
    {
        "content": "<p>Ok, I'll cut it into several pieces. Something like 0) basic definitions, 1) add_comm_group, 2) Hölder, 3) Minkowski + premetric_space (since Minkowski is the only difficulty), 4) vector space.</p>",
        "id": 216464496,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1605186462
    },
    {
        "content": "<p>So I've tried making a PR but I have linting errors, which is what I expected since I never checked that aspect. Is there a way to run the lint locally, and only on my new files?<br>\nI'd like to avoid waiting 1h before realizing that I forgot a docstring on a definition :)</p>",
        "id": 216504812,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1605204087
    },
    {
        "content": "<p>You can write <code>#lint</code> at the bottom of each file you want to lint.</p>",
        "id": 216507844,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1605205444
    },
    {
        "content": "<p>Thank you !</p>",
        "id": 216508013,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1605205518
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"350992\">@Rémy Degenne</span> it looks like you've been opening new PRs and then closing them again e.g. <a href=\"https://github.com/leanprover-community/mathlib/issues/4990\">#4990</a> and <a href=\"https://github.com/leanprover-community/mathlib/issues/4991\">#4991</a>. The usual practice would be to push new commits to existing PR branches instead of creating a new branch and PR for every change. We're happy to help if you're having trouble with git / github, just let us know!</p>",
        "id": 216518888,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1605210846
    },
    {
        "content": "<p>Yeah sorry, I committed something to a branch for which I had a PR open, then closed it when I saw that the new changes were included in the PR (I discovered that a PR is about the branch and not a specific commit as I mistakenly thought). I should have simply reverted. The other one I'll just reopen tomorrow and work from there, hopefully without further mistakes!</p>",
        "id": 216526090,
        "sender_full_name": "Rémy Degenne",
        "timestamp": 1605214037
    },
    {
        "content": "<p>Don't worry, this whole GitHub thing needs some time to get used to it.</p>",
        "id": 216526275,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1605214107
    }
]