[
    {
        "content": "<p>Hi! Welcome to the community. The situation regarding schemes and algebraic geometry in Lean is not very much developed, you can have a look at the thread <a href=\"#narrow/stream/113488-general/topic/Status.20of.20algebraic.20geometry\">https://leanprover.zulipchat.com/#narrow/stream/113488-general/topic/Status.20of.20algebraic.20geometry</a></p>",
        "id": 254341212,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1632303953
    },
    {
        "content": "<p>That being said, one place where you can normally have a look is here<br>\n<a href=\"https://leanprover-community.github.io/mathlib_docs/\">https://leanprover-community.github.io/mathlib_docs/</a></p>",
        "id": 254341348,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1632304011
    },
    {
        "content": "<p>In particular, <a href=\"https://leanprover-community.github.io/mathlib_docs/find/algebraic_geometry.Scheme\">docs#algebraic_geometry.Scheme</a> should give you some ideas of the situation.</p>",
        "id": 254341422,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1632304067
    },
    {
        "content": "<p>Thanks! ill have a look.</p>",
        "id": 254342999,
        "sender_full_name": "Elias F책kvam",
        "timestamp": 1632304849
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"443251\">Elias F책kvam</span> has marked this topic as resolved.</p>",
        "id": 254343026,
        "sender_full_name": "Notification Bot",
        "timestamp": 1632304865
    },
    {
        "content": "<p>So to say let <code>X</code> be a scheme you can just write</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">algebraic_geometry.Scheme</span>\n<span class=\"kn\">open</span> <span class=\"n\">algebraic_geometry</span>\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"o\">:</span> <span class=\"n\">Scheme</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>the fact that this is a locally ringed space is baked in to the definition of a scheme used here as you can see from the page Filippo linked to</p>",
        "id": 254345368,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1632306214
    },
    {
        "content": "<p>Thanks for the reply, my aim was mostly to write down a goal concerning schemes. I would have wished the statement and the proof to look something like:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">\\</span><span class=\"k\">forall</span> <span class=\"n\">x</span><span class=\"o\">,</span>  <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span> <span class=\"n\">scheme</span><span class=\"o\">)</span> <span class=\"bp\">\\</span><span class=\"n\">imp</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">:</span><span class=\"n\">LRS</span><span class=\"o\">):=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">intro</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n<span class=\"s2\">\"use def of scheme\"</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>but  it seems it is more invovled that this.</p>",
        "id": 254497092,
        "sender_full_name": "Elias F책kvam",
        "timestamp": 1632384288
    },
    {
        "content": "<p>Yes it doesn't work like this. You can't say \"for all things x, if x is a scheme then...\". When x is born it has a type, e.g. <code>Scheme</code>. It is not a <em>theorem</em> that a scheme is a locally-ringed space, even though this is how mathematicians talk about it. It is a <em>construction</em> (of a rather trivial, forgetful, nature). To give a simpler example, mathematicians might say that a ring is an additive abelian group, but if you think about it formally a ring might be something like a 6-tuple (R,0,1,+,-,*) and an additive abelian group is something like a 4-tuple (R,0,+,-) so there is some kind of (forgetful) function involved in order to construct an additive abelian group from a ring.</p>",
        "id": 254497313,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632384408
    },
    {
        "content": "<p>Thank you! This was very helpful.</p>",
        "id": 254500810,
        "sender_full_name": "Elias F책kvam",
        "timestamp": 1632386238
    },
    {
        "content": "<p>And further, one can't \"prove that an additive abelian group is a ring\". The statement doesn't even make sense. Of course we can construct a ring from an additive abelian group and some extra data.</p>",
        "id": 254501270,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1632386501
    }
]