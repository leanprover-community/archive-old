[
    {
        "content": "<p>In the title -- what is Lean's equivalent of Coq's Set Printing All? That is, I want to see terms without notations or elided implicit arguments.</p>",
        "id": 274492505,
        "sender_full_name": "Jessie Grosen",
        "timestamp": 1646711056
    },
    {
        "content": "<p>(currently trying to debug why this lemma won't prove -- i want to prove <code>a = b</code>, <code>#reduce a</code> tells me it reduces to <code>b</code>, but <code>rfl</code> doesn't type check...)</p>",
        "id": 274492558,
        "sender_full_name": "Jessie Grosen",
        "timestamp": 1646711150
    },
    {
        "content": "<p>(my current guess is something about opacity that <code>#reduce</code> doesn't respect? but not sure)</p>",
        "id": 274492644,
        "sender_full_name": "Jessie Grosen",
        "timestamp": 1646711232
    },
    {
        "content": "<p>You could try the command <code>set_option pp.all true</code></p>",
        "id": 274492718,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1646711295
    },
    {
        "content": "<p>thanks!</p>",
        "id": 274493864,
        "sender_full_name": "Jessie Grosen",
        "timestamp": 1646712359
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"484038\">Jessie Grosen</span> has marked this topic as resolved.</p>",
        "id": 274493902,
        "sender_full_name": "Notification Bot",
        "timestamp": 1646712363
    },
    {
        "content": "<p>Most likely it's a well founded recursive definition</p>",
        "id": 274494400,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646712904
    },
    {
        "content": "<p>these do not compute by <code>rfl</code> because it involves reducing proofs. <code>#reduce</code> will reduce proofs if necessary for these definitions</p>",
        "id": 274494433,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1646712944
    }
]