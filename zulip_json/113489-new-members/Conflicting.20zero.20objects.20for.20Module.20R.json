[
    {
        "content": "<p>Posting in new members because I doubt this is an interesting question, but I'm getting conflicts between <code>abelian.has_zero_object</code> and <code>Module.category_theory.limits.has_zero_object</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">category_theory.abelian.ext</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.category.Module.projective</span>\n\n<span class=\"kd\">universes</span> <span class=\"n\">u</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">ring</span> <span class=\"n\">R</span><span class=\"o\">]</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">category_theory</span>\n\n<span class=\"kd\">instance</span> <span class=\"o\">:</span> <span class=\"n\">has_projective_resolutions</span> <span class=\"o\">(</span><span class=\"n\">Module.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"bp\">@</span><span class=\"n\">ProjectiveResolution.category_theory.has_projective_resolutions</span>\n  <span class=\"o\">(</span><span class=\"n\">Module.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span> <span class=\"n\">R</span><span class=\"o\">)</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">Module.Module_enough_projectives.</span><span class=\"o\">{</span><span class=\"n\">u</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>I got round it for a short while by giving <code>abelian.has_zero_object</code> as an argument to <code>has_projective_resolutions</code> but now I've run into later conflicts.</p>",
        "id": 271492852,
        "sender_full_name": "Amelia Livingston",
        "timestamp": 1644526548
    },
    {
        "content": "<p>Maybe we should change <code>has_zero_object</code> to be a <code>Prop</code>?</p>",
        "id": 271494081,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1644527097
    }
]