[
    {
        "content": "<p>hey I intend to write a proof of an equation where the RHS is real and LHS is a sum of a pair of  complex conjugates but it keeps telling the error that the terms on RHS should have type \\real . how am I supposed to fix it ? thanks</p>",
        "id": 129414919,
        "sender_full_name": "VeraZZ",
        "timestamp": 1531233760
    },
    {
        "content": "<p>you need to make the real number complex</p>",
        "id": 129415017,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531233864
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">complex</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"bp\">λ</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℂ</span><span class=\"o\">)</span>\n</pre></div>",
        "id": 129415049,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531233933
    },
    {
        "content": "<p>Isn't there automatic coercion?</p>",
        "id": 129415117,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1531234012
    },
    {
        "content": "<p>If the LHS is complex, I would think that the RHS would be coerced automatically. (Otoh, if LHS is real and RHS is complex, then Lean will start complaining, or you have to coerce manually.)</p>",
        "id": 129415139,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1531234062
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120352\">@VeraZZ</span> if <code>x</code> is a real number then <code>(x : ℂ)</code> is an attempt to force <code>x</code> to be a complex number.</p>",
        "id": 129416182,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531235308
    },
    {
        "content": "<p>but the complex number isn't <code>x</code>, it's written <code>↑x : ℂ</code></p>",
        "id": 129416642,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531235825
    },
    {
        "content": "<p>because you applied a secret function to x</p>",
        "id": 129416647,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531235833
    },
    {
        "content": "<p>which almost certainly has a name</p>",
        "id": 129416650,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531235844
    },
    {
        "content": "<p>but <code>(x : ℂ)</code> shows that the coercion is automatic</p>",
        "id": 129416653,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1531235853
    },
    {
        "content": "<p>aha</p>",
        "id": 129416713,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531235927
    },
    {
        "content": "<p>it's <code>complex.of_real : ℝ → ℂ</code> of course. That's the name for the explicit injection from the reals to the complexes.</p>",
        "id": 129416733,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531235970
    },
    {
        "content": "<p>the LHS is actually a function which gives the inner product of two complex variables (so it is real).Is there a way to make the output of the function complex ?</p>",
        "id": 129469902,
        "sender_full_name": "VeraZZ",
        "timestamp": 1531315423
    },
    {
        "content": "<p>this is what the coercion does</p>",
        "id": 129469962,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1531315470
    },
    {
        "content": "<p>just write <code>( ... : ℂ)</code> around your real term and then it will be \"cast\" to complex</p>",
        "id": 129469980,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1531315501
    },
    {
        "content": "<p>aha thanks !</p>",
        "id": 129470001,
        "sender_full_name": "VeraZZ",
        "timestamp": 1531315543
    }
]