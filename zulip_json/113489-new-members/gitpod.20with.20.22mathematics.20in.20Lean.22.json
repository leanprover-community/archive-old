[
    {
        "content": "<p>I'm starting to go through Mathematics in Lean using gitpod. The document says \"If you click on the line, VS Code will show you Lean’s feedback in the Lean Goal window\". I see an infoview window with messages.  Is the Goal window different, and how do I see it (if so)??</p>",
        "id": 277954608,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1649199151
    },
    {
        "content": "<p>Oh, the \"Lean Goal Window\" is precisely the \"Lean Infoview\"</p>",
        "id": 277955285,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649199578
    },
    {
        "content": "<p>If you place your cursor somewhere in between the <code>begin</code> and the <code>end</code> of a theorem you should see something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n<span class=\"n\">inst</span><span class=\"bp\">✝</span> <span class=\"o\">:</span> <span class=\"n\">BEq</span> <span class=\"n\">α</span>\n<span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">NEList</span> <span class=\"n\">α</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">NEList.contains</span> <span class=\"n\">l</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">true</span> <span class=\"bp\">↔</span> <span class=\"n\">List.contains</span> <span class=\"o\">(</span><span class=\"n\">NEList.toList</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">true</span>\n</code></pre></div>",
        "id": 277955874,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649199819
    },
    {
        "content": "<p>Thanks much. Unfortunately I'm not getting anything like that.<br>\nProbably I need some import statements that I don't have.<br>\nIs there a tidy way to just reset all my state and start over?</p>",
        "id": 277956509,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1649200319
    },
    {
        "content": "<p>Can you send a screenshot of what you currently see?</p>",
        "id": 277956628,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649200400
    },
    {
        "content": "<p>Sure. I added some imports stolen from overview.lean and now things look a bit better. For a screenshot should I just attach the image file?</p>",
        "id": 277956757,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1649200475
    },
    {
        "content": "<p>Here's an example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">nat.add_comm</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>If you put your cursor after the <code>begin</code> then the infoview should show the goal like this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">1</span> <span class=\"n\">goal</span>\n<span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">n</span> <span class=\"bp\">&lt;</span> <span class=\"mi\">1</span> <span class=\"bp\">+</span> <span class=\"n\">n</span>\n</code></pre></div>\n<p>and moving past the <code>rw</code> should change the <code>1 + n</code> to <code>n + 1</code></p>",
        "id": 277956815,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649200517
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/ARwFMbUNX_1bDFIGsMx4rsH6/Screen-Shot-2022-04-05-at-16.16.16.png\">Screen-Shot-2022-04-05-at-16.16.16.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/ARwFMbUNX_1bDFIGsMx4rsH6/Screen-Shot-2022-04-05-at-16.16.16.png\" title=\"Screen-Shot-2022-04-05-at-16.16.16.png\"><img src=\"/user_uploads/3121/ARwFMbUNX_1bDFIGsMx4rsH6/Screen-Shot-2022-04-05-at-16.16.16.png\"></a></div>",
        "id": 277956983,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1649200636
    },
    {
        "content": "<p>your cursor needs to be in a begin-end block to see the goal</p>",
        "id": 277957009,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649200662
    },
    {
        "content": "<p>not the mouse cursor, the blinky line</p>",
        "id": 277957019,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649200679
    },
    {
        "content": "<p>that picture looks like everything is working properly</p>",
        "id": 277957105,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1649200747
    },
    {
        "content": "<p>Oops, sorry. English is not my mother tongue. I think it's called caret cursor?</p>",
        "id": 277957113,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649200756
    },
    {
        "content": "<p>Yes, I am now getting the results you propose. Still I'm very uncomfortable fumbling around with VS Code.</p>",
        "id": 277957359,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1649200932
    },
    {
        "content": "<p>If you're more comfortable with Emacs or Neovim, there are tools to make those talk to the Lean server as well</p>",
        "id": 277957450,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649201033
    },
    {
        "content": "<p>Thank you both. I can use both Emacs and vi/vim, but Mathematics in Lean seems to assume VSCode.<br>\nPlus it's not clear how to connect Emacs or whatnot in the gitpod environment.<br>\nMy Mac is M1-based and Lean is quite problematic in that environment.</p>",
        "id": 277957569,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1649201154
    },
    {
        "content": "<p>Is there a way to undo all my changes to files in the VSCode workspace?</p>",
        "id": 277957630,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1649201179
    },
    {
        "content": "<p>I mean Lean is problematic in an M1-based environment -- constantly runs out of memory.</p>",
        "id": 277957663,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1649201219
    },
    {
        "content": "<p>Ouch :/<br>\nWell, I'm not well-versed with VS Code either. I just use it with as a generic text editor with common ctrl+c ctrl+v etc shortcuts.</p>\n<p>Maybe someone else will be able to help you further at this point</p>",
        "id": 277957987,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1649201470
    },
    {
        "content": "<p>Ok, tnx!</p>",
        "id": 277958102,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1649201568
    },
    {
        "content": "<p>You should be able to be successful with an M1 (I use one), but indeed not everything is as seamless as it should/could be. Do feel free to ask any specific questions you have, someone should be able to help.</p>",
        "id": 277959062,
        "sender_full_name": "Julian Berman",
        "timestamp": 1649202370
    },
    {
        "content": "<p>Running out of memory shouldn't happen -- generally that means that your <a href=\"https://leanprover-community.github.io/glossary.html#cache\">glossary#cache</a> is missing -- but <code>leanproject</code> should have gotten you one if you followed the instructions from the README</p>",
        "id": 277959116,
        "sender_full_name": "Julian Berman",
        "timestamp": 1649202447
    },
    {
        "content": "<p>If you're still running into that specific issue let us know, we can try to diagnose it.</p>",
        "id": 277959137,
        "sender_full_name": "Julian Berman",
        "timestamp": 1649202468
    },
    {
        "content": "<p>(I think indeed you shouldn't try to use emacs within gitpod -- if you are going to do so, you want to follow the parts of the instructions that show you how to run <code>mathematics_in_lean</code> on your own computer)</p>",
        "id": 277959244,
        "sender_full_name": "Julian Berman",
        "timestamp": 1649202546
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"487818\">@Cris Perdue</span> if you are comfortable with git you can use that from the terminal within gitpod to revert your changes. There is also a vscode interface for git in the sidebar to make this less fiddly if you want to try that too</p>",
        "id": 277996810,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1649236976
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> Thanks, Alex. After a few more minutes I did figure out that I can access git from the command line and it worked great. I will look in the sidebar now also.</p>",
        "id": 278029494,
        "sender_full_name": "Cris Perdue",
        "timestamp": 1649254449
    }
]