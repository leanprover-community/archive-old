[
    {
        "content": "<p>Given a subset in lean, Is there a good way to access the set its contained in without constructing it? <br>\nIn my case I have a subset of sections:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">sections</span> <span class=\"o\">(</span><span class=\"n\">F</span> <span class=\"o\">:</span> <span class=\"n\">J</span> <span class=\"bp\">⥤</span> <span class=\"kt\">Type</span> <span class=\"n\">w</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"o\">(</span><span class=\"bp\">Π</span> <span class=\"n\">j</span><span class=\"o\">,</span> <span class=\"n\">F.obj</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">u</span> <span class=\"bp\">|</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">j</span> <span class=\"n\">j'</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">j</span> <span class=\"bp\">⟶</span> <span class=\"n\">j'</span><span class=\"o\">),</span> <span class=\"n\">F.map</span> <span class=\"n\">f</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">j</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">u</span> <span class=\"n\">j'</span><span class=\"o\">}</span>\n</code></pre></div>\n<p>And now I want to access  <code>(set (Π j, F.obj j))</code> as a set. (so not as type Type)</p>",
        "id": 218931367,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1607168213
    },
    {
        "content": "<p>I don't quite understand the question. <code>set X</code> is the type of all subsets of <code>X</code>. What do you actually have?</p>",
        "id": 218931593,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1607168581
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/accessing.20universal.20set/near/218931593\">said</a>:</p>\n<blockquote>\n<p>I don't quite understand the question. <code>set X</code> is the type of all subsets of <code>X</code>. What do you actually have?</p>\n</blockquote>\n<p>I have a term of this type, so a subset, and now I want to get the term of this type which is the whole set</p>",
        "id": 218931615,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1607168632
    },
    {
        "content": "<p>What is \"the whole set\"? Do you mean the type, considered as a subset of itself? This is <code>univ : set X</code>.</p>",
        "id": 218931663,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1607168689
    },
    {
        "content": "<p>There is no set, there is just a type, and the type of its subsets.</p>",
        "id": 218931673,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1607168709
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/accessing.20universal.20set/near/218931663\">said</a>:</p>\n<blockquote>\n<p>What is \"the whole set\"? Do you mean the type, considered as a subset of itself? This is <code>univ : set X</code>.</p>\n</blockquote>\n<p>yes this is what I mean!</p>",
        "id": 218931740,
        "sender_full_name": "Calle Sönne",
        "timestamp": 1607168808
    },
    {
        "content": "<p>I emphasized that when I taught the intro module this year. When a mathematician says set I argued that they either meant type or subset</p>",
        "id": 218931764,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1607168844
    }
]