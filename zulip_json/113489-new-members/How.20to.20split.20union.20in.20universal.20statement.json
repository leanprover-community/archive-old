[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">set</span>\n\n<span class=\"kd\">variables</span> <span class=\"n\">α</span> <span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span>\n<span class=\"kd\">variable</span>  <span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">→</span> <span class=\"n\">set</span> <span class=\"n\">α</span>\n<span class=\"kd\">variable</span>  <span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span>\n\n<span class=\"c1\">-- BEGIN</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">s</span> <span class=\"bp\">∪</span> <span class=\"o\">(</span><span class=\"bp\">⋂</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">A</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">⋂</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">i</span> <span class=\"bp\">∪</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">ext</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mem_union_eq</span><span class=\"o\">,</span> <span class=\"n\">mem_Inter</span><span class=\"o\">],</span>\n  <span class=\"n\">rw</span> <span class=\"n\">mem_Inter</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">h</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n    <span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">xs</span> <span class=\"n\">xAi</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">mem_union_eq</span><span class=\"o\">,</span>\n      <span class=\"n\">right</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"n\">xs</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n    <span class=\"o\">{</span> <span class=\"n\">rw</span> <span class=\"n\">mem_union_eq</span><span class=\"o\">,</span>\n      <span class=\"n\">left</span><span class=\"o\">,</span>\n      <span class=\"n\">exact</span> <span class=\"n\">xAi</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"o\">},</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">intros</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"n\">right</span><span class=\"o\">,</span>\n    <span class=\"n\">intro</span> <span class=\"n\">i</span><span class=\"o\">,</span>\n    <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n<span class=\"c1\">-- END</span>\n</code></pre></div>",
        "id": 242752160,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1623771257
    },
    {
        "content": "<p>Im trying to define the union at the universal statement h, but lean will not let me. How do I define the union with the variable i and split the hypothesis?</p>",
        "id": 242752303,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1623771311
    },
    {
        "content": "<p>Do you want to do <code>have h' := h i,</code>?</p>",
        "id": 242752953,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1623771569
    },
    {
        "content": "<p>Oh, you went down a wrong path before that</p>",
        "id": 242753157,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1623771640
    },
    {
        "content": "<p><code>left</code> and <code>right</code> are dangerous tactics :-)</p>",
        "id": 242753234,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1623771671
    },
    {
        "content": "<p>Which path should I have taken?</p>",
        "id": 242753264,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1623771682
    },
    {
        "content": "<p>both paths lead the wrong way</p>",
        "id": 242753286,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1623771693
    },
    {
        "content": "<p>And your suggestion worked, thanks</p>",
        "id": 242753288,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1623771694
    },
    {
        "content": "<p>There is a way to do the proof without specifying left or right?</p>",
        "id": 242753410,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1623771738
    },
    {
        "content": "<p>No, but neither is correct in all cases. Do you know the pen-and-paper proof?</p>",
        "id": 242753534,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1623771798
    },
    {
        "content": "<p>the problem is that you don't know which way to go yet. Do you know a maths proof of what you're trying to do?</p>",
        "id": 242753546,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1623771805
    },
    {
        "content": "<p>Well h says that for all x x in s or x in A i. So I would do cases on that then prove x in s with one case and x in A i with the other</p>",
        "id": 242754182,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1623772051
    },
    {
        "content": "<p>Indeed - do you know how to do a case split in lean?</p>",
        "id": 242754280,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1623772083
    },
    {
        "content": "<p>but the statement you want to do a case split on depends on a variable i</p>",
        "id": 242754324,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1623772093
    },
    {
        "content": "<p>But I cant  introduce a variable i, so I settled for choosing a path</p>",
        "id": 242754377,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1623772116
    },
    {
        "content": "<p>And no I thought cases h with ... was splitting?</p>",
        "id": 242754424,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1623772133
    },
    {
        "content": "<p>yes, the problem is that you might want to go one way for some i, and the other way for other i. So it seems to me that you don't have a pen-and-paper proof yet.</p>",
        "id": 242754505,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1623772160
    },
    {
        "content": "<p>Well not really, I would go one way based on the case x in s or x in A i. Not depending on i</p>",
        "id": 242754818,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1623772270
    },
    {
        "content": "<p>Im a bit confused about what you mean sorry</p>",
        "id": 242754853,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1623772294
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"418334\">Shadman Sakib</span> <a href=\"#narrow/stream/113489-new-members/topic/How.20to.20split.20union.20in.20universal.20statement/near/242754818\">said</a>:</p>\n<blockquote>\n<p>I would go one way based on the case x in s or x in A i. Not depending on i</p>\n</blockquote>\n<p>Read what you said ... it does depend on <code>i</code>! :)</p>",
        "id": 242755216,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1623772430
    },
    {
        "content": "<p>I can't figure out the proof <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> has in mind either; I managed to finish using <code>by_cases</code></p>",
        "id": 242755332,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1623772469
    },
    {
        "content": "<p>by_cases xs : x in s?</p>",
        "id": 242755487,
        "sender_full_name": "Shadman Sakib",
        "timestamp": 1623772535
    }
]