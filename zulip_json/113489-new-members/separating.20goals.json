[
    {
        "content": "<p>Are there alternatives to using <code>{}</code> to separate goals?</p>",
        "id": 257850951,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1634408708
    },
    {
        "content": "<p>Why do you ask?</p>",
        "id": 257855740,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634413286
    },
    {
        "content": "<p>You could maybe use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.interactive.solve1\">docs#tactic.interactive.solve1</a> directly, but it would be less clear</p>",
        "id": 257855813,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634413346
    },
    {
        "content": "<p>I was looking for something more compact, like <code>++</code> in Coq.</p>",
        "id": 257855955,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1634413502
    },
    {
        "content": "<p>Can you give an example of how that's more compact?</p>",
        "id": 257867060,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634423718
    },
    {
        "content": "<p>I currently use braces as:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">by_cases</span> <span class=\"bp\">...</span><span class=\"o\">,</span>\n<span class=\"o\">{</span>\n  <span class=\"bp\">...</span>\n  <span class=\"bp\">...</span>\n<span class=\"o\">},</span>\n<span class=\"o\">{</span>\n  <span class=\"bp\">...</span>\n  <span class=\"bp\">...</span>\n<span class=\"o\">}</span>\n</code></pre></div>\n<p>I would probably use something like <code>++</code> as:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">by_cases</span> <span class=\"bp\">...</span><span class=\"o\">,</span>\n<span class=\"bp\">++</span> <span class=\"bp\">...</span>\n   <span class=\"bp\">...</span>\n<span class=\"bp\">++</span> <span class=\"bp\">...</span>\n   <span class=\"bp\">...</span>\n</code></pre></div>\n<p>It's not really a big deal though.</p>",
        "id": 257946327,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1634502621
    },
    {
        "content": "<p>I don't think this exists in lean 3, it does in lean 4 though (which is altogether more whitespace sensitive).<br>\nMost people format their braces like this though, which is a bit more like the second option layout wise:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">by_cases</span> <span class=\"bp\">...</span><span class=\"o\">,</span>\n<span class=\"o\">{</span> <span class=\"bp\">...</span>\n  <span class=\"bp\">...</span> <span class=\"o\">},</span>\n<span class=\"o\">{</span> <span class=\"bp\">...</span>\n  <span class=\"bp\">...</span><span class=\"o\">}</span>\n</code></pre></div>",
        "id": 257946469,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1634502742
    },
    {
        "content": "<p>To be honest, that doesn't appeal to me as much. Thank you though.</p>",
        "id": 257946831,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1634503092
    },
    {
        "content": "<p>The lean 4 style looks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"bp\">...</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span>\n  <span class=\"n\">by_cases</span> <span class=\"bp\">...</span>\n  <span class=\"bp\">·</span> <span class=\"n\">tac</span>\n    <span class=\"n\">tac</span>\n  <span class=\"bp\">·</span> <span class=\"n\">tac</span>\n    <span class=\"n\">tac</span>\n</code></pre></div>\n<p>It's not likely to change in lean 3 at this point.</p>",
        "id": 257948388,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1634504562
    },
    {
        "content": "<p>The main appeal of using the <code>{}</code> style mentioned above is that if you get used to it then you will find over half a million lines of mathlib code easier to read. If you intend to collaborate, it's way more important to confirm to the community style than pick the one that's most appealing.</p>\n<p>Of course, if you're writing code only for your own benefit, you're free to format it as you please</p>",
        "id": 257949858,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1634505846
    },
    {
        "content": "<p>At this point it is mostly for my own benefit.</p>",
        "id": 257950783,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1634506699
    }
]