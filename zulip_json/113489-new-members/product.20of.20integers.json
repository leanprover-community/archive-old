[
    {
        "content": "<p>I'm trying to describe the product of a bunch of coprime integers. Since I want to describe finite integers, so I choose <code>list nat</code>.  The way I find to write the product is <code>list.foldr (*) 1 [2,3,5..]</code>, using a random list as an example. Is this the best way of doing this? (sorry for asking so much noob questions recently)</p>",
        "id": 180135277,
        "sender_full_name": "rory",
        "timestamp": 1573135788
    },
    {
        "content": "<blockquote>\n<p>I'm trying to describe the product of a bunch of coprime integers. Since I want to describe finite integers, so I choose <code>list nat</code>.  The way I find to write the product is <code>list.foldr (*) 1 [2,3,5..]</code>, using a random list as an example. Is this the best way of doing this? (sorry for asking so much noob questions recently)</p>\n</blockquote>\n<p>If you <code>import algebra.big_operators</code>, you get access to <code>list.prod</code>.</p>",
        "id": 180150054,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1573144882
    },
    {
        "content": "<p>It's probably better to use <code>finset.prod</code>. Most of the useful lemmas are about <code>finset.prod</code>.</p>",
        "id": 180150340,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1573145051
    },
    {
        "content": "<p>Out of curiosity is there a reason (other than historical accident) why the lemmas about sums and products are mostly at the <code>finset</code> level rather than <code>list</code>? Are finsets intrinsically more well-suited for summing (or proving things about sums) than lists?</p>",
        "id": 180151109,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1573145529
    }
]