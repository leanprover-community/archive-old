[
    {
        "content": "<p>What does the last line of this mean, in particular the <code>..</code> in <code>  ..induced_outer_measure </code>:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">of_measurable</span> <span class=\"o\">{</span><span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">measurable_space</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">),</span> <span class=\"n\">is_measurable</span> <span class=\"n\">s</span> <span class=\"bp\">→</span> <span class=\"n\">ennreal</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">m0</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">∅</span> <span class=\"n\">is_measurable.empty</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">mU</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}}</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">is_measurable</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)),</span>\n    <span class=\"n\">pairwise</span> <span class=\"o\">(</span><span class=\"n\">disjoint</span> <span class=\"n\">on</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n    <span class=\"n\">m</span> <span class=\"o\">(</span><span class=\"bp\">⋃</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">is_measurable.Union</span> <span class=\"n\">h</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">∑'</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">m</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"n\">i</span><span class=\"o\">)))</span> <span class=\"o\">:</span>\n  <span class=\"n\">measure</span> <span class=\"n\">α</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">m_Union</span> <span class=\"o\">:=</span> <span class=\"bp\">λ</span> <span class=\"n\">f</span> <span class=\"n\">hf</span> <span class=\"n\">hd</span><span class=\"o\">,</span>\n  <span class=\"k\">show</span> <span class=\"n\">induced_outer_measure</span> <span class=\"n\">m</span> <span class=\"n\">_</span> <span class=\"n\">m0</span> <span class=\"o\">(</span><span class=\"n\">Union</span> <span class=\"n\">f</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n      <span class=\"bp\">∑'</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">induced_outer_measure</span> <span class=\"n\">m</span> <span class=\"n\">_</span> <span class=\"n\">m0</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">i</span><span class=\"o\">),</span> <span class=\"kd\">begin</span>\n    <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">induced_outer_measure_eq</span> <span class=\"n\">m0</span> <span class=\"n\">mU</span><span class=\"o\">,</span> <span class=\"n\">mU</span> <span class=\"n\">hf</span> <span class=\"n\">hd</span><span class=\"o\">],</span>\n    <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">funext</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">rw</span> <span class=\"n\">induced_outer_measure_eq</span> <span class=\"n\">m0</span> <span class=\"n\">mU</span>\n  <span class=\"kd\">end</span><span class=\"o\">,</span>\n  <span class=\"n\">trimmed</span> <span class=\"o\">:=</span>\n  <span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">induced_outer_measure</span> <span class=\"n\">m</span> <span class=\"n\">_</span> <span class=\"n\">m0</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">trim</span> <span class=\"bp\">=</span> <span class=\"n\">induced_outer_measure</span> <span class=\"n\">m</span> <span class=\"n\">_</span> <span class=\"n\">m0</span><span class=\"o\">,</span> <span class=\"kd\">begin</span>\n    <span class=\"n\">unfold</span> <span class=\"n\">outer_measure.trim</span><span class=\"o\">,</span>\n    <span class=\"n\">congr</span><span class=\"o\">,</span> <span class=\"n\">funext</span> <span class=\"n\">s</span> <span class=\"n\">hs</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">induced_outer_measure_eq</span> <span class=\"n\">m0</span> <span class=\"n\">mU</span> <span class=\"n\">hs</span>\n  <span class=\"kd\">end</span><span class=\"o\">,</span>\n  <span class=\"bp\">..</span><span class=\"n\">induced_outer_measure</span> <span class=\"n\">m</span> <span class=\"n\">_</span> <span class=\"n\">m0</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 219374643,
        "sender_full_name": "Lars Ericson",
        "timestamp": 1607537251
    },
    {
        "content": "<p>Unpack the fields of the structure to the right of the dots into the containing structure</p>",
        "id": 219375691,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607537718
    },
    {
        "content": "<p>This is called the \"record update syntax\" in <a href=\"https://leanprover.github.io/theorem_proving_in_lean/structures_and_records.html#objects\">9.2 of TPiL</a>.</p>",
        "id": 219376165,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1607537916
    }
]