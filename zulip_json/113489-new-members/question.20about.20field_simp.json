[
    {
        "content": "<p>I'd like to prove the following result (this is the discriminant of an elliptic curve with j-invariant equal to j):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"o\">:</span> <span class=\"n\">ℚ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h0</span> <span class=\"o\">:</span> <span class=\"n\">j</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h1728</span> <span class=\"o\">:</span> <span class=\"n\">j</span><span class=\"bp\">-</span><span class=\"mi\">1728</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">36</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">-</span> <span class=\"mi\">1728</span><span class=\"o\">))</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">-</span> <span class=\"mi\">1728</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">8</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">36</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">-</span> <span class=\"mi\">1728</span><span class=\"o\">)))</span> <span class=\"bp\">^</span> <span class=\"mi\">3</span> <span class=\"bp\">-</span> <span class=\"mi\">27</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">-</span> <span class=\"mi\">1728</span><span class=\"o\">)))</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">9</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">36</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">-</span> <span class=\"mi\">1728</span><span class=\"o\">)))</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">-</span> <span class=\"mi\">1728</span><span class=\"o\">)))</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"k\">calc</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">36</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">-</span> <span class=\"mi\">1728</span><span class=\"o\">))</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">-</span> <span class=\"mi\">1728</span><span class=\"o\">)</span> <span class=\"bp\">-</span> <span class=\"mi\">8</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">36</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">-</span> <span class=\"mi\">1728</span><span class=\"o\">)))</span> <span class=\"bp\">^</span> <span class=\"mi\">3</span> <span class=\"bp\">-</span> <span class=\"mi\">27</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">-</span> <span class=\"mi\">1728</span><span class=\"o\">)))</span> <span class=\"bp\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"mi\">9</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">36</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">-</span> <span class=\"mi\">1728</span><span class=\"o\">)))</span> <span class=\"bp\">*</span> <span class=\"o\">(</span><span class=\"mi\">4</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"bp\">-</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span> <span class=\"bp\">-</span> <span class=\"mi\">1728</span><span class=\"o\">)))</span>\n  <span class=\"bp\">=</span> <span class=\"n\">j</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span><span class=\"bp\">-</span><span class=\"mi\">1728</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"o\">{</span>\n    <span class=\"n\">field_simp</span> <span class=\"o\">[</span><span class=\"n\">h1728</span><span class=\"o\">],</span>\n    <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n  <span class=\"o\">}</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"o\">{</span>\n    <span class=\"n\">field_simp</span> <span class=\"o\">[</span><span class=\"n\">h1728</span><span class=\"o\">,</span> <span class=\"n\">h0</span><span class=\"o\">],</span>\n  <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>but the first field_simp seems not work. Any suggestions?</p>",
        "id": 220782830,
        "sender_full_name": "Jz Pan",
        "timestamp": 1608725024
    },
    {
        "content": "<p>the goal is changing before and after the first <code>field_simp</code>, right?</p>",
        "id": 220784073,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1608726193
    },
    {
        "content": "<p>Yes, <code>field_simp</code> seems to be doing it's job</p>",
        "id": 220784192,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608726315
    },
    {
        "content": "<p>You can close that sorry with <code>ring_exp, ring</code></p>",
        "id": 220784206,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608726324
    },
    {
        "content": "<p><code>ring</code> is enough.</p>",
        "id": 220784226,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1608726337
    },
    {
        "content": "<p>Is that a <code>ring_exp</code> bug that it doesn't close this goal, by the way?</p>",
        "id": 220784327,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1608726398
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/question.20about.20field_simp/near/220784192\">said</a>:</p>\n<blockquote>\n<p>Yes, <code>field_simp</code> seems to be doing it's job</p>\n</blockquote>\n<p>Well, it didn't clear all denominators.</p>",
        "id": 220784330,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1608726400
    },
    {
        "content": "<p><code>field_simp [pow_succ, h1728]</code> does clear all denoms.</p>",
        "id": 220784354,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1608726419
    },
    {
        "content": "<p>Here, it does close all denominators.</p>",
        "id": 220784392,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1608726465
    },
    {
        "content": "<p>You were fiddling with attributes the other day though</p>",
        "id": 220784474,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608726527
    },
    {
        "content": "<p>ooh, maybe I'm on a mathlib that's too old</p>",
        "id": 220784517,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1608726579
    },
    {
        "content": "<p>Thanks, I confirm that</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"bp\">=</span> <span class=\"n\">j</span><span class=\"bp\">^</span><span class=\"mi\">2</span> <span class=\"bp\">/</span> <span class=\"o\">(</span><span class=\"n\">j</span><span class=\"bp\">-</span><span class=\"mi\">1728</span><span class=\"o\">)</span><span class=\"bp\">^</span><span class=\"mi\">3</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"o\">{</span>\n    <span class=\"n\">field_simp</span> <span class=\"o\">[</span><span class=\"n\">pow_succ</span><span class=\"o\">,</span> <span class=\"n\">h1728</span><span class=\"o\">],</span>\n    <span class=\"n\">ring</span><span class=\"o\">,</span>\n  <span class=\"o\">}</span>\n</code></pre></div>\n<p>works. Maybe I'm using an old version of mathlib, who knows. Anyway I already fixed it by using another elliptic curve whose a1 a2 a3 a4 a6 have no denominators (using a linear change of variable to eliminate all its denominators) <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 220785141,
        "sender_full_name": "Jz Pan",
        "timestamp": 1608727185
    },
    {
        "content": "<p>I tried to prove the group law was associative for the general a1 a2...a6 form and lean got bogged down in the algebra. I am running a student project on elliptic curves next term and I was tempted to just stick to x^3+Ax+B.</p>",
        "id": 220788415,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608730195
    },
    {
        "content": "<p>Interesting. I heard that somebody already implemented the group law for general Weierstrass form.</p>",
        "id": 220851025,
        "sender_full_name": "Jz Pan",
        "timestamp": 1608789513
    },
    {
        "content": "<p>I think that was Kevin, together with John Cremona. But I'm not sure if they finished it in the end. Kevin's comment above sounds like they didn't...</p>",
        "id": 220851090,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1608789606
    },
    {
        "content": "<p>Oh I'm sure this has been done in other provers. Cremona and I have some work we were doing for fun at LFTCM</p>",
        "id": 220860193,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1608803938
    },
    {
        "content": "<p>Oops, when I upgrade the mathlib my old file breaks, which complains with 'unknown identifier field_simp'. The last version I used is around 12-02.</p>",
        "id": 220910978,
        "sender_full_name": "Jz Pan",
        "timestamp": 1608884353
    },
    {
        "content": "<p>Try adding <code>import tactic.field_simp</code>?</p>",
        "id": 220911951,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1608885926
    },
    {
        "content": "<p>And then it doesn't solve the goal anymore <span aria-label=\"neutral\" class=\"emoji emoji-1f610\" role=\"img\" title=\"neutral\">:neutral:</span></p>",
        "id": 220912854,
        "sender_full_name": "Jz Pan",
        "timestamp": 1608887529
    },
    {
        "content": "<p>How close does it get?</p>",
        "id": 220912858,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1608887554
    },
    {
        "content": "<blockquote>\n<p>How close does it get?</p>\n</blockquote>\n<p>I forgot; I have already revert the mathlib version :|</p>",
        "id": 220912995,
        "sender_full_name": "Jz Pan",
        "timestamp": 1608887837
    },
    {
        "content": "<p><code>field_simp</code> became more powerful... so if it stopped closing a goal, we would be interested to know what it looks like...</p>",
        "id": 220913940,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1608889556
    },
    {
        "content": "<p>You can go to <a href=\"https://gitee.com/acmepjz/my-lean-test/tree/master/tests/gtm106\">https://gitee.com/acmepjz/my-lean-test/tree/master/tests/gtm106</a> for my test codes.  Current I'm using mathlib version 1f1ba587f272d203a40801c6b21af453f7de6ee3 2020-11-29 and all of my code works.</p>",
        "id": 220953756,
        "sender_full_name": "Jz Pan",
        "timestamp": 1608967279
    }
]