[
    {
        "content": "<p>A have a set of related lemmas that are all working with the same equation that has a bunch of constraints (min values for the variables basically).</p>\n<p>Is there a way to group these into an object that could be passed as a unit instead of individual hypothesis?</p>",
        "id": 207469851,
        "sender_full_name": "Rick Love",
        "timestamp": 1597876902
    },
    {
        "content": "<p>One option is to use <code>variables</code> or <code>parameters</code> to declare the hypotheses.  They are similar, but <code>parameters</code> models the idea that all the definitions and lemmas in the section are under the <em>same</em> hypotheses on the <em>same</em> variables.</p>\n<p>In a little more detail, <code>variables</code> is as if each lemma individually universally quantifies over the introduced hypotheses, and <code>parameters</code> is as if the universal quantification is done at the end of the section.  In practice, it means that with <code>variables</code> you have to pass the hypotheses to the other lemmas in proofs, and with <code>parameters</code> you don't.</p>",
        "id": 207470897,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1597877714
    },
    {
        "content": "<p>Another is to define a <code>structure</code> whose fields are the variables and hypotheses.  This isn't done much as far as I know unless this collection of data is some sort of reasonable mathematical object in its own right.  (It can make it harder to use lemmas if you do it this way.  It makes it so you can't do partial evaluation, since it's essentially uncurrying things.)</p>",
        "id": 207471107,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1597877878
    },
    {
        "content": "<p>Ok, I'll check that out. In the main case these are unlikely to be useful outside of the context since they are just cases of the main proof or pieces that are specifically related to it.</p>",
        "id": 207471696,
        "sender_full_name": "Rick Love",
        "timestamp": 1597878252
    },
    {
        "content": "<p>I think this is the section of TPIL that introduces these things: <a href=\"https://leanprover.github.io/theorem_proving_in_lean/interacting_with_lean.html#more-on-sections\">https://leanprover.github.io/theorem_proving_in_lean/interacting_with_lean.html#more-on-sections</a></p>\n<p>Note that <code>section ... end</code> and <code>namespace foo ... end foo</code> are the constructs for limiting the scope of the <code>variables</code> and <code>parameters</code> keywords.</p>",
        "id": 207471888,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1597878408
    },
    {
        "content": "<p>Perfect, Thanks! I read this early when I found lean but forgot many details.</p>",
        "id": 207472719,
        "sender_full_name": "Rick Love",
        "timestamp": 1597879028
    }
]