[
    {
        "content": "<p>Hi!<br>\nI'm trying to prove a goal  <code>r</code> when I have a function <code>f : p → q → r</code><br>\nis there any clever tactic to create subgoals for <code>p</code> and <code>q</code> instead of just doing something like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"n\">pf₁</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"bp\">...</span> <span class=\"o\">},</span>\n<span class=\"k\">have</span> <span class=\"n\">pf₂</span> <span class=\"o\">:</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"bp\">...</span> <span class=\"o\">},</span>\n<span class=\"n\">exact</span> <span class=\"n\">f</span> <span class=\"n\">pf₁</span> <span class=\"n\">pf₂</span>\n</code></pre></div>",
        "id": 290846682,
        "sender_full_name": "Calvin Lee",
        "timestamp": 1658807627
    },
    {
        "content": "<p>You can do <code>refine f _ _</code> or simply <code>apply f</code></p>",
        "id": 290846949,
        "sender_full_name": "Roberto Alvarez",
        "timestamp": 1658807895
    }
]