[
    {
        "content": "<p>I'm trying to prove de Morgan's laws. I don't know of how to deal with negations for example in the following situation:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"bp\">¬</span> <span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span> <span class=\"n\">q</span> <span class=\"o\">:=</span>\n\n<span class=\"k\">begin</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"bp\">...</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>After having imported the logic.basic library the work is done. But I would like to prove the goals using the tactics as proposed for example in the Natural Number Game.</p>",
        "id": 208320427,
        "sender_full_name": "Claus-Peter Becke",
        "timestamp": 1598605754
    },
    {
        "content": "<p>negation <code>¬ p</code>is just notation for <code>p -&gt; false</code>. So <code>intro h</code> can be used to prove one</p>",
        "id": 208321155,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1598606299
    },
    {
        "content": "<p>Note that one of the de Morgan identities (I forget which) is classical, so you'll need to use <code>by_contra</code> or <code>by_cases</code> at some point</p>",
        "id": 208322808,
        "sender_full_name": "Chris Wong",
        "timestamp": 1598607548
    },
    {
        "content": "<p>This one should be provable without using <code>by_contra</code> or <code>by_cases</code>. For <code>¬ (p ∧ q) ↔ ¬ p ∨ ¬ q</code>, you will need them.</p>",
        "id": 208325469,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1598609876
    },
    {
        "content": "<p>@Anne Baanen, Chris Wong, Mario Carneiro,<br>\nthank you for hints. Using the following way to rewrite the theorem I proved one goal. Is it ok, to rewrite the theorem the following way?</p>\n<div class=\"codehilite\"><pre><span></span><code>``\n</code></pre></div>",
        "id": 208327238,
        "sender_full_name": "Claus-Peter Becke",
        "timestamp": 1598611240
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">false</span> <span class=\"bp\">↔</span> <span class=\"n\">p</span> <span class=\"bp\">→</span> <span class=\"n\">false</span> <span class=\"bp\">∧</span> <span class=\"n\">q</span> <span class=\"bp\">→</span> <span class=\"n\">false</span> <span class=\"o\">:=</span>\n</code></pre></div>",
        "id": 208327263,
        "sender_full_name": "Claus-Peter Becke",
        "timestamp": 1598611282
    },
    {
        "content": "<p>You should find that the proof you wrote works for the way you originally wrote it too</p>",
        "id": 208330372,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1598613785
    }
]