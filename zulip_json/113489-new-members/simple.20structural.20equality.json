[
    {
        "content": "<p>How would I prove this?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">structure</span> <span class=\"n\">mystr</span> <span class=\"o\">:=</span>\n    <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">bool</span><span class=\"o\">)</span>\n    <span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">10</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">mystr_eq</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">mystr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A_eq</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">B_eq</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span>\n<span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">sorry</span>\n</pre></div>",
        "id": 131121507,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1533749337
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">mystr_eq</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">mystr</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">A_eq</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">A</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">A</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">B_eq</span> <span class=\"o\">:</span> <span class=\"n\">x</span><span class=\"bp\">.</span><span class=\"n\">B</span> <span class=\"bp\">=</span> <span class=\"n\">y</span><span class=\"bp\">.</span><span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span>\n<span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">cases</span> <span class=\"n\">x</span> <span class=\"bp\">;</span> <span class=\"n\">cases</span> <span class=\"n\">y</span> <span class=\"bp\">;</span> <span class=\"n\">cc</span>\n</pre></div>",
        "id": 131121866,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1533749743
    },
    {
        "content": "<p>thanks</p>",
        "id": 131121909,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1533749763
    },
    {
        "content": "<p><code>congr</code>?</p>",
        "id": 131121919,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533749770
    },
    {
        "content": "<p>next question: how to prove it without tactics? Just a proof term.</p>",
        "id": 131121937,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1533749795
    },
    {
        "content": "<p><code>congr ; assumption</code> instead of <code>cc</code> also works</p>",
        "id": 131121944,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1533749804
    },
    {
        "content": "<p><code>congr'</code> too</p>",
        "id": 131121952,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533749816
    },
    {
        "content": "<p>It's longer though</p>",
        "id": 131121953,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1533749817
    },
    {
        "content": "<p>but is much longer to type</p>",
        "id": 131121955,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1533749820
    },
    {
        "content": "<p>still longer</p>",
        "id": 131121960,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1533749824
    },
    {
        "content": "<p><code>cc</code> is longer to run</p>",
        "id": 131121965,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533749837
    },
    {
        "content": "<p>I suppose <code>congr; cc</code> works</p>",
        "id": 131121967,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1533749844
    },
    {
        "content": "<p>Can't we have <code>congra</code>?</p>",
        "id": 131121976,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1533749874
    },
    {
        "content": "<p><code>by congr ; assumption</code> fails on <code>congr</code> for me</p>",
        "id": 131121978,
        "sender_full_name": "Edward Ayers",
        "timestamp": 1533749876
    },
    {
        "content": "<p><code>congr'</code></p>",
        "id": 131121980,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533749878
    },
    {
        "content": "<p>is <code>congra</code></p>",
        "id": 131121985,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533749883
    },
    {
        "content": "<p>you have to do <code>cases</code> first</p>",
        "id": 131122043,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533749921
    },
    {
        "content": "<p>term proof:</p>\n<div class=\"codehilite\"><pre><span></span>theorem mystr_eq : ∀ (x y : mystr) (A_eq : x.A = y.A) (B_eq : x.B = y.B), x = y\n| ⟨xA, xB, xp⟩ ⟨_, _, _⟩ rfl rfl := rfl\n</pre></div>",
        "id": 131122165,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1533750031
    },
    {
        "content": "<p>I was about to post that term proof but Mario just beat me to it. When I was a beginner I found those sorts of proofs miraculous; that's why I thought it was worth mentioning. The equation compiler is so clever.</p>",
        "id": 131122397,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1533750331
    }
]