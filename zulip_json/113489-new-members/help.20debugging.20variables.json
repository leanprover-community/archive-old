[
    {
        "content": "<p>is there a way to do <code>œÉ·µ¢</code> but with <code>i+1</code> as the subscript?</p>",
        "id": 248648139,
        "sender_full_name": "Holly Liu",
        "timestamp": 1628273753
    },
    {
        "content": "<p>There is nothing magical about subscripts. They are just sequences of letters. You could name your variables <code>sigma_i_plus_one</code> and that would have as much (or as little) meaning as <code>œÉ·µ¢‚Çä‚ÇÅ</code></p>",
        "id": 248653810,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1628276248
    },
    {
        "content": "<p>For questions like this, there are really only three things to consider:</p>\n<ul>\n<li>Can the thing you're asking for be typed in unicode plaintext? This is not a lean question, but lean users might know more about unicode maths than most other mathematicians. There are tools online that let you draw a character and find the closest unicode character (<a href=\"http://shapecatcher.com\">shapecatcher.com</a>)</li>\n<li>Does the vscode extension have a shortcut for your chosen character. If no, ask for one, or PR it yourself!</li>\n<li>Is the character you choose valid in an identifier name? If it's not, then  it's probably still valid as part of notation.</li>\n</ul>",
        "id": 248655961,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1628277325
    },
    {
        "content": "<p>does it need to be a shortcut in order to be recognized by lean? currently i get the error <code>unexpected token</code> when typing <code>œÉ·µ¢‚Çä‚ÇÅ</code></p>",
        "id": 248673441,
        "sender_full_name": "Holly Liu",
        "timestamp": 1628287093
    },
    {
        "content": "<p>The character has to match the regex <code>[_a-zA-ZŒ±-œâŒë-Œ©œä-œª·ºÄ-·øæ‚ÑÄ-‚Öèùíú-ùñü0-9'‚Åø-‚Çâ‚Çê-‚Çú·µ¢-·µ™]</code>.</p>",
        "id": 248674004,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1628287488
    },
    {
        "content": "<p>That is, it has to lie in one of the <code>A-Z</code> ranges between the square bracket (every character has a number)</p>",
        "id": 248674058,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1628287534
    },
    {
        "content": "<p>does that mean it can't be a combination of characters from different ranges?</p>",
        "id": 248675378,
        "sender_full_name": "Holly Liu",
        "timestamp": 1628288587
    },
    {
        "content": "<p>No, it can be any mix of characters from all ranges - although the first character of each identifier is slightly more strict. The regex vscode actually uses to highlight is here:</p>\n<p><a href=\"https://github.com/leanprover/vscode-lean/blob/2b43982c4c6305a0f20f156152a60613a6f1a683/syntaxes/lean.json#L183-L190\">https://github.com/leanprover/vscode-lean/blob/2b43982c4c6305a0f20f156152a60613a6f1a683/syntaxes/lean.json#L183-L190</a></p>\n<p>While the actual C code that determines once and for all whether a name is valid is here:</p>\n<p><a href=\"https://github.com/leanprover-community/lean/blob/65ad4ffdb3abac75be748554e3cbe990fb1c6500/src/util/name.cpp#L28-L56\">https://github.com/leanprover-community/lean/blob/65ad4ffdb3abac75be748554e3cbe990fb1c6500/src/util/name.cpp#L28-L56</a></p>",
        "id": 248675889,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1628288951
    }
]