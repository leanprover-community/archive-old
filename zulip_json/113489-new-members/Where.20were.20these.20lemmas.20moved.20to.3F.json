[
    {
        "content": "<p>I have difficult finding out two lemmas called map_mul_of_map_pow_two and ring_hom.mk_mul_self_of_two_ne_zero because their name were changed. Is there any way tackle this kind of problem?</p>",
        "id": 215181121,
        "sender_full_name": "Xiang Li",
        "timestamp": 1604133720
    },
    {
        "content": "<p>Do you know in which file they used to be? (Or a commit that still contained them?)</p>",
        "id": 215181284,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1604133986
    },
    {
        "content": "<p>I just searched through the commit logs, and they don't mention their removal, which is unfortunate.</p>",
        "id": 215181288,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1604134006
    },
    {
        "content": "<p>Is this related to the <code>nat.pow</code> change?</p>",
        "id": 215181291,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1604134025
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code>commit d8707432c03714519d7127016341d820c3c30cf6\nAuthor: Alex J. Best &lt;alex.j.best@gmail.com&gt;\nDate:   Fri Jul 17 14:04:32 2020 -0400\n\n    begin moving\n\n<span class=\"gh\">diff --git a/src/field_theory/complete_ordered.lean b/src/field_theory/complete_ordered.lean</span>\n<span class=\"gh\">index a0e737616..d79ec1506 100644</span>\n<span class=\"gd\">--- a/src/field_theory/complete_ordered.lean</span>\n<span class=\"gi\">+++ b/src/field_theory/complete_ordered.lean</span>\n<span class=\"gu\">@@ -23,6 +23,7 @@ We introduce definitions of Conditionally complete linear ordered fields, show a</span>\n archimedean, and define equivalences between these fields. We also construct the natural map from a\n `linear_ordered_field` to such a field.\n\n<span class=\"gi\">+As a proof outline this follows:</span>\n https://mathoverflow.net/questions/362991/who-first-characterized-the-real-numbers-as-the-unique-complete-ordered-field\n\n ## Tags\n<span class=\"gu\">@@ -32,19 +33,6 @@ reals, conditionally complete, ordered field</span>\n noncomputable theory\n open_locale classical\n\n<span class=\"gd\">-lemma map_mul_of_map_pow_two (R S : Type*) [comm_ring R] [integral_domain S] (h2 : (2 : S) ≠ 0)</span>\n<span class=\"gd\">-  (f : R →+ S) (h : ∀ x, f (x * x) = f x * f x) (x y : R) : f (x * y) = f x * f y :=</span>\n<span class=\"gd\">-begin</span>\n<span class=\"gd\">-  have hxy := h (x + y),</span>\n<span class=\"gd\">-  simp only [mul_add, add_mul, h x, h y, f.map_add] at hxy,</span>\n<span class=\"gd\">-  rw [← sub_eq_zero_iff_eq] at hxy,</span>\n<span class=\"gd\">-  ring at hxy,</span>\n<span class=\"gd\">-  rw [mul_comm y x, mul_assoc, mul_comm (f y)] at hxy,</span>\n<span class=\"gd\">-  rw [← two_mul, add_comm, ← sub_eq_add_neg, ← mul_sub, mul_eq_zero, sub_eq_zero_iff_eq] at hxy,</span>\n<span class=\"gd\">-  rw classical.or_iff_not_imp_left at hxy,</span>\n<span class=\"gd\">-  exact hxy h2,</span>\n<span class=\"gd\">-end</span>\n</code></pre></div>",
        "id": 215181355,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1604134135
    },
    {
        "content": "<p>Hmm, sorry, that's not a commit on master</p>",
        "id": 215181365,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1604134161
    },
    {
        "content": "<p>Thank you very much! I am reading some code he wrote and thought their names were changed. What's your way to search these?</p>",
        "id": 215181438,
        "sender_full_name": "Xiang Li",
        "timestamp": 1604134304
    },
    {
        "content": "<p>Aah right... I was really confused, because I couldn't find any commit on master that mentioned this.</p>",
        "id": 215181544,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1604134447
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>git log -p --all -G <span class=\"s2\">\"map_mul_of_map_pow_two\"</span>\n</code></pre></div>",
        "id": 215181552,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1604134475
    },
    {
        "content": "<p>If you know the statement of the lemma, you can always <code>library_search</code> for the new name</p>",
        "id": 215182953,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1604137156
    }
]