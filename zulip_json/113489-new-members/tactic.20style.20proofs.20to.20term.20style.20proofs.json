[
    {
        "content": "<p>Is it possible to automatically translate a tactic style proof to a term style proof? Is it theoretically possible?</p>",
        "id": 158846663,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1550548627
    },
    {
        "content": "<p><code>#print</code></p>",
        "id": 158849100,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550552588
    },
    {
        "content": "<p>The reverse is much harder</p>",
        "id": 158849104,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550552597
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> <code>exact</code></p>",
        "id": 158857298,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1550564524
    },
    {
        "content": "<p>you know what I mean</p>",
        "id": 158857309,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1550564553
    },
    {
        "content": "<p>Note that <code>#print</code> will give you a term-mode proof indeed. But it is not in the style that mathlib likes. After all, not all term-mode proofs are equal <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 158910131,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1550603812
    },
    {
        "content": "<p>They are definitionally equal!</p>",
        "id": 158910609,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1550604163
    },
    {
        "content": "<p>Sure, but the mathlib maintainers have even stricter notions of equality <span aria-label=\"joking\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"joking\">:joking:</span></p>",
        "id": 158910931,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1550604373
    },
    {
        "content": "<p>I tried #print on the default example from the web editor, but I could not really understand the result. If I wanted to write a program to translate a tactic style proof to a declarative style proof using statements like 'let' and 'have', would that be feasible?</p>",
        "id": 160067744,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1551849110
    },
    {
        "content": "<p>I would have to learn tactics first, but if I did so, I'm wondering how difficult it would be.</p>",
        "id": 160067800,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1551849161
    },
    {
        "content": "<p>Only if the proof uses \"boring tactics\" like <code>intros</code>, <code>have</code>, <code>change</code>, <code>refine</code>, <code>exact</code>, <code>apply</code> and <code>cases</code> to some extent</p>",
        "id": 160067881,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551849244
    },
    {
        "content": "<p>If it uses <code>rw</code> or <code>simp</code> or even more complicated tactics, the corresponding proof term is much more complicated</p>",
        "id": 160067906,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551849289
    },
    {
        "content": "<p>I guess I was thinking of translating from the list of tactics themselves, or even the code for the tactics, not the resulting proof term. Would that make a difference?</p>",
        "id": 160068092,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1551849488
    },
    {
        "content": "<p>Not really; <code>rw</code> and <code>simp</code> often produce irreducibly complicated proofs terms.</p>",
        "id": 160068537,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1551850078
    },
    {
        "content": "<p>Is there documentation on how the tactics are implemented in code? Maybe that would help me understand the issue better.</p>",
        "id": 160069226,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1551851031
    },
    {
        "content": "<p>You mean the core tactics like <code>rw</code> and <code>simp</code>? No, the only available documentation is the C++ source code.</p>",
        "id": 160069280,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1551851100
    },
    {
        "content": "<p>Are there user created tactics outside of the 'core' tactics?</p>",
        "id": 160069363,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1551851224
    },
    {
        "content": "<p>Absolutely. Read <a href=\"https://github.com/leanprover-community/mathlib/blob/master/docs/tactics.md\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/docs/tactics.md\">https://github.com/leanprover-community/mathlib/blob/master/docs/tactics.md</a> for an overview, or directly read the source code for these at <a href=\"https://github.com/leanprover-community/mathlib/tree/master/src/tactic\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/tree/master/src/tactic\">https://github.com/leanprover-community/mathlib/tree/master/src/tactic</a></p>",
        "id": 160069680,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1551851699
    },
    {
        "content": "<p>As a classic example, <code>ring</code> is written in mathlib.</p>",
        "id": 160069693,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1551851728
    },
    {
        "content": "<p>There's a nice blog post explaining a baby version of ring at <a href=\"https://xenaproject.wordpress.com/2018/06/13/ab3/\" target=\"_blank\" title=\"https://xenaproject.wordpress.com/2018/06/13/ab3/\">https://xenaproject.wordpress.com/2018/06/13/ab3/</a></p>",
        "id": 160069696,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1551851747
    },
    {
        "content": "<p>Thank you, I'll take a look.<br>\nI'm curious as to why the tactic style seems to be more prevalent than the declarative style in the proof assistants that I have seen. Is it because they are better suited to automated deduction?</p>",
        "id": 160069883,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1551852035
    },
    {
        "content": "<p>The tactic state often makes these proofs easier to read in lean</p>",
        "id": 160069966,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551852134
    },
    {
        "content": "<p>Particularly rewriting can be a huge pain without the help of a tactic.</p>",
        "id": 160070076,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1551852347
    },
    {
        "content": "<p>What is the tactic state?</p>",
        "id": 160070217,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1551852485
    },
    {
        "content": "<p>Are you using emacs or vscode to read lean files?</p>",
        "id": 160070244,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551852548
    },
    {
        "content": "<p>it is strongly recommended to use the lean mode in one of these editors</p>",
        "id": 160070252,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551852567
    },
    {
        "content": "<p>vscode</p>",
        "id": 160070298,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1551852604
    },
    {
        "content": "<p>If you use ctrl-space to bring up the 'lean messages' view, then with your cursor inside a tactic block you will see the \"tactic state\" printed</p>",
        "id": 160070318,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551852653
    },
    {
        "content": "<p>it describes the current goal to be proven, and you can step through a tactic proof by moving your cursor after each tactic</p>",
        "id": 160070344,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551852704
    },
    {
        "content": "<p>Ah. I see.</p>",
        "id": 160070551,
        "sender_full_name": "Patrick Thomas",
        "timestamp": 1551852999
    },
    {
        "content": "<p>Isar is very popular, I wouldn't the declarative style is less prevalent</p>",
        "id": 160071925,
        "sender_full_name": "Andrew Ashworth",
        "timestamp": 1551855216
    }
]