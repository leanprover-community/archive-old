[
    {
        "content": "<p>If I have a structure</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">structure</span> <span class=\"n\">test</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"n\">proposition</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">bar</span> <span class=\"o\">:</span> <span class=\"n\">proposition</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>is there a way to do something like this (i.e. using a proof done for a previous filed without registering a lemma outside the definition)?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">hey</span> <span class=\"o\">:</span> <span class=\"n\">test</span> <span class=\"o\">:=</span>\n<span class=\"o\">{</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"o\">{</span><span class=\"bp\">...</span><span class=\"o\">},</span>\n  <span class=\"n\">bar</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">foo</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 244553348,
        "sender_full_name": "Nicol√≤ Cavalleri",
        "timestamp": 1625140019
    },
    {
        "content": "<p>You could do</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">hey</span> <span class=\"o\">:</span> <span class=\"n\">test</span> <span class=\"o\">:=</span>\n<span class=\"k\">let</span> <span class=\"n\">foo</span> <span class=\"o\">:</span> <span class=\"bp\">...</span> <span class=\"o\">:=</span> <span class=\"bp\">...</span> <span class=\"k\">in</span>\n<span class=\"o\">{</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"n\">foo</span><span class=\"o\">,</span>\n  <span class=\"n\">bar</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">foo</span><span class=\"o\">]</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 244553584,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1625140196
    }
]