[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">option</span> <span class=\"n\">β</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">{</span><span class=\"n\">y</span> <span class=\"o\">:</span> <span class=\"n\">list</span> <span class=\"n\">β</span><span class=\"o\">}</span>\n    <span class=\"o\">(</span><span class=\"n\">hmap</span> <span class=\"o\">:</span> <span class=\"n\">list.map</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">list.map</span> <span class=\"n\">some</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">list.filter_map</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">=</span> <span class=\"n\">y</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 293559169,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1660577712
    },
    {
        "content": "<p>I think it follows from <a href=\"https://leanprover-community.github.io/mathlib_docs/find/list.map_filter_map_of_inv\">docs#list.map_filter_map_of_inv</a> with <code>g = id</code></p>",
        "id": 293560790,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1660578254
    },
    {
        "content": "<p>I don't see how it should follow from it.</p>",
        "id": 293574537,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1660582797
    },
    {
        "content": "<p>Nevermind. I have proved it myself. Just tell me whether you want the lemma to be added to mathlib.</p>",
        "id": 293587151,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1660583906
    }
]