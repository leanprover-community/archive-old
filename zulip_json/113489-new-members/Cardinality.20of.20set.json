[
    {
        "content": "<p>I have a <code>set</code> (not a <code>finset</code>, because it might have infinitely many elements) and I want to state that its cardinality is n as a <code>Prop</code>. I see how I could do this for small numbers by stating that every element of the set is equal to one of n choices, and even define something recursively for any nat, but this feels like something that should exist that I'm not seeing.</p>",
        "id": 203466869,
        "sender_full_name": "ROCKY KAMEN-RUBIO",
        "timestamp": 1594352828
    },
    {
        "content": "<p><code>s.card = \\u n</code>?</p>",
        "id": 203467105,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1594353159
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 203467114,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1594353178
    },
    {
        "content": "<p>This errors for me</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">s</span><span class=\"bp\">.</span><span class=\"n\">card</span> <span class=\"bp\">=</span> <span class=\"err\">↑</span><span class=\"mi\">2</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n</code></pre></div>",
        "id": 203467182,
        "sender_full_name": "ROCKY KAMEN-RUBIO",
        "timestamp": 1594353292
    },
    {
        "content": "<p>This thread deals with a similar question and the solution <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span>  gave was to use finset. Is there a way around that? is the point of having both <code>set</code> and <code>finset</code> that if we know a set is finite, then we show it can be coerced into a finset and then we get all the finset theorems?<br>\n<a href=\"#narrow/stream/113489-new-members/topic/Working.20with.20sets.20of.20finite.20cardinality/near/203326402\">https://leanprover.zulipchat.com/#narrow/stream/113489-new-members/topic/Working.20with.20sets.20of.20finite.20cardinality/near/203326402</a></p>",
        "id": 203467204,
        "sender_full_name": "ROCKY KAMEN-RUBIO",
        "timestamp": 1594353347
    },
    {
        "content": "<p>I don't think <code>set.card</code> exists, but you can get something pretty natural-looking using cardinality</p>",
        "id": 203467278,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1594353460
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">set_theory</span><span class=\"bp\">.</span><span class=\"n\">cardinal</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">cardinal</span><span class=\"bp\">.</span><span class=\"n\">mk</span> <span class=\"n\">s</span> <span class=\"bp\">=</span> <span class=\"mi\">2</span>\n</code></pre></div>",
        "id": 203467322,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1594353518
    }
]