[
    {
        "content": "<p>Unfortunately the Latex-command doesn't  work in Lean. Does anybody know of how to print the 'notsubseteq-sign' in Lean?</p>",
        "id": 210349298,
        "sender_full_name": "Claus-Peter Becke",
        "timestamp": 1600319973
    },
    {
        "content": "<p>It is <a href=\"https://github.com/leanprover/vscode-lean/blob/master/translations.json#L183\">apparently <code>\\nsubseteq</code></a>. All the codes are in that JSON file.</p>\n<p>It's a little puzzling why <code>nsubseteqq</code> also exists. Possibly a copy-paste error.</p>",
        "id": 210349439,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1600320157
    },
    {
        "content": "<p>Oh, it looks like <code>\\subn</code> also works.</p>",
        "id": 210349458,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1600320199
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> : Thank you very much. That worked pretty well.</p>",
        "id": 210349588,
        "sender_full_name": "Claus-Peter Becke",
        "timestamp": 1600320389
    },
    {
        "content": "<p>Obviously it was a little bit hasty to answer that it works, because I get the message 'unexpected token' after having used the sequence you recommended. I'm working in the following environment of VSCode. That is what the About-VSCode-Information contains.<br>\nVersion: 1.49.0<br>\nCommit: e790b931385d72cf5669fcefc51cdf65990efa5d<br>\nDate: 2020-09-10T17:39:53.251Z<br>\nElectron: 9.2.1<br>\nChrome: 83.0.4103.122<br>\nNode.js: 12.14.1<br>\nV8: 8.3.110.13-electron.0<br>\nOS: Darwin x64 19.6.0<br>\nI'm working under Mac OS Catalina 10.15.6.</p>",
        "id": 210350307,
        "sender_full_name": "Claus-Peter Becke",
        "timestamp": 1600321507
    },
    {
        "content": "<p>Searching for <code>⊈</code> in mathlib yielded zero results, so I suspect the notation is not defined yet.</p>\n<p><del>edit: actually it might be in core, let me check</del> nvm. if it was then the notation would have worked.</p>",
        "id": 210350383,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1600321638
    },
    {
        "content": "<p>What kind of substitutes could I use? I tried for example \\not ( A \\subseteq B). But that wasn't as easy to handle as I expected to solve the problem</p>",
        "id": 210350622,
        "sender_full_name": "Claus-Peter Becke",
        "timestamp": 1600322001
    },
    {
        "content": "<p>You can define your own notation, for example, something like this should work</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">notation</span> <span class=\"n\">a</span> <span class=\"bp\">`</span> <span class=\"err\">⊈</span> <span class=\"bp\">`</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"n\">b</span><span class=\"o\">:</span><span class=\"mi\">50</span> <span class=\"o\">:=</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"err\">⊆</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 210350778,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1600322197
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"266440\">@Shing Tak Lam</span>: Thank you, I will try that.</p>",
        "id": 210351548,
        "sender_full_name": "Claus-Peter Becke",
        "timestamp": 1600323186
    }
]