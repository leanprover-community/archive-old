[
    {
        "content": "<p>Let's assume I want to show.<br>\n∀ a, b, c, ab = ac → b = c</p>\n<p>With induction on <code>c</code> I would need to show the base case:<br>\n∀ a, b, ab = a*0 → b = 0</p>\n<p>And then show the inductive case, which I think is defined like this (this seems to be what lean is doing):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">d</span><span class=\"o\">,</span>\n  <span class=\"o\">(</span><span class=\"n\">ab</span> <span class=\"bp\">=</span> <span class=\"n\">ad</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n  <span class=\"o\">(</span><span class=\"n\">ab</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">(</span><span class=\"n\">d</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>My question is if you could also define induction such that you would need to show this instead (or would this lead to contradictions):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">∀</span> <span class=\"n\">d</span><span class=\"o\">,</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">ab</span> <span class=\"bp\">=</span> <span class=\"n\">ad</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"o\">)</span> <span class=\"bp\">→</span>\n  <span class=\"o\">(</span><span class=\"bp\">∀</span> <span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">,</span> <span class=\"n\">ab</span> <span class=\"bp\">=</span> <span class=\"n\">a</span><span class=\"o\">(</span><span class=\"n\">d</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">d</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 268201714,
        "sender_full_name": "Johannes C. Mayer",
        "timestamp": 1642360501
    },
    {
        "content": "<p>That's what <code>generalizing</code> is for: <code>induction c generalizing a b</code> does exactly what you want. Alternatively, you can do <code>revert a b</code> and then use induction.</p>",
        "id": 268202303,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1642361431
    },
    {
        "content": "<p>Thanks, I think I get it now. Induction is defined like I thought and generalizing it like you said, actually changes completely the meaning of the induction hypothesis.</p>",
        "id": 268203505,
        "sender_full_name": "Johannes C. Mayer",
        "timestamp": 1642362917
    },
    {
        "content": "<p>Is that strong induction? I think you can do <code>revert a</code>, <code>revert b</code> or use <code>induction ... generalization a b </code></p>",
        "id": 270774526,
        "sender_full_name": "Kwame Porter Robinson",
        "timestamp": 1644009794
    }
]