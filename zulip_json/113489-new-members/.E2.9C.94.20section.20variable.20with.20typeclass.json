[
    {
        "content": "<p>Is there a way to do something like this?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variable</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">has_lt</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 312850797,
        "sender_full_name": "Jon Ezeiza",
        "timestamp": 1669730945
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">has_lt</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n</code></pre></div>\n<p>note the <code>s</code></p>",
        "id": 312851133,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1669731032
    },
    {
        "content": "<p>Oh alright, didn't expect it to be so simple. I guess I wouldn't consider <code>[has_lt α]</code> a variable.<br>\nThanks!</p>",
        "id": 312851321,
        "sender_full_name": "Jon Ezeiza",
        "timestamp": 1669731098
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"568906\">Jon Ezeiza</span> has marked this topic as resolved.</p>",
        "id": 312851331,
        "sender_full_name": "Notification Bot",
        "timestamp": 1669731101
    },
    {
        "content": "<p>Behind the scenes, <code>[has_lt α]</code> is just an unnamed implicit parameter that is supplied by the elaborator by looking for an instance. So generally anything that you can do with <code>{x : α}</code> or <code>(x : α)</code> also works for <code>[x : α]</code>.</p>",
        "id": 312856650,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1669732575
    },
    {
        "content": "<p>When you're using mathlib, you can run the <code>#where</code> command to see what variables are currently defined. <em>Edit:</em> I thought I remembered this would print out the implicit parameter for the instance, but I guess not.</p>",
        "id": 312858542,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1669733121
    },
    {
        "content": "<p>Here's a way to see it:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">has_lt</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>  <span class=\"kd\">end</span>\n</code></pre></div>\n<p>In the begin/end the tactic state is</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u_1</span><span class=\"o\">,</span>\n<span class=\"n\">_inst_1</span> <span class=\"o\">:</span> <span class=\"n\">has_lt</span> <span class=\"n\">α</span><span class=\"o\">,</span>\n<span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">true</span>\n</code></pre></div>",
        "id": 312858960,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1669733239
    }
]