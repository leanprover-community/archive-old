[
    {
        "content": "<p>Lean is not letting me express this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">simp_rat_abs</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≥</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a.nat_abs</span> <span class=\"bp\">=</span> <span class=\"n\">coe</span> <span class=\"n\">ℤ</span> <span class=\"n\">ℕ</span> <span class=\"n\">a</span>\n</code></pre></div>\n<p>I can't find a match in <code>mathlib</code>.</p>",
        "id": 223149305,
        "sender_full_name": "Lars Ericson",
        "timestamp": 1610992404
    },
    {
        "content": "<p><code>lift a to nat using h</code></p>",
        "id": 223149350,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610992435
    },
    {
        "content": "<p>I'm in a goal state</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">⊢</span> <span class=\"mi\">4</span> <span class=\"bp\">=</span> <span class=\"mi\">21</span><span class=\"bp\">.</span><span class=\"n\">nat_abs.gcd</span> <span class=\"mi\">4</span>\n</code></pre></div>\n<p>I guess I need to give a name to 21 and then prove it is greater than 0 before applying the <code>lift</code>?  Note: <code>ring</code> and <code>simp</code> don't do anything to this.  I hoping for <code>false</code>.</p>",
        "id": 223149603,
        "sender_full_name": "Lars Ericson",
        "timestamp": 1610992657
    },
    {
        "content": "<p>In other words I want to rewrite this to</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">⊢</span> <span class=\"mi\">4</span> <span class=\"bp\">=</span> <span class=\"mi\">21</span><span class=\"bp\">.</span><span class=\"n\">gcd</span> <span class=\"mi\">4</span>\n</code></pre></div>\n<p>and then start grinding away on the value of <code>21.gcd 4</code> but I think I need to convert the <code>21</code> to <code>nat</code> before grinding.</p>",
        "id": 223150165,
        "sender_full_name": "Lars Ericson",
        "timestamp": 1610993093
    }
]