[
    {
        "content": "<p>Given this code:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">inductive</span> <span class=\"n\">A</span> <span class=\"o\">(</span><span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span> <span class=\"n\">u</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Sort</span> <span class=\"n\">u</span>\n<span class=\"bp\">|</span> <span class=\"n\">mk</span> <span class=\"o\">:</span> <span class=\"n\">T</span> <span class=\"bp\">â†’</span> <span class=\"n\">A</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">A</span> <span class=\"n\">true</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n  <span class=\"n\">induction</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"n\">refl</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>After <code>induction a</code>, but before <code>refl</code>, the goal turns into <code>_ = _</code>. Shouldn't it be <code>A.mk a = A.mk a</code> instead? (I know induction is redundant here, but this is just an example to show the issue).</p>",
        "id": 261368455,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1636820973
    },
    {
        "content": "<p><code>_</code> means \"this is a proof so it doesn't matter what it is\"</p>",
        "id": 261368510,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636821024
    },
    {
        "content": "<p>If you run <code>generalize_proofs</code> before the <code>refl</code> then lean will assign it a name</p>",
        "id": 261368518,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636821056
    },
    {
        "content": "<p>If you run <code>set_option pp.proofs true</code> before your <code>example</code> then you get the output you expect too</p>",
        "id": 261368588,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636821127
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"456794\">Patrick Johnson</span> has marked this topic as resolved.</p>",
        "id": 261370405,
        "sender_full_name": "Notification Bot",
        "timestamp": 1636823588
    }
]