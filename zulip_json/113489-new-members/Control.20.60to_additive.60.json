[
    {
        "content": "<p>How can I tell <code>to_additive</code> to ignore some definitions?</p>",
        "id": 200780976,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592075976
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">group_theory</span><span class=\"bp\">.</span><span class=\"n\">quotient_group</span>\n<span class=\"kn\">import</span> <span class=\"n\">set_theory</span><span class=\"bp\">.</span><span class=\"n\">ordinal</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">quotient_group</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">cardinal</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">is_subgroup</span> <span class=\"n\">s</span><span class=\"o\">]</span>\n\n<span class=\"bp\">@</span><span class=\"o\">[</span><span class=\"n\">to_additive</span><span class=\"o\">]</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">mk_group_eq_mk_quotient_mul_mk_subgroup</span> <span class=\"o\">:</span>\n  <span class=\"n\">mk</span> <span class=\"n\">α</span> <span class=\"bp\">=</span> <span class=\"n\">mk</span> <span class=\"o\">(</span><span class=\"n\">quotient</span> <span class=\"n\">s</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">mk</span> <span class=\"n\">s</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_def</span><span class=\"o\">,</span> <span class=\"n\">cardinal</span><span class=\"bp\">.</span><span class=\"n\">eq</span><span class=\"o\">],</span>\n  <span class=\"n\">exact</span> <span class=\"bp\">⟨</span><span class=\"n\">is_subgroup</span><span class=\"bp\">.</span><span class=\"n\">group_equiv_quotient_times_subgroup</span> <span class=\"bp\">_⟩</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 200780987,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592075991
    },
    {
        "content": "<p>What should it ignore?</p>",
        "id": 200781038,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592076022
    },
    {
        "content": "<p>What's the problem?</p>",
        "id": 200781042,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592076025
    },
    {
        "content": "<p>The <code>*</code>?</p>",
        "id": 200781043,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592076027
    },
    {
        "content": "<p>I am pretty sure that the problem in the example above is that <code>to_additive</code> changes <code>*</code> to <code>+</code>.</p>",
        "id": 200781045,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592076035
    },
    {
        "content": "<p>oh yeah :-)</p>",
        "id": 200781054,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592076061
    },
    {
        "content": "<p>The lemma is true for both <code>group</code> and <code>add_group</code>, but the cardinals should always be multiplied!</p>",
        "id": 200781056,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592076061
    },
    {
        "content": "<p>I guess that in this case you will have to restate the lemma, but you can prove it using <code>multiplicate A</code> for the additive group <code>A</code>.</p>",
        "id": 200781068,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592076085
    },
    {
        "content": "<p>So the proof of the additive version will be a one-liner, reusing the multiplicative one.</p>",
        "id": 200781077,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592076101
    },
    {
        "content": "<p>Hopefully that works.</p>",
        "id": 200781082,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592076108
    },
    {
        "content": "<p>Also, I could be that its changing <code>mul_def</code> to <code>add_def</code>, maybe.</p>",
        "id": 200781085,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592076113
    },
    {
        "content": "<p>Probably</p>",
        "id": 200781127,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592076128
    },
    {
        "content": "<p>The error message is quite weird, it complains about <code>@has_add.add cardinal cardinal.has_mul</code>.</p>",
        "id": 200781134,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592076147
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> could you give a mwe for <code>multiplicate</code>, I don't seem to be able to find it on the docs.</p>",
        "id": 200781313,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592076437
    },
    {
        "content": "<p><code>multiplicative</code></p>",
        "id": 200781318,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592076449
    },
    {
        "content": "<p><code>git grep multiplicative</code> will give you a lot of examples</p>",
        "id": 200781367,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592076488
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"298376\">@Pedro Minicz</span> For example: <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/algebra/big_operators.lean#L533\">https://github.com/leanprover-community/mathlib/blob/master/src/algebra/big_operators.lean#L533</a></p>",
        "id": 200781395,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592076569
    },
    {
        "content": "<p>Pedro, it's nice to move away from the thread whose name shall not be written, but actually you could take the next step. This discussion could be in the general stream. This is clearly not a new member question.</p>",
        "id": 200782576,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592077595
    },
    {
        "content": "<p>Okay, can I move this thread?</p>",
        "id": 200783013,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592078286
    },
    {
        "content": "<p>Well, I will make another thread. If there is a way to move them please teach me and I'll keep it in mind.</p>",
        "id": 200783027,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1592078358
    },
    {
        "content": "<p>You got a promotion :-) I think that if you started the topic then you might be able to change it. There are people like Yury who wrote <code>to_additive</code> and who might not read the new members stream at all.</p>",
        "id": 200783082,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592078408
    },
    {
        "content": "<p>Only admins can move a topic to another stream.</p>",
        "id": 200783167,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592078550
    }
]