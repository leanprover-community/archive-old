[
    {
        "content": "<p>In this example:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">order.filter.basic</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">filter</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"n\">T</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">principal</span> <span class=\"n\">S</span> <span class=\"bp\">≤</span> <span class=\"n\">principal</span> <span class=\"n\">T</span> <span class=\"bp\">↔</span> <span class=\"n\">S</span> <span class=\"bp\">⊆</span> <span class=\"n\">T</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>I would like to look up the definition of <code>≤</code> for filters. However, when I <code>Ctrl</code>+Click on it in VScode, I get referred to the general definition in the class <code>has_le</code> at <code>core.lean</code>. Is there a quick way to look up instance specific definitions like this?</p>",
        "id": 230661238,
        "sender_full_name": "Justus Springer",
        "timestamp": 1615973489
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">apply_instance</span> <span class=\"o\">:</span> <span class=\"n\">has_le</span> <span class=\"o\">(</span><span class=\"n\">filter</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"c1\">-- apparently `has_le` comes from `preorder`</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">apply_instance</span> <span class=\"o\">:</span> <span class=\"n\">preorder</span> <span class=\"o\">(</span><span class=\"n\">filter</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"c1\">-- see `partial_order`</span>\n<span class=\"k\">#check</span> <span class=\"o\">(</span><span class=\"kd\">by</span> <span class=\"n\">apply_instance</span> <span class=\"o\">:</span> <span class=\"n\">partial_order</span> <span class=\"o\">(</span><span class=\"n\">filter</span> <span class=\"n\">α</span><span class=\"o\">))</span> <span class=\"c1\">-- found it: `filter.partial_order`</span>\n<span class=\"k\">#check</span> <span class=\"n\">filter.partial_order</span> <span class=\"c1\">-- `Ctrl`-click here</span>\n</code></pre></div>",
        "id": 230661929,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615973765
    },
    {
        "content": "<p>I agree that it would be cool if there were a tactic that took care of the intermediate step.</p>",
        "id": 230661971,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615973786
    },
    {
        "content": "<p>thanks, that's a cool trick!</p>",
        "id": 230662226,
        "sender_full_name": "Justus Springer",
        "timestamp": 1615973903
    },
    {
        "content": "<p>I always use the infoview for this now:<br>\n<a href=\"/user_uploads/3121/z6FNy01dRvJGNxyMXU5DBO46/infoview.png\">infoview.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/z6FNy01dRvJGNxyMXU5DBO46/infoview.png\" title=\"infoview.png\"><img src=\"/user_uploads/3121/z6FNy01dRvJGNxyMXU5DBO46/infoview.png\"></a></div>",
        "id": 230666158,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1615975878
    },
    {
        "content": "<p>ooh, right, that makes a lot of sense (-;</p>",
        "id": 230666179,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1615975897
    },
    {
        "content": "<p>You just trace back to where something is actually defined and then jump to definition for the last thing.</p>",
        "id": 230666227,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1615975922
    }
]