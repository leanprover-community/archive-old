[
    {
        "content": "<p>I want to build my project so that, from the output of the command, I will clearly see whether the build succeeded or failed, not showing <code>sorry</code> warnings. I want to ignore all <code>check</code> and <code>print</code> too. When the output is too long, I sometimes overlook an error. I tried <code>lean --make -q src</code> but it didn't omit the stuff I wanted to ignore.</p>",
        "id": 288607179,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1657066370
    },
    {
        "content": "<p>You could use the JSON output option to filter errors (there in lean 3 for sure, no idea about 4). I'm on mobile now so can't link to the thread but someone asked before and we came up with: <code>lean --json src/s.lean | jq 'select(.severity == \"error\") | [{\"name\":.file_name,\"error\":.text, \"line\":.pos_line}]'</code> using the tool jq</p>",
        "id": 288629359,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1657089615
    },
    {
        "content": "<p>Doesn't the exit code tell you that?</p>",
        "id": 288639703,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657096777
    },
    {
        "content": "<p>If it does then LTE is finished (and it's not):</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">buzzard</span><span class=\"bp\">@</span><span class=\"n\">bob</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">active</span><span class=\"bp\">-</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">liquid</span><span class=\"bp\">$</span> <span class=\"n\">lean</span> <span class=\"c1\">--make src</span>\n<span class=\"n\">buzzard</span><span class=\"bp\">@</span><span class=\"n\">bob</span><span class=\"o\">:</span><span class=\"bp\">~/</span><span class=\"n\">active</span><span class=\"bp\">-</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">projects</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">liquid</span><span class=\"bp\">$</span> <span class=\"n\">echo</span> <span class=\"bp\">$?</span>\n<span class=\"mi\">0</span>\n</code></pre></div>\n<p>There are for sure sorries in that repo, and I saw the warnings when I compiled the first time, but when I compile the second time it ignores them.</p>",
        "id": 288642460,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1657098540
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"417654\">@Martin Dvořák</span> said they wanted to ignore \"sorry warnings\"</p>",
        "id": 288670979,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657114643
    },
    {
        "content": "<p>I think LTE considers \"sorry\" more than a warning</p>",
        "id": 288670994,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1657114650
    }
]