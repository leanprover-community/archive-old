[
    {
        "content": "<p>Is there any docs about how to make custom simp-sets? If not, I'll trade an explanation for writing them up :b</p>",
        "id": 235406545,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1618949163
    },
    {
        "content": "<p>Here's an example: <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/algebra/group_with_zero/basic.lean#L43\">https://github.com/leanprover-community/mathlib/blob/master/src/algebra/group_with_zero/basic.lean#L43</a></p>",
        "id": 235406938,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1618949340
    },
    {
        "content": "<p>There is some partial documentation at <a href=\"https://leanprover-community.github.io/mathlib_docs/commands.html#mk_simp_attribute\">command#mk_simp_attribute</a>.</p>",
        "id": 235406945,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1618949345
    },
    {
        "content": "<p>It'd be good to add at least a mention of this command to the simp tutorial page: <a href=\"https://leanprover-community.github.io/extras/simp.html\">https://leanprover-community.github.io/extras/simp.html</a></p>",
        "id": 235407020,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1618949387
    },
    {
        "content": "<p>brill, thanks guys - will get something written up soon!</p>",
        "id": 235408854,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1618950259
    },
    {
        "content": "<p>whilst I'm at it, does anyone know what <code>simp {contextual := tt}</code> does? it seems to add more simp lemmas in some way, but I'm not sure how</p>",
        "id": 235522301,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619016328
    },
    {
        "content": "<p>may as well document that too as it pops up on mathlib from time to time</p>",
        "id": 235522333,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619016343
    },
    {
        "content": "<p>also, can I have branch perms for <code>leanprover-community.github.io</code>?</p>",
        "id": 235522540,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619016418
    },
    {
        "content": "<p>You can just make an ordinary PR to that repo.</p>",
        "id": 235522641,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1619016447
    },
    {
        "content": "<p>(from a fork on GitHub)</p>",
        "id": 235522689,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1619016473
    },
    {
        "content": "<p>oh dope, that's easier</p>",
        "id": 235522939,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619016564
    },
    {
        "content": "<p>Regarding an explanation of <code>simp</code> options, maybe <span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> can be persuaded to help out (<a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/156#discussion_r551038586\">as he volunteered to a while ago</a>... <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> ).</p>",
        "id": 235522947,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1619016568
    },
    {
        "content": "<p>PR done!</p>",
        "id": 235530098,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1619018455
    },
    {
        "content": "<p><code>simp {contextual := tt}</code> will, when rewriting in a forall or lambda, add the variables in the binder to the simp set. So for example <code>x = 0 -&gt; x + x = 0</code> will be simplified to <code>x = 0 -&gt; 0 + 0 = 0</code> (and eventually proved) even though <code>x = 0</code> was not passed as a simp lemma</p>",
        "id": 235615807,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1619063212
    }
]