[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"n\">h</span><span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"n\">x</span> <span class=\"n\">y</span> <span class=\"n\">z</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">x</span><span class=\"bp\">+</span><span class=\"n\">y</span><span class=\"bp\">=</span><span class=\"n\">z</span><span class=\"o\">,</span>\n<span class=\"n\">exists.elim</span> <span class=\"n\">h</span> <span class=\"o\">(</span> <span class=\"bp\">...</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Is there a way to discharge all the variables <code>x y z</code> at once instead of using three nested <code>exists.elim</code>'s?</p>",
        "id": 269616338,
        "sender_full_name": "Bjørn Kjos-Hanssen",
        "timestamp": 1643307979
    },
    {
        "content": "<p>In tactic mode you can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.rcases\">docs#tactic.rcases</a></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">rcases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"o\">⟨</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">z</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">⟩</span>\n</code></pre></div>",
        "id": 269617019,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1643308279
    }
]