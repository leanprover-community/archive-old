[
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">theorem</span> <span class=\"n\">testit</span> <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">s</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n    <span class=\"o\">(</span><span class=\"n\">f</span><span class=\"o\">,</span><span class=\"n\">s</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">fst</span><span class=\"bp\">=</span><span class=\"n\">f</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n   <span class=\"n\">do</span> <span class=\"o\">{</span>\n       <span class=\"n\">t</span> <span class=\"err\">←</span> <span class=\"n\">target</span><span class=\"o\">,</span>\n       <span class=\"n\">trace</span> <span class=\"n\">t</span><span class=\"bp\">.</span><span class=\"n\">to_raw_fmt</span><span class=\"o\">,</span>\n       <span class=\"n\">suffices</span> <span class=\"n\">xx</span><span class=\"o\">:(</span><span class=\"mi\">1</span><span class=\"bp\">==</span><span class=\"mi\">2</span><span class=\"o\">),</span><span class=\"n\">admit</span>\n   <span class=\"o\">},</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>Can someone correct the syntax of the above.  I would like to use \"suffices\" rather than \"change\" for a tactic.  I get the following error:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">test</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">13</span><span class=\"o\">:</span><span class=\"mi\">26</span><span class=\"o\">:</span> <span class=\"n\">error</span>\n<span class=\"n\">invalid</span> <span class=\"n\">expression</span><span class=\"o\">,</span> <span class=\"err\">&#39;</span><span class=\"k\">by</span><span class=\"err\">&#39;</span><span class=\"o\">,</span> <span class=\"err\">&#39;</span><span class=\"k\">begin</span><span class=\"err\">&#39;</span><span class=\"o\">,</span> <span class=\"err\">&#39;</span><span class=\"o\">{</span><span class=\"err\">&#39;</span><span class=\"o\">,</span> <span class=\"n\">or</span> <span class=\"err\">&#39;</span><span class=\"k\">from</span><span class=\"err\">&#39;</span> <span class=\"n\">expected</span>\n<span class=\"n\">test</span><span class=\"bp\">.</span><span class=\"n\">lean</span><span class=\"o\">:</span><span class=\"mi\">13</span><span class=\"o\">:</span><span class=\"mi\">26</span><span class=\"o\">:</span> <span class=\"n\">error</span>\n<span class=\"n\">invalid</span> <span class=\"n\">suffices</span><span class=\"bp\">-</span><span class=\"n\">expression</span><span class=\"o\">,</span> <span class=\"n\">term</span>\n  <span class=\"n\">admit</span>\n<span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">tactic</span> <span class=\"n\">unit</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"mi\">1</span> <span class=\"bp\">==</span> <span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span>\n</pre></div>",
        "id": 130509641,
        "sender_full_name": "Ken Roe",
        "timestamp": 1532841669
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121304\">@Ken Roe</span> what are your imports?</p>",
        "id": 130510012,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1532842272
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">open</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">open</span> <span class=\"n\">monad</span>\n<span class=\"kn\">open</span> <span class=\"n\">expr</span>\n<span class=\"kn\">open</span> <span class=\"n\">smt_tactic</span><span class=\"bp\">.</span>\n</pre></div>",
        "id": 130510199,
        "sender_full_name": "Ken Roe",
        "timestamp": 1532842569
    },
    {
        "content": "<p>...</p>",
        "id": 130510202,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1532842581
    },
    {
        "content": "<p>those are not imports, they are open statements</p>",
        "id": 130514795,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1532850886
    }
]