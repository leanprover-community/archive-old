[
    {
        "content": "<p>Hi,<br>\nCan't figure out how to get <code>p</code> cancelled in the proof of the left side of the iff:</p>\n<div class=\"codehilite\"><pre><span></span><code> <span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span><span class=\"n\">q</span> <span class=\"o\">:=</span>\n    <span class=\"n\">iff</span><span class=\"bp\">.</span><span class=\"n\">intro</span>\n      <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">),</span>\n        <span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">hp</span> <span class=\"o\">:</span> <span class=\"n\">p</span><span class=\"o\">),</span>\n        <span class=\"k\">have</span> <span class=\"n\">hpq</span> <span class=\"o\">:</span> <span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">hp</span><span class=\"o\">,</span>\n        <span class=\"k\">show</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span> <span class=\"n\">q</span><span class=\"o\">,</span> <span class=\"k\">from</span> <span class=\"n\">false</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"n\">hpq</span><span class=\"o\">))</span>\n      <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"bp\">⟨</span><span class=\"n\">hnp</span><span class=\"o\">,</span> <span class=\"n\">hnq</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n        <span class=\"bp\">λ</span> <span class=\"n\">hpq</span><span class=\"o\">,</span>\n          <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"n\">hpq</span>\n            <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">hp</span><span class=\"o\">,</span> <span class=\"n\">hnp</span> <span class=\"n\">hp</span><span class=\"o\">)</span>\n            <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">hq</span><span class=\"o\">,</span> <span class=\"n\">hnq</span> <span class=\"n\">hq</span><span class=\"o\">))</span>\n</code></pre></div>\n\n\n<p>Lean complains that the left side has type<br>\n  ¬(p ∨ q) → p → ¬p ∧ ¬q<br>\nbut is expected to have type<br>\n  ¬(p ∨ q) → ¬p ∧ ¬q<br>\nwhich makes sense.<br>\nCould someone give me a hint?</p>",
        "id": 197415978,
        "sender_full_name": "Noob",
        "timestamp": 1589378190
    },
    {
        "content": "<p>write down a proof in maths first</p>",
        "id": 197416113,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1589378262
    },
    {
        "content": "<p>Note that you can solve these by (almost mindlessly) chasing the type errors at underscores. Here are the first few steps which should get you back on the right track:</p>\n<div class=\"codehilite\"><pre><span></span><code> <span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span><span class=\"n\">q</span> <span class=\"o\">:=</span>\n    <span class=\"n\">iff</span><span class=\"bp\">.</span><span class=\"n\">intro</span>\n      <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">),</span>\n        <span class=\"bp\">_</span>\n      <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"bp\">⟨</span><span class=\"n\">hnp</span><span class=\"o\">,</span> <span class=\"n\">hnq</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n        <span class=\"bp\">λ</span> <span class=\"n\">hpq</span><span class=\"o\">,</span>\n          <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"n\">hpq</span>\n            <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">hp</span><span class=\"o\">,</span> <span class=\"n\">hnp</span> <span class=\"n\">hp</span><span class=\"o\">)</span>\n            <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">hq</span><span class=\"o\">,</span> <span class=\"n\">hnq</span> <span class=\"n\">hq</span><span class=\"o\">))</span>\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code> <span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span><span class=\"n\">q</span> <span class=\"o\">:=</span>\n    <span class=\"n\">iff</span><span class=\"bp\">.</span><span class=\"n\">intro</span>\n      <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">),</span>\n        <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">intro</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span>\n      <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"bp\">⟨</span><span class=\"n\">hnp</span><span class=\"o\">,</span> <span class=\"n\">hnq</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n        <span class=\"bp\">λ</span> <span class=\"n\">hpq</span><span class=\"o\">,</span>\n          <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"n\">hpq</span>\n            <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">hp</span><span class=\"o\">,</span> <span class=\"n\">hnp</span> <span class=\"n\">hp</span><span class=\"o\">)</span>\n            <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">hq</span><span class=\"o\">,</span> <span class=\"n\">hnq</span> <span class=\"n\">hq</span><span class=\"o\">))</span>\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code> <span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">)</span> <span class=\"bp\">↔</span> <span class=\"bp\">¬</span><span class=\"n\">p</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span><span class=\"n\">q</span> <span class=\"o\">:=</span>\n    <span class=\"n\">iff</span><span class=\"bp\">.</span><span class=\"n\">intro</span>\n      <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"o\">(</span><span class=\"n\">p</span> <span class=\"bp\">∨</span> <span class=\"n\">q</span><span class=\"o\">),</span>\n        <span class=\"n\">and</span><span class=\"bp\">.</span><span class=\"n\">intro</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">hp</span><span class=\"o\">,</span> <span class=\"bp\">_</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">hq</span><span class=\"o\">,</span> <span class=\"bp\">_</span><span class=\"o\">))</span>\n      <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"bp\">⟨</span><span class=\"n\">hnp</span><span class=\"o\">,</span> <span class=\"n\">hnq</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n        <span class=\"bp\">λ</span> <span class=\"n\">hpq</span><span class=\"o\">,</span>\n          <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">elim</span> <span class=\"n\">hpq</span>\n            <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">hp</span><span class=\"o\">,</span> <span class=\"n\">hnp</span> <span class=\"n\">hp</span><span class=\"o\">)</span>\n            <span class=\"o\">(</span><span class=\"bp\">λ</span> <span class=\"n\">hq</span><span class=\"o\">,</span> <span class=\"n\">hnq</span> <span class=\"n\">hq</span><span class=\"o\">))</span>\n</code></pre></div>\n\n\n<p>etc.</p>",
        "id": 197417284,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1589378756
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span>, this is extremely helpful and exactly the kind of advice I was looking for. Thanks a lot!</p>",
        "id": 197419553,
        "sender_full_name": "Noob",
        "timestamp": 1589379719
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"285607\">@Noob</span> <a href=\"https://youtu.be/POHVMMG7pqE?t=268\">this video</a> might help. This is what Bryan is referring to when he talks about chasing type errors at underscores. The link points to the start of the term mode proof; the first half of the video is a tactic mode proof.</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"POHVMMG7pqE\" href=\"https://youtu.be/POHVMMG7pqE?t=268\"><img src=\"https://i.ytimg.com/vi/POHVMMG7pqE/default.jpg\"></a></div>",
        "id": 197419767,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1589379801
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, the video is really helpful. The only feature I'm not familiar with (apart from how to use tactics) is the <code>$</code> operator, but you explain it along the way. I think the term mode is not more intimidating (you need to know less to use it) if you use formatting similar to what you used in the tactics mode.</p>",
        "id": 197424464,
        "sender_full_name": "Noob",
        "timestamp": 1589381824
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, I think having type annotations on hypotheses might make the proof easier to follow for beginners, but maybe it's just my bias as a programmer.</p>",
        "id": 197428180,
        "sender_full_name": "Noob",
        "timestamp": 1589383299
    }
]