[
    {
        "content": "<p>Is there any way to use match expression in a recursive way? For example in top level equation compiler, you can recurse by use the function name, however, with match expression you don't know the function name.</p>",
        "id": 220867454,
        "sender_full_name": "Rui Liu",
        "timestamp": 1608813577
    },
    {
        "content": "<p>It seems to be possible, but not very convenient to use. The <code>match</code> generates a <code>_match</code> hypothesis that allows for a recursive call, but this hypothesis seems to only be parsed in tactic mode:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">def</span> <span class=\"n\">foo</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"o\">:=</span>\n<span class=\"k\">match</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"k\">with</span>\n<span class=\"bp\">|</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">m</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">_match</span> <span class=\"n\">m</span>\n<span class=\"kd\">end</span>\n<span class=\"k\">#eval</span> <span class=\"n\">foo</span> <span class=\"mi\">3</span> <span class=\"c1\">-- 12</span>\n</code></pre></div>\n<p>If you remove the <code>by exact</code> you get an error <code>unknown identifier '_match'</code>. I guess this rarely comes up, since if you're defining a definition, you usually want to separate out the match statement to a different definition that you can prove properties about.</p>",
        "id": 220888305,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1608840246
    },
    {
        "content": "<p>Thanks! It's indeed a bit inconvenient...</p>",
        "id": 220895471,
        "sender_full_name": "Rui Liu",
        "timestamp": 1608851680
    }
]