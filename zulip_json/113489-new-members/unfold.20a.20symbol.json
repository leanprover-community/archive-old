[
    {
        "content": "<p>How do you unfold the definition of a symbol like <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≤</mo></mrow><annotation encoding=\"application/x-tex\">\\leq</annotation></semantics></math></span><span aria-hidden=\"true\" class=\"katex-html\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mrel\">≤</span></span></span></span>?</p>",
        "id": 198817834,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1590525139
    },
    {
        "content": "<p><code>dsimp [has_le.le]</code></p>",
        "id": 198817919,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590525197
    },
    {
        "content": "<p>Or <code>dsimp [(≤)]</code></p>",
        "id": 198817946,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590525207
    },
    {
        "content": "<p>Is there any reason that  <code>unfold</code> doesn't work for this?</p>",
        "id": 198817963,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1590525226
    },
    {
        "content": "<p>I don't know...</p>",
        "id": 198818033,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590525252
    },
    {
        "content": "<p>Could you show in which situation <code>unfold has_le.le</code>isn't working for you? It seems to work fine for me (in a weird way, unfolding <code>a ≤ b</code> to the unintuitive <code>a.le b</code>).</p>",
        "id": 198818300,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1590525411
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"298376\">@Pedro Minicz</span> that works, but I meant why I can't do something like <code>unfold \\leq</code> or <code>unfold (\\leq)</code></p>",
        "id": 198818838,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1590525718
    },
    {
        "content": "<p>I see, being able to <code>unfold (\\le)</code> would be nice.</p>",
        "id": 198819034,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1590525816
    },
    {
        "content": "<p>This is well known to be inconvenient. But also well-known to be a bad idea in the first place (although it's sometimes tempting for debuging purposes).</p>",
        "id": 198819479,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590526076
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> Why is it a bad idea? It seems convenient to me to be able to unfold things if you forget how exactly they are defined (and then to delete the unfold once you see). Is that bad?</p>",
        "id": 198820017,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1590526331
    },
    {
        "content": "<p>Yes, this is what I call debugging</p>",
        "id": 198820636,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590526658
    },
    {
        "content": "<p>Oh, I see. I think I normally only use debugging to mean when I've already written some code and there are problems, so I got confused</p>",
        "id": 198820757,
        "sender_full_name": "Patrick Lutz",
        "timestamp": 1590526708
    }
]