[
    {
        "content": "<p>I have a definition of class meet_semilattice (A : Type u) (R : A -&gt; A -&gt; Prop)  (meet : A -&gt; A -&gt; A) extends partial_order A R  and <br>\nclass join_semilattice (A : Type u) (R : A -&gt; A -&gt; Prop)   (join : A -&gt; A -&gt; A) extends partial_order A R, and Now I am trying to extend these two classes to <br>\nclass lattice (A : Type u) (R : A -&gt; A -&gt; Prop)  (meet : A -&gt; A -&gt; A) (join : A -&gt; A -&gt; A) extends <br>\n(meet_semilattice A R meet)(join_semilattice A R join)  by following  <a href=\"https://github.com/leanprover/lean/blob/master/library/init/algebra/group.lean#L33\" target=\"_blank\" title=\"https://github.com/leanprover/lean/blob/master/library/init/algebra/group.lean#L33\">https://github.com/leanprover/lean/blob/master/library/init/algebra/group.lean#L33</a></p>",
        "id": 176816799,
        "sender_full_name": "Mukesh Tiwari",
        "timestamp": 1569660148
    },
    {
        "content": "<p>But I am getting this error \"Invalid 'structure' header, field 'to_partial_order' from 'Ordering.join_semilattice' has already been declared</p>",
        "id": 176816877,
        "sender_full_name": "Mukesh Tiwari",
        "timestamp": 1569660291
    },
    {
        "content": "<p><a href=\"https://gist.github.com/mukeshtiwari/6d40904d33911e46d342d194c1771a5b\" target=\"_blank\" title=\"https://gist.github.com/mukeshtiwari/6d40904d33911e46d342d194c1771a5b\">https://gist.github.com/mukeshtiwari/6d40904d33911e46d342d194c1771a5b</a></p>",
        "id": 176816959,
        "sender_full_name": "Mukesh Tiwari",
        "timestamp": 1569660436
    },
    {
        "content": "<p>You could have a look at how all this is done in the standard library: <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/order/lattice.lean\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/order/lattice.lean\">https://github.com/leanprover-community/mathlib/blob/master/src/order/lattice.lean</a></p>",
        "id": 176817117,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1569660720
    },
    {
        "content": "<p>If you want something closer to what you try, you can change <code>meet_semilattice</code>, <code>join_semilattice</code> and <code>lattice</code> to take <code>[partial_order A R]</code> as a parameter. Of course you'll also need to find other names for <code>H‚ÇÅ</code> etc in order to avoid name clashes.</p>",
        "id": 176817324,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1569661051
    },
    {
        "content": "<p>But the setup in mathlib will probably be much more convenient.</p>",
        "id": 176817387,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1569661095
    },
    {
        "content": "<p>Thanks for the help Patrick.</p>",
        "id": 176817407,
        "sender_full_name": "Mukesh Tiwari",
        "timestamp": 1569661178
    },
    {
        "content": "<p>You might also want to use the \"old structure command\" -- (\"old\" as in \"the way it used to be done by default\", rather than \"deprecated\"): see <a href=\"https://github.com/leanprover/lean/wiki/Refactoring-structures\" target=\"_blank\" title=\"https://github.com/leanprover/lean/wiki/Refactoring-structures\">https://github.com/leanprover/lean/wiki/Refactoring-structures</a> . In that document, \"the current approach\" is what is now called the old approach. For lattices this might be what you want. <code>set_option old_structure_cmd true</code></p>",
        "id": 176823228,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1569671510
    },
    {
        "content": "<p>Thanks Kevin.</p>",
        "id": 176824757,
        "sender_full_name": "Mukesh Tiwari",
        "timestamp": 1569674440
    }
]