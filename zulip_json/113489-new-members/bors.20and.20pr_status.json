[
    {
        "content": "<p>In previous projects that used bors (or mergify) I was used to be able to tell bors to merge, and it would wait for the PR CI to turn green. It seems that this is not the case here, and contributors are expected to manually wait and check for CI to turn green before entering <code>bors r+</code>, which seems like an odd use of our attention…<br>\nBors does support waiting for a PR to turn green, using the <a href=\"https://bors.tech/documentation/\"><code>pr_status</code></a> configuration option, so I wonder if this is intentionally not used here (and why? maybe to merge fast when it’s a trivial change?), or whether it’s maybe simply a newer feature that wasn’t considered yet?</p>",
        "id": 268977363,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1642883695
    },
    {
        "content": "<p>(I found <a href=\"https://github.com/leanprover-community/mathlib/blob/master/docs/contribute/bors.md\">https://github.com/leanprover-community/mathlib/blob/master/docs/contribute/bors.md</a> which explains why bors was chosen, but it doesn’t answer this question. And as a NB, mergify has improved a lot since then, including the ability for merge trains with speculative tests, taking commit messages from PR descriptions, tracking PR dependencies – not suggesting to switch back, but pointing out that it may have become a viable option again, in case bors falls out of favor)</p>",
        "id": 268977517,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1642883917
    },
    {
        "content": "<p>Oh, I didn't realize that option meant that we could configure bors to wait for certain checks to pass on the final commit! If you're familiar with this setting, do you mind submitting a PR to help us make use of it?</p>",
        "id": 268977675,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1642884138
    },
    {
        "content": "<p>Not familiar, but it seems straight forward enough. Will prepare a PR.</p>",
        "id": 268977698,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1642884213
    },
    {
        "content": "<p>(Hmm, it may be that with mergify you even get “properly merged PRs” despite using squash merge + merge trains… that might actually be worth evaluating at some point if this “Closed by bors” business becomes too annoying.)</p>",
        "id": 268977757,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1642884269
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/pull/11609\">https://github.com/leanprover-community/mathlib/pull/11609</a>. But probably Bryan should double-check that this is what you want :-)</p>",
        "id": 268977837,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1642884394
    },
    {
        "content": "<p>Wait, I am talking to Bryan. I should pay attention to Zulip the same way I do to <code>git log</code> :-D</p>",
        "id": 268977857,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1642884463
    },
    {
        "content": "<p>Wow, bors even posts a message telling us that it's waiting for the checks to pass! This is great! </p>\n<p>As a follow up we might want to see if we want to change the way the \"awaiting-CI\" label works (as right now, the label blocks <code>bors r+</code> and is removed automatically at the end of CI), but I think this is good for now.</p>\n<p>cc: <span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span></p>",
        "id": 268978109,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1642884837
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"470149\">@Joachim Breitner</span> Wow! This is great. Last time I checked, bors didn't seem to have this feature.</p>",
        "id": 268978238,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1642885026
    },
    {
        "content": "<p>I think the setting has been there since before we started using bors, but I for one didn't understand the description in their docs until now.</p>",
        "id": 268978508,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1642885324
    },
    {
        "content": "<p><code>awaiting-CI</code> seems to have a bug:</p>\n<p><a href=\"/user_uploads/3121/LRhql2ApQ3q5jcOEGIoLL-x4/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/LRhql2ApQ3q5jcOEGIoLL-x4/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/LRhql2ApQ3q5jcOEGIoLL-x4/image.png\"></a></div><p>The first commit is a PR too, so I think it's related</p>",
        "id": 287434218,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1656162260
    },
    {
        "content": "<p>I'm out of time to investigate further, but here are some notes for my future self, or anyone who wants to take a look. </p>\n<p>The issue is the following: </p>\n<ul>\n<li>the first commit of <a href=\"https://github.com/leanprover-community/mathlib/pull/14947\">#14947</a> is the same as the only commit of <a href=\"https://github.com/leanprover-community/mathlib/pull/14946\">#14946</a></li>\n<li><code>awaiting-CI</code> was added to both</li>\n<li>the build of <a href=\"https://github.com/leanprover-community/mathlib/pull/14946\">#14946</a> finished (but not <a href=\"https://github.com/leanprover-community/mathlib/pull/14947\">#14947</a>)</li>\n<li><code>awaiting-CI</code> was removed from <a href=\"https://github.com/leanprover-community/mathlib/pull/14947\">#14947</a> instead of <a href=\"https://github.com/leanprover-community/mathlib/pull/14946\">#14946</a></li>\n</ul>\n<p>Looking at the CI script, it looks like <a href=\"https://github.com/leanprover-community/mathlib/blob/07c83c81c0016c1ac08e8c9c3f1260c2f4c6ac7f/.github/workflows/build.yml#L248\">this is a known issue with the way we're getting the PR number</a>.</p>",
        "id": 287435386,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1656164153
    }
]