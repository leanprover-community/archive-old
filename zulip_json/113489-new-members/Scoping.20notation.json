[
    {
        "content": "<p>Chapter 7 mentions how to implement <code>list</code>. Instead of reusing the identifier <code>list</code>, I used <code>List</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">namespace</span> <span class=\"n\">hidden_72</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"kn\">inductive</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">Nil</span> <span class=\"o\">{}</span> <span class=\"o\">:</span> <span class=\"n\">List</span>\n<span class=\"bp\">|</span> <span class=\"n\">Cons</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">List</span> <span class=\"bp\">→</span> <span class=\"n\">List</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">List</span>\n\n<span class=\"kn\">notation</span> <span class=\"bp\">`</span><span class=\"o\">[</span><span class=\"bp\">`</span> <span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">foldr</span> <span class=\"bp\">`</span><span class=\"o\">,</span><span class=\"bp\">`</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"n\">t</span><span class=\"o\">,</span> <span class=\"n\">Cons</span> <span class=\"n\">h</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"n\">Nil</span><span class=\"o\">)</span> <span class=\"bp\">`</span><span class=\"o\">]</span><span class=\"bp\">`</span> <span class=\"o\">:=</span> <span class=\"n\">l</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">5</span><span class=\"o\">]</span> <span class=\"c1\">-- [1,2,3,4,5] : List ℕ</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">hidden_72</span>\n</pre></div>\n\n\n<p>In a later namespace, I was surprised to see that the <code>[ ]</code> notation carried over:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">namespace</span> <span class=\"n\">hidden_73</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"o\">[</span><span class=\"mi\">10</span><span class=\"o\">,</span> <span class=\"mi\">20</span><span class=\"o\">,</span> <span class=\"mi\">30</span><span class=\"o\">]</span> <span class=\"c1\">-- [10,20,30] : hidden_72.List ℕ</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">hidden_73</span>\n</pre></div>\n\n\n<p>Is there a way to limit the scope of the custom <code>[ ]</code> notation on my <code>List</code> to just namespace <code>hidden_72</code>?</p>\n<p>I.e. in any later separate namespace after <code>hidden_72</code>, I'd like for the <code>[ ]</code> notation to build a <code>list</code>, not a <code>List</code>.</p>\n<p>Thanks!</p>",
        "id": 182925187,
        "sender_full_name": "Eduardo Cavazos",
        "timestamp": 1575868483
    },
    {
        "content": "<p>You can look into <a href=\"https://github.com/leanprover-community/mathlib/blob/master/docs/tactics.md#localized-notation\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/docs/tactics.md#localized-notation\">localized notation</a> in mathlib</p>",
        "id": 182925265,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1575868626
    },
    {
        "content": "<blockquote>\n<p>You can look into <a href=\"https://github.com/leanprover-community/mathlib/blob/master/docs/tactics.md#localized-notation\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/docs/tactics.md#localized-notation\">localized notation</a> in mathlib</p>\n</blockquote>\n<p>Interesting! Thanks <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span>!</p>\n<p>For anyone curious, the above example converted to use <code>localized</code> looks as follows:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">localized</span>\n\n<span class=\"kn\">namespace</span> <span class=\"n\">hidden_72</span>\n\n<span class=\"kn\">universe</span> <span class=\"n\">u</span>\n\n<span class=\"kn\">inductive</span> <span class=\"n\">List</span> <span class=\"o\">(</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"n\">u</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">Nil</span> <span class=\"o\">{}</span> <span class=\"o\">:</span> <span class=\"n\">List</span>\n<span class=\"bp\">|</span> <span class=\"n\">Cons</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">List</span> <span class=\"bp\">→</span> <span class=\"n\">List</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">List</span>\n\n<span class=\"n\">localized</span> <span class=\"s2\">&quot;notation `[` l : (foldr `,` (h t, Cons h t) Nil) `]` := l&quot;</span> <span class=\"k\">in</span> <span class=\"n\">my</span><span class=\"bp\">.</span><span class=\"n\">List</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"mi\">3</span><span class=\"o\">,</span> <span class=\"mi\">4</span><span class=\"o\">,</span> <span class=\"mi\">5</span><span class=\"o\">]</span> <span class=\"c1\">-- [1,2,3,4,5] : List ℕ</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">hidden_72</span>\n\n\n<span class=\"kn\">namespace</span> <span class=\"n\">hidden_73</span>\n\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"o\">[</span><span class=\"mi\">10</span><span class=\"o\">,</span> <span class=\"mi\">20</span><span class=\"o\">,</span> <span class=\"mi\">30</span><span class=\"o\">]</span> <span class=\"c1\">-- list ℕ</span>\n\n<span class=\"kn\">end</span> <span class=\"n\">hidden_73</span>\n</pre></div>",
        "id": 182925471,
        "sender_full_name": "Eduardo Cavazos",
        "timestamp": 1575869020
    }
]