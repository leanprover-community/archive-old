[
    {
        "content": "<p>In the file about Fibonacci numbers in mathlib there is the following lemma:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">fib_mono</span> <span class=\"o\">{</span><span class=\"n\">n</span> <span class=\"n\">m</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">n_le_m</span> <span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">m</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">fib</span> <span class=\"n\">n</span> <span class=\"bp\">≤</span> <span class=\"n\">fib</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"kd\">by</span> <span class=\"o\">{</span> <span class=\"n\">induction</span> <span class=\"n\">n_le_m</span> <span class=\"k\">with</span> <span class=\"n\">m</span> <span class=\"n\">n_le_m</span> <span class=\"n\">IH</span><span class=\"o\">,</span> <span class=\"o\">{</span> <span class=\"n\">refl</span> <span class=\"o\">},</span> <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"o\">(</span><span class=\"n\">le_trans</span> <span class=\"n\">IH</span> <span class=\"n\">fib_le_fib_succ</span><span class=\"o\">)</span> <span class=\"o\">}}</span>\n</code></pre></div>\n<p>I would have expected the following statement instead under the same name:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">fib_mono'</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">fib</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">monotone_of_monotone_nat</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">fib_le_fib_succ</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>Is there a reason why one should be preferred over the other (or to have both)? As far as I can see <code>monotone_of_monotone_nat</code> basically has the same proof as the first one, it is just more general.</p>",
        "id": 222980084,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1610801976
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"317890\">@Julian Külshammer</span> The code for <code>fib</code> might be very old. I don't know, but I can imagine it's one of the first things one tries in a new theorem prover.</p>",
        "id": 222980522,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610802645
    },
    {
        "content": "<p>So it probably predates the <code>monotone</code> predicate</p>",
        "id": 222980524,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610802655
    },
    {
        "content": "<p>If the proof is apply, apply then I would expect to see this in mathlib:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">fib_mono'</span> <span class=\"o\">:</span> <span class=\"n\">monotone</span> <span class=\"n\">fib</span> <span class=\"o\">:=</span>\n<span class=\"n\">monotone_of_monotone_nat</span> <span class=\"bp\">$</span> <span class=\"bp\">λ</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"n\">fib_le_fib_succ</span>\n</code></pre></div>",
        "id": 222980539,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1610802712
    },
    {
        "content": "<p>I think a PR to change the statement would probably be accepted and appreciated, although I can't speak for the maintainers</p>",
        "id": 222983137,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1610806217
    },
    {
        "content": "<p>yup, I think such a PR is fine (-;</p>",
        "id": 222985769,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610809198
    },
    {
        "content": "<p>PR created, <a href=\"https://github.com/leanprover-community/mathlib/issues/5776\">#5776</a></p>",
        "id": 222986476,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1610809870
    },
    {
        "content": "<p>reviewed (-;</p>",
        "id": 222986489,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1610809899
    },
    {
        "content": "<p>Should every <code>monotone</code> lemma be tagged with <code>mono</code>?</p>",
        "id": 222987971,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1610811443
    },
    {
        "content": "<p>Good question. I don't think the <code>mono</code> tactic is used much, but maybe we should. cc: <span class=\"user-mention\" data-user-id=\"110026\">@Simon Hudon</span></p>",
        "id": 222988372,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1610811941
    },
    {
        "content": "<p>Yes you can mark <code>monotone</code> lemmas as <code>mono</code>. That lets the <code>mono</code> tactic use your lemma when trying to prove <code>≤</code> goals</p>",
        "id": 222989055,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1610812772
    }
]