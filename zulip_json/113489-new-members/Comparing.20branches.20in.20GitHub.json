[
    {
        "content": "<p>Sorry for what seems like a rather elementary GitHub question: when I'm looking at an open PR that depends on another open PR (like <a href=\"https://github.com/leanprover-community/mathlib/pull/11167\">#11167</a> depends on <a href=\"https://github.com/leanprover-community/mathlib/pull/10850\">#10850</a>, which  in turn depends on <a href=\"https://github.com/leanprover-community/mathlib/pull/10540\">#10540</a>), by default the \"Files changed\" view shows everything that's changed by the whole chain of dependencies (i.e. in this case the cumulative changes introduced in <a href=\"https://github.com/leanprover-community/mathlib/pull/10540\">#10540</a>, <a href=\"https://github.com/leanprover-community/mathlib/pull/10850\">#10850</a> and <a href=\"https://github.com/leanprover-community/mathlib/pull/11167\">#11167</a>).  What's the simplest way to see just what's changed by the PR I'm looking at (i.e. just the changes introduced by <a href=\"https://github.com/leanprover-community/mathlib/pull/11167\">#11167</a>, relative to the baseline of <a href=\"https://github.com/leanprover-community/mathlib/pull/10850\">#10850</a>)?</p>",
        "id": 266766481,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641268102
    },
    {
        "content": "<p>There's this \"hidden\" feature of GitHub called <a href=\"https://github.com/leanprover-community/mathlib/compare\">compare</a><br>\n(just type out \"compare\" in the end of a repo URL)</p>",
        "id": 266766569,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641268242
    },
    {
        "content": "<p>Comparing \"<code>branch1</code> ← <code>branch2</code>\" will tell you the file changes that would take place if you were merging <code>branch2</code> into <code>branch1</code></p>",
        "id": 266766675,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641268371
    },
    {
        "content": "<p>You can also do it in your terminal, but with a significantly less friendly interface. If you're on <code>branch2</code> and you want to compare it with <code>branch1</code> (which must be up to date with GitHub), you can do</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ git diff branch1\n</code></pre></div>",
        "id": 266766795,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641268554
    },
    {
        "content": "<p>Great, thanks!</p>",
        "id": 266766854,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641268625
    },
    {
        "content": "<p>I always wished <code>git diff</code> had the github thing where it said how many commits ahead/behind it was</p>",
        "id": 266766959,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641268799
    },
    {
        "content": "<p>In the above case, where I'm comparing <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_factorization_multiplicative\">branch#SP_factorization_multiplicative</a> (for <a href=\"https://github.com/leanprover-community/mathlib/pull/11167\">#11167</a>) against <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_factorization_coprime_pos\">branch#SP_factorization_coprime_pos</a> (for <a href=\"https://github.com/leanprover-community/mathlib/pull/10850\">#10850</a>) I get 326 changed files, and I then have to search for the filename of the specific file I've personally changed.  Is this exactly what I should expect?</p>",
        "id": 266767163,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641268956
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/SP_factorization_multiplicative\">branch#SP_factorization_multiplicative</a> seems to be more up to date with <code>master</code>. Try merging <code>master</code> into <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_factorization_coprime_pos\">branch#SP_factorization_coprime_pos</a> too. This way you will have a clearer diff</p>",
        "id": 266767279,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641269077
    },
    {
        "content": "<p>Ok, thanks</p>",
        "id": 266767356,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641269172
    },
    {
        "content": "<p>When comparing \"<code>branch1</code> ← <code>branch2</code>\", making <code>branch1</code> the most updated branch should be enough. That would make <code>branch2</code> have no other changes w.r.t. <code>branch1</code> except for the changes you made.</p>",
        "id": 266767543,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641269493
    },
    {
        "content": "<p>The other case I'm interested in is slightly more complicated.  In <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_algebra_big_operators_prime\">branch#SP_algebra_big_operators_prime</a> (<a href=\"https://github.com/leanprover-community/mathlib/pull/10675\">#10675</a>) I created a new file <code>algebra/big_operators/prime</code> with some material in it.  Then in <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_count_factors_prod\">branch#SP_count_factors_prod</a> (<a href=\"https://github.com/leanprover-community/mathlib/pull/10855\">#10855</a>) I added to this file.  Then at the suggestion of a reviewer on <a href=\"https://github.com/leanprover-community/mathlib/pull/10675\">#10675</a> I moved the initial material to <code>algebra/big_operators/associated</code> and deleted <code>algebra/big_operators/prime</code>.  So when I use the <code>compare</code> page with these two branches it can't find the relevant files to compare (since the changes in <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_count_factors_prod\">branch#SP_count_factors_prod</a> are to a file that no longer exists in <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_algebra_big_operators_prime\">branch#SP_algebra_big_operators_prime</a>). Is there any kind of trick I can use here?</p>",
        "id": 266767603,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641269584
    },
    {
        "content": "<p>Specifically, I want to find everything that's new in <a href=\"https://github.com/leanprover-community/mathlib/pull/10855\">#10855</a> to make sure I bring it over to <code>algebra/big_operators/associated</code>.</p>",
        "id": 266767630,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641269630
    },
    {
        "content": "<p>I would highly recommend a simpler workflow than managing different inter-dependent branches.</p>\n<p>One approach that I think works well is stuffing everything in a single branch, and making sure it's always consistent with <code>master</code>. Then open PRs with new branches containing small chunks of your changes form your main development branch</p>",
        "id": 266767721,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641269740
    },
    {
        "content": "<p>Otherwise, depending on the complexity of your changes (moving files around, deleting files, renaming files, creating new files etc), it might be way harder than it needs to be</p>",
        "id": 266767787,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641269833
    },
    {
        "content": "<p>Thanks, I suspect I've been making life difficult for myself by not using GitHub correctly.</p>",
        "id": 266767793,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641269881
    },
    {
        "content": "<p>Of course, I suppose I could just look at the commits in <a href=\"https://github.com/leanprover-community/mathlib/pull/10855\">#10855</a>.  Clicking on the title of <code>Add lemma finset.count_factors_prod</code> shows what I changed in that one commit.  Can I see all the cumulative changes in all commits since that one?</p>",
        "id": 266767836,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641269903
    },
    {
        "content": "<p>Yes, in your teriminal you can do <code>git diff &lt;commit hash&gt;</code></p>",
        "id": 266767851,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641269954
    },
    {
        "content": "<p>Ah, thanks!</p>",
        "id": 266767856,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641269965
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"422543\">Stuart Presnell</span> <a href=\"#narrow/stream/113489-new-members/topic/Comparing.20branches.20in.20GitHub/near/266767793\">said</a>:</p>\n<blockquote>\n<p>Thanks, I suspect I've been making life difficult for myself by not using GitHub correctly.</p>\n</blockquote>\n<p>It's also a matter of practice. <code>git</code> is not a very simple tool</p>",
        "id": 266767989,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1641270159
    },
    {
        "content": "<p>I should sit down and work through a tutorial on git best-practice.</p>",
        "id": 266768150,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641270365
    },
    {
        "content": "<p>You can always merge in another PR's branch into your branch. Or merge in master to reduce the difference to master</p>",
        "id": 266769156,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1641271632
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"422543\">Stuart Presnell</span> <a href=\"#narrow/stream/113489-new-members/topic/Comparing.20branches.20in.20GitHub/near/266767836\">said</a>:</p>\n<blockquote>\n<p>Of course, I suppose I could just look at the commits in <a href=\"https://github.com/leanprover-community/mathlib/pull/10855\">#10855</a>.  Clicking on the title of <code>Add lemma finset.count_factors_prod</code> shows what I changed in that one commit.  Can I see all the cumulative changes in all commits since that one?</p>\n</blockquote>\n<p>You can also go to your PR's files tab (<a href=\"https://github.com/leanprover-community/mathlib/pull/10855/files\">https://github.com/leanprover-community/mathlib/pull/10855/files</a>), click on the \"Changes from\" dropdown on the left, and click on the first and last commits you want to diff while holding Shift.</p>",
        "id": 266805974,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1641302182
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"422543\">Stuart Presnell</span> <a href=\"#narrow/stream/113489-new-members/topic/Comparing.20branches.20in.20GitHub/near/266767603\">said</a>:</p>\n<blockquote>\n<p>The other case I'm interested in is slightly more complicated.  In <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_algebra_big_operators_prime\">branch#SP_algebra_big_operators_prime</a> (<a href=\"https://github.com/leanprover-community/mathlib/pull/10675\">#10675</a>) I created a new file <code>algebra/big_operators/prime</code> with some material in it.  Then in <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_count_factors_prod\">branch#SP_count_factors_prod</a> (<a href=\"https://github.com/leanprover-community/mathlib/pull/10855\">#10855</a>) I added to this file.  Then at the suggestion of a reviewer on <a href=\"https://github.com/leanprover-community/mathlib/pull/10675\">#10675</a> I moved the initial material to <code>algebra/big_operators/associated</code> and deleted <code>algebra/big_operators/prime</code>.  So when I use the <code>compare</code> page with these two branches it can't find the relevant files to compare (since the changes in <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_count_factors_prod\">branch#SP_count_factors_prod</a> are to a file that no longer exists in <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_algebra_big_operators_prime\">branch#SP_algebra_big_operators_prime</a>). Is there any kind of trick I can use here?</p>\n</blockquote>\n<p>Assuming I am not messing up timezones, the problem here is that bors deletes the source branch when it merges a PR, so there is no branch to compare with. You can use the compare page to diff your branch against the commit created by bors: <a href=\"https://github.com/leanprover-community/mathlib/compare/a10cb2f...SP_count_factors_prod\">https://github.com/leanprover-community/mathlib/compare/a10cb2f...SP_count_factors_prod</a></p>",
        "id": 266806671,
        "sender_full_name": "Mauricio Collares",
        "timestamp": 1641302641
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 266806982,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1641302831
    }
]