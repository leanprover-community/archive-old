[
    {
        "content": "<p>I am facing a goal  <code>⊢ univ.card = univ.card</code><br>\nIs there a way to make lean kind of fully express the LHS and RHS?</p>",
        "id": 246346025,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1626558337
    },
    {
        "content": "<p><code>set_option pp.implicit true</code></p>",
        "id": 246346331,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1626558836
    },
    {
        "content": "<p><code>congr</code> <del>will</del> <em>may</em> close that goal</p>",
        "id": 246346370,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1626558848
    },
    {
        "content": "<p>After exploring things, I think the issue I face is the following (possibly because of improper previous steps for the proof). But is it possible to prove?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.fintype.card</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">coe_univ_eq_self</span> <span class=\"o\">:</span>\n  <span class=\"bp\">↥</span><span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">set.univ</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">I</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">coe_sort</span><span class=\"o\">,</span> <span class=\"n\">has_coe_to_sort.coe</span><span class=\"o\">],</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 246346655,
        "sender_full_name": "Alex Zhang",
        "timestamp": 1626559299
    },
    {
        "content": "<p>But you are able to show that they have the same cardinality.</p>",
        "id": 246377225,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1626614057
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.fintype.card</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">I</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">coe_univ_eq_self</span> <span class=\"o\">:</span>\n  <span class=\"n\">fintype.card</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">set.univ</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">fintype.card</span> <span class=\"n\">I</span> <span class=\"o\">:=</span>\n<span class=\"n\">fintype.card_of_subtype</span> <span class=\"n\">finset.univ</span> <span class=\"bp\">$</span> <span class=\"kd\">by</span> <span class=\"n\">simp</span>\n</code></pre></div>",
        "id": 246379967,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1626616415
    }
]