[
    {
        "content": "<p>I don't know what I did wrong but at some point leanproject stopped working properly for me. I have an old copy of the tutorials (and other old lean projects) which I can open and edit as usual but anything I downloaded recently takes ages to compile. I tried to go through the installation guide again (Windows) but  it didn't help. When running <code>leanproject get</code> I receive a warning that the authenticity of host can't be established which I didn't get before. When I click OK I get an <code>Error cloning via SSH, trying HTTPS...</code> and then  <code>WARNING: leanpkg configurations not specifying </code>path = \"src\"<code> are deprecated.</code> Any idea what I can do to resolve this mess?</p>",
        "id": 224109563,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611698109
    },
    {
        "content": "<p>Can you give an example of what you're trying to do? If you're working mostly on <code>mathlib</code> you shouldn't need to run <code>leanproject get</code> all too often, but you will run <code>leanproject get-cache</code> a lot when switching branches.</p>",
        "id": 224110018,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611698317
    },
    {
        "content": "<p>At the moment I am working mostly on mathlib, yes. As I said, the first thing I noticed was that every file took at some point ages to compile. I then tried to remove the folders (because in some other topic I had read that that had helped and running <code>leanproject get</code> again lead to this weird SSH error. <code>leanproject get-cache</code>gives no error and claims to have found local mathlib oleans.</p>",
        "id": 224111469,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611698791
    },
    {
        "content": "<p>Within mathlib, try <code>git pull</code> and then <code>leanproject get-cache</code></p>",
        "id": 224111535,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611698837
    },
    {
        "content": "<p>switch to master branch. I guess what Bryan said. What are you trying to do? Work on a branch of mathlib? Just get a scratch file compiling with master? etc etc.</p>",
        "id": 224111634,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611698892
    },
    {
        "content": "<p><code>leanproject -f get-cache</code> will redownload the olean files. This can be useful if somehow the cache for a commit got corrupted, though I think this only tends to happen if you're using git hooks or running <code>leanproject mk-cache</code> a lot.</p>",
        "id": 224111863,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611699022
    },
    {
        "content": "<p><code>git pull</code> says Already up to date. <code>leanproject -f get-cache</code> downloaded something, but the orange bar doesn't disappear just opening any file. Just creating a new file and writing <code>#eval 1+1</code> worked in no time at all.</p>",
        "id": 224112793,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611699410
    },
    {
        "content": "<p>Did you do Restart Lean in vscode? (are you in vscode?)</p>",
        "id": 224113343,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1611699689
    },
    {
        "content": "<p>Yes, working in vscode which I also reinstalled today to see whether this was the problem. Restarting now also didn't help.</p>",
        "id": 224113687,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611699874
    },
    {
        "content": "<p>If you run <code>elan show</code> in your mathlib directory, what does the \"active toolchain\" section say? Mine looks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>active toolchain\n----------------\n\nleanprover-community-lean-3.24.0 (overridden by '/.../mathlib/leanpkg.toml')\nLean (version 3.24.0, commit 13007ebb4de6, Release)\n</code></pre></div>",
        "id": 224113763,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611699935
    },
    {
        "content": "<p>What happens if you try to compile mathlib on the command line? In mathlib, try <code>lean --make src</code>. If you have the correct oleans and the correct lean, this should return with no output after a few seconds. If it starts recompiling stuff then at the very least you will have to do <code>leanproject get-cache</code> again.</p>",
        "id": 224113893,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700008
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"installed\"><pre><span></span><code>--------------------\n\nstable (default)\nleanprover-community-lean-3.14.0\nleanprover-community-lean-3.16.5\nleanprover-community-lean-3.17.0\nleanprover-community-lean-3.17.1\nleanprover-community-lean-3.23.0\nleanprover-community-lean-3.24.0\n3.4.2\n\nactive toolchain\n----------------\n\nleanprover-community-lean-3.24.0 (overridden by '\\\\?\\C:\\Users\\julia\\Documents\\lean-projects\\mathlib\\leanpkg.toml')\nLean (version 3.24.0, commit 13007ebb4de6, Release)\n</code></pre></div>",
        "id": 224113905,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611700010
    },
    {
        "content": "<p>What branch are you trying to work on? What does <code>git status</code> say?</p>",
        "id": 224114099,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611700117
    },
    {
        "content": "<p>One problem I have seen in the past, with people who had set Lean up ages ago, is that in the dim and distant past people used to do things like setting a LEAN_PATH environment variables. Nowadays this should not be set. Another thing I've seen is that the default lean binary for VS Code is overridden to point to e.g. some nightly from 2018, which again might have been the thing to do in 2018.</p>",
        "id": 224114104,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700121
    },
    {
        "content": "<p>At the moment I just got a fresh copy of master and git status says: </p>\n<div class=\"codehilite\" data-code-language=\"on\"><pre><span></span><code>Your branch is up to date with 'origin/master'.\n\nnothing to commit, working tree clean```\n</code></pre></div>",
        "id": 224114295,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611700219
    },
    {
        "content": "<p>so now <code>leanproject get-cache</code> and then <code>lean --make src</code> in the root directory of the repo</p>",
        "id": 224114345,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700256
    },
    {
        "content": "<p>see if we can get it working on the command line</p>",
        "id": 224114367,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700270
    },
    {
        "content": "<p>I tried it and <code>lean --make src</code> didn't finish, even after running <code>leanproject get-cache</code>.</p>",
        "id": 224114503,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611700328
    },
    {
        "content": "<p>You mean you got some output, e.g. it started compiling a bunch of files?</p>",
        "id": 224114538,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700358
    },
    {
        "content": "<p><code>lean --version</code>?</p>",
        "id": 224114559,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700369
    },
    {
        "content": "<p><code>Lean (version 3.24.0, commit 13007ebb4de6, Release)</code></p>",
        "id": 224114595,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611700389
    },
    {
        "content": "<p>No, I get no output at all (at least for the time I waited).</p>",
        "id": 224114744,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611700448
    },
    {
        "content": "<p>Oh -- are you on Windows? I think that windows produces no output (this drives me nuts)</p>",
        "id": 224114848,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700507
    },
    {
        "content": "<p>Yes, I am on windows.</p>",
        "id": 224114888,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611700528
    },
    {
        "content": "<p>mac and linux it prints which files it's compiling to STDOUT or STDERR</p>",
        "id": 224114895,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700531
    },
    {
        "content": "<p>So in <code>~/.mathlib</code> do you have a file <code>13007ebb4de6.....tar.xz</code>?</p>",
        "id": 224114931,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700560
    },
    {
        "content": "<p>wait no</p>",
        "id": 224114976,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700566
    },
    {
        "content": "<p>not that, that's the lean commit</p>",
        "id": 224114992,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700576
    },
    {
        "content": "<p>What's the last commit according to <code>git log</code> and what does <code>leanpkg.toml</code> say?</p>",
        "id": 224115021,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700599
    },
    {
        "content": "<p>Have you tried updating leanproject (as a pip package)</p>",
        "id": 224115046,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1611700612
    },
    {
        "content": "<p>!!!</p>",
        "id": 224115059,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700617
    },
    {
        "content": "<p>Nice idea!</p>",
        "id": 224115086,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700633
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">leanproject</span> <span class=\"c1\">--version</span>\n<span class=\"n\">leanproject</span><span class=\"o\">,</span> <span class=\"n\">version</span> <span class=\"mi\">1</span><span class=\"bp\">.</span><span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">0</span>\n</code></pre></div>",
        "id": 224115108,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700649
    },
    {
        "content": "<p>I think if a cache download fails (eg network errors), you end up with a corrupt cache that <code>get-cache</code> refuses to refetch</p>",
        "id": 224115111,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1611700650
    },
    {
        "content": "<p><code>leanproject -f get-cache</code> should force a redownload though.</p>",
        "id": 224115147,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611700674
    },
    {
        "content": "<p>Yes I was going to try and locate the cache file but I don't know its name yet. It's <code>commit-hash.tar.xz</code> in a directory called <code>~/.mathlib</code> on my system</p>",
        "id": 224115206,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700696
    },
    {
        "content": "<p>Just to see if it had the right size</p>",
        "id": 224115219,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611700710
    },
    {
        "content": "<p>How do I update leanproject as a pip package?</p>",
        "id": 224115604,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611700929
    },
    {
        "content": "<p>I think I found that tar.xz file and it is 34 MB.</p>",
        "id": 224116015,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611701210
    },
    {
        "content": "<p>I usually just run <code>pip install --upgrade mathlibtools</code>, but I'm not sure if this is a good idea universally. It could depend on your python environment / how you installed <code>mathlibtools</code>.</p>",
        "id": 224116602,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1611701538
    },
    {
        "content": "<p>Thanks for all the suggestions. Unfortunately none of them worked so far.</p>",
        "id": 224173547,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611750541
    },
    {
        "content": "<p>what is output of <code>leanproject --version</code>?</p>",
        "id": 224173759,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611750672
    },
    {
        "content": "<p><code>leanproject, version 1.0.0</code></p>",
        "id": 224173806,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611750714
    },
    {
        "content": "<p>I just noticed that I didn't reply to what leanpkg.toml says: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"o\">[</span><span class=\"n\">package</span><span class=\"o\">]</span>\n<span class=\"n\">name</span> <span class=\"bp\">=</span> <span class=\"s2\">\"mathlib\"</span>\n<span class=\"n\">version</span> <span class=\"bp\">=</span> <span class=\"s2\">\"0.1\"</span>\n<span class=\"n\">lean_version</span> <span class=\"bp\">=</span> <span class=\"s2\">\"leanprover-community/lean:3.24.0\"</span>\n<span class=\"n\">path</span> <span class=\"bp\">=</span> <span class=\"s2\">\"src\"</span>\n\n<span class=\"o\">[</span><span class=\"n\">dependencies</span><span class=\"o\">]</span>\n</code></pre></div>",
        "id": 224177029,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611752623
    },
    {
        "content": "<p>And <code>git log</code> now gives </p>\n<div class=\"codehilite\" data-code-language=\"commit\"><pre><span></span><code>Author: Jesse Michael Han &lt;hyrodi@gmail.com&gt;\nDate:   Wed Jan 27 08:42:04 2021 +0000\nrefactor(category_theory/abelian): golf `mono_of_kernel_ι_eq_zero` (#5914)\nCo-authors: `lean-gptf`, Stanislas Polu\n</code></pre></div>",
        "id": 224177145,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611752679
    },
    {
        "content": "<p>looks fine</p>",
        "id": 224177168,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611752692
    },
    {
        "content": "<p>The leanpkg.toml of the old tutorials folder I have (and where lean works even opening the corresponding files) says the same. It just doesn't work for things I currently tried to download using <code>leanproject get</code>.</p>",
        "id": 224178101,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611753185
    },
    {
        "content": "<p>Maybe we should try to have a quick video chat where we could see exactly what you're doing and how your computer reacts.</p>",
        "id": 224178710,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611753526
    },
    {
        "content": "<p>Sure. Which platform?</p>",
        "id": 224178780,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611753564
    },
    {
        "content": "<p>For future readers: it turned out Julian had a somehow corrupted 3.24 toolchain in <code>$HOME/.elan</code>. Removing and reinstalling that toolchain solved the issue.</p>",
        "id": 224182290,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611755197
    },
    {
        "content": "<p>Thanks again for all who offered their help, especially to Patrick for finally fixing it.</p>",
        "id": 224182376,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611755230
    },
    {
        "content": "<p>Usually people's problems are far less weird!</p>",
        "id": 224182557,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1611755305
    },
    {
        "content": "<p>I could reproduce the error and I think I found out why it stopped working. While trying to resolve <a href=\"https://github.com/leanprover-community/mathlib/issues/1534\">#1534</a> I tried to add nat.div_add_mod just after nat.mod_add_div. If I understand correctly, I left mathlib and went to chore lean and editing this seems not to be such a good idea. <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 224393097,
        "sender_full_name": "Julian Külshammer",
        "timestamp": 1611868204
    },
    {
        "content": "<p>Aah, that makes sense.</p>",
        "id": 224393557,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611868450
    },
    {
        "content": "<p>Changing core is a different type of game (-; You'll need to work on a different repo, and issue some elan commands to make things work. I would avoid it if you can.</p>",
        "id": 224393646,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611868503
    },
    {
        "content": "<p>That makes me think: <span class=\"user-mention\" data-user-id=\"110024\">@Sebastian Ullrich</span> would it be possible for <code>elan</code> to make the lean toolchains in <code>~/.elan</code> read-only? That way you only modify core if you explicitly work on a manually cloned repo.</p>",
        "id": 224393718,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611868556
    },
    {
        "content": "<p>I would accept a PR for that. Would bring elan one step closer to Nix <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> .</p>",
        "id": 224396084,
        "sender_full_name": "Sebastian Ullrich",
        "timestamp": 1611869828
    },
    {
        "content": "<p>I'll put it on my todo list (-;</p>",
        "id": 224396491,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611870087
    },
    {
        "content": "<p>I've never looked at the source for <code>elan</code> though</p>",
        "id": 224396509,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1611870100
    },
    {
        "content": "<p>Johan, do you know the language that Sebastian used to write elan? This may be a shock...</p>",
        "id": 224400075,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611871625
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/leanproject.20stopped.20working/near/224400075\">said</a>:</p>\n<blockquote>\n<p>Johan, do you know the language that Sebastian used to write elan? This may be a shock...</p>\n</blockquote>\n<p>It's rust right?</p>",
        "id": 224403383,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1611872780
    },
    {
        "content": "<p><a href=\"https://github.com/Kha/elan\">It is!</a> Because what other language features:</p>\n<ul>\n<li>zero-cost abstractions</li>\n<li>move semantics</li>\n<li>guaranteed memory safety</li>\n<li>threads without data races</li>\n<li>trait-based generics</li>\n<li>pattern matching</li>\n<li>type inference</li>\n<li>minimal runtime</li>\n<li>and efficient C bindings?</li>\n</ul>",
        "id": 224403951,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1611873111
    },
    {
        "content": "<p>Looks like elan already sets some permissions for zip archives on unix at <a href=\"https://github.com/Kha/elan/blob/40e38ccf7392a5a281475197ee114283a855431d/src/elan-dist/src/component/package.rs#L106\">https://github.com/Kha/elan/blob/40e38ccf7392a5a281475197ee114283a855431d/src/elan-dist/src/component/package.rs#L106</a> so this looks pretty doable with <a href=\"https://doc.rust-lang.org/std/fs/fn.set_permissions.html\">https://doc.rust-lang.org/std/fs/fn.set_permissions.html</a></p>",
        "id": 224404235,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1611873250
    }
]