[
    {
        "content": "<p>I'm trying to prove a lemma that involves <code>zip_with</code>. Along the way I used <a href=\"https://leanprover-community.github.io/mathlib_docs/data/list/zip.html#list.nth_zip_with\"><code>list.nth_zip_with</code></a>, which introduced symbols like <code>&lt;$&gt;</code>, <code>&lt;*&gt;</code>,  and <code>&gt;&gt;=</code> into my goal state.<br>\nNow I'm completely unable to understand what the goal means.<br>\nClicking the symbols tells me what they are, but looking them up in the docs did not help me understand them at all.<br>\nIs there a way to circumnavigate these kinds of expressions, or is there a resource that explains them?<br>\nThanks :)</p>",
        "id": 229544537,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1615320543
    },
    {
        "content": "<p><code>&lt;$&gt;</code> is <code>list.map</code>, and <code>&gt;&gt;=</code> is <code>list.bind</code>; <code>&lt;*&gt;</code> is another function with its own definition in terms of map and bind</p>",
        "id": 229545843,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615321011
    },
    {
        "content": "<p>you can rewrite them away using <code>list.map_eq_map</code> and <code>list.bind_eq_bind</code> and <code>(&lt;*&gt;)</code> IIRC</p>",
        "id": 229545923,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615321040
    },
    {
        "content": "<p>Also see <a href=\"https://leanprover-community.github.io/extras/tactic_writing.html#marios-monadic-symbols-cheat-sheet\">https://leanprover-community.github.io/extras/tactic_writing.html#marios-monadic-symbols-cheat-sheet</a></p>",
        "id": 229566976,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1615328622
    },
    {
        "content": "<p>It doesn't always help, but you can often use something like <code>#print notation &lt;$&gt;</code> to figure out what some symbols mean.</p>",
        "id": 229567195,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1615328716
    }
]