[
    {
        "content": "<p>If I have a function <code>f : nat -&gt; set T</code>, is there a better way of spelling <code>fs_up_to</code> in the following?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">def</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">nat</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n<span class=\"n\">def</span> <span class=\"n\">fs_up_to</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"err\">⋃</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"o\">{</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">//</span> <span class=\"n\">s</span> <span class=\"bp\">&lt;=</span> <span class=\"n\">k</span><span class=\"o\">}),</span> <span class=\"n\">f</span> <span class=\"n\">s</span>\n</code></pre></div>\n\n\n<p>Using subtypes feels a little awkward</p>",
        "id": 202305400,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1593435734
    },
    {
        "content": "<p>Is a recursive definition using <code>set.union</code> likely to be easier to make statements about?</p>",
        "id": 202305719,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1593435899
    },
    {
        "content": "<p>Your definition by subtype already exists in core <a href=\"https://github.com/leanprover/lean/blob/master/library/init/data/fin/basic.lean\">https://github.com/leanprover/lean/blob/master/library/init/data/fin/basic.lean</a></p>",
        "id": 202306273,
        "sender_full_name": "Alistair Tucker",
        "timestamp": 1593436198
    },
    {
        "content": "<p>eew old lean 3.4.2</p>",
        "id": 202311455,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593438738
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">finset</span>\n\n<span class=\"kn\">variable</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span>\n\n<span class=\"n\">def</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">nat</span> <span class=\"bp\">-&gt;</span> <span class=\"n\">set</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"n\">sorry</span>\n\n<span class=\"n\">def</span> <span class=\"n\">fs_up_to</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"err\">⋃</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hi</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 202312480,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593439186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>, could you elaborate on your <code>3.4.2</code> point?</p>",
        "id": 202313155,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1593439462
    },
    {
        "content": "<p>Alistair Tucker linked to the MS version of Lean which hasn't changed for 2 years</p>",
        "id": 202313408,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593439581
    },
    {
        "content": "<p>Yes sorry I need to update my version. Anyway <code>fin</code> is probably not something you need.</p>",
        "id": 202313728,
        "sender_full_name": "Alistair Tucker",
        "timestamp": 1593439722
    }
]