[
    {
        "content": "<p>I see now that my example is not good enough to describe the actual use case I am facing with. In the example, the proof does not actually use the definition of <code>Inf</code>. We could replace <code>(h₃ : Inf {b | ¬f b} = 0)</code> with <code>(h₃ : some h₂ = 0)</code> and it would still be provable.</p>\n<p>In my real theorem, I can't use <code>Inf_mem</code>. Instead, I need to prove that something is actually the smallest nat satisfyng a predicate. But it turns out that <code>nat.find_spec</code> with <code>letI := classical.prop_decidable</code> does the job.</p>\n<p>Thanks <span class=\"user-mention\" data-user-id=\"284160\">@Eric Rodriguez</span> and <span class=\"user-mention\" data-user-id=\"439483\">@Andrew Yang</span>!</p>",
        "id": 264304065,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1639058134
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/complete_lattice.2EInf.20and.20nat.2Efind/near/264288904\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.Inf_eq_zero\">docs#nat.Inf_eq_zero</a> also looked promising, but isn't as fast</p>\n</blockquote>\n<p>Yeah, I was looking for that theorem too, but due to <a href=\"#narrow/stream/113489-new-members/topic/List.20of.20available.20theorems\">this bug</a>, the theorem is not listed in the autcomplete, so I assumed it doesn't exist and didn't even bother to check docs.</p>",
        "id": 264304294,
        "sender_full_name": "Patrick Johnson",
        "timestamp": 1639058237
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"456794\">Patrick Johnson</span> has marked this topic as resolved.</p>",
        "id": 264304522,
        "sender_full_name": "Notification Bot",
        "timestamp": 1639058342
    }
]