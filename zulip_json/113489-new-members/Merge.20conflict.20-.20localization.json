[
    {
        "content": "<p>PR <a href=\"https://github.com/leanprover-community/mathlib/pull/12081\">#12081</a> has a merge conflict since it was modifying <code>ring_theory/localization</code>, which no longer exists. I think that the lemmas I added there should now go in <code>ring_theory/localization/basic</code>. I don't really now how to resolve this kind of merge conflict, should I just create a new PR adding the lemmas to the new file, and close PR <a href=\"https://github.com/leanprover-community/mathlib/pull/12081\">#12081</a>?</p>",
        "id": 272863352,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1645562412
    },
    {
        "content": "<p>the way I went about this for my similar PRs was something like:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>git switch master\n<span class=\"gp\">$ </span>git pull\n<span class=\"gp\">$ </span>git switch my_branch\n<span class=\"gp\">$ </span>git merge master\n<span class=\"gp\">$ </span>git rm src/ring_theory/localization.lean\n<span class=\"gp gp-VirtualEnv\">(re-add all my changes manually in VSCode)</span>\n<span class=\"gp\">$ </span>git commit\n</code></pre></div>\n<p>not sure if this is the best way</p>\n<p>edit:added some extra steps</p>",
        "id": 272863564,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1645562532
    },
    {
        "content": "<p>OK, I'll try this. Thanks!</p>",
        "id": 272864145,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1645562832
    },
    {
        "content": "<p>I think your merge went wrong somehow, because GitHub claims 12 thousand new lines! I'll try and make a fixed branch</p>",
        "id": 272923062,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645608405
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib/tree/is_localization_lemmas_merged\">branch#is_localization_lemmas_merged</a></p>",
        "id": 272923568,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645608725
    },
    {
        "content": "<p>I followed Eric's steps (with a quick <code>git diff</code> at the start to see what I had to re-add)</p>",
        "id": 272923614,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645608757
    },
    {
        "content": "<p>I would recommend:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">git</span> <span class=\"n\">fetch</span> <span class=\"n\">origin</span> <span class=\"n\">master</span>\n<span class=\"bp\">$</span> <span class=\"n\">git</span> <span class=\"n\">merge</span> <span class=\"n\">origin</span><span class=\"bp\">/</span><span class=\"n\">master</span>\n</code></pre></div>\n<p>instead of what you suggested as <code>git switch master; git pull; git switch my_branch; git merge master</code></p>",
        "id": 272923931,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645608975
    },
    {
        "content": "<p>I suspect the mess on the branch was caused by somehow doing the merge in the wrong direction</p>",
        "id": 272923995,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645609020
    },
    {
        "content": "<p><del>Wouldn't the following command then become <code>git merge origin/master</code>?</del></p>",
        "id": 272924022,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645609033
    },
    {
        "content": "<p>In any case, I'm happy to apply my new branch or you can do it with the following commands:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ git fetch\n$ git push origin 67258754ade8ef18882b8d39176dd684a7908748:refs/heads/is_localization_lemmas --force-with-lease\n</code></pre></div>\n<p>The first command downloads the latest commits from GitHub, the second command tells GitHub that the <code>is_localization_lemmas</code> branch should point to commit <code>67258754ade8ef18882b8d39176dd684a7908748</code> (which is the one I just pushed)</p>",
        "id": 272924172,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645609105
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/113489-new-members/topic/Merge.20conflict.20-.20localization/near/272924022\">said</a>:</p>\n<blockquote>\n<p>Wouldn't the following command then become <code>git merge origin/master</code>?</p>\n</blockquote>\n<p>Yes, see my edit</p>",
        "id": 272924196,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645609125
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/113489-new-members/topic/Merge.20conflict.20-.20localization/near/272924172\">said</a>:</p>\n<blockquote>\n<p>In any case, I'm happy to apply my new branch or you can do it with the following commands:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ git fetch\n$ git push origin 67258754ade8ef18882b8d39176dd684a7908748:refs/heads/is_localization_lemmas --force-with-lease\n</code></pre></div>\n<p>The first command downloads the latest commits from GitHub, the second command tells GitHub that the <code>is_localization_lemmas</code> branch should point to commit <code>67258754ade8ef18882b8d39176dd684a7908748</code> (which is the one I just pushed)</p>\n</blockquote>\n<p>Sorry, I just saw this. I have just pushed changes to my branch (adding my lemmas to the new files). Should I still do this now?</p>",
        "id": 272927956,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1645611180
    },
    {
        "content": "<p>If you could push your changes, I can fix the merge and push the fixed versions to your branch</p>",
        "id": 272928297,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645611378
    },
    {
        "content": "<p>(Or is commit <code>e744644705</code> already the last part?)</p>",
        "id": 272928744,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645611645
    },
    {
        "content": "<p>I just pushed the changes <a href=\"https://github.com/leanprover-community/mathlib/pull/12081/commits/e744644705f9d6a7daa2a9556cc9876b1265bfc0\">here</a>. Is this what you mean? Other that this, the only file I have intentionally changed is <code>field_theory/ratfunc</code>, in <a href=\"https://github.com/leanprover-community/mathlib/pull/12081/commits/7de1bf7aaa3d16f237d38f074bec0d719e5dd0fb\">this previous commit</a>.</p>",
        "id": 272928954,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1645611763
    },
    {
        "content": "<p>Yes, that commit is the last part.</p>",
        "id": 272929116,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1645611843
    },
    {
        "content": "<p>Thank you! <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 272929148,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1645611858
    },
    {
        "content": "<p>Perfect, then I already got those changes. Shall I go ahead and push the fixed commits to your branch?</p>",
        "id": 272929153,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645611862
    },
    {
        "content": "<p>That would be great, thanks!</p>",
        "id": 272929180,
        "sender_full_name": "María Inés de Frutos Fernández",
        "timestamp": 1645611880
    },
    {
        "content": "<p>Done <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 272929196,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645611892
    },
    {
        "content": "<p>Sorry, now it's done!</p>",
        "id": 272929318,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645611958
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Merge.20conflict.20-.20localization/near/272923931\">said</a>:</p>\n<blockquote>\n<p>I would recommend:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"bp\">$</span> <span class=\"n\">git</span> <span class=\"n\">fetch</span> <span class=\"n\">origin</span> <span class=\"n\">master</span>\n<span class=\"bp\">$</span> <span class=\"n\">git</span> <span class=\"n\">merge</span> <span class=\"n\">origin</span><span class=\"bp\">/</span><span class=\"n\">master</span>\n</code></pre></div>\n<p>instead of what you suggested as <code>git switch master; git pull; git switch my_branch; git merge master</code></p>\n</blockquote>\n<p>can you explain what the difference is, Eric? I should learn git better</p>",
        "id": 272929319,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1645611958
    },
    {
        "content": "<p>Eric W.'s commands only update the remote tracking branch <code>origin/master</code> with <code>git fetch</code>, while Eric R.'s commands update the remote branches and also the local branch <code>master</code> with <code>git pull</code>. It's less work, so less commands to potentially mess up or forget.</p>",
        "id": 272929547,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1645612080
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/113489-new-members/topic/Merge.20conflict.20-.20localization/near/272929318\">said</a>:</p>\n<blockquote>\n<p>Sorry, now it's done!</p>\n</blockquote>\n<p>Watch out though <span class=\"user-mention\" data-user-id=\"406490\">@María Inés de Frutos Fernández</span>, you'll need to run <code>git fetch origin</code> <code>git reset --hard origin/yourbranchname</code> (<strong>which throws away your local changes</strong>), otherwise next time you commit you're reintroduce the history mess</p>",
        "id": 272945096,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645621477
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238446\">Anne Baanen</span> <a href=\"#narrow/stream/113489-new-members/topic/Merge.20conflict.20-.20localization/near/272929547\">said</a>:</p>\n<blockquote>\n<p>Eric W.'s commands only update the remote tracking branch <code>origin/master</code> with <code>git fetch</code>, while Eric R.'s commands update the remote branches and also the local branch <code>master</code> with <code>git pull</code>. It's less work, so less commands to potentially mess up or forget.</p>\n</blockquote>\n<p>More importantly though, <code>fetch</code> doesn't touch your working tree and throw away changes you forgot to commit, unlike <code>switch</code> which I think might.</p>",
        "id": 272945196,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1645621538
    }
]