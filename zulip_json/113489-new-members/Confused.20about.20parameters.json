[
    {
        "content": "<p>I'm working on a basic exercise:</p>\n<div class=\"codehilite\" data-code-language=\"section\"><pre><span></span><code>parameters {A : Type} {R : A → A → Prop}\nparameter (transR : transitive R)\n\nlocal infix &lt; := R\n\ndef R' (a b : A) : Prop := R a b ∨ a = b\nlocal infix ≤ := R'\n\ntheorem transR' {a b c : A} (h1 : a ≤ b) (h2 : b ≤ c):\n  a ≤ c :=\nbegin\n  cases h1,\n  cases h2,\n  left,\n  exact transR h1 h2,\nend\nend\n</code></pre></div>\n<p>I get <code>unknown identifier 'transR'</code>. But there it is at the top: <code>parameter (transR : transitive R)</code>. I must be misunderstanding what <code>parameter</code> means. So what does <code>parameter</code> mean?</p>",
        "id": 264021662,
        "sender_full_name": "Dan Piponi",
        "timestamp": 1638892910
    },
    {
        "content": "<p>I think it's only included automatically in declarations that mention it in their type.</p>",
        "id": 264022407,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1638893160
    },
    {
        "content": "<p>Does <code>include transR</code> before your theorem solve the issue?</p>",
        "id": 264022485,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1638893172
    },
    {
        "content": "<p>That certainly allows my step in the proof to go through, thanks. (I guess I still need to think about what work <code>parameter</code> is doing here.)</p>",
        "id": 264027876,
        "sender_full_name": "Dan Piponi",
        "timestamp": 1638895031
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"459093\">@Dan Piponi</span> For example, you could make <code>{a b c : A}</code> parameters (or <code>variables</code>) and then you wouldn't need to <code>include</code> them explicitly. Why? Because <code>h1</code> and <code>h2</code> mention them, so Lean knows to pull them in.</p>",
        "id": 264033882,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1638896927
    },
    {
        "content": "<p><code>transR</code> was only mentioned in the <code>begin .. end</code> block, but by the time Lean is digesting that, it is past the phase of deciding which variables/parameters to pull into the statement.</p>",
        "id": 264033974,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1638896969
    },
    {
        "content": "<p>With <code>include</code> you instruct Lean to just pull it into every statement directly.</p>",
        "id": 264034050,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1638896997
    }
]