[
    {
        "content": "<p>Sorry quick question. Is there a way to apply the rewrite tactic to a hypothesis instead of goal?</p>\n<p>E.g. if h : a + c = b + c, I would like to apply add_right_cancel to it and obtain a = b.</p>",
        "id": 177365601,
        "sender_full_name": "Chu-Wee Lim",
        "timestamp": 1570213164
    },
    {
        "content": "<p>Yes, <code>rw lemma at hyp</code></p>",
        "id": 177365813,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570213304
    },
    {
        "content": "<p>Similarly <code>simp at hyp</code>, <code>change foo at hyp</code>, <code>push_neg at hyp</code>, etc...</p>",
        "id": 177365876,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570213335
    },
    {
        "content": "<p>Sorry I tried the following, but it's giving me an error. </p>\n<p>example : ∀ a b c d : ℕ, a + c + d = b + c + d → a = b := assume a b c d h,<br>\nbegin<br>\n   rw add_right_cancel at h,<br>\nend</p>\n<p>Error message: rewrite tactic failed, lemma lhs is a metavariable</p>",
        "id": 177367395,
        "sender_full_name": "Chu-Wee Lim",
        "timestamp": 1570214342
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"242884\">@Chu-Wee Lim</span> The problem is that <code>add_right_cancel</code> is not formulated as an <code>iff</code> statement. So you cannot use it like this.</p>",
        "id": 177371805,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570217595
    },
    {
        "content": "<p>You can do something like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"k\">assume</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"k\">begin</span>\n  <span class=\"k\">have</span> <span class=\"n\">step1</span> <span class=\"o\">:=</span> <span class=\"n\">add_right_cancel</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"n\">step2</span> <span class=\"o\">:=</span> <span class=\"n\">add_right_cancel</span> <span class=\"n\">step1</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">step2</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 177371981,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1570217709
    },
    {
        "content": "<p>If it were an <code>iff</code> statement, you could rewrite with it:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">add_right_cancel_iff</span><span class=\"o\">,</span> <span class=\"n\">add_right_cancel_iff</span><span class=\"o\">]</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">h</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 177374041,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1570219199
    },
    {
        "content": "<p>Johan's solution is fake tactic mode, it could be written as </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"k\">assume</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">h</span><span class=\"o\">,</span> <span class=\"n\">add_right_cancel</span> <span class=\"o\">(</span><span class=\"n\">add_right_cancel</span> <span class=\"n\">h</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>(which is perfectly fine). More in the tactic mode spirit would be:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"k\">assume</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">apply</span> <span class=\"n\">add_right_cancel</span><span class=\"o\">,</span>\n  <span class=\"n\">apply</span> <span class=\"n\">add_right_cancel</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>\n\n\n<p>Although my taste in this case is to declare this as something Lean should just crush without asking any question:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"n\">d</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"bp\">+</span> <span class=\"n\">c</span> <span class=\"bp\">+</span> <span class=\"n\">d</span> <span class=\"bp\">→</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"o\">{</span> <span class=\"n\">intros</span><span class=\"o\">,</span>  <span class=\"n\">linarith</span> <span class=\"o\">}</span>\n</pre></div>",
        "id": 177378126,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570222545
    }
]