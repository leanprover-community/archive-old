[
    {
        "content": "<p>I'm writing this to \"new members\" because the question is very basic: Is there anywhere an overview of the Lean tools (<code>lean</code>, <code>elan</code>, <code>leanpkg</code>, <code>leanproject</code>), what their raison d'etre is, what they do, what the main concepts behind them is, etc.? Because the truth is, I have no clue. I know how to install Lean but not how to maintain it. <code>leanpkg</code> apparently deals with packages; is that lean, mathlib, and VSCode extension? Are these the three packages? Where is this explained?</p>\n<p>Yesterday, <span class=\"user-mention\" data-user-id=\"256311\">@Jannis Limperg</span> gave me access to a branch of a project we work together. He had changed the Lean version in \"leanpkg.toml\". My VSCode started running out of memory, so I thought: Probably I need to recompile mathlib. How do I do that? Jannis told me:</p>\n<blockquote>\n<p><code>lean --make file.lean</code> to compile <code>file.lean</code> and its dependencies. You can also go into <code>_target/deps/mathlib</code> and use <code>leanproject get-cache</code> </p>\n</blockquote>\n<p>(Turns out I didn't have <code>leanproject</code>.) How does one, as a novice or as somebody who's been using Lean for 1.5 years and who's still clueless, come up with these commands? I would gladly read the docs, but where are they? And how come this issue (apparently?) is not affecting lots of other novices? I just don't get it. Do people just hang out on Zulip until they just \"get\" these things?</p>",
        "id": 201833098,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592995450
    },
    {
        "content": "<p>This has all gone through several iterations.</p>",
        "id": 201833200,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592995545
    },
    {
        "content": "<p>For sure. But I used to work as doc manager for several years, and then the docs also went through several iterations.</p>",
        "id": 201833271,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592995572
    },
    {
        "content": "<p>The short story is that Patrick Massot wrote <code>leanproject</code>, only a few months ago, which was supposed to be a one size fits all tool for doing everything which most users want to do.</p>",
        "id": 201833289,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592995588
    },
    {
        "content": "<p>I would already be quite happy with a one para description of each tool.</p>",
        "id": 201833294,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592995590
    },
    {
        "content": "<p>That's just coming :-)</p>",
        "id": 201833302,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592995600
    },
    {
        "content": "<p>Very good. Then I consider my question answered. :)</p>",
        "id": 201833319,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592995614
    },
    {
        "content": "<p>And I'll keep bugging my colleagues whenever I have issues until then.</p>",
        "id": 201833331,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592995626
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/toolchain.html\">https://leanprover-community.github.io/toolchain.html</a></p>",
        "id": 201833333,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592995631
    },
    {
        "content": "<p>Wow.</p>",
        "id": 201833357,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592995649
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/mathlib-tools/blob/master/README.md\">https://github.com/leanprover-community/mathlib-tools/blob/master/README.md</a></p>",
        "id": 201833361,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592995652
    },
    {
        "content": "<p>Google didn't find it, sadly, when I looked for recompiling mathlib. It pointed me to your installation notes.</p>",
        "id": 201833375,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592995668
    },
    {
        "content": "<p>Can you tell me exactly what you mean by my notes?</p>",
        "id": 201833436,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592995695
    },
    {
        "content": "<p>search is a big problem. Searching for Lean sends you to the MS pages which are very out of date.</p>",
        "id": 201833458,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592995716
    },
    {
        "content": "<p>I'll try to find \"your notes\" again.</p>",
        "id": 201833471,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592995730
    },
    {
        "content": "<p>The community, Patrick and Rob and others, have put in a <em>huge</em> amount of effort to make a detailed community website with really thorough explanations of a lot of things: <a href=\"https://leanprover-community.github.io/\">https://leanprover-community.github.io/</a></p>",
        "id": 201833508,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592995765
    },
    {
        "content": "<p>Those notes:</p>\n<p><a href=\"https://xenaproject.wordpress.com/2017/12/02/how-to-install-mathlib-and-keep-it-up-to-date/\">https://xenaproject.wordpress.com/2017/12/02/how-to-install-mathlib-and-keep-it-up-to-date/</a></p>\n<p>Regardless, I could see this was not what I was looking for.</p>",
        "id": 201833511,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592995767
    },
    {
        "content": "<p>This is really great. I'll study the toolchain page. And the rest of the site. It's exactly what I was looking for.</p>",
        "id": 201833603,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592995825
    },
    {
        "content": "<p>Patrick has done an extremely thorough job, because although many mathematician users just want to have \"leanproject up\", many CS users want to know what is going on. He has catered for both.</p>",
        "id": 201833665,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592995909
    },
    {
        "content": "<p>I just can't seem to find my way from the front page to toolchain, though.</p>",
        "id": 201833726,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592995929
    },
    {
        "content": "<p>If I e.g. click on \"Working on Lean projects\", then I see \"leanproject\", I click that, and then I end up staring at a github directory.</p>",
        "id": 201833802,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592996002
    },
    {
        "content": "<p>The toolchain link is on the <a href=\"https://leanprover-community.github.io/get_started.html\">install</a> page.</p>",
        "id": 201833885,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592996045
    },
    {
        "content": "<p>I see. Thanks. It's really been a big source of frustration and anxiety for me. I guess you're hoping users won't need this? This might be true, but in my experience they will...</p>",
        "id": 201834025,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592996162
    },
    {
        "content": "<p>I'm absolutely hoping users won't need this <em>if they didn't have a previous Lean installation of any kind</em>.</p>",
        "id": 201834246,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592996357
    },
    {
        "content": "<p>My next question then is: How can I completely eradicate Lean from my machine, so that I can become one of these happy users? ;)</p>",
        "id": 201834367,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592996451
    },
    {
        "content": "<p>What happens if you just follow the installation instructions for your OS? At precisely which point does something not go to plan?</p>",
        "id": 201835072,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592997058
    },
    {
        "content": "<p>Jasmin, eradicating Lean should be pretty east, you can simply ask your system where it finds Lean.</p>",
        "id": 201835130,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592997109
    },
    {
        "content": "<p>Also, PRs to <a href=\"https://github.com/leanprover-community/leanprover-community.github.io\">https://github.com/leanprover-community/leanprover-community.github.io</a> are very welcome if you have ideas about links that should be added.</p>",
        "id": 201835210,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1592997157
    },
    {
        "content": "<p>But surely there's a bunch of <code>.elan/*</code> etc. files which I should remove, otherwise there's no point, right?</p>",
        "id": 201835239,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592997186
    },
    {
        "content": "<p>Kevin, my problem scenario was described in my first message, with Lean running out of memory while rebuilding mathlib in VSCode. That's where things started to derail.</p>",
        "id": 201835426,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592997312
    },
    {
        "content": "<p>Which in turn happened because somebody changed some Lean and mathlib versions in a repository's <code>leanpkg.toml</code> file.</p>",
        "id": 201835525,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592997372
    },
    {
        "content": "<p>I'd expect such things happen all the time to people whenever they update <code>leanpkg.toml</code>. They need to do some stuff on the command line; otherwise, they'll have to wait in VS Code and maybe, like me, get weird memory-related errors.</p>",
        "id": 201835575,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592997421
    },
    {
        "content": "<p>I mean what happens if you follow the installation instructions for getting leanproject. Nothing to do with running Lean on a file.</p>",
        "id": 201835609,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592997452
    },
    {
        "content": "<p><code>leanproject up</code> should solve your problems</p>",
        "id": 201835621,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592997463
    },
    {
        "content": "<p>or in your case <code>leanproject get-cache</code></p>",
        "id": 201835681,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592997487
    },
    {
        "content": "<p>Yes, <code>leanproject up</code> changes your <code>toml</code> (and recompiles mathlib for you). If someone else changes the toml in a shared project then you can either do <code>git pull</code> and then something like <code>leanproject get-mathlib-cache</code> or something, or you can just follow the xkcd advice, delete the project completely and re-install it with <code>leanproject get &lt;path to project&gt;</code></p>",
        "id": 201836561,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1592998300
    },
    {
        "content": "<p>I haven't tried to install <code>leanproject</code> yet (since I didn't know what problem it was supposed to solve for me).</p>",
        "id": 201838064,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592999613
    },
    {
        "content": "<p>I'll give what you write a try once I'm done with all my Skype/etc. calls.</p>",
        "id": 201838094,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592999637
    },
    {
        "content": "<p>Thanks for the help!</p>",
        "id": 201838097,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1592999641
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"121058\">Jasmin Blanchette</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/201838064\">said</a>:</p>\n<blockquote>\n<p>I haven't tried to install <code>leanproject</code> yet (since I didn't know what problem it was supposed to solve for me).</p>\n</blockquote>\n<p>Your grant money is (was) paying for it ;)</p>",
        "id": 201839089,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1593000419
    },
    {
        "content": "<p>\"Lots of wonderful things on the community web site, all hidden under two layers of links.\" -- Anonymous (Gabriel E.)</p>",
        "id": 201840885,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1593001898
    },
    {
        "content": "<p>\"I recognize a hard-to-navigate web site when I see one.\" -- Anonymous</p>",
        "id": 201840966,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1593001930
    },
    {
        "content": "<p>\"There's a massive amount of interesting content.\" -- A</p>",
        "id": 201840983,
        "sender_full_name": "Jasmin Blanchette",
        "timestamp": 1593001946
    },
    {
        "content": "<p>I think users that installed Lean a long time ago but didn't keep up to date are a difficult target for us. It's much easier to deal with real beginners. But again you can very easily PR changes to the website.</p>",
        "id": 201857140,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593010109
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121058\">@Jasmin Blanchette</span> I think that if someone else changes the toml of a project you are working on, if this project has mathlib as a dependency (and no other dependencies), and if you have <code>leanproject</code>, you can <code>git pull</code> and then (in the root directory) <code>rm -rf _target</code> and then <code>leanproject get-mathlib-cache</code>. I just tried this in exactly your situation and it seems to work fine.</p>",
        "id": 201859238,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593010980
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> what I've said is not correct -- if you remove <code>_target</code> then <code>get-mathlib-cache</code> gives you Lean and olean files, but it doesn't make mathlib into a git repo (and this was an issue for me because my script for compiling the real number game needs the fact that mathlib is a git repo apparently). I genuinely don't know what the workflow is supposed to be if someone else working on a joint repo changes <code>leanpkg.toml</code>.</p>",
        "id": 201875722,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593018523
    },
    {
        "content": "<p>I'm afraid most <code>leanproject</code> commands won't work for you, Jasmin, because the root directory of our Lean project is not also the root directory of a Git repository (see <a href=\"https://github.com/leanprover-community/mathlib-tools/issues/42\">this issue</a>). But <code>cd _target/deps/mathlib; leanproject get-cache</code> works.</p>",
        "id": 201875800,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1593018566
    },
    {
        "content": "<p>So overall, what I do after an update to <code>leanpkg.toml</code> is</p>\n<div class=\"codehilite\"><pre><span></span><code>$ leanpkg configure\n[this checks out the correct mathlib commit in _target/deps/mathlib]\n$ cd _target/deps/mathlib\n$ leanproject get-cache [or leanpkg build if there&#39;s no cache available]\n</code></pre></div>",
        "id": 201876135,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1593018738
    },
    {
        "content": "<p>The answer hasn't change: if you decide to break all rules then you're on your own, but you can still submit a PR to the tooling, as long as it doesn't break stuff for people who follow the instructions.</p>",
        "id": 201877934,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593019624
    },
    {
        "content": "<p>Yes of course, no complaining intended. ;)</p>",
        "id": 201879369,
        "sender_full_name": "Jannis Limperg",
        "timestamp": 1593020255
    },
    {
        "content": "<p>Note that I'm not complaining either, and I'm serious when I say that PRs are welcome.</p>",
        "id": 201887546,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593024316
    },
    {
        "content": "<p>One thing puzzles me is about <code>elan</code>.<br>\nRunning <code>which lean</code> gives me <code>~/.elan/bin/lean</code>, which is not the <code>lean</code> executable from the release.  Why?</p>",
        "id": 202281503,
        "sender_full_name": "Jiekai",
        "timestamp": 1593417877
    },
    {
        "content": "<p>Magic</p>",
        "id": 202281536,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593417900
    },
    {
        "content": "<p>This <code>~/.elan/bin/lean</code> figures out which lean you <em>really</em> want, and then executes that.</p>",
        "id": 202281686,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593417982
    },
    {
        "content": "<p>the procedure to install <code>leanproject</code> is not really foolproof. 1st of all, it's not normal to call <code>sudo pip</code>, unless you are willing to place 100% trust into what you're going to install, and it has potential to nuke your precious system Python. One normally would do stuff in <code>venv</code>, or <code>pip install ... --user</code>, which installs things into your <code>$HOME.\nAnyway, </code>pip<code> does not adjust your </code>PATH<code>, and so one possibly needs to pay attention to </code>pip<code>'s warnings, telling you to adjust </code>PATH`.</p>",
        "id": 202373865,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593468373
    },
    {
        "content": "<p>The idea is that if you know about <code>venv</code> you don't need any instruction here.</p>",
        "id": 202375157,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593469356
    },
    {
        "content": "<p>And if you don't then you won't nuke your system Python (hopefully).</p>",
        "id": 202375193,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593469380
    },
    {
        "content": "<p>Right. The target audience here are mathematicians who are terrified of the command line.</p>",
        "id": 202375518,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593469596
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202375193\">said</a>:</p>\n<blockquote>\n<p>And if you don't then you won't nuke your system Python (hopefully).</p>\n</blockquote>\n<p>this assumes that the provider of <code>leanproject</code> never screws up. :-)</p>",
        "id": 202375561,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593469646
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202375518\">said</a>:</p>\n<blockquote>\n<p>Right. The target audience here are mathematicians who are terrified of the command line.</p>\n</blockquote>\n<p>You also assume that everyone has <code>/usr/local/bin</code> in <code>PATH</code>, which need not be the case, and in this case the scripts installed by<code>sudo pip3 install mathlibtools</code> will be hidden (from the commandlinefrightened user :-)).</p>",
        "id": 202376051,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593470073
    },
    {
        "content": "<p>Of course we know this is not perfect. Any improvement is welcome.</p>",
        "id": 202376266,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593470256
    },
    {
        "content": "<p>In the rest of the docs we try and encourage the reader to download a command line which works.</p>",
        "id": 202377832,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593471523
    },
    {
        "content": "<p>Whats wrong (if anything) with <code>pip3 install --user mathlibtools</code> instead? (I think I've subconsciously been using that all along, but I'm not sure)</p>",
        "id": 202378063,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1593471673
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202378063\">said</a>:</p>\n<blockquote>\n<p>Whats wrong (if anything) with <code>pip3 install --user mathlibtools</code> instead? (I think I've subconsciously been using that all along, but I'm not sure)</p>\n</blockquote>\n<p>indeed, this is better than using <code>sudo</code> - some people are on shared computers, you know. I've made<br>\n<a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/74\">https://github.com/leanprover-community/leanprover-community.github.io/pull/74</a></p>",
        "id": 202378468,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593471999
    },
    {
        "content": "<p>Insulting us won't improve things.</p>",
        "id": 202378855,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593472396
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202378855\">said</a>:</p>\n<blockquote>\n<p>Insulting us won't improve things.</p>\n</blockquote>\n<p>excuse me? how am i insulting anyone here?</p>",
        "id": 202378956,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593472506
    },
    {
        "content": "<p>a student might want to work on the project from a shared computer in a lab. She won't have the rights to do <code>sudo</code>?</p>",
        "id": 202379049,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593472582
    },
    {
        "content": "<p>jeez...</p>",
        "id": 202379080,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593472622
    },
    {
        "content": "<p>where is an insult? that I assumed I know a thing or two more about Python than you guys? yes I do. if you find it insulting I'll leave.</p>",
        "id": 202379167,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593472692
    },
    {
        "content": "<p>i think some of us are appreciative to hear about better solutions</p>",
        "id": 202379208,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593472756
    },
    {
        "content": "<p>so far I think you mostly have pointed to decisions that <code>leanproject</code> maintainers  made and implied that they are obviously bad</p>",
        "id": 202379241,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593472801
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252300\">Jalex Stark</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202379208\">said</a>:</p>\n<blockquote>\n<p>i think some of us are appreciative to hear about better solutions</p>\n</blockquote>\n<p>it is well-known that it's better not to use <code>sudo</code> if you can aviod it. besides, there are settings you can't do sudo. Say, you came to Oberwolfach and your laptop died, so you use a shared Linux machine, no sudo...</p>",
        "id": 202379346,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593472913
    },
    {
        "content": "<p>I think the main goal of these instructions is to maximize the probability that the user gets a working install without quitting</p>",
        "id": 202379430,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593472980
    },
    {
        "content": "<p>I've spent some time writing a PR that was closed as insulting. I want to hear an apology for this, to begin with...</p>",
        "id": 202379457,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593473008
    },
    {
        "content": "<p>when you say it is well-known that it is \"better\" not to use <code>sudo</code>, your notion of better may not be aligned with the goals of this project, and in fact it may require a nontrivial argument to see whether it is better or not</p>",
        "id": 202379547,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593473076
    },
    {
        "content": "<p>Why was my attempt to contribute something deemed an insult? This is just crazy.</p>",
        "id": 202379587,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593473128
    },
    {
        "content": "<p>I think the thing in your PR that causes me not to take it seriously is \"(look, no <code>sudo</code>)\". Who is the audience of that remark?</p>",
        "id": 202379589,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593473129
    },
    {
        "content": "<p>it's insulting that you seem very certain your change furthers our goals, notice that we don't have the same level of certainty, and don't seem to make any epistemic update</p>",
        "id": 202379706,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593473237
    },
    {
        "content": "<p>I am open to criticism, I can edit things if they can be improved. I can edit this joke out, sure.</p>",
        "id": 202379715,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593473249
    },
    {
        "content": "<p>I think the development cycle we usually do is have a zulip thread to figure out whether a change is desired before opening a PR</p>",
        "id": 202379792,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593473301
    },
    {
        "content": "<p>so could you explain what kinds of trouble we can cause for people by instructing them to use sudo? we don't seem to have any empirical evidence of such a problem</p>",
        "id": 202379934,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593473412
    },
    {
        "content": "<p>There was a remark \"Any improvement is welcome\". So I made a PR. Whcih was closed as \"insulting\", by the same  who said \"welcome\". This is gaslighting of worst kind.</p>",
        "id": 202379941,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593473421
    },
    {
        "content": "<p>I think without the \"(look, no <code>sudo</code>)\" is fine, but it should also be applied to the <code>linux.md</code> <code>macos.md</code> right? It seems windows is alright as it is.</p>",
        "id": 202380037,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1593473501
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252300\">Jalex Stark</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202379934\">said</a>:</p>\n<blockquote>\n<p>so could you explain what kinds of trouble we can cause for people by instructing them to use sudo? we don't seem to have any empirical evidence of such a problem</p>\n</blockquote>\n<p>if a rogue contribution gets in then a lot of damage may be done by installing your project with <code>sudo</code>.</p>",
        "id": 202380118,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593473558
    },
    {
        "content": "<p>I see. so this is a security issue of the sort \"if someone wants to infect a bunch of mathematician's computers with malware, they only have to pass the review process for <code>elan</code>\"?</p>",
        "id": 202380163,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593473615
    },
    {
        "content": "<p>well, just someone with commit rights gets angry... this is what happens now and then.</p>",
        "id": 202380248,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593473681
    },
    {
        "content": "<p>this seems like the sort of thing that sufficiently small communities should ignore and sufficiently large communities should pay attention to.</p>",
        "id": 202380287,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593473727
    },
    {
        "content": "<p>well, you turn some people away, just because you ask them to install things with <code>sudo</code>. They might not trust you 100%. Neither they should.</p>",
        "id": 202380401,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593473820
    },
    {
        "content": "<p>I think the issue of shared machines where people do not have sudo is also quite relevant, its pretty common in academic departments after all.</p>",
        "id": 202380435,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1593473850
    },
    {
        "content": "<p>Many departments issue people laptops without <code>sudo</code> rights, too.</p>",
        "id": 202380511,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593473908
    },
    {
        "content": "<p>bad things happen, projects, big or small, get hacked, binary blobs infused with malware, etc. GitHub might get hacked.</p>",
        "id": 202380758,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593474166
    },
    {
        "content": "<p>if we hope to improve our advice, we should aim to make the new advice about as foolproof as the old advice, (so that we don't lose people in the other direction, where the instructions were too hard) and as easy to follow as copy pasting terminal commands and answering yes/no questions about their outputs</p>",
        "id": 202380978,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593474368
    },
    {
        "content": "<p>the present advice is not foolproof, not only as sudo rights might be absent, but also as it assumes that /usr/local/bin is in PATH. Which might or might not be the case.</p>",
        "id": 202383447,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593476460
    },
    {
        "content": "<p>We do want to make sure we keep the instructions as simple as possible. Once we've sorted out the \"preferred suggestion\", we should write the install instructions so as to present just that one suggestion, and then either on a second page or at the bottom of the page we can have the \"advanced usage\" notes, e.g. explaining how to check and fix your PATH, or to use whichever of <code>sudo</code> and <code>--user</code> isn't the preferred suggestion.</p>",
        "id": 202392863,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593489407
    },
    {
        "content": "<p>Can someone tell me what is the downside of <code>--user</code>?<br>\nI've been using it all the time (because I don't care to look up my <code>sudo</code> password, yes, it's long). As far as I can see it doesn't make anything any more complicated.</p>",
        "id": 202393650,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593490001
    },
    {
        "content": "<p>I sense a lot of pushback to a change that is (as far as I can see) very innocent, and arguably an improvement.</p>",
        "id": 202393674,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593490036
    },
    {
        "content": "<p>Sure the <code>(look, no sudo)</code> might better be left out. But come on guys. Don't overreact if someone is making a first PR.</p>",
        "id": 202393697,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593490062
    },
    {
        "content": "<p>I'd like to suggest yet another way of installing <code>leanproject</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>python3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install mathlibtools\n</code></pre></div>\n\n\n<p><code>pipx</code> is essentially a wrapper around <code>pip</code> for installing end-user applications. The second command automatically adds the correct directories to the user's <code>PATH</code>. The third command installs <code>leanproject</code> (no <code>sudo</code> required) and it also does all the venv isolation magic. This way of installing should also protect against accidentally using Python 2.</p>",
        "id": 202406685,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1593505164
    },
    {
        "content": "<p>Wheels within wheels! :-)</p>",
        "id": 202407165,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593505532
    },
    {
        "content": "<p>By the way, I don't see why the whole process of installing elan+mathlibtools is not wrapped into one command.</p>",
        "id": 202411905,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593508796
    },
    {
        "content": "<p>It is</p>",
        "id": 202411966,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593508823
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260921\">Markus Himmel</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202406685\">said</a>:</p>\n<blockquote>\n<p>I'd like to suggest yet another way of installing <code>leanproject</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>python3 -m pip install --user pipx\npython3 -m pipx ensurepath\npipx install mathlibtools\n</code></pre></div>\n\n\n<p><code>pipx</code> is essentially a wrapper around <code>pip</code> for installing end-user applications. The second command automatically adds the correct directories to the user's <code>PATH</code>. The third command installs <code>leanproject</code> (no <code>sudo</code> required) and it also does all the venv isolation magic. This way of installing should also protect against accidentally using Python 2.</p>\n</blockquote>\n<p>neat, I didn't know about pipx!</p>",
        "id": 202411986,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593508847
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"316505\">@Dima Pasechnik</span> See the one-liner on <a href=\"https://leanprover-community.github.io/install/debian.html\">https://leanprover-community.github.io/install/debian.html</a></p>",
        "id": 202412000,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1593508861
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202412000\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"316505\">Dima Pasechnik</span> See the one-liner on <a href=\"https://leanprover-community.github.io/install/debian.html\">https://leanprover-community.github.io/install/debian.html</a></p>\n</blockquote>\n<p>ah, OK.</p>",
        "id": 202413448,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593509799
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202393697\">said</a>:</p>\n<blockquote>\n<p>Sure the <code>(look, no sudo)</code> might better be left out. But come on guys. Don't overreact if someone is making a first PR.</p>\n</blockquote>\n<p>I probably did a hundred PRs on GitHub (107 closed and 12 open currently, as GH dashbord tells me), but this is the 1st one that turned into a PR disaster. One way or another, I'd really suggest someone removing/hiding that <code>We're not interested in merging insults to the community.</code> before it's all over social media...</p>",
        "id": 202414033,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593510169
    },
    {
        "content": "<p>I agree. I have hidden Patrick's message (but if he really wants to he can definitely unhide it!).</p>",
        "id": 202414401,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1593510396
    },
    {
        "content": "<p>Do you think you can also amend your PR to remove the sudo joke, and then maybe we can forget about all this and start afresh? I am really happy to have you here, and I think your PR is an improvement on what we currently have. But mathlibtools is Patrick's baby, so he will have the final word on this.</p>",
        "id": 202414484,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1593510481
    },
    {
        "content": "<p>Sorry, but I don't think I can do anything here without receiving an assurance that my time here won't be wasted on having to digest more random insults.</p>",
        "id": 202416778,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593512140
    },
    {
        "content": "<p>I would also like to see <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> elaborate on what exactly constituted an insult in that PR</p>",
        "id": 202421823,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1593516027
    },
    {
        "content": "<p>I have opened <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/77\">leanprover-community.github.io#77</a> and <a href=\"https://github.com/leanprover-community/mathlib-tools/issues/63\">mathlib-tools#63</a>.</p>",
        "id": 202454386,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1593531831
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260921\">Markus Himmel</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202454386\">said</a>:</p>\n<blockquote>\n<p>I have opened <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/77\">leanprover-community.github.io#77</a> and <a href=\"https://github.com/leanprover-community/mathlib-tools/issues/63\">mathlib-tools#63</a>.</p>\n</blockquote>\n<p>This looks great! Thanks Markus and Dima for the contributions.</p>",
        "id": 202454934,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593532029
    },
    {
        "content": "<p>Once again: there is no problem with proposing improved installation instructions. The current instructions are a workaround which is far from being fully satisfactory. The main issue it solves is <a href=\"https://github.com/pypa/pip/issues/3813\">https://github.com/pypa/pip/issues/3813</a>. Experience so far proves that people who don't have an intensive use of python can use this workaround without trouble, and people who work with python know how to do better (I certainly don't use this workaround myself).</p>\n<p>But I'd be very happy to have a better solution, especially in <a href=\"https://leanprover-community.github.io/install/debian_details.html\">debian_details</a> which is written for Debian/Ubuntu users who actively clicked to see more details about what is going on in the automatic installation.  I'm not happy with Dima's \"jokes\" (since this seems to be the official word here), but this is not a big deal. I should have commented on the tone of the PR instead of closing it immediately, but I was tired yesterday when I saw it. It was 1am here and I should have gone to bed first.</p>\n<p>Dima, I really don't think your style of communication is helpful, but hopefully you can still have fun with Lean and maybe even bring interesting things here.</p>",
        "id": 202498194,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593552926
    },
    {
        "content": "<p>The pipx thing seems interesting, I didn't know about it. Did anyone tried it? If yes then I'd happily recommend it in the detailed instructions. However it somehow feels more intrusive to use in the automatic procedure.</p>",
        "id": 202498319,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593552997
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202498319\">said</a>:</p>\n<blockquote>\n<p>Did anyone tried it?</p>\n</blockquote>\n<p>I use <code>pipx</code> to manage my <code>leanproject</code> installation, and it works perfectly well as far as I can tell.</p>\n<blockquote>\n<p>However it somehow feels more intrusive to use in the automatic procedure.</p>\n</blockquote>\n<p>I see where you're coming from, but to me it also feels intrusive to use a known-suboptimal installation method in the automatic script.</p>",
        "id": 202536984,
        "sender_full_name": "Markus Himmel",
        "timestamp": 1593587342
    },
    {
        "content": "<p>the role of pipx here is pretty limited, it basically makes sure that <code>~/.local/bin</code> is in your PATH. It certainly is possible to achieve the same in 5-10 lines of bash script, but is it worthwhile? The less code to maintain the better, just let pipx do the heavy lifting.</p>",
        "id": 202546867,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593595024
    },
    {
        "content": "<p>Oh, I certainly don't want to maintain code that fiddle with PATH, so using pipx is clearly better than rolling our own.</p>",
        "id": 202547508,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593595456
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202498194\">said</a>:</p>\n<blockquote>\n<p>Dima, I really don't think your style of communication is helpful, but hopefully you can still have fun with Lean and maybe even bring interesting things here.</p>\n</blockquote>\n<p>Patrick, please note that our communication here goes through multiple language barriers (me being Russian/English/Dutch speaker--- much preferring Dutch directness, while often getting lost in English English politeness) in our heads, and things might get lost or maimed in translation.</p>\n<p>As well, please point at the particular comments from me (before the moment you closed the PR <a href=\"https://github.com/leanprover-community/mathlib/issues/74\">#74</a>) that you didn't like. I am always eager to learn to irritate people less.</p>",
        "id": 202547887,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593595745
    },
    {
        "content": "<p>I think many people told you what was wrong, the <em>look, no sudo</em> \"joke\" . I've seen a lot of GH PRs, but I've never seen any PR containing mockery laughing at how the project you want to \"contribute to\" handles things. People certainly laugh at other people, but usually they're not enough aggressive to PR their mockery to the project they laugh at.</p>",
        "id": 202548633,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593596290
    },
    {
        "content": "<p>Crap, I may have merged <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/77\">https://github.com/leanprover-community/leanprover-community.github.io/pull/77</a> too quickly. When reviewing the companion doc PR I wanted to check that pipx supports Windows, and I noticed they require python 3.6+. Again this is no problem with python users, but we also want to serve people who don't care about python.</p>",
        "id": 202548841,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593596459
    },
    {
        "content": "<p>Why should this be a problem? People who don't care about python will just install it to get Lean, and then they will get a recent python.</p>",
        "id": 202549048,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1593596593
    },
    {
        "content": "<p>I'm afraid of people having a system that already has python 3.5.</p>",
        "id": 202549085,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593596624
    },
    {
        "content": "<p>I have now idea what people actually use. Ubuntu has been on python 3.6 since 18.04.</p>",
        "id": 202549184,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593596655
    },
    {
        "content": "<p>But python3.5 is not even deprecated by the the python foundation.</p>",
        "id": 202549216,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593596674
    },
    {
        "content": "<p>3.6 is there since at least 2017, so I think it's pretty safe.</p>",
        "id": 202549237,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1593596687
    },
    {
        "content": "<p>What is the situation on Windows? You need to install python by yourself anyway, right?</p>",
        "id": 202549329,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593596753
    },
    {
        "content": "<p>Yes.</p>",
        "id": 202549392,
        "sender_full_name": "Sebastien Gouezel",
        "timestamp": 1593596773
    },
    {
        "content": "<p>Just to add to the multiple languages issues, there's a common phrase in (american?) english: \"Look ma, no hands!\" (said as if riding a bike) that is often intended in a sort of self-deprecating manner --- that you're both showing off and knowing that it's not important. I won't presume to guess whether the \"look, no sudo\" phrasing was related to this. Let's all just aim for clear communication and assuming the best of unclear communications. :-)</p>",
        "id": 202549422,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593596783
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110031\">Patrick Massot</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202548633\">said</a>:</p>\n<blockquote>\n<p>I think many people told you what was wrong, the <em>look, no sudo</em> \"joke\" . I've seen a lot of GH PRs, but I've never seen any PR containing mockery laughing at how the project you want to \"contribute to\" handles things. People certainly laugh at other people, but usually they're not enough aggressive to PR their mockery to the project they laugh at.</p>\n</blockquote>\n<p>And some people told me they liked the joke. A PR is something that is meant to be changed if needed, something that is often meant for discussion. It's not a direct commit into master. It might have been inappropriate to have it there, and not on this chat, but I bet only you saw it as \"mocking the project\" and \"aggressive\".</p>",
        "id": 202550030,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593597169
    },
    {
        "content": "<p>what happens to a windows user with python3.5 installed if they try to follow the instructions?</p>",
        "id": 202550422,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593597458
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252300\">Jalex Stark</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202550422\">said</a>:</p>\n<blockquote>\n<p>what happens to a windows user with python3.5 installed if they try to follow the instructions?</p>\n</blockquote>\n<p>then you will see the error message from pipx, as follows <a href=\"https://github.com/pipxproject/pipx/blob/4bb7a23cfa88bfdf0f3651e590ad24e8c1b6d8a1/setup.py#L6\">https://github.com/pipxproject/pipx/blob/4bb7a23cfa88bfdf0f3651e590ad24e8c1b6d8a1/setup.py#L6</a></p>\n<div class=\"codehilite\"><pre><span></span><code>        <span class=\"s2\">&quot;Python 3.6 or later is required. &quot;</span>\n        <span class=\"s2\">&quot;See https://github.com/pipxproject/pipx &quot;</span>\n        <span class=\"s2\">&quot;for installation instructions.&quot;</span>\n</code></pre></div>\n\n\n<p>(hopefully)</p>",
        "id": 202550849,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593597702
    },
    {
        "content": "<p>that seems like a good error message</p>",
        "id": 202550919,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593597735
    },
    {
        "content": "<p>can pip be used to install newer versions of python? (quick googling suggests no)</p>",
        "id": 202551062,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593597850
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252300\">Jalex Stark</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202551062\">said</a>:</p>\n<blockquote>\n<p>can pip be used to install newer versions of python? (quick googling suggests no)</p>\n</blockquote>\n<p>no, don't think so - but note that Python 3.6 has been released in 2016. Apart from some weird HPC Linux clusters it's probably hard to find Python 3.5 used as the main Python. Even FreeBSD switched to Python 3.7...</p>",
        "id": 202551410,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593598106
    },
    {
        "content": "<p>right, I think the only people we are worried about here are windows users. we already give them instructions on how to install \"the latest version of python\", so I think we should just emphasize that they need 3.6+</p>",
        "id": 202551476,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1593598163
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202549422\">said</a>:</p>\n<blockquote>\n<p>Just to add to the multiple languages issues, there's a common phrase in (american?) english: \"Look ma, no hands!\" (said as if riding a bike) that is often intended in a sort of self-deprecating manner --- that you're both showing off and knowing that it's not important. I won't presume to guess whether the \"look, no sudo\" phrasing was related to this. Let's all just aim for clear communication and assuming the best of unclear communications. :-)</p>\n</blockquote>\n<p>I certainly didn't mean anything ill; e.g. it's used in the same way here in discussing of some detail of Python's distutils:<br>\n<a href=\"https://mail.python.org/pipermail/distutils-sig/2009-February/011042.html\">https://mail.python.org/pipermail/distutils-sig/2009-February/011042.html</a></p>",
        "id": 202551869,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593598417
    },
    {
        "content": "<p>I think it is clear that we should try not to put jokes in official documentation due to the risk of being misunderstood across language and cultural barriers. That said it seems that the misunderstanding is cleared up and we don't need to marginalize anyone for it. I think it is okay to open another PR for the change (or reopen it, if possible) if it is still deemed worthwhile.</p>",
        "id": 202551874,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1593598420
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202551874\">said</a>:</p>\n<blockquote>\n<p>I think it is clear that we should try not to put jokes in official documentation due to the risk of being misunderstood across language and cultural barriers. That said it seems that the misunderstanding is cleared up and we don't need to marginalize anyone for it. I think it is okay to open another PR for the change (or reopen it, if possible) if it is still deemed worthwhile.</p>\n</blockquote>\n<p>I hope it's cleared up, and also a better version of the ill-fated PR has  already been made:  leanprover-community.github.io#77</p>",
        "id": 202552169,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593598580
    },
    {
        "content": "<p>I guess Markus Himmel has already PR'd the relevant bits</p>",
        "id": 202552184,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1593598593
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260921\">Markus Himmel</span> <a href=\"#narrow/stream/113489-new-members/topic/lean.2C.20elan.2C.20leanpkg.2C.20leanproject.20--.20documentation.3F/near/202454386\">said</a>:</p>\n<blockquote>\n<p>I have opened <a href=\"https://github.com/leanprover-community/leanprover-community.github.io/pull/77\">leanprover-community.github.io#77</a> and <a href=\"https://github.com/leanprover-community/mathlib-tools/issues/63\">mathlib-tools#63</a>.</p>\n</blockquote>\n<p>I just found that Debian 10 has <code>pipx</code> package. While installing <code>pipx</code> via <code>pip</code> is a more universal solution, <br>\nprobably Debian people might prefer <a href=\"https://packages.debian.org/buster/pipx\">https://packages.debian.org/buster/pipx</a></p>",
        "id": 202552658,
        "sender_full_name": "Dima Pasechnik",
        "timestamp": 1593598991
    },
    {
        "content": "<p>Apologies if this has been discussed before, but could we rename <code>mathlibtools</code> to <code>leanproject</code>? I'm aware that there are some other components of <code>mathlibtools</code>, but <code>leanproject</code> is by far the most important one at this point, and certainly the most important for new users.</p>",
        "id": 202553613,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593599779
    },
    {
        "content": "<p>alternatively, we could move <code>leanproject</code> to a new repo</p>",
        "id": 202554444,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1593600413
    }
]