[
    {
        "content": "<p>I have an odd situation in <a href=\"https://github.com/leanprover-community/mathlib/tree/SP_algebra_big_operators_prime\">branch#SP_algebra_big_operators_prime</a> (<a href=\"https://github.com/leanprover-community/mathlib/pull/10675\">#10675</a>): in my local files I have the file <code>algebra/big_operators/associated.olean</code> but <em>not</em> <code>algebra/big_operators/associated.lean</code>.  This branch was created before <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> posted  <a href=\"https://github.com/leanprover-community/mathlib/pull/10848\">#10848</a> which created <code>big_operators/associated</code>, if that makes any difference.  I'm pretty sure I haven't deleted the <code>.lean</code> file, and I've updated a few times (with <code>leanproject --debug up</code>) since noticing the missing file, but it hasn't appeared.</p>",
        "id": 265558975,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1640005227
    },
    {
        "content": "<p>Oh, and if I switch to the <code>master</code> branch then both <code>associated.olean</code> and <code>associated.lean</code>  are present.</p>",
        "id": 265559198,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1640005337
    },
    {
        "content": "<p>The <code>olean</code> file probably stuck around from switching branches, that isn't something to worry about. To get access to the new <code>associated.lean</code> in your branch, you can run the commands <code>git merge master; leanproject get-cache --rev=master</code> (the latter ensures you have fresh olean files for the master branch)</p>",
        "id": 265559300,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1640005407
    },
    {
        "content": "<p>Aha, that's got it!  Thank you!</p>",
        "id": 265559630,
        "sender_full_name": "Stuart Presnell",
        "timestamp": 1640005614
    },
    {
        "content": "<p>Whenever I get nervy about oleans I just run <code>find . -iname \"*.olean\" -execdir rm '{}' \\;</code> in an appropriate directory (it removes all oleans in all subdirectories of where you are) and then <code>leanproject get-cache</code> or <code>leanproject get-m</code> depending on whether I'm working on mathlib or on a project which depends on mathlib.</p>",
        "id": 265562270,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640007072
    },
    {
        "content": "<p>I think <code>leanproject delete-zombies</code> should delete these orphaned oleans for you</p>",
        "id": 265573473,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1640012297
    }
]