[
    {
        "content": "<p>still trying to figure out the basics, what's the best way to define a variable with a given expression? Like \"let d = n - m in the rest of the proof...\". If I write <code>let d := n - m</code>, then I get <code>d: ℤ := n - m</code> as a hypothesis in my current goal, but I don't know how to get the _equation_ I want, which is that <code>d = n - m</code>, too.</p>",
        "id": 256503118,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1633564968
    },
    {
        "content": "<p>Use <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#set\">tactic#set</a> instead of <code>let</code></p>",
        "id": 256503251,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1633565058
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"448405\">Alex Meiburg</span> has marked this topic as resolved.</p>",
        "id": 256503333,
        "sender_full_name": "Notification Bot",
        "timestamp": 1633565129
    },
    {
        "content": "<p>oops thanks!</p>",
        "id": 256503338,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1633565131
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"448405\">@Alex Meiburg</span> FYI, if you use <code>let</code>, then you could follow up with a line</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"n\">hd</span> <span class=\"o\">:</span> <span class=\"n\">d</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">-</span> <span class=\"n\">m</span> <span class=\"o\">:=</span> <span class=\"n\">rfl</span><span class=\"o\">,</span>\n</code></pre></div>\n<p>to get the equation.</p>",
        "id": 256526837,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1633585589
    },
    {
        "content": "<p>Ah, good to know. I have more of a sense now of how <code>set</code> works</p>",
        "id": 256629428,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1633632479
    },
    {
        "content": "<p>How do I rewrite inside of an \\exists? I have <code>t3 : ∃ (d : ℕ), n - m = ↑d</code> and <code>t4 : ∀ (a b c : ℤ), a - c = b ↔ a = c + b</code> and want to get <code>∃ (d : ℕ), n = m + ↑d</code>. But if I do <code>rw t4 at t3</code> it says it can't find a matching target. If I try to manually supply <code>rw t4 n ↑d m at t3</code>, well it doesn't know any of any identifier <code>d</code>.</p>",
        "id": 256642369,
        "sender_full_name": "Alex Meiburg",
        "timestamp": 1633637647
    },
    {
        "content": "<p>This is a common annoyance, but <code>simp only [***]</code> will see inside an existential.</p>",
        "id": 256642784,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1633637846
    },
    {
        "content": "<p>You can use <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#conv\">tactic#conv</a> too, but it's not as pleasant.</p>",
        "id": 256644265,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1633638374
    }
]