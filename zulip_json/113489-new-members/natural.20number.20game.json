[
    {
        "content": "<p>Hey guys! I'm new to the lean-community and hope this is the right way to ask questions. </p>\n<p>I'm starting to learn Lean by the excellent tutorial <a href=\"https://cbirkbeck.github.io/natural_number_game/\">natural_number_game</a>, and I would like to do it locally since the website doesn't keep my progress sometimes.</p>\n<p>Also, I find a <a href=\"https://github.com/ImperialCollegeLondon/natural_number_game\">GitHub-repo</a> for the game, but fails to import the library in my machine. I'm wondering if there is a way to do it properly.</p>\n<p>![深度截图_选择区域_20221213222226](<a href=\"https://cdn.jsdelivr.net/gh/zhihongecnu/PicBed3/picgo/深度截图_选择区域_20221213222226.png\">https://cdn.jsdelivr.net/gh/zhihongecnu/PicBed3/picgo/深度截图_选择区域_20221213222226.png</a>)</p>\n<div class=\"message_inline_image\"><a href=\"https://cdn.jsdelivr.net/gh/zhihongecnu/PicBed3/picgo/深度截图_选择区域_20221213222226.png\"><img src=\"https://uploads.zulipusercontent.net/ab42e0e2c1dbc5430d9dbbe6b96921c859c0a546/68747470733a2f2f63646e2e6a7364656c6976722e6e65742f67682f7a6869686f6e6765636e752f506963426564332f706963676f2fe6b7b1e5baa6e688aae59bbe5fe98089e68ba9e58cbae59f9f5f32303232313231333232323232362e706e67\"></a></div><p>Thanks in advance!</p>",
        "id": 315602472,
        "sender_full_name": "RexWang",
        "timestamp": 1670941423
    },
    {
        "content": "<p>You need to use the \"Open folder\" option in vscode to open the folder \"natural_number_game\".</p>\n<p>Also its easier to keep things organised if you make a new thread for your question in future <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 315603638,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1670941776
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113489-new-members/topic/Contributing.20to.20mathlib/near/315603638\">发言道</a>：</p>\n<blockquote>\n<p>You need to use the \"Open folder\" option in vscode to open the folder \"natural_number_game\".</p>\n<p>Also its easier to keep things organised if you make a new thread for your question in future :)</p>\n</blockquote>\n<p>Thanks a lot!  I just noticed the post tags on Zulip.</p>",
        "id": 315605596,
        "sender_full_name": "RexWang",
        "timestamp": 1670942304
    },
    {
        "content": "<p>3 messages were moved here from <a class=\"stream-topic\" data-stream-id=\"113489\" href=\"/#narrow/stream/113489-new-members/topic/Contributing.20to.20mathlib\">#new members &gt; Contributing to mathlib</a> by <span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span>.</p>",
        "id": 315606032,
        "sender_full_name": "Notification Bot",
        "timestamp": 1670942428
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"572535\">RexWang</span> has marked this topic as resolved.</p>",
        "id": 315606638,
        "sender_full_name": "Notification Bot",
        "timestamp": 1670942568
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"572535\">RexWang</span> has marked this topic as unresolved.</p>",
        "id": 315606790,
        "sender_full_name": "Notification Bot",
        "timestamp": 1670942604
    },
    {
        "content": "<p>The last question in the Advanced Proposition world has left me confused. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">contrapositive2</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">¬</span> <span class=\"n\">Q</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"bp\">→</span> <span class=\"n\">Q</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>The hint suggests <strong>using a black box strategy <code>cc</code></strong>. But in the previous six worlds, a pattern of axioms + reasoning was used, which makes this step difficult for me to accept. Is there a handwritten solution to this problem?</p>\n<hr>\n<p>If I understand correctly, the tactic <code>exfalso</code> and <code>by_cases</code> are equivalent to introducing the following axioms to express the principle of contradiction:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">false</span> <span class=\"bp\">→</span> <span class=\"n\">P</span>\n<span class=\"n\">Q</span> <span class=\"bp\">→</span> <span class=\"n\">P</span> <span class=\"bp\">∨</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"bp\">→</span> <span class=\"n\">false</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>Is it possible to reason about this problem based on these axioms, or by introducing more axioms, rather than using the cc strategy?</p>",
        "id": 315964297,
        "sender_full_name": "RexWang",
        "timestamp": 1671084170
    },
    {
        "content": "<p>(<code>by_cases</code> is actually equivalent to just <code>P ∨ (P → false)</code>, a theorem available under the name <code>em</code> for excluded middle)</p>",
        "id": 315966573,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671085747
    },
    {
        "content": "<p>Yes you can prove it with just <code>em</code> and basic logic. Hint: do cases on <code>Q</code></p>",
        "id": 315966608,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671085777
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/natural.20number.20game/near/315966608\">发言道</a>：</p>\n<blockquote>\n<p>Yes you can prove it with just <code>em</code> and basic logic. Hint: do cases on <code>Q</code></p>\n</blockquote>\n<p>Thank you very much! Here might be a proof(incomplete).</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">contrapositive2</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">¬</span> <span class=\"n\">Q</span> <span class=\"bp\">→</span> <span class=\"bp\">¬</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"bp\">→</span> <span class=\"n\">Q</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">f</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"c1\">-- skip to claim an element of Q</span>\n  <span class=\"n\">by_cases</span> <span class=\"n\">q</span><span class=\"o\">:</span> <span class=\"n\">Q</span><span class=\"o\">,</span> <span class=\"c1\">-- divide into two goals: Q is true or false</span>\n  <span class=\"c1\">-- if Q is true than P → Q is trivial</span>\n  <span class=\"n\">exact</span> <span class=\"n\">q</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- if Q is not true, i.e. ∃ q ∈ ¬Q</span>\n  <span class=\"c1\">-- we work on the left side of the prop. P → Q</span>\n  <span class=\"k\">have</span> <span class=\"n\">np</span> <span class=\"o\">:=</span> <span class=\"n\">f</span><span class=\"o\">(</span><span class=\"n\">q</span><span class=\"o\">),</span> <span class=\"c1\">-- fq : ¬P</span>\n  <span class=\"c1\">-- get an element of ¬P, so ¬P is true</span>\n  <span class=\"c1\">-- it remains to prove ¬P ∧ P → Q</span>\n  <span class=\"k\">have</span> <span class=\"n\">pnp</span> <span class=\"o\">:</span> <span class=\"n\">P</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span><span class=\"n\">P</span><span class=\"o\">,</span> <span class=\"c1\">-- we first construct ¬P ∧ P</span>\n    <span class=\"n\">split</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">p</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">np</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- a lemma before, we know that ¬P ∧ P → false</span>\n  <span class=\"n\">apply</span> <span class=\"n\">contra</span> <span class=\"n\">P</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">pnp</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>But I got stuck at the last step: how can I apply the lemma to reduce the question? Thanks again for the suggestion!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"c1\">-- previous lemma</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">contra</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"n\">Q</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">P</span> <span class=\"bp\">∧</span> <span class=\"bp\">¬</span> <span class=\"n\">P</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">Q</span>\n<span class=\"kd\">begin</span>\n<span class=\"c1\">-- use axiom false → any, by exfalso</span>\n<span class=\"n\">rw</span> <span class=\"n\">not_iff_imp_false</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">h</span> <span class=\"k\">with</span> <span class=\"n\">p</span> <span class=\"n\">np</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">false</span> <span class=\"o\">:=</span> <span class=\"n\">np</span><span class=\"o\">(</span><span class=\"n\">p</span><span class=\"o\">),</span>\n<span class=\"n\">exfalso</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 315971640,
        "sender_full_name": "RexWang",
        "timestamp": 1671088641
    },
    {
        "content": "<p>Note that if <code>np : ¬P</code> and <code>p : P</code> then <code>np p : false</code></p>",
        "id": 315971976,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671088845
    },
    {
        "content": "<p>so <code>exfalso</code> should close the gap</p>",
        "id": 315971996,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1671088856
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"187764\" href=\"/#narrow/stream/187764-Lean-for-teaching/topic/natural.20number.20game\">#Lean for teaching &gt; natural number game</a> by <span class=\"user-mention silent\" data-user-id=\"260507\">Heather Macbeth</span>.</p>",
        "id": 319528806,
        "sender_full_name": "Notification Bot",
        "timestamp": 1672904236
    }
]