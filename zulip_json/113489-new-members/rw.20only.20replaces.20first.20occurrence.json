[
    {
        "content": "<p>Hello, I just came across this game thing called the natural number game, which teaches you lean (I never heard of it before today). I was going through it, and I came across a situation that doesn't feel right - but I have no idea how you would do this differently. </p>\n<p>I have this situation (mynat is just the natural numbers defined by the lesson - I did not make it).</p>\n<p>a b : mynat<br>\n⊢ a + b + 0 = a + (b + 0)</p>\n<p>I also have this definition:</p>\n<p>add_zero (a : mynat) :<br>\n  a + 0 = a</p>\n<p>now here is my question: when I type rw add_zero, it replaces the first b + 0 - but why I type rw add_zero b, it get rids of the second. Why is this? And why does it not get rid of both? Is there a way to replace all instances at once? Is there a way to replace a specific instance</p>",
        "id": 293332808,
        "sender_full_name": "Lucy M",
        "timestamp": 1660437679
    },
    {
        "content": "<p>Online it says rw rewites all terms simultaneously - so what am I doing wrong?</p>",
        "id": 293332946,
        "sender_full_name": "Lucy M",
        "timestamp": 1660437906
    },
    {
        "content": "<p><code>a + b + 0</code> is actually <code>(a + b) + 0</code>, so \"the first b + 0\" doesn't exist, and what rewrite does there is <code>rw add_zero (a + b)</code>. If there were actually two <code>b + 0</code>s, they would be both replaced, but here it's not the case.</p>\n<p><span class=\"user-group-mention\" data-user-group-id=\"2494\">@maintainers</span>  These should be moved to another thread.</p>",
        "id": 293333307,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1660438498
    },
    {
        "content": "<p>anyone can move posts to another thread</p>",
        "id": 293333523,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660438808
    },
    {
        "content": "<p>It seems I cannot<br>\n<a href=\"https://zulip.com/help/move-content-to-another-topic\">https://zulip.com/help/move-content-to-another-topic</a><br>\n<a href=\"/user_uploads/3121/llm9zrI9m55l4a-3jskvzW9V/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/llm9zrI9m55l4a-3jskvzW9V/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/llm9zrI9m55l4a-3jskvzW9V/image.png\"></a></div>",
        "id": 293333623,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1660438927
    },
    {
        "content": "<p>oh, I guess that got changed to mod-only</p>",
        "id": 293333715,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660439050
    },
    {
        "content": "<p>I mean I can presumably move my own post by Edit the title, but not <span class=\"user-mention\" data-user-id=\"522827\">@Lucy M</span>'s posts.</p>",
        "id": 293333716,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1660439051
    },
    {
        "content": "<p>I apologise, I did not mean to make the post here. i clicked on 'new members' so I thought it would create a new thread. I tried to move it after I posted it but I can't.</p>",
        "id": 293333754,
        "sender_full_name": "Lucy M",
        "timestamp": 1660439126
    },
    {
        "content": "<p>it's all good!</p>",
        "id": 293333868,
        "sender_full_name": "Matt Diamond",
        "timestamp": 1660439279
    },
    {
        "content": "<p>I have one more question if that is alright</p>\n<p>my solution was this:</p>\n<p>induction c with d hd,<br>\n  rw add_zero (a + b),<br>\n  rw add_zero b,<br>\n  refl,</p>\n<p>rw add_succ b d,<br>\n  rw add_succ a (b + d),<br>\n  rw add_succ (a+b),<br>\n  rw ← hd,<br>\n  refl,</p>\n<p>and the 'offical'  solution was this</p>\n<p>induction c with d hd,<br>\n  { -- ⊢ a + b + 0 = a + (b + 0)<br>\n    rw add_zero,<br>\n    rw add_zero,<br>\n    refl<br>\n  },<br>\n  { -- ⊢ (a + b) + succ d = a + (b + succ d)<br>\n    rw add_succ,<br>\n    rw add_succ,<br>\n    rw add_succ,<br>\n    rw hd,<br>\n    refl,<br>\n  }</p>\n<p>my question is what are the braces for? I tried again to search on google - but I could only get results about the braces being used in different contexts</p>",
        "id": 293334116,
        "sender_full_name": "Lucy M",
        "timestamp": 1660439536
    },
    {
        "content": "<p>(<a href=\"https://github.com/leanprover-community/mathlib/wiki/Code-in-backticks\">#backticks</a>)</p>",
        "id": 293334129,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660439568
    },
    {
        "content": "<p>The braces denote subgoals. They ensure that the subgoal is closed at the close brace, so they provide better structuring of the proof</p>",
        "id": 293334161,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660439619
    },
    {
        "content": "<p>you simulated that with an extra newline, but the braces are checked by lean</p>",
        "id": 293334212,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660439645
    },
    {
        "content": "<p>Ah, thank you - I understand, and thank you for letting me know ``` works as well!</p>",
        "id": 293334226,
        "sender_full_name": "Lucy M",
        "timestamp": 1660439678
    },
    {
        "content": "<p>Is there a way to put a lemma inside a lemma. There is a small theorem I want to make in order to make the puzzle easier but I get lots of errors when I try it</p>",
        "id": 293335892,
        "sender_full_name": "Lucy M",
        "timestamp": 1660442109
    },
    {
        "content": "<p><code>have my_lemma : statement, { proof },</code></p>",
        "id": 293335947,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660442198
    },
    {
        "content": "<p>thank you, but I think I've done it wrong</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">have</span> <span class=\"n\">add_succ_zero</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">succ</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span>\n    <span class=\"n\">induction</span> <span class=\"n\">a</span> <span class=\"k\">with</span> <span class=\"n\">d</span> <span class=\"n\">hd</span><span class=\"o\">,</span>\n    <span class=\"o\">{</span>\n      <span class=\"n\">rw</span> <span class=\"n\">zero_add</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"mi\">0</span><span class=\"o\">),</span>\n    <span class=\"o\">},</span>\n    <span class=\"o\">{</span>\n    <span class=\"n\">rw</span> <span class=\"n\">add_succ</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">d</span><span class=\"o\">)</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n    <span class=\"n\">rw</span> <span class=\"n\">add_zero</span> <span class=\"o\">(</span><span class=\"n\">succ</span> <span class=\"n\">d</span><span class=\"o\">),</span>\n    <span class=\"o\">},</span>\n  <span class=\"o\">},</span>\n</code></pre></div>\n<p>This is what I've wrote but I get an \"unexpected identifier a\" error on line 35 and \"sync\" on line 36</p>",
        "id": 293336229,
        "sender_full_name": "Lucy M",
        "timestamp": 1660442549
    },
    {
        "content": "<p>\"<code>my_lemma : statement</code>\" needs to be an ordinary type signature, not the syntax found in a top-level <code>lemma</code>. So</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"k\">have</span> <span class=\"n\">add_succ_zero</span> <span class=\"o\">:</span> <span class=\"bp\">\\</span><span class=\"n\">all</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">),</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">succ</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n</code></pre></div>\n<p>then you will need to <code>intro a</code> in the proof</p>",
        "id": 293336410,
        "sender_full_name": "Reid Barton",
        "timestamp": 1660442847
    },
    {
        "content": "<p>Thank you, I'm having a lot of trouble googling for this language - do you have any online resources I can use to learn the syntax?</p>",
        "id": 293336460,
        "sender_full_name": "Lucy M",
        "timestamp": 1660442912
    },
    {
        "content": "<p>Have you read <a href=\"https://leanprover.github.io/theorem_proving_in_lean/\">#tpil</a>?</p>",
        "id": 293336485,
        "sender_full_name": "Reid Barton",
        "timestamp": 1660442970
    },
    {
        "content": "<p>note that you might want to leave NNG and use lean proper if you are going to learn the syntax</p>",
        "id": 293336628,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660443127
    },
    {
        "content": "<p>NNG is designed so that you don't have to really interact with the syntax of the language except for the small tactic vocabulary it teaches. I don't think it even teaches braces</p>",
        "id": 293336737,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1660443295
    },
    {
        "content": "<p>No, I sometimes regret not teaching braces but students seemed to be happy with the idea that tactics just worked on the top goal so what the heck. I just feel a bit guilty that in some sense it's actively teaching bad style.</p>",
        "id": 293362833,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1660471586
    },
    {
        "content": "<p>I never teach braces because students are so confused when they get braces wrong. Error messages in Lean 3 are not very helpful when your braces aren't balanced or when you forget a comma after a closing brace.</p>",
        "id": 293378690,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1660480920
    }
]