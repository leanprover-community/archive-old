[
    {
        "content": "<p>Is there a way to convert a finite matrix <code>A : matrix (fin n) (fin n) R</code> to a type of <code>finset R</code>? I have a matrix and I want to convert it to a <code>finset</code>, extract an element of that <code>finset</code>, and then say that that must correspond to an element of the matrix. The matrix could have duplicates. So far, I understand it as I have to convert the matrix to a <code>list</code>, then a <code>multiset</code> to not worry about duplicates, then a <code>finset</code>. However, I'm not sure how I'm able to do this.</p>",
        "id": 294225443,
        "sender_full_name": "Jamie Reason",
        "timestamp": 1660899736
    },
    {
        "content": "<p>Maybe <a href=\"https://leanprover-community.github.io/mathlib_docs/data/finset/n_ary.html#finset.image%E2%82%82\"><code>finset.image₂</code></a>?</p>",
        "id": 294225575,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1660899815
    },
    {
        "content": "<p>More specifically <code>finset.image₂ A finset.univ finset.univ</code> should work.</p>",
        "id": 294225695,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1660899869
    },
    {
        "content": "<p>I don't think <code>finset</code> has a specific way to express <code>image univ</code> such as <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.range\">docs#set.range</a> would be (<a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.range\">docs#finset.range</a> is the set {0, ..., n-1} instead), so <code>image</code> is probably the most convenient way to go.</p>",
        "id": 294225859,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1660899958
    },
    {
        "content": "<p>Thanks very much. If i've used <code>finset.min'</code> for example and have an element <code>a : R</code>, is there a way to say that there must then be some indices with <code>A i j = a</code>?</p>",
        "id": 294226282,
        "sender_full_name": "Jamie Reason",
        "timestamp": 1660900143
    }
]