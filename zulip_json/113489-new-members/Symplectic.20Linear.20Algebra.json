[
    {
        "content": "<p>Hi there,<br>\nI am Moritz, postdoc in Bremen, and got recently interested in Lean. I work mainly in (microlocal) analysis and would like to contribute contribute to the distribution theory and functional analysis parts of lean. To get a feel for proving stuff in lean I am starting out with some easy linear algebra results (with a symplectic form) and I wanted to ask what is a reasonable size for a first PR. Plus my github account is mcdoll.</p>",
        "id": 261297484,
        "sender_full_name": "Moritz",
        "timestamp": 1636744275
    },
    {
        "content": "<p>Hi! You are very welcome here! We have lots of people doing algebraic geometry here. This is great but we would also love to see more analysis. You should talk to <span class=\"user-mention\" data-user-id=\"260507\">@Heather Macbeth</span> who is currently working and coordinating work both in linear algebra and Fourier theory.</p>",
        "id": 261301295,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1636746181
    },
    {
        "content": "<p>To answer your specific question, you should start with very small PRs. And first you should discuss your intended topic in a more detailed way here.</p>",
        "id": 261301382,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1636746234
    },
    {
        "content": "<p>I defined symplectic vector spaces and was going to define the various types of subspaces (isotropic, coisotropic, and Lagrangian) and prove some facts about dimensions and different characterizations of these subspaces and that taking the symplectic orthogonal of a subspace W is equal to W. Basically, I wanted to formalize the content of the homework 1 of the book of Cannas da Silva.<br>\nI need the fact that a skewsymmetric bilinear form is reflexive, this is only three lines of proof (and it is very likely that it can be reduced to 1 or 2 lines), so if you want to have very small PRs I could start with that.</p>",
        "id": 261307867,
        "sender_full_name": "Moritz",
        "timestamp": 1636749617
    },
    {
        "content": "<blockquote>\n<p>I need the fact that a skewsymmetric bilinear form is reflexive, this is only three lines of proof (and it is very likely that it can be reduced to 1 or 2 lines), so if you want to have very small PRs I could start with that.</p>\n</blockquote>\n<p>That sounds like a good start to me; lemmas are usually easier to review than new definitions</p>",
        "id": 261308522,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636750053
    },
    {
        "content": "<p>If you still need an invite then ping the maintainers</p>",
        "id": 261310307,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636750984
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>  perfect, could you add me to github? (mcdoll)</p>",
        "id": 261316304,
        "sender_full_name": "Moritz",
        "timestamp": 1636754117
    },
    {
        "content": "<p>Invite sent!</p>",
        "id": 261318489,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636755310
    },
    {
        "content": "<p>Thanks for the first PR!</p>",
        "id": 261321975,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636757804
    },
    {
        "content": "<p>Thank you for reviewing it so fast :-) The refactoring you suggested sounds good, I will look at it tomorrow.</p>",
        "id": 261323855,
        "sender_full_name": "Moritz",
        "timestamp": 1636759086
    },
    {
        "content": "<p>Concerning <a href=\"https://github.com/leanprover-community/mathlib/pull/10304#pullrequestreview-805284143\">https://github.com/leanprover-community/mathlib/pull/10304#pullrequestreview-805284143</a> is it possible to find all files in mathlib where a lemma is used? I crashed my laptop several times today by trying to build mathlib..</p>",
        "id": 261370233,
        "sender_full_name": "Moritz",
        "timestamp": 1636823397
    },
    {
        "content": "<p>also I feel like there is the general question whether properties of structures should go into the file/namespace where the structure was defined or in the file/namespace where stuff is proved in the case that the structure has this property</p>",
        "id": 261370337,
        "sender_full_name": "Moritz",
        "timestamp": 1636823516
    },
    {
        "content": "<p>Usually the thing to do is just change the lemma in the first place you find it, push the PR, and then wait for CI to tell you what you missed</p>",
        "id": 261370832,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636824201
    },
    {
        "content": "<p>You can run <code>leanproject get-cache</code> after CI fails to get a precompiled build up to the point it failed</p>",
        "id": 261370842,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636824219
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"412682\">Moritz</span> <a href=\"#narrow/stream/113489-new-members/topic/Symplectic.20Linear.20Algebra/near/261370337\">said</a>:</p>\n<blockquote>\n<p>also I feel like there is the general question whether properties of structures should go into the file/namespace where the structure was defined or in the file/namespace where stuff is proved in the case that the structure has this property</p>\n</blockquote>\n<p>I'm not entirely sure what you have in mind here, but note that decisions about filenames are quite different to decisions about namespaces</p>",
        "id": 261370917,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636824301
    },
    {
        "content": "<p>I think using VSCode's project search with the lemma name (with and without dot notation) is a good first-order approximation though</p>",
        "id": 261371072,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1636824488
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> I think the question whether the property x of a structure A belongs to the A-namespace or the A_with_x-namespace is very general and maybe this should be consistent throughout mathlib.</p>",
        "id": 261381148,
        "sender_full_name": "Moritz",
        "timestamp": 1636839402
    },
    {
        "content": "<p>Definitely the former, because if you call it <code>A.is_something</code>, then given <code>a : A</code> you can write <code>a.is_something</code> instead of having to with <code>A_with_x.is_something a</code></p>",
        "id": 261382184,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1636840835
    }
]