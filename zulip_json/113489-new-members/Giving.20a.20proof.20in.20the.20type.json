[
    {
        "content": "<p>I'm getting the type mismatch error: <code>term A has type (rset r X) but is expected to have type (rset (r - 1 + 1) X)</code>. <code>r</code> is a <code>nat</code>, so I understand why this error is happening but I have the assumption <code>r â‰¥ 1</code> - so how do I express my lemma to convince lean that these types match</p>",
        "id": 180879325,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1573857615
    },
    {
        "content": "<p>(to save anyone looking, it's <code>nat.sub_add_cancel</code> that should solve this)</p>",
        "id": 180879403,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1573857686
    },
    {
        "content": "<p>Aah, the joys of type theory. If r&gt;=1 then perhaps you should have used r' := r-1 with r'&gt;=0 instead? But you'll have to post code to get hints.</p>",
        "id": 180879960,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573858171
    },
    {
        "content": "<p>This sort of issue can sometimes result in a redesign. I'll dig out the cdga thread to show you type theory at its worst.</p>",
        "id": 180880038,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573858218
    },
    {
        "content": "<p>Yeah, it turned out to be nicer to express it like that - but this is the sort of thing I feel like I'll come across again, where redesigns don't seem like the right approach</p>",
        "id": 180880155,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1573858339
    },
    {
        "content": "<p><a href=\"#narrow/stream/116395-maths/topic/CDGAs/near/167848869\" title=\"#narrow/stream/116395-maths/topic/CDGAs/near/167848869\">https://leanprover.zulipchat.com/#narrow/stream/116395-maths/topic/CDGAs/near/167848869</a></p>",
        "id": 180880159,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573858344
    },
    {
        "content": "<p>Hopefully you can just insert an appropriate rewrite and it will sort you out. Reid chose an intentionally nasty example, and various solutions were proposed there.</p>",
        "id": 180880553,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1573858729
    },
    {
        "content": "<p>For Lean to accept a term of type <code>rset (r-1+1) X</code> in a place where <code>rset r X</code> is expected, you have to <code>cast</code>/rewrite it using a proof of <code>r-1+1 = r</code>. This is because the Lean typechecker doesn't \"know\" that these are the same if <code>r \\geq 1</code>.</p>",
        "id": 180880940,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1573859050
    }
]