[
    {
        "content": "<p>I'm making a Odd + Even = Odd? Even * Anything = Even? Prove it!-kata on Codewars, but I'm stuck even_mul_even, I know that n is even and I know that sums of even numbers are even, now I want to show that that n * 2 is even, but I can't find a way to convert n * 2 to n + n. Any advice?</p>",
        "id": 195068233,
        "sender_full_name": "Emiel Lanckriet",
        "timestamp": 1587651928
    },
    {
        "content": "<p>I guess you could prove it by induction</p>",
        "id": 195068534,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587652046
    },
    {
        "content": "<p>When I did that kata I proved a couple of things which weren't asked for, to make my life easier.</p>",
        "id": 195068600,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587652079
    },
    {
        "content": "<p>Ok, thanks I'll try to prove n*2=n+n by induction in a separate function.</p>",
        "id": 195068821,
        "sender_full_name": "Emiel Lanckriet",
        "timestamp": 1587652184
    },
    {
        "content": "<p>I guess we're hoping to keep codewars spoiler questions off this site in general, although most Lean questions are welcomed :-)</p>",
        "id": 195069138,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1587652308
    },
    {
        "content": "<p>I'm not sure I like this, we've never had to censor solutions before, despite several lean classes being taught</p>",
        "id": 195069366,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587652391
    },
    {
        "content": "<p>It means that the more people make katas the less we can talk about, and the censorship has no end date</p>",
        "id": 195069723,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587652522
    },
    {
        "content": "<p>anyway, there is a theorem <code>two_mul</code></p>",
        "id": 195070080,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587652661
    },
    {
        "content": "<p>Is there a place where I can easily look up these theorems, because for the moment I look at the sidelines of the natural numbers game, but some of it doesn't translate to Lean in general.</p>",
        "id": 195070651,
        "sender_full_name": "Emiel Lanckriet",
        "timestamp": 1587652850
    },
    {
        "content": "<p>there is the lean docs</p>",
        "id": 195070699,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587652875
    },
    {
        "content": "<p>Are you using VSCode? if so, press <code>Ctrl-P</code> and then <code>#</code> if you know what the name should be (approximately).</p>",
        "id": 195070747,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1587652895
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/\" title=\"https://leanprover-community.github.io/mathlib_docs/\">https://leanprover-community.github.io/mathlib_docs/</a></p>",
        "id": 195070794,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587652915
    },
    {
        "content": "<p>Thanks, for now I am just using CoCalc.</p>",
        "id": 195071004,
        "sender_full_name": "Emiel Lanckriet",
        "timestamp": 1587652990
    },
    {
        "content": "<p>there is also grep on the sources</p>",
        "id": 195071083,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587653013
    },
    {
        "content": "<p>or your favorite not-grep</p>",
        "id": 195071101,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587653024
    },
    {
        "content": "<p>and <code>library_search</code></p>",
        "id": 195071213,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587653056
    },
    {
        "content": "<p>IMO general hints and tips for solving Codewars kata is okay, but don't e.g. post your Codewars solutions publicly on GitHub (because then others could just copy and paste full solutions to get free points)</p>",
        "id": 195074908,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1587654477
    },
    {
        "content": "<p>I have been looking for the inverse of succ_inj in the docs, but I can't find it does someone know where to find this? In the natural number game it is called succ_eq_succ_of_eq, but in the mathlib_docs I can't find anything similar.</p>",
        "id": 195079692,
        "sender_full_name": "Emiel Lanckriet",
        "timestamp": 1587656428
    },
    {
        "content": "<p><code>congr_arg</code> is a theorem that proves <code>x = y -&gt; f x = f y</code> once and for all. The tactic is <code>congr</code></p>",
        "id": 195082106,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1587657491
    },
    {
        "content": "<p>Wow, thanks, that's much more powerfull than what I needed.</p>",
        "id": 195082552,
        "sender_full_name": "Emiel Lanckriet",
        "timestamp": 1587657657
    }
]