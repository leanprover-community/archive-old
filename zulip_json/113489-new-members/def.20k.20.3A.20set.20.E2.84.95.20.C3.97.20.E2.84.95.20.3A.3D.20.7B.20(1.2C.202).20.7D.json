[
    {
        "content": "<p>This simple definition of a set (seems like it) should just work. But it doesn't.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">def</span> <span class=\"n\">k</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"bp\">ℕ</span> <span class=\"bp\">×</span> <span class=\"bp\">ℕ</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">}</span><span class=\"bp\">.</span>\n</pre></div>\n\n\n<p>Instead it generates complaints about missing typeclass instances. Thoughts?</p>\n<p>[Lean]<br>\nfailed to synthesize type class instance for<br>\n⊢ has_emptyc (set ℕ × ℕ)<br>\n[Lean]<br>\nfailed to synthesize type class instance for<br>\n⊢ has_insert ?m_1 (set ℕ × ℕ)<br>\nsingleton : Π {α γ : Type} [_inst_1 : has_emptyc γ] [_inst_2 : has_insert α γ], α → γ</p>",
        "id": 147789879,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1542334460
    },
    {
        "content": "<p>you have precedence wrong</p>",
        "id": 147789888,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1542334479
    },
    {
        "content": "<p><code>def k : set (ℕ × ℕ) := { (1, 2) }</code></p>",
        "id": 147789890,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1542334489
    },
    {
        "content": "<blockquote>\n<p>you have precedence wrong</p>\n</blockquote>\n<p>Alas. Thx.</p>",
        "id": 147789906,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1542334523
    }
]