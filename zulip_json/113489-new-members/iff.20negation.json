[
    {
        "content": "<p>Is there a tactic I can use to make this immediate? </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"err\">∉</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"err\">∉</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"k\">by</span> <span class=\"n\">finish</span>\n</pre></div>\n\n\n<p>I know I can do it by hand if I had to, but this seems like the sort of thing <code>finish</code> ought to be good at so I don't have to think about it</p>",
        "id": 183598390,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1576535672
    },
    {
        "content": "<p><code>logic.basic</code> is the place to look for things like this</p>",
        "id": 183598472,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1576535749
    },
    {
        "content": "<p>Oh -- you want a tactic?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">finset</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">tauto</span>\n\n<span class=\"kn\">variable</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"err\">∉</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"err\">∉</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">tauto</span><span class=\"bp\">!</span>\n</pre></div>",
        "id": 183598557,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1576535795
    },
    {
        "content": "<p><code>tauto</code> and <code>tauto!</code> are always good for logic nonsense.</p>",
        "id": 183598569,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1576535810
    },
    {
        "content": "<p>Yeah I want a tactic so I don't have to get my hands dirty with this sort of thing in the middle of a big proof</p>",
        "id": 183598579,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1576535823
    },
    {
        "content": "<p>I tried <code>tauto</code>, <code>finish</code> and <code>finish!</code>, but I didn't think to try <code>tauto!</code>... :(</p>",
        "id": 183598604,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1576535843
    },
    {
        "content": "<p>Yeah, Patrick taught me about <code>tauto!</code></p>",
        "id": 183598641,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1576535867
    },
    {
        "content": "<p>Looking at the meta code, what might be going on is that <code>tauto</code> is for constructive logic and <code>tauto!</code> for classical logic?</p>",
        "id": 183598765,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1576535934
    },
    {
        "content": "<p>That makes sense!</p>",
        "id": 183598801,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1576535961
    },
    {
        "content": "<p>I do wonder still why <code>finish</code> couldn't do it though</p>",
        "id": 183598830,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1576535978
    },
    {
        "content": "<p><code>tauto</code> works for me.</p>",
        "id": 183598903,
        "sender_full_name": "Joe",
        "timestamp": 1576536005
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">finset</span>\n<span class=\"kn\">import</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">tauto</span>\n\n<span class=\"kn\">variable</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"err\">∉</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"err\">∉</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">tauto</span>\n</pre></div>",
        "id": 183598919,
        "sender_full_name": "Joe",
        "timestamp": 1576536031
    },
    {
        "content": "<p>Oh. My mistake then</p>",
        "id": 183598921,
        "sender_full_name": "Bhavik Mehta",
        "timestamp": 1576536035
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">finset</span>\n\n<span class=\"kn\">variable</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">))</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"err\">∉</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"err\">∉</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">A</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"err\">∈</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">split</span><span class=\"bp\">;</span><span class=\"n\">finish</span>\n</pre></div>",
        "id": 183598936,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1576536048
    }
]