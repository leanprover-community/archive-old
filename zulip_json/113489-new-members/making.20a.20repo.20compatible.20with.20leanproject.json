[
    {
        "content": "<p>This is probably a not-fun game of \"guess which instructions i failed to follow\"<br>\nI have a repo with a <code>src</code> folder and a <code>leanpackage.toml</code> in the top level directory.<br>\nOn my local machine, I navigate to a folder which is not a git repo (and contains my other git repos in subfolders)<br>\nI run <code>leanproject get https://github.com/jalex-stark/lean-at-MC2020.git</code><br>\nI use VSCode to open the <code>lean-at-MC2020</code> folder, which has <code>src</code> and <code>_target</code> subfolders.<br>\nI open an arbitrary file in <code>src/</code>, and the Lean messages are full of errors that look like this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"kn\">import</span><span class=\"o\">:</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">option</span><span class=\"bp\">.</span><span class=\"n\">defs</span>\n<span class=\"n\">excessive</span> <span class=\"n\">memory</span> <span class=\"n\">consumption</span> <span class=\"n\">detected</span> <span class=\"n\">at</span> <span class=\"err\">&#39;</span><span class=\"n\">replace&#39;</span> <span class=\"o\">(</span><span class=\"n\">potential</span> <span class=\"n\">solution</span><span class=\"o\">:</span> <span class=\"n\">increase</span> <span class=\"n\">memory</span> <span class=\"n\">consumption</span> <span class=\"n\">threshold</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 198927451,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590601922
    },
    {
        "content": "<p>Ctrl-shift-P Lean:Restart?</p>",
        "id": 198927518,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590601957
    },
    {
        "content": "<p>Wait -- you are supposed to have a leanpkg.toml not what you said</p>",
        "id": 198927611,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590602015
    },
    {
        "content": "<p>Also, I hope \"I open an arbitrary file in <code>src/</code>\" is short for \"I open the <code>lean-at-MC2020</code> folder in VS Code and then from there open an arbitrary file from <code>src/</code>\"</p>",
        "id": 198927626,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1590602023
    },
    {
        "content": "<p>Restarting Lean often fixes the excessive memory consumption errors</p>",
        "id": 198927706,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590602057
    },
    {
        "content": "<p>yes, the \"open folder\" bit was two steps earlier,</p>",
        "id": 198927711,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590602058
    },
    {
        "content": "<p>Bryan, see the line before.</p>",
        "id": 198927718,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1590602062
    },
    {
        "content": "<p>i restarted lean and am waiting at an orange bar</p>",
        "id": 198927731,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590602071
    },
    {
        "content": "<p>Ah, OK. Sorry I missed that. </p>\n<p>I looked at <a href=\"https://github.com/jalex-stark/lean-at-MC2020\">https://github.com/jalex-stark/lean-at-MC2020</a> and it seems OK, though you shouldn't need to commit <code>leanpkg.path</code>.</p>",
        "id": 198927779,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1590602099
    },
    {
        "content": "<p>Did leanproject get all your mathlib oleans?</p>",
        "id": 198927796,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590602107
    },
    {
        "content": "<p>I don't think <code>leanproject get</code> downloads a mathlib cache, does it? Isn't it just <code>git clone</code>?</p>",
        "id": 198927955,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590602173
    },
    {
        "content": "<p>I think yes.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">jstark</span><span class=\"bp\">@</span><span class=\"n\">Jalexs</span><span class=\"bp\">-</span><span class=\"n\">MBP</span> <span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">projects</span> <span class=\"err\">%</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">jalex</span><span class=\"bp\">-</span><span class=\"n\">stark</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">at</span><span class=\"bp\">-</span><span class=\"n\">MC2020</span><span class=\"bp\">.</span><span class=\"n\">git</span>\n<span class=\"n\">Cloning</span> <span class=\"k\">from</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">jalex</span><span class=\"bp\">-</span><span class=\"n\">stark</span><span class=\"bp\">/</span><span class=\"n\">lean</span><span class=\"bp\">-</span><span class=\"n\">at</span><span class=\"bp\">-</span><span class=\"n\">MC2020</span><span class=\"bp\">.</span><span class=\"n\">git</span>\n<span class=\"n\">configuring</span> <span class=\"n\">Mathcamp2020</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">cloning</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"bp\">_</span><span class=\"n\">target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">clone</span> <span class=\"n\">https</span><span class=\"o\">:</span><span class=\"bp\">//</span><span class=\"n\">github</span><span class=\"bp\">.</span><span class=\"n\">com</span><span class=\"bp\">/</span><span class=\"n\">leanprover</span><span class=\"bp\">-</span><span class=\"n\">community</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"bp\">_</span><span class=\"n\">target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span>\n<span class=\"n\">Cloning</span> <span class=\"n\">into</span> <span class=\"err\">&#39;</span><span class=\"bp\">_</span><span class=\"n\">target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib&#39;</span><span class=\"bp\">...</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Enumerating</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">336</span><span class=\"o\">,</span> <span class=\"n\">done</span><span class=\"bp\">.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Counting</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"err\">%</span> <span class=\"o\">(</span><span class=\"mi\">336</span><span class=\"bp\">/</span><span class=\"mi\">336</span><span class=\"o\">),</span> <span class=\"n\">done</span><span class=\"bp\">.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Compressing</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"err\">%</span> <span class=\"o\">(</span><span class=\"mi\">216</span><span class=\"bp\">/</span><span class=\"mi\">216</span><span class=\"o\">),</span> <span class=\"n\">done</span><span class=\"bp\">.</span>\n<span class=\"n\">remote</span><span class=\"o\">:</span> <span class=\"n\">Total</span> <span class=\"mi\">50297</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">197</span><span class=\"o\">),</span> <span class=\"n\">reused</span> <span class=\"mi\">165</span> <span class=\"o\">(</span><span class=\"n\">delta</span> <span class=\"mi\">119</span><span class=\"o\">),</span> <span class=\"n\">pack</span><span class=\"bp\">-</span><span class=\"n\">reused</span> <span class=\"mi\">49961</span>\n<span class=\"n\">Receiving</span> <span class=\"n\">objects</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"err\">%</span> <span class=\"o\">(</span><span class=\"mi\">50297</span><span class=\"bp\">/</span><span class=\"mi\">50297</span><span class=\"o\">),</span> <span class=\"mi\">21</span><span class=\"bp\">.</span><span class=\"mi\">67</span> <span class=\"n\">MiB</span> <span class=\"bp\">|</span> <span class=\"mi\">6</span><span class=\"bp\">.</span><span class=\"mi\">16</span> <span class=\"n\">MiB</span><span class=\"bp\">/</span><span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"n\">done</span><span class=\"bp\">.</span>\n<span class=\"n\">Resolving</span> <span class=\"n\">deltas</span><span class=\"o\">:</span> <span class=\"mi\">100</span><span class=\"err\">%</span> <span class=\"o\">(</span><span class=\"mi\">38738</span><span class=\"bp\">/</span><span class=\"mi\">38738</span><span class=\"o\">),</span> <span class=\"n\">done</span><span class=\"bp\">.</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--detach c812ebebde49c0409c5a93e41e3a36431f72b0a5    # in directory _target/deps/mathlib</span>\n<span class=\"n\">HEAD</span> <span class=\"n\">is</span> <span class=\"n\">now</span> <span class=\"n\">at</span> <span class=\"n\">c812ebeb</span> <span class=\"n\">feat</span><span class=\"o\">(</span><span class=\"n\">category_theory</span><span class=\"bp\">/</span><span class=\"n\">abelian</span><span class=\"o\">):</span> <span class=\"n\">abelian</span> <span class=\"n\">categories</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"mi\">2817</span><span class=\"o\">)</span>\n<span class=\"n\">Looking</span> <span class=\"n\">for</span> <span class=\"n\">local</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n<span class=\"n\">Found</span> <span class=\"n\">local</span> <span class=\"n\">mathlib</span> <span class=\"n\">oleans</span>\n</code></pre></div>",
        "id": 198927968,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590602176
    },
    {
        "content": "<p>Disclaimer, I've never used <code>leanproject get</code>.</p>",
        "id": 198927973,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590602179
    },
    {
        "content": "<p>Your project works fine for me Jalex</p>",
        "id": 198928105,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590602244
    },
    {
        "content": "<p>hmm okay maybe the local mathlib oleans that leanproject finds are bad</p>",
        "id": 198928144,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590602263
    },
    {
        "content": "<p>probably reinstalling the whole <code>elan</code> toolchain will be enough</p>",
        "id": 198928172,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590602280
    },
    {
        "content": "<p>That sounds excessive...</p>",
        "id": 198928227,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590602289
    },
    {
        "content": "<p>but maybe I'll think for a moment about whether there's an easier solution</p>",
        "id": 198928229,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590602291
    },
    {
        "content": "<p><code>leanproject get -f</code>?</p>",
        "id": 198928244,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590602298
    },
    {
        "content": "<p><code>leanproject get-mathlib-cache -f</code>?</p>",
        "id": 198928264,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590602313
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">%</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">cache</span> <span class=\"bp\">-</span><span class=\"n\">f</span>\n<span class=\"n\">Usage</span><span class=\"o\">:</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">cache</span> <span class=\"o\">[</span><span class=\"n\">OPTIONS</span><span class=\"o\">]</span>\n<span class=\"n\">Try</span> <span class=\"err\">&#39;</span><span class=\"n\">leanproject</span> <span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">cache</span> <span class=\"bp\">-</span><span class=\"n\">h&#39;</span> <span class=\"n\">for</span> <span class=\"kn\">help</span><span class=\"bp\">.</span>\n\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">option</span><span class=\"o\">:</span> <span class=\"bp\">-</span><span class=\"n\">f</span>\n</code></pre></div>",
        "id": 198928332,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590602346
    },
    {
        "content": "<p><code>--force</code>?</p>",
        "id": 198928345,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1590602353
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>leanproject get jalex-stark/lean-at-MC2020\ncd lean-at-MC2020/\ncode .\n</code></pre></div>\n\n\n<p>works for me, but as you pointed out I have</p>\n<div class=\"codehilite\"><pre><span></span><code>Looking for local mathlib oleans\nLooking for remote mathlib oleans\nTrying to download https://oleanstorage.azureedge.net/mathlib/c812ebebde49c0409c5a93e41e3a36431f72b0a5.tar.xz to /home/buzzard/.mathlib/c812ebebde49c0409c5a93e41e3a36431f72b0a5.tar.xz\n100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 21.9M/21.9M [00:03&lt;00:00, 5.56MiB/s]\nFound mathlib oleans at https://oleanstorage.azureedge.net/mathlib/\n</code></pre></div>",
        "id": 198928348,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590602356
    },
    {
        "content": "<p>Just delete your local oleans</p>",
        "id": 198928374,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590602369
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"err\">%</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">cache</span> <span class=\"c1\">--force</span>\n<span class=\"n\">Usage</span><span class=\"o\">:</span> <span class=\"n\">leanproject</span> <span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">cache</span> <span class=\"o\">[</span><span class=\"n\">OPTIONS</span><span class=\"o\">]</span>\n<span class=\"n\">Try</span> <span class=\"err\">&#39;</span><span class=\"n\">leanproject</span> <span class=\"n\">get</span><span class=\"bp\">-</span><span class=\"n\">mathlib</span><span class=\"bp\">-</span><span class=\"n\">cache</span> <span class=\"bp\">-</span><span class=\"n\">h&#39;</span> <span class=\"n\">for</span> <span class=\"kn\">help</span><span class=\"bp\">.</span>\n\n<span class=\"n\">Error</span><span class=\"o\">:</span> <span class=\"n\">no</span> <span class=\"n\">such</span> <span class=\"n\">option</span><span class=\"o\">:</span> <span class=\"c1\">--force</span>\n</code></pre></div>",
        "id": 198928426,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590602398
    },
    {
        "content": "<p><code>leanproject --help</code> says</p>\n<div class=\"codehilite\"><pre><span></span><code>  -f, --force-download  Download olean cache without looking for a local\n                        version.\n</code></pre></div>",
        "id": 198928511,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590602412
    },
    {
        "content": "<p>okay, i guess i have a stale leanproject</p>",
        "id": 198928537,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590602423
    },
    {
        "content": "<p>(so i <em>should</em> reinstall the whole <code>elan</code> toolchain now?)</p>",
        "id": 198928614,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590602453
    },
    {
        "content": "<p>It also implies <code>leanproject get</code> is just <code>git clone</code> so maybe that's not trustworthy.</p>",
        "id": 198928642,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1590602464
    },
    {
        "content": "<p><code>elan</code> and <code>leanproject</code> are separate.</p>",
        "id": 198928677,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1590602480
    },
    {
        "content": "<p>Cached oleans are in <code>~/.mathlib/git-hash.tar.(bz2_or_xz)</code></p>",
        "id": 198928757,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590602514
    },
    {
        "content": "<p>You can manually delete some of these files.</p>",
        "id": 198928814,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1590602528
    },
    {
        "content": "<p><code>pip install --upgrade mathlibtools</code> should upgrade <code>leanproject</code> to the latest, which is 0.0.8.</p>",
        "id": 198928818,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1590602532
    },
    {
        "content": "<p>Thanks Yury!</p>",
        "id": 198928820,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590602534
    },
    {
        "content": "<p>Maybe <code>pip3</code> depending on your python setup.</p>",
        "id": 198928827,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1590602543
    },
    {
        "content": "<p>oh okay it's <code>leanproject -f get-mathlib-cache</code>, not <code>leanproject get-mathlib-cache -f</code></p>",
        "id": 198928882,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590602574
    },
    {
        "content": "<p>i'm still in a sad state after forcing the mathlib cache, so i'll go delete oleans manually and then do <code>leanproject up</code></p>",
        "id": 198931385,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590603642
    },
    {
        "content": "<p>delete the project and re-clone</p>",
        "id": 198931423,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590603663
    },
    {
        "content": "<p>maybe?</p>",
        "id": 198931443,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590603672
    },
    {
        "content": "<p>when i do that it still finds local oleans</p>",
        "id": 198931664,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590603782
    },
    {
        "content": "<p>so i have oleans somewhere sticky</p>",
        "id": 198931678,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590603788
    },
    {
        "content": "<p>What exactly is your problem at this point? Your repo worked fine for me</p>",
        "id": 198931743,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590603816
    },
    {
        "content": "<p>(although you should remove the path file)</p>",
        "id": 198931751,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590603822
    },
    {
        "content": "<p>I added a line <code>import data.nat.basic</code> to the header of a <code>.lean</code> file in <code>src/</code> and it went back to the error message about memory</p>",
        "id": 198931942,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590603901
    },
    {
        "content": "<p>I can't reproduce :-(</p>",
        "id": 198932015,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590603952
    },
    {
        "content": "<p>you mean you took the same action and didn't get a catastrophic result?</p>",
        "id": 198932087,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590603970
    },
    {
        "content": "<p>(or the action was underspecified so you didn't try?)</p>",
        "id": 198932145,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590603991
    },
    {
        "content": "<p>I added import data.nat.basic to function_equation.lean and nothing bad happened</p>",
        "id": 198932155,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590603996
    },
    {
        "content": "<p>thanks, that's great news</p>",
        "id": 198932228,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590604021
    },
    {
        "content": "<p>If the issue is oleans, then this can definitely be fixed by firstly removing the offending local oleans from .mathlib and then recloning the project with <code>leanproject</code> and verifying that they're downloaded from the azure site</p>",
        "id": 198932401,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590604084
    },
    {
        "content": "<p>yep, I agree, that's next on my queue</p>",
        "id": 198932552,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590604164
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>buzzard@bob:~/.mathlib$ md5sum c812ebebde49c0409c5a93e41e3a36431f72b0a5.tar.xz\nb28742d6de88f719309e235138d12124  c812ebebde49c0409c5a93e41e3a36431f72b0a5.tar.xz\n</code></pre></div>\n\n\n<p>FWIW</p>",
        "id": 198932679,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1590604218
    },
    {
        "content": "<p>It looks like i succeeded at replacing my oleans!</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">jstark</span><span class=\"bp\">@</span><span class=\"n\">Jalexs</span><span class=\"bp\">-</span><span class=\"n\">MBP</span> <span class=\"bp\">.</span><span class=\"n\">mathlib</span> <span class=\"err\">%</span> <span class=\"n\">md5sum</span> <span class=\"n\">c812ebebde49c0409c5a93e41e3a36431f72b0a5</span><span class=\"bp\">.</span><span class=\"n\">tar</span><span class=\"bp\">.</span><span class=\"n\">xz</span>\n<span class=\"n\">b28742d6de88f719309e235138d12124</span>  <span class=\"n\">c812ebebde49c0409c5a93e41e3a36431f72b0a5</span><span class=\"bp\">.</span><span class=\"n\">tar</span><span class=\"bp\">.</span><span class=\"n\">xz</span>\n</code></pre></div>",
        "id": 198933455,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590604570
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252300\">Jalex Stark</span> <a href=\"#narrow/stream/113489-new-members/topic/making.20a.20repo.20compatible.20with.20leanproject/near/198928882\">said</a>:</p>\n<blockquote>\n<p>oh okay it's <code>leanproject -f get-mathlib-cache</code>, not <code>leanproject get-mathlib-cache -f</code></p>\n</blockquote>\n<p>I'm sorry about that. This is a limitation of the cli building tool I'm using. The <code>-f</code> option is a shared option used by many command hence it must come before the command name.</p>",
        "id": 198937276,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1590606322
    },
    {
        "content": "<p>it seems like a fine choice to me! Rob just made an incorrect guess about the right command to use</p>",
        "id": 198937602,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590606472
    },
    {
        "content": "<p>okay, i'm still in a bad state when i do <code>leanproject new test</code> then open the folder <code>test</code> in VSCode, start up a new <code>.lean</code> file, and write <code>import tactic</code> as a header. I'm going to go reinstall everything.</p>",
        "id": 198943809,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1590609115
    }
]