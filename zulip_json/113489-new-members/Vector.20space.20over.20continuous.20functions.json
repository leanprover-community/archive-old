[
    {
        "content": "<p>Oh ok I think I know an example of what you are talking about: it looks type class inference does not work very well for <code>is_subring</code> in the instance <code>continuous_ring</code></p>",
        "id": 203598586,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1594477370
    },
    {
        "content": "<p>In any case I guess then the file <code>continuous_functions</code> will be changed with definitions of subgroups instead of <code>is_subgroup</code> and all of this will be done over continuous bundled functions instead of the subtype of continuous functions as <span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span>  was suggesting</p>",
        "id": 203598669,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1594477511
    },
    {
        "content": "<p>If I have time I can try to do it at some point</p>",
        "id": 203598681,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1594477539
    },
    {
        "content": "<p>But for example it seems that the structure <code>subring</code> is not there yet so it's too early to do that</p>",
        "id": 203598762,
        "sender_full_name": "Nicolò Cavalleri",
        "timestamp": 1594477667
    },
    {
        "content": "<p>Theres also the possibility to use the theory of lattices with <code>subgroup</code> , we can set up an order on subgroups by containment (so far just like sets), and then take things like the least upper bound of two subgroups, which is the smallest subgroup containing both (the subgroup generated by their union rather than just taking the union as sets). I think that sort of thing was harder to arrange with <code>is_subgroup</code>.</p>",
        "id": 203598964,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1594477933
    },
    {
        "content": "<p><code>subgroup G</code> has a lattice structure, but the <code>sup</code> is not the one induced from <code>sup</code> on <code>set G</code>, as the union of two subgroups is typically not a subgroup.</p>",
        "id": 203599005,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1594478002
    }
]