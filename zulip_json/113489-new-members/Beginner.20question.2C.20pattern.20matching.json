[
    {
        "content": "<p>Trying to figure out why the following fails, and what i should be doing instead. <br>\nI have a goal of n:N and n+n<em>n-n</em>n=n. <br>\nI try to use<br>\nrw &lt;-nat.mul_sub_left_distrub <br>\nBut get the error \"rewrite tactic failed,  did not find instance of the pattern in target expression  ?m_1<em>?m_2 - ?m_1</em>?m_3. <br>\nI was expecting a match of n<em>n-n</em>n. <br>\nThanks!</p>",
        "id": 176182598,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568977151
    },
    {
        "content": "<p>I'm not at lean right now. What does <code>#check @nat.mul_sub_left_distrib</code> say?</p>",
        "id": 176182833,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568977400
    },
    {
        "content": "<p>(outside of tactic mode)</p>",
        "id": 176182845,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568977418
    },
    {
        "content": "<p>If you use single quotes <code> ` </code> you can quote code. Some of what you wrote got mangled. Was that <code>*</code> symbols? I'm thinking you're applying the wrong lemma</p>",
        "id": 176182931,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568977504
    },
    {
        "content": "<p>Oh I understand now! <code>n+n*n-n*n=n</code> is your goal. Zulip was garbling stuff and I thought it was the LaTeX issue. Yeah, that's bracketed the wrong way for you.</p>",
        "id": 176183114,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568977698
    },
    {
        "content": "<p>That's <code>(n + n * n) - n * n</code> so the rewrite can't find it</p>",
        "id": 176183133,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568977739
    },
    {
        "content": "<p>I would be tempted to just try the simplifier</p>",
        "id": 176183159,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568977785
    },
    {
        "content": "<p>Import <code>tactic.linarith</code> and then try <code>example (a b : nat) : (a + b) - b = a := by library_search</code> and see if you get lucky</p>",
        "id": 176183278,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568977920
    },
    {
        "content": "<p>(if the simplifier doesn't do it)</p>",
        "id": 176183335,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568977942
    },
    {
        "content": "<p>There is a lemma for this, use <code>library_search</code> to find it</p>",
        "id": 176183764,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1568978415
    },
    {
        "content": "<p>One more detail: you need mathlib to get access to <code>library_search</code>, and <code>import tactic</code> at top of your file if you have no import from mathlib at all</p>",
        "id": 176183883,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568978601
    },
    {
        "content": "<p>(although the lemma you're looking for is almost certainly in core)</p>",
        "id": 176183895,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568978621
    },
    {
        "content": "<p>Thanks for all the suggestions! Sorry about the garbled code. Kevin was spot on with the implicit bracketing being the wrong way around.</p>",
        "id": 176184433,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568979239
    },
    {
        "content": "<p>Associativity is tricky for mathematicians because we never think about it. We turn this property into \"I can write sums without caring about parentheses\", which is not very formalization friendly. But we certainly want Lean to take care of this (and indeed you can prove your goal by <code>simp</code>).</p>",
        "id": 176184798,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568979606
    },
    {
        "content": "<p>My main goal was to figure out why it didn't match, as I couldn't find any information about how the matching is performed but i think this enlightened me. Now I'm trying to figure out how to get the right bracketing :)<br>\nI cant seem to prove my goal with <code>simp</code> (but I have a proof by <code>exact nat.add_sub_cancel n (n*n)</code>)</p>",
        "id": 176185332,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568980123
    },
    {
        "content": "<p>It means you didn't import enough of mathlib. The simp attribute is set in <a href=\"https://github.com/leanprover-community/mathlib/blob/master/src/data/nat/basic.lean#L21\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/src/data/nat/basic.lean#L21\">https://github.com/leanprover-community/mathlib/blob/master/src/data/nat/basic.lean#L21</a></p>",
        "id": 176185847,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568980735
    },
    {
        "content": "<p>I think almost any mathlib import would be enough to drag this in</p>",
        "id": 176185861,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568980767
    },
    {
        "content": "<p>and you really don't want to start using Lean without mathlib</p>",
        "id": 176185872,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568980780
    },
    {
        "content": "<p>at least not if you're doing maths. The computer scientists will wince when I say this but whenever I start on a new file, if I'm just goofing around, I import <code>tactic.linarith</code> because I know this gives me all the good stuff.</p>",
        "id": 176192567,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568986232
    },
    {
        "content": "<p>Thanks Patrick, that definitely explains why <code>simp</code> didn't work, I have yet to bite the bullet and figure out how to install mathlib. I postponed that while trying to figure out how things worked.</p>",
        "id": 176194911,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568987928
    },
    {
        "content": "<p>Good instructions in the mathlib README. Let us know if there's any problems. You should end up with a fully working Lean and mathlib with everything installed and compiled, if all goes well.</p>",
        "id": 176194945,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568987970
    },
    {
        "content": "<p>Thanks! I i think i had success this time, but is not really usable. The autocompletion in vsstudio works when i write (ie it shows all kind of linear algebra stuff that i assume is part of mathlib) <code>import linear_algebra.finsupp</code> but as soon as i finish typing it stalls at <code>updating</code></p>",
        "id": 176197174,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568989548
    },
    {
        "content": "<p>It's supposed to say \"updating\" all the time. Are you sure it's doing something? it might just be ready.</p>",
        "id": 176197250,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568989588
    },
    {
        "content": "<p>I will be the first to admit that this is not particuarly clear.</p>",
        "id": 176197259,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568989598
    },
    {
        "content": "<p>Yes, we'll need to fix that at some point. Many people are confused by this</p>",
        "id": 176197276,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568989616
    },
    {
        "content": "<p>And Gabriel could change it very easily</p>",
        "id": 176197293,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568989626
    },
    {
        "content": "<p>It's the orange bars which indicate that there is a problem. This means your code is compiling (and compiling should be quick if lean and mathlib are all already compiled).</p>",
        "id": 176197316,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568989641
    },
    {
        "content": "<p>Ok, that was a bit confusing. For some time the cpu usage was 600%, then it calmed down. Now im left with a red swiggle under <code>import</code> and  no output in <code>lean messages</code>. A new panel opened in the bottom telling me i have 1k+ problems. (Lean server errors)</p>",
        "id": 176197991,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568990045
    },
    {
        "content": "<p>Then the installation procedure didn't work.</p>",
        "id": 176198033,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568990079
    },
    {
        "content": "<p>Try restarting Lean -- ctrl-shift-P and then <code>Lean : Restart</code></p>",
        "id": 176198037,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568990083
    },
    {
        "content": "<p>Restarting gave me orange bars, so i guess im compiling now?</p>",
        "id": 176198211,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568990193
    },
    {
        "content": "<p>This is not good.</p>",
        "id": 176198320,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568990272
    },
    {
        "content": "<p>What is your OS?</p>",
        "id": 176198327,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568990279
    },
    {
        "content": "<p>did you follow the instructions at <a href=\"https://github.com/leanprover-community/mathlib/blob/master/README.md\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib/blob/master/README.md\">https://github.com/leanprover-community/mathlib/blob/master/README.md</a>?</p>",
        "id": 176198399,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568990301
    },
    {
        "content": "<p>Your copy of mathlib is pretty much unusable unless you've compiled it.</p>",
        "id": 176198456,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568990347
    },
    {
        "content": "<p>Did you follow the installation procedure up to and including the <code>update-mathlib</code> part?</p>",
        "id": 176198457,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568990347
    },
    {
        "content": "<p>orange bars indicate that the import worked but that you have an uncompiled mathlib -- compiling it might be the only step you have left. Alternatively if the bars disappear within around 10-20 seconds then you are OK.</p>",
        "id": 176198458,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568990347
    },
    {
        "content": "<p>Once you've compiled it, it's trouble-free.</p>",
        "id": 176198459,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1568990347
    },
    {
        "content": "<p>I followed the instructions, including the update-mathlib. It went quite.fast though, so i suspect no compiling happened. Tried again and it prints 'reusing cached olean archive'</p>",
        "id": 176199005,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568990708
    },
    {
        "content": "<p>That's good</p>",
        "id": 176199046,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568990751
    },
    {
        "content": "<p>Can you list what is in your project folder?</p>",
        "id": 176199100,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568990770
    },
    {
        "content": "<p>The point of update-mathlib is exactly to ensure that no compiling happens on your machine, it fetches precompiled stuff</p>",
        "id": 176199129,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568990797
    },
    {
        "content": "<p>_target, leanpkg.[path, toml], src</p>",
        "id": 176199151,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568990823
    },
    {
        "content": "<p>Ok, and the Lean file you are editing is in src, right?</p>",
        "id": 176199245,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568990892
    },
    {
        "content": "<p>Yes</p>",
        "id": 176199255,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568990898
    },
    {
        "content": "<p>Ah okay, i wasnt clear on the role of update-mathlib</p>",
        "id": 176199268,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568990922
    },
    {
        "content": "<p>And you told VScode to open the folder whose content you just listed, right (not the src folder)?</p>",
        "id": 176199269,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568990922
    },
    {
        "content": "<p>Yes</p>",
        "id": 176199277,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568990932
    },
    {
        "content": "<p>Weird. Let's get VScode out of the game. Can you try to run <code>leanpkg build</code> in a terminal in this project folder?</p>",
        "id": 176199314,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568990973
    },
    {
        "content": "<p>And tell us if it starts mentioning mathlib files</p>",
        "id": 176199329,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568990986
    },
    {
        "content": "<p>It does a.git checkout, then prints lean --make src</p>",
        "id": 176199508,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568991120
    },
    {
        "content": "<p>And is it running for a long time here?</p>",
        "id": 176199597,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568991161
    },
    {
        "content": "<p>Can you paste the content of your <code>leanpkg.toml</code>?</p>",
        "id": 176199612,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568991178
    },
    {
        "content": "<p>No just a second</p>",
        "id": 176199688,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568991231
    },
    {
        "content": "<p>[package]<br>\nname = \"my_project\"<br>\nversion = \"0.1\"<br>\nlean_version = \"3.4.2\"<br>\npath = \"src\"</p>\n<p>[dependencies]<br>\nmathlib = {git = \"<a href=\"https://github.com/leanprover-community/mathlib\" target=\"_blank\" title=\"https://github.com/leanprover-community/mathlib\">https://github.com/leanprover-community/mathlib</a>\", rev = \"bfe9c6c16b699238dac814fb292fdb0f2ed6374e\"}</p>",
        "id": 176199952,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568991390
    },
    {
        "content": "<p>Ok, so the VScode extension is misbehaving, but Lean is fine</p>",
        "id": 176200030,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568991458
    },
    {
        "content": "<p>Did you change any setting of the VScode extension?</p>",
        "id": 176200056,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568991477
    },
    {
        "content": "<p>Wait, i think it might be working now</p>",
        "id": 176200353,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568991656
    },
    {
        "content": "<p>Yes, the orange bars are just a second or two now, and now it seems to work as expected!</p>",
        "id": 176200617,
        "sender_full_name": "Jens Kristian Egsgaard",
        "timestamp": 1568991825
    },
    {
        "content": "<p>I sometimes have to restart VScode to make it behave well (in certain cases even <code>Lean: Restart Server</code> doesn't work properly). Probably something similar is going on here.</p>",
        "id": 176200772,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1568991906
    },
    {
        "content": "<p>Even when everything works as expected, it's painful...</p>",
        "id": 176201335,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1568992261
    }
]