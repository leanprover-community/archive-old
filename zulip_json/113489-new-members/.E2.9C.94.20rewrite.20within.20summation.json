[
    {
        "content": "<p>How do you use, for instance, <code>mul_comm</code> within a summation:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">S</span><span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"bp\">∑</span> <span class=\"n\">x</span> <span class=\"k\">in</span> <span class=\"n\">S</span><span class=\"o\">,</span> <span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">x</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"n\">mul_comm</span><span class=\"o\">,</span> <span class=\"c1\">-- rewrite tactic failed, did not find instance of the pattern in the target expression ?m_3 * ?m_4</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>If I try <code>rw mul_comm x 2</code> then <code>x</code> isn't found.</p>",
        "id": 253678258,
        "sender_full_name": "Travis",
        "timestamp": 1631844107
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#apply_congr\">tactic#apply_congr</a></p>",
        "id": 253679856,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1631845421
    },
    {
        "content": "<p>(Also, if you post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>, with all imports, you're more likely to get quick, and complete, suggestions.)</p>",
        "id": 253679923,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1631845455
    },
    {
        "content": "<p>Ok thank you, and will do.</p>",
        "id": 253680007,
        "sender_full_name": "Travis",
        "timestamp": 1631845546
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"439480\">Travis</span> has marked this topic as resolved.</p>",
        "id": 253680009,
        "sender_full_name": "Notification Bot",
        "timestamp": 1631845549
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"439480\">@Travis</span> often <code>simp only [mul_comm]</code> will work.</p>",
        "id": 253685395,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1631850620
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"439480\">@Travis</span>  you can also have a look at the <code>simp_rw</code> tactics, whic rewrites under bindings (for instance, if you try to <code>rw h</code> where <code>h : x=y</code> in <code>\\lambda n, n * x</code>this would probably not work, but <code>simp_rw</code> will).</p>",
        "id": 253706684,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1631866605
    }
]