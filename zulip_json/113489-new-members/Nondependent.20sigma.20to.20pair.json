[
    {
        "content": "<p>Is there defined in Lean a standard way of converting non-dependent Sigma types to plain product types?<br>\nSomething like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"kd\">def</span> <span class=\"n\">sigma_to_pair</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"n\">β</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">Σ</span> <span class=\"n\">_</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">β</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">α</span> <span class=\"bp\">×</span> <span class=\"n\">β</span>\n  <span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">sigma.mk</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">,</span> <span class=\"n\">b</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 244064695,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1624796670
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/equiv.sigma_equiv_prod\">docs#equiv.sigma_equiv_prod</a></p>",
        "id": 244065023,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1624797174
    },
    {
        "content": "<p>Perfect, thanks</p>",
        "id": 244065117,
        "sender_full_name": "Horatiu Cheval",
        "timestamp": 1624797360
    }
]