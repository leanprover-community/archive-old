[
    {
        "content": "<p>Is <code>:= by { ext, refl }</code> or  <code>:= ext (λ _ , rfl)</code> or something else preferred?</p>",
        "id": 268308781,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1642448392
    },
    {
        "content": "<p>Not that it says a lot, but searching through mathlib, I found 24 occurrences of <code>:= by { ext, refl }</code> and no occurrences of <code>:= ext (λ _ , rfl)</code></p>",
        "id": 268309353,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642448768
    },
    {
        "content": "<p>129 results for <code>by { ext, refl }</code> and no results for <code>ext (λ _ , rfl)</code></p>",
        "id": 268309445,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1642448836
    },
    {
        "content": "<p>Without context, I'd prefer the first. A <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> would be helpful to judge, though (maybe there's yet another proof that's more preferred than either?)</p>",
        "id": 268309627,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1642448988
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"451983\">@Arthur Paulino</span> You get a few results with <code>git grep 'ext (λ ., rfl)'</code> and 138 results with <code>git grep 'ext \\$ λ ., rfl'</code></p>",
        "id": 268309784,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1642449109
    },
    {
        "content": "<p>Context is <a href=\"https://github.com/leanprover-community/mathlib/pull/11456/files#diff-550fc0afdc9ac16171ae2a2f7760792f6464d9eb31476d5e54ba14069f1bd460R511\">https://github.com/leanprover-community/mathlib/pull/11456/files#diff-550fc0afdc9ac16171ae2a2f7760792f6464d9eb31476d5e54ba14069f1bd460R511</a></p>",
        "id": 268309885,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1642449177
    },
    {
        "content": "<p>But I guess the <code>by … </code> version is fine, thanks!</p>",
        "id": 268309911,
        "sender_full_name": "Joachim Breitner",
        "timestamp": 1642449194
    },
    {
        "content": "<p><code>ext (λ _ , rfl)</code> would normally be spelt <code>ext $ λ _, rfl</code> I think</p>",
        "id": 268311442,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1642450270
    },
    {
        "content": "<p>For that particular line, <code>fun_like.coe_injective rfl</code> probably works</p>",
        "id": 268311480,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1642450312
    },
    {
        "content": "<p>And avoids an axiom vs the <code>ext, refl</code>proof, but no one cares anyway</p>",
        "id": 268311536,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1642450336
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span> The second <code>git grep</code> I mentioned agrees with you regarding its normal spelling, though it's basically a tie between that and the <code>by { ext, refl }</code> proof.</p>",
        "id": 268311571,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1642450383
    },
    {
        "content": "<p><code>ext $ λ _, rfl</code> has the advantage of not going into tactic mode, but really both are fine.</p>",
        "id": 268311608,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1642450426
    },
    {
        "content": "<p>(I don't really think it matters -- this is one of those small places where you can really express yourself <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>)</p>",
        "id": 268311687,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1642450472
    },
    {
        "content": "<p>Note that sometimes <code>ext</code> as a tactic can do far more than you need it to - for instance, on a map between polynomials it will not only apply the map but also extract coefficients - this can end up slowing things down if you're just going to do <code>refl</code> afterwards anyway</p>",
        "id": 268313470,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1642452047
    },
    {
        "content": "<p><code>by { ext1, refl }</code> to the rescue (-;</p>",
        "id": 268349592,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1642488587
    }
]