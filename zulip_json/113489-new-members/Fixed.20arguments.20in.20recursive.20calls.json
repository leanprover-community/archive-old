[
    {
        "content": "<p>Is there a way to fix a function argument only to some recursive calls?</p>\n<p>Currently I have this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span> <span class=\"kd\">def</span> <span class=\"n\">rename</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">→</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"n\">term</span>\n<span class=\"bp\">|</span> <span class=\"n\">ρ</span> <span class=\"o\">(</span><span class=\"n\">app</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">app</span> <span class=\"o\">(</span><span class=\"n\">rename</span> <span class=\"n\">ρ</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">rename</span> <span class=\"n\">ρ</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">ρ</span> <span class=\"o\">(</span><span class=\"n\">lam</span> <span class=\"n\">M</span><span class=\"o\">)</span>   <span class=\"o\">:=</span> <span class=\"n\">lam</span> <span class=\"o\">(</span><span class=\"n\">rename</span> <span class=\"o\">(</span><span class=\"n\">rename_ext</span> <span class=\"n\">ρ</span><span class=\"o\">)</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"n\">ρ</span> <span class=\"o\">(</span><span class=\"n\">var</span> <span class=\"n\">x</span><span class=\"o\">)</span>   <span class=\"o\">:=</span> <span class=\"n\">var</span> <span class=\"o\">(</span><span class=\"n\">ρ</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n</code></pre></div>\n\n<p>And would prefer to have something like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">@[simp]</span> <span class=\"kd\">def</span> <span class=\"n\">rename</span> <span class=\"o\">(</span><span class=\"n\">ρ</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">term</span> <span class=\"bp\">→</span> <span class=\"n\">term</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">app</span> <span class=\"n\">M</span> <span class=\"n\">N</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"n\">app</span> <span class=\"o\">(</span><span class=\"n\">rename</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">rename</span> <span class=\"n\">N</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">lam</span> <span class=\"n\">M</span><span class=\"o\">)</span>   <span class=\"o\">:=</span> <span class=\"n\">lam</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">rename</span> <span class=\"n\">ρ</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n<span class=\"bp\">|</span> <span class=\"o\">(</span><span class=\"n\">var</span> <span class=\"n\">x</span><span class=\"o\">)</span>   <span class=\"o\">:=</span> <span class=\"n\">var</span> <span class=\"o\">(</span><span class=\"n\">ρ</span> <span class=\"n\">x</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 211531478,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1601318119
    },
    {
        "content": "<p>You could make it implicit, but if you want to change the value in the recursion then it has to be right of the colon</p>",
        "id": 211537781,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1601321018
    }
]