[
    {
        "content": "<p>Awesome, thanks a lot!<br>\nSo, if there existed a <code>category_theory.od_od [preorder J] : Jᵒᵈᵒᵈ  ⥤ J</code>, we might solve the error at hand while keeping <code>nonempty_sections_of_fintype_inverse_system</code> ?</p>",
        "id": 297059274,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1662267393
    },
    {
        "content": "<p>It seems you need <code>(Jᵒᵈ)ᵒᵖ </code> seems <code>nonempty_sections_of_fintype_inverse_system</code> expect <code>somethingᵒᵖ</code> ...</p>",
        "id": 297059401,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1662267520
    },
    {
        "content": "<p>ah, indeed</p>",
        "id": 297059521,
        "sender_full_name": "Rémi Bottinelli",
        "timestamp": 1662267660
    },
    {
        "content": "<p>If it were <code>Jᵒᵈᵒᵈ ⥤ J</code> then we could simply use the identity functor, because <a href=\"https://leanprover-community.github.io/mathlib_docs/find/order_dual\">docs#order_dual</a> of a type is itself. <a href=\"https://leanprover-community.github.io/mathlib_docs/find/opposite\">docs#opposite</a> of a type is also itself, but it's an irreducible definition so we the identity functor would not work, and you have to insert <a href=\"https://leanprover-community.github.io/mathlib_docs/find/opposite.op\">docs#opposite.op</a>/unop.</p>",
        "id": 297059738,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1662267889
    }
]