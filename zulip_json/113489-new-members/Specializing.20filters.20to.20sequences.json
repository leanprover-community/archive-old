[
    {
        "content": "<p>I am trying to show that the big oh relation defined in analysis.asymptotics is the same as the one I know as a working computer scientist. The hope would be to use my definition for proving some ``atomic'' inequalities like </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"err\">\\</span><span class=\"k\">forall</span> <span class=\"err\">\\</span><span class=\"n\">eps</span> <span class=\"o\">:</span> <span class=\"err\">\\</span><span class=\"n\">R</span><span class=\"o\">,</span> <span class=\"err\">\\</span><span class=\"n\">eps</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span> <span class=\"err\">\\</span><span class=\"n\">i</span> <span class=\"o\">(</span><span class=\"err\">\\</span><span class=\"n\">lamdba</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">log</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">is_o</span> <span class=\"o\">(</span><span class=\"err\">\\</span><span class=\"n\">lambda</span> <span class=\"n\">n</span><span class=\"o\">,</span> <span class=\"n\">n</span><span class=\"err\">^\\</span><span class=\"n\">eps</span><span class=\"o\">)</span>\n</pre></div>\n\n\n<p>and then use the abstract API in mathlib for facts like \"is_o is a partial order\"</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">complex</span><span class=\"bp\">.</span><span class=\"n\">exponential</span>\n<span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">asymptotics</span>\n\n\n<span class=\"n\">noncomputable</span> <span class=\"n\">theory</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">classical</span>\n\n\n<span class=\"n\">def</span> <span class=\"n\">is_O&#39;</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"n\">asymptotics</span><span class=\"bp\">.</span><span class=\"n\">is_O</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">(</span><span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">at_top</span><span class=\"o\">)</span>\n\n<span class=\"n\">def</span> <span class=\"n\">is_O</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"kt\">Prop</span> <span class=\"o\">:=</span> <span class=\"bp\">∃</span> <span class=\"n\">c</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">N</span><span class=\"o\">:</span><span class=\"n\">ℝ</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"n\">f</span> <span class=\"n\">x</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">g</span> <span class=\"n\">x</span>\n\n<span class=\"kn\">theorem</span> <span class=\"n\">is_O_eq_is_O&#39;</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span> <span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">is_O</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"bp\">→</span>  <span class=\"n\">is_O&#39;</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">is_O</span><span class=\"o\">,</span> <span class=\"n\">is_O&#39;</span><span class=\"o\">,</span> <span class=\"n\">asymptotics</span><span class=\"bp\">.</span><span class=\"n\">is_O</span><span class=\"o\">],</span>\n<span class=\"n\">intro</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">a</span> <span class=\"k\">with</span> <span class=\"n\">c</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">a</span> <span class=\"k\">with</span> <span class=\"n\">N</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n<span class=\"n\">use</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n<span class=\"n\">refine</span> <span class=\"n\">asymptotics</span><span class=\"bp\">.</span><span class=\"n\">is_O_with_of_le&#39;</span> <span class=\"n\">filter</span><span class=\"bp\">.</span><span class=\"n\">at_top</span> <span class=\"bp\">_</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 189627724,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1583265185
    },
    {
        "content": "<p>I'd first <code>simp only [is_O', asymptotics.is_O, filter.mem_at_top_sets]</code></p>",
        "id": 189628169,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583265457
    },
    {
        "content": "<p>That brings me to <code>lean is_O f g → (∃ (c : ℝ), asymptotics.is_O_with c f g filter.at_top)</code></p>",
        "id": 189628528,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1583265643
    },
    {
        "content": "<p>BTW, why do you want <code>C N : nat</code>?</p>",
        "id": 189628645,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583265722
    },
    {
        "content": "<p>That's just how a computer scientist would state it. The arguments are the same with c N : \\R</p>",
        "id": 189628716,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1583265759
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">analysis</span><span class=\"bp\">.</span><span class=\"n\">asymptotics</span>\n<span class=\"kn\">open</span> <span class=\"n\">filter</span>\n<span class=\"n\">open_locale</span> <span class=\"n\">filter</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">is_O_iff</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"bp\">→</span> <span class=\"n\">ℝ</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">asymptotics</span><span class=\"bp\">.</span><span class=\"n\">is_O</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">at_top</span> <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"n\">N</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span><span class=\"o\">),</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">ℝ</span> <span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"n\">abs</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">asymptotics</span><span class=\"bp\">.</span><span class=\"n\">is_O</span><span class=\"o\">,</span> <span class=\"n\">asymptotics</span><span class=\"bp\">.</span><span class=\"n\">is_O_with</span><span class=\"o\">,</span> <span class=\"n\">eventually_at_top</span><span class=\"o\">,</span> <span class=\"n\">real</span><span class=\"bp\">.</span><span class=\"n\">norm_eq_abs</span><span class=\"o\">]</span>\n</pre></div>",
        "id": 189628756,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583265792
    },
    {
        "content": "<p>The computer scientist also wants the functions to be <code>\\N \\to \\N </code> but that seems like more work</p>",
        "id": 189628772,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1583265803
    },
    {
        "content": "<p>hmm I have open_locale filter but it says unknown identifier 'eventually_at_top'</p>",
        "id": 189628906,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1583265878
    },
    {
        "content": "<p>Fixed.</p>",
        "id": 189628940,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583265901
    },
    {
        "content": "<p>Awesome, thanks!</p>",
        "id": 189629068,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1583265959
    },
    {
        "content": "<p>More generally:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">is_O_at_top_iff</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">lattice</span><span class=\"bp\">.</span><span class=\"n\">semilattice_sup</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">nonempty</span> <span class=\"n\">α</span><span class=\"o\">]</span>\n  <span class=\"o\">{</span><span class=\"n\">E</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">has_norm</span> <span class=\"n\">E</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">α</span> <span class=\"bp\">→</span> <span class=\"n\">E</span><span class=\"o\">}</span> <span class=\"o\">:</span>\n  <span class=\"n\">asymptotics</span><span class=\"bp\">.</span><span class=\"n\">is_O</span> <span class=\"n\">f</span> <span class=\"n\">g</span> <span class=\"n\">at_top</span> <span class=\"bp\">↔</span> <span class=\"bp\">∃</span> <span class=\"n\">c</span> <span class=\"n\">N</span><span class=\"o\">,</span> <span class=\"bp\">∀</span> <span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">,</span> <span class=\"n\">N</span> <span class=\"bp\">≤</span> <span class=\"n\">x</span> <span class=\"bp\">→</span> <span class=\"err\">∥</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"err\">∥</span> <span class=\"bp\">≤</span> <span class=\"n\">c</span> <span class=\"bp\">*</span> <span class=\"err\">∥</span><span class=\"n\">g</span> <span class=\"n\">x</span><span class=\"err\">∥</span> <span class=\"o\">:=</span>\n<span class=\"k\">by</span> <span class=\"n\">simp</span> <span class=\"n\">only</span> <span class=\"o\">[</span><span class=\"n\">asymptotics</span><span class=\"bp\">.</span><span class=\"n\">is_O</span><span class=\"o\">,</span> <span class=\"n\">asymptotics</span><span class=\"bp\">.</span><span class=\"n\">is_O_with</span><span class=\"o\">,</span> <span class=\"n\">eventually_at_top</span><span class=\"o\">]</span>\n</pre></div>\n\n\n<p>Feel free to prove a similar fact about <code>is_o</code>, and PR both of them.</p>",
        "id": 189629402,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1583266163
    }
]