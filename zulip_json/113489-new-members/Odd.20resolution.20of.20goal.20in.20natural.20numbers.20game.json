[
    {
        "content": "<p>I'm a total newbie who's working their way through the natural numbers game.<br>\nDuring an attempt to solve level 4 of the advanced multiplication world I stumbled upon behaviour that struck me as odd and that I would like to understand. </p>\n<p>The code looks like this</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">mul_left_cancel</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">c</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">c</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n<span class=\"n\">cases</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n<span class=\"n\">exfalso</span><span class=\"o\">,</span>\n<span class=\"n\">apply</span> <span class=\"n\">ha</span><span class=\"o\">,</span>\n<span class=\"n\">refl</span><span class=\"o\">,</span>\n<span class=\"n\">revert</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n<span class=\"n\">induction</span> <span class=\"n\">c</span> <span class=\"k\">with</span> <span class=\"n\">n</span> <span class=\"n\">hn</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">mul_zero</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">mul_eq_zero_iff</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n<span class=\"n\">cc</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n<span class=\"n\">cases</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n<span class=\"n\">intro</span> <span class=\"n\">hf</span><span class=\"o\">,</span>\n<span class=\"n\">exfalso</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"n\">mul_zero</span> <span class=\"n\">at</span> <span class=\"n\">hf</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>After the  <code>exfalso</code> the context looks like</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">2</span> <span class=\"n\">goals</span>\n<span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">,</span>\n<span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n<span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">,</span>\n<span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">),</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n<span class=\"n\">hf</span> <span class=\"o\">:</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">succ</span> <span class=\"n\">n</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">false</span>\n\n<span class=\"n\">case</span> <span class=\"n\">mynat.succ</span>\n<span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">,</span>\n<span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n<span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">,</span>\n<span class=\"n\">hn</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">),</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n<span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">succ</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">succ</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">succ</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span> <span class=\"n\">n</span>\n</code></pre></div>\n<p>After <code>rw mul_zero at hf,</code> the context suddenly looks like </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">case</span> <span class=\"n\">mynat.zero</span>\n<span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">,</span>\n<span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">≠</span> <span class=\"mi\">0</span>\n<span class=\"bp\">⊢</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">),</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">succ</span> <span class=\"n\">a</span> <span class=\"bp\">*</span> <span class=\"n\">zero</span> <span class=\"bp\">→</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">zero</span>\n</code></pre></div>\n<p>Not only did one goal disappear or get resolved in a very non-trivial way. The other goal changed in a way that I find very odd.<br>\nDoes anyone see what's going on? I'd love to know</p>",
        "id": 262142531,
        "sender_full_name": "Michaël Maex",
        "timestamp": 1637362649
    },
    {
        "content": "<p>lol it's the line 71 column 18 bug in NNG :-) Hit enter a couple of times and sanity will be restored!</p>",
        "id": 262148372,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1637366730
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/issues/468\">https://github.com/leanprover-community/lean/issues/468</a></p>",
        "id": 262148515,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1637366834
    },
    {
        "content": "<p>This is a super-obscure bug whereby the actual goal is not correctly printed if the cursor is in a couple of extremely specific places. It is unlikely to ever be fixed in Lean 3 because we're moving to Lean 4 (and even if it was fixed in Lean 3 I'm unlikely to port the fix to NNG...)</p>",
        "id": 262148649,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1637366940
    }
]