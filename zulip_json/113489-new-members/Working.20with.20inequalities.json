[
    {
        "content": "<p>Seriously, it seems like I can work around most things but subtraction in naturals is very frustrating in how much time it takes to clear. I understand the need to keep everything non-negative, but I am having trouble finishing the proof when I get to the inequalities:</p>\n<p>Currently I am stuck with this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">,</span>\n<span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n<span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span>\n<span class=\"err\">⊢</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span>\n</code></pre></div>",
        "id": 207418668,
        "sender_full_name": "Rick Love",
        "timestamp": 1597849126
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">ha</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hab</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">&lt;</span> <span class=\"n\">a</span> <span class=\"bp\">-</span> <span class=\"n\">b</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">exact</span> <span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">sub_pos_of_lt</span> <span class=\"n\">hab</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>I think this works</p>",
        "id": 207418925,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1597849238
    },
    {
        "content": "<p>Thank you, I knew I had seen that but I couldn't find it. I thought I had done a <code>library_search</code>, but probably not at this point</p>",
        "id": 207419205,
        "sender_full_name": "Rick Love",
        "timestamp": 1597849373
    },
    {
        "content": "<p>Does anyone else have that problem?<br>\nI make a lot of progress thinking through the higher level proofs, but then get stuck messing with subtraction for an hour.</p>",
        "id": 207419562,
        "sender_full_name": "Rick Love",
        "timestamp": 1597849549
    },
    {
        "content": "<p>100% yes, personally I work through the high level proof and when I hit some annoying nat subtraction thing that I can't do immediately (but am sure is true) I <code>sorry</code> it and move on and finish the big picture. Then later (or the next day) I go through and do the nat subtraction things, quite often at that point I notice there is an easier way to set things up to avoid the nat subtraction type goal, e.g. work with ints, use different variables etc. This workflow can often help as once the big proof outline is done you can see all the small facts you need, quite often some of them are used more than once and can be small lemmas for instance. It also means you dont waste time proving all the small things along the way but then at the end notice your big picture proof strategy doesn't work.</p>",
        "id": 207421542,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1597850340
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127136\">@Alex J. Best</span> that is great advice! Thanks!</p>\n<p>Also, I was wondering why I was limiting myself to naturals. Do you find any problems using integers with some constraints that the primary values are positive?</p>",
        "id": 207427853,
        "sender_full_name": "Rick Love",
        "timestamp": 1597853332
    },
    {
        "content": "<p>What do you mean by primary values?</p>",
        "id": 207428335,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1597853560
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113489-new-members/topic/Working.20with.20inequalities/near/207428335\">said</a>:</p>\n<blockquote>\n<p>What do you mean by primary values?</p>\n</blockquote>\n<p>Well the givens in the proof are that the involved integers are positive. However, I don't see any reason why values internal in the proof should be limited to the natural numbers.</p>",
        "id": 207434232,
        "sender_full_name": "Rick Love",
        "timestamp": 1597856587
    },
    {
        "content": "<p>Anyway, I'll give it a go with Integers and see if it removes the frustration.</p>",
        "id": 207434524,
        "sender_full_name": "Rick Love",
        "timestamp": 1597856718
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"329841\">Rick Love</span> <a href=\"#narrow/stream/113489-new-members/topic/Working.20with.20inequalities/near/207434232\">said</a>:</p>\n<blockquote>\n<p>Well the givens in the proof are that the involved integers are positive. However, I don't see any reason why values internal in the proof should be limited to the natural numbers.</p>\n</blockquote>\n<p>I haven't used it myself, but there is the <code>zify</code> tactic (pronounced <em>zee-ih-fie</em>). <a href=\"https://leanprover-community.github.io/mathlib_docs/tactic/zify.html\">https://leanprover-community.github.io/mathlib_docs/tactic/zify.html</a></p>",
        "id": 207441408,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1597860218
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306601\">@Kyle Miller</span>  zify looks like it will be very useful. Thanks!</p>",
        "id": 207589145,
        "sender_full_name": "Rick Love",
        "timestamp": 1597968693
    }
]