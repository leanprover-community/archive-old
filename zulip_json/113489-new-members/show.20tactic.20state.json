[
    {
        "content": "<p>When a tactic proof is complete, can I examine the tactic state at each step in emacs? The only way I've found to do this is just deleting the steps that follow the one I want to examine and looking at the flycheck buffer.</p>",
        "id": 191044104,
        "sender_full_name": "Iocta",
        "timestamp": 1584566640
    },
    {
        "content": "<p>I'm not a Lean emacs user but there's definitely a better way. You can do it in VS Code so you can definitely do it in emacs -- you just move the cursor around but you need to be in the right \"mode\"</p>",
        "id": 191044287,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1584566741
    },
    {
        "content": "<p><code>C-c C-g</code> brings up the \"Lean goal\" buffer but ... it's never got anything in it</p>",
        "id": 191044423,
        "sender_full_name": "Iocta",
        "timestamp": 1584566828
    },
    {
        "content": "<p>It should, if your cursor is in the middle of a tactic block</p>",
        "id": 191044452,
        "sender_full_name": "Reid Barton",
        "timestamp": 1584566852
    },
    {
        "content": "<p>There shouldn't be anything more to it than that...</p>",
        "id": 191044549,
        "sender_full_name": "Reid Barton",
        "timestamp": 1584566900
    },
    {
        "content": "<p>toggling lean-info mode or lean-debug mode doesn't seem to help</p>",
        "id": 191044631,
        "sender_full_name": "Iocta",
        "timestamp": 1584566979
    },
    {
        "content": "<p>I don't think I've ever witnessed this not working. Can you provide a screenshot just as a sanity check?</p>",
        "id": 191045085,
        "sender_full_name": "Reid Barton",
        "timestamp": 1584567236
    },
    {
        "content": "<p>what is the name of the buffer that the data appears in?</p>",
        "id": 191045375,
        "sender_full_name": "Iocta",
        "timestamp": 1584567364
    },
    {
        "content": "<p><code>*Lean Goal*</code></p>",
        "id": 191045456,
        "sender_full_name": "Reid Barton",
        "timestamp": 1584567421
    },
    {
        "content": "<div class=\"message_inline_image\"><a href=\"https://i.imgur.com/cmK79hK.png\" target=\"_blank\" title=\"https://i.imgur.com/cmK79hK.png\"><img src=\"https://i.imgur.com/cmK79hK.png\"></a></div>",
        "id": 191045844,
        "sender_full_name": "Iocta",
        "timestamp": 1584567637
    },
    {
        "content": "<p>Just to be clear, is your cursor in the middle of a multi-line tactic mode proof which has, say, one goal at all times?</p>",
        "id": 191050983,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1584570621
    },
    {
        "content": "<p>You can see the cursor box on the <code>c</code> of <code>cases</code></p>",
        "id": 191055368,
        "sender_full_name": "Iocta",
        "timestamp": 1584573617
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/czNGpeXk5WYEWyA3G6U1PIxO/vscode.png\" target=\"_blank\" title=\"vscode.png\">vscode.png</a> <br>\nVS Code with cursor in the same place. I'm 99.9% sure that when I tried emacs it was the same.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/czNGpeXk5WYEWyA3G6U1PIxO/vscode.png\" target=\"_blank\" title=\"vscode.png\"><img src=\"/user_uploads/3121/czNGpeXk5WYEWyA3G6U1PIxO/vscode.png\"></a></div>",
        "id": 191055616,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1584573841
    },
    {
        "content": "<p>Oh I have Lean running in emacs on this computer:</p>\n<p><a href=\"/user_uploads/3121/wmx29Af6a8aSnPsa6rxI8hqj/emacs.png\" target=\"_blank\" title=\"emacs.png\">emacs.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/wmx29Af6a8aSnPsa6rxI8hqj/emacs.png\" target=\"_blank\" title=\"emacs.png\"><img src=\"/user_uploads/3121/wmx29Af6a8aSnPsa6rxI8hqj/emacs.png\"></a></div>",
        "id": 191055766,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1584573946
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253355\">@Iocta</span> Your emacs looks pretty customized, maybe something is interfering with lean-mode?</p>",
        "id": 191055900,
        "sender_full_name": "Reid Barton",
        "timestamp": 1584574028
    },
    {
        "content": "<p>Perhaps. that's an unpleasant rabbit hole but maybe necessary</p>",
        "id": 191056078,
        "sender_full_name": "Iocta",
        "timestamp": 1584574132
    },
    {
        "content": "<p>Do these look ok?<br>\nLean (version 3.5.1, Release)<br>\nGNU Emacs 26.3<br>\nlean-mode-20191229.1613</p>",
        "id": 191056095,
        "sender_full_name": "Iocta",
        "timestamp": 1584574151
    },
    {
        "content": "<p>disabling <code>frames-only-mode</code> makes it work</p>",
        "id": 191056628,
        "sender_full_name": "Iocta",
        "timestamp": 1584574561
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover/lean-mode/pull/23\" target=\"_blank\" title=\"https://github.com/leanprover/lean-mode/pull/23\">https://github.com/leanprover/lean-mode/pull/23</a></p>",
        "id": 191060146,
        "sender_full_name": "Iocta",
        "timestamp": 1584577427
    },
    {
        "content": "<p>Sent a PR to lean-mode</p>",
        "id": 191060234,
        "sender_full_name": "Iocta",
        "timestamp": 1584577482
    },
    {
        "content": "<p>Merged into master</p>",
        "id": 191157579,
        "sender_full_name": "Iocta",
        "timestamp": 1584643147
    },
    {
        "content": "<p>Nice! Thanks.</p>",
        "id": 191157838,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1584643255
    }
]