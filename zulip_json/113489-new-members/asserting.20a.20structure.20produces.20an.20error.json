[
    {
        "content": "<p>Is there a testing helper or something that I can use to assert that the second example below produces an error?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">value</span> <span class=\"o\">:</span> <span class=\"n\">â„•</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">istwelve</span> <span class=\"o\">:</span> <span class=\"n\">value</span> <span class=\"bp\">=</span> <span class=\"mi\">12</span> <span class=\"bp\">.</span> <span class=\"n\">tactic.exact_dec_trivial</span><span class=\"o\">)</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">foo</span> <span class=\"bp\">.</span> <span class=\"n\">value</span> <span class=\"o\">:=</span> <span class=\"mi\">12</span> <span class=\"o\">}</span>\n\n<span class=\"c1\">-- assertBlowsUp</span>\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span> <span class=\"o\">{</span> <span class=\"n\">foo</span> <span class=\"bp\">.</span> <span class=\"n\">value</span> <span class=\"o\">:=</span> <span class=\"mi\">13</span> <span class=\"o\">}</span>\n</code></pre></div>",
        "id": 212968335,
        "sender_full_name": "Julian Berman",
        "timestamp": 1602428072
    },
    {
        "content": "<p>Maybe <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.success_if_fail\">docs#tactic.success_if_fail</a> helps?</p>",
        "id": 213018893,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1602496701
    },
    {
        "content": "<p>Thanks! Appreciate the pointer, will see if I can use that.</p>",
        "id": 213040787,
        "sender_full_name": "Julian Berman",
        "timestamp": 1602510735
    }
]