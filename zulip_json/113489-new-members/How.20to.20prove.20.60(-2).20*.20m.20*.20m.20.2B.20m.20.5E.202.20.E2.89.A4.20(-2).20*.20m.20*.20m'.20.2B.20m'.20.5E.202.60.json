[
    {
        "content": "<p>More specifically <code>example (m m' : rat) : (-2) * m * m + m ^ 2 ≤ (-2) * m * m' + m' ^ 2</code>. The way to solve this is to add <code>m ^ 2</code> on both sides which after simplifying should result in <code>0 &lt;= (m - m')^2</code>. The issue I am having is that for some reason <code>ring</code> is acting crazy and not simplifying anything. Sure I could pry this problem into shape using step by step tactics, but I am wondering if there is an elegant approach to this.</p>",
        "id": 178292325,
        "sender_full_name": "Marko Grdinić",
        "timestamp": 1571234975
    },
    {
        "content": "<p><code>ring</code> is not a simplifier</p>",
        "id": 178292573,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571235128
    },
    {
        "content": "<p>it's supposed to kill the goal</p>",
        "id": 178292582,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571235139
    },
    {
        "content": "<p>it sometimes simplifies as a side effect but you shouldn't rely on it</p>",
        "id": 178292609,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571235159
    },
    {
        "content": "<p>Also, those two expressions are already \"simplified\" from the POV of <code>ring</code></p>",
        "id": 178292709,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571235220
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">m&#39;</span> <span class=\"o\">:</span> <span class=\"n\">rat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">m&#39;</span> <span class=\"bp\">+</span> <span class=\"n\">m&#39;</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"bp\">@</span><span class=\"n\">le_of_add_le_add_right</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"bp\">_</span> <span class=\"o\">(</span><span class=\"n\">m</span><span class=\"err\">^</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">_</span> <span class=\"err\">$</span>\n<span class=\"k\">by</span> <span class=\"n\">convert</span> <span class=\"o\">(</span><span class=\"n\">pow_two_nonneg</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"n\">m&#39;</span><span class=\"o\">))</span><span class=\"bp\">;</span> <span class=\"n\">ring</span>\n</pre></div>",
        "id": 178293583,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1571235749
    },
    {
        "content": "<p>Here is what I came up with. I definitely like your solution better.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">m&#39;</span> <span class=\"o\">:</span> <span class=\"n\">rat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">m&#39;</span> <span class=\"bp\">+</span> <span class=\"n\">m&#39;</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n    <span class=\"k\">by</span> <span class=\"o\">{</span>\n        <span class=\"n\">simp</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"o\">[</span><span class=\"n\">mul_assoc</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">pow_two</span><span class=\"o\">,</span> <span class=\"err\">←</span> <span class=\"n\">add_assoc</span><span class=\"o\">],</span>\n        <span class=\"n\">rw</span> <span class=\"n\">add_comm</span> <span class=\"o\">(</span><span class=\"n\">m&#39;</span> <span class=\"err\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"err\">^</span> <span class=\"mi\">2</span><span class=\"o\">),</span>\n        <span class=\"n\">rw</span> <span class=\"n\">two_mul</span><span class=\"o\">,</span>\n        <span class=\"n\">repeat</span> <span class=\"o\">{</span><span class=\"n\">rw</span> <span class=\"n\">add_assoc</span><span class=\"o\">},</span>\n        <span class=\"n\">rw</span> <span class=\"n\">le_add_iff_nonneg_right</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"n\">add_comm</span> <span class=\"o\">(</span><span class=\"n\">m&#39;</span> <span class=\"err\">^</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">m&#39;</span><span class=\"o\">)),</span>\n        <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">-</span> <span class=\"n\">m&#39;</span><span class=\"o\">)</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"n\">m</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">((</span><span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"mi\">2</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">m&#39;</span><span class=\"o\">))</span> <span class=\"bp\">+</span> <span class=\"n\">m&#39;</span> <span class=\"err\">^</span> <span class=\"mi\">2</span><span class=\"o\">),</span> <span class=\"k\">by</span> <span class=\"n\">ring</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">this</span><span class=\"o\">,</span>\n        <span class=\"n\">apply</span> <span class=\"n\">pow_two_nonneg</span>\n    <span class=\"o\">}</span>\n</pre></div>",
        "id": 178296550,
        "sender_full_name": "Marko Grdinić",
        "timestamp": 1571237411
    },
    {
        "content": "<p>Thanks.</p>",
        "id": 178296572,
        "sender_full_name": "Marko Grdinić",
        "timestamp": 1571237429
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">rat</span> <span class=\"n\">tactic</span><span class=\"bp\">.</span><span class=\"n\">ring</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">m&#39;</span> <span class=\"o\">:</span> <span class=\"n\">rat</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">m&#39;</span> <span class=\"bp\">+</span> <span class=\"n\">m&#39;</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"o\">:=</span>\n<span class=\"k\">calc</span>  <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"err\">^</span> <span class=\"mi\">2</span>\n    <span class=\"bp\">≤</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"err\">^</span> <span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">m</span><span class=\"bp\">-</span><span class=\"n\">m&#39;</span><span class=\"o\">)</span><span class=\"err\">^</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"n\">le_add_of_nonneg_right</span> <span class=\"o\">(</span><span class=\"n\">pow_two_nonneg</span> <span class=\"bp\">_</span><span class=\"o\">)</span>\n<span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">-</span><span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">*</span> <span class=\"n\">m</span> <span class=\"bp\">*</span> <span class=\"n\">m&#39;</span> <span class=\"bp\">+</span> <span class=\"n\">m&#39;</span> <span class=\"err\">^</span> <span class=\"mi\">2</span>          <span class=\"o\">:</span> <span class=\"k\">by</span> <span class=\"n\">ring</span>\n</pre></div>",
        "id": 178337185,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1571269141
    }
]