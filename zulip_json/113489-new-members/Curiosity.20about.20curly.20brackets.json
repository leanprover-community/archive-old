[
    {
        "content": "<p>Curly brackets are used to indicate implicit arguments, but some definitions on mathlib use the fancier <code>⦃⦄</code> instead. What is the meaning of <code>⦃⦄</code>? where is this notation defined (<code>#print notation</code> doesn't seem to help)?</p>",
        "id": 205027810,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1595722121
    },
    {
        "content": "<p>It's not notation, it's builtin syntax (also can be written <code>{{ }}</code>).</p>",
        "id": 205027868,
        "sender_full_name": "Reid Barton",
        "timestamp": 1595722209
    },
    {
        "content": "<p>I can't find it in TPIL but it means the arguments are not supplied implicitly unless a following explicit argument is given.</p>",
        "id": 205027888,
        "sender_full_name": "Reid Barton",
        "timestamp": 1595722317
    },
    {
        "content": "<p>Obviously if there is no following explicit argument at all, <code>{{ }}</code> would be a bad idea. But what are situations where <code>{ } ( )</code> should not be replaced by <code>{{ }} ( )</code>?</p>",
        "id": 205027975,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1595722451
    },
    {
        "content": "<p>Normally it appears on the right hand side of a definition like <code>injective</code> that starts with a forall/Pi type with implicitly quantified variables. Otherwise if you have <code>h : injective f</code> you could not just write <code>h</code> to refer to <code>h</code>.</p>",
        "id": 205027979,
        "sender_full_name": "Reid Barton",
        "timestamp": 1595722492
    },
    {
        "content": "<p>Hmm, I don't know about that actually.</p>",
        "id": 205028052,
        "sender_full_name": "Reid Barton",
        "timestamp": 1595722636
    },
    {
        "content": "<p><a href=\"https://leanprover.github.io/theorem_proving_in_lean/interacting_with_lean.html\">Here</a>'s the relevant TPiL section.</p>",
        "id": 205028762,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1595723864
    }
]