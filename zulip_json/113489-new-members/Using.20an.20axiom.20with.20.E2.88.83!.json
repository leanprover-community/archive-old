[
    {
        "content": "<p>Can I use <code>∃!</code> like this? </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">axiom</span> <span class=\"n\">two_points_unique_line</span> <span class=\"o\">(</span><span class=\"n\">p₁</span> <span class=\"n\">p₂</span> <span class=\"o\">:</span> <span class=\"n\">Point</span><span class=\"o\">)(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">p₁</span> <span class=\"bp\">≠</span> <span class=\"n\">p₂</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">∃!</span> <span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"n\">Line</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"n\">lies_on</span> <span class=\"n\">p₁</span> <span class=\"n\">l</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">lies_on</span> <span class=\"n\">p₂</span> <span class=\"n\">l</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>IF so, once I have <code>gl: lies_on p₁ l ∧ lies_on p₂ l</code> and <code>gl₀: lies_on p₁ l₀ ∧ lies_on p₂ l₀</code> in my local context, how can I use <code>two_points_unique_line</code> to show <code>l=l_0</code>?</p>",
        "id": 309290175,
        "sender_full_name": "Quinn Culver",
        "timestamp": 1668226549
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/unique_of_exists_unique\">docs#unique_of_exists_unique</a></p>",
        "id": 309291244,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1668227872
    }
]