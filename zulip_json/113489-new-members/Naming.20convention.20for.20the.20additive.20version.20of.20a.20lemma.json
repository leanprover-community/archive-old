[
    {
        "content": "<p>I'm working on a PR (<a href=\"https://github.com/leanprover-community/mathlib/pull/11876\">#11876</a>), proving </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.algebra.group</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_continuous_mul</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">is_open.left_coset</span> <span class=\"o\">{</span><span class=\"n\">U</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">G</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">is_open</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">is_open</span> <span class=\"o\">(</span><span class=\"n\">left_coset</span> <span class=\"n\">x</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">is_open_map_mul_left</span> <span class=\"n\">x</span> <span class=\"n\">_</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>and the corresponding lemmas for open/closed left/right cosets. <span class=\"user-mention\" data-user-id=\"240862\">@Oliver Nash</span>  pointed out that the additive versions should also be included, which I think I should do with </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">topology.algebra.group</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">topological_space</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">has_continuous_mul</span> <span class=\"n\">G</span><span class=\"o\">]</span>\n\n<span class=\"kd\">@[to_additive is_open.add_left_coset]</span>\n<span class=\"kd\">lemma</span> <span class=\"n\">is_open.left_coset</span> <span class=\"o\">{</span><span class=\"n\">U</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">G</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">is_open</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n<span class=\"n\">is_open</span> <span class=\"o\">(</span><span class=\"n\">left_coset</span> <span class=\"n\">x</span> <span class=\"n\">U</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"n\">is_open_map_mul_left</span> <span class=\"n\">x</span> <span class=\"n\">_</span> <span class=\"n\">h</span>\n</code></pre></div>\n<p>Here I've named the additive version <code>is_open.add_left_coset</code>, but I'm not sure if this is the right convention. What should this lemma be called?</p>",
        "id": 271435158,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1644501902
    },
    {
        "content": "<p>That would be consistent with <a href=\"https://leanprover-community.github.io/mathlib_docs/find/add_left_coset\">docs#add_left_coset</a>, if that exists</p>",
        "id": 271441200,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644504579
    },
    {
        "content": "<p>Ah, it's <a href=\"https://leanprover-community.github.io/mathlib_docs/find/left_add_coset\">docs#left_add_coset</a></p>",
        "id": 271441335,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644504622
    },
    {
        "content": "<p>Thanks, I've committed it as <code>is_open.left_add_coset</code></p>",
        "id": 271453802,
        "sender_full_name": "Sebastian Monnet",
        "timestamp": 1644509468
    },
    {
        "content": "<p>It looks like you might have missed the main point of <span class=\"user-mention\" data-user-id=\"240862\">@Oliver Nash</span>'s comment on Zulip, which was:</p>\n<blockquote>\n<p>For some reason <code>to_additive</code> doesn't know to transport <code>left_coset</code> to <code>left_add_coset</code>.</p>\n<p>I suggest asking for help about this on Zulip.</p>\n</blockquote>\n<p>I think Oliver's point is that ideally <code>to_additive</code> would be able to generate the name automatically, rather than you having to provide it.</p>",
        "id": 271457466,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644511056
    },
    {
        "content": "<p>Fixing that is probably out of scope for the PR, but might be worth doing in a follow-up PR</p>",
        "id": 271457517,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1644511080
    }
]