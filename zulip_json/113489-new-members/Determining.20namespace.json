[
    {
        "content": "<p>This may be a really silly question, but I've found myself running into this a bunch while trying to learn/navigate through mathlib: </p>\n<p>If I'm scrolling through a mathlib file in VS Code, is there an easy way to figure out what the namespace a particular definition is made in (or maybe even at an arbitrary cursor position) without having to scrolling up to the last place the author wrote <code>namespace blah</code>?</p>",
        "id": 274277124,
        "sender_full_name": "Matej Penciak",
        "timestamp": 1646530816
    },
    {
        "content": "<p><code>#where</code></p>",
        "id": 274277538,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1646531334
    },
    {
        "content": "<p>Continuing this, I would have also answered to use where.  However, if I modify a file early on in the import hierarchy, even if simply to put in a <code>#where</code> and the undo the effect, this usually triggers recompilation of lean files.</p>\n<p>Is there a way of accessing the namespace <em>without</em> modifying the file, even temporarily?</p>",
        "id": 274290793,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1646551342
    },
    {
        "content": "<p>I think this is possible in Lean 4, but not lean 3</p>",
        "id": 274304962,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646571936
    },
    {
        "content": "<p>Ideally it would be shown as a breadcrumb in vscode, which IIRC is what the lean4 extension does.</p>",
        "id": 274304970,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1646571955
    },
    {
        "content": "<p>Ok, thanks Eric for the answer!</p>\n<p>I googled what breadcrumbs are, I think I understand and it looks like it would be just what would be useful here.  I'll wait for Lean 4!</p>",
        "id": 274308422,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1646576592
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Determining.20namespace/near/274304962\">said</a>:</p>\n<blockquote>\n<p>I think this is possible in Lean 4, but not lean 3</p>\n</blockquote>\n<p>Yeah in Lean4 if you hover a declaration:<br>\n<a href=\"/user_uploads/3121/dQQ_hnNBRQZx1ONsVt0hnZWT/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/dQQ_hnNBRQZx1ONsVt0hnZWT/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/dQQ_hnNBRQZx1ONsVt0hnZWT/image.png\"></a></div><p>it shows the full namespace + type, although it wasn't always this way either.</p>",
        "id": 274309107,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1646577482
    },
    {
        "content": "<p>In vscode it even shows the breadcrumb of the current namespace and even lemma in the header below the filename. I don't see that in your screenshot <span class=\"user-mention\" data-user-id=\"395550\">@Henrik Böving</span>, do you know if there is a way to add that for your editor?</p>",
        "id": 274309351,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1646577806
    },
    {
        "content": "<p>Ehhh I think I even purposely disabled breadcrumbs for lsp-mode in general because they annoy me but I have definitely seen them in other languages inside emacs with lsp-mode in the past.</p>",
        "id": 274309422,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1646577889
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/6EZNk0Hw-bdSaYNGZh1bsJim/image.png\">image.png</a>  yup, just works <span aria-label=\"tm\" class=\"emoji emoji-2122\" role=\"img\" title=\"tm\">:tm:</span> (if its enabled :p)</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/6EZNk0Hw-bdSaYNGZh1bsJim/image.png\" title=\"image.png\"><img src=\"/user_uploads/3121/6EZNk0Hw-bdSaYNGZh1bsJim/image.png\"></a></div>",
        "id": 274309506,
        "sender_full_name": "Henrik Böving",
        "timestamp": 1646577975
    }
]