[
    {
        "content": "<p>This is the solution to the <a href=\"https://do.proof.in.tum.de/competitions/contest/13/tasks/2/\">Infinity Hotel problem</a>. The <code>goal_bijective</code> proof is partially generated with <code>gptf</code>.</p>\n<p>I learned a lot from this problem. Now I know that we can count elements in an infinite set too! This is really surprising to me.</p>\n<p>Thanks a lot for your help! <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">goal_bijective</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">↥</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">↪</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">→</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">bijective</span> <span class=\"n\">h</span> <span class=\"bp\">∧</span> <span class=\"n\">set.restrict</span> <span class=\"n\">h</span> <span class=\"bp\">↑</span><span class=\"n\">S</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"bp\">@</span><span class=\"n\">cardinal.extend_function_of_lt</span> <span class=\"n\">ℕ</span> <span class=\"n\">ℕ</span> <span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"n\">b</span> <span class=\"kd\">begin</span>\n    <span class=\"n\">rw</span> <span class=\"n\">cardinal.mk_nat</span><span class=\"o\">,</span>\n    <span class=\"n\">exact</span> <span class=\"n\">cardinal.finset_card_lt_omega</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"kd\">end</span> <span class=\"o\">(</span><span class=\"n\">cardinal.eq.mp</span> <span class=\"n\">rfl</span><span class=\"o\">),</span>\n  <span class=\"n\">cases</span> <span class=\"n\">this</span> <span class=\"k\">with</span> <span class=\"n\">c</span> <span class=\"n\">d</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"bp\">⇑</span><span class=\"n\">c</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">equiv.bijective</span> <span class=\"n\">c</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">ext</span><span class=\"bp\">;</span> <span class=\"n\">simp</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">d</span> <span class=\"n\">_</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">goal_injective</span> <span class=\"o\">:</span>\n  <span class=\"bp\">∀</span> <span class=\"o\">{</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">ℕ</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"bp\">↥</span><span class=\"o\">(</span><span class=\"bp\">↑</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"bp\">↪</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span> <span class=\"bp\">↪</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">set.restrict</span> <span class=\"n\">h</span> <span class=\"bp\">↑</span><span class=\"n\">S</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"o\">:=</span> <span class=\"kd\">begin</span>\n  <span class=\"n\">intros</span> <span class=\"n\">a</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:=</span> <span class=\"n\">goal_bijective</span> <span class=\"n\">b</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">this</span> <span class=\"k\">with</span> <span class=\"n\">c</span> <span class=\"n\">d</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">d</span> <span class=\"k\">with</span> <span class=\"n\">e</span> <span class=\"n\">f</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">c</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">e.injective</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"n\">exact</span> <span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"o\">},</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 244141898,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1624885966
    }
]