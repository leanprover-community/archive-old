[
    {
        "content": "<p>Can one entirely turn off an already imported instance, locally? You can override it by providing something with higher priority, and I was hoping that <code>[priority 0]</code> might remove it from the search, but that doesn't seem to happen.</p>",
        "id": 162301727,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554178063
    },
    {
        "content": "<p>I would also like to be able to do this.</p>",
        "id": 162306379,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554185228
    },
    {
        "content": "<p><code>priority 0</code> cannot be the answer, this is what we use for decidability to ensure it is used only after all actual instances. But we do want to use it</p>",
        "id": 162309357,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1554189232
    },
    {
        "content": "<p>we need priority to take a <code>with_bot nat</code></p>",
        "id": 162309798,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554189740
    },
    {
        "content": "<p>Why do you need to disable an instance? Maybe there's another way to approach the issue</p>",
        "id": 162328048,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554207125
    },
    {
        "content": "<p>I asked this mostly for the sake of teaching students about instances -- I had them building by hand some instances that already existed, and it was sometimes confusing whether library or hand-built instances were being used.</p>",
        "id": 162378170,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554242631
    },
    {
        "content": "<p>You could try using synonyms for the types you're building instances for. For instance, if you want the students to build an instance of <code>monoid nat</code>, write a definition <code>def natural := nat</code> and then an instance <code>monoid natural</code></p>",
        "id": 162378367,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554242791
    }
]