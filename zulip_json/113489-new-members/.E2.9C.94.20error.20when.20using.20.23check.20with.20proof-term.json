[
    {
        "content": "<p>Can you post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> with fully working code rather than screenshots?</p>",
        "id": 276460587,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648120557
    },
    {
        "content": "<p>And what's your goal here? I've never felt the need to print a proof term and try to get lean to reinterpret it</p>",
        "id": 276460833,
        "sender_full_name": "Ruben Van de Velde",
        "timestamp": 1648120691
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307953\">@Ruben Van de Velde</span>  I am newbie to type theory, I wanted to see how lean interprets these terms. Just wanted to know if I am understanding the details right or not</p>",
        "id": 276461023,
        "sender_full_name": "Ayush Agrawal",
        "timestamp": 1648120832
    },
    {
        "content": "<p>My guess is that the unifier is failing to solve a higher unification problem. I'm surprised that the pp.all suggestion doesn't fix it though.</p>",
        "id": 276461588,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1648121179
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  it is working. I put the pp.all part wrongly my bad</p>",
        "id": 276461640,
        "sender_full_name": "Ayush Agrawal",
        "timestamp": 1648121229
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"439607\">Ayush Agrawal</span> has marked this topic as resolved.</p>",
        "id": 276461670,
        "sender_full_name": "Notification Bot",
        "timestamp": 1648121245
    }
]