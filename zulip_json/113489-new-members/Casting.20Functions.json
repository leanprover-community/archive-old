[
    {
        "content": "<p>Let's say I have <code>(n n' : ℕ) (h : n' = n) (f : fin n → ℤ)</code>.<br>\nWhat's the nicest way to get <code>f' : fin n' → ℤ</code> from this (where <code>∀ x, f x = f' x</code>)?</p>",
        "id": 221802895,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1609957367
    },
    {
        "content": "<p>This works:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"n\">n'</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">n'</span> <span class=\"bp\">=</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n</span> <span class=\"bp\">→</span> <span class=\"n\">ℤ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">fin</span> <span class=\"n\">n'</span> <span class=\"bp\">→</span> <span class=\"n\">ℤ</span> <span class=\"o\">:=</span> <span class=\"n\">f</span> <span class=\"bp\">∘</span> <span class=\"n\">fin.cast</span> <span class=\"n\">h</span>\n</code></pre></div>",
        "id": 221803448,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609957607
    },
    {
        "content": "<p>This is a great example of dependent type hell. It seems that in dependent type theory one has to learn to think about these questions in a certain kind of way in order to avoid pain.</p>",
        "id": 221805516,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609958600
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> ^^ indeed. This is part of an effort to get out of dependent type hell.</p>",
        "id": 221807769,
        "sender_full_name": "Marcus Rossel",
        "timestamp": 1609959755
    }
]