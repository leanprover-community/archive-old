[
    {
        "content": "<p>Is there a way to evaluate (and print) the value of a variable within the scope of a proof?</p>",
        "id": 258912447,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1635130957
    },
    {
        "content": "<p>Can you give a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>?</p>",
        "id": 259033663,
        "sender_full_name": "Jason Rute",
        "timestamp": 1635204166
    },
    {
        "content": "<p>And do you mean tactic proof or term proof?</p>",
        "id": 259033692,
        "sender_full_name": "Jason Rute",
        "timestamp": 1635204208
    },
    {
        "content": "<p>Perhaps you mean doing the equivalent of <code>#eval</code>, but mid-way through a proof?</p>",
        "id": 259033916,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1635204404
    },
    {
        "content": "<p>Here are two examples.  You may need to turn widgets off to see this.  IIRC, there is a bug in widgets which doesn't show the <code>:= 1</code> in the examples below.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"k\">let</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span> <span class=\"k\">in</span> <span class=\"n\">_</span>  <span class=\"c1\">-- use _ to find the value of `a` in the local context of a term proof:</span>\n<span class=\"c1\">-- m n : ℕ,</span>\n<span class=\"c1\">-- a : ℕ := 1</span>\n<span class=\"c1\">-- ⊢ m + n = n + m</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"k\">let</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"mi\">1</span> <span class=\"k\">in</span> <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"n\">n</span> <span class=\"bp\">+</span> <span class=\"n\">m</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n  <span class=\"c1\">-- The goal should show you the value of `a` in the local context of a tactic proof.</span>\n  <span class=\"c1\">-- m n : ℕ,</span>\n  <span class=\"c1\">-- a : ℕ := 1</span>\n  <span class=\"c1\">-- ⊢ m + n = n + m</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 259033984,
        "sender_full_name": "Jason Rute",
        "timestamp": 1635204481
    },
    {
        "content": "<p>This doesn't show you the values of assigned metavariables though.  (Honestly, I'm not exactly sure what you're asking for.)</p>",
        "id": 259034576,
        "sender_full_name": "Jason Rute",
        "timestamp": 1635205081
    }
]