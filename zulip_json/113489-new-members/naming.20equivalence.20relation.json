[
    {
        "content": "<p>I have a function <code>eqd : point → point → point → point → Prop</code>, and I have made an equivalence relation on <code>point × point</code>. Instead of using <code>setoid.r (a,b) (c,d)</code>, is it possible to change the notation to be <code>(a,b) ≡ (c,d)</code>?</p>",
        "id": 129879693,
        "sender_full_name": "Ali Sever",
        "timestamp": 1531929143
    },
    {
        "content": "<p>Yes.<br>\nYou can already use <code>≈</code> as notation for <code>setoid.r</code>, if you don't mind using that instead.</p>",
        "id": 129879836,
        "sender_full_name": "Reid Barton",
        "timestamp": 1531929283
    },
    {
        "content": "<p>Otherwise, you can define <code>local infix ≡ := setoid.r</code>, or a number of variations on this.</p>",
        "id": 129879955,
        "sender_full_name": "Reid Barton",
        "timestamp": 1531929381
    },
    {
        "content": "<p><code>local</code> is optional, depending on whether you want the notation to be in effect everywhere or only in the current file/section</p>",
        "id": 129879991,
        "sender_full_name": "Reid Barton",
        "timestamp": 1531929441
    },
    {
        "content": "<p>I'm assuming it's not possible to make the notation <code>a b ≡ c d</code>.</p>",
        "id": 129881273,
        "sender_full_name": "Ali Sever",
        "timestamp": 1531930994
    },
    {
        "content": "<p>I don't know if the parser can handle that. You want more than an infix operator -- you want an operator which eats two things on both sides. I wonder if <code>(a b ≡ c d)</code> would be possible somehow?</p>",
        "id": 129882842,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1531932986
    },
    {
        "content": "<p>Depends on your alignment. Chaotic evil players are allowed to use tricky unicode blank characters to achieve what you want.</p>",
        "id": 129882911,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1531933083
    },
    {
        "content": "<p>I don't think you can have two arguments to the notation separated only by whitespace.<br>\nThe way to test this is to try out things like <code>notation a b ` ≡ ` c d := a + b</code>. That gives an error on <code>b</code>.</p>",
        "id": 129882947,
        "sender_full_name": "Reid Barton",
        "timestamp": 1531933111
    },
    {
        "content": "<p>Yes, I should have been more careful and specified which sort of whitespace I meant. :)</p>",
        "id": 129882955,
        "sender_full_name": "Reid Barton",
        "timestamp": 1531933122
    },
    {
        "content": "<p>Another option for the chaotic player is to define a <code>has_coe_to_fun</code> from <code>point</code> to <code>point -&gt; (point, point)</code> which sends <code>a</code> to <code>\\lam b, (a, b)</code>.</p>",
        "id": 129883881,
        "sender_full_name": "Reid Barton",
        "timestamp": 1531934014
    }
]