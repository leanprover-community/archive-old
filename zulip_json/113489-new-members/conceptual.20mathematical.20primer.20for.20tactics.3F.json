[
    {
        "content": "<p>I haven't used tactics yet in Lean, and starting to. Looking at the tutorial, some of them seem unnatural to me, and it's not \"clicking\" yet for me. Can you point to a practice that mathematicians perform within informal mathematical proofs, to which tactics are analogous? Is it possible to say \"tactics are the formal version of ....\"?</p>",
        "id": 200971301,
        "sender_full_name": "Chris M",
        "timestamp": 1592280605
    },
    {
        "content": "<p>tactics are programs that build proof terms</p>",
        "id": 200977489,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592288949
    },
    {
        "content": "<p>in informal math we don't build proof terms, we argue that we could build a proof term if we tried</p>",
        "id": 200977504,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592288972
    },
    {
        "content": "<p><code>norm_num</code> is a like a mathematician's <code>a short calculation shows...</code></p>",
        "id": 200977600,
        "sender_full_name": "Jalex Stark",
        "timestamp": 1592289040
    },
    {
        "content": "<p>I think it's a good idea to have such conceptual mathematical primer for tactics, I'll try to merge this idea into the cheat sheet idea <a href=\"#narrow/stream/113489-new-members/topic/Lean.20Cheat.20Sheet/near/200870001\">here</a> .</p>",
        "id": 200980240,
        "sender_full_name": "Utensil Song",
        "timestamp": 1592291932
    },
    {
        "content": "<p>you may find it worthwhile to read at least the intro of Milner's paper that introduced the tactic idea, which gives a nice informal explanation <a href=\"https://royalsocietypublishing.org/doi/10.1098/rsta.1984.0067\">https://royalsocietypublishing.org/doi/10.1098/rsta.1984.0067</a><br>\nIf there are specific tactics that trouble you, feel free to ask about them. Some perhaps too obvious examples would be <code>apply</code> as recognising that when <code>A -&gt; B</code> and we want to prove <code>B</code> then it suffices to prove <code>A</code>, and <code>intro</code> as introducing an arbitrary <code>x : X</code> when we want to prove a <code>forall x : X</code></p>",
        "id": 201035755,
        "sender_full_name": "Matt Earnshaw",
        "timestamp": 1592322773
    }
]