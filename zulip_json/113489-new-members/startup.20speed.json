[
    {
        "content": "<p>Is it normal for Lean to take several minutes to catch up when I freshly open my project in VSCode, even if I've completely precompiled the mathlib dependency to .olean files?</p>",
        "id": 134895169,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538253061
    },
    {
        "content": "<p>Maybe not several minutes, but at least around 1 minute</p>",
        "id": 134895228,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538253123
    },
    {
        "content": "<p>And once it's caught up it seems to spend a significant amount of time after that \"checking import for sorry\" every time</p>",
        "id": 134895274,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538253179
    },
    {
        "content": "<p>I use emacs but it doesn't sound normal. How did you build the mathlib dependency?</p>",
        "id": 134895497,
        "sender_full_name": "Reid Barton",
        "timestamp": 1538253651
    },
    {
        "content": "<p><code>leanpkg build</code> in your project should help. <code>leanpkg build</code> inside <code>_target/deps/mathlib</code> will confuse lean and lead to this kind of behavior</p>",
        "id": 134895503,
        "sender_full_name": "Reid Barton",
        "timestamp": 1538253713
    },
    {
        "content": "<p>Oh, interesting. I ended up doing the latter because the former wouldn't actually build mathlib at all</p>",
        "id": 134895598,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538253902
    },
    {
        "content": "<p>So I probably need to go back and debug what caused the original problem instead</p>",
        "id": 134895605,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538253915
    },
    {
        "content": "<p>If you really want to make sure all of mathlib is built, even the pieces not currently needed in your project, you need do do <code>lean --make</code> inside <code>_targets/deps/mathlib</code>, not <code>leanpkg build</code></p>",
        "id": 134895650,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1538254041
    },
    {
        "content": "<p>The original problem is just that lean is \"smart\" and only compiles the parts of the dependencies that are actually needed--which is annoying if that subset might increase in the future and you'd rather just build it once and be done with it.</p>",
        "id": 134895692,
        "sender_full_name": "Reid Barton",
        "timestamp": 1538254094
    },
    {
        "content": "<p>I thought it might be something like that but I wasn't sure how to get around it, thanks!</p>",
        "id": 134895694,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538254124
    },
    {
        "content": "<p>Do I need to \"undo\" the <code>leanpkg build</code> I did inside <code>_target/deps/mathlib</code> somehow, or just run the correct command now?</p>",
        "id": 134895704,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538254181
    },
    {
        "content": "<p>running the correct command should be enough</p>",
        "id": 134895755,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1538254262
    },
    {
        "content": "<p>How exactly does Lean get confused here - do the .olean files mark themselves in some way, so that my project would not recognize the .olean files I previously built as its own? I'm scanning for hidden files or some other way it would possibly distinguish and finding nothing so far</p>",
        "id": 134895905,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538254631
    },
    {
        "content": "<p>What OS are you using?</p>",
        "id": 134895906,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538254638
    },
    {
        "content": "<p>Windows 10</p>",
        "id": 134895907,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538254649
    },
    {
        "content": "<p>I run linux as well but haven't checked if I get the same behavior there yet</p>",
        "id": 134895909,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538254681
    },
    {
        "content": "<p>Sebastian was saying the other day that sometimes Windows, or maybe some standard anti-virus, goes through the files and maybe randomly touches them messing up \"last updated\" times. I think Lean tries to recompile an olean file if it thinks that the lean file was modified after the olean file was built, and maybe it gets confused on Windows? I don't use this OS though and this is all second hand.</p>",
        "id": 134895949,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538254736
    },
    {
        "content": "<p>I think it has something to do with the <code>leanpkg.path</code> file, but I don't know exactly what</p>",
        "id": 134895956,
        "sender_full_name": "Reid Barton",
        "timestamp": 1538254747
    },
    {
        "content": "<p>I'll keep an eye on the last updated times</p>",
        "id": 134895957,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538254780
    },
    {
        "content": "<p>Sebastian was saying this in an attempt to explain why <code>leanpkg</code> regularly takes 10 seconds to start running on windows</p>",
        "id": 134895958,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538254780
    },
    {
        "content": "<p>despite core lean shipping with the olean files</p>",
        "id": 134895959,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538254795
    },
    {
        "content": "<p>(leanpkg is written in lean)</p>",
        "id": 134896009,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1538254818
    },
    {
        "content": "<p>I haven't had that trouble with <code>leanpkg</code> startup times. I installed it via <code>elan</code> if it makes a difference</p>",
        "id": 134896015,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538254848
    },
    {
        "content": "<p>but perhaps I just don't have an AV that causes that specific problem</p>",
        "id": 134896024,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538254882
    },
    {
        "content": "<p>I can confirm <code>leanpkg build</code> in the correct directory solved the problem for me, thanks all</p>",
        "id": 134896067,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538254941
    },
    {
        "content": "<p>My problem before was misinterpreting the docs I was reading and assuming it would build all of mathlib, but I was running it before adding any imports so it actually built none of it</p>",
        "id": 134896070,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538254981
    },
    {
        "content": "<p>Incidentally this solved another problem I had where VSCode's lean.exe would rise to over 2GiB of RAM during the initial build and never drop back down. Apparently it doesn't get as high when the precompiled stuff is available</p>",
        "id": 134896197,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538255198
    },
    {
        "content": "<p>Oh--does your <code>mathlib</code> dependency specify a different version of lean than your top-level project, by any chance?</p>",
        "id": 134896408,
        "sender_full_name": "Reid Barton",
        "timestamp": 1538255614
    },
    {
        "content": "<p>Oh yeah, that would probably cause the .olean incompatibility by itself. <code>mathlib</code>'s toml says <code>3.4.1</code> but I'm using a recently nightly in my project, because if I used <code>3.4.1</code> it checks out the <code>lean-3.4.1</code> branch of <code>mathlib</code> and I wanted <code>master</code></p>",
        "id": 134896991,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538256956
    },
    {
        "content": "<p>This is probably a problem for even running <code>lean --make</code> inside the mathlib dir, right?</p>",
        "id": 134897030,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538256985
    },
    {
        "content": "<p>I did just run <code>lean --make</code> earlier and we can see the olean version difference:</p>\n<div class=\"codehilite\"><pre><span></span>$ head -c 60 src/regular.olean | xxd\n00000000: 6f6c 6561 6e66 696c 6500 332e 342e 322c  oleanfile.3.4.2,\n00000010: 206e 6967 6874 6c79 2d32 3031 382d 3038   nightly-2018-08\n00000020: 2d32 332c 2063 6f6d 6d69 7420 6231 3361  -23, commit b13a\n00000030: 6331 3237 6664 3833 00ff d828            c127fd83...(\n\n$ head -c 60 _target/deps/mathlib/data/nat/basic.olean | xxd\n00000000: 6f6c 6561 6e66 696c 6500 332e 342e 312c  oleanfile.3.4.1,\n00000010: 2063 6f6d 6d69 7420 3137 6665 3364 6563   commit 17fe3dec\n00000020: 6166 3861 00ff f2e4 59f1 0004 0002 696e  af8a....Y.....in\n00000030: 6974 0000 0402 6c6f 6769 6300            it....logic.\n</pre></div>",
        "id": 134897132,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538257254
    },
    {
        "content": "<blockquote>\n<p>This is probably a problem for even running <code>lean --make</code> inside the mathlib dir, right?</p>\n</blockquote>\n<p>Yes if you already ran <code>leanpkg build</code> which created the <code>leanpkg.path</code> file there.</p>",
        "id": 134897190,
        "sender_full_name": "Reid Barton",
        "timestamp": 1538257420
    },
    {
        "content": "<p>Or wait.</p>",
        "id": 134897191,
        "sender_full_name": "Reid Barton",
        "timestamp": 1538257427
    },
    {
        "content": "<p>Actually I guess it is a question of elan.</p>",
        "id": 134897226,
        "sender_full_name": "Reid Barton",
        "timestamp": 1538257442
    },
    {
        "content": "<p>Yeah, <code>elan</code> will automatically download and build with whatever version the toml specifies</p>",
        "id": 134897231,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538257466
    },
    {
        "content": "<p>I can probably do the mathlib dir manual <code>lean --make</code> by telling elan which specific version to build with, which seems fair to me for an optional manual step</p>",
        "id": 134897241,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538257530
    },
    {
        "content": "<p>I guess the <code>lean --make _target/deps/mathlib</code> instructions are safer in this particular situation then, assuming that elan uses the current working directory to start its search for the toml file</p>",
        "id": 134897242,
        "sender_full_name": "Reid Barton",
        "timestamp": 1538257534
    },
    {
        "content": "<p>Ah yeah I should double check what it does in that case</p>",
        "id": 134897282,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538257575
    },
    {
        "content": "<p>I gotta say it's rather convenient for me coming from Rust that <code>elan</code> is based on <code>rustup</code> because I have a pretty good grasp on exactly how it works already =)</p>",
        "id": 134897291,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538257625
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110032\">@Reid Barton</span> You're right, using <code>lean --make _target/deps/mathlib</code> is the simplest/safest way to make sure it builds the whole thing with your current project's Lean version</p>",
        "id": 134897501,
        "sender_full_name": "Scott Olson",
        "timestamp": 1538258140
    }
]