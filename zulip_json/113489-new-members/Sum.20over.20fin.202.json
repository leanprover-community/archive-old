[
    {
        "content": "<p>I am defining concrete subgroups of SL2(Z) by imposing conditions on the entries of matrices. </p>\n<p>After some work, i have reduced  the <code>mul_mem'</code> condition to <code>(A * B) 1 0 = A 1 0 * B 0 0 + A 1 1 * B 1 0</code>,  but I don't know how to make progress with finite sums. </p>\n<p>What can I do in this minimal example?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">fin</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"c1\">--import algebra.big_operators</span>\n\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">ℤ</span><span class=\"o\">}</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n<span class=\"kn\">lemma</span> <span class=\"n\">lem</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">*</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">A</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">A</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span><span class=\"o\">:=</span>\n    <span class=\"k\">begin</span>\n        <span class=\"n\">dsimp</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">mul</span><span class=\"o\">,</span>\n        <span class=\"n\">simp</span> <span class=\"n\">only</span><span class=\"o\">,</span>\n        <span class=\"n\">rw</span> <span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">dot_product</span><span class=\"o\">,</span>\n\n<span class=\"c1\">--  I&#39;m stuck here</span>\n        <span class=\"c1\">--  The goal is</span>\n        <span class=\"c1\">--     ⊢ ∑ (i : fin 2), A 1 i * B i 0</span>\n        <span class=\"c1\">--      = A 1 0 * B 0 0 + A 1 1 * B 1 0</span>\n        <span class=\"n\">sorry</span>\n    <span class=\"kn\">end</span>\n</code></pre></div>\n\n\n<p>Thanks</p>",
        "id": 203820284,
        "sender_full_name": "Eloi",
        "timestamp": 1594724443
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">fin</span>\n<span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">matrix</span><span class=\"bp\">.</span><span class=\"n\">basic</span>\n\n<span class=\"c1\">--import algebra.big_operators</span>\n\n<span class=\"kn\">variables</span> <span class=\"o\">{</span><span class=\"n\">A</span> <span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">matrix</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">fin</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"bp\">ℤ</span><span class=\"o\">}</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">big_operators</span>\n\n<span class=\"kn\">lemma</span> <span class=\"n\">lem</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"bp\">*</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"bp\">=</span> <span class=\"n\">A</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"n\">A</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"o\">:=</span>\n<span class=\"k\">show</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">+</span> <span class=\"o\">(</span><span class=\"n\">A</span> <span class=\"mi\">1</span> <span class=\"mi\">1</span> <span class=\"bp\">*</span> <span class=\"n\">B</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span> <span class=\"bp\">+</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"bp\">_</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">rw</span> <span class=\"n\">add_zero</span>\n</code></pre></div>",
        "id": 203820546,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594724662
    },
    {
        "content": "<p>defeqs FTW</p>",
        "id": 203820553,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1594724672
    },
    {
        "content": "<p>Wow awesome!</p>\n<p>Thanks!</p>",
        "id": 203820997,
        "sender_full_name": "Eloi",
        "timestamp": 1594725030
    }
]