[
    {
        "content": "<p>Hello! New to lean (and zulip). I'm kid of a hobby proover and functional programmer. I also started studying HoTT recently, little by little. Having previous experience with Agda and Haskell, how does Lean compare to them (and maybe Idris) in terms of writing software?</p>\n<p>I've found Agda to be quite underwhelming in the area of writing \"production\" software, but that's to be expected as it is not the focus. Idris is improving, still not at the satisfactory level but getting there. Haskell is what I mostly use.</p>\n<p>I've noticed Lean \"advertising\" as functional programming language which can be used as the theorem prover, but I get the feeling it has more focus on theorem proving. Am I right?</p>\n<p>Writing \"production\" software that is also proven to be correct in the same language seems quite nice appealing to me. How far (or close) is Lean to that ideal?</p>",
        "id": 245448036,
        "sender_full_name": "Luka Hadžiegrić",
        "timestamp": 1625839745
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"426016\">@Luka Hadžiegrić</span> welcome. You certainly want to look at Lean 4 (see also the <a class=\"stream\" data-stream-id=\"270676\" href=\"/#narrow/stream/270676-lean4\">#lean4</a> stream here on zulip).</p>",
        "id": 245449595,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1625840586
    },
    {
        "content": "<p>Lean 3 is what most of us use, because Lean 4 is still brand new, and doesn't have a large maths library yet. Lean 3 is very good for theorem proving, but for practical production programming, my understanding is that Lean 4 is several miles ahead of Lean 3 (-;</p>",
        "id": 245449772,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1625840654
    },
    {
        "content": "<p>I should add that I don't have any experience writing software.</p>",
        "id": 245449792,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1625840668
    },
    {
        "content": "<p>That's cool, I've just been looking at that. Shame that all the info is still in the relative terms to the Lean itself e.g. Lean4 is faster than Lean3.</p>",
        "id": 245450312,
        "sender_full_name": "Luka Hadžiegrić",
        "timestamp": 1625840925
    },
    {
        "content": "<p>See also:<br>\n<span class=\"user-mention silent\" data-user-id=\"221921\">Marc Huisinga</span> <a href=\"#narrow/stream/113488-general/topic/Lean.20in.20the.20wild/near/245327483\">said</a>:</p>\n<blockquote>\n<p><a href=\"https://link.springer.com/chapter/10.1007/978-3-030-79876-5_37\">The Lean 4 Theorem Prover and Programming Language</a></p>\n</blockquote>",
        "id": 245450717,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1625841092
    },
    {
        "content": "<p>There are some narrow benchmarks (data structures) with comparisons to other functional languages in this paper. <a href=\"https://arxiv.org/abs/1908.05647\">https://arxiv.org/abs/1908.05647</a></p>",
        "id": 245451559,
        "sender_full_name": "Chris B",
        "timestamp": 1625841472
    },
    {
        "content": "<p>There's also Mario's metamath verifier: <a href=\"#narrow/stream/270676-lean4/topic/Metamath.20verifier.20in.20Lean.204/near/237837021\">https://leanprover.zulipchat.com/#narrow/stream/270676-lean4/topic/Metamath.20verifier.20in.20Lean.204/near/237837021</a></p>\n<p>Which apparently performs very well compared to the C implementation.</p>",
        "id": 245452037,
        "sender_full_name": "Chris B",
        "timestamp": 1625841711
    },
    {
        "content": "<p>Yes, this seems impressive. I wonder if there are any web server libraries for Lean already? Seems like they have opened up quit a few possibilities for memory management performance in that arxiv paper.</p>",
        "id": 245452927,
        "sender_full_name": "Luka Hadžiegrić",
        "timestamp": 1625842194
    },
    {
        "content": "<p>Not yet. The Lean 4 ecosystem is virtually nonexistent. You can't write production quality software with Lean yet, unfortunately. <del>Theorem proving software is, for the most part, experimental.</del></p>",
        "id": 245455123,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1625843221
    },
    {
        "content": "<p><del>This is a very ill-informed comment. There have been some major pieces of software verification done in Coq.</del></p>",
        "id": 245455303,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1625843299
    },
    {
        "content": "<p>Thanks. I crossed out the ill-informed part <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 245455561,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1625843425
    },
    {
        "content": "<p>I agree about the Lean part, but Lean 4 was only released this year. The ecosystem will emerge.</p>",
        "id": 245455683,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1625843498
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"426016\">Luka Hadžiegrić</span> <a href=\"#narrow/stream/113489-new-members/topic/Writing.20Production.20Software/near/245452927\">said</a>:</p>\n<blockquote>\n<p>Yes, this seems impressive. I wonder if there are any web server libraries for Lean already? Seems like they have opened up quit a few possibilities for memory management performance in that arxiv paper.</p>\n</blockquote>\n<p>Technically there is a <a href=\"https://github.com/leanprover/lean4/tree/f6e1314fa08293dea66a329e05b6c196a0189163/tests/playground/webserver\">demo</a> webserver :) Of course it is very simple, but demonstrates cool syntactic features.</p>",
        "id": 245457195,
        "sender_full_name": "Wojciech Nawrocki",
        "timestamp": 1625844172
    },
    {
        "content": "<p>Well, for HTTP you can get away with a homebrew implementation. Because you have to use a reverse proxy to manage more complicated aspects of HTTP anyway, such as TLS, HTTP/2, virtual hosts, etc <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 245458664,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1625844886
    },
    {
        "content": "<p>Your stuff might not be production quality, but it doesn't hurt to try. <span aria-label=\"clown\" class=\"emoji emoji-1f921\" role=\"img\" title=\"clown\">:clown:</span></p>",
        "id": 245458736,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1625844927
    }
]