[
    {
        "content": "<p>Lean's chapter on induction and recursion says \"Behind the scenes, these descriptions are “compiled” down to primitive recursors, using a procedure that we refer to as the “equation compiler.”\"<br>\nDo Lean's \"primitive recursors\" have anything to do with primitive recursion in this sense: <a href=\"https://en.wikipedia.org/wiki/Primitive_recursive_function\">https://en.wikipedia.org/wiki/Primitive_recursive_function</a></p>",
        "id": 205314923,
        "sender_full_name": "Chris M",
        "timestamp": 1595993175
    },
    {
        "content": "<p>I think it just means that the equation compiler can generate fancy recursors from the \"prrimitive\" (not in the sense of your link) <code>rec</code></p>",
        "id": 205325377,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1596007464
    },
    {
        "content": "<p>I'm not an expert but I think that primitive recursion in the sense of your link is just a story about nat</p>",
        "id": 205325501,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1596007577
    },
    {
        "content": "<p>Yes, in both social and technical senses. CIC is an outgrowth of the idea of primitive recursion applied to general inductive specifications, and if you specialize the primitive recursor for <code>nat</code> with codomain <code>nat</code>, then you get exactly the principle of primitive recursion as originally conceived on <code>nat</code>.</p>",
        "id": 205326807,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1596008757
    }
]