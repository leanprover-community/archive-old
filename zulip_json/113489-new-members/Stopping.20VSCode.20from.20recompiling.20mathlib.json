[
    {
        "content": "<p>I just created a new project by executing <code>leanproject new kata</code>, edited <code>leanpkg.toml</code> to contain the following:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[package]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"kata\"</span>\n<span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s\">\"0.1\"</span>\n<span class=\"n\">lean_version</span> <span class=\"o\">=</span> <span class=\"s\">\"leanprover-community/lean:3.20.0\"</span>\n<span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"s\">\"src\"</span>\n\n<span class=\"k\">[dependencies]</span>\n<span class=\"n\">mathlib</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">git</span> <span class=\"o\">=</span> <span class=\"s\">\"https://github.com/leanprover-community/mathlib\"</span><span class=\"p\">,</span> <span class=\"n\">rev</span> <span class=\"o\">=</span> <span class=\"s\">\"da66bb81bf0466335bae82077f0c335dfe53aeb3\"</span><span class=\"p\">}</span>\n</code></pre></div>\n\n<p>and executed <code>leanproject get-mathlib-cache</code>. I then opened my project folder in VSCode and created a new file <code>Preloaded.lean</code> with the following contents:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.equiv.basic</span> <span class=\"n\">data.pnat.basic</span>\n</code></pre></div>\n\n<p>The orange bar at the <code>import</code> line stays for well over a minute, and system statistics indicate that CPU usage increases to 100%, with all 4G of RAM and 1.5G of swap (of 2G total) being used in the meantime, suggesting that (parts of) mathlib was being recompiled. How do I stop this from happening? I thought that <code>leanproject get-mathlib-cache</code> used to do the job but maybe I misremembered.</p>",
        "id": 212212567,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1601799819
    },
    {
        "content": "<p>Why did you edit the <code>leanpkg.toml</code>?</p>",
        "id": 212215910,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601805654
    },
    {
        "content": "<p>The <a href=\"https://github.com/DonaldKellett/CW-Lean3-Examples\">toy Lean examples</a> I use for Codewars have been tested with a version of mathlib from about a week ago and I've just been asked to add an example involving a mathlib dependency. I thought it would be easier to pin mathlib and build my new example on that specific commit instead of running all of my previous examples with the newest mathlib.</p>\n<p>But now that I think about it, it would probably be easier to just use the newest mathlib and run all of the existing examples against it, especially considering that none of them have any meaningful dependency on mathlib AFAIK.</p>",
        "id": 212216715,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1601807053
    },
    {
        "content": "<p>That being said I'm not able to reproduce your issue.</p>",
        "id": 212216812,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601807230
    },
    {
        "content": "<p>I did exactly what you wrote and everything works fine.</p>",
        "id": 212216817,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601807252
    },
    {
        "content": "<p>What happens if you quit VSCode and type <code>leanproject build</code> in the <code>kata</code> folder?</p>",
        "id": 212216829,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1601807282
    },
    {
        "content": "<p>Apologies for the late reply, I used the newest mathlib when constructing my Lean examples as I mentioned earlier, but I realized I had to stick to a fixed mathlib version anyway for updating the Lean content on Codewars in order to ensure reproducibility, and so got another chance to reproduce this issue.</p>\n<blockquote>\n<p>What happens if you quit VSCode and type <code>leanproject build</code> in the <code>kata</code> folder?</p>\n</blockquote>\n<p>I get the following output, produced within a second or two:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">Building</span> <span class=\"n\">project</span> <span class=\"n\">kata</span>\n<span class=\"n\">configuring</span> <span class=\"n\">kata</span> <span class=\"mi\">0</span><span class=\"bp\">.</span><span class=\"mi\">1</span>\n<span class=\"n\">mathlib</span><span class=\"o\">:</span> <span class=\"n\">trying</span> <span class=\"n\">to</span> <span class=\"n\">update</span> <span class=\"n\">_target</span><span class=\"bp\">/</span><span class=\"n\">deps</span><span class=\"bp\">/</span><span class=\"n\">mathlib</span> <span class=\"n\">to</span> <span class=\"n\">revision</span> <span class=\"n\">da66bb81bf0466335bae82077f0c335dfe53aeb3</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">git</span> <span class=\"n\">checkout</span> <span class=\"c1\">--detach da66bb81bf0466335bae82077f0c335dfe53aeb3    # in directory _target/deps/mathlib</span>\n<span class=\"n\">Previous</span> <span class=\"n\">HEAD</span> <span class=\"n\">position</span> <span class=\"n\">was</span> <span class=\"n\">f6836c16f</span> <span class=\"n\">chore</span><span class=\"o\">(</span><span class=\"n\">scripts</span><span class=\"o\">):</span> <span class=\"n\">update</span> <span class=\"n\">nolints.txt</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"mi\">4547</span><span class=\"o\">)</span>\n<span class=\"n\">HEAD</span> <span class=\"n\">is</span> <span class=\"n\">now</span> <span class=\"n\">at</span> <span class=\"n\">da66bb81b</span> <span class=\"n\">feat</span><span class=\"o\">(</span><span class=\"bp\">*</span><span class=\"o\">):</span> <span class=\"n\">preparations</span> <span class=\"n\">for</span> <span class=\"n\">roots</span> <span class=\"n\">of</span> <span class=\"n\">unity</span> <span class=\"o\">(</span><span class=\"bp\">#</span><span class=\"mi\">4322</span><span class=\"o\">)</span>\n<span class=\"bp\">&gt;</span> <span class=\"n\">lean</span> <span class=\"c1\">--make src</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">dsleung</span><span class=\"bp\">/</span><span class=\"n\">Desktop</span><span class=\"bp\">/</span><span class=\"n\">kata</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">InitialSolution.lean</span><span class=\"o\">:</span><span class=\"mi\">3</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">declaration</span> <span class=\"bp\">'</span><span class=\"n\">zero_point_nine_recurring_is_one'</span> <span class=\"n\">uses</span> <span class=\"n\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">dsleung</span><span class=\"bp\">/</span><span class=\"n\">Desktop</span><span class=\"bp\">/</span><span class=\"n\">kata</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">Solution.lean</span><span class=\"o\">:</span><span class=\"mi\">16</span><span class=\"o\">:</span><span class=\"mi\">48</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"bp\">'</span><span class=\"n\">one_div_pos_of_pos'</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">dsleung</span><span class=\"bp\">/</span><span class=\"n\">Desktop</span><span class=\"bp\">/</span><span class=\"n\">kata</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">Solution.lean</span><span class=\"o\">:</span><span class=\"mi\">20</span><span class=\"o\">:</span><span class=\"mi\">10</span><span class=\"o\">:</span> <span class=\"n\">error</span><span class=\"o\">:</span> <span class=\"n\">unknown</span> <span class=\"n\">identifier</span> <span class=\"bp\">'</span><span class=\"n\">one_div_le_of_one_div_le_of_pos'</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">dsleung</span><span class=\"bp\">/</span><span class=\"n\">Desktop</span><span class=\"bp\">/</span><span class=\"n\">kata</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">Solution.lean</span><span class=\"o\">:</span><span class=\"mi\">12</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">declaration</span> <span class=\"bp\">'</span><span class=\"n\">zero_point_nine_recurring_is_one'</span> <span class=\"n\">uses</span> <span class=\"n\">sorry</span>\n<span class=\"bp\">/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">dsleung</span><span class=\"bp\">/</span><span class=\"n\">Desktop</span><span class=\"bp\">/</span><span class=\"n\">kata</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">SolutionTest.lean</span><span class=\"o\">:</span><span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">0</span><span class=\"o\">:</span> <span class=\"n\">warning</span><span class=\"o\">:</span> <span class=\"n\">imported</span> <span class=\"n\">file</span> <span class=\"bp\">'/</span><span class=\"n\">home</span><span class=\"bp\">/</span><span class=\"n\">dsleung</span><span class=\"bp\">/</span><span class=\"n\">Desktop</span><span class=\"bp\">/</span><span class=\"n\">kata</span><span class=\"bp\">/</span><span class=\"n\">src</span><span class=\"bp\">/</span><span class=\"n\">Solution.lean'</span> <span class=\"n\">uses</span> <span class=\"n\">sorry</span>\n<span class=\"n\">propext</span>\n<span class=\"n\">classical.choice</span>\n<span class=\"n\">quot.sound</span>\n<span class=\"o\">[</span><span class=\"n\">sorry</span><span class=\"o\">]</span>\n<span class=\"n\">external</span> <span class=\"n\">command</span> <span class=\"n\">exited</span> <span class=\"k\">with</span> <span class=\"n\">status</span> <span class=\"mi\">1</span>\n<span class=\"n\">Command</span> <span class=\"sc\">'['</span><span class=\"n\">leanpkg'</span><span class=\"o\">,</span> <span class=\"bp\">'</span><span class=\"n\">build'</span><span class=\"o\">]</span><span class=\"bp\">'</span> <span class=\"n\">returned</span> <span class=\"n\">non</span><span class=\"bp\">-</span><span class=\"n\">zero</span> <span class=\"n\">exit</span> <span class=\"n\">status</span> <span class=\"mi\">1</span><span class=\"bp\">.</span>\n</code></pre></div>\n\n<p>I suppose that means mathlib is <em>not</em> being recompiled in this case (but it still definitely is in VSCode)?</p>",
        "id": 212791271,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1602228734
    },
    {
        "content": "<p>Update: Upon returning to VSCode after running <code>leanproject build</code> once, it seems that mathlib is no longer being recompiled. Thanks <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> !</p>",
        "id": 212791331,
        "sender_full_name": "Donald Sebastian Leung",
        "timestamp": 1602228799
    },
    {
        "content": "<p>I think my VSCode, or Lean installation, has something really wrong in it; after 5/10 minutes of work it \"randomly\" (so seems to me, at least) start compiling the whole library. And therefore I cannot work anymore... Is anyone experiencing the same problem? Suggestions?</p>",
        "id": 213494741,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602800111
    },
    {
        "content": "<p>I should also add that in \"normal times\" my whole system seems very slow, each type I make a small modification it takes some 5 to 10 seconds to get to work again, which is a LOOOOONG time if you keep on writing things.</p>",
        "id": 213494839,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602800168
    },
    {
        "content": "<p>I also am seeing frequent over-recompilations. I kill my lean server and restart it pretty often. Usually that fixes it. Otherwise, I switch to master branch, pull, rerun <code>leanproject get-cache</code>, and see if that fixes it. Usually it does - maybe I'm causing these problems by doing something inappropriate with branches, I dunno. If that does fix it then merging the new master into my branch fixes my original problem</p>",
        "id": 213495101,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602800368
    },
    {
        "content": "<p>How do you kill your server?</p>",
        "id": 213495201,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602800427
    },
    {
        "content": "<p>Random library recompilation: some tips are (a) close files you're not working on (b) restart VS Code.</p>\n<p>5 to 10 seconds of orange bars: this just sounds like you used an expensive tactic early on in a proof and it is being run again and again. So it's \"bad code\" in some sense.</p>",
        "id": 213495211,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1602800439
    },
    {
        "content": "<p>(btw are you also using VSCode? On Win, Mac?)</p>",
        "id": 213495213,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602800444
    },
    {
        "content": "<p><code>C-c C-r</code> in emacs. Or just with <code>ps aux</code> and <code>kill</code> from a terminal</p>",
        "id": 213495224,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602800459
    },
    {
        "content": "<p>In VS Code you can hit ctrl+P (or cmd+P on a mac) and type \"Lean: restart\". You can also bind a key to this command.</p>",
        "id": 213495259,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602800488
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/Stopping.20VSCode.20from.20recompiling.20mathlib/near/213495211\">said</a>:</p>\n<blockquote>\n<p>Random library recompilation: some tips are (a) close files you're not working on (b) restart VS Code.</p>\n<p>5 to 10 seconds of orange bars: this just sounds like you used an expensive tactic early on in a proof and it is being run again and again. So it's \"bad code\" in some sense.</p>\n</blockquote>\n<p>Could very possibly be: what are the typical \" bad\" tactics? I guess <code>simp</code> is one</p>",
        "id": 213495270,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602800501
    },
    {
        "content": "<p>emacs on linux. vscode isn't doing the recompilation itself, right? it's communicating out to some lean process</p>",
        "id": 213495274,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602800503
    },
    {
        "content": "<p>Right</p>",
        "id": 213495379,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602800563
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113489-new-members/topic/Stopping.20VSCode.20from.20recompiling.20mathlib/near/213495259\">said</a>:</p>\n<blockquote>\n<p>In VS Code you can hit ctrl+P (or cmd+P on a mac) and type \"Lean: restart\". You can also bind a key to this command.</p>\n</blockquote>\n<p>I tried with ctrl+P, the bar when I can write opens but when I type Lean: restart I just get a \"No matching result' error... am I missing something?</p>",
        "id": 213495462,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602800640
    },
    {
        "content": "<p>try just typing \"Lean\" and looking through the options</p>",
        "id": 213495520,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602800658
    },
    {
        "content": "<p>Oh sorry, it's ctrl+shift+p</p>",
        "id": 213495553,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602800684
    },
    {
        "content": "<p>It restarted but it is compiling everything again. Probably <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  is right, my code must be terrible</p>",
        "id": 213495643,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602800763
    },
    {
        "content": "<p>is it also recompiling your import statements at the top of the file? or is it only recompiling code that you wrote yourself</p>",
        "id": 213495698,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602800796
    },
    {
        "content": "<p>I believe it is recompiling the whole library (there are orange bars on the left, where the library is, and all over the file, from the first line down to where I am writing)</p>",
        "id": 213495758,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602800844
    },
    {
        "content": "<p>I would recommend: open a terminal, run <code>leanproject build</code>, then use ctrl-shift-p \"Lean: restart\".</p>",
        "id": 213495766,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1602800846
    },
    {
        "content": "<p>If <code>leanproject build</code> is recompiling everything, then either you have edited a file low in hierarchy, and need to either</p>\n<ol>\n<li>commit your branch and let continuous integration compile everything, or</li>\n<li>let <code>leanproject build</code> complete locally.</li>\n</ol>",
        "id": 213495871,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1602800894
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113489-new-members/topic/Stopping.20VSCode.20from.20recompiling.20mathlib/near/213495766\">said</a>:</p>\n<blockquote>\n<p>I would recommend: open a terminal, run <code>leanproject build</code>, then use ctrl-shift-p \"Lean: restart\".</p>\n</blockquote>\n<p>Thanks, I had tried this in the afternoon. the <code>leanproject build</code> command took a hour or so (is it normal?), and then Lean worked for some 10/15 minutes. After that, it begun compiling everything again</p>",
        "id": 213495915,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602800924
    },
    {
        "content": "<p>If <code>leanproject build</code> returns relatively quickly (say, at most 10s, hopefully much less), <em>and</em> you then restart the lean server and still see orange bars, then we really have a problem.</p>",
        "id": 213495926,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1602800932
    },
    {
        "content": "<p>No, if you have up-to-date olean then <code>leanproject build</code> should take at most 10s.</p>",
        "id": 213495962,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1602800951
    },
    {
        "content": "<p>Hopefully less!</p>",
        "id": 213495982,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1602800965
    },
    {
        "content": "<p>are you working on a branch of the main repo, or on a fork of the project, or how do you have that set up?</p>",
        "id": 213496005,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602800985
    },
    {
        "content": "<p>I am working on a branch of the main repo</p>",
        "id": 213496031,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801002
    },
    {
        "content": "<p>(which is Anne's repo, actually, <code>Vierkantor-dedekind-domain</code>)</p>",
        "id": 213496087,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801023
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110087\">Scott Morrison</span> <a href=\"#narrow/stream/113489-new-members/topic/Stopping.20VSCode.20from.20recompiling.20mathlib/near/213495982\">said</a>:</p>\n<blockquote>\n<p>Hopefully less!</p>\n</blockquote>\n<p>Let me try again!</p>",
        "id": 213496097,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801037
    },
    {
        "content": "<p>try running <code>leanproject get-cache</code> before building</p>",
        "id": 213496134,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602801073
    },
    {
        "content": "<p>I am going to, give me 30 sec</p>",
        "id": 213496233,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801128
    },
    {
        "content": "<p>Now I get an error, but I think this comes from the fact that I have just <code>pull</code> and the server must be compiling</p>",
        "id": 213496311,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801203
    },
    {
        "content": "<p>Which file(s) are you editing, exactly?</p>",
        "id": 213496317,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602801205
    },
    {
        "content": "<p>An hour doesn't seem unreasonable if you're editing something really low level.</p>",
        "id": 213496351,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602801236
    },
    {
        "content": "<p>BTW: Is this related to the fact that after almost every <code>pull</code> I receive an e-mail with an error saying  <code>[leanprover-community/mathlib] Run failed: continuous integration - Vierkantor-dedekind-domain (8bd048d)</code></p>",
        "id": 213496400,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801253
    },
    {
        "content": "<p>You can turn those notifications off from your GitHub settings.</p>",
        "id": 213496423,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602801280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113489-new-members/topic/Stopping.20VSCode.20from.20recompiling.20mathlib/near/213496317\">said</a>:</p>\n<blockquote>\n<p>Which file(s) are you editing, exactly?</p>\n</blockquote>\n<p>I am editing the file on Dedekind Domains, I don't think it is low level</p>",
        "id": 213496425,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801283
    },
    {
        "content": "<p>Also, you should be getting those from pushes, not pulls...</p>",
        "id": 213496435,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602801295
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113489-new-members/topic/Stopping.20VSCode.20from.20recompiling.20mathlib/near/213496423\">said</a>:</p>\n<blockquote>\n<p>You can turn those notifications off from your GitHub settings.</p>\n</blockquote>\n<p>Well, but I am wondering whether this is a signal of an issue</p>",
        "id": 213496448,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801310
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"123965\">Bryan Gin-ge Chen</span> <a href=\"#narrow/stream/113489-new-members/topic/Stopping.20VSCode.20from.20recompiling.20mathlib/near/213496435\">said</a>:</p>\n<blockquote>\n<p>Also, you should be getting those from pushes, not pulls...</p>\n</blockquote>\n<p>You're right, my mistake .</p>",
        "id": 213496465,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801329
    },
    {
        "content": "<p>Well, the runs are failing because the code that you're pushing has errors in the Lean or some linting issues. It's usually fine.</p>",
        "id": 213496514,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602801365
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238605\">Kevin Lacker</span> <a href=\"#narrow/stream/113489-new-members/topic/Stopping.20VSCode.20from.20recompiling.20mathlib/near/213496134\">said</a>:</p>\n<blockquote>\n<p>try running <code>leanproject get-cache</code> before building</p>\n</blockquote>\n<p>Ok, now I could download the cache. And I am going to rebuild.</p>",
        "id": 213496586,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801427
    },
    {
        "content": "<p>Nope, the terminal window says <code>&gt; lean --make src</code>, the fan is taking off and a minute has passed...</p>",
        "id": 213496704,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801513
    },
    {
        "content": "<p>(and it looks very much as before)</p>",
        "id": 213496717,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801531
    },
    {
        "content": "<p>Here's the log for the build triggered by your most recent commit: <a href=\"https://github.com/leanprover-community/mathlib/runs/1261674429\">https://github.com/leanprover-community/mathlib/runs/1261674429</a></p>",
        "id": 213496996,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602801727
    },
    {
        "content": "<p>You can see that the build hits an error on <code>src/algebra/direct_limit.lean</code>.</p>",
        "id": 213497023,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602801756
    },
    {
        "content": "<p>If that file isn't fixed, then you won't get oleans for anything \"downstream\".</p>",
        "id": 213497040,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602801770
    },
    {
        "content": "<p>I see-but I have never touched that file myself. Can't I just copy the version in <code>master</code> and hope it helps?</p>",
        "id": 213497089,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801816
    },
    {
        "content": "<p>(well, provided my pc won't explose in the coming minutes, which  seems like the next probable event)</p>",
        "id": 213497218,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602801914
    },
    {
        "content": "<p>your pc is fine, you'll have a mildly elevated risk of hard drive failures if it keeps running this way for the next 3 months straight ;-)</p>",
        "id": 213497244,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602801956
    },
    {
        "content": "<p>even if you never touched that file, you must be causing the build breakage somehow, since it's working in master</p>",
        "id": 213497326,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802004
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"300245\">Filippo A. E. Nuccio</span> <a href=\"#narrow/stream/113489-new-members/topic/Stopping.20VSCode.20from.20recompiling.20mathlib/near/213497089\">said</a>:</p>\n<blockquote>\n<p>I see-but I have never touched that file myself. Can't I just copy the version in <code>master</code> and hope it helps?</p>\n</blockquote>\n<p>This is unlikely to fix things.</p>\n<p>I think <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> can probably provide the best advice here.</p>",
        "id": 213497333,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602802010
    },
    {
        "content": "<p>I asked them a couple of times, but they don't seem to experience the same issue.</p>",
        "id": 213497364,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802039
    },
    {
        "content": "<p>If it were me, I would <code>git merge master</code> and then try to fix all the conflicts and errors.</p>",
        "id": 213497403,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602802073
    },
    {
        "content": "<p>But that looks to be difficult at this point.</p>",
        "id": 213497464,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602802098
    },
    {
        "content": "<p>are you working on your own branch, or are you sharing a branch with a bunch of other people, and you all kind of simultaneously check in code without being totally sure it works?</p>",
        "id": 213497472,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802108
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238605\">Kevin Lacker</span> <a href=\"#narrow/stream/113489-new-members/topic/Stopping.20VSCode.20from.20recompiling.20mathlib/near/213497326\">said</a>:</p>\n<blockquote>\n<p>even if you never touched that file, you must be causing the build breakage somehow, since it's working in master</p>\n</blockquote>\n<p>I agree, but I have no idea on how to figure where the breakage takes place. Expecially because I did the <code>leanproject build</code> this afternoon, it took a hour or so; and after ten minutes of work on the newly rebuild library, I went back where I was</p>",
        "id": 213497481,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802114
    },
    {
        "content": "<p>Well, technically we are three people working on this, but the other two members haven't touched the file in the last 3 weeks or so.</p>",
        "id": 213497540,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802166
    },
    {
        "content": "<p>When you run <code>leanproject build</code>, you should pay attention to the output. If the word <code>error</code> shows up anywhere then things are broken.</p>",
        "id": 213497575,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602802198
    },
    {
        "content": "<p>And what do I do in that case?</p>",
        "id": 213497637,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802213
    },
    {
        "content": "<p>You will have to fix the error or get someone to fix it for you.</p>",
        "id": 213497652,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602802226
    },
    {
        "content": "<p>it looks like both you and Vierkantor have checked into the branch recently</p>",
        "id": 213497671,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802248
    },
    {
        "content": "<p>you can't look at just a single file - it's possible for a change in one file to break something in another file</p>",
        "id": 213497682,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802258
    },
    {
        "content": "<p>Well, if the other file is downstream wrt mine, right?</p>",
        "id": 213497712,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802294
    },
    {
        "content": "<p>look at <a href=\"https://github.com/leanprover-community/mathlib/compare/Vierkantor-dedekind-domain\">https://github.com/leanprover-community/mathlib/compare/Vierkantor-dedekind-domain</a></p>",
        "id": 213497724,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802305
    },
    {
        "content": "<p>it was passing checks as of commit <a href=\"https://github.com/leanprover-community/mathlib/commit/8c94fef07967472c2f839f4333f479888196efdb\">https://github.com/leanprover-community/mathlib/commit/8c94fef07967472c2f839f4333f479888196efdb</a></p>",
        "id": 213497789,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802339
    },
    {
        "content": "<p>and then continuous integration broke here: <a href=\"https://github.com/leanprover-community/mathlib/commit/8bd048dc7a42350246468e323e4609c6bf1a2d31\">https://github.com/leanprover-community/mathlib/commit/8bd048dc7a42350246468e323e4609c6bf1a2d31</a></p>",
        "id": 213497812,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802358
    },
    {
        "content": "<p>it looks like you did a merge which failed</p>",
        "id": 213497819,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802363
    },
    {
        "content": "<p>6 hours ago, you did a merge which had \"313 changed files with 13,112 additions and 4,549 deletions\"</p>",
        "id": 213497841,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802384
    },
    {
        "content": "<p>my guess is that one of those 313 files you changed had a problem</p>",
        "id": 213497850,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802395
    },
    {
        "content": "<p>But how is it possible that I changed 313 files?</p>",
        "id": 213497860,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802410
    },
    {
        "content": "<p>(let alone the 13,112 additions)?</p>",
        "id": 213497874,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802425
    },
    {
        "content": "<p>take a look, the commit where you did it is right here: <a href=\"https://github.com/leanprover-community/mathlib/commit/8bd048dc7a42350246468e323e4609c6bf1a2d31\">https://github.com/leanprover-community/mathlib/commit/8bd048dc7a42350246468e323e4609c6bf1a2d31</a></p>",
        "id": 213497883,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802433
    },
    {
        "content": "<p>it looks like a massive merge, maybe you ran a huge git merge command without realizing it was a huge git merge command?</p>",
        "id": 213497963,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802471
    },
    {
        "content": "<p>I am looking at that commit and am shocked...</p>",
        "id": 213497982,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802485
    },
    {
        "content": "<p>I don't think I merged anything: I opened git, checked with <code>git status</code> that I was up to date and opened VLCode</p>",
        "id": 213498033,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802526
    },
    {
        "content": "<p>worked a bit, then commit+pushed.</p>",
        "id": 213498051,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802541
    },
    {
        "content": "<p>It could just be that you merged master at that point.</p>",
        "id": 213498079,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1602802562
    },
    {
        "content": "<p>git is kind of like a swiss army knife where one of the tools is a grenade. if you just kinda type one command wrong it can screw a lot of stuff up</p>",
        "id": 213498134,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802589
    },
    {
        "content": "<p>but I never type commands on <code>git</code>. I work directly and only in VSCode</p>",
        "id": 213498174,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802631
    },
    {
        "content": "<p>shrug</p>",
        "id": 213498182,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802637
    },
    {
        "content": "<p>For instance, it seems that I touched upon <code>src/algebra/char_zero.lean </code></p>",
        "id": 213498198,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802653
    },
    {
        "content": "<p>How do you merge master into your working branch, then?</p>",
        "id": 213498203,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1602802655
    },
    {
        "content": "<p>Obviously the changes in that massive commit are changes other people have been making to master.</p>",
        "id": 213498218,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1602802672
    },
    {
        "content": "<p>you probably clicked \"ok\" to something in vscode that was actually a bad idea to click ok on</p>",
        "id": 213498231,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802681
    },
    {
        "content": "<p>It can't be anything other than merging master in your branch.</p>",
        "id": 213498271,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1602802686
    },
    {
        "content": "<p>at any rate, what you want to do here is three steps</p>",
        "id": 213498282,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802698
    },
    {
        "content": "<p>This is something <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span>  does, normally. I usually only work in my local copy of their branch</p>",
        "id": 213498288,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802702
    },
    {
        "content": "<p>On the other hand, merging master is something you have to do at some point.</p>",
        "id": 213498295,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1602802707
    },
    {
        "content": "<p>first, you made some changes after that massive merge. in this commit: <a href=\"https://github.com/leanprover-community/mathlib/commit/53a347b5d8c50f7b6d99fd94e2bb192b4688782e\">https://github.com/leanprover-community/mathlib/commit/53a347b5d8c50f7b6d99fd94e2bb192b4688782e</a></p>",
        "id": 213498299,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802710
    },
    {
        "content": "<p>grab those changes and store them locally somehow. i would like, cut and paste them into a text file or something naive</p>",
        "id": 213498330,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802732
    },
    {
        "content": "<p>second, roll back your branch to before the merge broke everything</p>",
        "id": 213498342,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802742
    },
    {
        "content": "<p>probably google for some page of git commands, i never remember how to do this stuff</p>",
        "id": 213498356,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802754
    },
    {
        "content": "<p>third, reapply your changes that you intended to make, without doing that huge merge</p>",
        "id": 213498370,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802764
    },
    {
        "content": "<p>Thanks, I will do this. But I'd like to undestand where this came from. I haven't typed <code>merge</code> a single time today</p>",
        "id": 213498459,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802807
    },
    {
        "content": "<p>And I have been fighting against these issue since June or something</p>",
        "id": 213498476,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802828
    },
    {
        "content": "<p>there are several layers to this answer</p>",
        "id": 213498491,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802840
    },
    {
        "content": "<p>the most superficial answer is that it probably came from vscode, because most people set up vscode to interact with git. maybe you accidentally clicked some icon that does something</p>",
        "id": 213498532,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802868
    },
    {
        "content": "<p>Do you ever run <code>leanproject up</code>?</p>",
        "id": 213498588,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1602802901
    },
    {
        "content": "<p>Yes---I had been told it is more or less equivalent to <code>get-cache</code></p>",
        "id": 213498618,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602802915
    },
    {
        "content": "<p>the second level of answer is that the more you work against some branch that is super diverged from master, the more of these problems you will have. so you can avoid trouble by staying closer to master</p>",
        "id": 213498774,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602802988
    },
    {
        "content": "<p>Well, but if <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span>  merged yesterday the master with their branch, and I pulled right before starting to work, I was pretty close , no?</p>",
        "id": 213498839,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602803041
    },
    {
        "content": "<p>AHAH: In the meanwhile <code>leanproject build</code> has finished with tons and tons of errors</p>",
        "id": 213499069,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602803179
    },
    {
        "content": "<p>both of you are super far away from master, this separate branch has been open since August 4</p>",
        "id": 213499119,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602803237
    },
    {
        "content": "<p>were you getting a bunch of error emails from continuous integration that you were ignoring?</p>",
        "id": 213499140,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602803269
    },
    {
        "content": "<p>Yes - very bad idea, I suppose.</p>",
        "id": 213499148,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602803282
    },
    {
        "content": "<p>the thing to do when you get one is to look at the CI error - a page like this one: <a href=\"https://github.com/leanprover-community/mathlib/runs/1261674429\">https://github.com/leanprover-community/mathlib/runs/1261674429</a></p>",
        "id": 213499390,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602803500
    },
    {
        "content": "<p>if it seems like it's your fault, fix it. if it doesn't seem like it's your fault, look at the commit history. it's linked from that page if you click on the branch name. a page like this one: <a href=\"https://github.com/leanprover-community/mathlib/compare/Vierkantor-dedekind-domain\">https://github.com/leanprover-community/mathlib/compare/Vierkantor-dedekind-domain</a></p>",
        "id": 213499450,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602803528
    },
    {
        "content": "<p>the little X's on the right show you when the build was OK and when the build was broken</p>",
        "id": 213499473,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602803549
    },
    {
        "content": "<p>in this case, you can see that there was an ok build earlier today, and then the first of the most recent block of X's is the commit you should be suspicious of</p>",
        "id": 213499491,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602803566
    },
    {
        "content": "<p>and when you say \"it's your fault\" do you mean that there is a non-compiling file?</p>",
        "id": 213499492,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602803569
    },
    {
        "content": "<p>when I checked that commit, I saw that 1. you were the author and 2. it modified 300 files, which made me think aha looks like an accidental huge merge</p>",
        "id": 213499515,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602803599
    },
    {
        "content": "<p>I mean that you committed the change that broke the build</p>",
        "id": 213499523,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602803607
    },
    {
        "content": "<p>it might not be your fault if like, maybe there's something that breaks randomly once every 20 runs. then the test is at fault</p>",
        "id": 213499553,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602803633
    },
    {
        "content": "<p>if you suspect something like that, have the CI system rerun the build</p>",
        "id": 213499612,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602803653
    },
    {
        "content": "<p>namely? I mean, it will complain and won't build, no?</p>",
        "id": 213499672,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602803714
    },
    {
        "content": "<p>let's say the error is like, \"error for free_comm_ring.lift, failed to synthesize type class instance\". that sounds like your fault. but if the error is like, \"error, hard drive failure detected, system rebooting.\" that doesn't sound like your fault.</p>",
        "id": 213499749,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602803778
    },
    {
        "content": "<p>yet I believe there must be some problem with my VSCode, or something. I have <code>checkout</code> to <code>master</code>, and again VSCode has been compiling for 5 minutes</p>",
        "id": 213499873,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602803897
    },
    {
        "content": "<p>although I have simply <code>get-cache</code> and then opened VSCode, without typing a single character</p>",
        "id": 213499912,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602803937
    },
    {
        "content": "<p>If you only <code>git checkout</code>, you don't have the corresponding <code>olean</code> files. So you'll need to build those locally or get them using <code>leanproject get-cache</code>..</p>",
        "id": 213499951,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1602803965
    },
    {
        "content": "<p>so I did: <code>checkout</code>, then <code>get-cache</code>, then opened VSCode. I went to a file (without editing) to see if the Infoview would work, and here I am since 5 minutes.</p>",
        "id": 213500032,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804021
    },
    {
        "content": "<p>restart the lean server</p>",
        "id": 213500040,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804031
    },
    {
        "content": "<p>done</p>",
        "id": 213500050,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804044
    },
    {
        "content": "<p>orange bars...</p>",
        "id": 213500055,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804049
    },
    {
        "content": "<p>you're sure you're on master?</p>",
        "id": 213500086,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804078
    },
    {
        "content": "<p>FAE@DESKTOP-MMB9C9K MINGW64 ~/Desktop/Lean/mathlib (Vierkantor-dedekind-domain)<br>\n$ git checkout master<br>\nSwitched to branch 'master'<br>\nYour branch is up to date with 'origin/master'.</p>",
        "id": 213500109,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804100
    },
    {
        "content": "<p>git pull</p>",
        "id": 213500129,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804122
    },
    {
        "content": "<p>done</p>",
        "id": 213500193,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804161
    },
    {
        "content": "<p><code>leanproject get-cache</code></p>",
        "id": 213500198,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804166
    },
    {
        "content": "<p>going on...</p>",
        "id": 213500213,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804180
    },
    {
        "content": "<p>done</p>",
        "id": 213500236,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804200
    },
    {
        "content": "<p>now see if things compile</p>",
        "id": 213500246,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804207
    },
    {
        "content": "<p>now yes, everything nice and smooth</p>",
        "id": 213500281,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804235
    },
    {
        "content": "<p>great. now you can go fix your borked branch</p>",
        "id": 213500355,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804284
    },
    {
        "content": "<p>I have removed my Git info from VSCode, so it can't do \"too much\".</p>",
        "id": 213500365,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804292
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"238605\">Kevin Lacker</span> <a href=\"#narrow/stream/113489-new-members/topic/Stopping.20VSCode.20from.20recompiling.20mathlib/near/213500355\">said</a>:</p>\n<blockquote>\n<p>great. now you can go fix your borked branch</p>\n</blockquote>\n<p>the steps you suggested before, right?</p>",
        "id": 213500394,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804314
    },
    {
        "content": "<p>yeah</p>",
        "id": 213500401,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804318
    },
    {
        "content": "<p>so I need to merge <code>master</code> with the other branch - I suspect I will get some 400 errors, or so.</p>",
        "id": 213500435,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804359
    },
    {
        "content": "<p>mmm no you should not need to merge anything</p>",
        "id": 213500485,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804382
    },
    {
        "content": "<p>all you're doing is rolling back your branch</p>",
        "id": 213500487,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804387
    },
    {
        "content": "<p>to <a href=\"https://github.com/leanprover-community/mathlib/commit/8c94fef07967472c2f839f4333f479888196efdb\">https://github.com/leanprover-community/mathlib/commit/8c94fef07967472c2f839f4333f479888196efdb</a>, for instance?</p>",
        "id": 213500526,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804430
    },
    {
        "content": "<p>(the last commit this morning where everything was fine)</p>",
        "id": 213500534,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804443
    },
    {
        "content": "<p>yep</p>",
        "id": 213500552,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804457
    },
    {
        "content": "<p>some sort of <code>git reset</code></p>",
        "id": 213500556,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804462
    },
    {
        "content": "<p>OK, I am going to. Yet you agree that it is strange that there are so many red crosses, no? I mean, looking back at the history of the branch.</p>",
        "id": 213500606,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804487
    },
    {
        "content": "<p>well once you mentioned that you like to ignore emails about failing CI, it stopped surprising me that the history has a lot of failing points</p>",
        "id": 213500633,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804522
    },
    {
        "content": "<p>It makes sense indeed.</p>",
        "id": 213500650,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804550
    },
    {
        "content": "<p>I will try to go back to that commit and keep better track of what happens. Thanks so much for the help, in the meanwhile.</p>",
        "id": 213500678,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602804584
    },
    {
        "content": "<p>no problem. good luck ;-)</p>",
        "id": 213500749,
        "sender_full_name": "Kevin Lacker",
        "timestamp": 1602804613
    },
    {
        "content": "<p>@KevinLacker I am sorry, I am unable to get the things done, can I ask for more help?</p>",
        "id": 213502719,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602806410
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"300245\">@Filippo A. E. Nuccio</span> I don't know how to help you myself, but you can summon Kevin by writing <code>@**name_here**</code> rather than just @...</p>",
        "id": 213503268,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1602806855
    },
    {
        "content": "<p>Hi Heather! Thanks, I have realised that after I typed, but also realised he's not connected any more. And am trying to figure out things without disturbing other people.</p>",
        "id": 213503375,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602806929
    },
    {
        "content": "<p>I didn't follow the whole thread -- are you trying to figure out the <code>git reset</code> piece though or something bigger than that?</p>",
        "id": 213503591,
        "sender_full_name": "Julian Berman",
        "timestamp": 1602807095
    },
    {
        "content": "<p>Thanks-I ended up resetting to a previous commit and now things are working.</p>",
        "id": 213503651,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602807126
    },
    {
        "content": "<p>If it's just that I can likely help, it sounded like from the scrollback that you want <code>git reset --hard somecommit</code>, which is a slightly dangerous command to run in general but if we get <code>somecommit</code> right it's OK.</p>",
        "id": 213503652,
        "sender_full_name": "Julian Berman",
        "timestamp": 1602807126
    },
    {
        "content": "<p>Thanks anyhow, but I grab the chance to ask why is it so dangerous</p>",
        "id": 213503694,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602807176
    },
    {
        "content": "<p>Cool!</p>",
        "id": 213503810,
        "sender_full_name": "Julian Berman",
        "timestamp": 1602807262
    },
    {
        "content": "<p>Uh -- simply that it throws away commits -- normally the sequence of changes that are made stays \"the same\", but git reset --hard essentially moves you to a particular ref and doesn't preserve where you were</p>",
        "id": 213503867,
        "sender_full_name": "Julian Berman",
        "timestamp": 1602807310
    },
    {
        "content": "<p>(it will also, if you've pushed those commits elsewhere, now cause you to need to use <code>git push --force</code>, which will now make everyone else you may work with have some pain when they try to pull)</p>",
        "id": 213503903,
        "sender_full_name": "Julian Berman",
        "timestamp": 1602807343
    },
    {
        "content": "<p>So yeah in general you should think twice about using it but it sounded like it was what you needed here</p>",
        "id": 213503966,
        "sender_full_name": "Julian Berman",
        "timestamp": 1602807372
    },
    {
        "content": "<p>I see, it certainly makes sense. I sometimes feel that <code>git</code> is a bit \"overcautious\" but I guess it's me.</p>",
        "id": 213503981,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602807389
    },
    {
        "content": "<p>(sorry, was sleeping). <code>simp</code> is not usually the culprit when you find yourself in the situation that every time you type something you have to wait for ten seconds. The more likely culprits are <code>tidy</code> and <code>finish</code>. Other possibilities: you are writing one 200 line proof instead of ten 20 line proofs, or maybe you are using a machine with less than 8 gigs of ram. In fact I sometimes struggle even with 8 gigs.</p>",
        "id": 213523290,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1602830362
    },
    {
        "content": "<p>Note that this is an independent issue to things taking one hour to compile (which should never happen unless you're editing files deep in the system).</p>",
        "id": 213524207,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1602831453
    },
    {
        "content": "<p>Thanks! I am really trying to figure out together with <span class=\"user-mention\" data-user-id=\"238446\">@Anne Baanen</span> what is going on and I hope to have a more efficient system soon. BTW: I remember that during LFTCM2020 during a break-up room with <span class=\"user-mention\" data-user-id=\"318709\">@Sophie Morel</span> you told us about \"your favorite tactic\" or something like this, which instead of inserting a <code>have</code>, replaces the current goal with something new, that you will later need to explain being equivalent to the old one. Do I remember correctly, what was this tactic?</p>",
        "id": 213541115,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602843005
    },
    {
        "content": "<p>Are you thinking of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/tactic.interactive.convert\">docs#tactic.interactive.convert</a>?</p>",
        "id": 213541152,
        "sender_full_name": "Anne Baanen",
        "timestamp": 1602843045
    },
    {
        "content": "<p>Probably yes, thanks!</p>",
        "id": 213541180,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1602843076
    }
]