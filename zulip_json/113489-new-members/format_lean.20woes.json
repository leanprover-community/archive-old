[
    {
        "content": "<p>Hey all, brand new fedora 30 install with all lean dependencies installed. I have a simple \"hello world\" lean script in <code>limits.lean</code> but don't know why I get this error (I supposed its a python2/3 mishap, but I haven't moved any configs there)</p>\n<div class=\"codehilite\"><pre><span></span>⋊&gt; ~/d/l/t/src on lean-3.4.2 ⨯ format_lean --inpath limits.lean --outdir build --lib-path /usr/lib/lean-mathlib/src\nTraceback (most recent call last):\n  File &quot;/home/mrg/deps/lean/format_lean/bin/format_lean&quot;, line 77, in &lt;module&gt;\n    Fire(render_lean_file)\n  File &quot;/home/mrg/.local/lib/python3.7/site-packages/fire/core.py&quot;, line 138, in Fire\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\n  File &quot;/home/mrg/.local/lib/python3.7/site-packages/fire/core.py&quot;, line 471, in _Fire\n    target=component.__name__)\n  File &quot;/home/mrg/.local/lib/python3.7/site-packages/fire/core.py&quot;, line 675, in _CallAndUpdateTrace\n    component = fn(*varargs, **kwargs)\n  File &quot;/home/mrg/deps/lean/format_lean/bin/format_lean&quot;, line 30, in render_lean_file\n    lean_exec_path = Path(distutils.spawn.find_executable(&#39;lean&#39;))\nAttributeError: module &#39;distutils&#39; has no attribute &#39;spawn&#39;\n</pre></div>",
        "id": 178000917,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570905104
    },
    {
        "content": "<p>Would appreciate any help, I barely know python.</p>",
        "id": 178000958,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570905128
    },
    {
        "content": "<p>Also, is there an IPython / lean interaction guide?</p>",
        "id": 178000989,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570905211
    },
    {
        "content": "<p>Could you post your Lean project? Maybe an archive of everything except <code>_target</code></p>",
        "id": 178001042,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570905280
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>leanpkg.toml\n[package]\nname = &quot;test&quot;\nversion = &quot;0.1&quot;\nlean_version = &quot;3.4.2&quot;\npath = &quot;src&quot;\n\n[dependencies]\nmathlib = {git = &quot;https://github.com/leanprover-community/mathlib&quot;, rev = &quot;27515619bcd834006f2936b292021135496b4efb&quot;}\n</pre></div>",
        "id": 178001358,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570905705
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>leanpkg.path\nbuiltin_path\npath _target/deps/mathlib/src\npath ./src\n</pre></div>",
        "id": 178001402,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570905728
    },
    {
        "content": "<p>What is <code>format_lean</code>?</p>",
        "id": 178001485,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570905918
    },
    {
        "content": "<p>Oh, Patrick's thing!</p>",
        "id": 178001490,
        "sender_full_name": "Reid Barton",
        "timestamp": 1570905939
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>import topology.basic\nimport data.real.basic\n\n#eval 1 + 1\n\n#check topological_space\n\nlocal attribute [instance, priority 0] classical.prop_decidable\n\n#eval 1 + 1\n/-\nOur first goal is to define the set of upper bounds of a set of real numbers.\nThis is already defined in mathlib (in a more general context), but we repeat\nit for the sake of exposition Right-click &quot;upper_bounds&quot; below to get offered\nto jump to mathlib&#39;s version\n-/\n#check upper_bounds\n\n/-- The set of upper bounds of a set of real numbers ℝ -/\ndef up_bounds (A : set ℝ) := { x : ℝ | ∀ a ∈ A, a ≤ x}\n\n/-- Predicate `is_max a A` means `a` is a maximum of `A` -/\ndef is_max (a : ℝ) (A : set ℝ) := a ∈ A ∧ a ∈ up_bounds A\n\n/-\nIn the above definition, the symbol `∧` means &quot;and&quot;. We also see the most\nvisible difference between set theoretic foundations and type theoretic ones\n(used by almost all proof assistants). In set theory, everything is a set, and the\nonly relation you get from foundations are `=` and `∈`. In type theory, there is\na meta-theoretic relation of &quot;typing&quot;: `a : ℝ` reads &quot;`a` is a real number&quot; or,\nmore precisely, &quot;the type of `a` is `ℝ`&quot;. Here &quot;meta-theoretic&quot; means this is not a\nstatement you can prove or disprove inside the theory, it&#39;s a fact that is true or\nnot. Here we impose this fact, in other circumstances, it would be checked by the\nLean kernel.\nBy contrast, `a ∈ A` is a statement inside the theory. Here it&#39;s part of the\ndefinition, in other circumstances it could be something proven inside Lean.\n-/\n\n/- For illustrative purposes, we now define an infix version of the above predicate.\nIt will allow us to wite `a is_a_max_of A`, which is closer to a sentence.\n-/\n</pre></div>",
        "id": 178001496,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570905956
    },
    {
        "content": "<p>and then in the folder that containts <code>src/limits.lean</code> I do <br>\n<code>~/d/l/t/src on lean-3.4.2 ⨯ format_lean --inpath limits.lean --outdir build --lib-path /usr/lib/lean-mathlib/src</code></p>",
        "id": 178001548,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570906000
    },
    {
        "content": "<p>Can you try running <code>format_project</code> from the root of your project?</p>",
        "id": 178001718,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570906298
    },
    {
        "content": "<p>first <code>format_project</code>, then <code>format_lean</code>?</p>\n<p>It says it couldn't find a <code>format.toml</code> but would continue anyways.<br>\nThen rendered <code>src/limits.lean</code></p>",
        "id": 178001771,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570906378
    },
    {
        "content": "<p>There are two scripts. <code>format_lean</code> itself was meant to render individual Lean files, not necessarily inside a proper Lean project. But I never use it, and it may be broken. <code>format_project</code> renders a whole Lean project, and should work.</p>",
        "id": 178001836,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570906459
    },
    {
        "content": "<p>OK, it produced an <code>html</code> folder</p>",
        "id": 178001843,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570906496
    },
    {
        "content": "<p>OK, it produced a site, but the CSS was all bungled up - (text overlapping the tactic state, no lean code showing)</p>",
        "id": 178001904,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570906606
    },
    {
        "content": "<p>I opened the <code>limits.html</code> file, which I guess is the correct one, but I may be wrong.</p>",
        "id": 178001915,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570906633
    },
    {
        "content": "<p>Your Lean code doesn't use valid <code>format_lean</code> markup</p>",
        "id": 178001921,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570906658
    },
    {
        "content": "<p>Ach so. Where can I find a description of the markup specification<br>\n?</p>",
        "id": 178001967,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1570906725
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"243947\">@Miguel Raz Guzmán Macedo</span> I fixed the bug you found, and created an example at <a href=\"https://leanprover-community.github.io/format_lean/\" target=\"_blank\" title=\"https://leanprover-community.github.io/format_lean/\">https://leanprover-community.github.io/format_lean/</a>.</p>",
        "id": 178006576,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570914514
    },
    {
        "content": "<p>I'll try to write a specification of what is currently supported, but it will be very short...</p>",
        "id": 178006591,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570914545
    },
    {
        "content": "<p>I may do that tomorrow, but creating the above three web pages exhausted the time I could allocate to this today.</p>",
        "id": 178006601,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1570914580
    },
    {
        "content": "<p>Thanks Patrick. Very shortly I will be using format-lean again and I realised just the other day that I had essentially completely forgotten what the formatter could do and how to do it.</p>",
        "id": 178007049,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1570915300
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"243947\">Miguel Raz Guzmán Macedo</span> I fixed the bug you found, and created an example at <a href=\"https://leanprover-community.github.io/format_lean/\" target=\"_blank\" title=\"https://leanprover-community.github.io/format_lean/\">https://leanprover-community.github.io/format_lean/</a>.</p>\n</blockquote>\n<p>I tried this again after pulling your changes.<br>\nthe example from your repo renders perfectly on the web browser, but I not get this error...</p>\n<div class=\"codehilite\"><pre><span></span>⋊&gt; ~/p/l/f/e/src on master ⨯ format_lean --inpath sandwich.lean --outdir build --lib-path /usr/lib/lean-mathlib/src\nTraceback (most recent call last):\n  File &quot;/home/mrg/deps/lean/format_lean/bin/format_lean&quot;, line 77, in &lt;module&gt;\n    Fire(render_lean_file)\n  File &quot;/home/mrg/.local/lib/python3.7/site-packages/fire/core.py&quot;, line 138, in Fire\n    component_trace = _Fire(component, args, parsed_flag_args, context, name)\n  File &quot;/home/mrg/.local/lib/python3.7/site-packages/fire/core.py&quot;, line 471, in _Fire\n    target=component.__name__)\n  File &quot;/home/mrg/.local/lib/python3.7/site-packages/fire/core.py&quot;, line 675, in _CallAndUpdateTrace\n    component = fn(*varargs, **kwargs)\n  File &quot;/home/mrg/deps/lean/format_lean/bin/format_lean&quot;, line 68, in render_lean_file\n    lecture_reader.read_file(inpath)\n  File &quot;/home/mrg/.local/lib/python3.7/site-packages/format_lean/line_reader.py&quot;, line 48, in read_file\n    self.normal_line_handler(self, line)\n  File &quot;/home/mrg/.local/lib/python3.7/site-packages/format_lean/objects.py&quot;, line 370, in normal_line\n    file_reader.cur_line_nb, 1)\n  File &quot;/home/mrg/.local/lib/python3.7/site-packages/format_lean/server.py&quot;, line 34, in info\n    raise LeanError(ret)\nformat_lean.server.LeanError: {&#39;msgs&#39;: [{&#39;caption&#39;: &#39;&#39;, &#39;file_name&#39;: &#39;/usr/lib/lean-mathlib/src/data/set/basic.lean&#39;, &#39;pos_col&#39;: 71, &#39;pos_line&#39;: 368, &#39;severity&#39;: &#39;error&#39;, &#39;text&#39;: &#39;(deterministic) timeout&#39;}, {&#39;caption&#39;: &#39;&#39;, &#39;file_name&#39;: &#39;/usr/lib/lean-mathlib/src/data/set/basic.lean&#39;, &#39;pos_col&#39;: 3, &#39;pos_line&#39;: 369, &#39;severity&#39;: &#39;error&#39;, &#39;text&#39;: &#39;(deterministic) timeout&#39;}], &#39;response&#39;: &#39;all_messages&#39;}\n</pre></div>",
        "id": 178526948,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1571456474
    },
    {
        "content": "<p>Also Patrick, it's beautiful!</p>",
        "id": 178527164,
        "sender_full_name": "Miguel Raz Guzmán Macedo",
        "timestamp": 1571456899
    }
]