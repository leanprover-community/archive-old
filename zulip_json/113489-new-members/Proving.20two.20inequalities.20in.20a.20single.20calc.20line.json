[
    {
        "content": "<p>I'm working through the Lean tutorial and have one example down to a fairly standard triangle inequality calculation. I basically have this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code>  <span class=\"k\">calc</span> <span class=\"bp\">|</span><span class=\"n\">u</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"n\">u</span> <span class=\"n\">q</span><span class=\"bp\">|</span> <span class=\"bp\">=</span> <span class=\"bp\">|</span><span class=\"n\">u</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"n\">l</span> <span class=\"bp\">-</span> <span class=\"o\">(</span><span class=\"n\">u</span> <span class=\"n\">q</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"o\">)</span><span class=\"bp\">|</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">ring</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">≤</span> <span class=\"bp\">|</span><span class=\"n\">u</span> <span class=\"n\">p</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"bp\">|</span> <span class=\"bp\">+</span> <span class=\"bp\">|</span><span class=\"n\">u</span> <span class=\"n\">q</span> <span class=\"bp\">-</span> <span class=\"n\">l</span><span class=\"bp\">|</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">apply</span> <span class=\"n\">ad_hoc_lemma</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">≤</span> <span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span> <span class=\"bp\">+</span> <span class=\"n\">ε</span><span class=\"bp\">/</span><span class=\"mi\">2</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">exact</span> <span class=\"n\">hN</span> <span class=\"n\">p</span> <span class=\"n\">hp</span><span class=\"bp\">;</span> <span class=\"n\">exact</span> <span class=\"n\">hN</span> <span class=\"n\">q</span> <span class=\"n\">hq</span>\n  <span class=\"bp\">...</span> <span class=\"bp\">=</span> <span class=\"n\">ε</span> <span class=\"o\">:</span> <span class=\"kd\">by</span> <span class=\"n\">linarith</span><span class=\"o\">,</span>\n</code></pre></div>\n<p>where <code>hN</code> takes an integer <code>p</code>, a proof <code>hp</code> that it is greater than some fixed number, and outputs a proof that <code>|u p - l| &lt;= \\epsilon</code>.</p>\n<p>My problem is in the third line, which Lean doesn't like. I'd like to apply two inequalities at once, that <code>|u p - l| &lt;= \\epsilon</code> and <code>|u q - l| &lt;= \\epsilon</code> but can't figure out the syntax to do so. Any hints?</p>",
        "id": 224525019,
        "sender_full_name": "Gunnar Þór Magnússon",
        "timestamp": 1611950205
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>",
        "id": 224525504,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611950452
    },
    {
        "content": "<p>You shouldn't be using <code>exact</code> twice; rather you should apply <code>add_le_add</code>, which produces two subgoals, that are then closed by <code>exact</code></p>",
        "id": 224525621,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611950518
    },
    {
        "content": "<p>so that means something like <code>by apply add_le_add; [exact hN p hp, exact hN q hq]</code> or more simply <code>add_le_add (hN p hp) (hN q hq)</code> since this is basically just a term proof, you don't need <code>by</code> anything</p>",
        "id": 224525757,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1611950578
    },
    {
        "content": "<p>Sorry for not posting an mwe. Will do that next time.</p>\n<p>But thanks for the hint. That did it. I'm still learning the ins and outs here.</p>",
        "id": 224526199,
        "sender_full_name": "Gunnar Þór Magnússon",
        "timestamp": 1611950787
    },
    {
        "content": "<p>You don't have to remember <code>add_le_add</code>, you can use <code>linarith [hN p hp, hN q hq]</code>,</p>",
        "id": 224526710,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1611951087
    }
]