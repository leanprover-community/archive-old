[
    {
        "content": "<p>I have the following hypothesis and goal,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">1</span> <span class=\"n\">goal</span>\n<span class=\"n\">ω</span><span class=\"o\">:</span> <span class=\"n\">ℚ</span>\n<span class=\"n\">hωpos</span><span class=\"o\">:</span> <span class=\"n\">ω</span> <span class=\"bp\">&gt;</span> <span class=\"mi\">0</span>\n<span class=\"n\">N</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span>\n<span class=\"n\">H1_h</span><span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"n\">ω</span> <span class=\"bp\">&lt;</span> <span class=\"bp\">↑</span><span class=\"n\">N</span>\n<span class=\"n\">n</span><span class=\"o\">:</span> <span class=\"n\">ℕ</span>\n<span class=\"n\">hnN</span><span class=\"o\">:</span> <span class=\"n\">n</span> <span class=\"bp\">&gt;</span> <span class=\"n\">N</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">abs</span> <span class=\"o\">((</span><span class=\"bp\">λ</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"mi\">1</span> <span class=\"bp\">/</span> <span class=\"bp\">↑</span><span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"bp\">&lt;</span> <span class=\"n\">ω</span>\n</code></pre></div>\n<p>I would like to substitute the n in the lambda abstraction with the n in my hypothesis</p>",
        "id": 221222802,
        "sender_full_name": "Saif Ghobash",
        "timestamp": 1609344277
    },
    {
        "content": "<p><code>dsimp only</code></p>",
        "id": 221222825,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1609344302
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 221222858,
        "sender_full_name": "Saif Ghobash",
        "timestamp": 1609344330
    },
    {
        "content": "<p>I am always embarrassed by how difficult it is to prove that 1/n tends to 0 from first principles in Lean :-)</p>",
        "id": 221224569,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609345597
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"370446\">@Saif Ghobash</span> Are writing some form of lecture notes accompanied by Lean proofs?</p>",
        "id": 221224863,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1609345823
    },
    {
        "content": "<p>If so, you might be interested in <code>lean_formatter</code> and possibly also the framework used by \"Mathematics in Lean\".</p>",
        "id": 221224882,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1609345849
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span>   I am an undergraduate rewriting my professors lecture notes in lean as a way to learn lean and study for my real analysis finals. <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 221228463,
        "sender_full_name": "Saif Ghobash",
        "timestamp": 1609348385
    },
    {
        "content": "<p>That's a great way to do it. You should make a little repo where you put up stuff. I was working on some undergraduate problem sheets for analysis with some Imperial first year undergraduates -- I wasn't teaching the course, we were just goofing around. <a href=\"https://github.com/ImperialCollegeLondon/M40002\">https://github.com/ImperialCollegeLondon/M40002</a></p>",
        "id": 221228782,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609348518
    },
    {
        "content": "<p>You should just make a github project for your class, with mathlib as a dependency, and then within <code>src</code> set up a nice directory structure (lectures, problem sheets, exam questions, whatever) and start dumping Lean files in the directories and showing other kids in your class. Explain in your README how to install your project (just copy what I wrote mutatis mutandis) and see if other people contribute.</p>",
        "id": 221229030,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609348679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"370446\">@Saif Ghobash</span></p>",
        "id": 221229081,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609348690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span> I might just do that, it was actually a lot of your posts on the Xena website that made me want to get into Lean in the first place <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> , the website has been a fantastic resource</p>",
        "id": 221229172,
        "sender_full_name": "Saif Ghobash",
        "timestamp": 1609348765
    },
    {
        "content": "<p>let me know what you want me to write about. I've been neglecting it recently.</p>",
        "id": 221229265,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609348826
    },
    {
        "content": "<p>I've got a deadline of NYE to submit a paper but can think about a new year post</p>",
        "id": 221229312,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609348868
    },
    {
        "content": "<p>Since you've been working on some mathlib PRs recently, maybe you could write about one of those?</p>",
        "id": 221229456,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609348979
    },
    {
        "content": "<p>oh that's an interesting idea!</p>",
        "id": 221229498,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609349010
    }
]