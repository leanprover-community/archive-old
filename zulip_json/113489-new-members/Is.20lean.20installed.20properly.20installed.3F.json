[
    {
        "content": "<p>I installed lean on my iMac running Big Sur using brew.  I also installed Visual Studio.  In looking at first_proofs.lean in vscode, when I hover over the first import I get the messages below.  Obviously something is wrong.  Any suggestions as to how to fix it?</p>\n<p>invalid import: data.option.defs<br>\nexcessive memory consumption detected at 'expression traversal' (potential solution: increase memory consumption threshold)Lean<br>\ninvalid import: data.option.defs<br>\ninvalid object declaration, environment already has an object named 'option.elim._main'Lean<br>\ninvalid import: data.option.defs<br>\ninvalid object declaration, environment already has an object named 'option.elim._main'Lean<br>\ninvalid import: data.option.defs<br>\ninvalid object declaration, environment already has an object named 'option.elim._main'Lean<br>\ninvalid import: data.option.defs<br>\ninvalid object declaration, environment already has an object named 'option.elim._main'Lean<br>\ninvalid import: algebra.group.defs<br>\nexcessive memory consumption detected at 'replace' (potential solution: increase memory consumption threshold)Lean<br>\ninvalid import: algebra.group.defs<br>\ninvalid object declaration, environment already has an object named 'left_mul'Lean<br>\ninvalid import: algebra.group.defs<br>\ninvalid object declaration, environment already has an object named 'left_mul'Lean<br>\ninvalid import: order.rel_classes<br>\nexcessive memory consumption detected at 'expression traversal' (potential solution: increase memory consumption threshold)Lean<br>\ninvalid import: order.lattice<br>\nexcessive memory consumption detected at 'replace' (potential solution: increase memory consumption threshold)Lean<br>\ninvalid import: data.equiv.basic<br>\nexcessive memory consumption detected at 'replace' (potential solution: increase memory consumption threshold)Lean<br>\ninvalid import: data.equiv.basic<br>\ninvalid object declaration, environment already has an object named 'equiv'Lean<br>\ninvalid import: data.equiv.basic<br>\ninvalid object declaration, environment already has an object named 'equiv'Lean<br>\ninvalid import: order.rel_classes<br>\ninvalid object declaration, environment already has an object named 'is_refl.swap'Lean<br>\ninvalid import: order.lattice<br>\ninvalid object declaration, environment already has an object named 'le_antisymm''Lean<br>\ninvalid import: data.equiv.basic<br>\ninvalid object declaration, environment already has an object named 'equiv'Lean<br>\ninvalid import: algebra.group.defs<br>\ninvalid object declaration, environment already has an object named 'left_mul'Lean<br>\ninvalid import: order.rel_classes<br>\ninvalid object declaration, environment already has an object named 'is_refl.swap'Lean<br>\ninvalid import: order.rel_classes<br>\ninvalid object declaration, environment already has an object named 'is_refl.swap'Lean<br>\ninvalid import: order.lattice<br>\ninvalid object declaration, environment already has an object named 'le_antisymm''Lean<br>\ninvalid import: data.equiv.encodable.basic<br>\nexcessive memory consumption detected at 'replace' (potential solution: increase memory consumption threshold)Lean<br>\ninvalid import: data.equiv.basic<br>\ninvalid object declaration, environment already has an object named 'equiv'Lean<br>\ninvalid import: order.rel_classes<br>\ninvalid object declaration, environment already has an object named 'is_refl.swap'Lean<br>\ninvalid import: data.list.basic<br>\nexcessive memory consumption detected at 'replace' (potential solution: increase memory consumption threshold)Lean<br>\ninvalid import: order.rel_classes<br>\ninvalid object declaration, environment already has an object named 'is_refl.swap'Lean<br>\ninvalid import: data.list.basic<br>\ninvalid object declaration, environment already has an object named 'list.nil.is_left_id'Lean<br>\ninvalid import: order.rel_classes<br>\ninvalid object declaration, environment already has an object named 'is_refl.swap'Lean<br>\ninvalid import: data.list.basic<br>\ninvalid object declaration, environment already has an object named 'list.nil.is_left_id'Lean<br>\ninvalid import: order.rel_classes<br>\ninvalid object declaration, environment already has an object named 'is_refl.swap'Lean<br>\ninvalid import: data.list.basic<br>\ninvalid object declaration, environment already has an object named 'list.nil.is_left_id'Lean<br>\ninvalid import: data.equiv.basic<br>\ninvalid object declaration, environment already has an object named 'equiv'Lean<br>\ninvalid import: data.equiv.basic<br>\ninvalid object declaration, environment already has an object named 'equiv'Lean<br>\ninvalid import: algebra.group.defs<br>\ninvalid object declaration, environment already has an object named 'left_mul'Lean<br>\ninvalid import: order.rel_classes<br>\ninvalid object declaration, environment already has an object named 'is_refl.swap'Lean<br>\ninvalid import: data.list.basic<br>\ninvalid object declaration, environment already has an object named 'list.nil.is_left_id'Lean<br>\ninvalid import: data.equiv.basic<br>\ninvalid object declaration, environment already has an object named 'equiv'Lean<br>\ninvalid import: order.rel_classes<br>\ninvalid object declaration, environment already has an object named 'is_refl.swap'Lean<br>\ninvalid import: data.list.basic<br>\ninvalid object declaration, environment already has an object named 'list.nil.is_left_id'Lean<br>\ninvalid import: order.rel_classes<br>\ninvalid object declaration, environment already has an object named 'is_refl.swap'Lean<br>\ninvalid import: data.list.basic<br>\ninvalid object declaration, environment already has an object named 'list.nil.is_left_id'Lean<br>\ninvalid import: data.equiv.basic<br>\ninvalid object declaration, environment already has an object named 'equiv'Lean<br>\ninvalid import: data.equiv.basic<br>\ninvalid object declaration, environment already has an object named 'equiv'Lean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/order/conditionally_complete_lattice.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/data/nat/enat.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/tactic/norm_num.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/data/rat/cast.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/algebra/char_zero.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/data/fintype/basic.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/data/finset/basic.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/data/multiset/finset_ops.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/data/set/intervals/ord_connected.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/algebra/pointwise.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/algebra/module/basic.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/tactic/abel.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/data/set/finite.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/data/real/cau_seq.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/tactic/linarith/verification.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/tactic/linarith/elimination.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/tactic/linarith/datatypes.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/tactic/ring.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/tactic/linarith/parsing.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/tactic/linarith/preprocessing.lean' uses sorryLean<br>\nimported file '/Users/victorsmiller/Programming/Lean/tutorials/_target/deps/mathlib/src/algebra/star/basic.lean' uses sorryLean<br>\nPeek Problem (‚å•F8)<br>\nNo quick fixes available</p>",
        "id": 221086111,
        "sender_full_name": "Victor Miller",
        "timestamp": 1609184495
    },
    {
        "content": "<p>Did you install <code>leanproject</code> and run <code>leanproject get tutorials</code>?</p>",
        "id": 221086268,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609184657
    },
    {
        "content": "<p>Oh wait, you said you installed Lean via brew.</p>",
        "id": 221086280,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609184677
    },
    {
        "content": "<p>Unfortunately, using homebrew to install Lean will make it difficult to work with Lean projects, and we haven't managed to fix this yet. </p>\n<p>Please see the instructions <a href=\"https://leanprover-community.github.io/install/macos.html\">on this page</a> for our recommended way to install Lean and related tooling.</p>",
        "id": 221086419,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609184823
    },
    {
        "content": "<p>When I run the script on the page you linked to, it says that it wants to install homebrew.  I already have it installed.  I don't want to mess up the current installation.  I did try to uninstall lean from homebrew, and it said that it wasn't installed, so I must have installed it some other way.</p>",
        "id": 221086654,
        "sender_full_name": "Victor Miller",
        "timestamp": 1609185046
    },
    {
        "content": "<p>It should be perfectly safe to run the homebrew installation script again, but if you're concerned you can just run the other commands in the script one by one: <a href=\"https://github.com/leanprover-community/mathlib-tools/blob/master/scripts/install_macos.sh\">https://github.com/leanprover-community/mathlib-tools/blob/master/scripts/install_macos.sh</a></p>",
        "id": 221086828,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609185230
    },
    {
        "content": "<p>What is <code>type -a lean</code>?</p>",
        "id": 221086830,
        "sender_full_name": "Julian Berman",
        "timestamp": 1609185231
    },
    {
        "content": "<p>I went through the commands one by one in the <a href=\"http://install_macos.sh\">install_macos.sh</a> script.  All of the python packages are installed.  Visual Studio Code is already installed.  When I tried to install jroesch.lean it said that it's already installed.    And I did intall leanproject and installed leanproject get tutorials.</p>",
        "id": 221087155,
        "sender_full_name": "Victor Miller",
        "timestamp": 1609185542
    },
    {
        "content": "<p><del>Ah, did you open the <code>tutorials</code> directory in VS Code, or just the file <code>00_first_proofs.lean</code>?</del></p>\n<p><del>The extension requires that you open a directory containing a Lean project - opening individual Lean files will not work, as explained <a href=\"https://leanprover-community.github.io/install/project.html\">here</a>.</del></p>\n<p>Sorry, scratch that. If you had opened just the file then you most likely would be getting \"not found\" errors rather than out-of-memory errors.</p>",
        "id": 221087277,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609185656
    },
    {
        "content": "<p>What is the output of these three commands?</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>which elan\nwhich lean\nlean --version\n</code></pre></div>",
        "id": 221087384,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1609185763
    },
    {
        "content": "<p>Victors-iMac:Lean victorsmiller$ which elan<br>\n/Users/victorsmiller/.elan/bin/elan<br>\nVictors-iMac:Lean victorsmiller$ which lean<br>\n/Users/victorsmiller/.elan/bin/lean<br>\nVictors-iMac:Lean victorsmiller$ lean --version<br>\nLean (version 3.23.0, commit ed6accfb611b, Release)</p>",
        "id": 221088830,
        "sender_full_name": "Victor Miller",
        "timestamp": 1609187091
    },
    {
        "content": "<p>And I opened the tutorials directory in VS Code</p>",
        "id": 221088871,
        "sender_full_name": "Victor Miller",
        "timestamp": 1609187146
    },
    {
        "content": "<p>What do you see if you navigate to the <code>tutorials</code> folder and run <code>leanproject get-mathlib-cache</code>?</p>",
        "id": 221089592,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1609187862
    },
    {
        "content": "<p>Victors-iMac:tutorials victorsmiller$ leanproject get-mathlib-cache<br>\nLooking for local mathlib oleans<br>\nFound local mathlib oleans</p>",
        "id": 221090141,
        "sender_full_name": "Victor Miller",
        "timestamp": 1609188383
    },
    {
        "content": "<p>All looks good so far. Can you compile? In the tutorials directory try <code>lean --make src/solutions/00_first_proofs.lean </code></p>",
        "id": 221090201,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609188465
    },
    {
        "content": "<p>It should finish very quickly (within a few seconds), with limited output.</p>",
        "id": 221090257,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609188484
    },
    {
        "content": "<p>Victors-iMac:tutorials victorsmiller$ lean --make src/solutions/00_first_proofs.lean <br>\n/Users/victorsmiller/Programming/Lean/tutorials/src/solutions/00_first_proofs.le/Users/victorsmiller/Programming/Lean/tutorials/src/solutions/00_first_proofs.leupper_bounds : set ?M_1 ‚Üí set ?M_1<br>\n/Users/victorsmiller/Programming/Lean/tutorials/src/solutions/00_first_proofs.le/Users/victorsmiller/Programming/Lean/tutorials/src/solutions/00_first_proofs.le/Users/victorsmiller/Programming/Lean/tutorials/src/solutions/00_first_proofs.le/Users/victorsmiller/Programming/Lean/tutorials/src/solutions/00_first_proofs.lean: le_limTry this: exact one_div_pos.mpr this<br>\nTry this: exact le_abs_self (u N - x)</p>",
        "id": 221090344,
        "sender_full_name": "Victor Miller",
        "timestamp": 1609188589
    },
    {
        "content": "<p>That looks great. Your system is working. Just start VS Code in the tutorials directory with <code>code .</code> and it should all work fine.</p>",
        "id": 221090399,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609188628
    },
    {
        "content": "<p>Kevin, Thanks.  So was the problem that I just started Visual Studio from , and then opened tutorials?  I thought that Visual Studio was smart enough to cd to the right directory.</p>",
        "id": 221090753,
        "sender_full_name": "Victor Miller",
        "timestamp": 1609189053
    },
    {
        "content": "<p>I get the error you posted every now and again, and I just restart Lean and it goes away.</p>",
        "id": 221090837,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609189107
    },
    {
        "content": "<p>Ok.  Now I've started visual studio by doing code . in the lftcm2020 directory.  However, whenever I hover over anything I just get the message \"Parsing at line 1\".  I've tried restarting lean, but I get the same.</p>",
        "id": 221093341,
        "sender_full_name": "Victor Miller",
        "timestamp": 1609191621
    },
    {
        "content": "<p>It sounds like this one isn't compiled. In the <code>lftcm2020</code> directory try <code>leanproject get-mathlib-cache</code> and then try opening VS Code in that directory again when it's finished.</p>",
        "id": 221094135,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1609192542
    },
    {
        "content": "<p>More information.  If I use code for the tutorials project, everything seems to be ok.  For lftcm2020 I did the <code>leanproject get-mathlib-cache</code> and then opened it in VS Code  Right now lean is running at 469% (my mac has 8 processors) and has been for a few minutes.  It's now apparently finished, but I'm back to the \"excessive memory\" errors.  Is there some configuration setting for lean and/or VS Code that I need to make?</p>",
        "id": 221094415,
        "sender_full_name": "Victor Miller",
        "timestamp": 1609192845
    },
    {
        "content": "<p>You shouldn't have to do all that. I just tried :</p>\n<ul>\n<li><code>leanproject get lftcm2020</code></li>\n<li><code>code lftcm2020</code> and use the file explorer to open an exercise file and it just works perfectly.</li>\n</ul>",
        "id": 221094653,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1609193076
    },
    {
        "content": "<p>I took the sledgehammer approach.  I did a rm -f -r lftcm2020 and the leanproject get lftcm2020.  Things seem a bit better now.</p>",
        "id": 221094654,
        "sender_full_name": "Victor Miller",
        "timestamp": 1609193077
    }
]