[
    {
        "content": "<p>Hello!</p>\n<p>I'm trying to use Lean in server mode to get the status of a proof after applying a tactic. Currently, I'm using the full-sync function of lean-client-python (thanks to <span class=\"user-mention\" data-user-id=\"115715\">@Jason Rute</span> and <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span>  for this great tool) to do that. The problem is that it's a bit slow (~0.2s). Is there another way to do this? From what I understand, we're working on a \"file\" that we sync with Lean. Is it possible, for example, to modify only a part of the file, so that we don't have to resync the whole file (and so that Lean doesn't rebuild it from scratch)? Also, I didn't find the doc for using Lean in server mode, where can I find it?</p>\n<p>Thanks in advance!</p>",
        "id": 206113798,
        "sender_full_name": "Auguste Poiroux",
        "timestamp": 1596701006
    },
    {
        "content": "<p>Regarding the delay, there's some previous (unresolved) discussion <a href=\"#narrow/stream/113488-general/topic/why.20does.20a.20sync.20command.20take.20so.20long.20in.20the.20lean.20server/near/195131227\">here</a>. Sadly, there's no official docs on the commands in server mode. I was able to figure out how to work with it from <a href=\"https://github.com/leanprover/lean-client-js/blob/master/lean-client-js-core/src/commands.ts\">the source code of <code>lean-client-js</code></a> (see also <a href=\"https://github.com/leanprover/lean-client-js/blob/master/lean-client-js-core/src/server.ts\">this file</a>), but maybe <code>lean-client-python</code> is easier to read now. See also <a href=\"https://github.com/leanprover-community/lean-client-python/issues/15\">https://github.com/leanprover-community/lean-client-python/issues/15</a></p>\n<p>Maybe you've already seen this, but Jason gave a nice summary of the situation regarding Lean 3 server mode <a href=\"#narrow/stream/113488-general/topic/Examples.20of.20communicating.20with.20Lean/near/199253728\">here</a>.</p>",
        "id": 206114229,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1596701397
    },
    {
        "content": "<p>Thank you very much! I got all the answers I need <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 206114821,
        "sender_full_name": "Auguste Poiroux",
        "timestamp": 1596701905
    },
    {
        "content": "<p>And for anyone else coming to this thread who doesnâ€™t know already, the 0.2 seconds is hard coded into the lean server.  See the linked discussions above for more information.</p>",
        "id": 206128005,
        "sender_full_name": "Jason Rute",
        "timestamp": 1596712679
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321854\">Auguste Poiroux</span> <a href=\"#narrow/stream/113489-new-members/topic/Lean.20server.20mode.20-.20tactics/near/206113798\">said</a>:</p>\n<blockquote>\n<p>I'm trying to use Lean in server mode to get the status of a proof after applying a tactic.</p>\n</blockquote>\n<p>Would you be willing to share what kind of application you are trying to build here, and also for your other thread where you say: </p>\n<blockquote>\n<p>Is there a tool to extract the whole structure of a Lean file? The goal is to extract all the tactics from each proof (for proof in tactic mode) and to transform a term proof into a tactic proof.</p>\n</blockquote>",
        "id": 206131027,
        "sender_full_name": "Jason Rute",
        "timestamp": 1596715073
    },
    {
        "content": "<p>The reason I ask is that I've slowly been building some tools which do these sort of things.  I've worked on versions which use the Lean server (slow) and that don't (faster but more work to build).  Unfortunately, Lean doesn't have any form of nice tactic-level proof recording and doesn't have a great way to interact with it programatically.</p>",
        "id": 206131165,
        "sender_full_name": "Jason Rute",
        "timestamp": 1596715179
    },
    {
        "content": "<p>(Also, I initially missed your other conversation.  I don't follow the new member stream.)</p>",
        "id": 206131236,
        "sender_full_name": "Jason Rute",
        "timestamp": 1596715207
    },
    {
        "content": "<p>I am currently working with Stanislas Polu to do ML with Lean. My goal right now is to extract mathlib proofs in tactic mode. As you say, it's not an easy thing. But your tools are very useful to me. I'm also very interested in a tool that doesn't have that 0.2s delay. Do you think Lean4 will have a different (better) interface to do this?</p>",
        "id": 206139171,
        "sender_full_name": "Auguste Poiroux",
        "timestamp": 1596719991
    },
    {
        "content": "<p>This topic was moved by <span class=\"user-mention silent\" data-user-id=\"252300\">Jalex Stark</span> to <a class=\"stream-topic\" data-stream-id=\"113488\" href=\"/#narrow/stream/113488-general/topic/Lean.20server.20mode.20-.20tactics\">#general &gt; Lean server mode - tactics</a></p>",
        "id": 206145736,
        "sender_full_name": "Notification Bot",
        "timestamp": 1596722958
    }
]