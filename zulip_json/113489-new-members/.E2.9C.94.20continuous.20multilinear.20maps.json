[
    {
        "content": "<p>Yes, this is the problem I was trying to solve. Would you mind explaining  how the 'haveI' works and how it then allows the last line to work? I had been trying to use continuous_multilinear_map.map_zero but could never get quite the right thing. Thanks for the help</p>",
        "id": 284769266,
        "sender_full_name": "Matthew Honnor",
        "timestamp": 1654187025
    },
    {
        "content": "<p>I first tried <code>apply continuous_multilinear_map.map_zero</code> but it gave me the error <code>failed to synthesize type class instance for nonempty (fin b')</code>, which means that the type class inference system (the part of Lean which fills in all the inputs in square brackets) was faced with a square bracket input which was supposed to have type <code>nonempty (fin b')</code>, but the system couldn't find any terms of this type in its big list of terms, so it gave up. The \"I\" tactics explicitly add stuff to the \"instance cache\" (the big list which the type class inference system looks at), so I used the <code>haveI</code> tactic to put a term of that type into the instance cache and then the function application worked.</p>",
        "id": 284769720,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1654187234
    },
    {
        "content": "<p>I understand now, thanks so much for explaining</p>",
        "id": 284770129,
        "sender_full_name": "Matthew Honnor",
        "timestamp": 1654187406
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"497516\">Matthew Honnor</span> has marked this topic as resolved.</p>",
        "id": 284770154,
        "sender_full_name": "Notification Bot",
        "timestamp": 1654187416
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"497516\">@Matthew Honnor</span>: The actual technical question aside, did you notice that in <a href=\"https://github.com/leanprover-community/mathlib/pull/14382\">#14382</a> <span class=\"user-mention silent\" data-user-id=\"242586\">Vincent Beffara</span> proves the <em>principle of isolated zeros</em> for analytic functions? I very much hope this PR lands in mathlib soon.</p>",
        "id": 285002442,
        "sender_full_name": "Kalle Kytölä",
        "timestamp": 1654380609
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"373986\">@Kalle Kytölä</span> : Thanks for letting me know about this, I was not aware that this had been done. Is there is good way to search for things like this which have been done but are not in mathlib?</p>",
        "id": 285030463,
        "sender_full_name": "Matthew Honnor",
        "timestamp": 1654426310
    },
    {
        "content": "<p>Ask here! We're very happy to answer, and this is usually very fast.</p>",
        "id": 285030538,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1654426381
    },
    {
        "content": "<p>Btw the above PR is far from perfect, I would be glad to get comments !</p>",
        "id": 285034453,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1654432226
    },
    {
        "content": "<p>It does contain some thin API to work with multilinear maps in one variable so you might find it useful for other things</p>",
        "id": 285034482,
        "sender_full_name": "Vincent Beffara",
        "timestamp": 1654432301
    },
    {
        "content": "<p>Thanks for directing me to this, the API here will definitely help me with some other things.</p>",
        "id": 285041048,
        "sender_full_name": "Matthew Honnor",
        "timestamp": 1654442360
    }
]