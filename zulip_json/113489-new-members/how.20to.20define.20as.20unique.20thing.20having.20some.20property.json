[
    {
        "content": "<p>I am trying to formalize a version of  the Elementary Theory of the Category of Sets in lean and am having some trouble. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">category_theory.category.basic</span>\n<span class=\"kn\">open</span> <span class=\"n\">category_theory</span>\n\n<span class=\"kd\">universes</span> <span class=\"n\">u</span>\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">Sets</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span> <span class=\"o\">(</span><span class=\"n\">u</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">)}</span> <span class=\"o\">[</span><span class=\"n\">large_category</span> <span class=\"n\">Sets</span><span class=\"o\">]</span> <span class=\"o\">{</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">Sets</span><span class=\"o\">}</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">cartProd</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">Sets</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">carrier</span> <span class=\"o\">:</span> <span class=\"n\">Sets</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">fst</span> <span class=\"o\">:</span> <span class=\"n\">carrier</span> <span class=\"bp\">⟶</span> <span class=\"n\">X</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">snd</span> <span class=\"o\">:</span> <span class=\"n\">carrier</span> <span class=\"bp\">⟶</span> <span class=\"n\">Y</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">univ_map</span> <span class=\"o\">:</span> <span class=\"bp\">∀</span> <span class=\"o\">(</span><span class=\"n\">Z</span> <span class=\"o\">:</span> <span class=\"n\">Sets</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">Z</span> <span class=\"bp\">⟶</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">g</span> <span class=\"o\">:</span> <span class=\"n\">Z</span> <span class=\"bp\">⟶</span> <span class=\"n\">Y</span><span class=\"o\">),</span> <span class=\"bp\">∃!</span> <span class=\"o\">(</span><span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">Z</span> <span class=\"bp\">⟶</span> <span class=\"n\">carrier</span><span class=\"o\">),</span> <span class=\"n\">h</span> <span class=\"bp\">≫</span> <span class=\"n\">fst</span> <span class=\"bp\">=</span> <span class=\"n\">f</span> <span class=\"bp\">∧</span> <span class=\"n\">h</span> <span class=\"bp\">≫</span> <span class=\"n\">snd</span> <span class=\"bp\">=</span> <span class=\"n\">g</span><span class=\"o\">)</span>\n<span class=\"kd\">constant</span> <span class=\"n\">Prod</span> <span class=\"o\">(</span><span class=\"n\">X</span> <span class=\"n\">Y</span> <span class=\"o\">:</span> <span class=\"n\">Sets</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">cartProd</span> <span class=\"n\">X</span> <span class=\"n\">Y</span>\n</code></pre></div>\n<p>Given f and g, I want to define &lt;f, g&gt; to be the unique map whose existence is stipulated by cartProd.univ_map. I was hoping someone here might shed some light on how to do this as all my attempts fail to compile <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 281224173,
        "sender_full_name": "Sifat",
        "timestamp": 1651700876
    }
]