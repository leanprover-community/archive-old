[
    {
        "content": "<p>How do you hide symbols from the prelude? In particular, how does one hide <code>field</code>?</p>",
        "id": 157708150,
        "sender_full_name": "Hans-Dieter Hiep",
        "timestamp": 1549474083
    },
    {
        "content": "<p>You don't, for the most part. One option is to work in a new namespace, so you can reuse the name <code>field</code>, but this might occasionally lead to confusion. Using the <code>prelude</code> command at the top of your file will prevent Lean from loading anything from core, and then you can manually import things from <code>init</code>. But I doubt you can import very much without getting <code>field</code>, certainly nothing from mathlib.</p>",
        "id": 157710783,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1549476100
    },
    {
        "content": "<p>Thanks! Makes a lot of sense to work within a namespace then, since I do import other things from mathlib.</p>",
        "id": 157712157,
        "sender_full_name": "Hans-Dieter Hiep",
        "timestamp": 1549477089
    },
    {
        "content": "<p>I think there's an asterisk on your answer <span class=\"user-mention\" data-user-id=\"110596\">@Rob Lewis</span>. If your file starts with <code>prelude</code>, Lean doesn't implicitly import <code>init</code>. But as you say, if you're trying avoid name clashes, that's not the way to go.</p>",
        "id": 157724021,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1549485702
    },
    {
        "content": "<p>Hmm? That's what I said, or it's what I meant, anyway. You can start with <code>prelude</code> and then import things manually, but you can't import anything that imports <code>init.algebra.field</code>.</p>",
        "id": 157724451,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1549486051
    },
    {
        "content": "<p>Oh you're right, sorry! I misread!</p>",
        "id": 157751098,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1549513321
    }
]