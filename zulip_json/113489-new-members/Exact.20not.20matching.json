[
    {
        "content": "<p>Does anyone have any idea on why the following terms wouldn't be considered matchable by exact?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">invalid</span> <span class=\"n\">type</span> <span class=\"n\">ascription</span><span class=\"o\">,</span> <span class=\"n\">term</span> <span class=\"n\">has</span> <span class=\"n\">type</span>\n  <span class=\"n\">typ</span> <span class=\"n\">ctx</span> <span class=\"o\">(</span><span class=\"n\">subst</span> <span class=\"mi\">0</span> <span class=\"n\">t_t2</span> <span class=\"n\">ev_t12_t1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">a_T11.ty_func</span> <span class=\"n\">T</span><span class=\"o\">)</span>\n<span class=\"n\">but</span> <span class=\"n\">is</span> <span class=\"n\">expected</span> <span class=\"n\">to</span> <span class=\"k\">have</span> <span class=\"n\">type</span>\n  <span class=\"n\">typ</span> <span class=\"n\">ctx</span> <span class=\"o\">(</span><span class=\"n\">subst</span> <span class=\"mi\">0</span> <span class=\"n\">t_t2</span> <span class=\"n\">ev_t12_t1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"bp\">?</span><span class=\"n\">m_1.ty_func</span> <span class=\"n\">T</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>I've manually confirmed that ?m_1 and a_T11 have the same type.</p>\n<p>Thanks</p>",
        "id": 230940893,
        "sender_full_name": "Guilherme Espada",
        "timestamp": 1616103064
    },
    {
        "content": "<p>Additionally: doing sorry says</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"n\">exact</span> <span class=\"n\">tactic</span> <span class=\"n\">failed</span><span class=\"o\">,</span> <span class=\"n\">failed</span> <span class=\"n\">to</span> <span class=\"n\">assign</span>\n  <span class=\"gr\">sorry</span>\n<span class=\"n\">to</span> <span class=\"n\">metavariable</span> <span class=\"bp\">?</span><span class=\"n\">m_2</span> <span class=\"o\">(</span><span class=\"n\">possible</span> <span class=\"n\">cause</span><span class=\"o\">:</span> <span class=\"n\">occurs</span> <span class=\"n\">check</span> <span class=\"n\">failed</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 230941635,
        "sender_full_name": "Guilherme Espada",
        "timestamp": 1616103423
    },
    {
        "content": "<p>I got it: the relevant metavar comes from outside the current goal</p>",
        "id": 230941854,
        "sender_full_name": "Guilherme Espada",
        "timestamp": 1616103561
    }
]