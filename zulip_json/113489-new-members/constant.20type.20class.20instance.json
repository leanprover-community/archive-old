[
    {
        "content": "<p>Is there a way to declare constant instances? The line #check below raises 'failed to synthesize type class instance ...'</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">variables</span> <span class=\"o\">(</span><span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n<span class=\"kn\">instance</span> <span class=\"n\">B_inhabited</span><span class=\"o\">:</span> <span class=\"n\">inhabited</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span> <span class=\"n\">b</span> <span class=\"bp\">⟩</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">default</span> <span class=\"n\">B</span>\n</code></pre></div>",
        "id": 202211926,
        "sender_full_name": "Drew Moore",
        "timestamp": 1593304351
    },
    {
        "content": "<p>There can't be an <code>inhabited B</code> instance for arbitrary <code>B : Type</code> though. What if <code>B = empty</code>?</p>",
        "id": 202212062,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1593304653
    },
    {
        "content": "<p>Ah that makes sense. I'm just trying to learn type classes in Lean, and would like to use examples like one would create with constant. Initially, I used constants, but that also complains, but because of 'noncomputability'.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">constants</span> <span class=\"o\">(</span><span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n<span class=\"kn\">instance</span> <span class=\"n\">B_inhabited</span><span class=\"o\">:</span> <span class=\"n\">inhabited</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span> <span class=\"n\">b</span> <span class=\"bp\">⟩</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">default</span> <span class=\"n\">B</span>\n</code></pre></div>",
        "id": 202212169,
        "sender_full_name": "Drew Moore",
        "timestamp": 1593304889
    },
    {
        "content": "<p>You can do this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">constants</span> <span class=\"o\">(</span><span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n<span class=\"n\">noncomputable</span> <span class=\"kn\">instance</span> <span class=\"n\">B_inhabited</span><span class=\"o\">:</span> <span class=\"n\">inhabited</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span> <span class=\"n\">b</span> <span class=\"bp\">⟩</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">default</span> <span class=\"n\">B</span>\n</code></pre></div>\n\n\n<p>or</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">constants</span> <span class=\"o\">(</span><span class=\"n\">B</span><span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">b</span><span class=\"o\">:</span> <span class=\"n\">B</span><span class=\"o\">)</span>\n<span class=\"n\">noncomputable</span> <span class=\"n\">theory</span>\n<span class=\"kn\">instance</span> <span class=\"n\">B_inhabited</span><span class=\"o\">:</span> <span class=\"n\">inhabited</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"bp\">⟨</span> <span class=\"n\">b</span> <span class=\"bp\">⟩</span>\n<span class=\"bp\">#</span><span class=\"kn\">check</span> <span class=\"n\">default</span> <span class=\"n\">B</span>\n</code></pre></div>",
        "id": 202212221,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1593304954
    },
    {
        "content": "<p>thank you!</p>",
        "id": 202212226,
        "sender_full_name": "Drew Moore",
        "timestamp": 1593304977
    }
]