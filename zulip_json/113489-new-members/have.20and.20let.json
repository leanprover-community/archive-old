[
    {
        "content": "<p>Hello, I'm wondering about the specifics of <code>have</code> and <code>let</code> in lean4 (not the tactics). Why is <code>have</code> defined the way it is? And does it matter when handling variables of type <code>Prop</code>, since their values are irrelevant anyways?</p>",
        "id": 260442314,
        "sender_full_name": "Joscha Mennicken",
        "timestamp": 1636135387
    },
    {
        "content": "<p>It seems to me like <code>let</code> can be used everywhere <code>have</code> can be used and I'd like to know what scenarios <code>have</code> is meant for.</p>",
        "id": 260442554,
        "sender_full_name": "Joscha Mennicken",
        "timestamp": 1636135473
    },
    {
        "content": "<p><code>let</code> just clogs things up more. If I've proved <code>h : A = B</code> after some long struggle then I want my local context to say <code>h : A = B</code> and not <code>h : A = B := &lt;gigantic 20 line proof which makes my proof state much harder to read&gt;</code></p>",
        "id": 260443228,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636135747
    },
    {
        "content": "<p>So <code>have</code> is a way to explicitly throw away unnecessary information. Makes sense</p>",
        "id": 260443926,
        "sender_full_name": "Joscha Mennicken",
        "timestamp": 1636136030
    }
]