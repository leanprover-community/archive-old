[
    {
        "content": "<p>Hello all,</p>\n<p>I hope this is the right place to ask this. I would really appreciate if someone could help me with that.</p>\n<p>I am trying to install the mathlib on my Raspberry Pi 3B with Raspbian. Unfortunately, the recommended installation method involves a script which tries to download another script specifically for the required architecture (which is specified via a substring of the file name it requests) which does unfortunately not exist. So I wonder, if it is possible to install the mathlib manually and if somebody could explain me how to do this.</p>\n<p>I can give you more specific information on request, of course.</p>\n<p>Any help is appreciated!</p>",
        "id": 255232802,
        "sender_full_name": "Daniel Jentsch",
        "timestamp": 1632841778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"445708\">@Daniel Jentsch</span> Interesting! But my first worry is about hardware specs. How much RAM does the RPi 3B have? Because mathlib with &lt;= 4GB is quite terrible usually.</p>",
        "id": 255233362,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632841965
    },
    {
        "content": "<p>Also, does this help: <a href=\"https://leanprover-community.github.io/toolchain.html\">https://leanprover-community.github.io/toolchain.html</a></p>",
        "id": 255233508,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632842024
    },
    {
        "content": "<p>It is a more detailed version, explaining what the 1-line-install script does</p>",
        "id": 255233566,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632842040
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/Mathlib.20on.20Raspberry.20Pi.20.28i.2Ee.2E.20arm.20architecture.29/near/255233362\">said</a>:</p>\n<blockquote>\n<p>Because mathlib with &lt;= 4GB is quite terrible usually.</p>\n</blockquote>\n<p>What an euphemism  <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 255233622,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632842045
    },
    {
        "content": "<p>Hi Johan! Well this might be a bottleneck indeed: It has one GB of RAM. So do you think this would be a waste of time?</p>",
        "id": 255233668,
        "sender_full_name": "Daniel Jentsch",
        "timestamp": 1632842063
    },
    {
        "content": "<p>mathlib with 8GB is also hell sometimes.</p>",
        "id": 255233686,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1632842071
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"445708\">@Daniel Jentsch</span> I'm afraid 1GB cannot give you a usable setup. You might be able to play with some very basic things. But since Raspbian will probably eat at least 200 MB, there is very \"little\" left for lean.</p>",
        "id": 255233912,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632842150
    },
    {
        "content": "<p>Are you interested in programming with Lean, or in maths? And if it's maths, what kind of maths?</p>",
        "id": 255234010,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632842174
    },
    {
        "content": "<p>I want to formalize a mathematical proof for a course at university. The computer I usually use is currently not usable. So I am using this Raspberry as a substitute. I would normally wait until I will have a decent computer again, but due to the course I thought I should really get it running this month.</p>",
        "id": 255234448,
        "sender_full_name": "Daniel Jentsch",
        "timestamp": 1632842336
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"445708\">@Daniel Jentsch</span> You might try using Lean in the sagecloud, or something like that.</p>",
        "id": 255234686,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632842405
    },
    {
        "content": "<p>Then you can off-load everything to a server</p>",
        "id": 255234719,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632842418
    },
    {
        "content": "<p>Can you elaborate on that?</p>",
        "id": 255234858,
        "sender_full_name": "Daniel Jentsch",
        "timestamp": 1632842475
    },
    {
        "content": "<p><a href=\"https://cocalc.com/\">https://cocalc.com/</a> (which is run by the Sage people) is a way of running Lean in the cloud. It's something like 3.10 though, if this is an issue (we're on about 3.30 now)</p>",
        "id": 255235348,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1632842648
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  I will try that, thanks a lot! I don't think that the version is an issue. A propos the version: Does mathlib now even work with lean 4?</p>",
        "id": 255235575,
        "sender_full_name": "Daniel Jentsch",
        "timestamp": 1632842747
    },
    {
        "content": "<p>Nope, porting mathlib to Lean 4 is actively being worked on. But it will take several months (6~8?) before it is done.</p>",
        "id": 255235756,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1632842818
    },
    {
        "content": "<p>Ok, thanks a lot to all of you for your help. I will try working with this sagecloud. Maybe I'll come back if I have further questions. Thanks again!</p>",
        "id": 255235944,
        "sender_full_name": "Daniel Jentsch",
        "timestamp": 1632842901
    },
    {
        "content": "<p>gitpod is also possibly a viable option, which has the advantage of working on bleeding-edge lean (or any version you like)</p>",
        "id": 255237816,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632843556
    },
    {
        "content": "<p>For gitpod, all you need to do is click on the gitpod badge in the mathlib repo readme which points to: <a href=\"https://gitpod.io/#https://github.com/leanprover-community/mathlib\">https://gitpod.io/#https://github.com/leanprover-community/mathlib</a></p>",
        "id": 255244044,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1632845738
    },
    {
        "content": "<p>It's fairly straightforward to set up on your own repo too</p>",
        "id": 255245627,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632846357
    },
    {
        "content": "<p>Although it has usage caps that might get in your way</p>",
        "id": 255245702,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1632846377
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"310045\">@Eric Wieser</span>  <span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> thanks for your suggestions, I am trying to make this work right now.</p>",
        "id": 255246228,
        "sender_full_name": "Daniel Jentsch",
        "timestamp": 1632846555
    },
    {
        "content": "<p>Side question. <br>\nSince a Pi has limited ram, can LEAN run on a cluster?</p>",
        "id": 255249194,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1632847624
    },
    {
        "content": "<p>I'm not sure exactly what you mean by running Lean on a cluster, but I think people have successfully used VS Code's remote-ssh functionality with the Lean 3 extension.</p>",
        "id": 255249906,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1632847906
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"123965\">@Bryan Gin-ge Chen</span> <br>\nBy clustering I mean running LEAN on multiple RaspberryPis connected together to form a cluster. (<a href=\"https://magpi.raspberrypi.org/articles/build-a-raspberry-pi-cluster-computer\">ref</a>).</p>\n<p>I suspect that one processor will do most of the work (user GUI) but for the searching or compute intensive calls, I am thinking search, the call could be partitioned up and done concurrently. Here is an <a href=\"https://swi-prolog.discourse.group/t/building-a-port-scanner/2580/28?u=ericgt\">example</a> I did using Prolog. The part that does the distribution of the work is done with the concurrent_forall predicate.</p>",
        "id": 255251331,
        "sender_full_name": "Eric Taucher",
        "timestamp": 1632848384
    },
    {
        "content": "<p>I don't think Lean has any built in support for something like that. But maybe it's still possible!</p>",
        "id": 255251911,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1632848564
    }
]