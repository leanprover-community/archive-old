[
    {
        "content": "<p>Hi, I've been typing away at some representation theory, but I'm stuck with direct sums. I have a module M and submodules L and N. <br>\nI would like to say that M = L \\oplus N. How do I do this?</p>",
        "id": 167066352,
        "sender_full_name": "Ben McDonnell",
        "timestamp": 1559384552
    },
    {
        "content": "<p>oh apparently I can just type \\oplus - is there any reason this wouldn't do what I expect?</p>",
        "id": 167066949,
        "sender_full_name": "Ben McDonnell",
        "timestamp": 1559385687
    },
    {
        "content": "<p>I am afraid there is a lot of reason to expect that. It is most likely not defined yet.</p>",
        "id": 167066998,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1559385731
    },
    {
        "content": "<p>Having the notation registered in the VScode extension has nothing to do with defining things in Lean</p>",
        "id": 167067000,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1559385751
    },
    {
        "content": "<p>what exactly do you want the <code>oplus</code> to mean?</p>",
        "id": 167067088,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1559385958
    },
    {
        "content": "<p>just the span of the summands, or also the claim that the summands have trivial intersection?</p>",
        "id": 167067134,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1559385985
    },
    {
        "content": "<p>I think you have to just say they're isomorphic. <code>L \\times N \\~-\\l M</code> <code>oplus</code> will give you the sum of types, you want the cartesian product of types.</p>",
        "id": 167067137,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1559386018
    },
    {
        "content": "<p>There's a notion of \"internal\" direct sums too---do we have that?</p>",
        "id": 167067450,
        "sender_full_name": "Keeley Hoek",
        "timestamp": 1559386581
    },
    {
        "content": "<p>Yes, but it will give a submodule of the direct sum.</p>",
        "id": 167067713,
        "sender_full_name": "Chris Hughes",
        "timestamp": 1559387100
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110044\">@Chris Hughes</span>  ok, I see now. The direct sum of modules is the product, which is then given a module structure. And <code>oplus</code> is  basically just the disjoint union.</p>",
        "id": 167072763,
        "sender_full_name": "Ben McDonnell",
        "timestamp": 1559395824
    }
]