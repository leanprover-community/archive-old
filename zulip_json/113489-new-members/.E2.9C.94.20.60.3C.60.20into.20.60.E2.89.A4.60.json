[
    {
        "content": "<p>Is it possible to turn a goal <code>a &lt; b</code> into <code>a + 1 ≤ b</code>? (both natural numbers)</p>",
        "id": 260728469,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1636410694
    },
    {
        "content": "<p><a href=\"https://leanprover-community.github.io/mathlib_docs/find/nat.lt_iff_add_one_le\">docs#nat.lt_iff_add_one_le</a> is your friend</p>",
        "id": 260729073,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1636410997
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"451983\">Arthur Paulino</span> has marked this topic as resolved.</p>",
        "id": 260729256,
        "sender_full_name": "Notification Bot",
        "timestamp": 1636411104
    },
    {
        "content": "<p>Even better,</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">&lt;</span> <span class=\"n\">b</span> <span class=\"bp\">↔</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">b</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">library_search</span>\n</code></pre></div>\n<p>is your friend!</p>",
        "id": 260733943,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1636414003
    },
    {
        "content": "<p>(and of course you can also just <code>have : _ := by library_search</code> mid-proof to look things up if you don't feel like writing an <code>example</code>)</p>",
        "id": 260733993,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1636414055
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> This is amazing!</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">[</span><span class=\"n\">fintype</span> <span class=\"n\">α</span><span class=\"o\">]</span> <span class=\"o\">:</span> <span class=\"mi\">0</span> <span class=\"bp\">≤</span> <span class=\"n\">fintype.card</span> <span class=\"n\">α</span> <span class=\"o\">:=</span> <span class=\"kd\">by</span> <span class=\"n\">library_search</span>\n<span class=\"c1\">-- Try this: exact zero_le (fintype.card α)</span>\n</code></pre></div>",
        "id": 260739227,
        "sender_full_name": "Arthur Paulino",
        "timestamp": 1636417843
    },
    {
        "content": "<p>Arthur has just realised he doesn't have to memorise all of mathlib :-)</p>",
        "id": 260758946,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1636439339
    }
]