[
    {
        "content": "<p>Can I prove that <a href=\"https://raw.githubusercontent.com/kth-competitive-programming/kactl/master/content/number-theory/ModMulLL.h\">something like this</a> is correct in Lean 4? Or is Lean 4 not capable enough?</p>",
        "id": 221496270,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1609746102
    },
    {
        "content": "<p>Apologies if I sound stupid, I am pretty much a noob.</p>",
        "id": 221496704,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1609746642
    },
    {
        "content": "<p>I'm sure you could do it in lean 3 too, but in both cases you'll have to start by telling lean the rules of floating point numbers</p>",
        "id": 221497106,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609747176
    },
    {
        "content": "<p>Mathlib has a start at that in <a href=\"https://leanprover-community.github.io/mathlib_docs/find/fp.float\">docs#fp.float</a></p>",
        "id": 221497176,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609747223
    },
    {
        "content": "<p>There are also <a href=\"https://leanprover-community.github.io/mathlib_docs/find/unsigned\">docs#unsigned</a> integers, but I haven't seen anything about how conversion of the bit patterns from unsigned to signed is the modulo operation (for some fixed bit width, here  I think you use 64)</p>",
        "id": 221497247,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1609747307
    },
    {
        "content": "<p>The definition at <a href=\"https://github.com/kth-competitive-programming/kactl/blob/master/doc/modmul-proof.md\">https://github.com/kth-competitive-programming/kactl/blob/master/doc/modmul-proof.md</a> has an <code>M</code> and a <code>c</code>, and I can't tell which is the typo</p>",
        "id": 221497303,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1609747336
    },
    {
        "content": "<p>A better link than <span class=\"user-mention\" data-user-id=\"270523\">@Huỳnh Trần Khanh</span>'s: <a href=\"https://github.com/kth-competitive-programming/kactl/blob/master/content/number-theory/ModMulLL.h\">non-raw github</a></p>",
        "id": 221497416,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609747456
    },
    {
        "content": "<p>Note that the proof <span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> links to starts with a false assumption about the precision of long double, which is platform-dependent, most notably equal to double on windows</p>",
        "id": 221497560,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609747599
    },
    {
        "content": "<p>I'd assume M is the typo because the rest of the proof uses c. Maybe I should file an issue against the repo.</p>",
        "id": 221497944,
        "sender_full_name": "Huỳnh Trần Khanh",
        "timestamp": 1609747925
    },
    {
        "content": "<p><a href=\"https://github.com/kth-competitive-programming/kactl/issues/185\">https://github.com/kth-competitive-programming/kactl/issues/185</a> for the bad assumption</p>",
        "id": 221498050,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1609748025
    },
    {
        "content": "<p>The proof sketch is doable (although some things seemed to be hand-waved) if you have the right definitions and API around them. You could try to make this statement about ints and rats first.</p>",
        "id": 221498176,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1609748143
    }
]