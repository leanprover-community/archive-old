[
    {
        "content": "<p>Hi Folks,</p>\n<p>I know that at one point Lean had an \"extending x-&gt;y\" construct enabling the renaming of field inherited from parent structures. So you could say, for example, \"structure X extends Y renaming z-&gt;x.\" It appears (to me) that this feature has been changed or eliminated. Is there a way to rename fields of structures when extending structures?Also, it looks like the merging of multiply inherited field names is not happening. Is there up-to-date documentation on these aspects of Lean 3?</p>",
        "id": 230403282,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1615836197
    },
    {
        "content": "<p>I've never heard of such a feature</p>",
        "id": 230406987,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615837796
    },
    {
        "content": "<p>There is <code>renaming</code> in <code>open</code> IIRC but not in <code>structure</code></p>",
        "id": 230407054,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615837812
    },
    {
        "content": "<p>Merging of multiply inherited field names happens when you set <code>set_option old_structure_cmd true</code></p>",
        "id": 230407102,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615837844
    },
    {
        "content": "<p>mathlib primarily uses the \"old structure cmd\" but lean 4 is doing away with it so we'll need to reimplement it in the mathlib prelude</p>",
        "id": 230407232,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615837903
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110049\">@Mario Carneiro</span> Since I was fighting with this problem a couple of days ago (trying to extend a structure, but Lean complaining that something with the same name already existed), can you point to some <code>docs</code>about <code>set_option old_structure_cmd true</code>? Thanks! <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span></p>",
        "id": 230410433,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1615839058
    },
    {
        "content": "<p>No particular docs to point to, but the usage is pretty simple:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n<span class=\"kd\">structure</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">bar</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">baz</span> <span class=\"kd\">extends</span> <span class=\"n\">foo</span><span class=\"o\">,</span> <span class=\"n\">bar</span>\n\n<span class=\"k\">#print</span> <span class=\"n\">baz</span>\n<span class=\"c1\">-- structure baz : Type</span>\n<span class=\"c1\">-- fields:</span>\n<span class=\"c1\">-- baz.a : baz → ℕ</span>\n<span class=\"c1\">-- baz.b : baz → ℕ</span>\n<span class=\"c1\">-- baz.c : baz → ℕ</span>\n</code></pre></div>",
        "id": 230412443,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1615839844
    },
    {
        "content": "<p>This feature does exist, the keyword is <code>renaming</code></p>",
        "id": 230417018,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1615841831
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110049\">Mario Carneiro</span> <a href=\"#narrow/stream/113489-new-members/topic/Renaming.20fields.20of.20structures.20being.20extended/near/230412443\">said</a>:</p>\n<blockquote>\n<p>No particular docs to point to, but the usage is pretty simple:</p>\n<p><div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">set_option</span> <span class=\"n\">old_structure_cmd</span> <span class=\"n\">true</span>\n<span class=\"kd\">structure</span> <span class=\"n\">foo</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">bar</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">c</span> <span class=\"o\">:</span> <span class=\"n\">nat</span><span class=\"o\">)</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">baz</span> <span class=\"kd\">extends</span> <span class=\"n\">foo</span><span class=\"o\">,</span> <span class=\"n\">bar</span>\n\n<span class=\"k\">#print</span> <span class=\"n\">baz</span>\n<span class=\"c1\">-- structure baz : Type</span>\n<span class=\"c1\">-- fields:</span>\n<span class=\"c1\">-- baz.a : baz → ℕ</span>\n<span class=\"c1\">-- baz.b : baz → ℕ</span>\n<span class=\"c1\">-- baz.c : baz → ℕ</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>Thanks! No <code>docs</code> beats such an example.</p>",
        "id": 230431827,
        "sender_full_name": "Filippo A. E. Nuccio",
        "timestamp": 1615847453
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/Renaming.20fields.20of.20structures.20being.20extended/near/230417018\">said</a>:</p>\n<blockquote>\n<p>This feature does exist, the keyword is <code>renaming</code></p>\n</blockquote>\n<p>I get syntax errors at \"renaming\" when I copy and paste old code that presumably used to work.</p>",
        "id": 230447965,
        "sender_full_name": "Kevin Sullivan",
        "timestamp": 1615858945
    },
    {
        "content": "<p><a href=\"https://github.com/leanprover-community/lean/blob/cab92ef9f05754271116ab6786890d558c53e746/tests/lean/run/record10.lean#L7-L8\">https://github.com/leanprover-community/lean/blob/cab92ef9f05754271116ab6786890d558c53e746/tests/lean/run/record10.lean#L7-L8</a></p>",
        "id": 230448212,
        "sender_full_name": "Julian Berman",
        "timestamp": 1615859168
    },
    {
        "content": "<p>In case that helps, grepping the test suite finds some examples that presumably still work/run in CI?</p>",
        "id": 230448227,
        "sender_full_name": "Julian Berman",
        "timestamp": 1615859183
    }
]