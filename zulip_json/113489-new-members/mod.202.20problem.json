[
    {
        "content": "<p>Hi, I want to show that  <code>¬(2 ^ k * a + b) % 2 = 0</code>, given the hypotheses <code>h₀ : 1 ≤ k</code> and <code>¬b % 2 = 0</code> or <code>b % 2 = 1</code>. I looked a little in mathlib and tried <code>library_search</code> with no luck. How might I prove this?</p>",
        "id": 183808418,
        "sender_full_name": "Lucas Allen",
        "timestamp": 1576719533
    },
    {
        "content": "<p>There are some useful lemmas in data.nat.parity so if you import data.nat.parity you can do</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">open</span> <span class=\"n\">nat</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">a</span>  <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₀</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">(</span> <span class=\"n\">hh</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"err\">%</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"o\">((</span><span class=\"mi\">2</span> <span class=\"err\">^</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"err\">%</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">not_even_iff</span> <span class=\"n\">at</span> <span class=\"n\">hh</span><span class=\"o\">,</span>\n<span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">even_iff</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n<span class=\"n\">simp</span> <span class=\"o\">[</span><span class=\"n\">hh</span><span class=\"o\">]</span> <span class=\"k\">with</span> <span class=\"n\">parity_simps</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"o\">(</span><span class=\"n\">ne</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">(</span><span class=\"n\">ne_of_lt</span> <span class=\"n\">h₀</span><span class=\"o\">)),</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 183809705,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1576721138
    },
    {
        "content": "<p>Awesome, thank you.</p>",
        "id": 183813720,
        "sender_full_name": "Lucas Allen",
        "timestamp": 1576727297
    },
    {
        "content": "<p>This version avoids the non-terminal <code>simp</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">import</span> <span class=\"n\">data</span><span class=\"bp\">.</span><span class=\"n\">nat</span><span class=\"bp\">.</span><span class=\"n\">parity</span>\n<span class=\"kn\">open</span> <span class=\"n\">nat</span>\n\n<span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">k</span> <span class=\"n\">a</span>  <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"bp\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">h₀</span> <span class=\"o\">:</span> <span class=\"mi\">1</span> <span class=\"bp\">≤</span> <span class=\"n\">k</span><span class=\"o\">)</span> <span class=\"o\">(</span> <span class=\"n\">hh</span> <span class=\"o\">:</span> <span class=\"n\">b</span> <span class=\"err\">%</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span> <span class=\"o\">((</span><span class=\"mi\">2</span> <span class=\"err\">^</span> <span class=\"n\">k</span> <span class=\"bp\">*</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span><span class=\"o\">)</span> <span class=\"err\">%</span> <span class=\"mi\">2</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">not_even_iff</span> <span class=\"n\">at</span> <span class=\"n\">hh</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"err\">←</span> <span class=\"n\">even_iff</span> <span class=\"n\">at</span> <span class=\"bp\">*</span><span class=\"o\">,</span>\n  <span class=\"n\">suffices</span> <span class=\"o\">:</span> <span class=\"bp\">¬</span><span class=\"n\">k</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span> <span class=\"bp\">∨</span> <span class=\"n\">even</span> <span class=\"n\">a</span><span class=\"o\">,</span>\n    <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">hh</span><span class=\"o\">]</span> <span class=\"k\">with</span> <span class=\"n\">parity_simps</span><span class=\"o\">,</span>\n  <span class=\"n\">exact</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"o\">(</span><span class=\"n\">ne</span><span class=\"bp\">.</span><span class=\"n\">symm</span> <span class=\"o\">(</span><span class=\"n\">ne_of_lt</span> <span class=\"n\">h₀</span><span class=\"o\">)),</span>\n<span class=\"kn\">end</span>\n</pre></div>",
        "id": 183825983,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1576744955
    }
]