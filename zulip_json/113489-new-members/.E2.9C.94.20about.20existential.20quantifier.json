[
    {
        "content": "<p>Given <code>test : ∃ (i : ℕ), true := ⟨0, trivial⟩</code>, I can use <code>choose</code> or <code>obtain</code> etc to get the <code>i</code>. Is there a way to extract <code>0</code> out?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n\n<span class=\"kd\">def</span> <span class=\"n\">test</span> <span class=\"o\">:</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">i</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">),</span> <span class=\"n\">true</span> <span class=\"o\">:=</span> <span class=\"o\">⟨</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">trivial</span><span class=\"o\">⟩</span>\n\n<span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"n\">true</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">obtain</span> <span class=\"o\">⟨</span><span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">⟩</span> <span class=\"o\">:=</span> <span class=\"n\">test</span><span class=\"o\">,</span>\n  <span class=\"k\">have</span> <span class=\"o\">:</span> <span class=\"n\">i</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">,</span>\n  <span class=\"gr\">sorry</span><span class=\"o\">,</span>\n\n  <span class=\"n\">trivial</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 266705975,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1641227571
    },
    {
        "content": "<p>no, because \\&lt;1, trivial&gt; is also a member of that prop,  and Prop is a subsingleton so you'd have 1=0</p>",
        "id": 266706074,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641227634
    },
    {
        "content": "<p>you need a non-proof-irrelevant language</p>",
        "id": 266706142,
        "sender_full_name": "Eric Rodriguez",
        "timestamp": 1641227654
    },
    {
        "content": "<p>I see, thank you for the explanation. I will use dependent pair instead</p>",
        "id": 266706481,
        "sender_full_name": "Jujian Zhang",
        "timestamp": 1641227854
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"252627\">Jujian Zhang</span> has marked this topic as resolved.</p>",
        "id": 266706486,
        "sender_full_name": "Notification Bot",
        "timestamp": 1641227857
    }
]