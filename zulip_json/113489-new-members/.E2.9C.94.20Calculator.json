[
    {
        "content": "<p>Is there a tactic that can perform arithmetic like a calculator?</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">example</span> <span class=\"o\">:</span> <span class=\"mi\">1001</span> <span class=\"bp\">*</span> <span class=\"mi\">587</span> <span class=\"bp\">=</span> <span class=\"mi\">587587</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 300337275,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1663931083
    },
    {
        "content": "<p><code>norm_num</code></p>",
        "id": 300337307,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1663931096
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 300337903,
        "sender_full_name": "Martin Dvořák",
        "timestamp": 1663931327
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417654\">Martin Dvořák</span> has marked this topic as resolved.</p>",
        "id": 300337910,
        "sender_full_name": "Notification Bot",
        "timestamp": 1663931331
    },
    {
        "content": "<p><code>#norm_num 1001 * 587 </code> and <code>#eval 1001 * 587 </code> also work if you just want to find and not prove the result</p>",
        "id": 300342253,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1663933051
    },
    {
        "content": "<p>Just to clarify, <code>#norm_num</code> computes a provably correct result (assuming you trust the pretty printer) while <code>#eval</code> gives an unverified but relatively trustworthy computation using the VM.</p>",
        "id": 300351483,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1663936361
    },
    {
        "content": "<p>Does<code>#norm_num</code> actually verify the proof term that's produced though?</p>",
        "id": 300358816,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1663938832
    },
    {
        "content": "<p>Hmm, I guess at best it uses the frontend's type checker rather than the kernel's</p>",
        "id": 300359272,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1663938983
    },
    {
        "content": "<p>It definitely throws the proof away. At least if you get a <code>#norm_num</code> result you know that it's something that <code>norm_num</code> should be able to prove.</p>",
        "id": 300360064,
        "sender_full_name": "Kyle Miller",
        "timestamp": 1663939290
    }
]