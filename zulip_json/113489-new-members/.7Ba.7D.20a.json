[
    {
        "content": "<p>This is making me sad:</p>\n<div class=\"codehilite\"><pre><span></span>example {α : Type} (a : α) : ({a} : set α) a := ...\n</pre></div>",
        "id": 162589707,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554434169
    },
    {
        "content": "<p>The funny thing is I don't know if you are complaining that it doesn't work, or complaining that it works... maybe it's just bad that it can be contemplated</p>",
        "id": 162591023,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1554436086
    },
    {
        "content": "<p>while we are on the topic of abusing defeq:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">({</span><span class=\"n\">a</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"o\">:=</span> <span class=\"n\">or</span><span class=\"bp\">.</span><span class=\"n\">inl</span> <span class=\"n\">rfl</span>\n</pre></div>",
        "id": 162591118,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1554436227
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/vJor-OzVrb8d6y6QWVHp0Noa/2019-04-05-3.png\" target=\"_blank\" title=\"2019-04-05-3.png\"></a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/vJor-OzVrb8d6y6QWVHp0Noa/2019-04-05-3.png\" target=\"_blank\" title=\"\"><img src=\"/user_uploads/3121/vJor-OzVrb8d6y6QWVHp0Noa/2019-04-05-3.png\"></a></div>",
        "id": 162591186,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1554436352
    },
    {
        "content": "<p><a href=\"/user_uploads/3121/dS2Aetl_aoe05ktlY5oldy_O/2019-04-05-3.png\" target=\"_blank\" title=\"2019-04-05-3.png\">lower resolution</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/3121/dS2Aetl_aoe05ktlY5oldy_O/2019-04-05-3.png\" target=\"_blank\" title=\"lower resolution\"><img src=\"/user_uploads/3121/dS2Aetl_aoe05ktlY5oldy_O/2019-04-05-3.png\"></a></div>",
        "id": 162591203,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1554436385
    },
    {
        "content": "<p>Why the sadness?</p>",
        "id": 162591648,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554437118
    },
    {
        "content": "<p>And how is this abuse?</p>",
        "id": 162591654,
        "sender_full_name": "Simon Hudon",
        "timestamp": 1554437124
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"kn\">example</span> <span class=\"o\">{</span><span class=\"n\">α</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">}</span> <span class=\"o\">(</span><span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"o\">:</span> <span class=\"o\">({</span><span class=\"n\">a</span><span class=\"o\">}</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">α</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"o\">:=</span>\n<span class=\"n\">set</span><span class=\"bp\">.</span><span class=\"n\">mem_singleton</span> <span class=\"bp\">_</span>\n</pre></div>\n\n\n<p>i'm surprised <code>library_search</code> didn't get this</p>",
        "id": 162593445,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1554439782
    },
    {
        "content": "<p><code>library_search</code> looked at the statement and thought: \"Hey, that's abuse! That's sad! My author would never wan't me to find a solution here... I refuse.\"</p>",
        "id": 162593648,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1554440069
    },
    {
        "content": "<p>ah, <code>library_search</code> only matches syntactically</p>",
        "id": 162593779,
        "sender_full_name": "Jesse Michael Han",
        "timestamp": 1554440293
    },
    {
        "content": "<p>It’s not completely crazy to have <code>library_search</code> run “non-syntactically” as well, i.e. just hit the goal with _every_ imported definition. Perhaps I’ll add a <code>library_search!</code> syntax for “for eff’s sake, just tell me the lemma name, I don’t mind waiting” mode.</p>",
        "id": 162594639,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554441774
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"209371\">@Michael Howes</span></p>",
        "id": 162594652,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1554441814
    }
]