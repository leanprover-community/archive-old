[
    {
        "content": "<p>Hello,</p>\n<p>I'm trying to formalize the statement of <a href=\"https://stacks.math.columbia.edu/tag/00DV\">Nakayama's Lemma</a>, part (8) in the link. I'm struggling with the hypothesis \"the images of <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_1, \\ldots, x_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> generate <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi mathvariant=\"normal\">/</mi><mi>I</mi><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M/IM</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>\". My attempt is to use <code>finset M</code> for the set <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_1, \\ldots, x_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, and the <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> looks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code> <span class=\"kd\">lemma</span> <span class=\"n\">generate_of_quotient_generate_of_le_jacobson</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">hM</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">fg</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hIjac</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">≤</span> <span class=\"n\">jacobson</span> <span class=\"bp\">⊥</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n<span class=\"c1\">-- here is the hypothesis I can't quite figure out</span>\n<span class=\"o\">(</span><span class=\"n\">hIM</span> <span class=\"o\">:</span> <span class=\"n\">submodule.span</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"bp\">⧸</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"bp\">↑</span><span class=\"o\">(</span><span class=\"n\">S.image</span> <span class=\"o\">(</span><span class=\"bp\">@</span><span class=\"n\">submodule.quotient.mk</span> <span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"n\">_</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">))))</span> <span class=\"bp\">=</span>\n<span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"bp\">⧸</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">⧸</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)))))</span>\n<span class=\"c1\">-- end hypothesis I can't figure out</span>\n<span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">submodule.span</span> <span class=\"n\">R</span> <span class=\"bp\">↑</span><span class=\"n\">S</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">))</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>\n<p>The error says <code>failed to synthesize type class instance for ... ⊢ decidable_eq (M ⧸ I • ⊤)</code>. <br>\nWhere did decidability come into the picture for this statement about modules? And how do I convince lean that whatever needs to be decidable is indeed decidable and/or is there a better way to formalize this assumption?</p>",
        "id": 308488426,
        "sender_full_name": "Jack J Garzella",
        "timestamp": 1667861604
    },
    {
        "content": "<p>Try <code>open_locale classical</code> before your lemma</p>",
        "id": 308489794,
        "sender_full_name": "Alex J. Best",
        "timestamp": 1667862258
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 308490205,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1667862469
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 308490357,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1667862526
    },
    {
        "content": "<p>Sorry, I missed that you wanted statement (8)</p>",
        "id": 308490715,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1667862720
    },
    {
        "content": "<p>Anyway, it's probably better to formulate the finitely-generated assumption using <a href=\"https://leanprover-community.github.io/mathlib_docs/find/module.finite\">docs#module.finite</a></p>",
        "id": 308490996,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1667862855
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"127136\">Alex J. Best</span> <a href=\"#narrow/stream/113489-new-members/topic/decidable_eq.20in.20quotient.20module/near/308489794\">said</a>:</p>\n<blockquote>\n<p>Try <code>open_locale classical</code> before your lemma</p>\n</blockquote>\n<p>This should work, or alternatively you can try to add the necessary <code>decidable_eq</code> assumptions needed by <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset.image\">docs#finset.image</a></p>",
        "id": 308491942,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1667863308
    },
    {
        "content": "<p>At least on my end, it seems that Lean is also unhappy about <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi mathvariant=\"normal\">/</mi><mi>I</mi><mo>⋅</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M/I \\cdot M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> being an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi mathvariant=\"normal\">/</mi><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">R/I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>-module. Is this in some import that I'm missing?</p>",
        "id": 308492383,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1667863495
    },
    {
        "content": "<p>Can you make that mwe a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>? It doesn't have any imports or variables, so lean doesn't understand any of it!</p>",
        "id": 308498105,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1667866711
    },
    {
        "content": "<p>Maybe you can use <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.finite\">docs#set.finite</a> instead of <a href=\"https://leanprover-community.github.io/mathlib_docs/find/finset\">docs#finset</a>; <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.image\">docs#set.image</a> doesn't require decidable_eq. If you want to do induction there is <a href=\"https://leanprover-community.github.io/mathlib_docs/find/set.finite.induction_on\">docs#set.finite.induction_on</a>.</p>",
        "id": 308504446,
        "sender_full_name": "Junyan Xu",
        "timestamp": 1667871164
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310045\">Eric Wieser</span> <a href=\"#narrow/stream/113489-new-members/topic/decidable_eq.20in.20quotient.20module/near/308498105\">said</a>:</p>\n<blockquote>\n<p>Can you make that mwe a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a>? It doesn't have any imports or variables, so lean doesn't understand any of it!</p>\n</blockquote>\n<p>So sorry, looks like I forgot to paste the top of the file. Edited now so it should actually be a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a></p>",
        "id": 308674849,
        "sender_full_name": "Jack J Garzella",
        "timestamp": 1667942031
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"243562\">Adam Topaz</span> <a href=\"#narrow/stream/113489-new-members/topic/decidable_eq.20in.20quotient.20module/near/308492383\">said</a>:</p>\n<blockquote>\n<p>At least on my end, it seems that Lean is also unhappy about <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi mathvariant=\"normal\">/</mi><mi>I</mi><mo>⋅</mo><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M/I \\cdot M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> being an <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi mathvariant=\"normal\">/</mi><mi>I</mi></mrow><annotation encoding=\"application/x-tex\">R/I</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span></span></span></span>-module. Is this in some import that I'm missing?</p>\n</blockquote>\n<p>This seems to be hidden in algebra.module.torsion, see for example <a href=\"#narrow/stream/113489-new-members/topic/A.20first.20proof/near/291240482\">here</a>. See also updated the original post.</p>",
        "id": 308676230,
        "sender_full_name": "Jack J Garzella",
        "timestamp": 1667942616
    },
    {
        "content": "<p>Replacing with <code>set.image</code> makes your error go away</p>",
        "id": 308678306,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1667943554
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.nakayama</span>\n<span class=\"kn\">import</span> <span class=\"n\">ring_theory.jacobson_ideal</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.module.torsion</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">{</span><span class=\"n\">R</span> <span class=\"n\">M</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_ring</span> <span class=\"n\">R</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">add_comm_group</span> <span class=\"n\">M</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">module</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">]</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">ideal</span>\n\n<span class=\"kd\">lemma</span> <span class=\"n\">generate_of_quotient_generate_of_le_jacobson</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"o\">:</span> <span class=\"n\">ideal</span> <span class=\"n\">R</span><span class=\"o\">)</span>\n  <span class=\"o\">(</span><span class=\"n\">hM</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span><span class=\"bp\">.</span><span class=\"n\">fg</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hIjac</span> <span class=\"o\">:</span> <span class=\"n\">I</span> <span class=\"bp\">≤</span> <span class=\"n\">jacobson</span> <span class=\"bp\">⊥</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">S</span> <span class=\"o\">:</span> <span class=\"n\">finset</span> <span class=\"n\">M</span><span class=\"o\">)</span>\n  <span class=\"c1\">-- here is the hypothesis I can't quite figure out</span>\n  <span class=\"o\">(</span><span class=\"n\">hIM</span> <span class=\"o\">:</span> <span class=\"n\">submodule.span</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"bp\">⧸</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">submodule.quotient.mk</span> <span class=\"bp\">''</span> <span class=\"bp\">↑</span><span class=\"n\">S</span><span class=\"o\">)</span> <span class=\"bp\">=</span>\n    <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"o\">(</span><span class=\"n\">R</span> <span class=\"bp\">⧸</span> <span class=\"n\">I</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">M</span> <span class=\"bp\">⧸</span> <span class=\"o\">(</span><span class=\"n\">I</span> <span class=\"bp\">•</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)))))</span> <span class=\"o\">:</span>\n  <span class=\"c1\">-- end hypothesis I can't figure out</span>\n  <span class=\"n\">submodule.span</span> <span class=\"n\">R</span> <span class=\"bp\">↑</span><span class=\"n\">S</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"bp\">⊤</span> <span class=\"o\">:</span> <span class=\"n\">submodule</span> <span class=\"n\">R</span> <span class=\"n\">M</span><span class=\"o\">)</span> <span class=\"o\">:=</span> <span class=\"gr\">sorry</span>\n</code></pre></div>",
        "id": 308678823,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1667943805
    }
]