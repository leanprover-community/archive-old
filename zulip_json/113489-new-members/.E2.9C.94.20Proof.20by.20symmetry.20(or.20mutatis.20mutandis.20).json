[
    {
        "content": "<p>Do we have a useful tactic for \"proof by symmetry\"? Here's a basic example of the kind of situations I have in mind: </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">lemma</span> <span class=\"n\">zero_of_add_eq_zero</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"n\">n</span> <span class=\"o\">:</span> <span class=\"n\">ℕ</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"n\">m</span> <span class=\"bp\">+</span> <span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>  <span class=\"bp\">→</span> <span class=\"o\">(</span><span class=\"n\">m</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"bp\">∧</span> <span class=\"o\">(</span><span class=\"n\">n</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n  <span class=\"n\">intro</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n  <span class=\"n\">split</span><span class=\"o\">,</span>\n  <span class=\"o\">{</span> <span class=\"c1\">-- we want to prove that m = 0</span>\n    <span class=\"n\">cases</span> <span class=\"n\">n</span><span class=\"o\">,</span>\n        <span class=\"o\">{</span>\n          <span class=\"n\">exact</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n        <span class=\"o\">},</span>\n        <span class=\"o\">{</span>\n          <span class=\"n\">rw</span> <span class=\"n\">nat.add_succ</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n          <span class=\"n\">contradiction</span><span class=\"o\">,</span>\n        <span class=\"o\">},</span>\n  <span class=\"o\">},</span>\n  <span class=\"o\">{</span> <span class=\"c1\">-- we want to prove that n = 0</span>\n    <span class=\"n\">rw</span> <span class=\"n\">nat.add_comm</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n    <span class=\"n\">cases</span> <span class=\"n\">m</span><span class=\"o\">,</span>\n        <span class=\"o\">{</span>\n          <span class=\"n\">exact</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n        <span class=\"o\">},</span>\n        <span class=\"o\">{</span>\n          <span class=\"n\">rw</span> <span class=\"n\">nat.add_succ</span> <span class=\"n\">at</span> <span class=\"n\">h</span><span class=\"o\">,</span>\n          <span class=\"n\">contradiction</span><span class=\"o\">,</span>\n        <span class=\"o\">},</span>\n  <span class=\"o\">}</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n<p>In the proof above, in the second goal (i.e. showing <code>n = 0</code>) , after <code> rw nat.add_comm at h</code> the proof which follows is the same proof as in the first goal where the only difference is appearance of <code>m</code> wherever <code>n</code> appeared before. I wrote the proof by copy-pasting. Is there a tactic that i could have used to avoid copy-pasting?   Informally, maths texts usually say proof by symmetry or mutatis mutandis (literally what needs changing having been changed).</p>",
        "id": 310717771,
        "sender_full_name": "Sina",
        "timestamp": 1668726988
    },
    {
        "content": "<p>There is <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#wlog\">wlog</a>, but it is quite a pain to use sometimes</p>",
        "id": 310718006,
        "sender_full_name": "Riccardo Brasca",
        "timestamp": 1668727091
    },
    {
        "content": "<p>There's also <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#swap_vars\">tactic#swap_vars</a></p>",
        "id": 310718257,
        "sender_full_name": "Yaël Dillies",
        "timestamp": 1668727211
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"387244\">Yaël Dillies</span> <a href=\"#narrow/stream/113489-new-members/topic/Proof.20by.20symmetry.20.28or.20mutatis.20mutandis.20.29/near/310718257\">said</a>:</p>\n<blockquote>\n<p>There's also <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#swap_vars\">tactic#swap_vars</a></p>\n</blockquote>\n<p>this seems to be easier to use in my case. thanks.</p>",
        "id": 310718422,
        "sender_full_name": "Sina",
        "timestamp": 1668727300
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"420917\">Sina</span> has marked this topic as resolved.</p>",
        "id": 310725512,
        "sender_full_name": "Notification Bot",
        "timestamp": 1668730067
    }
]