[
    {
        "content": "<p>Dear All,</p>\n<p>I feel a little silly about asking this question, but when I started to learn Lean, I also started learning Git at the same time.  I have been very conscious of not pushing anything to mathlib, since I did not want to create PRs with my failed attempts.</p>\n<p>Now that I am more familiar with the process, I am starting to look back at my practices.  Is it ok/expected that I push to mathlib branches with <code>sorry</code>s, commented out bit, errors, unconventional names,...?</p>\n<p>So far, I have been keeping them all on my local repository.</p>\n<p>Thank you!</p>",
        "id": 219745272,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1607837262
    },
    {
        "content": "<p>yes, just make sure your branch is uninhabited</p>",
        "id": 219745322,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1607837355
    },
    {
        "content": "<p>(and don't crash mathlib!)</p>",
        "id": 219745328,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1607837367
    },
    {
        "content": "<p>uninhabited means that I use a name that is not already taken, right?</p>\n<p>crash mathlib...?  should I make sure that everything compiles without errors, but possibly with <code>sorry</code>s?</p>",
        "id": 219745388,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1607837433
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"321459\">Damiano Testa</span> <a href=\"#narrow/stream/113489-new-members/topic/Git-quette/near/219745388\">said</a>:</p>\n<blockquote>\n<p>uninhabited means that I use a name that is not already taken, right?</p>\n</blockquote>\n<p>Yes, exactly</p>\n<blockquote>\n<p>crash mathlib...?  should I make sure that everything compiles without errors, but possibly with <code>sorry</code>s?</p>\n</blockquote>\n<p>This just means don't put codes that take 100 years to run, so make sure the code terminates before you push it.</p>",
        "id": 219745453,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1607837532
    },
    {
        "content": "<p>Ok, I will be careful!  Thanks!</p>",
        "id": 219745468,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1607837571
    },
    {
        "content": "<p>Some ways for timeouts to happen are having dangerous instances and having looping simp lemmas</p>",
        "id": 219745475,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1607837587
    },
    {
        "content": "<p>both of which can be avoided by making sure <code>#lint</code> is happy</p>",
        "id": 219745494,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1607837599
    },
    {
        "content": "<p>You could also explicitly create an infinite loop, and <code>#lint</code> won't say anything about it, but I guess there would be no reason for you to do that</p>",
        "id": 219745502,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1607837634
    },
    {
        "content": "<p>Ok, I will try to be careful.  On my machine, there is a timeout for computations that is fairly short.  I will make sure that compiling does not time out on my machine, before pushing it to mathlib</p>",
        "id": 219745547,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1607837648
    },
    {
        "content": "<p>Just ask us if you need help</p>",
        "id": 219745554,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1607837672
    },
    {
        "content": "<p>ok, thanks!  at the moment, I am not even sure what there is that I might ask, but I will, as I have questions!</p>",
        "id": 219745564,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1607837702
    },
    {
        "content": "<p>I wouldn't worry too much about crashing the mathlib repo's CI. We're building mathlib with some timeout options that should cause errors if some part takes too long. </p>\n<p>If somehow that doesn't catch a loop, the github actions runner will terminate a job after 6 hours no matter what, and we can always manually cancel one before that if we notice something wrong.</p>",
        "id": 219745572,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1607837743
    },
    {
        "content": "<p>Ok, thanks for the reassurance.  As much as I can try to be careful, I am bound to push at some point something that times out on my machine and might \"crash mathlib\".  I am just being realistic...</p>",
        "id": 219745631,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1607837847
    },
    {
        "content": "<p>As someone who's hacked a bit on our CI setup, I'm looking forward to the stress tests! <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 219745752,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1607838048
    },
    {
        "content": "<p>Ahaha</p>\n<p>Still, I will not try to crash mathlib on purpose.  At my level, I hope that I am unlikely to crash mathlib anyway.<br>\nYet, crashing something might be easier than accidentally proving a theorem...</p>",
        "id": 219745813,
        "sender_full_name": "Damiano Testa",
        "timestamp": 1607838147
    },
    {
        "content": "<p>One thing to keep in mind is that GitHub actions only lets us have 20 jobs running at the same time. So if possible, I would try to avoid pushing tons of commits (10+) within a short period of time (&lt;2h). I think we haven't been close to hitting the limit in a while, but minimizing the number of jobs is a good idea anyways (more environmentally friendly).</p>",
        "id": 219746101,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1607838807
    },
    {
        "content": "<p>Regarding ensuring the branch is uninhabited, I've mostly been pushing to branches named <code>my-username/mybranch</code>, which pretty much guarantees I can only clobber my own work and not anyone elses</p>",
        "id": 219750876,
        "sender_full_name": "Eric Wieser",
        "timestamp": 1607847570
    }
]