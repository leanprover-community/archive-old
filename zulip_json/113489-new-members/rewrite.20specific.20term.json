[
    {
        "content": "<p>I'm working through <a href=\"https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game/?world=8&amp;level=8\">https://www.ma.imperial.ac.uk/~buzzard/xena/natural_number_game/?world=8&amp;level=8</a></p>\n<p>in the goal I have</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"mi\">22</span><span class=\"o\">:</span><span class=\"mi\">9</span><span class=\"o\">:</span> <span class=\"n\">goal</span>\n<span class=\"n\">a</span> <span class=\"n\">b</span> <span class=\"o\">:</span> <span class=\"n\">mynat</span><span class=\"o\">,</span>\n<span class=\"n\">h</span> <span class=\"o\">:</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"n\">a</span>\n<span class=\"bp\">⊢</span> <span class=\"n\">b</span> <span class=\"bp\">=</span> <span class=\"mi\">0</span>\n</code></pre></div>\n<p>I would like to rewrite only the second <code>a</code> in <code>h</code> into <code>a + 0</code> with <code>add_zero</code>. However, <code>rw ← (add_zero a) at h,</code> rewrites both <code>a</code>s. How can I do that?</p>",
        "id": 265888245,
        "sender_full_name": "Liang Zhang",
        "timestamp": 1640241610
    },
    {
        "content": "<p>One painless way would be by introducing a new hypothesis. <code>have h2, a+b=a+0,</code> then <code>rw add_zero, exact h</code></p>",
        "id": 265888339,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640241835
    },
    {
        "content": "<p>There are other ways to do it (you can do the rewrite, either using conv mode or some extra inputs into the rw tactic) but I don't teach these in NNG</p>",
        "id": 265888410,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640241915
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"110038\">Kevin Buzzard</span> <a href=\"#narrow/stream/113489-new-members/topic/rewrite.20specific.20term/near/265888410\">said</a>:</p>\n<blockquote>\n<p>There are other ways to do it (you can do the rewrite, either using conv mode or some extra inputs into the rw tactic) but I don't teach these in NNG</p>\n</blockquote>\n<p>Thanks! How can I find the extra possible inputs? BTW, what is NNG?</p>",
        "id": 265888637,
        "sender_full_name": "Liang Zhang",
        "timestamp": 1640242266
    },
    {
        "content": "<p>NNG=natural number game. I think on the leanprover-community website there is information about conv mode</p>",
        "id": 265888697,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640242330
    },
    {
        "content": "<p>Got it</p>",
        "id": 265888727,
        "sender_full_name": "Liang Zhang",
        "timestamp": 1640242376
    },
    {
        "content": "<p>There doesn't seem to be a mention of the <code>occs</code> parameter for <code>rw</code> but that's the other approach. My way is easiest though :-)</p>",
        "id": 265888745,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640242435
    },
    {
        "content": "<p>Maybe search this Zulip for occs?</p>",
        "id": 265888787,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640242462
    },
    {
        "content": "<p>Oh apparently it might not do the job and you might have to use <code>nth_rewrite</code> but that might not be in NNG Lean which is quite old</p>",
        "id": 265888879,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1640242599
    },
    {
        "content": "<p>I think you are right. <code>nth_rewrite</code> is not available in NNG. Will go with your suggestion. Thanks!</p>",
        "id": 265889203,
        "sender_full_name": "Liang Zhang",
        "timestamp": 1640242926
    }
]