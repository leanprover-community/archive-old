[
    {
        "content": "<p>Hi all. I have an easy lemma on group theory, and a long proof. I am sure there should be a shorter proof. </p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">group_theory</span><span class=\"bp\">.</span><span class=\"n\">subgroup</span>\n\n\n<span class=\"kn\">lemma</span> <span class=\"n\">mem_cancel_subgroup</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">}(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">)(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">g</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">):</span>\n <span class=\"n\">g</span><span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"k\">have</span> <span class=\"n\">a_inv_in_s</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"o\">{</span><span class=\"n\">rw</span> <span class=\"n\">subgroup</span><span class=\"bp\">.</span><span class=\"n\">inv_mem_iff</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">h₁</span><span class=\"o\">},</span>\n<span class=\"n\">suffices</span> <span class=\"n\">mess</span> <span class=\"o\">:</span> <span class=\"n\">g</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span><span class=\"bp\">⁻¹*</span><span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"o\">{</span><span class=\"n\">rw</span> <span class=\"n\">inv_mul_cancel_right</span> <span class=\"n\">at</span> <span class=\"n\">mess</span><span class=\"o\">,</span> <span class=\"n\">exact</span> <span class=\"n\">mess</span><span class=\"o\">},</span>\n<span class=\"k\">have</span> <span class=\"n\">h₃</span>  <span class=\"o\">:</span> <span class=\"n\">g</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"bp\">=</span><span class=\"n\">g</span><span class=\"bp\">*</span><span class=\"o\">(</span><span class=\"n\">a</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span><span class=\"bp\">⁻¹*</span><span class=\"n\">a</span><span class=\"bp\">⁻¹</span> <span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">group</span><span class=\"o\">,</span>\n<span class=\"k\">have</span> <span class=\"n\">h₄</span>  <span class=\"o\">:</span> <span class=\"n\">g</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"bp\">⁻¹</span><span class=\"err\">∈</span>  <span class=\"n\">s</span><span class=\"o\">,</span> <span class=\"k\">by</span> <span class=\"n\">exact</span> <span class=\"n\">s</span><span class=\"bp\">.</span><span class=\"n\">mul_mem</span><span class=\"o\">(</span><span class=\"n\">h₂</span><span class=\"o\">)(</span><span class=\"n\">a_inv_in_s</span><span class=\"o\">),</span>\n<span class=\"n\">rw</span> <span class=\"n\">h₃</span> <span class=\"n\">at</span> <span class=\"n\">h₄</span><span class=\"o\">,</span>\n<span class=\"n\">exact</span> <span class=\"n\">h₄</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 202872026,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1593866290
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">tactic</span>\n<span class=\"kn\">import</span> <span class=\"n\">group_theory</span><span class=\"bp\">.</span><span class=\"n\">subgroup</span>\n\n\n<span class=\"kn\">lemma</span> <span class=\"n\">mem_cancel_subgroup</span> <span class=\"o\">{</span><span class=\"n\">G</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"bp\">*</span><span class=\"o\">}</span> <span class=\"o\">[</span><span class=\"n\">comm_group</span> <span class=\"n\">G</span><span class=\"o\">]</span> <span class=\"o\">(</span><span class=\"n\">s</span> <span class=\"o\">:</span> <span class=\"n\">subgroup</span> <span class=\"n\">G</span><span class=\"o\">)</span> <span class=\"o\">{</span><span class=\"n\">g</span> <span class=\"n\">a</span> <span class=\"o\">:</span> <span class=\"n\">G</span><span class=\"o\">}(</span><span class=\"n\">h₁</span> <span class=\"o\">:</span> <span class=\"n\">a</span><span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">)(</span><span class=\"n\">h₂</span> <span class=\"o\">:</span> <span class=\"n\">g</span><span class=\"bp\">*</span><span class=\"n\">a</span><span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">):</span>\n <span class=\"n\">g</span><span class=\"err\">∈</span> <span class=\"n\">s</span><span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n<span class=\"n\">library_search</span><span class=\"o\">,</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 202872122,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1593866499
    },
    {
        "content": "<p>Thanks. I should try always library_search !</p>",
        "id": 202873129,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1593868067
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"315546\">@Xavier Xarles</span> by the way! Long time no see. There is an art to using <code>library_search</code>.</p>",
        "id": 202873298,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593868322
    },
    {
        "content": "<p>The art is knowing what to expect from the library. For example you might not expect <code>library_search</code> to solve <code>2 + 2 &lt; 37</code> because who would put this in a library? It's a theorem, but it's not worth recording.</p>",
        "id": 202873335,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593868374
    },
    {
        "content": "<p>But you can imagine that this cancellation lemma would be part of a tedious collection of lemmas in the library about elements of subgroups -- this is exactly the sort of stuff you'd find in the library.</p>",
        "id": 202873404,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1593868478
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"110038\">@Kevin Buzzard</span>  . Now that I learned <code>library_search</code> I am starting to use a lot.  I was hoping seeing you in Barcelona. Let's hope sometime in the future...</p>",
        "id": 202890283,
        "sender_full_name": "Xavier Xarles",
        "timestamp": 1593894821
    }
]