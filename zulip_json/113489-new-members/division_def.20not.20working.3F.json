[
    {
        "content": "<p>Stupid question: This seems to work just fine:</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">exphomoinvC</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">),</span> <span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">complex.exp</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">complex.exp</span> <span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n    <span class=\"n\">intros</span><span class=\"o\">,</span>\n\n    <span class=\"k\">have</span> <span class=\"n\">expy</span><span class=\"o\">:</span> <span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">/</span><span class=\"n\">complex.exp</span> <span class=\"o\">(</span><span class=\"n\">y</span><span class=\"o\">),</span>\n    <span class=\"o\">{</span>\n        <span class=\"n\">exact</span> <span class=\"n\">complex.exp_sub</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n    <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"n\">expy</span><span class=\"o\">,</span>\n\n    <span class=\"n\">exact</span> <span class=\"n\">division_def</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n\n<p>But this fails???</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kd\">theorem</span> <span class=\"n\">exphomoinv</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">),</span> <span class=\"n\">real.exp</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">real.exp</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">real.exp</span> <span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n    <span class=\"n\">intros</span><span class=\"o\">,</span>\n\n    <span class=\"k\">have</span> <span class=\"n\">expy</span><span class=\"o\">:</span> <span class=\"n\">real.exp</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">real.exp</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">/</span> <span class=\"n\">real.exp</span> <span class=\"o\">(</span><span class=\"n\">y</span><span class=\"o\">),</span>\n    <span class=\"o\">{</span>\n        <span class=\"n\">exact</span> <span class=\"n\">real.exp_sub</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n    <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"n\">expy</span><span class=\"o\">,</span>\n\n    <span class=\"n\">exact</span> <span class=\"n\">division_def</span><span class=\"o\">,</span>\n    <span class=\"c1\">---by library_search,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>\n\n<p>Any reason why it's not working? Thanks!</p>",
        "id": 211131725,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1600954578
    },
    {
        "content": "<p>At what point does it fail? Which error do you get?</p>",
        "id": 211133090,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600955241
    },
    {
        "content": "<p>Whoops! Sorry, at the last step, division_def. Here's the error:</p>\n<p>invalid type ascription, term has type<br>\n  ?m_3 / ?m_4 = ?m_3 * ?m_4⁻¹<br>\nbut is expected to have type<br>\n  real.exp x / real.exp y = real.exp x * (real.exp y)⁻¹<br>\nstate:<br>\nx y : ℝ,<br>\n⊢ real.exp x / real.exp y = real.exp x * (real.exp y)⁻¹</p>",
        "id": 211133468,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1600955403
    },
    {
        "content": "<p>What does <code>#check @division_def</code> say?</p>",
        "id": 211133786,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600955525
    },
    {
        "content": "<p>I don't know that lemma</p>",
        "id": 211133804,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600955533
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"252920\">@Alex Kontorovich</span> It's very hard to debug code that we can't run ourselves. If you can post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> you'll get better suggestions.</p>",
        "id": 211133954,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1600955610
    },
    {
        "content": "<p>This works for Lean 3.20.0 and mathlib from about a week ago, importing just the file that defines <code>real.exp</code>/<code>complex.exp</code>, so I think we might need the information about Lean version/mathlib version as well.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">data.complex.exponential</span>\n\n<span class=\"kd\">theorem</span> <span class=\"n\">exphomoinv</span> <span class=\"o\">:</span> <span class=\"bp\">Π</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">),</span> <span class=\"n\">real.exp</span> <span class=\"o\">(</span><span class=\"n\">x</span> <span class=\"bp\">-</span> <span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">real.exp</span> <span class=\"n\">x</span> <span class=\"bp\">*</span> <span class=\"o\">((</span><span class=\"n\">real.exp</span> <span class=\"n\">y</span><span class=\"o\">)</span><span class=\"bp\">⁻¹</span><span class=\"o\">)</span> <span class=\"o\">:=</span>\n<span class=\"kd\">begin</span>\n    <span class=\"n\">intros</span><span class=\"o\">,</span>\n\n    <span class=\"k\">have</span> <span class=\"n\">expy</span><span class=\"o\">:</span> <span class=\"n\">real.exp</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"bp\">-</span><span class=\"n\">y</span><span class=\"o\">)</span> <span class=\"bp\">=</span> <span class=\"n\">real.exp</span> <span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">)</span><span class=\"bp\">/</span> <span class=\"n\">real.exp</span> <span class=\"o\">(</span><span class=\"n\">y</span><span class=\"o\">),</span>\n    <span class=\"o\">{</span>\n        <span class=\"n\">exact</span> <span class=\"n\">real.exp_sub</span> <span class=\"n\">x</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n    <span class=\"o\">},</span>\n    <span class=\"n\">rw</span> <span class=\"n\">expy</span><span class=\"o\">,</span>\n\n    <span class=\"n\">exact</span> <span class=\"n\">division_def</span><span class=\"o\">,</span>\n<span class=\"kd\">end</span>\n</code></pre></div>",
        "id": 211135103,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1600956110
    },
    {
        "content": "<p>Hmm how do I check my version? (I think I seem to have Lean-3.4.2?..)</p>",
        "id": 211147077,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1600960928
    },
    {
        "content": "<p>Try</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"k\">#eval</span> <span class=\"n\">lean.version</span>\n</code></pre></div>",
        "id": 211147696,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1600961183
    },
    {
        "content": "<p>Thanks! Output is: (3, (18, 4)). So maybe I just need to upload the latest version, and this issue will go away?...</p>",
        "id": 211147771,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1600961223
    },
    {
        "content": "<p>Yes, maybe!  Although I'm not sure exactly what the relevant change would have been.</p>",
        "id": 211147982,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1600961302
    },
    {
        "content": "<p>You should be able to just run <code>leanproject up</code> at the command line.<br>\n<a href=\"https://leanprover-community.github.io/leanproject.html\">https://leanprover-community.github.io/leanproject.html</a></p>",
        "id": 211148100,
        "sender_full_name": "Heather Macbeth",
        "timestamp": 1600961371
    },
    {
        "content": "<p>ok, I just tried with 3.18.4 as well and it works. Git says no changes there for 3 months, so I don't expect mathlib/lean to be an issue. <span class=\"user-mention silent\" data-user-id=\"252920\">Alex Kontorovich</span>  can you post a <a href=\"https://leanprover-community.github.io/mwe.html\">#mwe</a> (or just the whole file you're working in)?</p>",
        "id": 211149189,
        "sender_full_name": "Shing Tak Lam",
        "timestamp": 1600961860
    },
    {
        "content": "<p>Yeah, it works in the standalone code as you sent. Not sure what's going on... I'll come back to this. Thanks for your help!</p>",
        "id": 211156432,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1600965031
    }
]