[
    {
        "content": "<p>I have the following file, which gives me deterministic timeout both on the <code>structure</code> and the <code>notation</code>. I can't figure out why.</p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.tensor_product</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.monoid_algebra.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.polynomial.algebra_map</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">tensor_product</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">algebra.tensor_product</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">]</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">hopf_algebra</span> <span class=\"kd\">extends</span> <span class=\"n\">algebra</span> <span class=\"n\">K</span> <span class=\"n\">V</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">comul</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">→ₐ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">V</span> <span class=\"bp\">⊗</span> <span class=\"n\">V</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">counit</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">→ₐ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">coassoc</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">tensor_product.assoc</span> <span class=\"n\">K</span> <span class=\"n\">V</span> <span class=\"n\">V</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"n\">comul</span> <span class=\"o\">(</span><span class=\"n\">alg_hom.id</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">))</span> <span class=\"bp\">∘</span> <span class=\"n\">comul</span> <span class=\"bp\">=</span> <span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">alg_hom.id</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"n\">comul</span> <span class=\"bp\">∘</span> <span class=\"n\">comul</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">counit_left</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">tensor_product.lid</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"n\">counit</span> <span class=\"o\">(</span><span class=\"n\">alg_hom.id</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">))</span> <span class=\"bp\">∘</span> <span class=\"n\">comul</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">alg_hom.id</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">counit_right</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">tensor_product.rid</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">alg_hom.id</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"n\">counit</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"n\">comul</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">alg_hom.id</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">coinv</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">→ₗ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">V</span><span class=\"o\">)</span>\n</code></pre></div>\n<p>When I delete all but the <code>comul</code> line in the definition, it says \"Loading\" for 3 minutes and says \"don't know how to synthesize placeholder\" for <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding=\"application/x-tex\">\\otimes</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">⊗</span></span></span></span>. Is anything wrong with the imports? Here is the link to the file on Github: <a href=\"https://github.com/leomayer1/Hopf/blob/master/src/Hopf.lean\">https://github.com/leomayer1/Hopf/blob/master/src/Hopf.lean</a></p>",
        "id": 278238421,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1649373260
    },
    {
        "content": "<p>Update: it looks like <code>extends algebra K V</code> was the culprit...</p>",
        "id": 278238958,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1649373651
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"414458\">Vasily Ilin</span> <a href=\"#narrow/stream/113489-new-members/topic/deterministic.20timeout.20on.20definition.20of.20structure/near/278238958\">said</a>:</p>\n<blockquote>\n<p>Update: it looks like <code>extends algebra K V</code> was the culprit...</p>\n</blockquote>\n<p>I think it makes sense to assume <code>[algebra K V]</code> as a typeclass parameter as opposed to extending it anyway</p>",
        "id": 278240021,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1649374567
    },
    {
        "content": "<p>I.e. </p>\n<div class=\"codehilite\" data-code-language=\"Lean\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"n\">ring_theory.tensor_product</span>\n<span class=\"kn\">import</span> <span class=\"n\">algebra.monoid_algebra.basic</span>\n<span class=\"kn\">import</span> <span class=\"n\">data.polynomial.algebra_map</span>\n\n<span class=\"n\">open_locale</span> <span class=\"n\">tensor_product</span>\n\n<span class=\"kn\">open</span> <span class=\"n\">algebra.tensor_product</span>\n\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">K</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">field</span> <span class=\"n\">K</span><span class=\"o\">]</span>\n<span class=\"kd\">variables</span> <span class=\"o\">(</span><span class=\"n\">V</span> <span class=\"o\">:</span> <span class=\"kt\">Type</span><span class=\"o\">)</span> <span class=\"o\">[</span><span class=\"n\">semiring</span> <span class=\"n\">V</span><span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"n\">algebra</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">]</span>\n\n<span class=\"kd\">structure</span> <span class=\"n\">hopf_algebra</span> <span class=\"o\">:=</span>\n<span class=\"o\">(</span><span class=\"n\">comul</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">→ₐ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">V</span> <span class=\"bp\">⊗</span> <span class=\"n\">V</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">counit</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">→ₐ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">K</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">coassoc</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">tensor_product.assoc</span> <span class=\"n\">K</span> <span class=\"n\">V</span> <span class=\"n\">V</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"n\">comul</span> <span class=\"o\">(</span><span class=\"n\">alg_hom.id</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">))</span> <span class=\"bp\">∘</span> <span class=\"n\">comul</span> <span class=\"bp\">=</span> <span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">alg_hom.id</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"n\">comul</span> <span class=\"bp\">∘</span> <span class=\"n\">comul</span><span class=\"o\">)</span>\n<span class=\"o\">(</span><span class=\"n\">counit_left</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">tensor_product.lid</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"n\">counit</span> <span class=\"o\">(</span><span class=\"n\">alg_hom.id</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">))</span> <span class=\"bp\">∘</span> <span class=\"n\">comul</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">alg_hom.id</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">counit_right</span> <span class=\"o\">:</span> <span class=\"o\">(</span><span class=\"n\">tensor_product.rid</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"o\">(</span><span class=\"n\">map</span> <span class=\"o\">(</span><span class=\"n\">alg_hom.id</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">)</span> <span class=\"n\">counit</span><span class=\"o\">)</span> <span class=\"bp\">∘</span> <span class=\"n\">comul</span> <span class=\"bp\">=</span> <span class=\"o\">(</span><span class=\"n\">alg_hom.id</span> <span class=\"n\">K</span> <span class=\"n\">V</span><span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"n\">coinv</span> <span class=\"o\">:</span> <span class=\"n\">V</span> <span class=\"bp\">→ₗ</span><span class=\"o\">[</span><span class=\"n\">K</span><span class=\"o\">]</span> <span class=\"n\">V</span><span class=\"o\">)</span>\n</code></pre></div>",
        "id": 278240099,
        "sender_full_name": "Adam Topaz",
        "timestamp": 1649374634
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 278242133,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1649376164
    }
]