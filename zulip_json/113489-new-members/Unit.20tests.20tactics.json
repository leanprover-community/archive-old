[
    {
        "content": "<p>I was looking at tactics. Is it possible to do some unit tests with them?<br>\nI know that <code>tactic</code>is defined as <code>interaction_monad tactic_state</code>.<br>\nI wish to create some tactic state, run a tactic in it and after, see  the new tactic state.</p>",
        "id": 202164146,
        "sender_full_name": "Guilherme Silva",
        "timestamp": 1593226361
    },
    {
        "content": "<p>I don't think you can print the whole tactic state. However, since most tactics only change a few things in the tactic state, you can easily trace those.<br>\nYou can look at the <code>test</code> folder in <code>mathlib</code> for some unit tests.</p>",
        "id": 202169382,
        "sender_full_name": "Floris van Doorn",
        "timestamp": 1593236042
    },
    {
        "content": "<p>I saw how they made some tests. It were really useful.<br>\nBut it is different of the traditional way of doing test, like <br>\n<code>example : double 2 = 4 := rfl</code>.<br>\nBecause they tested the tactics using it as tactics.<br>\nI do not know if it is possible to test tactics in the traditional way.</p>",
        "id": 202201077,
        "sender_full_name": "Guilherme Silva",
        "timestamp": 1593285687
    },
    {
        "content": "<p>I don't think I understand what you want, or what distinction you're making between \"the traditional way\" and what exists in <code>test/</code>.</p>",
        "id": 202217538,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1593314810
    },
    {
        "content": "<p>In traditional way, it is not allowed to use tactics. It would be a function for example: <br>\n<code>testTactic (old_state : tactic_state) (Tactic : tactic unit) (new_state : tactic_state) : Type</code><br>\nOne way of testing it would be for example:<br>\n<code>example : testTactic \"A -&gt; B\" intro \"Goal B. H : A\" := ()</code></p>",
        "id": 202217877,
        "sender_full_name": "Guilherme Silva",
        "timestamp": 1593315561
    }
]