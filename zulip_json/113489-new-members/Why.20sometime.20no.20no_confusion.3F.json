[
    {
        "content": "<p>Is there a limitation to the derivation of <code>no_confusion</code> theorems?<br>\nThe following inductive <code>type</code> doesn't generate one:</p>\n<div class=\"codehilite\"><pre><span></span>inductive type\n| TVar  : nat → type\n| Bool  : type\n| Arrow : type → type → type\n| TDef  : nat → list type → type\n\n#print prefix type\n</pre></div>",
        "id": 159944289,
        "sender_full_name": "Andre Kuhlenschmidt",
        "timestamp": 1551729134
    },
    {
        "content": "<p>It's a nested inductive</p>",
        "id": 159945419,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551729830
    },
    {
        "content": "<p>This is not built in to lean but is compiled, so it has a different set of autogenerated theorems</p>",
        "id": 159945521,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551729898
    },
    {
        "content": "<p>I generally recommend against using nested inductives at all because the lean support is spotty</p>",
        "id": 159945563,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551729932
    },
    {
        "content": "<p>(The reason it is a nested inductive is because the last constructor mentions <code>list type</code>, where <code>type</code> is the inductive type under construction)</p>",
        "id": 159945697,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1551729999
    },
    {
        "content": "<p>Is the standard way of avoiding <code>list type</code> to make a mutually inductive definition?</p>\n<div class=\"codehilite\"><pre><span></span>mutual inductive type, list_type\nwith type : Type\n| TVar  : nat → type\n| Bool  : type\n| Arrow : type → type → type\n| TDef  : nat → list_type → type\nwith list_type : Type\n| nil : list_type\n| cons : type -&gt; list_type -&gt; list_type\n\n#print prefix type\n</pre></div>\n\n\n<p>This seems to work.</p>",
        "id": 159946467,
        "sender_full_name": "Andre Kuhlenschmidt",
        "timestamp": 1551730467
    }
]