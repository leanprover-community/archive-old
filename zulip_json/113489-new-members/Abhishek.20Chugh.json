[
    {
        "content": "<p>Hello! I am new to Lean. Excited to be part of this community.<br>\nI am most intrigued by Lean's ability to (relatively) easily generate computer verified and fully transparent proofs. <br>\nI am interested in making these proofs available to the broader math community.</p>",
        "id": 210855824,
        "sender_full_name": "Abhishek Chugh",
        "timestamp": 1600773313
    },
    {
        "content": "<p>Noob question: What would be the quickest way to unwrap a Lean proof into a tree/graph of steps (till I reach axioms &amp; definitions) into a nice data structure? The data structure can be in any programming language (like C/Python/Java etc)</p>\n<p>For example:  How to get the actual complete proof friendship theorem (without tactics):<br>\n<a href=\"https://github.com/leanprover-community/mathlib/blob/2688d42b3e1b8f65a48e5cfc77f6db3c11e00ccf/archive/100-theorems-list/83_friendship_graphs.lean\">https://github.com/leanprover-community/mathlib/blob/2688d42b3e1b8f65a48e5cfc77f6db3c11e00ccf/archive/100-theorems-list/83_friendship_graphs.lean</a></p>",
        "id": 210857131,
        "sender_full_name": "Abhishek Chugh",
        "timestamp": 1600774353
    },
    {
        "content": "<p>I guess you'll want to take a look at <code>leancrawler</code></p>",
        "id": 210857181,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600774411
    },
    {
        "content": "<p>Also see <a href=\"https://github.com/leanprover-community/lean-client-python\">https://github.com/leanprover-community/lean-client-python</a></p>",
        "id": 210857281,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600774475
    },
    {
        "content": "<p>Thanks for the pointers. I will look into this now.<br>\nAlso, I am guessing it is easy to unwrap the lean files into some format that can be verified independently. is there a tool/command to do this?</p>",
        "id": 210857521,
        "sender_full_name": "Abhishek Chugh",
        "timestamp": 1600774675
    },
    {
        "content": "<p>There used to be an independent verifier, but I'm not sure if it is still compatible with the latest community version of Lean. It probably is.</p>",
        "id": 210857653,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1600774751
    },
    {
        "content": "<p>I see. Thanks Johan.</p>",
        "id": 210857708,
        "sender_full_name": "Abhishek Chugh",
        "timestamp": 1600774796
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"112680\">Johan Commelin</span> <a href=\"#narrow/stream/113489-new-members/topic/Abhishek.20Chugh/near/210857653\">said</a>:</p>\n<blockquote>\n<p>There used to be an independent verifier, but I'm not sure if it is still compatible with the latest community version of Lean. It probably is.</p>\n</blockquote>\n<p>It is (at least, <code>leanchecker</code> is). It runs every time you push anything to mathlib! <a href=\"https://github.com/leanprover-community/mathlib/blob/master/.github/workflows/build.yml#L139\">https://github.com/leanprover-community/mathlib/blob/master/.github/workflows/build.yml#L139</a></p>",
        "id": 210857786,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1600774834
    },
    {
        "content": "<p>The export format is explained <a href=\"https://github.com/leanprover-community/lean/blob/master/doc/export_format.md\">here</a></p>",
        "id": 210857837,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1600774882
    },
    {
        "content": "<p>Thanks Rob. I am intereseted in creating a graph of theorems/lemmas of all proofs in Lean. I am guessing it should be possible to get it from this format.</p>",
        "id": 210858007,
        "sender_full_name": "Abhishek Chugh",
        "timestamp": 1600774995
    },
    {
        "content": "<p>You're probably more interested in <code>leancrawler</code> then. <a href=\"https://github.com/leanprover-community/leancrawler\">https://github.com/leanprover-community/leancrawler</a></p>",
        "id": 210858190,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1600775122
    },
    {
        "content": "<p>I don't think the export format distinguishes definitions (in the sense of Lean's <code>def</code>) from lemmas, but otherwise it should have the information you need</p>",
        "id": 210858241,
        "sender_full_name": "Reid Barton",
        "timestamp": 1600775162
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> has some recent changes to <code>leancrawler</code>, or were those for <code>mathlibtools</code>?</p>",
        "id": 210858307,
        "sender_full_name": "Rob Lewis",
        "timestamp": 1600775192
    },
    {
        "content": "<p>But <code>leancrawler</code> will give you more information like def/lemma, position information, human-readable types</p>",
        "id": 210858345,
        "sender_full_name": "Reid Barton",
        "timestamp": 1600775223
    },
    {
        "content": "<p>Hmmm...<code>leancrawler</code> is what I need then. I want to make it available to the average mathematician - so information that aids human- readablity is important.</p>",
        "id": 210858492,
        "sender_full_name": "Abhishek Chugh",
        "timestamp": 1600775327
    },
    {
        "content": "<p>I have local changes to <code>leancrawler</code> on my home computer that I should try to push tonight. But I don't think this will help to \"generate computer verified and fully transparent proofs\".  Maybe you're asking two independent questions?</p>",
        "id": 210868441,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1600780900
    },
    {
        "content": "<p>May be, the goal is to generate something that a human can read/browse from a computer verified proof. Note that most probably it won't be really readable: many tactics generate unreadable proof trees.</p>",
        "id": 210948603,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1600822321
    },
    {
        "content": "<p>If you want to understand how the proof works, the original (most probably, tactic mode) proof is your friend.</p>",
        "id": 210948671,
        "sender_full_name": "Yury G. Kudryashov",
        "timestamp": 1600822365
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110031\">@Patrick Massot</span> <span class=\"user-mention\" data-user-id=\"214703\">@Yury G. Kudryashov</span>  sorry I missed your messages<br>\nI have also come to understand that the tactics are going to be far more readable than the fully unwrapped proofs - so I think it would be best to have all the lemmas along with the tactic-based proof shown to the user.</p>",
        "id": 211414934,
        "sender_full_name": "Abhishek Chugh",
        "timestamp": 1601210740
    }
]