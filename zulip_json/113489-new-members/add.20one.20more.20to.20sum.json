[
    {
        "content": "<p>Hi all, is there a tactic that just takes care of this? \\sum_{i&lt;n+1}a(i) = \\sum_{i&lt;n}a(i) + a(n)  Thanks!</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kn\">lemma</span> <span class=\"n\">sum_succ_is_add_last_term</span> <span class=\"o\">(</span><span class=\"n\">a</span><span class=\"o\">:</span><span class=\"bp\">ℕ→</span><span class=\"n\">α</span> <span class=\"o\">)(</span> <span class=\"n\">n</span><span class=\"o\">:</span><span class=\"bp\">ℕ</span> <span class=\"o\">):</span>\n<span class=\"o\">(</span><span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span> <span class=\"n\">a</span> <span class=\"bp\">=</span> <span class=\"n\">sum</span> <span class=\"o\">(</span><span class=\"n\">range</span> <span class=\"n\">n</span><span class=\"o\">)</span> <span class=\"n\">a</span> <span class=\"bp\">+</span> <span class=\"n\">a</span> <span class=\"o\">(</span><span class=\"n\">n</span><span class=\"bp\">+</span><span class=\"mi\">1</span><span class=\"o\">))</span>\n<span class=\"o\">:=</span>\n<span class=\"n\">sorry</span><span class=\"o\">,</span>\n</pre></div>",
        "id": 193616254,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1586551798
    },
    {
        "content": "<p><code>sum_range_succ</code></p>",
        "id": 193616345,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1586551850
    },
    {
        "content": "<p>He asked for a tactic. The answer is thus <code>library_search</code>.</p>",
        "id": 193616516,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586551977
    },
    {
        "content": "<p>Perfect, thanks! (What is library_search? Something where I could've found this on my own?)</p>",
        "id": 193616673,
        "sender_full_name": "Alex Kontorovich",
        "timestamp": 1586552078
    },
    {
        "content": "<p>Try replacing this <code>sorry,</code> by <code>by library_search</code>.</p>",
        "id": 193616718,
        "sender_full_name": "Patrick Massot",
        "timestamp": 1586552116
    },
    {
        "content": "<p>do you have to do anything special to make that work in the web viewer?</p>",
        "id": 193624947,
        "sender_full_name": "PV",
        "timestamp": 1586557481
    },
    {
        "content": "<p>you have to use <a href=\"https://leanprover-community.github.io/lean-web-editor/\" title=\"https://leanprover-community.github.io/lean-web-editor/\">the right web viewer</a>. The official Lean one has a very old mathlib. The one I link to has a bang up to date one, thanks to the amazing efforts of the leanprover-community people. Oh -- you also need to <code>import tactic</code>.</p>",
        "id": 193625180,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1586557695
    },
    {
        "content": "<p>ahh thanks.</p>",
        "id": 193626336,
        "sender_full_name": "PV",
        "timestamp": 1586558527
    },
    {
        "content": "<blockquote>\n<p>What is library_search? Something where I could've found this on my own?</p>\n</blockquote>\n<p><a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#library_search\" title=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#library_search\">Here it is in the mathlib tactic docs</a>. See also <a href=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#suggest\" title=\"https://leanprover-community.github.io/mathlib_docs/tactics.html#suggest\"><code>suggest</code></a>.</p>",
        "id": 193626860,
        "sender_full_name": "Bryan Gin-ge Chen",
        "timestamp": 1586558919
    }
]