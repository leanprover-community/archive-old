[
    {
        "content": "<p>Why is <code>unfreezeI</code> necessary in the following example? I'd expect <code>hX</code> not to be an instance, as I specified it as an argument (<code>(hX : nonempty X)</code>) not an instance (<code>[nonempty X]</code> or <code>[hX : nonempty X]</code>).</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">example</span> <span class=\"o\">(</span><span class=\"n\">hX</span> <span class=\"o\">:</span> <span class=\"n\">nonempty</span> <span class=\"n\">X</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hY</span> <span class=\"o\">:</span> <span class=\"bp\">#</span><span class=\"n\">Y</span> <span class=\"bp\">≤</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">:</span>\n  <span class=\"bp\">¬</span> <span class=\"bp\">∃</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"o\">:</span> <span class=\"n\">X</span> <span class=\"bp\">→</span> <span class=\"n\">Y</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">B</span> <span class=\"o\">:</span> <span class=\"n\">set</span> <span class=\"n\">Y</span><span class=\"o\">),</span> <span class=\"n\">f</span> <span class=\"err\">&#39;&#39;</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"bp\">⁻¹</span><span class=\"err\">&#39;</span> <span class=\"n\">B</span><span class=\"o\">)</span> <span class=\"err\">⊊</span> <span class=\"n\">B</span> <span class=\"o\">:=</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">rintros</span> <span class=\"bp\">⟨</span><span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"n\">A</span><span class=\"o\">,</span> <span class=\"n\">h₁</span><span class=\"o\">,</span> <span class=\"n\">h₂</span><span class=\"bp\">⟩</span><span class=\"o\">,</span>\n  <span class=\"n\">refine</span> <span class=\"n\">h₂</span> <span class=\"o\">(</span><span class=\"n\">le_antisymm</span> <span class=\"n\">h₁</span> <span class=\"bp\">_</span><span class=\"o\">),</span>\n  <span class=\"n\">intros</span> <span class=\"n\">y</span> <span class=\"n\">hy</span><span class=\"o\">,</span>\n  <span class=\"n\">rw</span> <span class=\"n\">cardinal</span><span class=\"bp\">.</span><span class=\"n\">le_one_iff_subsingleton</span> <span class=\"n\">at</span> <span class=\"n\">hY</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hY</span> <span class=\"k\">with</span> <span class=\"n\">hY</span><span class=\"o\">,</span>\n  <span class=\"n\">unfreezeI</span><span class=\"o\">,</span>\n  <span class=\"n\">cases</span> <span class=\"n\">hX</span> <span class=\"k\">with</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">use</span> <span class=\"n\">x</span><span class=\"o\">,</span>\n  <span class=\"n\">specialize</span> <span class=\"n\">hY</span> <span class=\"o\">(</span><span class=\"n\">f</span> <span class=\"n\">x</span><span class=\"o\">)</span> <span class=\"n\">y</span><span class=\"o\">,</span>\n  <span class=\"n\">simpa</span> <span class=\"o\">[</span><span class=\"n\">hY</span><span class=\"o\">]</span>\n<span class=\"kn\">end</span>\n</code></pre></div>",
        "id": 206951388,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1597424118
    },
    {
        "content": "<p>The binder type matters to your caller, not to you.</p>",
        "id": 206951574,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597424192
    },
    {
        "content": "<p>But the type of the lemma is still <code>nonempty ?m_1 → _</code>, so it doesn't seem that the argument would even be given as an instance by the user.</p>",
        "id": 206951889,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1597424343
    },
    {
        "content": "<p>It wouldn't, but what would happen at a hypothetical use site is not relevant to processing the definition itself.</p>",
        "id": 206955052,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597426075
    },
    {
        "content": "<p>The different binder types don't make a difference for the purpose of the definition. <code>hX</code> is treated as an instance because <code>nonempty</code> is a class.</p>",
        "id": 206955191,
        "sender_full_name": "Reid Barton",
        "timestamp": 1597426142
    },
    {
        "content": "<p>Weird behavior. I'd expect my definition to specify how <code>hX</code> is treated.</p>",
        "id": 206988460,
        "sender_full_name": "Pedro Minicz",
        "timestamp": 1597443574
    }
]