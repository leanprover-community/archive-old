[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"414458\">Vasily Ilin</span> has marked this topic as resolved.</p>",
        "id": 283007940,
        "sender_full_name": "Notification Bot",
        "timestamp": 1653004828
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"414458\">@Vasily Ilin</span>, are you planning on PR'ing something about hopf algebras soon? I would like the basics (i.e. that modules over a hopf algebra are a monoidal category) sometime.</p>",
        "id": 283311275,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1653309049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> , I doubt it. I'm just learning Lean, and jumping straight into Hopf algebras has proven difficult. My first goal was to show that an affine group scheme is represented by a Hopf algebra, and vice versa. I still haven't been able to do that</p>",
        "id": 283333022,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1653318678
    },
    {
        "content": "<p>There are various ways that one could state that theorem -- there are already design decisions involved there!</p>",
        "id": 283335014,
        "sender_full_name": "Kevin Buzzard",
        "timestamp": 1653319475
    },
    {
        "content": "<p>While I'm delighted that today someone new to Lean can be thinking of such a thing as a first project, it does sound ambitious! :-) I was just hoping for the definition of a hopf algebra to begin with! Do you have a particular (Lean) statement in mind?</p>",
        "id": 283375830,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1653339912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"110087\">@Scott Morrison</span> , see <a href=\"https://github.com/leomayer1/Hopf\">https://github.com/leomayer1/Hopf</a> for what we've got so far. We have the definition of a Hopf algebra, a proof that k[X] is a Hopf algebra and a definition of a comodule</p>",
        "id": 284053637,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1653595172
    },
    {
        "content": "<p>Okay! A few random comments:</p>\n<ol>\n<li>not essential, but the for a mathlib-ready approach we'd probably want to have hopf_algebra decomposed into a few layers, introducing coalgebras and bialgebras first.</li>\n<li>Your <code>affine_scheme</code> and <code>affine_group_scheme</code> should be structures, not groups</li>\n<li>Rather than beginning by constructing any examples of <code>affine_scheme</code>, you should prove the (almost tautological) equivalence with <code>(Algebra K)ᵒᵖ</code>.</li>\n<li>Presumably in our existing <a href=\"https://leanprover-community.github.io/mathlib_docs/find/algebraic_geometry.Scheme\">docs#algebraic_geometry.Scheme</a> machinery we already have enough glue so you can check that your <code>affine_scheme</code>s are <code>Scheme</code>s, and hopefully even <code>AffineScheme</code>s. (See <a href=\"https://leanprover-community.github.io/mathlib_docs/find/algebraic_geometry.AffineScheme\">docs#algebraic_geometry.AffineScheme</a>.Γ_is_equiv ?)</li>\n</ol>",
        "id": 284076960,
        "sender_full_name": "Scott Morrison",
        "timestamp": 1653609882
    },
    {
        "content": "<p>Thank you so much for taking the time and giving me advice! I greatly appreciate it!</p>",
        "id": 284094248,
        "sender_full_name": "Vasily Ilin",
        "timestamp": 1653630891
    }
]