[
    {
        "content": "<p>If I wanted to formalize the statement that <code>n x n</code> matrices over <code>‚Ñù</code> have multiplication defined, but <code>m x n</code> do not,  what would be the way to state that? That is, <code>n x n</code> matrices have a <code>has_mul</code> instance, but <code>m x n, m \\neq n</code> do not (at least, by default in mathlib).</p>",
        "id": 200970980,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1592280227
    },
    {
        "content": "<p>surely you can define a <code>has_mul</code> instance by just sending everything to <code>0</code></p>",
        "id": 200971027,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592280275
    },
    {
        "content": "<p>Of course. But at a particular point in a proof, if there are no matching instances in the instance cache, is there a way to state that in a non-error way?</p>",
        "id": 200971051,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1592280352
    },
    {
        "content": "<p>no. what are you trying to do? <a href=\"https://en.wikipedia.org/wiki/XY_problem\">#xy</a></p>",
        "id": 200971109,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592280395
    },
    {
        "content": "<p>Pretty much what I said. <code>m x n</code> matrices have addition and scalar multiplication defined. But only <code>n x n</code> matrices have multiplication also defined. I'm working on formalizing the statements in Gross's lectures. The statement at hand here is at <a href=\"https://youtu.be/EPQgeAz264g?list=PLA58AC5CABC1321A3&amp;t=414\">https://youtu.be/EPQgeAz264g?list=PLA58AC5CABC1321A3&amp;t=414</a> .</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"EPQgeAz264g\" href=\"https://youtu.be/EPQgeAz264g?list=PLA58AC5CABC1321A3&amp;t=414\"><img src=\"https://i.ytimg.com/vi/EPQgeAz264g/default.jpg\"></a></div>",
        "id": 200971346,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1592280684
    },
    {
        "content": "<p>So what is the statement like <code>m \\neq n -&gt; \\not has_mul matrix (fin m) (fin n) \\R</code>, given a particular instance cache?</p>",
        "id": 200971472,
        "sender_full_name": "Yakov Pechersky",
        "timestamp": 1592280803
    },
    {
        "content": "<p>there is no such thing.</p>",
        "id": 200971475,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592280814
    },
    {
        "content": "<p>this isn't a mathematical statement.</p>",
        "id": 200971480,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592280822
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308899\">@Yakov Pechersky</span> You could try to formalise \"there is no term of <code>ring (matrix (fin m) (fin n)</code> whose addition and zero are equal to the existing <code>has_add</code> and <code>has_zero</code>, unless <code>m = n</code>\"<br>\nBut I'll say upfront that I don't know if that statement is true.</p>",
        "id": 200978567,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592290138
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"112680\">@Johan Commelin</span> pointwise multiplication</p>",
        "id": 200978684,
        "sender_full_name": "Kenny Lau",
        "timestamp": 1592290316
    },
    {
        "content": "<p>Of course... silly me</p>",
        "id": 200978927,
        "sender_full_name": "Johan Commelin",
        "timestamp": 1592290625
    }
]